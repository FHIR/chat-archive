[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> In the IG build reports that show up in committers/notification, is it possible to include in the body of the notification the Git hash associated with the build?  That would tell us what we should be embedding in gForge to link the tracker items to the commit.</p>",
        "id": 160235641,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1551991314
    },
    {
        "content": "<p>you should get the git hash when you commit in the first place</p>",
        "id": 160248689,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1552001593
    },
    {
        "content": "<p>I get two - one for my local commit and one for my push and it's not obvious which is the one from the central repository.</p>",
        "id": 160249100,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1552001972
    },
    {
        "content": "<p>local commit is the actual changes.</p>",
        "id": 160249535,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1552002475
    },
    {
        "content": "<p>Hmm, this is possible, but aren't you tagging GF issues in the git commit message?</p>",
        "id": 160249537,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1552002476
    },
    {
        "content": "<p>And yes, your commit hash shouldn't be changing when you push...</p>",
        "id": 160249596,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1552002501
    },
    {
        "content": "<p>you get an extra one.</p>",
        "id": 160249602,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1552002510
    },
    {
        "content": "<p>can you walk me through this?</p>",
        "id": 160249652,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1552002588
    },
    {
        "content": "<p>I'm probably just missing something basic.</p>",
        "id": 160249658,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1552002594
    },
    {
        "content": "<p>ah no you only get the extra hash for the merge on the main build. AFAIK we're not using merging on any IGs</p>",
        "id": 160250599,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1552003580
    },
    {
        "content": "<p>you can see the double hashes on any commit logged in committers/notification under fhir / master but the IG build notifications don't include the single hash</p>",
        "id": 160250632,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1552003637
    },
    {
        "content": "<p>\"double hash\" meaning \"merge commit\", yes. But the initial commit is still a fine thing to reference from a GH issue.</p>",
        "id": 160250725,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1552003761
    },
    {
        "content": "<p>I'm just thinking that as far as GF issues/updates are concerned, you can do this all based on information you have locally at the time you make a commit. We can definitely include more in the notification messages; I just want to understand what problem it solves.</p>",
        "id": 160250809,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1552003820
    },
    {
        "content": "<p>Like, if you implement a fix to solve a GF issue, then push and your build fails...</p>",
        "id": 160250817,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1552003838
    },
    {
        "content": "<p>and then you make a tiny tweak to add a quotation mark or whatever, and then push, and then your build succeeds...</p>",
        "id": 160250833,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1552003860
    },
    {
        "content": "<p>You'd still want to link from a GF issue to the commit that actually solved the GF issue (I <em>think</em>).</p>",
        "id": 160250849,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1552003889
    },
    {
        "content": "<blockquote>\n<p>based on information you have locally at the time you make a commit</p>\n</blockquote>\n<p>which is what I said above. Occasionally, if I screw up a commit and add more, I register it on the task too if it's significant. But usually it's trivial and I don't bother</p>",
        "id": 160250905,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1552003929
    }
]