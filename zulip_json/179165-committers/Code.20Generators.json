[
    {
        "content": "<p>Just an FYI that I'm doing  a pre-run of the code generator for the .net client to ensure that there are no new surprises in there.</p>",
        "id": 153985148,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533948750
    },
    {
        "content": "<p>Yup, quite a few issues in here thanks to the changes, working through them now.</p>",
        "id": 153985153,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533950558
    },
    {
        "content": "<p>For properties that are deprectated (I'm looking at you OperationOutcome.issue.location) is there more than just the prefix in the short description to mark that in the StructureDefinition - considering adding the [Obsolete] attribute in the code generated so that developers are warned accordingly. And should this really be a developer warning vs hard error.</p>",
        "id": 153985156,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533951565
    },
    {
        "content": "<p>(and should I put the definition into the compiler warning, or is that co-incidental that its covering the reason why it was deprecated.)</p>",
        "id": 153985157,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533951630
    },
    {
        "content": "<p>Almost clear now,  have a couple of new issues that need to resolve in the generator (spec is fine)<br>\nFor string types we generate a native string property with the name of the fhir property, then a secondary property that is the FHIR datatype that has the name (property)\"Element\", so if there happens to be another property that has that name, there is a clash in the code generated. (easy enough to sort out).<br>\nThe new one that popped out is <code>OperationDefinition.referencedFrom</code> <code>source</code> and <code>sourceElement</code></p>",
        "id": 153985171,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533958931
    },
    {
        "content": "<p>Have come across a single issue in the spec <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <br>\nThe valueset <code>http://hl7.org/fhir/ValueSet/device-status</code> is not in the expansions.xml which is used by the Device resource.<br>\n(Will try again in-case it was a partial change coming through, but just a heads up)</p>",
        "id": 153985178,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533959302
    },
    {
        "content": "<p>I should populate the extension for the deprecated element. that would be </p>\n<div class=\"codehilite\"><pre><span></span>http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status\n</pre></div>",
        "id": 153985179,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533959421
    },
    {
        "content": "<p>let's change sourceElement. that's just messy cause the same issue occurs in lots of implementations</p>",
        "id": 153985180,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533959500
    },
    {
        "content": "<p>sourceId not sourceElement</p>",
        "id": 153985181,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533959515
    },
    {
        "content": "<p>I'll look at the expansion issue post freeze.</p>",
        "id": 153985182,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533959563
    },
    {
        "content": "<p>Have the a similar issue with the <code>Expression</code> metadatatype.<br>\nIt has a property called <code>expression</code>, that we uppercase the first letter making it have the same name as the type.<br>\nShould that really be <code>value</code> ?</p>",
        "id": 153985184,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533959710
    },
    {
        "content": "<p>I have less sympathy on this one.</p>",
        "id": 153985187,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533959836
    },
    {
        "content": "<p>but I'm open to discssion.... <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> do you have an opinion?</p>",
        "id": 153985188,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533959914
    },
    {
        "content": "<p>I'm not too stressed, I can add a rule around it, but thought at least a heads up to other generators</p>",
        "id": 153985189,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533960093
    },
    {
        "content": "<p>(And we already handled that case for resource types, just not datatypes, so copied across, no problem now)</p>",
        "id": 153985192,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533960507
    },
    {
        "content": "<p>So Code generation for the dotnet client is ok, with just the 2 issues remaining.</p>\n<ul>\n<li>device status expansion missing</li>\n<li>source and sourceElement in OperationDefinition<br>\nWill leave the generation alone till tomorrow morning now.</li>\n</ul>",
        "id": 153985197,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533960915
    },
    {
        "content": "<p>Sorry for the dealy, I don't feel too strongly about it, but I generally dislike <code>value</code> for an element that isn't the <code>value</code> element of a \"primitive\", it leads to constructs like <code>value.value</code>, which is pretty confusing.</p>",
        "id": 153985442,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1534020155
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> 7 hours left - are you good?</p>",
        "id": 153985466,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534041403
    },
    {
        "content": "<p>I have all substantive changes applied, yes</p>",
        "id": 153985467,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1534041634
    },
    {
        "content": "<p>In reviewing the output from the code generator, what should I be expecting to see for Age, Count, Duration and Distance?<br>\nAre they now full types, or profiles? I think its suggesting they aren't profiles anymore, but types, and just derived from Quantity, are there any others in this bucket that I should be concerned with?<br>\n(updating the code generator - again)</p>",
        "id": 153986750,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1534309334
    },
    {
        "content": "<p>Therefore the wire format will be valueAge etc when used.</p>",
        "id": 153986751,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1534309423
    },
    {
        "content": "<p>yes they are full types</p>",
        "id": 153986755,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534310515
    },
    {
        "content": "<p>So from a normative standpoint, the code generators should be all go to output the new formats?<br>\nI just tried generating and the Device status still isn't in the expansion.xml</p>",
        "id": 153987987,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1534468232
    },
    {
        "content": "<p>(before we close off the core spec)</p>",
        "id": 153987988,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1534468244
    },
    {
        "content": "<p>no I still haven't got to that</p>",
        "id": 153987993,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534469156
    },
    {
        "content": "<p>Is this the time where I ask again? (do I need to log a task for it?) Device Status in expansions.xml - or do I just check after the versioning and rebuilding exercise is done)</p>",
        "id": 153988921,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1534589193
    },
    {
        "content": "<p>Itâ€™s sorted now</p>",
        "id": 153988922,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534589325
    }
]