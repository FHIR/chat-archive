[
    {
        "content": "<p>New message under repeating elements<br>\n<code>This repeating element has no defined order</code><br>\nNot a fan of the extra text, should this be another icon in the flags column? (indicating the order is important)<br>\n(also, as an editor, how can we specify this importance?</p>",
        "id": 153872536,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1487397340
    },
    {
        "content": "<p>there's a new column 'Order Meaning'</p>",
        "id": 153872557,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487434628
    },
    {
        "content": "<p>see in HumanName and Address</p>",
        "id": 153872558,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487434636
    },
    {
        "content": "<p>I'm not of a fan either. But I'm not much of a fan of the underlying decision - if we don't assign an order an order in the spec you can't say anything about order in the profiles </p>",
        "id": 153872559,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487434669
    },
    {
        "content": "<p>I don't see why you can't at least advise what the order is/should be, even if you can't enforce it</p>",
        "id": 153872564,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487435005
    },
    {
        "content": "<p>it can't be a flag in the flag column because as soon as you give it a meaning, that's text. I did intend to give it some colour or something to help it stand out, but haven't got to that yet</p>",
        "id": 153872565,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487435044
    },
    {
        "content": "<p>Issue is that profiles can't change the meaning of an instance.  Asserting meaning to order of repetition would mean assigning meaning.  If repetitions aren't assigned a meaning in the core spec and you want meaning in your profile, then add an extension (e.g. \"priority number\" or \"last-changed-date\" or whatever you need to allow the order to be made explicit)</p>",
        "id": 153872671,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487534699
    },
    {
        "content": "<p>if the spec doesn't assign a meaning, I can still meaningfully say, 'well I provide the elements order x'</p>",
        "id": 153872688,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487535390
    },
    {
        "content": "<p>That's not assigning a *meaning* to the order. That's documenting your ordering practices.</p>",
        "id": 153872689,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1487535442
    },
    {
        "content": "<p>Defining a meaning would be \"when you see something in position 2, you should take it to be less important\"</p>",
        "id": 153872690,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1487535487
    },
    {
        "content": "<p>The line's really unclear to me though, between these.</p>",
        "id": 153872691,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1487535490
    },
    {
        "content": "<p>I think you're splitting hairs</p>",
        "id": 153872693,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487536171
    },
    {
        "content": "<p>Well, that was my point: I can't tell these apart!</p>",
        "id": 153872694,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1487536185
    },
    {
        "content": "<p>If we don't allow one, how could we allow the other?</p>",
        "id": 153872695,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1487536194
    },
    {
        "content": "<p>well, I'm saying that there's a reason to allow both</p>",
        "id": 153872696,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487536275
    },
    {
        "content": "<p>If you say \"I will provide elements in this order\" and the receiver is expected to interpret that as the meaning of the order, then they're being asked to extract meaning from the order that things appear in the spec.  And if someone else defines a differing ordering strategy, they suddenly need different interface code for each recipient.  Which would be a problem.  There's no reason for a sender to document what order they're going to put elements in unless they expect the receiver to pay attention.</p>",
        "id": 153872746,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487564180
    },
    {
        "content": "<p>you're once again falling into the trap of all or nothing</p>",
        "id": 153872750,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487568753
    },
    {
        "content": "<p>I think, the problem could be solved finally if we separate structure definition from profiling completely - separate concerns :)</p>",
        "id": 153872752,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1487568915
    },
    {
        "content": "<p>This will make structure definition single responsible, and open ability to make profiles more expressive  without coupling  with structure, just focusing on constraints and invariants dsl</p>",
        "id": 153872754,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1487569114
    },
    {
        "content": "<p>ups, wrong stream :( - excuse me</p>",
        "id": 153872755,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1487569250
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I don't understand the use-case for implementers to disclose the order in which they intend to express data that doesn't involve recipients paying attention to that knowledge.  And if there's an expectation for implementers to pay attention (and thus for profiles to convey semantics), I don't see how you can believe that doesn't break things.  I'm obviously missing something here, but I don't know what it is.</p>",
        "id": 153872757,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487570245
    }
]