[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> I expect that the answer is no, but the Main FHIR build is very choked up. I've been processing PRs - which no one has been doing. I have 20 something builds going on, and it's choked up the system - the builds are all waiting for a free agent. They've all passed, and I'm going to merge the PRs - another 20 builds, none of which I care about, and it'll probably take most of the day. And I have a long way to go yet, another 25 PRs to process </p>\n<p>is there any easy way to turn off builds on merge for a while?</p>",
        "id": 265246967,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639708373
    },
    {
        "content": "<p>no, it's way worse than I realised - each successful merge forces a rebuild on any other PR. I can't do anything in parallel - I'm going to be processing PRs for  days.</p>",
        "id": 265247834,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639709343
    },
    {
        "content": "<p>given that, I don't see how i can get a R5 snapshot out.</p>",
        "id": 265247840,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639709353
    },
    {
        "content": "<p>I suppose I can just ignore them and invalidate them all (I'm trying to merge them so I can do a sweeping change to the source)</p>",
        "id": 265247851,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639709381
    },
    {
        "content": "<p>I <em>think</em> should be able to just temporarily remove the 'fhir' project from Azure pipelines here: <a href=\"https://github.com/organizations/HL7/settings/installations/9677264\">https://github.com/organizations/HL7/settings/installations/9677264</a></p>",
        "id": 265251979,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1639714071
    },
    {
        "content": "<p>That means there won't be any use of Azure at all for a bit</p>",
        "id": 265252046,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1639714122
    },
    {
        "content": "<p>You might want to temporarily remove commit access from the FHIR commiters group when you do that.</p>",
        "id": 265252065,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1639714147
    },
    {
        "content": "<p>Then go crazy and merge, make the build work, then turn Azure back on again and grant permissions again.</p>",
        "id": 265252073,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1639714166
    },
    {
        "content": "<p>I am, however, someone who doesn't really understand how all this stuff works, so my proposal might be horrifyingly ill-advised :)</p>",
        "id": 265252082,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1639714191
    },
    {
        "content": "<p>You @mentioned me here but I'm not currently managing the build pipeline. Is that <span class=\"user-mention\" data-user-id=\"248736\">@Mark Iantorno</span> ?</p>",
        "id": 265252319,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1639714443
    },
    {
        "content": "<p>That said, I'm trying to follow along here . </p>\n<p>I'm not sure what \"builds on merge\" is -- where is that configured, or who configured it?</p>",
        "id": 265252453,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1639714609
    },
    {
        "content": "<p>I presume it's something similar to what you set up for me w/ JiraSpecArtifacts.  When there's a merge, previous pull requests must be updated (which generally just requires pushing a button) and then they re-build to see if they're valid to merge.  It's just that w/ JiraSpecArtifacts, that process takes about 30 seconds.  With FHIR core, it's closer to 40 minutes...</p>",
        "id": 265253356,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1639715849
    },
    {
        "content": "<p>you set it up in the first place, <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span></p>",
        "id": 265254738,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639717613
    },
    {
        "content": "<blockquote>\n<p>you set it up in the first place</p>\n</blockquote>\n<p>I did, but it has since been migrated entirely from that original setup. In particular the \"build on merge\" is not ringing any bells, and I don't think I have access to the Pipelines accounts to review settings.</p>",
        "id": 265303516,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1639751951
    },
    {
        "content": "<blockquote>\n<p>there's a merge, previous pull requests must be updated (which generally just requires pushing a button) </p>\n</blockquote>\n<p>That's different! That's just a rule saying branches need to be current in github before they can be merged. Nothing automatically triggers every PR to build with every commit.</p>",
        "id": 265303706,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1639752028
    },
    {
        "content": "<p>From what Grahame was describing above, it sounds like a cascade of O(n^2) <em>automated builds were being triggered</em> on the path to completion (all unmerged PRs building every time any one PR is merged, meaning N + (N-1) + (N-2) + ...). when a controlled merging process would let you Merge PR1 into main, Merge main into PR2, Merge PR2 into main, Merge main into  PR3, Merge PR3 to main... which is O(n) work.</p>\n<p>Let me know if I misunderstood.</p>",
        "id": 265303813,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1639752094
    },
    {
        "content": "<p>If nothing automated is happening and you just want to merge stuff, the <em>most controlled</em> process would be to locally do...</p>\n<ul>\n<li>make a <code>merging-cxn-2022-21</code> branch</li>\n<li>merge all desired PR branches into it (using merge commits, i.e. <code>git merge Composition-Change-11-18-2021</code> and so on...</li>\n<li>test and build locally</li>\n<li>push to GH, and merge this big honking branch to get all the changes into master</li>\n</ul>\n<p>At that point, I think all the open PRs will notice they've been merged and disappear (otherwise we can just close 'em).</p>",
        "id": 265304512,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1639752422
    },
    {
        "content": "<p>That said, just to be complete: on the github configuration side, the reason this appears:</p>\n<p><a href=\"/user_uploads/10155/YJP_CUhDKIA4G0ITwLVf_f5V/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/YJP_CUhDKIA4G0ITwLVf_f5V/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/YJP_CUhDKIA4G0ITwLVf_f5V/image.png\"></a></div><p>is that <a href=\"https://github.com/HL7/fhir/settings/branch_protection_rules/2277268\">https://github.com/HL7/fhir/settings/branch_protection_rules/2277268</a> is configured like:</p>\n<p><a href=\"/user_uploads/10155/y0k2x3GHzVV4uBII3761UtWO/image.png\">image.png</a> }</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/y0k2x3GHzVV4uBII3761UtWO/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/y0k2x3GHzVV4uBII3761UtWO/image.png\"></a></div><p>Of course this could be turned off, but the approach I described above sounds more likely to avoid broken builds and confusion.</p>",
        "id": 265304759,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1639752523
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> let me know if you need someone to consolidate the PRs into a single merge - I can probably do it by 3 pm US Eastern time.</p>",
        "id": 265310313,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1639754826
    },
    {
        "content": "<p>thanks but I'll try myself</p>",
        "id": 265339219,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639765588
    },
    {
        "content": "<p>so say I'd like to merge this PR locally: <a href=\"https://github.com/HL7/fhir/pull/1080\">https://github.com/HL7/fhir/pull/1080</a></p>",
        "id": 265340078,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639765963
    },
    {
        "content": "<p>I think this looks like a good recipe: <a href=\"https://stackoverflow.com/questions/21353656/merge-git-repo-into-branch-of-another-repo/21353836\">https://stackoverflow.com/questions/21353656/merge-git-repo-into-branch-of-another-repo/21353836</a></p>",
        "id": 265340113,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639765984
    },
    {
        "content": "<p>so I do git </p>\n<div class=\"codehilite\"><pre><span></span><code>checkout -b gg-202112-multi-merge\ngit remote add ward git@github.com:wardweistra/fhir.git\ngit remote update\n</code></pre></div>\n<p>And I get: </p>\n<div class=\"codehilite\"><pre><span></span><code>Fetching origin\nFetching ward\ngit@github.com: Permission denied (publickey).\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.\nerror: Could not fetch ward\n</code></pre></div>\n<p>Did I do something wrong?</p>",
        "id": 265340269,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639766058
    },
    {
        "content": "<p>Are you usually working with SSH-based or https-based remotes? The above worked for me. Did you try  <code>git remote add ward https://github.com/wardweistra/fhir.git</code>?</p>",
        "id": 265343744,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1639767673
    },
    {
        "content": "<blockquote>\n<p>Are you usually working with SSH-based or https-based remotes? The above worked for me.</p>\n</blockquote>\n<p>I have no idea what that means</p>",
        "id": 265343796,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639767699
    },
    {
        "content": "<blockquote>\n<p>Did you try git remote add ward <a href=\"https://github.com/wardweistra/fhir.git\">https://github.com/wardweistra/fhir.git</a></p>\n</blockquote>\n<p>yes that does work</p>",
        "id": 265343815,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639767708
    },
    {
        "content": "<p>Excellent.</p>",
        "id": 265343976,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1639767763
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179165-committers/topic/FHIR.20Build.20choked.20up/near/265343796\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Are you usually working with SSH-based or https-based remotes? The above worked for me.</p>\n</blockquote>\n<p>I have no idea what that means</p>\n</blockquote>\n<p>It is the difference between this:<br>\n<a href=\"/user_uploads/10155/cerkYydjpzlFZvEay1hSpxM2/github_clone_ssh.png\">github_clone_ssh.png</a> <br>\nand this:<br>\n<a href=\"/user_uploads/10155/ZOIY8lHvjJsC5CPo5GuFCONF/github_clone_https.png\">github_clone_https.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/cerkYydjpzlFZvEay1hSpxM2/github_clone_ssh.png\" title=\"github_clone_ssh.png\"><img src=\"/user_uploads/10155/cerkYydjpzlFZvEay1hSpxM2/github_clone_ssh.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/10155/ZOIY8lHvjJsC5CPo5GuFCONF/github_clone_https.png\" title=\"github_clone_https.png\"><img src=\"/user_uploads/10155/ZOIY8lHvjJsC5CPo5GuFCONF/github_clone_https.png\"></a></div><p>WIth SSH, you upload your SSH public key to github, and won't have to worry about passwords.</p>",
        "id": 265344902,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1639768164
    },
    {
        "content": "<p>well, I haven't done the public key thing, so I guess I don't want to do that</p>",
        "id": 265345365,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639768393
    },
    {
        "content": "<p>Cool, so if you do <code>git remote -v</code> you should see origin URLs for your remotes with <code>https://</code>.</p>",
        "id": 265346723,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1639769083
    },
    {
        "content": "<p>BTW -- if you just want to merge a PR locally, GitHub actually provides instructions on how to do this within each PR (as long as it is in a mergeable state).  To the far right of the merge button, you should see a tiny link that says \"command line instructions\". Click that and it expands a view with instructions on how to do it locally.</p>\n<p>Here's a screenshot of the instructions I see for merging a SUSHI PR from our friend Jose:<br>\n<a href=\"/user_uploads/10155/vsqWKEkeV06XfFDrYFO8FSNN/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/vsqWKEkeV06XfFDrYFO8FSNN/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/vsqWKEkeV06XfFDrYFO8FSNN/image.png\"></a></div><p><em>NOTE: The first bit of the instructions is for testing locally on a different branch.  The last bit of the instructions is for merging it to your local master branch and pushing it to the remote (which you should only do when you're ready).  It will close the PR.</em></p>",
        "id": 265350910,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1639770309
    },
    {
        "content": "<p>right. I usually do that. but this triggers the github actions, which is what I'm trying to avoid in this case</p>",
        "id": 265351468,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639770538
    },
    {
        "content": "<p>Just skip the \"push\" step, and repeat for each PR you want... and <em>then</em> push</p>",
        "id": 265351514,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1639770565
    },
    {
        "content": "<p>though also, command line instructions usually end up leaving whoever follows them in an unrecoverable mess</p>",
        "id": 265351526,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639770573
    },
    {
        "content": "<p>Ha.  Yeah, if you merge something into your local master and then decide you need to back it out, sometimes that can be a little messy if you don't do it exactly right.</p>",
        "id": 265351770,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1639770679
    },
    {
        "content": "<p><a href=\"https://github.com/HL7/fhir/pull/1555\">https://github.com/HL7/fhir/pull/1555</a></p>",
        "id": 265356120,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639772808
    },
    {
        "content": "<p>now I just have to get it to build.</p>",
        "id": 265356126,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639772815
    },
    {
        "content": "<p>It passes locally??</p>",
        "id": 265356967,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1639773284
    },
    {
        "content": "<p>oh yes I just need to get a new set of code out so it can build on github, and that requires sonatype to work - we're having pipeline problems</p>",
        "id": 265357732,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639773761
    },
    {
        "content": "<p>all sorted - thanks for the help.</p>",
        "id": 265548165,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639998085
    },
    {
        "content": "<p>and published too</p>",
        "id": 265548168,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639998087
    }
]