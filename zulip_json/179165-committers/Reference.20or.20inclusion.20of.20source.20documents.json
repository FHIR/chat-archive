[
    {
        "content": "<p>Continued from <a href=\"#narrow/stream/179297-committers.2Fnotification/topic/Reference.20or.20Inclusion.20of.20Source.20Documents\">https://chat.fhir.org/#narrow/stream/179297-committers.2Fnotification/topic/Reference.20or.20Inclusion.20of.20Source.20Documents</a></p>",
        "id": 197882386,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1589768075
    },
    {
        "content": "<p>Any document where an immutable reference is required from an IG should be included in the IG itself.</p>",
        "id": 197882445,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589768169
    },
    {
        "content": "<p>A source document is the same as any other binary, such as a graphic.  The IGPublisher expects those to be posted in an input folder designated with path-pages.  Using the standard HL7 template, the appropriate folder is source/images.  Any content that's there gets copied directly into the output without further processing.</p>",
        "id": 197882451,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1589768201
    },
    {
        "content": "<p>unless it's a common type - e.g. pdf - it should be zipped up (reason is because the HL7 server (<a href=\"http://hl7.org\">hl7.org</a>, as opposed to <a href=\"http://build.fhir.org\">build.fhir.org</a>) only servers files for which it knows the mime types, and I don't want a maintenance hassle).</p>",
        "id": 197882460,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589768248
    },
    {
        "content": "<p>The issue is that Trifolia wasn't set up to handle source files that aren't resources - and that aren't explicitly referenced by the ImplementationGuide.  That's why they tried the \"include the binary in the href) as a workaround.</p>",
        "id": 197882462,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1589768256
    },
    {
        "content": "<p>I would think that source/images is not the best name for this kind of content</p>",
        "id": 197882463,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589768272
    },
    {
        "content": "<p>but yes, it primarily sounds like a Trifolia issue</p>",
        "id": 197882500,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589768286
    },
    {
        "content": "<p>images is what the most common content is</p>",
        "id": 197882502,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1589768290
    },
    {
        "content": "<p>I presume that .xls or at least .xlsx is a recognized file format?  (It must be given that the publisher itself spits out .xlsx files...)</p>",
        "id": 197882515,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1589768357
    },
    {
        "content": "<p>yes xlsx is</p>",
        "id": 197888776,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589777200
    },
    {
        "content": "<p>Looks like this one will be done with sushi, so inclusion of documents directly in the IG isn't a challenge.<br>\nI think the files in question are all PDFs.</p>",
        "id": 197944691,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1589813131
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"215604\">@Saul Kravitz</span> In our case, the file in question is not a pdf. It is an .xslx, so based on what Grahame and Lloyd confirmed, we should be able to do this without errors.  I would just mention that .xslx would be a key use case because a data file with many columns can't easily be turned into a pdf.  This is a case where it is very useful to offer the .xlsx as a downloadable sheet from within the IG.</p>\n<p><span class=\"user-mention\" data-user-id=\"240020\">@Cheng Liu</span> Please note the proposed solution so we can confirm if this works for our IG.</p>",
        "id": 198101804,
        "sender_full_name": "Lisa Nelson",
        "timestamp": 1589910009
    },
    {
        "content": "<p>including the xlsx file in the IG publisher image directory, and referencing it from the narrative leads to the desired result -- the xlsx file is included in the IG, and can be downloaded via a browser<br>\n<a href=\"/user_uploads/10155/LWBr-WcspFJsfU54x9_jVzgA/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/LWBr-WcspFJsfU54x9_jVzgA/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/LWBr-WcspFJsfU54x9_jVzgA/image.png\"></a></div>",
        "id": 198125335,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1589921761
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"215604\">@Saul Kravitz</span> I imported an .xlsx file and follow the format described in this page: <a href=\"https://trifolia-fhir-dev.lantanagroup.com/help/Import.html\">https://trifolia-fhir-dev.lantanagroup.com/help/Import.html</a>.<br>\nHowever, the imported xlsx file was converted to a valueset in Trifolia. How do I make the xlsx file downloadable? Thank you</p>",
        "id": 198915644,
        "sender_full_name": "Cheng Liu",
        "timestamp": 1590596316
    },
    {
        "content": "<p>Can't speak to trifolia.<br>\nIn the sushi/IG-publisher process, simply including the xlsx in the ig-data/input/images directory will cause it to be included in the IG.   Then reference it from the narrative pages with an &lt;href&gt;.</p>",
        "id": 198917548,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1590597195
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"215604\">@Saul Kravitz</span> Got it. Thank you.<br>\n<span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span> Could you help us to figure it out? Is there some way in Trifolia to import an .xlsx file and make it downloadable?</p>",
        "id": 198919631,
        "sender_full_name": "Cheng Liu",
        "timestamp": 1590598185
    },
    {
        "content": "<p>this isn't currently possible in ToF. I will add it to the backlog of things needing to be done, though. I'll let you know when I know more.</p>",
        "id": 198927637,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1590602034
    },
    {
        "content": "<p>of course, having said that, you can always put the xlsx file in your GitHub repository, and the CI build should respect that it's there. ToF's GitHub export can be configured to ignore files in GitHub that don't exist in the ToF IG, so that it doesn't delete it.</p>",
        "id": 198927785,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1590602101
    }
]