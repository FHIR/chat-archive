[
    {
        "content": "<p>I'm looking at the RequestGroup mapping to Request, and one of the things we need is to be able to say this RequestGroup \"instantiates\" that PlanDefinition. But the Request pattern only has instantiatesCanonical and instantiatesUri, why not instantiatesReference?</p>",
        "id": 153942166,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1520217497
    },
    {
        "content": "<p>Because RequestGroup is basedOn Request</p>",
        "id": 153942171,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1520219862
    },
    {
        "content": "<p>instantiates points to definitions, basedOn points to requests</p>",
        "id": 153942172,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1520219877
    },
    {
        "content": "<p>Right, but that's what I want to point to, a Definition (PlanDefinition specifically).</p>",
        "id": 153942177,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1520220829
    },
    {
        "content": "<p>Oh, sorry.  Misread.  When you point to PlanDefinition, you'll use canonical(PlanDefinition).  We don't use Reference for anything that has a canonical URL anymore.</p>",
        "id": 153942207,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1520223611
    },
    {
        "content": "<p>Huh.</p>",
        "id": 153942212,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1520224548
    },
    {
        "content": "<p>So, I should probably be changing all the knowledge resources to do that.</p>",
        "id": 153942213,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1520224655
    },
    {
        "content": "<p>So the canonical type supports the notion of pointing to a specific type? Can I say canonical(PlanDefinition | ActivityDefinition)?</p>",
        "id": 153942214,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1520224758
    },
    {
        "content": "<p>yes</p>",
        "id": 153942219,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1520225247
    },
    {
        "content": "<p>And you can enforce whether canonical references must be contained or bundled</p>",
        "id": 153942220,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1520225283
    },
    {
        "content": "<p>Okay, not sure there's enough time before the freeze to get that in...</p>",
        "id": 153942224,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1520225807
    },
    {
        "content": "<p>Shouldn't Definition.partOf and Definition.replaces be canonical then too?</p>",
        "id": 153942245,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1520227619
    },
    {
        "content": "<p>definition.url should definitely use the word 'canonical' in it</p>",
        "id": 153942247,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1520227689
    },
    {
        "content": "<p>Right now it says \"Logical URI to reference this {{title}}\", how about \"Canonical identifier to reference this {{title}}, represented as a URI\"</p>",
        "id": 153942252,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1520227844
    },
    {
        "content": "<p>yes</p>",
        "id": 153942264,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1520228228
    },
    {
        "content": "<p>And same change to MetadataResource, right?</p>",
        "id": 153942268,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1520228480
    },
    {
        "content": "<p>sure yes</p>",
        "id": 153942271,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1520228524
    },
    {
        "content": "<p>I'll fix Definition</p>",
        "id": 153942272,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1520228628
    },
    {
        "content": "<p>(y)</p>",
        "id": 153942273,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1520228638
    }
]