[
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13065\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13065\">GF#13065</a> proposes the creation of isModifierReason  - and that it be mandatory when isModifier is true... yay. <span class=\"user-mention\" data-user-id=\"191407\">@Rick Geimer</span> and <span class=\"user-mention\" data-user-id=\"191370\">@Richard Ettema</span> you have your names on this one - did the committee discuss how that field would get to be populated?</p>",
        "id": 153925103,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513232207
    },
    {
        "content": "<p>and if co-occurs with isModifier... why not get rid of isModifier? <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span></p>",
        "id": 153925104,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513232366
    },
    {
        "content": "<p>Agree getting rid of isModifierReason would make sense.  I guess we'd change the spreadsheet column from Y/N to a string</p>",
        "id": 153925207,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513266797
    },
    {
        "content": "<p>Probably a bit late to do before this ballot...</p>",
        "id": 153925208,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513266848
    },
    {
        "content": "<p>Note Grahame that you were the submitter :)</p>",
        "id": 153925209,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513266862
    },
    {
        "content": "<p>I'm looking at this now in my local build environment. Added isModifierReason with corresponding invariant and just finished a build. No errors.</p>",
        "id": 153925214,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513267290
    },
    {
        "content": "<p>If isModifier is instead changed to string, that would mean the value would already be populated with 'true'.</p>",
        "id": 153925217,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513267452
    },
    {
        "content": "<p>what would the string be for say a status?....</p>",
        "id": 153925218,
        "sender_full_name": "Eric Haas",
        "timestamp": 1513267531
    },
    {
        "content": "<p>From a tooling perspective wouldn't it make more sense to leave the isModifier boolean?  Note, from my last build it's pretty obvious which StructureDefinitions need to have the isModifierReason populated.</p>",
        "id": 153925219,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513267562
    },
    {
        "content": "<p>Or a set of codeableConcepts so every editor is not making up stuff  like \"its a status!\"</p>",
        "id": 153925220,
        "sender_full_name": "Eric Haas",
        "timestamp": 1513267689
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> I guess it depends on the data type of the status; e.g. code, string, Coding, etc.</p>",
        "id": 153925221,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513267690
    },
    {
        "content": "<p>or \"this is a game changer.\"</p>",
        "id": 153925222,
        "sender_full_name": "Eric Haas",
        "timestamp": 1513267732
    },
    {
        "content": "<p>If we follow the gForge ticket (which I am by the way), it would not be a game changer.  The tooling would continue to work and we would just need to populate the new isModifierReason description element.</p>",
        "id": 153925223,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513267807
    },
    {
        "content": "<p>sorry that was meant to be an example for the text in <code>isModifierReason</code>  :-)</p>",
        "id": 153925227,
        "sender_full_name": "Eric Haas",
        "timestamp": 1513269091
    },
    {
        "content": "<p>;-)</p>",
        "id": 153925230,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513269618
    },
    {
        "content": "<p>status would say \"enteredInError changes the interpretation of the entire resource\"</p>",
        "id": 153925231,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513269724
    },
    {
        "content": "<p>My point is that is what you would write.  I would write \"the status could be a game changer\"  so codeable  with extensible binding makes more sense to me .   And keeping it boolean makes the most sense to me.</p>",
        "id": 153925233,
        "sender_full_name": "Eric Haas",
        "timestamp": 1513269840
    },
    {
        "content": "<p>The intention is for the string to explain <em>why</em> it's a game-changer.  Most of the statuses <em>aren't</em> actually modifiers.  It's generally only entered-in-error.  The purpose of the string is to identify what actually modifies the interpretation of the resource/containing element and how.  That provides more guidance to implementers about when/whether they can safely ignore the modifier.</p>",
        "id": 153925238,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513270378
    },
    {
        "content": "<p>The agreement to capture the reason has already been approved - what we're discussing now is how to implement that.</p>",
        "id": 153925239,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513270411
    },
    {
        "content": "<p>But the proposal was to remove th@**Lloyd McKenzie</p>\n<p>\". why not get rid of isModifier? @Lloyd McKenzie\"</p>",
        "id": 153925240,
        "sender_full_name": "Eric Haas",
        "timestamp": 1513270424
    },
    {
        "content": "<p>I think just having the reason is not a good idea</p>",
        "id": 153925242,
        "sender_full_name": "Eric Haas",
        "timestamp": 1513270506
    },
    {
        "content": "<p>If a reason is present, it's a modifier.  If there's no reason, it's not a modifier.  The boolean is sort of redundant if the reason is mandatory for modifiers.</p>",
        "id": 153925245,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513270650
    },
    {
        "content": "<p>OK back to point 1)  The reasons for the same thing  (e.g., status)  will be all over the place for core committers if left to our own devices.  Hence a needed for a  valueset of canned reasons.</p>",
        "id": 153925247,
        "sender_full_name": "Eric Haas",
        "timestamp": 1513270762
    },
    {
        "content": "<p>I don't know that we need a value set.  However, a couple of canned phrases for the modifiers that are common should work - which can probably come from the resource patterns</p>",
        "id": 153925252,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513272551
    },
    {
        "content": "<p>Ok. I guess what I'm hearing from this thread is</p>\n<ul>\n<li>Lloyd is recommending we do not add a new element (isModifierReason) and change the current isModifier element to string. Not sure what impact this will have on the tooling.</li>\n<li>Eric (and I) like the idea of keeping isModifier as a boolean. The new element isModifierReason would become a CodeableConcept which allows for a text description w/o any specific codes; however, we would need to define an appropriate set of recommended codes.</li>\n<li>From my perspective both of these violate the approved direction as given in the gForge ticket <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13065\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13065\">GF#13065</a>. At this point I would recommend that we either agree to the appoved direction, or throw this ticket back to a status of 'Triaged' with appropriate comments taken from this chat thread.<br>\nThoughts?</li>\n</ul>",
        "id": 153925254,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513273184
    },
    {
        "content": "<p>I think it needs more time too</p>",
        "id": 153925255,
        "sender_full_name": "Eric Haas",
        "timestamp": 1513273473
    },
    {
        "content": "<p>I'm not understanding the rationale for retaining a boolean.  And I'm not really understanding the rationale for a code system whose sole purpose is to get consistency across resources when we already have other mechanisms to do that.  (And technically it's Grahame whose proposing getting rid of the boolean - I just concurred that it was reasonable :))</p>",
        "id": 153925257,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513273890
    },
    {
        "content": "<p>I think the point is that  what is in the tracker is not what is being proposed so need some clarity</p>",
        "id": 153925259,
        "sender_full_name": "Eric Haas",
        "timestamp": 1513273997
    },
    {
        "content": "<p>Agreed. Based on Grahame's original comment and the discussion we have just had, it would seem that the current opinion on how to implement this change is not in agreement with the approved direction. So, I would recommend we add this discussion thread to the gForge ticket and bring it back up for review.</p>",
        "id": 153925261,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513274284
    },
    {
        "content": "<p>If we are not going to implement it per the tracker, I think we should reopen that tracker and defer, because I would not like to see a potentially breaking change this close to the ballot.</p>",
        "id": 153925262,
        "sender_full_name": "Rick Geimer",
        "timestamp": 1513274365
    },
    {
        "content": "<p>This is a change we need to make for R4.  It's not a change we can make before this Sunday, but it's absolutely a change we need to make before April, so deferring isn't really an option.</p>",
        "id": 153925266,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513276401
    },
    {
        "content": "<p>I don't think is an issue for April</p>",
        "id": 153925268,
        "sender_full_name": "Eric Haas",
        "timestamp": 1513277870
    },
    {
        "content": "<p>depends what you think deferring is.</p>",
        "id": 153925290,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513283091
    },
    {
        "content": "<p>to be clear, we do not need a codeable concept to impose consistency. we have lots of ways to do that</p>",
        "id": 153925292,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513283108
    },
    {
        "content": "<p>but there's no impact to process between adding isModifierReason, or changing isModifier to a string. for the build tools, it makes no difference to workload</p>",
        "id": 153925294,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513283156
    },
    {
        "content": "<p>deferred = after the for comment ballot -  I think is unsettled for immediate application</p>",
        "id": 153925297,
        "sender_full_name": "Eric Haas",
        "timestamp": 1513283383
    },
    {
        "content": "<p>FYI - I've successfully implemented this change (locally) per the gForge ticket. I reviewed all of the StructureDefinition instances generated by the build - either explicitly defined as an XML StructureDefinition instance or as an Excel spreadsheet - and found close to 1,200 instances of ElementDefinitions with isModifier=true. In order for the new invariant \"if the element is a modifier, there must be a reason description\" to be satisfied, the new isModifierReason element will need to be populated for these ElementDefinitions.</p>",
        "id": 153925302,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513283942
    },
    {
        "content": "<p>the master source is a little less than 1200: <a href=\"http://build.fhir.org/conformance-rules.html#isModifier\" target=\"_blank\" title=\"http://build.fhir.org/conformance-rules.html#isModifier\">http://build.fhir.org/conformance-rules.html#isModifier</a></p>",
        "id": 153925303,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513284094
    },
    {
        "content": "<p>but we have to go through and actually describe the reason for all those elements</p>",
        "id": 153925304,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513284116
    },
    {
        "content": "<p>I've noticed that the element comments in the spreadsheets are typically filled in for these and appear to define the 'reason' for isModifier=true. That might be good place to start.</p>",
        "id": 153925310,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513284309
    },
    {
        "content": "<p>sure, it's just work. There's no magic here</p>",
        "id": 153925312,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513284355
    },
    {
        "content": "<p>So, where do we/I go from here?  Do you want this change committed before the ballot deadline or should this wait until after?</p>",
        "id": 153925316,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513284537
    },
    {
        "content": "<p>what's 'this change'? speciifcally - with regard to my first questions?</p>",
        "id": 153925317,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513284627
    },
    {
        "content": "<p>The change per the gForge ticket - add 'isModifierReason 0..1 string' with new invariant to require isModifierReason if isModifier = true</p>",
        "id": 153925320,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513284732
    },
    {
        "content": "<p>so how did you populate isModifierReason?</p>",
        "id": 153925339,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513285619
    },
    {
        "content": "<p>I didn't.  The build was successful without doing that.  Apparently the build process does not validate the generated StructureDefinitions.</p>",
        "id": 153925341,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513285888
    },
    {
        "content": "<p>I believe it does. you might have missed something - what's your expression for the co-occurence constraint?</p>",
        "id": 153925342,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513285926
    },
    {
        "content": "<p>(isModifier.toString() = 'false') or isModifierReason.exists()</p>",
        "id": 153925343,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513285976
    },
    {
        "content": "<p>that looks right. though isModifier.not() would be cleaner</p>",
        "id": 153925347,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513286456
    },
    {
        "content": "<p>I think I know why. I have to copy to new generated Java classes from build/temp/java to the build/implementations/java folder, right?</p>",
        "id": 153925348,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513286656
    },
    {
        "content": "<p>no</p>",
        "id": 153925349,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513286858
    },
    {
        "content": "<p><em>don't do that</em></p>",
        "id": 153925350,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513286865
    },
    {
        "content": "<p>Ok.  I found the code in Publisher.java where its validating the generated profiles, so I don't quite understand how my build is successful.</p>",
        "id": 153925351,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513286940
    },
    {
        "content": "<p>Nevermind, I just examined the ProfileValidator.validate() method and it's only checking extensions, snapshot exists and the FHIRPath expressions are valid.  It doesn't look like the ValidationEngine is being called for the generated profiles.</p>",
        "id": 153925352,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513287328
    },
    {
        "content": "<p>now I realise that this is also a change that requires community consultation</p>",
        "id": 153925360,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513292013
    },
    {
        "content": "<p>A \"status\" of deferred means deferred until after the next publication.   So we don't want to change the status.</p>",
        "id": 153925368,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513293830
    },
    {
        "content": "<p>For the community consultation ones on candidate normative artifacts, do we want to include notes to balloters?</p>",
        "id": 153925374,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513295761
    },
    {
        "content": "<p>some of the changes represent several days of work for me. I'm not making them before consultation</p>",
        "id": 153925388,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513297013
    },
    {
        "content": "<p>but given that they won't make the draft for comment anyway, I'm going to wait to till the ballot opens and then do community consultation while it's open. there's 7 tasks at this point</p>",
        "id": 153925390,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513297116
    },
    {
        "content": "<p>I wasn't suggesting applying them - just including a note in the ballot intro that draws attention to the proposed changes.</p>",
        "id": 153925391,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513297224
    },
    {
        "content": "<p>well, we can do that</p>",
        "id": 153925393,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513297463
    },
    {
        "content": "<p>so I never got back to this - sorry - not sure what to do with it</p>",
        "id": 153925893,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513597274
    },
    {
        "content": "<p>FYI - I did get this working in my local build where I updated the ProfileGenerator logic to write the ElementDefinition.comment value to the new isModifierReason element; and where comment is empty, write the following string --&gt; ElementDefinition.path + \"  changes the interpretation of the entire resource\".<br>\nThoughts?</p>",
        "id": 153925939,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513607111
    },
    {
        "content": "<p>I don't see the point of creating ti, and then generating an abstract comment that brings no incision</p>",
        "id": 153925990,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513620960
    },
    {
        "content": "<p>Ok. Lloyd has updated the tracker's Group to \"Community Consultation\". So, I guess that means it's back up for review/discussion by FHIR-I</p>",
        "id": 153925997,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513621884
    },
    {
        "content": "<p>Wasn't me...</p>",
        "id": 153926002,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513622593
    },
    {
        "content": "<p>Sorry.  It was Grahame.</p>",
        "id": 153926005,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1513622813
    }
]