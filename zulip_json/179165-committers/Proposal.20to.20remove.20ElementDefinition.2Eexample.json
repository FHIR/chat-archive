[
    {
        "content": "<p>Discussion about <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12057\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12057\">GF#12057</a> led to FHIR-I proposing to remove ElementDefinition.example[x] on the grounds that it is a not very useful element, and must useful provision of examples is in full resource examples. </p>",
        "id": 153854005,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477339263
    },
    {
        "content": "<p>in the content available to me, we have used ElementDefinition.example 24 times - in Identifier, Address, HumanName, and ImagingStudy, and 38 times in the Argonaut Provider Directory profile. In those cases, it seems to us that removing this element would not be a noticeable loss for implementers</p>",
        "id": 153854006,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477339391
    },
    {
        "content": "<p>IG authors, if any of you believe that it's a mistake to remove ElementDefinition.example, please say so. <span class=\"user-mention\" data-user-id=\"191387\">@Keith Boone</span> <span class=\"user-mention\" data-user-id=\"191410\">@Brett Marquard</span> <span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> <span class=\"user-mention\" data-user-id=\"191407\">@Rick Geimer</span> <span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span> <span class=\"user-mention\" data-user-id=\"195650\">@Reuben Daniels</span> <span class=\"user-mention\" data-user-id=\"191366\">@Stephen Royce</span> <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> </p>",
        "id": 153854010,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477339901
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span> please think about this too</p>",
        "id": 153854014,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477340616
    },
    {
        "content": "<p>The Template ITS allows for multiple examples with a caption that explains what it is, and a type (valid | error | neutral) at every level because it is just not useful, possible or feasible to create full examples for every permutation of elements.<br>\nEspecially for the most complex things it is has proven to be extremely useful to have those targeted examples.<br>\nRemoving it in FHIR is a very bad idea.</p>",
        "id": 153854016,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477340816
    },
    {
        "content": "<p>examples that are in error are a problem because they have to be valid</p>",
        "id": 153854018,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477340863
    },
    {
        "content": "<p>That may be so but in some cases you want to outline how *not* to do something.  Granted this is not a majority of use cases, but I'm sure it is easy to skip validation of examples marked as known to be invalid</p>",
        "id": 153854019,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477340935
    },
    {
        "content": "<p>We haven't got into it much yet, but we were looking at using <code>ElementDefinition.example</code>; however, we would really like more than one example.  What's the alternative?</p>",
        "id": 153854028,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1477350102
    },
    {
        "content": "<p>Also, nearly every element definition we have in our current (non-FHIR) system (~1500) has examples.  We have already had an internal discussion at which it was decided that these are still useful.  However, as <span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span> also mentions, we have multiple examples for each element definition, so an element containing a single value is not a lot of use.  We also often have additional explanatory text associated with single or multiple examples.</p>",
        "id": 153854031,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1477353097
    },
    {
        "content": "<p>Also, to be honest, when reading the FHIR documentation and trying to understand what is the scope of a given element, a few examples at the element level would not go astray.</p>",
        "id": 153854032,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1477353172
    },
    {
        "content": "<p>The belief was that a single example was insufficient.  And if we allow multiple examples, then there'd be a question of whether the repetitions functioned as a group (e.g. multiple lines of DosageInstruction) or if they represented alternative usages.  And if the latter, then you might want to label or comment on them.  Or maybe stitch example values from different sequences together to generate a full example instance.  Or.  Or.  Or.  In short, the existing structure wasn't sufficient to be terribly useful.  But making it complex enough to be useful could be complex indeed.  So the notion instead was to punt the whole space into extensions and see what people come up with and whether the community evolves to any consistent behavior that would be appropriate to integrate into the core specification.</p>",
        "id": 153854035,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1477358194
    },
    {
        "content": "<p>Well, I'm sure there's plenty of paralysis by analysis to be had here.  For us, in logical models, we do not need to be able to generate a full example instance, &amp;c. because the examples exist to aid human understanding of the concept and not to provide any machine level computability and so our requirements are fairly simple:</p>\n<ul>\n<li>Multiple examples are always alternatives; if an example functions as a group, then the entire group must be contained with a single example entry.</li>\n<li>We need to be able to comment on individual examples and the suite of examples on the whole (although the former is rare).</li>\n<li>As already stated, the examples do not need to be computable and, in particular, do not need to conform to the formal definition of the element being described; for example, if the element is a CodeConcept, simple free text examples are perfectly valid.</li>\n</ul>\n<p>I understand the desire to allow the community to evolve their own behaviour in this space, but without direction, I suspect practice will fracture, not become consistent, especially given the small number of folks for whom this matters.</p>",
        "id": 153854036,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1477359412
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191366\">@Stephen Royce</span> If the number of people for whom it matters is a small set of those who care about ElementDefinition, then extension is where it should go.  (And for the record, at the moment examples do need to be computable valid instances of the type - free text examples would go in DataElement.definition.)</p>",
        "id": 153854038,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1477362446
    },
    {
        "content": "<p>If you follow that argument <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>, the whole <code>ElementDefinition</code> resource should be an extension! <span class=\"emoji emoji-1f609\" title=\"wink\">:wink:</span><br>\nAnyway, I do understand what you're saying, and I don't know how many folks do or don't care; I may be wrong about it being small; the point is that without direction, I don't think it's very likely that the community will develop consistent behaviour.<br>\nAnd yes, I realise that free text is fine as an instance of <code>ElementDefinition.example</code>; I was just being explicit about our requirements, that's all.</p>",
        "id": 153854039,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1477362806
    },
    {
        "content": "<p>The denominator is those who will implement the resource/data type.</p>",
        "id": 153854042,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1477370708
    },
    {
        "content": "<p>From a tooling implementers perspective, the proposed change has little impact. I can see the motivation for removing this property, and I am fine supporting this if the community decides so.</p>",
        "id": 153854046,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1477374318
    },
    {
        "content": "<p>I feel totally on the same page as <span class=\"user-mention\" data-user-id=\"191366\">@Stephen Royce</span> with the exception that I do care whether or not examples go. I asked for 0..* and I get 0..0, you can imagine I'm not happy at all.<br>\nThe fact that examples could be better by adding capability to annotate them and the ability to mark them explicitly as valid or invalid is not a good reason to say \"let's skip them entirely because they can be better but we feel it is too complex to do so\".<br>\nThe grouping thing is a non-issue to me. Like Stephen said: every example is an individual example. Inline examples do not need validation, although if feasible it could be nice.</p>\n<p>Extensions are necessary evil for non-conformance resources, but should be avoided if possible in conformance resources as there will be zero tooling to support them unless you write your own. For non-conformance resources you are expected to write your own (albeit while leveraging a reference framework)</p>\n<p>I'm really totally not ok with removing the example 0..1 and stand by my request to promote to 0..*. For reference I've harvested on two ART-DECOR servers what projects currently have examples at Dataset (Logical model) or Template (profile) level: <br>\n*120 projects total<br>\n*45 have a total of 4071 inline dataset (Logical Model) examples and 1182 occurrences of multiple examples. 75 projects do not have examples in datasets<br>\n*65 have a total of 7745 inline template examples and 1773 occurrences of multiple examples. 55 projects do not have examples in templates</p>",
        "id": 153854052,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477380152
    },
    {
        "content": "<p>Example contents should be like \"xs:any processContents=\"skip\"\" so there's no illusion that they are validated. To us an example looks like:</p>\n<p>&lt;example caption=\"Illustration of a Dutch BSN\" type=\"valid\"&gt;<br>\n    &lt;identifier&gt;<br>\n        &lt;system value=\"http://fhir.nl/fhir/NamingSystem/bsn\"/&gt;<br>\n        &lt;value value=\"123456782\"/&gt;<br>\n    &lt;/identifier&gt;<br>\n&lt;/example&gt;</p>\n<p>or </p>\n<p>&lt;example caption=\"Do not use the OID for BSNs\" type=\"error\"&gt;<br>\n    &lt;identifier&gt;<br>\n        &lt;system value=\"urn:oid:2.16.840.1.113883.2.4.6.3\"/&gt;<br>\n        &lt;value value=\"123456782\"/&gt;<br>\n    &lt;/identifier&gt;<br>\n&lt;/example&gt;</p>",
        "id": 153854058,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477386452
    },
    {
        "content": "<p>\"xs:any processContents=\"skip\"\" - XML specific. We don't work with XML specific things</p>",
        "id": 153854060,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477386594
    },
    {
        "content": "<p>I'm sure JSON /Turtle has similar things. It was just to illustrate</p>",
        "id": 153854062,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477386651
    },
    {
        "content": "<p>they don't have similar things at all</p>",
        "id": 153854069,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477386924
    },
    {
        "content": "<p>Isn't that what made JSON so appealing above XML governed by XSD? The ability to have arbitrary contents? Turtle I don't know that slightest thing of</p>",
        "id": 153854072,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477386976
    },
    {
        "content": "<p>you can have arbitrary content, but there's no metadata signal for that, and we've not made any allowance for it in the FHIR metamodel</p>",
        "id": 153854074,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477387087
    },
    {
        "content": "<p>Ok, so apparently it needs to stay at a choice of every possible datatype. But that rules out structures to create examples of a grouping element.</p>\n<p>E.g. an example of Observation.referenceRange</p>",
        "id": 153854077,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477387229
    },
    {
        "content": "<p>yes that's not catered for, you're right</p>",
        "id": 153854090,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477387595
    },
    {
        "content": "<p>So is there anything that we can do about that limitation that lies within reason and assuming that inline examples stay in?</p>",
        "id": 153854096,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477387928
    },
    {
        "content": "<p>not that one, really; that's a very fundamental thing in FHIR itself; only resources and data types are entry points. </p>",
        "id": 153854099,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477388068
    },
    {
        "content": "<p>Nice to have for future use is really not that convincing for keeping it in.  I've never used and always created example instances.</p>",
        "id": 153854209,
        "sender_full_name": "Eric Haas",
        "timestamp": 1477421344
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span> The reason for dropping the element is that, as it, it's pretty useless.  Allowing the element to repeat without more information would be ambiguous and still largely useless.  Actually making it useful would mean significantly more complexity than is in the 80% for systems that are doing profiling.  It's certainly possible to have standardized extensions.  And if there's enough interest, these could be supported by the publishing tools and/or authoring tools like Forge.  And maybe, eventually, there'll be sufficient use and consenus that introducing some sort of more sophisticated example structure would be useful.  But at the moment, example is being used for different purposes by different people and in most cases isn't being used at all, which is a clear recipe for moving to the extension space.</p>",
        "id": 153854214,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1477422382
    },
    {
        "content": "<p>\"The reason for the proposal to drop the element\" you mean I hope? Otherwise this discussion is a moot point and I'll be double disappointed</p>",
        "id": 153854228,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477426485
    },
    {
        "content": "<p>I'm sorry that my number of current usage and those of Stephen do not convince you. I have no more arguments to offer, and I do not get why the vast amount of in practice use cases spread over &gt; 10 countries is just tossed aside. If you feel, like I do by the way, that example could be better if it had two more attributes (caption and type) and would repeat, then just do that.</p>\n<p>The perceived added complexity is really in your mind. Examples are currently *not* validated and do not ask for them to be validated. There is no added complexity other than the assumption that the examples are rendered in the documentation.</p>\n<p>There is *significantly* more complexity in creating full examples for every permutation of element variety.</p>",
        "id": 153854229,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477426916
    },
    {
        "content": "<p>I'm.. confused... about the statement that examples are not validated. I can assure that all resources the fhir publishing tools touch are indeed validated</p>",
        "id": 153854233,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477427091
    },
    {
        "content": "<p>The ElementDefinition.example isn't other than what the datatype does by default. Or at least that was my assumption. If you already validate the inline examples, even better. Just make it a repeating validation and we're golden</p>",
        "id": 153854237,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477427193
    },
    {
        "content": "<p>I validate the examples in the html narrative</p>",
        "id": 153854240,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477427286
    },
    {
        "content": "<p>repeating validation?</p>",
        "id": 153854241,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477427299
    },
    {
        "content": "<p>for $example in $ElementDefinition.example<br>\nreturn validate($example)<br>\n:-)</p>",
        "id": 153854242,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477427343
    },
    {
        "content": "<p>Instead of just validate($ElementDefinition.example)</p>",
        "id": 153854244,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477427383
    },
    {
        "content": "<p>Validating an array of ElementDefinition.example and adding them all to the HTML output is my assumption of how much effort my request to go from 0..1 to 0..* is. Please help me understand why Lloyd thinks it is more than that?</p>",
        "id": 153854245,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477427515
    },
    {
        "content": "<p>you're responsible for that, with the idea that you need descriptions, validity status, capability for invalid</p>",
        "id": 153854246,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477427576
    },
    {
        "content": "<p>oh- and me too, since I'm using multiple examples, but I have them indexed and need a tag on them for offset, so that the examples are related to each other </p>",
        "id": 153854247,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477427705
    },
    {
        "content": "<p>I'm presently doing that in extensions</p>",
        "id": 153854248,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477427743
    },
    {
        "content": "<p>we could make examples a 0..* element that had a label and a value[x]. that would be a minimal change that I'd make use of (drop my extensions) and you would too. We night want to keep away from anything beyond that if the rest of FHIR-I are going to buy into it</p>",
        "id": 153854249,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477427855
    },
    {
        "content": "<p>Well the ticket just asked for 0..*. Nothing more, nothing less. The caption/type thing was a side note I probably should have omitted.</p>\n<p>I'm very happy with 0..* examples that would need to be valid, and a label is heaven</p>",
        "id": 153854250,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477428032
    },
    {
        "content": "<p>To create an example that is explicitly invalid I can live with an extension.</p>",
        "id": 153854251,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477428067
    },
    {
        "content": "<p>there's a technical issue there - there's a rule that no element with a choice of types can repeat </p>",
        "id": 153854252,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477428098
    },
    {
        "content": "<p>hence the label</p>",
        "id": 153854253,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477428103
    },
    {
        "content": "<p>but you can't have an extensions for an invalid example - they're validated too. All you could do is a string that contains some invalid resprensentation</p>",
        "id": 153854254,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477428138
    },
    {
        "content": "<p>Well the label also helps explaining why you have example X and Y</p>",
        "id": 153854255,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477428140
    },
    {
        "content": "<p>I think the question is \"how invalid is the example\"? I could not violate the base spec, but I could very likely create an example of CodeableConcept with a different codeSystem than the profile says I should use?</p>",
        "id": 153854256,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477428213
    },
    {
        "content": "<p>bindings do not apply to examples. </p>",
        "id": 153854260,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477428442
    },
    {
        "content": "<p>at least not to ELementDefinition.example</p>",
        "id": 153854261,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477428455
    },
    {
        "content": "<p>Ok, so the example is then only validated against the base spec which means I could also create purposely invalid examples so long as I do not violate the base spec?</p>",
        "id": 153854262,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477428502
    },
    {
        "content": "<p>yes</p>",
        "id": 153854263,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477428524
    },
    {
        "content": "<p>The label would explain that the example is in fact not valid then. I'm all for it. Where can I sign?</p>",
        "id": 153854264,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477428539
    },
    {
        "content": "<p>though I suppose I could change that and validate examples against the binding</p>",
        "id": 153854265,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477428550
    },
    {
        "content": "<p>When you start doing that you might find a lot of new errors. Even currently, I guess</p>",
        "id": 153854266,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477428597
    },
    {
        "content": "<p>but you don't want me to do that</p>",
        "id": 153854267,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477428612
    },
    {
        "content": "<p>That's usually the case for any new consistency check.</p>\n<blockquote>\n<p>but you don't want me to do that</p>\n</blockquote>\n<p>Well I would like to know beforehand to decide whether or not I should implement invalid examples that way.</p>",
        "id": 153854268,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477428673
    },
    {
        "content": "<p>As long as doing profile validation of inline examples is not going to be on your todo-list, then I might consider doing it this way. Otherwise I'd probably be best off finding a different place</p>",
        "id": 153854269,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477428757
    },
    {
        "content": "<p>I care more about repeating labeled examples than I do about giving explicitly invalid examples.</p>",
        "id": 153854270,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1477428815
    },
    {
        "content": "<p>If we go to repeating, there are two use-cases - multiple repetitions = multiple distinct examples, each with a label; multiple repetitions = a single example showing multiple repetitions and how they work to gether (e.g. dosage instructions).  If we're going to do this, we probably need a structure that supports both.</p>",
        "id": 153854273,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1477429856
    },
    {
        "content": "<p>carumba. you can string that together with labels, since it's for human consumption</p>",
        "id": 153854274,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477429905
    },
    {
        "content": "<p>That'd be pretty ugly.  You really want it all to render together.</p>",
        "id": 153854276,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1477429953
    },
    {
        "content": "<p>I reckon not; the labels would the text that string the pieces together. </p>",
        "id": 153854277,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477429994
    },
    {
        "content": "<p>I'm all for making examples 0..* and adding a label.  That would cover nearly all our uses. <img alt=\":smiley:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/smiley.png\" title=\":smiley:\"> </p>",
        "id": 153854326,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1477442438
    }
]