[
    {
        "content": "<p>How do you get commit permissions for the FHIR github?</p>",
        "id": 154025485,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1544738438
    },
    {
        "content": "<p>Or do we use the pull request model?</p>",
        "id": 154025486,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1544738643
    },
    {
        "content": "<p>use Pulls for now. why?</p>",
        "id": 154025491,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1544739942
    },
    {
        "content": "<p>Never mind - it is obvious once I take the time to look.  <span class=\"emoji emoji-1f636\" title=\"no mouth\">:no_mouth:</span></p>",
        "id": 154025492,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1544739943
    },
    {
        "content": "<p>Got a tweak to submit to the ShEx emitter.</p>",
        "id": 154025493,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1544739962
    },
    {
        "content": "<p>Sorry - shorted out on the SVN to git transition...</p>",
        "id": 154025494,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1544739979
    },
    {
        "content": "<p>while you're here - the last task on my list for today is <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13595\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13595\">GF#13595</a></p>",
        "id": 154025495,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1544740220
    },
    {
        "content": "<p>looks like this has been overtaken by events:</p>",
        "id": 154025497,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1544740290
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"nn\">fhir:</span><span class=\"nt\">instant</span><span class=\"w\">  </span><span class=\"kt\">a</span><span class=\"w\">          </span><span class=\"nn\">owl:</span><span class=\"nt\">Class</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nn\">rdfs:</span><span class=\"nt\">comment</span><span class=\"w\">     </span><span class=\"s\">&quot;An instant in time - known at least to the second&quot;</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nn\">rdfs:</span><span class=\"nt\">label</span><span class=\"w\">       </span><span class=\"s\">&quot;instant&quot;</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nn\">rdfs:</span><span class=\"nt\">subClassOf</span><span class=\"w\">  </span><span class=\"nn\">fhir:</span><span class=\"nt\">Primitive</span><span class=\"w\"> </span><span class=\"p\">;</span><span class=\"w\"></span>\n</pre></div>",
        "id": 154025498,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1544740306
    },
    {
        "content": "<p>Trying to remember -- been a long time.  I think that at the moment the generator uses some sort of table to decide to do this vs. reading it from the model.</p>",
        "id": 154025499,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1544740489
    },
    {
        "content": "<p>Gimme a sec to look</p>",
        "id": 154025500,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1544740500
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>        // Primitive isn&#39;t in the actual model - added here\n        fact.fhir_class(&quot;Primitive&quot;)\n                .addTitle(&quot;Types with only a value&quot;)\n                .addDefinition(&quot;Types with only a value and no additional elements as children&quot;)\n                .restriction(fact.fhir_restriction(value, RDFS.Literal));\n</pre></div>",
        "id": 154025501,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1544740636
    },
    {
        "content": "<p>```protected boolean isPrimitive(String name) {<br>\n            return definitions.hasPrimitiveType(name)<br>\n                    || (name.endsWith(\"Type\")<br>\n                   &amp;&amp; definitions.getPrimitives().containsKey(name.substring(0, name.length()-4)));<br>\n    }</p>\n<div class=\"codehilite\"><pre><span></span>\n</pre></div>",
        "id": 154025502,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1544740746
    },
    {
        "content": "<p>Not exactly resilient, but it works for the time being.   I think that the issue was to actually create a top node called \"Primitive\" but that seems like a lot of work for questionable return...</p>",
        "id": 154025503,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1544740854
    },
    {
        "content": "<p>ok. in the FHIR build tools, 'primitive' is compiler magic. Each different implementation space (presently: MOF, RDF, XML, JSON, java, pascal, C#, javascript) treats it differently</p>",
        "id": 154025504,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1544740977
    },
    {
        "content": "<p>So we're consistent.   Be happy to sign off on the issue as it sits...</p>",
        "id": 154025506,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1544741614
    },
    {
        "content": "<p>ok done.</p>",
        "id": 154025507,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1544741624
    }
]