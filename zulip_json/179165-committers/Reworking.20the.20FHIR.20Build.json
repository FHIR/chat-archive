[
    {
        "content": "<p>I'm reworking the main spec build process so that spreadsheets are no longer the major source material for the specification.</p>\n<p>If anyone is interested, here's a copy of the source directory for a few resources showing the new files (as well as the old files) that are going to replace the existing spreadsheets. Comments are welcome.</p>",
        "id": 212419146,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1601987018
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/TAak9CCDcW8NZh_T1KYwc7sh/source.zip\">source.zip</a></p>",
        "id": 212419155,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1601987026
    },
    {
        "content": "<ol>\n<li>I presume the spreadsheet files are the old files, and the SVGs are generated (is that right? When Confluence is updated, I presume we'll identify which are the files the author needs to create.</li>\n</ol>",
        "id": 212423685,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601989302
    },
    {
        "content": "<p>The spreadsheets are a great way for those who are new to FHIR to understand the structures before trying to create new resources.  Can you explain the need to be rid of them?</p>",
        "id": 212423884,
        "sender_full_name": "David Pyke",
        "timestamp": 1601989400
    },
    {
        "content": "<ol start=\"2\">\n<li>consent-extensions - both a List and an ImplementationGuide?</li>\n</ol>",
        "id": 212424007,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601989449
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192587\">@David Pyke</span> I understood (maybe I'm wrong) the intention is not to replace but to complement.</p>",
        "id": 212424122,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601989507
    },
    {
        "content": "<p>Yes, it would be good to clarify what are the source of truth files that need to be created/maintained.</p>",
        "id": 212424987,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1601989929
    },
    {
        "content": "<ol start=\"3\">\n<li>Is it the same to use Bundle (like for SearchParameters) and List (like extensions)? Or searchparams always go into Bundle and the rest has a List?</li>\n</ol>",
        "id": 212428086,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601991386
    },
    {
        "content": "<p>3.1 I would like to have the same possibility to use Lists in IGs (e.g. to tell the vocabulary guys to work on their stuff and give us a List)</p>",
        "id": 212428203,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601991447
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192587\">@David Pyke</span> The objective is to have source in Git that can actually reasonably be merged across branches.  Spreadsheets aren't viable for that.</p>",
        "id": 212436306,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1601994812
    },
    {
        "content": "<p>So, will we have something equally simple for the semi-technical who want to create resources?</p>",
        "id": 212436420,
        "sender_full_name": "David Pyke",
        "timestamp": 1601994854
    },
    {
        "content": "<p>My understanding is that you can still use spreadsheets, but you'll be required to commit the accompanying XML file</p>",
        "id": 212436791,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1601995000
    },
    {
        "content": "<p>If we keep spreadsheet editing (which is a good thing to do) I'd hope that spreadsheets would be a preliminary step to generate all these resources. That is what I recall hearing - you can go from spreadsheet to the proper resources, and iirc the resources could also update the spreadsheet</p>",
        "id": 212436972,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601995070
    },
    {
        "content": "<p>So, we would create using the spreadsheet, run it though some utility to create the XML and then check in both?</p>",
        "id": 212437840,
        "sender_full_name": "David Pyke",
        "timestamp": 1601995406
    },
    {
        "content": "<p>I believe so</p>",
        "id": 212438174,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1601995550
    },
    {
        "content": "<p>That works then.  Just need to have the utility available.</p>",
        "id": 212438333,
        "sender_full_name": "David Pyke",
        "timestamp": 1601995626
    },
    {
        "content": "<p>What ever the changes are, I hope there will be clear documentation on how to do the new process and that it has been tested across all operating systems - MacOs and Windows.  And I expect that it won't just be thrown out there with an expectation to \"go for it\".</p>",
        "id": 212439479,
        "sender_full_name": "Melva Peters",
        "timestamp": 1601996127
    },
    {
        "content": "<blockquote>\n<p>So, will we have something equally simple for the semi-technical who want to create resources?</p>\n</blockquote>\n<p>I dream of a day when you can author brand new resources in FHIR Shorthand, but that day has not yet arrived.  Still some other things to do in FSH before we get there.</p>",
        "id": 212440456,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601996514
    },
    {
        "content": "<p>How hard would the penalty be to change to/allow markdown instead of xhtml for the docs (e.g., the introduction, notes, etc.)?  It's far kinder in source control and less prone to causing build errors (e.g., unclosed paragraph, div nested where it's not allowed, etc.).</p>",
        "id": 212443756,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1601997693
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"192587\">David Pyke</span> <a href=\"#narrow/stream/179165-committers/topic/Reworking.20the.20FHIR.20Build/near/212423884\">said</a>:</p>\n<blockquote>\n<p>The spreadsheets are a great way for those who are new to FHIR to understand the structures before trying to create new resources.  Can you explain the need to be rid of them?</p>\n</blockquote>\n<p>If the spreadsheets are more functional than the generated documentation of the spec, we should probably put some work into figuring out why.</p>",
        "id": 212443982,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1601997777
    },
    {
        "content": "<p>Purely the simple interface.  Most people are familiar with using Excel, fewer are familiar with XML/JSON editing</p>",
        "id": 212444090,
        "sender_full_name": "David Pyke",
        "timestamp": 1601997836
    },
    {
        "content": "<p>The fact XHTML raises errors when markdown doesn't is a value-add in my opinion.  You can break things in markdown and nothing will tell you.  If you screw up a hyperlink or fail to close a 'bold' tag or something in XHTML, you'll be told.  I've never had issues with XHTML and source control.</p>",
        "id": 212444457,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1601997982
    },
    {
        "content": "<p>David: fair enough.</p>",
        "id": 212445029,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1601998261
    },
    {
        "content": "<p>Looking at Task, the following files are part of the source (listed at the end). Out of those, how difficult would be to a have an Electron-based app (or similar off-line available tool) that would provide editing capabilities and guardrails the Page fragments, Resource Definition, Search Parameters, list of examples and extensions? Or is that not worth pursuing?</p>\n<ul>\n<li>Page fragments<br>\n    * task-introduction.xml <br>\n    * task-notes.xml</li>\n<li>Resource definition<br>\n    * structuredefinition-Task.xml</li>\n<li>Search Parameters<br>\n    * bundle-Task-search-params.xml</li>\n<li>List of examples<br>\n    * list-Task-examples.xml</li>\n<li>List of Extensions (do these need to be kept in sync?)<br>\n    * list-task-extensions.xml<br>\n    * implementationguide-task-extensions.xml</li>\n<li>Code systems defined as part of the resource (?)<br>\n    * codesystem-*.xml</li>\n<li>Value sets defined as part of the resource (?)<br>\n    * valueset-tack-*.xml</li>\n<li>Examples<br>\n    * task-example*.xml</li>\n</ul>",
        "id": 212450539,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1602000774
    },
    {
        "content": "<p>Lloyd, difference of preference it is.  I've had issues in source control around exactly things I mentioned (e.g., merging tags missing the close or causing incorrect nesting, etc.).  I will also admit that it's annoying, but not difficult to fix.</p>\n<p>Overall, I feel that markdown is more user-friendly (e.g., previews in editors, etc.).  I am also thinking about things like embedding <a href=\"https://mermaid-js.github.io/mermaid/\">mermaid</a> diagrams, which markdown processors are already doing.  You can get the same output using XHTML, but it's more steps.</p>",
        "id": 212451604,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1602001251
    },
    {
        "content": "<p>I think we're moving towards PlantUML rather than mermaid?  (Would really rather not introduce yet more diagramming tools...)</p>",
        "id": 212458874,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1602005081
    },
    {
        "content": "<p>hmm, mermaid seems very plantUMl like... but not exactly... the markdown community is out of control..</p>",
        "id": 212459168,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602005232
    },
    {
        "content": "<p>I'm less concerned with the tool package and more asking about the ability to inline data (separate artifacts tend towards getting out of sync)</p>",
        "id": 212460503,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1602005932
    },
    {
        "content": "<p>Anything that inlines the files needed (PlantUML is fine) is a great idea.  We just need to give guidance on the use of the various flavours of markdown (and other markups) so that we get a reasonably consistent feel to IGs.</p>",
        "id": 212460711,
        "sender_full_name": "David Pyke",
        "timestamp": 1602006045
    },
    {
        "content": "<p>I very much prefer mermaid over plantUML for several reasons</p>",
        "id": 212470339,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602010823
    },
    {
        "content": "<p>more comments on this thread:</p>\n<ul>\n<li><span class=\"user-mention\" data-user-id=\"192685\">@Vassil Peytchev</span> not so difficult technically but quite infeasible, in my view. but if you want to take it on and commit to it... knock yourself out</li>\n<li><span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span> I too strongly prefer markdown but it's not quite as precise as HTML. I focused on markdown for guides. </li>\n<li><span class=\"user-mention\" data-user-id=\"192587\">@David Pyke</span> the resources will be the master format. the build will generate a spreadsheet you can edit, though the format will be a little different than what we have now. But the spreadsheet will be a purely local artifact</li>\n<li><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> I'm totally unsold on the idea of a DSL somewhat like FSH for this particular purpose; the vast bulk of the content is documentation</li>\n<li><span class=\"user-mention\" data-user-id=\"191759\">@Melva Peters</span> of course you're right that documentation etc will be needed. But the timeline and available resources limits my ability to do a perfectly prepared roll out with extensive testing. Of course, any testers will be welcome</li>\n</ul>",
        "id": 212472389,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602011859
    },
    {
        "content": "<blockquote>\n<p>@Chris Moesel I'm totally unsold on the idea of a DSL somewhat like FSH for this particular purpose; the vast bulk of the content is documentation</p>\n</blockquote>\n<p>I agree that a DSL isn't ideal for tons of documentation.  I'd like to find a way for something like FSH to be able to define the <em>structural</em> components, but defer to better approaches for the documentation components.  FSH is not up to the task today, but FSH only just had its first ballot; there's lots of room for growth.  And I expect we'll learn some things as we attempt the design and implementation of logical models.</p>",
        "id": 212474749,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1602013041
    },
    {
        "content": "<p>Looking at (for example) <code>structuredefinition-Task.xml</code> in Grahame's zip file at the top of this thread: how robustly do we expect changes to be mergeable in these sorts of XML files? Better than spreadsheets certainly, but do we have a practical sense of how much better?</p>",
        "id": 212486437,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1602018709
    },
    {
        "content": "<p>you want a number?</p>",
        "id": 212486528,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602018747
    },
    {
        "content": "<p>my answer is: good enough to expect editors to be able to merge</p>",
        "id": 212486560,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602018767
    },
    {
        "content": "<p>No, but like... has anyone tried it?</p>",
        "id": 212486573,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1602018774
    },
    {
        "content": "<p>And how did it feel? Your answer suggests 'yes' and 'workable' which is all I was asking.</p>",
        "id": 212486605,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1602018793
    },
    {
        "content": "<p>(That wasn't obvious to me!)</p>",
        "id": 212486633,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1602018818
    },
    {
        "content": "<p>well, I think it is. I think a better way to put this is: the problem with the spreadsheets is that you have to deal with merging the format as well as the content. The resources will represent - mostly - simply merging the content. The non-content boilerplate stuff will mostly get out of the way.</p>\n<p>If I was defining a format purely to support merging the content, I might do things a little differently but not that much</p>",
        "id": 212487302,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602019176
    },
    {
        "content": "<p>Yeah, there's a tradeoff there - markdown would be less precise, but easier to work with (e.g., live previews (even if not in the correct template), inline diagrams, etc.).  Wanted to have a discussion around it at least.</p>",
        "id": 212492590,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1602022280
    },
    {
        "content": "<p>you can get live previews from html too.</p>",
        "id": 212501261,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602029161
    },
    {
        "content": "<p>Yes, but not of xml files without messing up my settings for xml. =/</p>",
        "id": 212566171,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1602080899
    }
]