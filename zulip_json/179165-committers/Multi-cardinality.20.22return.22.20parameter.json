[
    {
        "content": "<p>When an Operation has a return parameter with <code>0..*</code>, it's clear enough that if the actual result returns more than one, it needs to use a Parameters, and that implies that it should always return with a Parameters if the return parameter is <code>0..*</code>, but I don't think the language here in Operations says that clearly:<br>\n<a href=\"http://hl7.org/fhir/operations.html#response\">http://hl7.org/fhir/operations.html#response</a></p>\n<blockquote>\n<p>\"If there is only one out parameter, which is a Resource with the parameter name \"return\" then the parameter format is not used, and the response is simply the resource itself. \"</p>\n</blockquote>\n<p>Is this worth clarifying, or is it obvious enough already?</p>",
        "id": 213484296,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1602794344
    },
    {
        "content": "<p>I guess it could be even more explicit</p>",
        "id": 213489225,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602796687
    },
    {
        "content": "<p>Just wondering out loud here, but the whole reason we defined a multi-cardinality out parameter was to support streaming, is it possible to go one further and say something like, \"operations that return a single out parameter with multiple cardinality use the searchset bundle approach, just like any other read/search interaction would?\"</p>",
        "id": 213489742,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1602797027
    },
    {
        "content": "<p>(You would also need the restriction that the single out parameter with multiple cardinality is a resource not a datatype )</p>",
        "id": 213494697,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1602800086
    },
    {
        "content": "<p>Note from the current docs:</p>\n<blockquote>\n<p>If the response is a Bundle, the correct Bundle.type is 'collection', unless it has search semantics, such as matching resource counts, and page links (next etc).</p>\n</blockquote>",
        "id": 213502023,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1602805770
    }
]