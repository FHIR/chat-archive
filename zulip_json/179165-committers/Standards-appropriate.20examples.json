[
    {
        "content": "<p>Why is the year 2364 not considered valid?  </p>\n<div class=\"codehilite\"><pre>[java] ERROR @ Schedule.planningHorizon.start (line 0, col0) \nschedule-provider-location2-example::Schedule.planningHorizon.start: \nThe value &#39;2364-12-25T09:15:00Z&#39; does not have a valid year (src = InstanceValidator)\n</pre></div>\n\n\n<p>In my awesome example of a schedule for Dr. Beverly Crusher on the USS-Enterprise-D, the year 2364 is indeed the appropriate planning horizon.  Also, the regex of dateTime appears to accept [0-9]{4} for the year.</p>\n<p>This is obviously trivially fixed, but I did have two questions as a new committer:<br>\n1.  Are fun/humorous examples encouraged or discouraged?  <br>\n2. Do we have a Y2K-style dateTime validation bug (or intentional restriction) somewhere?</p>",
        "id": 153869827,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1486075549
    },
    {
        "content": "<p>I think we do a sanity check to help avoid typos - intention is that most of the examples should be semi-realistic</p>",
        "id": 153869833,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1486077552
    },
    {
        "content": "<p>a moderate amount of fun/humour is just fine. That date was disallowed as Lloyd said </p>",
        "id": 153870116,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1486348660
    }
]