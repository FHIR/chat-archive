[
    {
        "content": "<p>Taking <a href=\"https://github.com/HL7/fhir/pull/1597\">https://github.com/HL7/fhir/pull/1597</a> as an examlpe, github shows:</p>\n<p><a href=\"/user_uploads/10155/Tuqx4dulE2_iPXSgCYJwhZc2/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/Tuqx4dulE2_iPXSgCYJwhZc2/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/Tuqx4dulE2_iPXSgCYJwhZc2/image.png\"></a></div><p>and the Azure Pipelines detail page shows:</p>\n<p><a href=\"/user_uploads/10155/EsEBHuCDAVmqv1xTaOitOaVi/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/EsEBHuCDAVmqv1xTaOitOaVi/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/EsEBHuCDAVmqv1xTaOitOaVi/image.png\"></a></div><p><span class=\"user-mention\" data-user-id=\"248736\">@Mark Iantorno</span> do you know what this means? The build seems to have completed (took 25min) but there's a <code>successNotification</code> step with a clock icon... so it seems like the checks aren't fully completed. Do you know what is going on here?</p>",
        "id": 268615700,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1642632984
    },
    {
        "content": "<p>PR builds seem... stuck overall. But maybe just trickling through; I can't tell with the permissions I have.</p>",
        "id": 268623874,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1642638121
    },
    {
        "content": "<p>Let me take a look</p>",
        "id": 268854928,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1642777699
    },
    {
        "content": "<p>Seems to have passed now? Maybe there was  a stall.</p>",
        "id": 268855042,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1642777764
    },
    {
        "content": "<p>Thanks. Next up <span class=\"user-mention\" data-user-id=\"248736\">@Mark Iantorno</span>  in our github branch protection settings we have:</p>\n<p><a href=\"/user_uploads/10155/0LLKuyU5hrEa-yhbXwHisCGw/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/0LLKuyU5hrEa-yhbXwHisCGw/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/0LLKuyU5hrEa-yhbXwHisCGw/image.png\"></a></div><p>... meaning that branches don't need to be fully up to date before they can be merged. However, the Azure pipeline setup prevents a branch from being merged if it's not up to date. E.g. from <a href=\"https://github.com/HL7/fhir/pull/1604\">https://github.com/HL7/fhir/pull/1604</a>:</p>\n<p><a href=\"/user_uploads/10155/I8IOtQ-FZ7NZTKEOTky98OD0/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/I8IOtQ-FZ7NZTKEOTky98OD0/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/I8IOtQ-FZ7NZTKEOTky98OD0/image.png\"></a></div><p>This means we're faced with O(N^2) builds to merge N branches, which is especially painful during a \"bug bash\" like we're hosting this week. Do we want to update the Azure Pipeline so it's consistent with the GH Build protections, meaning that a PR could be merged even if some additional commits have landed in master since the PR branch was last built? Or do we want to just want to manually create PRs with multiple changes lumped together?</p>",
        "id": 268873359,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1642785524
    },
    {
        "content": "<p>Interesting -- looks like a bug in GH. I tried unchecking and rechecking this checkbox, and wound up in a spot where GH <em>does</em> now allow merging of stale (but CI'd) branches:</p>\n<p><a href=\"/user_uploads/10155/WSb_G-yKQPZx3XeuTYDhWR-t/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/WSb_G-yKQPZx3XeuTYDhWR-t/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/WSb_G-yKQPZx3XeuTYDhWR-t/image.png\"></a></div>",
        "id": 268883086,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1642789608
    },
    {
        "content": "<p>This leaves open the question of what protections we actually <em>want</em>. Currently the \"up to date before merging\" requirement <em>is</em> set on <code>master</code> even though it's not set on <code>R4B</code>. I don't know whether that's intentional.</p>",
        "id": 268883337,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1642789709
    },
    {
        "content": "<p>Ah, R4B was always it's own monster in the way it was set up. I'd prefer to keep the requirement on Master. If there is a lot of work going on with rapid commits, it might be a good idea to create a <code>development</code> branch that everyone works off of, and can quickly iterate on, then once the changes are finalized, it can be merged into master</p>",
        "id": 268889842,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1642792389
    }
]