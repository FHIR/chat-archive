[
    {
        "content": "<p>Hi everyone, I am looking at the build tool and was wondering if there's any way to specify which resources to build.</p>\n<p>The use-case I am looking at is working with a specific area of the spec on a local box.</p>\n<p>In the documentation (<a href=\"http://wiki.hl7.org/index.php?title=FHIR_Build_Process\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=FHIR_Build_Process\">http://wiki.hl7.org/index.php?title=FHIR_Build_Process</a>), it appears the only option to reduce the build is to exclude the web/archives, which made no significant change on my system.</p>\n<p>Being able to skip generating/validating resources that haven't changed would be a large quality of life improvement.<br>\n  Reading through the logs on my system, removing the build/validation steps for resources not of interest would cut ~90% of the build time.</p>\n<p>My first thought was a parameter to indicate which area/s are of interest.  I was starting to trace the build process to see if it would be (relatively) straightforward, but am unfamiliar with these tools and quickly realized that asking here would be far better.</p>\n<p>Thanks!</p>",
        "id": 167524886,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1559856863
    },
    {
        "content": "<p>The problem is that every resource can reference every other resource through extensions and any Reference or Reference&lt;any&gt; link.  We've explored partial builds and the build process <em>should</em> only build the things that have changed, but it's still somewhat heavy.  If your local system is super slow, you can always try pushing a branch and see if it builds on the server.</p>",
        "id": 167527517,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559858932
    },
    {
        "content": "<p>I assumed it was something along those lines.  I was hoping that I could pay the tax once (do a full build), then explicitly state that only resource 'x' has changed so that everything else can just be left alone.</p>\n<p>It is fairly painful right now since I'm working from a laptop, but I assume much more reasonable on a normal system (~15 minutes without validation, ~35 with it).  Just had the thought while waiting on a build  :-)</p>",
        "id": 167528089,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1559859383
    },
    {
        "content": "<p>(the without validation is because an error kicks me out)</p>",
        "id": 167528126,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1559859428
    },
    {
        "content": "<p>I hear your pain.  Your times are pretty consistent with what the rest of us experience.</p>",
        "id": 167528860,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559860064
    },
    {
        "content": "<p>the build finishes before validation starts. so you can be looking at output before then</p>",
        "id": 167543803,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559879064
    },
    {
        "content": "<p>the partial build is unreliable, btw, because the dependency tracking is not done (and it isn't done because it's too hard)</p>",
        "id": 167543829,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559879100
    },
    {
        "content": "<p>I see that there is already a runtime parameter -resource [Type] that does what you want</p>",
        "id": 167543926,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559879210
    },
    {
        "content": "<p>Thanks Grahame, I did not see that anywhere it makes life a lot better!</p>",
        "id": 167583049,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1559918767
    }
]