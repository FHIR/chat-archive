[
    {
        "content": "<p>Shortly, I'm going to commit a new feature to the build. The way it works is:<br>\n- when it runs into any spreadsheet that excel has saved, it will try to canonicalise the excel spreadsheet<br>\n- then it will try to save it<br>\n- if it can't, it will create a file [N}.please-close-this-in-excel-and-return-the-build-prior-to-committing<br>\n- it it can, it will save the updated one</p>\n<p>If you see the \"please-close...\" this file, <em>don't</em> commit, and <em>don't</em> commit it. Close in excel and restart the build please. </p>\n<p>When it comes to merges, you should no longer see any changes but ones that you made yourself manually. For a little while, please check the spreadsheet differences, and I will work on the canonical excel XML algorithm (some tricky stuff in there)</p>",
        "id": 153929196,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516186843
    },
    {
        "content": "<p>this is preparation for migrating ot GitHub</p>",
        "id": 153929197,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516187168
    },
    {
        "content": "<p>Would it not be better for the build to die and force closing the Excel files?  Getting people to notice the existence of \"please-close-this...\" files when they're doing a commit could be hard.  And as much as we set expectations for all committers to actively monitor this stream, the reality is not all will in a sufficiently timely manner</p>",
        "id": 153929264,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1516206525
    },
    {
        "content": "<p>Does this also mean that we <em>must</em> run a local build before committing?  That's a major change.  (And prevents things like \"I can't make this work, can I commit and have you take a look at it?)</p>",
        "id": 153929266,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1516206578
    },
    {
        "content": "<p>no it would not be better to force you to close Excel. We all have the work flow:<br>\n- change something in excel<br>\n- do a differential build<br>\n- change something in excel....</p>",
        "id": 153929578,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516356577
    },
    {
        "content": "<p>and yes, you must run a local build, at least till the point it starts the actual build, before you commit.  Even if you are asking someone else to look. that's not new.</p>",
        "id": 153929579,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516356617
    },
    {
        "content": "<p>and any committers that commit these files will be outed!</p>",
        "id": 153929580,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516356637
    },
    {
        "content": "<p>Committing the \"please close\" files by accident seems unlikely.  Committing spreadsheets that haven't been processed seems like it will be pretty common.</p>",
        "id": 153929624,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1516376884
    },
    {
        "content": "<p>And if the build runs with non-processed files, there's not going to be a huge incentive to remember to process them.</p>",
        "id": 153929625,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1516376913
    },
    {
        "content": "<p>it would certainly be better. But I won't force closing excel in order to run the build - well, not unless there's really no choice at all.</p>",
        "id": 153929760,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516425425
    },
    {
        "content": "<p>There's one other choice I considered: banning the x-spreadsheet.xml files from version control, and generating them on the fly from the real master, and writing the real master from the spreadsheet files. This works around the excel locking problem, but adds a layer of complexity</p>",
        "id": 153929761,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516425504
    },
    {
        "content": "<p>An alternative is that I can set it up so the the CI build refuses to build on non-processed files</p>",
        "id": 153929762,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516425544
    },
    {
        "content": "<p>I like option #3.  It makes the ramifications of messing up immediately clear (including who's at fault) without any digging.  It's also not a roadblock to someone else as they can always run a full local build themselves and commit.  And once we move to Git, a clean CI build would presumably be a pre-requisite to merging a change into the main build.</p>",
        "id": 153929953,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1516636403
    }
]