[
    {
        "content": "<p><a href=\"https://wolandscat.net/2019/05/05/a-fhir-experience-consistently-inconsistent/#more-1520\" target=\"_blank\" title=\"https://wolandscat.net/2019/05/05/a-fhir-experience-consistently-inconsistent/#more-1520\">https://wolandscat.net/2019/05/05/a-fhir-experience-consistently-inconsistent/#more-1520</a></p>",
        "id": 164911801,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1557049848
    },
    {
        "content": "<p>it's an interesting mix of valid and invalid criticisms</p>",
        "id": 164911815,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557049887
    },
    {
        "content": "<p>we have been looking at trying to harmonise some of it. e.g. \"Product\" discussions, wondering if devices, meds should be specialisations...<br>\nand in terms of workflow  where \"giving / given something to a patient\" is still a rather different set of resources dependng if it's a medication or a device or nutrition..<br>\nand things still in progress like one \"MedicationDefinition\" for catalogs.</p>",
        "id": 164912134,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1557050393
    },
    {
        "content": "<p>I would not want to model for modeling sake.</p>",
        "id": 164912194,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1557050455
    },
    {
        "content": "<p>however it is interesting to have this feedback and see if we should do content- or process-wise</p>",
        "id": 164912210,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1557050507
    },
    {
        "content": "<p>*and see if we should do something content- or process-wise</p>",
        "id": 164912261,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1557050558
    },
    {
        "content": "<p>Yes.  Agree with Grahame's assessment.  I expect that some of the inconsistencies may be possible (and useful) to address in R5.</p>",
        "id": 164912273,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1557050640
    },
    {
        "content": "<p>impact of this is not only on HL7's agility and consistency, but I am  interested in consistency helping implementers plan their roadmaps better, if they can grasp a full picture.</p>",
        "id": 164912408,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1557050816
    },
    {
        "content": "<p>I am not worried because some of these have reasons to be as they are, and the resources are not normative. but it is interesting to see we are being looked at in this aspect. <br>\nIs \"consistency\" relevant for FMM?</p>",
        "id": 164912473,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1557050927
    },
    {
        "content": "<p>to some degree, yes.</p>",
        "id": 164912704,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557051361
    },
    {
        "content": "<p>I can't even find one of the things he's talking about - the administration.ingredient one</p>",
        "id": 164912753,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557051385
    },
    {
        "content": "<p>but the heart of the matter is this: </p>\n<blockquote>\n<p>The general problem with failing to rationalise similar / same data structures and behaviour across a model environment is that little or no software reuse is achieved â€“ every item of data has its own separate piece of software, each with its own private semantics. Similarly, a similar lack of re-use of data or querying can occur: software has no way of knowing that, say, Ingredient and MedicationIngredient are fundamentally the same thing, and could be queried the same way</p>\n</blockquote>",
        "id": 164912773,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557051446
    },
    {
        "content": "<p>in fact, 2 data elements in different places share some degree of common semantics - somewhere between 0 and 100%. How much has to be common before the benefits of reuse kick in?</p>",
        "id": 164912826,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557051516
    },
    {
        "content": "<p>or I could summarise it as this: </p>\n<blockquote>\n<p>shorter Tom Beale: elements that I don't understand are clearly the same thing</p>\n</blockquote>",
        "id": 164912839,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557051547
    },
    {
        "content": "<p>but we certainly have a problem with element names that do or don't precoordinate the type into the name</p>",
        "id": 164912843,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557051591
    },
    {
        "content": "<p>Agree.</p>",
        "id": 164912914,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1557051613
    },
    {
        "content": "<p>ServiceRequest.instantiatesCanonical and ServiceRequest.instantiatesUri is a particularly problematic example</p>",
        "id": 164912915,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557051616
    },
    {
        "content": "<p>yes, for sure</p>",
        "id": 164912922,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1557051644
    },
    {
        "content": "<blockquote>\n<p>in fact, 2 data elements in different places share some degree of common semantics - somewhere between 0 and 100%. How much has to be common before the benefits of reuse kick in?<br>\nor I could summarise it as this:<br>\nshorter Tom Beale: elements that I don't understand are clearly the same thing</p>\n</blockquote>\n<p>that would be it, for me: we should not aim at 100% consistency for the sake of consistency. My experience would be something like - as long as the meaning is clear and I know whether other contexts share the same meaning or not, we are ok. So if I don't understand the difference, it's the same to me. </p>\n<p>In my previous projects I had to avoid too many ontology discussions and focus on definin information models so that it works and data is reusable when it needs to be reused.<br>\nThis way, semantic consistency is not a prerequisite, but a process, driven by need.</p>",
        "id": 164913115,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1557052044
    },
    {
        "content": "<p>and this is why i mentioned the device-medication boundary as example of work we are doing. Device vs Med It's an arbitrary, fuzzy and moving boundary, but we now start to see the need to harmonise - e.g. for supply, or for catalogs, these should be handled in similar way, because a) implementers need only develop functionality once (recalls, traceability, deliveries) and b) what is today a device is tomorrow a med.</p>",
        "id": 164913309,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1557052338
    },
    {
        "content": "<p>ServiceRequest.instantiatesCanonical and instantiatesUri are that way because they repeat.  If we made them polymorphic, we'd have to nest them inside something.  (And that parttern should actually be being followed most places for 'instantiates'.)</p>",
        "id": 164914116,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1557053836
    },
    {
        "content": "<p>That said, there are a bunch of places where the names are inconsistent for no good reason.  We do, however, hear screams of anguish when we 'fix' those problems as \"renaming elements for no good reason\".</p>",
        "id": 164914166,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1557053892
    },
    {
        "content": "<p>What's not clear is exactly how much software re-use we would ever reasonably get in 'simple' systems - those not trying to do decision support or other complex activities.  Our objective is, and always has been, to keep things as simple as possible for the 'dumb' systems, recognizing that doing so increases complexity for more sophisticated systems - e.g. those doing decision support.</p>",
        "id": 164914241,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1557054006
    },
    {
        "content": "<blockquote>\n<p>We do, however, hear screams of anguish when we 'fix' those problems as \"renaming elements for no good reason\"</p>\n</blockquote>\n<p>Wouldn't happen if we got them consistent in the first place.</p>",
        "id": 164914590,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557054656
    },
    {
        "content": "<p>Consistent in the first place means being model-driven rather than requirements-driven - we already know how that plays out.</p>",
        "id": 164915200,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1557055629
    },
    {
        "content": "<p>doesn't mean we can't try harder. at least some of those are amenable to doing something about with out ending up in absolutist insanity</p>",
        "id": 164917468,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557059539
    },
    {
        "content": "<p>Agree.  Push patterns futher into the build/QA process?</p>",
        "id": 164918031,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1557060575
    },
    {
        "content": "<p>And have a document that has a list of Best Practices Names for Elements so people aren't starting from scratch.</p>",
        "id": 164920247,
        "sender_full_name": "David Pyke",
        "timestamp": 1557064148
    },
    {
        "content": "<p>well, we already have one of those ;-)</p>",
        "id": 164921288,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557065899
    },
    {
        "content": "<p>model-driven or model-aware? I don't think we need to first model the universe and then go down to detail, but we don't need an excuse  for having similar things modeled differently. that happens too often without any help already. we could however ensure that as part of our process (e.g. FMM) we check consistency as a criteria.</p>",
        "id": 164921861,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1557066820
    },
    {
        "content": "<p>requirements-driven may be perceived by some as \"patching things as requirements appear\" - which will dlead to breaking changes. I have several examples on FHIR but also IRL, where a system supported traceability for medical devices by having a serial number, but for medication, this was on the roadmap for 3 years later.</p>",
        "id": 164922006,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1557067042
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  patterns checking in the QA processes would help. <br>\nI think it would also help that when things are about harmonisation, the decision by the committee or FMG must consider the  broader scope. To avoid that a committee says \"we acklowledge the pattern but we don't consider this in our current scope and we have a deviation from the pattern\" - which has happened and only causes debt.</p>",
        "id": 164922150,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1557067241
    },
    {
        "content": "<p>Scope is determined by the resource proposal.  If the resource scope excludes the case, that's fine.  If it includes it, it has to be dealt with - though it might still be outside the 80%.</p>",
        "id": 164922693,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1557067970
    },
    {
        "content": "<p>problem is that as we advance, the scope suddenly increases more use cases, and things become part of the 80% and we are in the same situation - patchwork.</p>",
        "id": 164922940,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1557068319
    },
    {
        "content": "<p>just to be clear, this is not a new problem. nor am I echoing the blog article's critic view. <br>\nI am happy with our evolutive model, but I see pitfalls and we should enforce the good practices so that the quality of the work is consistent.</p>",
        "id": 164923120,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1557068561
    },
    {
        "content": "<p>We do our best to establish scope based on anticipated future needs, though agree that's not always successful.</p>",
        "id": 164923523,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1557069221
    },
    {
        "content": "<blockquote>\n<p>We do our best to establish scope based on anticipated future needs, though agree that's not always successful.</p>\n</blockquote>\n<p>and i don't think we can significantly change that upfront without adding considerable burden. Progressive harmonisation is ok, and should be built in the process and QA mechanisms , especially to avoid reactions like you mention \"for no good reason\" or \"because we are told to do it this way but we don't understand or agree\".</p>",
        "id": 164929776,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1557079764
    },
    {
        "content": "<p>Good post. And good challenge for FHIR community. I disagree OOP modeling is the only sollution. It worth to take a look at semantic web/rdf approach,  which from my point of view much more elegant than oop and built with open world assumption! Most of inconsistency i see in post is on attribute level, so if in FHIR we will extract elements as first class resources and make them reusable we can solve most of claims in this post. Recomendation for WGs can be - lookup element between existing before create specialized one, cross harmonize shared elements. To do this first step we do not need a lot of formalism and tooling. But at some point in time we can use descriptive logic for consistency checks,  which much more better defined than oop approaches.</p>",
        "id": 165227504,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1557382825
    },
    {
        "content": "<p><a href=\"https://arxiv.org/pdf/1201.4089.pdf\" target=\"_blank\" title=\"https://arxiv.org/pdf/1201.4089.pdf\">https://arxiv.org/pdf/1201.4089.pdf</a></p>",
        "id": 165227666,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1557383067
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/M3JQyfAl135T4qVHMjKPfH2P/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/M3JQyfAl135T4qVHMjKPfH2P/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/M3JQyfAl135T4qVHMjKPfH2P/pasted_image.png\"></a></div>",
        "id": 165228158,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1557383718
    },
    {
        "content": "<p>As well i envision with Element approach we will be closer to first-class extensions and backward/forward compatibility for FHIR - \"publishing next version of the standard as a set of extensions\"!</p>",
        "id": 165228299,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1557383916
    },
    {
        "content": "<p>the problem is that elements do not get defined outside a specific context</p>",
        "id": 165239212,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557396473
    }
]