[
    {
        "content": "<p>I would like to include in the examples resources that have hand written narrative but also like the auto generated  that comes from the build. Is there a way to ask the build to use some .text narrative and also generate the typical generated narrative?</p>",
        "id": 199802208,
        "sender_full_name": "John Moehrke",
        "timestamp": 1591301236
    },
    {
        "content": "<p>how would that work? <br>\nconcatenate both generated text and manually entered text in text.narrative? <br>\nwhat would be the status of the narrative? generated or additional (because it seems to include both)</p>",
        "id": 199806000,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1591303398
    },
    {
        "content": "<p>I was invisioning the .text element text would be used, followed by the generated... but I really don't know. I am MORE wondering if this already exists</p>",
        "id": 199807987,
        "sender_full_name": "John Moehrke",
        "timestamp": 1591304505
    },
    {
        "content": "<p>the alternative is to do a build having it be generated, copy that manually; and from that point forward use the original generation... which means that if anything ever moves around or improvements in generation ever happen that they would never work for that example. I can do this, but it seems draconian.</p>",
        "id": 199808154,
        "sender_full_name": "John Moehrke",
        "timestamp": 1591304592
    },
    {
        "content": "<p>I don't know - .text is 0..1, and both Narrative and DomainResource are Normative..</p>",
        "id": 199809644,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1591305485
    },
    {
        "content": "<p>I was asking if the build had a trick.. not if it was core to FHIR</p>",
        "id": 199809852,
        "sender_full_name": "John Moehrke",
        "timestamp": 1591305615
    },
    {
        "content": "<p>IIRC, I think that once you have some .text the build does not touch it.</p>",
        "id": 199809880,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1591305636
    },
    {
        "content": "<p>I don't think the narrative accepts a starting text or something like  that.</p>",
        "id": 199809982,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1591305713
    },
    {
        "content": "<p>that is my experience</p>",
        "id": 199810763,
        "sender_full_name": "John Moehrke",
        "timestamp": 1591306182
    },
    {
        "content": "<p>hence the ask</p>",
        "id": 199810767,
        "sender_full_name": "John Moehrke",
        "timestamp": 1591306186
    },
    {
        "content": "<p>no this is binary at the moment - the build either generates the narrative or leaves it alone</p>",
        "id": 199830031,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591323175
    },
    {
        "content": "<p>We could possibly add a publisher flag that would throw the generated narrative into an extension.  It would either need to be an escaped string or base64-encoded though because we don't allow XHTML content as an extension value.</p>",
        "id": 199832731,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1591327483
    },
    {
        "content": "<p>Once that was done, the publisher could theoretically spit out a second fragment that a template could render in a separate tab or something.  Not a small amount of effort to make happen overall...</p>",
        "id": 199832747,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1591327538
    },
    {
        "content": "<p>I  am fine with the answer I just didn't want to do a bunch of handcrafting when I could have just turned on a switch.</p>",
        "id": 199867483,
        "sender_full_name": "John Moehrke",
        "timestamp": 1591359438
    },
    {
        "content": "<p>maybe a feature request could be -- given how the examples all have a \"See also the XML, JSON, or Turtle format\".  could we have another link added with the auto-generated view of the content that ignores the .text element?</p>",
        "id": 199907195,
        "sender_full_name": "John Moehrke",
        "timestamp": 1591377142
    },
    {
        "content": "<p>We could, but it would be redundant if that was the source for the 'official' narrative.</p>",
        "id": 199907548,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1591377336
    },
    {
        "content": "<p>yup. but that case could be detected</p>",
        "id": 199907660,
        "sender_full_name": "John Moehrke",
        "timestamp": 1591377371
    },
    {
        "content": "<p>not really strongly caring for this.</p>",
        "id": 199907731,
        "sender_full_name": "John Moehrke",
        "timestamp": 1591377414
    }
]