[
    {
        "content": "<p>I'd thought that I'd seen something about Basic somewhere, but now can't find it.</p>",
        "id": 191808426,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1585169034
    },
    {
        "content": "<p><a href=\"https://github.com/argonautproject/subscriptions/blob/master/backport-to-r4.md\" title=\"https://github.com/argonautproject/subscriptions/blob/master/backport-to-r4.md\">https://github.com/argonautproject/subscriptions/blob/master/backport-to-r4.md</a></p>",
        "id": 191808715,
        "sender_full_name": "Paul Church",
        "timestamp": 1585169180
    },
    {
        "content": "<p>How basic!</p>",
        "id": 191810511,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1585170113
    },
    {
        "content": "<p>when I find a link for someone it technically counts as googling it, just less efficiently than normal and with fewer ads</p>",
        "id": 191811819,
        "sender_full_name": "Paul Church",
        "timestamp": 1585170789
    },
    {
        "content": "<p>(You can always paste ads here. Pretty sure our community guidelines don't address this... yet.)</p>",
        "id": 191811988,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1585170882
    },
    {
        "content": "<p>With the cms deadline for ADT notifications, and the r5 publication date  seemingly forever away -- I wonder if there aren't additional options for stabilizing our subscriptions work sooner, so that it can be used in prod.</p>",
        "id": 191834167,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1585189665
    },
    {
        "content": "<p>I think that subscriptiontopic (and the changes to subscription) are stable, why must we wait for the rest of r5 to use it? I don't consider a profile on basic to be sufficiently accessible to implementers.</p>",
        "id": 191834338,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1585189850
    },
    {
        "content": "<p>They aren't all that stable right now given that I have a backlog of items to update (modeling changes around the bundles+extensions is major, plus a laundry list of minor ones).</p>\n<p>Been slightly derailed, or the next pass would be up already.<br>\nEdit: current plan is to have it up before April 1.</p>",
        "id": 191835637,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1585191437
    },
    {
        "content": "<p>Thanks, Gino. I'm pretty sure that the adt notifications requirement is six months from now-ish. What are creative ways to enable fhir subscriptions to meet this requirement?</p>",
        "id": 191835788,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1585191619
    },
    {
        "content": "<p>No problem Isaac.  I'm trying to get this done as aggressively as possible and I'm hopeful that after the next pass we'll be done with breaking changes (the April 1 deadline is so that we can test at the Connectathon in May).</p>\n<p>I'd say that we should know where we stand after the Connectathon.  Assuming nothing else major pops up, the models will pretty much be what we need for ballot in the following cycle.  With push from (announcer voice) vendors like you! (/announcer voice), we can try to accelerate more, but I'm drawing a blank on how (will think on it).</p>",
        "id": 191836240,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1585192229
    },
    {
        "content": "<p>Theoretically we could do an STU update.  Technically those can happen without ballot, though we'd have to squint pretty hard to decide that was an appropriate mechanism for such a radical revamp.  Tricky bit is that if we wanted to ballot, the earliest we could do at this point would likely be Sept. - though we might be able to push for an out-of-cycle and do the balloting sooner.</p>",
        "id": 191840403,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1585198607
    },
    {
        "content": "<p>Until that time, would it be possible to add Extensions to R4 Subscription to handle the basic use cases and address the issues?</p>",
        "id": 191875919,
        "sender_full_name": "David Pyke",
        "timestamp": 1585225481
    },
    {
        "content": "<p>We've looked at this before, and I'm not sure it's possible to merge the two with all of the breaking changes.  Once I have the next pass of updates done I'll revisit to see if it's possible (and encourage everyone else to do the same).</p>",
        "id": 191896253,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1585234628
    },
    {
        "content": "<blockquote>\n<p>Until that time, would it be possible to add Extensions to R4 Subscription to handle the basic use cases and address the issues?</p>\n</blockquote>\n<p>We started there and decided to use Basic instead... Why is using Basic a problem?</p>",
        "id": 192069923,
        "sender_full_name": "Eric Haas",
        "timestamp": 1585337975
    },
    {
        "content": "<p>In my opinion, because of the depth of the extensions necessary to turn basic into a useful Resource.  If we add capabilities to Subscription, we can minimize the need for customization.</p>",
        "id": 192070405,
        "sender_full_name": "David Pyke",
        "timestamp": 1585338256
    },
    {
        "content": "<blockquote>\n<p>In my opinion, because of the depth of the extensions necessary to turn basic into a useful Resource. If we add capabilities to Subscription, we can minimize the need for customization.</p>\n</blockquote>\n<p>Have you looked at the<a href=\"https://github.com/argonautproject/subscriptions/blob/master/backport-to-r4.md\" title=\"https://github.com/argonautproject/subscriptions/blob/master/backport-to-r4.md\">Backported R5 Subscrition proposal</a>?  Is not deeply nested extensions rather a single json string...</p>\n<p>e.g.</p>\n<div class=\"codehilite\"><pre><span></span>{\n  &quot;resourceType&quot;: &quot;Basic&quot;,\n  &quot;code&quot;: {\n    &quot;coding&quot;: [\n      {\n        &quot;system&quot;: &quot;http://hl7.org/fhir/resource-types&quot;,\n        &quot;code&quot;: &quot;R5Subscription&quot;\n      }\n    ]\n  },\n  &quot;subject&quot;: {\n    &quot;reference&quot;: &quot;Patient/58&quot;\n  },\n  &quot;extension&quot;: [\n    {\n      &quot;url&quot;: &quot;http://hl7.org/fhir/StructureDefinition/json-embedded-resource&quot;,\n      &quot;valueString&quot;: &quot;{\\&quot;resourceType\\&quot;:\\&quot;Subscription\\&quot;,\\&quot;channel\\&quot;:{\\&quot;endpoint\\&quot;:\\&quot;https://client.subscriptions.argo.run/Endpoints/b962286c-d1c6-4b13-a409-8df2a7208fb8\\&quot;,\\&quot;header\\&quot;:[],\\&quot;heartbeatPeriod\\&quot;:60,\\&quot;payload\\&quot;:{\\&quot;content\\&quot;:\\&quot;id-only\\&quot;,\\&quot;contentType\\&quot;:\\&quot;application/fhir+json\\&quot;},\\&quot;type\\&quot;:{\\&quot;coding\\&quot;:[{\\&quot;code\\&quot;:\\&quot;rest-hook\\&quot;,\\&quot;display\\&quot;:\\&quot;Rest Hook\\&quot;,\\&quot;system\\&quot;:\\&quot;http://terminology.hl7.org/CodeSystem/subscription-channel-type\\&quot;,\\&quot;userSelected\\&quot;:false}],\\&quot;text\\&quot;:\\&quot;REST Hook\\&quot;}},\\&quot;end\\&quot;:\\&quot;2019-09-20T15:21:28.427Z\\&quot;,\\&quot;eventCount\\&quot;:0,\\&quot;filterBy\\&quot;:[{\\&quot;matchType\\&quot;:\\&quot;=\\&quot;,\\&quot;name\\&quot;:\\&quot;patient\\&quot;,\\&quot;value\\&quot;:\\&quot;Patient/58\\&quot;}],\\&quot;reason\\&quot;:\\&quot;Client Testing\\&quot;,\\&quot;status\\&quot;:\\&quot;requested\\&quot;,\\&quot;topic\\&quot;:{\\&quot;reference\\&quot;:\\&quot;https://server-r4.subscriptions.argo.run/Basic/1\\&quot;}}&quot;\n    }\n  ]\n}\n</pre></div>",
        "id": 192286887,
        "sender_full_name": "Eric Haas",
        "timestamp": 1585588165
    },
    {
        "content": "<p>What I see there, if I'm reading it correctly, is that you've embedded a resource in a valueString.  I'm not sure that's better than nested extensions nor better than profiling the R4 Subscription resource.  It's likely that I'm coming into this late and the reason for this design isn't clear to me.</p>",
        "id": 192295260,
        "sender_full_name": "David Pyke",
        "timestamp": 1585591589
    },
    {
        "content": "<p>No worries!  From my perspective:</p>\n<ul>\n<li>There are multiple resources needed (e.g., <code>Subscription</code>, <code>SubscriptionTopic</code>).  Using <code>Basic</code> lowers the implementation burden as far as endpoints, etc.</li>\n<li>Various fields in <code>Subscription</code> have moved and/or been renamed - this requires mapping in addition to extensions.</li>\n<li>Clarity for versioning (e.g., no interference with existing R4 implementations)</li>\n<li><code>Basic</code> works.</li>\n<li>R5 is still under development.<ul>\n<li>Any R4 modeling would need to be updated consistently.</li>\n<li>I haven't heard of anyone volunteering to model the extensions and mappings and keep them in sync.</li>\n</ul>\n</li>\n</ul>\n<p>Beyond that, both the 'how' on defining notification triggers and the 'what' of payloads are quite different.  I'm unclear what the advantage is for trying to conflate the two versions, given that an implementation would likely just fork out one vs. the other anyway.</p>",
        "id": 192297626,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1585592696
    },
    {
        "content": "<p>I personally think this is better than adding a dozen extensions or really complex extensions to Subscription</p>",
        "id": 192299191,
        "sender_full_name": "Eric Haas",
        "timestamp": 1585593458
    },
    {
        "content": "<p>You're probably right. If the goal is to duplicate R5 in R4, then this is likely better/easier.  I was hoping that we could put a uncomplicated fix in to the R4 resource to make something usable for now and let the R5 one get more mature.</p>",
        "id": 192300307,
        "sender_full_name": "David Pyke",
        "timestamp": 1585594022
    },
    {
        "content": "<p>Haven't figure out a path for that - if it were just adding a few fields we wouldn't have needed a redesign.</p>",
        "id": 192300549,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1585594127
    },
    {
        "content": "<p>That makes good sense</p>",
        "id": 192300971,
        "sender_full_name": "David Pyke",
        "timestamp": 1585594316
    },
    {
        "content": "<p>Getting  back to this, I know Gino is really swamped with many more urgent tasks. In the mean time, is there anything that I can help with the state of R5 subscription, notification and topic changes in the current build? Is there a need to prepare for WG approvals? I am hoping that if there is a decent R5 set of proposed changes, there can be a second look at the Argonaut Subcriptions IG that can go beyond using the Basic resource.</p>",
        "id": 194500244,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1587157732
    },
    {
        "content": "<p>Vassil, you have great timing!  I am cleaning up the build right now to push the next pass of changes up.  I hope to have it before end of business today.</p>\n<p>From there, I am hopeful that it's mostly documentation (writing/reviewing/etc.).</p>",
        "id": 194502552,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1587159140
    },
    {
        "content": "<p>Great! Is this the R5 CI build?</p>",
        "id": 194507984,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1587162512
    },
    {
        "content": "<p>Yes, still in the branch I've been working on for now.  Unfortunately the resource changes/renames are difficult to sort through.</p>",
        "id": 194508403,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1587162859
    },
    {
        "content": "<p>Blah.  Issues with the new bundle type and sorting out all the invariants.  Giving up for tonight.</p>",
        "id": 194517878,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1587171476
    },
    {
        "content": "<p>If you want to share your branch, I can try to help in figuring these out next week...</p>",
        "id": 194522119,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1587178124
    },
    {
        "content": "<p>I don't think there is  an easy way to backport to R4 as discussed above the R4 and R5 are completely different and trying to shoehorn in extensions into R4 is more complex and more work that the proposed Basic approach.</p>",
        "id": 194565128,
        "sender_full_name": "Eric Haas",
        "timestamp": 1587246306
    },
    {
        "content": "<p>I would much rather that the R5 subscription adaptation in R4 still be an actual Subscription. What is the problem with just using extensions?</p>",
        "id": 194565485,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1587246841
    },
    {
        "content": "<p>This is the difference between the two:<br>\n<a href=\"/user_uploads/10155/WW_SwMxC5VnEs-42Bz2uUzKq/image.png\" title=\"image.png\">image.png</a> <br>\nAnd SubscriptionTopic doesn't even exist in R4, and is a critical component.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/WW_SwMxC5VnEs-42Bz2uUzKq/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/WW_SwMxC5VnEs-42Bz2uUzKq/image.png\"></a></div>",
        "id": 194574943,
        "sender_full_name": "Keith Boone",
        "timestamp": 1587263694
    },
    {
        "content": "<p>so put some random fixed value in criteria, and use extensions for the other things.... then you're still using Subscription</p>",
        "id": 194586873,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1587286351
    },
    {
        "content": "<p>SubscriptionTopic isn't so obvious so I didn't raise that one...</p>",
        "id": 194586880,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1587286373
    },
    {
        "content": "<p>but hiding R5 resources inside basic.... I don't know why to even bother</p>",
        "id": 194586886,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1587286391
    },
    {
        "content": "<p>I was thinking for SubscriptionTopic we could actually have an extension that used valueReference(Binary), where the Binary would actually be the R5 SubscriptionTopic resource content.</p>",
        "id": 194603859,
        "sender_full_name": "Keith Boone",
        "timestamp": 1587311220
    },
    {
        "content": "<p>Or even, an extension in R4 Subscription pointing to a canonical, non-resolvable SubscriptionTopic, and then the R4 IG's define the meaning of the topic using language that equates to an R5's SubscriptionTopic's elements.</p>",
        "id": 194723896,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1587412177
    },
    {
        "content": "<p>To be clear, I'm not opposed to something \"more modeled\", but I would like to get the R5 version sorted first.  If we're still modifying those (which we are), then we're just multiplying our work.  This was one of the reasons <code>Basic</code> was proposed when we were pressed for something last year.</p>\n<p>That said, if we want to go with a more defined backport for R4:</p>\n<ul>\n<li><code>Subscription</code> needs extensions/mappings</li>\n<li>Need a way to define and link to a <code>SubscriptionTopic</code></li>\n<li>Payloads need sorting: current R5 is a new type of <code>Bundle</code> (<code>subscription-notification</code>) containing a new resource (<code>SubscriptionStatus</code>)</li>\n<li>anything I've missed? (spent a few minutes thinking, but I haven't been thorough)</li>\n</ul>\n<p>Nothing feels insurmountable, but there's work there.  I'm happy to help sketch out what is needed, but I don't have cycles to spare until the R5 stuff is ready.</p>",
        "id": 194735857,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1587418059
    },
    {
        "content": "<p>Perhaps a meeting could be scheduled for this just to review?  I think I have cycles that could be used to work on the backport</p>",
        "id": 194736851,
        "sender_full_name": "David Pyke",
        "timestamp": 1587418652
    },
    {
        "content": "<p>I am also interested in a meeting.</p>",
        "id": 194743410,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1587423295
    },
    {
        "content": "<p>I am not....I am am curious why there is a rush to discard the current Basic approach which is easy peasy and straightforward but lets go ahead and make it insanely complicated. ... I thought about adding all these extensions to R4 Subs a year ago when @Josh  ( or @GIno or somebody smarter than me) suggested Basic <a href=\"https://github.com/argonautproject/subscriptions/blob/master/backport-to-r4.md\" title=\"https://github.com/argonautproject/subscriptions/blob/master/backport-to-r4.md\">his reasoning</a> then is equally sound today.</p>",
        "id": 194747030,
        "sender_full_name": "Eric Haas",
        "timestamp": 1587426760
    },
    {
        "content": "<p>Others think the Basic approach is complicated and their approach simpler.  There's no hard and fast rule as to what is easy or hard, it depends on what the assessor of easy/hard is comfortable with.  Rework of any approach sucks, but later rework sucks a lot more than earlier rework.  So it might be worth rehashing.  Your mileage may vary.</p>",
        "id": 194772837,
        "sender_full_name": "Keith Boone",
        "timestamp": 1587457412
    },
    {
        "content": "<p>I don't like the Basic use for subscription because subscription gets special treatment in the server. I don't really want to look at Basic like that</p>",
        "id": 194780152,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1587462190
    },
    {
        "content": "<p>Josh initially proposed <code>Basic</code>, but we both fleshed it out with feedback from the Argonaut (and other group) calls.</p>\n<p>If implementers think another solution is better now... that's why we do this over time and in the open.  I will stand with Past-Me that <code>Basic</code> was the right call at the time.  I'll even go as far as to say that I'd prefer continuing with <code>Basic</code> until the R5 version is ready for ballot because:</p>\n<ul>\n<li>I don't want to thrash on this</li>\n<li>I don't want backporting to interfere with new development<ul>\n<li>double the work (core and extensions need updating)</li>\n<li>change resistance from the extra work</li>\n<li>trying to shoehorn things in instead of defining them properly</li>\n<li>etc.</li>\n</ul>\n</li>\n</ul>\n<p>Personally, I think we need to focus on the getting it right for R5 before spending effort backporting (e.g., documenting and revising the current models on <a href=\"http://build.fhir.org/branches/argonaut-subscription/subscription.html\" title=\"http://build.fhir.org/branches/argonaut-subscription/subscription.html\">this branch</a> so it can be merged into master and we can have a good connectathon).  Just looking at the models from when <code>Basic</code> was proposed versus where the models are today, they are vastly different.</p>\n<p>With all of that said, if people want to spend time on it - it's not my time to spend  :-).</p>",
        "id": 194824990,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1587485280
    },
    {
        "content": "<p>Being able to perform 'special behavior' for Basic resources will, I think, be somewhat normal...</p>",
        "id": 194841484,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1587492894
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span> I typiclly cut a new version to support the connectathon 5-6 weeks before the connectathon so that people have a stable version to target. I have not done that this time, but I've been asked to do it now. The subscription track is the primary user of R5 in the coming connectathon - what is the likely course towards a stable version?</p>",
        "id": 194852378,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1587498500
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> , I'm fixing an error Josh noticed (made the channel type a <code>code</code> instead of <code>Coding</code>) right now, but hope to have that pushed in the next few minutes (taking longer because I'm fixing all the codes that are used in multiple resources to be value sets as well).</p>\n<p>Documentation is lagging, but as far as I know this has all* the model changes that have been sent to me.  As of right now, we asked for a slot on Monday's FHIR-I call to look it over before merging into the master branch, but to my knowledge that isn't a requirement - so it can be done any time people are happy with it.</p>\n<p>*There is one that's been brought up to me but not discussed: adding the ability to define a <code>SubscriptionTopic</code> trigger based on an defined event e.g.: system: HL7V2, code: GMC-C3456789.  I think it makes sense, but would prefer discussion before adding it.</p>",
        "id": 194853603,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1587499194
    },
    {
        "content": "<p>so early next week after the FHIR-I call then</p>",
        "id": 194853746,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1587499252
    },
    {
        "content": "<p>That would be my preference.</p>",
        "id": 194853868,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1587499317
    },
    {
        "content": "<p>Hey all, this is a topic at our connectathon that came up and I want to make sure I understand the desired endstate and use cases for the backport. We were considering having a breakout on this. If I look at one of the use cases that <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span>  brought up, it was to meet an upcoming CMS use case around ADT. I am curious if there are others.</p>",
        "id": 197720020,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1589561397
    },
    {
        "content": "<p>Some thoughts: this isn't \"backporting\" R5 to R4, since R5 won't be released in time/timing of R5 is the main driver of the backport. Given that, we're actually going to need to choose a snapshot to backport. As an example, even the changes in build today have trackers we're logging during the connectathon.</p>",
        "id": 197720256,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1589561472
    },
    {
        "content": "<p>So even if we think it's \"stable\" I would assume we'll get feedback to change between the final ballot version for R5 and the final R5. I think that's fine, but want to make sure this is a shared understanding</p>",
        "id": 197720399,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1589561519
    },
    {
        "content": "<p>Second, as a personal opinion: I don't think the target would be to back patch a fully functional R5-like subscription. You may need to give up some functionality to make sure it's \"simple\"</p>",
        "id": 197720492,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1589561560
    },
    {
        "content": "<p>In that hope, understanding what people want to use this for will help identify what all we need to worry about</p>",
        "id": 197720564,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1589561601
    },
    {
        "content": "<p>IE: does dynamic topic query qualify as a \"must have\" ?</p>",
        "id": 197720597,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1589561621
    },
    {
        "content": "<p>Or would agreement out of band work for that? IE: here are the canonical \"topics\" I support (meets the ADT use case), and an extension (there would be more than one) on subscription to define which they are subscribing to?</p>",
        "id": 197720693,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1589561660
    },
    {
        "content": "<p>Jenni - I think that there really is a narrow, do-able path for a backport, involving: rest-hooks only, id-only only, canonical topics only and Notifications. cc/ <span class=\"user-mention\" data-user-id=\"192587\">@David Pyke</span> <br>\nWould it make sense to talk about this today?</p>",
        "id": 197720731,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1589561683
    },
    {
        "content": "<p>It would be great if we could find a time. <span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span>  <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191387\">@Keith Boone</span>  not sure if you all are available or interested?</p>",
        "id": 197720837,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1589561742
    },
    {
        "content": "<p>I'm good with where things stand.  As we've end-run the need for the project I'm working on and will move to R5 subscriptions when released, I'm happy.</p>",
        "id": 197720848,
        "sender_full_name": "David Pyke",
        "timestamp": 1589561751
    },
    {
        "content": "<p>I'm cleaning up a list of issues I've run into while tinkering with the backport stuff.  I can post it here and hopefully we can chat.</p>",
        "id": 197720854,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1589561755
    },
    {
        "content": "<p>I'm fairly flexible after about the next hour.</p>",
        "id": 197720946,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1589561784
    },
    {
        "content": "<p>Availability is uncertain.  My primary objective is to be able to point to something that's implementable in R4 that EHRs are actually likely to roll out (given that the consensus seems to be that the subscription approach defined in R4 is problematic).  Some of Da Vinci just needs to be able to monitor for the response to a request (so Task or maybe something else).  The Notification project has a bit wider requirements</p>",
        "id": 197722613,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1589562521
    },
    {
        "content": "<p>I'm interested, but it's not clear whether i missed this?</p>",
        "id": 197728456,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589565266
    },
    {
        "content": "<p>Hasn't had an agreed-to time yet</p>",
        "id": 197729535,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1589565684
    },
    {
        "content": "<p>We talked some in the earlier meet-time, and would welcome more at the next at 5:00 EDT.</p>",
        "id": 197729590,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1589565713
    },
    {
        "content": "<p>well, I'm awake and I don't yet have other break outs</p>",
        "id": 197730837,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589566266
    },
    {
        "content": "<p>Sounds good.  Jenni is in another meeting for the next hour or so, but the <a href=\"https://zoom.us/j/2565638242\">room</a> is open for discussion any time beyond the check-in as well.</p>",
        "id": 197731175,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1589566459
    },
    {
        "content": "<p>We have talked about this ADT using Backported Subscriptions specifically for DaVinci Notifications next R4 version.  So I would like to be involved</p>",
        "id": 197745699,
        "sender_full_name": "Eric Haas",
        "timestamp": 1589572905
    },
    {
        "content": "<p>We can talk about this at our normal 5 EDT Subscription check in if you all can join <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span></p>",
        "id": 197745898,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1589573018
    },
    {
        "content": "<p>zoom link so you don't have to go to the track page: <a href=\"https://zoom.us/j/2565638242\">https://zoom.us/j/2565638242</a></p>",
        "id": 197746042,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1589573083
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span>  were you going to be able to join or conflicts?</p>",
        "id": 197752132,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1589576675
    },
    {
        "content": "<p>Here's my attempt at a summary of the May 2020 Connectathon break out call where we discussed this:</p>\n<ul>\n<li>Use cases are primarily to get subscription functionality as fast as possible - waiting until R5 is final won't work</li>\n<li>It is ok to target to specific use case needs<ul>\n<li>Limit to RestHook and email (public health and ADT notifications, DaVinci needs fit here)</li>\n<li>The SubscriptionTopic agreement can be out of band - not dynamic as R5 allows today.</li>\n<li>limit to id-only and empty</li>\n</ul>\n</li>\n<li>Goal: A small IG that defines how to do this<ul>\n<li>limited to use cases above</li>\n<li>Target date is Sept. DaVinci (or other IGs) can reference the Ballot version.</li>\n<li>Done as part of the Subscription PSS, but will need to follow IG proposal process</li>\n<li>Will need to be wrapped up by June to meet Sept timeline</li>\n<li><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span>  will help with the IG editing/process</li>\n<li><span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span>  <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span>  and <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span>  will work on getting examples drafted for extensions on Subscription and the notification (history bundle) with extensions vs. what Basic would look like.</li>\n</ul>\n</li>\n<li>Challenges<ul>\n<li>History bundle may be wonky still. <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  will look at what we propose and see what other options we may have.</li>\n<li>We think the Topic canonical URL can be provided on Subscription as an extension to indicate topic, could reuse criteria for filters?</li>\n</ul>\n</li>\n</ul>",
        "id": 197758822,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1589581158
    },
    {
        "content": "<p>Let me know if I missed something you all want in there or misstated</p>",
        "id": 197758836,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1589581176
    },
    {
        "content": "<p>just a clarification, we'd also limit to \"id-only\", right?</p>",
        "id": 197759203,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1589581464
    },
    {
        "content": "<p>I'd lean towards <code>empty</code> and <code>id-only</code> since that's what we landed on for all the other Argonaut pieces (long discussions around them)</p>",
        "id": 197759415,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1589581634
    },
    {
        "content": "<p>I added it above, but <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span>  may need to confirm</p>",
        "id": 197759543,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1589581713
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 197771443,
        "sender_full_name": "Eric Haas",
        "timestamp": 1589595753
    },
    {
        "content": "<p>I agree that this IG should focus on empty and id-only but disagree that the we constrain out resource.  I was under the impression the IG would talk cover the content model and transactions  but all the  business externalities that cover safety and security and risk are version agnostic and don't need to be rewritten.   I think that there will be use case where they want to push resources.</p>",
        "id": 197772288,
        "sender_full_name": "Eric Haas",
        "timestamp": 1589596980
    },
    {
        "content": "<p>For me, the concern is what it means to be compliant with the IG.  I don't intend to mean <code>full-resource</code> is be prohibited, but rather that <code>empty</code> and <code>id-only</code> are required for compliance, while servers may choose whether or not to implement <code>full-resource</code>.</p>\n<p>This is based on the feedback that many servers do not intend to support <code>full-resource</code> until more of the security implications are understood.</p>",
        "id": 197801278,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1589643487
    },
    {
        "content": "<p>R4 Subscriptions next steps...</p>\n<ol>\n<li>agreed to publish R4 IG ASAP (FHIR-I/Argo) - limited scope for R4</li>\n<li>Gino to write/I'll help edit and publish it.</li>\n</ol>\n<p>What about the ADT use case? :</p>\n<ul>\n<li>add to Argo guide  or  DaVinci?</li>\n</ul>",
        "id": 198019432,
        "sender_full_name": "Eric Haas",
        "timestamp": 1589859928
    },
    {
        "content": "<p>Eric, I'd suggest that adding this to the da vinci guide would have the broader impact.</p>",
        "id": 198019585,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1589860167
    },
    {
        "content": "<p>Backport notification question: while talking with <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> earlier today, he brought up the idea of making the notifications closer to the R5 versions by making <code>Bundle.entry[0]</code> be a <code>Basic</code> with all the extensions we need instead of putting them on <code>Bundle.meta</code>.</p>\n<p>I feel like it's more in line with R5 (easier for consumers to migrate), and will allow extensions on the root level instead of in meta.  But, it's a change from what's been discussed, so figured I would put it out there...  Thoughts?</p>",
        "id": 198936763,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1590606118
    },
    {
        "content": "<p>sounds good to me</p>",
        "id": 198970314,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1590625357
    },
    {
        "content": "<p>though you could also consider Parameters</p>",
        "id": 198970325,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1590625371
    },
    {
        "content": "<p>Parameters in R4 in Normative and states: </p>\n<blockquote>\n<p>This resource is a non-persisted resource used to pass information into and back from an operation. <strong>It has no other use</strong>, and there is no RESTful endpoint associated with it.</p>\n</blockquote>\n<p>So this would be breaking our own rules. ( not that we have not done that before)</p>",
        "id": 199059944,
        "sender_full_name": "Eric Haas",
        "timestamp": 1590689493
    },
    {
        "content": "<p>There is <a href=\"http://jira.hl7.org/browse/FHIR-26368\">FHIR#26368</a> and the subsequent <a href=\"http://jira.hl7.org/browse/FHIR-26390\">FHIR#26390</a> that try to address the use of Parameters beyond operations. This could be a use case for it, but arguably not in an IG based on R4.</p>",
        "id": 199061658,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1590690189
    },
    {
        "content": "<p>Hmm... I think I'd like to propose that we try to avoid such prohibitive text in the future.</p>\n<p>Playing with all the variations, I've liked <code>Parameters</code> the best so far.  I guess that makes it a question for the group-at-large: can it be used here?  I can see the argument either way: the text prohibits it, but can an IG override?<br>\n<span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span><br>\nEdit: or can this be ignored?</p>",
        "id": 199063415,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1590690888
    },
    {
        "content": "<p>We already agreed that the text Eric quoted is too narrow, though I think that this is a case that meets that intent anyway</p>",
        "id": 199069213,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1590693600
    },
    {
        "content": "<p>so that text should not prevent using Parameters here</p>",
        "id": 199069356,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1590693654
    },
    {
        "content": "<p>If people are comfortable with it, that works for me.</p>",
        "id": 199069459,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1590693707
    },
    {
        "content": "<p><strong>Super</strong> early pass of the backport IG is online at <a href=\"https://argonautproject.github.io/subscription-backport-ig/\">GH</a>.  Only parts of interest right now are the profiles, since documentation is essentially nonexistent (only partially-bulleted out).</p>\n<p>Have a voice!  Thoughts and feedback welcome/encouraged.</p>",
        "id": 199083342,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1590698304
    },
    {
        "content": "<p>For those of you reviewing, I took a stab at an example Subscription in R5 (snapshot 2) and what it would look like in R4: <a href=\"https://github.com/argonautproject/subscription-backport-ig/issues/1\">https://github.com/argonautproject/subscription-backport-ig/issues/1</a></p>",
        "id": 199174768,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1590768212
    },
    {
        "content": "<p>We would need to describe how to create the criteria... I assume it's using the resulting resource in Topic with the filter as query params, so that's what I modeled there</p>",
        "id": 199174867,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1590768248
    },
    {
        "content": "<p>I started adding the <a href=\"https://argonautproject.github.io/subscription-backport-ig/artifacts.html#example-example-instances\">examples</a>.  If you see anything wrong, please let me know.</p>",
        "id": 199183133,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1590772050
    },
    {
        "content": "<p>Question: writing up the finer details on what's required for conformance with the guide vs. what is described and optional.  Right now, I am leaning towards the same restrictions we came up with during the Argonaut calls: <code>empty</code> and <code>id-only</code>, <code>rest-hook</code> are required, and everything else is optional.</p>\n<p>Thoughts?</p>",
        "id": 199525447,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591118782
    },
    {
        "content": "<p>ok, so out of the body/content you get, empty and id-only are required for the server to support, and then for channel type rest-hook?</p>",
        "id": 199540586,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1591125759
    },
    {
        "content": "<p>I don't know if I realized id-only was actually required :) lol.</p>",
        "id": 199540608,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1591125777
    },
    {
        "content": "<p>I assume that's the argo-specific one since the spec doesn't require it.</p>",
        "id": 199540997,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1591125982
    },
    {
        "content": "<p>Yeah, just trying to open discussion on it really.  We could say that any one supported combination is valid as well.</p>",
        "id": 199544114,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591127624
    },
    {
        "content": "<p>Looking at <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span>'s example, I wonder why <code>http://hl7.org/fhir/us/subscriptions-backport/StructureDefinition/backport-topic-canonical</code> is a modifier extension? What does it modify?</p>",
        "id": 199701546,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591241032
    },
    {
        "content": "<p>I was originally wondering that as well, but realized it changes the interpretation of the criteria field</p>",
        "id": 199750363,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1591279099
    },
    {
        "content": "<p>IE: you can't just understand criteria to be able to send the notifications that the client requested</p>",
        "id": 199750434,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1591279126
    },
    {
        "content": "<p>My thought process is that linking to a <code>SubscriptionTopic</code> modifies the intention/processing of many other fields.  It changes the meaning of the subscription in a substantial way and if you cannot process the extension (e.g., you don't support topic-based subscriptions), you should not attempt to interpret the subscription request.</p>",
        "id": 199783323,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591292469
    },
    {
        "content": "<blockquote>\n<p>you can't just understand criteria to be able to send the notifications that the client requested</p>\n</blockquote>\n<p>This is not the same as 'it's a modifier extension'. Does it make the interpretation of the criteria wrong? My interpretation (of the undocumented example) was the criteria is incomplete, not interpreted differently</p>",
        "id": 199801449,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591300871
    },
    {
        "content": "<p>At a high level, I thought that changing the processing from R4-style to R5-style would change the meaning enough to merit a modifier (since the resource has different meaning/must be interpreted differently).  If that isn't the case, I'm fine with changing it back to a regular extension.</p>\n<p>My thinking is that if a server receives one of these subscription resources and don't use topics, the behavior will not match what the client expects (e.g., what is sent to the endpoint, when it is triggered, etc.).  I'm not sure what that entails across each endpoint type and if it would cause problems or not.  Since the subscription 'looks' otherwise valid, the server may begin processing it immediately.</p>",
        "id": 199804206,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591302381
    },
    {
        "content": "<p>can we list out the ways in which it would be wrong explicitly? That will help decide the question</p>",
        "id": 199805475,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591303103
    },
    {
        "content": "<p>Sure, here's a quick list (for the sake of current discussion).  This type of info should be included in the IG as well, but I am working on testing the implementation before I spend too much time documenting it (e.g., most of the info is still just in <a href=\"https://argonautproject.github.io/subscription-backport-ig/artifacts.html\">artifacts</a>).</p>\n<ul>\n<li>Server-side<ul>\n<li>Without a Topic, the criteria is evaluated as dataset to look for changes.</li>\n<li>This may cause performance issues for the server<ul>\n<li>Trying to trigger on every change to every observation (expecting the topic to filter for a particular set of interest)</li>\n</ul>\n</li>\n<li>This may create a subscription for a completely different intention<ul>\n<li>Particularly around method-based topic definitions (e.g., topics specifying 'delete' or 'create'), this will produce incorrect behavior</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>REST<ul>\n<li>R4 subscriptions send an empty post to the endpoint.  Backported REST notifications POST a bundle.</li>\n<li>Servers expecting a bundle will not process an empty post<ul>\n<li>The server will think it is correctly sending notifications and the client will not be receiving them</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Email<ul>\n<li>The expectations around email are established differently in R5/backport (e.g., body is human-readable, attachments are machine-readable).</li>\n<li>Paired with a server (potentially) sending too many messages, a server may get blacklisted, etc.</li>\n</ul>\n</li>\n<li>Messaging<ul>\n<li>This wasn't well defined in R4 either, so servers may have different implementations vs expectations</li>\n</ul>\n</li>\n</ul>",
        "id": 199808298,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591304672
    },
    {
        "content": "<p>so... the email thing doesn't sound different to me. At least, no different for my server. The Messaging thing doesn't seem clear. The server side things:</p>\n<ul>\n<li>performance issues - that doesn't change anything, so far as I can see. The issues already exist...</li>\n<li>different intention. Because things might be missed? </li>\n</ul>\n<p>REST - so you're saying that the presence of that extension triggers different server behavior when sending notiifcations?</p>",
        "id": 199808957,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591305113
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span>  I been looking at the build and examples and playing with a simple custom liquid template for better visualization ...<br>\n<a href=\"/user_uploads/10155/RslzuzSQztGwuGPtTuUOfEEd/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/RslzuzSQztGwuGPtTuUOfEEd/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/RslzuzSQztGwuGPtTuUOfEEd/image.png\"></a></div>",
        "id": 199810139,
        "sender_full_name": "Eric Haas",
        "timestamp": 1591305808
    },
    {
        "content": "<p>I'll make a pr and create on for the bundle profiles as well</p>",
        "id": 199810345,
        "sender_full_name": "Eric Haas",
        "timestamp": 1591305928
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179229-subscriptions/topic/any.20work.20backporting.20r5.20subscriptions.20to.20r4.3F/near/199808957\">said</a>:</p>\n<blockquote>\n<ul>\n<li>performance issues - that doesn't change anything, so far as I can see. The issues already exist...</li>\n<li>different intention. Because things might be missed? </li>\n</ul>\n</blockquote>\n<p>A topic will often specify a different intention from the criteria.  Blah, docs say you can have tables here, but they aren't working for me:</p>\n<div class=\"codehilite\"><pre><span></span><code>Topic Trigger                    | Criteria | Result\n---------------------------------+----------+-------------------------------------------------------\nDelete on Patient                | None     | Notification for every patient Created or Updated\nCreate on Patient                | None     | Notification for every patient Created or Updated\nCreate on vital sign observation | None     | Notification for every observation created or updated\n</code></pre></div>\n\n\n<blockquote>\n<p>REST - so you're saying that the presence of that extension triggers different server behavior when sending notiifcations?</p>\n</blockquote>\n<p>Yes, a major part of the changes were to allow for  both subscription information and different levels of content(<code>empty</code>, <code>id-only</code>, or <code>full-resource</code>) in notifications.  The IG defines how to do that <a href=\"https://argonautproject.github.io/subscription-backport-ig/StructureDefinition-backport-subscription-notification.html\">here</a>.</p>",
        "id": 199812612,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591307191
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191401\">Eric Haas</span> <a href=\"#narrow/stream/179229-subscriptions/topic/any.20work.20backporting.20r5.20subscriptions.20to.20r4.3F/near/199810345\">said</a>:</p>\n<blockquote>\n<p>I'll make a pr and create on for the bundle profiles as well</p>\n</blockquote>\n<p>I'm still using SUSHI for generating everything, so please be aware of that for the PR</p>",
        "id": 199812707,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591307252
    },
    {
        "content": "<p>The presence of a topic extension changing the behavior of the channel doesn't sit well with me; we should be more explicit, I think.</p>",
        "id": 199815571,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591309004
    },
    {
        "content": "<p>waht does Criteria = none mean?</p>",
        "id": 199815594,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591309027
    },
    {
        "content": "<p>Just highlighting that with a Topic, no criteria is valid</p>",
        "id": 199815926,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591309269
    },
    {
        "content": "<p>but it's a required element...</p>",
        "id": 199815947,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591309286
    },
    {
        "content": "<p>Could just as easily be an additional filter (e.g., for a specific patient)</p>",
        "id": 199815950,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591309287
    },
    {
        "content": "<p>Hmm.. missed that.  Would likely want to specify something like just the base resource in that scenario (e.g., allow <code>Encounter</code> for the criteria)</p>",
        "id": 199816044,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591309353
    },
    {
        "content": "<p>so, there must be a criteria, and it must minimally specify the resource(s) that will appear in the channel</p>",
        "id": 199816108,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591309401
    },
    {
        "content": "<p>is that a reasonable position?</p>",
        "id": 199816120,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591309406
    },
    {
        "content": "<p>That sounds right to me.</p>",
        "id": 199816163,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591309434
    },
    {
        "content": "<p>so the topic specifies additional filtering applied over and above the criteria</p>",
        "id": 199816250,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591309479
    },
    {
        "content": "<p>For R5, the other way around - but yes.  The distinction is important because implementers can optimize the topic-level filtering based on what they support, with the subscription filtering working on the reduced set.</p>",
        "id": 199816330,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591309551
    },
    {
        "content": "<p>I don't follow that. I'm not interested in what's happening behind the scenes, only in the API. The topic applies additional filtering to the criteria - how is that not true?</p>",
        "id": 199816414,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591309609
    },
    {
        "content": "<p>Yes, as far as the API is concerned it's the overlap of the two sets of filters.</p>",
        "id": 199816455,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591309644
    },
    {
        "content": "<p>with additional complexity around delete/modify, since in the absence of a topic, a criteria can't pick them up.</p>",
        "id": 199816557,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591309705
    },
    {
        "content": "<p>Yes. Also, the criteria is restricted per topic - e.g., if a topic only allows <code>Encounters</code> filtered by <code>patient</code> and only by equality test, the server should reject a subscription using unsupported criteria.</p>",
        "id": 199816732,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591309844
    },
    {
        "content": "<p>I don't actually understand that. I assume that somewhere the relationship between what the topic says and what the criteria can say is documented clearly</p>",
        "id": 199816785,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591309896
    },
    {
        "content": "<p>It obviously wouldn't have to, but that was one of the goals for allowing servers to reduce complexity and yet have good communication around what is supported</p>",
        "id": 199816794,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591309906
    },
    {
        "content": "<p>so let's say that a client posts a subscription to a server. The server is running unmodified R4 subscription semantics. The client adds a topic extension (not a modifier extension, in this thought bubble), but the server doesn't know about that extension, and so it ignores the topic, and proceeds as if it doesn't exist. </p>\n<p>In this case, the client can immediately tell that the subscription is being processed wrongly when it receives the first notification, right?</p>",
        "id": 199816805,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591309922
    },
    {
        "content": "<p>Yes, in <a href=\"http://build.fhir.org/subscriptiontopic-definitions.html#SubscriptionTopic.canFilterBy\">Subscription.canFilterBy</a></p>",
        "id": 199816858,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591309936
    },
    {
        "content": "<p>The client likely wouldn't get the notification, even though the server thinks it went through fine.  My implementation wouldn't forward a POST with no body - it doesn't have context to do so.</p>",
        "id": 199816943,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591310012
    },
    {
        "content": "<p>So, the server thinks all is well and continues sending and the client just never gets a notification.</p>",
        "id": 199816969,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591310039
    },
    {
        "content": "<p>I don't understand why the client doesn't get a notification. The server is sending something through the channel that the client nominated, no?</p>",
        "id": 199817036,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591310071
    },
    {
        "content": "<p>In R4, a <code>rest-hook</code> subscription does a <code>POST</code> with no body.  In R5 (and the backport), the body is always a Bundle.  Without a bundle, my server has nothing <em>to</em> forward.</p>",
        "id": 199817105,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591310146
    },
    {
        "content": "<p>(sorry to run - family is waiting on dinner, will check back after)</p>",
        "id": 199817187,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591310196
    },
    {
        "content": "<p>I don't follow. I'm not asking about your server, I'm asking about a client that expects the new subscription behavior connecting to a server that supports the old behavior</p>",
        "id": 199817205,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591310215
    },
    {
        "content": "<p>Yep - there is a (client) http server that is hosting the REST endpoint.</p>",
        "id": 199820934,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591312982
    },
    {
        "content": "<p>right. and that's under the control of the client through some private arrangement. So as soon as it gets the first notification, it knows that the server doesn't support the new subscription framework.</p>",
        "id": 199823797,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591315468
    },
    {
        "content": "<p>Fair enough.  I have been keeping the http server as dumb as possible to emulate proxies (e.g., converting the POST to a push notification), but that could be added as guidance on that side</p>",
        "id": 199824987,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591316641
    },
    {
        "content": "<p>it could. The obvious problem is that the client doesn't know the server doesn't support topic support until the first notification. Which in some (corner) cases, never comes. Is this a problem?</p>",
        "id": 199825077,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591316688
    },
    {
        "content": "<p>Hmm...the flow is different.  The client will never receive the handshake, so it could use some sort of timeout there to assume it's broken.  That would still likely end up with manual resolution (e.g., the server will say it's working, the client will know it isn't).</p>\n<p>We could just put the onus on the client to check the Capabilities Statement (haven't added that yet), and not send in the subscription if it doesn't find the IG.</p>",
        "id": 199825685,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591317468
    },
    {
        "content": "<p>I think that latter is where I was heading towards. And I think that the extension is not a modifier. There is clearly risk here, but it's not around the statement that the topic is making, but in the interaction expectations of the client and server</p>",
        "id": 199825785,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591317583
    },
    {
        "content": "<p>It still feels odd to me that it doesn't use a modifier, given that it is changing the meaning and the behavior, but <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span> <br>\nIn that case, it probably makes sense to move the topic to the criteria (where I had it originally) as an extension, yes?</p>",
        "id": 199825789,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591317600
    },
    {
        "content": "<p>I</p>",
        "id": 199825838,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591317614
    },
    {
        "content": "<p>I'm not sure</p>",
        "id": 199825843,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591317625
    },
    {
        "content": "<p>I can do a poll  <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 199825951,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591317783
    },
    {
        "content": "<p>/poll Should the Backport IG have a ModifierExtension for linking to a topic?<br>\nYes - It changes the intention of the subscription (criteria)<br>\nNo - Extension on Subscription<br>\nNo - Extension on Criteria</p>",
        "id": 199826656,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591318586
    },
    {
        "content": "<p>I would keep as an extension on Subscription</p>",
        "id": 199826920,
        "sender_full_name": "Eric Haas",
        "timestamp": 1591318876
    },
    {
        "content": "<p>I think that's what (1) means. But <span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span> your poll is either ambiguous or not binary</p>",
        "id": 199826985,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591318926
    },
    {
        "content": "<p>(or both)</p>",
        "id": 199826989,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591318939
    },
    {
        "content": "<p>There, first no leaves it on subscription - I'd edit but it doesn't let me</p>",
        "id": 199827102,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591319085
    },
    {
        "content": "<p>I was going to volunteer drafting the CapStatements., but what is the current status of this whole effort?  The whole R4a thing is a huge potential monkey wrench from left field? I assume it is wait and see the outcome before devoting any more time to it?</p>",
        "id": 199923527,
        "sender_full_name": "Eric Haas",
        "timestamp": 1591385439
    },
    {
        "content": "<p>I'm moving forward with making sure the models are there and working for now.  If R4A happens and includes Subscriptions, I'll pivot then.<br>\nFor the capabilities, I thought a base one for indicating core support (e.g., <code>$topic-list</code>, <code>$status</code>, etc.) and combinations for server support would make sense.  E.g., separate statements for:</p>\n<ul>\n<li><code>rest-hook</code> + <code>empty</code></li>\n<li><code>rest-hook</code> + <code>id-only</code><br>\n...<br>\nThat way, a client can determine if the server generally supports the backport and what combination of channels/payloads it can work with.</li>\n</ul>\n<p>With all that said, I understand if you'd prefer not to invest anymore time right now.  Please just let me know so that we don't duplicate effort (capability checking is about two items down on my list right now).</p>",
        "id": 199932503,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591390220
    },
    {
        "content": "<blockquote>\n<p>what combination of channels/payloads it can work with</p>\n</blockquote>\n<p>That could be a profile on subscription, right?</p>",
        "id": 199933291,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591390681
    },
    {
        "content": "<p>Probably? Haven't gotten to it yet, so \"profile on subscription\" sounds like a good starting place to me.</p>",
        "id": 199933610,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591390830
    },
    {
        "content": "<p>what options are there in supporting back port? What topics are allowed? Can you support back-port without any topics?</p>",
        "id": 199933673,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591390876
    },
    {
        "content": "<p>I have been thinking I would define all the options from R5 (<code>rest-hook</code>, <code>email</code>, <code>websocket</code>, <code>messaging</code> :: <code>empty</code>, <code>id-only</code>, <code>full-resource</code>) and letting servers establish from there.  This would also show a model for if people wanted to extend into custom channels, etc.</p>\n<p>For topics, there's an <a href=\"https://argonautproject.github.io/subscription-backport-ig/OperationDefinition-Backport-subscriptiontopic-list.html\">operation</a> which returns a <code>Bundle</code> with SubscriptionTopic canonical URLs.  Looking at it right now, I think I have them in the <code>entry.fullUrl</code> field, though they should be in <code>entry.link</code> instead.</p>\n<p>I've been struggling with what 'minimum' compliance would look like, and so far have what I described above - compliance means you have the required operations and understand the extensions.  This allows servers to only implement the parts they are planning on actually using (e.g., if I just need public health emails, I don't want to implement rest-hooks at all), while allowing clients to figure it out without the guessing game of what's supported (e.g., try every combination until you figure out what's supported).</p>",
        "id": 199934535,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591391412
    },
    {
        "content": "<p>I don't think any particular topic/s should be specified in the guide - just like having R5 support doesn't include a minimum set of topics</p>",
        "id": 199934584,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591391461
    },
    {
        "content": "<p>So far in R5, we've left topics out of capabilities altogether (other than resource support).  Clients can query that resource in order to find desired topics</p>",
        "id": 199934956,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1591391741
    },
    {
        "content": "<p>FYI on the procedural end there is an HL7 <a href=\"https://confluence.hl7.org/display/FHIRI/Backporting+R5+Subscriptions+to+R4+as+an+Implementation+Guide\">PSS here </a> to be reviewed by: </p>\n<ul>\n<li>FHIR-I (voted and approved)</li>\n<li>FMG</li>\n<li>\n<p>Steering Committee and TSC</p>\n</li>\n<li>\n<p>Will move the repro to HL7 shortly - let me know if you want access to contribute ( along with you github name ( <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> ?)</p>\n</li>\n<li>Need a list of implementers / projects who intend to implement  (only need 2)</li>\n<li>Next steps  Notice of Intent to ballot ,  draft, connectathon, publish for ballot</li>\n</ul>",
        "id": 204504859,
        "sender_full_name": "Eric Haas",
        "timestamp": 1595295711
    },
    {
        "content": "<p><a href=\"https://hackmd.io/3z0KefXUQQyez5-go9HCZQ?view\">Project Punchlist</a></p>",
        "id": 204718761,
        "sender_full_name": "Eric Haas",
        "timestamp": 1595449789
    }
]