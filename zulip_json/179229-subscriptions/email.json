[
    {
        "content": "<p>This is what we send in an email notification:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">xmlns</span><span class=\"o\">=</span><span class=\"s\">&#39;http://www.w3.org/1999/xhtml&#39;</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">table</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;border:</span> <span class=\"na\">1px</span> <span class=\"na\">solid</span> <span class=\"na\">black</span><span class=\"err\">;\\&quot;</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">tr</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;border:</span> <span class=\"na\">1px</span> <span class=\"na\">solid</span> <span class=\"na\">black</span><span class=\"err\">;\\&quot;</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">th</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;background-color:</span> <span class=\"err\">#</span><span class=\"na\">bbbbff</span><span class=\"err\">;</span> <span class=\"na\">border:</span> <span class=\"na\">1px</span> <span class=\"na\">solid</span> <span class=\"na\">black</span><span class=\"err\">;\\&quot;</span><span class=\"p\">&gt;</span>Name<span class=\"p\">&lt;/</span><span class=\"nt\">th</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">th</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;background-color:</span> <span class=\"err\">#</span><span class=\"na\">bbbbff</span><span class=\"err\">;</span> <span class=\"na\">border:</span> <span class=\"na\">1px</span> <span class=\"na\">solid</span> <span class=\"na\">black</span><span class=\"err\">;\\&quot;</span><span class=\"p\">&gt;</span>DOB and Age<span class=\"p\">&lt;/</span><span class=\"nt\">th</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">th</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;background-color:</span> <span class=\"err\">#</span><span class=\"na\">bbbbff</span><span class=\"err\">;</span> <span class=\"na\">border:</span> <span class=\"na\">1px</span> <span class=\"na\">solid</span> <span class=\"na\">black</span><span class=\"err\">;\\&quot;</span><span class=\"p\">&gt;</span>DOB<span class=\"p\">&lt;/</span><span class=\"nt\">th</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">th</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;background-color:</span> <span class=\"err\">#</span><span class=\"na\">bbbbff</span><span class=\"err\">;</span> <span class=\"na\">border:</span> <span class=\"na\">1px</span> <span class=\"na\">solid</span> <span class=\"na\">black</span><span class=\"err\">;\\&quot;</span><span class=\"p\">&gt;</span>Age<span class=\"p\">&lt;/</span><span class=\"nt\">th</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">th</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;background-color:</span> <span class=\"err\">#</span><span class=\"na\">bbbbff</span><span class=\"err\">;</span> <span class=\"na\">border:</span> <span class=\"na\">1px</span> <span class=\"na\">solid</span> <span class=\"na\">black</span><span class=\"err\">;\\&quot;</span><span class=\"p\">&gt;</span>Gender<span class=\"p\">&lt;/</span><span class=\"nt\">th</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">th</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;background-color:</span> <span class=\"err\">#</span><span class=\"na\">bbbbff</span><span class=\"err\">;</span> <span class=\"na\">border:</span> <span class=\"na\">1px</span> <span class=\"na\">solid</span> <span class=\"na\">black</span><span class=\"err\">;\\&quot;</span><span class=\"p\">&gt;</span>Demographic<span class=\"p\">&lt;/</span><span class=\"nt\">th</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">th</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;background-color:</span> <span class=\"err\">#</span><span class=\"na\">bbbbff</span><span class=\"err\">;</span> <span class=\"na\">border:</span> <span class=\"na\">1px</span> <span class=\"na\">solid</span> <span class=\"na\">black</span><span class=\"err\">;\\&quot;</span><span class=\"p\">&gt;</span>MRN<span class=\"p\">&lt;/</span><span class=\"nt\">th</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">th</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;background-color:</span> <span class=\"err\">#</span><span class=\"na\">bbbbff</span><span class=\"err\">;</span> <span class=\"na\">border:</span> <span class=\"na\">1px</span> <span class=\"na\">solid</span> <span class=\"na\">black</span><span class=\"err\">;\\&quot;</span><span class=\"p\">&gt;</span>Admit Date (Day)<span class=\"p\">&lt;/</span><span class=\"nt\">th</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">th</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;background-color:</span> <span class=\"err\">#</span><span class=\"na\">bbbbff</span><span class=\"err\">;</span> <span class=\"na\">border:</span> <span class=\"na\">1px</span> <span class=\"na\">solid</span> <span class=\"na\">black</span><span class=\"err\">;\\&quot;</span><span class=\"p\">&gt;</span>Admit Date<span class=\"p\">&lt;/</span><span class=\"nt\">th</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">th</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;background-color:</span> <span class=\"err\">#</span><span class=\"na\">bbbbff</span><span class=\"err\">;</span> <span class=\"na\">border:</span> <span class=\"na\">1px</span> <span class=\"na\">solid</span> <span class=\"na\">black</span><span class=\"err\">;\\&quot;</span><span class=\"p\">&gt;</span>Location<span class=\"p\">&lt;/</span><span class=\"nt\">th</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">th</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;background-color:</span> <span class=\"err\">#</span><span class=\"na\">bbbbff</span><span class=\"err\">;</span> <span class=\"na\">border:</span> <span class=\"na\">1px</span> <span class=\"na\">solid</span> <span class=\"na\">black</span><span class=\"err\">;\\&quot;</span><span class=\"p\">&gt;</span>Chief Complaint<span class=\"p\">&lt;/</span><span class=\"nt\">th</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">tr</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">tr</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;border:</span> <span class=\"na\">1px</span> <span class=\"na\">solid</span> <span class=\"na\">black</span><span class=\"err\">;\\&quot;</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">td</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;\\&quot;</span><span class=\"p\">&gt;</span>Demoski, Fran<span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">td</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;\\&quot;</span><span class=\"p\">&gt;</span>09/05/1998 (20 yo)<span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">td</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;\\&quot;</span><span class=\"p\">&gt;</span>09/05/1998<span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">td</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;\\&quot;</span><span class=\"p\">&gt;</span>20 yo<span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">td</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;\\&quot;</span><span class=\"p\">&gt;</span>F<span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">td</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;\\&quot;</span><span class=\"p\">&gt;</span>09/05/1998 (20 yo F)<span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">td</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;\\&quot;</span><span class=\"p\">&gt;</span>123456781<span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">td</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;\\&quot;</span><span class=\"p\">&gt;</span>05/05/2019 (Day 1)<span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">td</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;\\&quot;</span><span class=\"p\">&gt;</span>05/05/2019<span class=\"p\">&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">td</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;\\&quot;</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;&lt;</span><span class=\"nt\">td</span> <span class=\"na\">style</span><span class=\"o\">=</span><span class=\"s\">\\&quot;\\&quot;</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">td</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">tr</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">table</span><span class=\"p\">&gt;&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</pre></div>",
        "id": 164920873,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1557065252
    },
    {
        "content": "<p>(basically a table with some details on each resource in the list)</p>",
        "id": 164921392,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1557066098
    },
    {
        "content": "<p>So, if we were wanting to get to a more common behavior defined by the spec...</p>",
        "id": 164923202,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557068672
    },
    {
        "content": "<p>I feel like the spec is trying to handle 2 specific use cases:</p>\n<ul>\n<li>Human recipient</li>\n<li>Machine recipient</li>\n</ul>",
        "id": 164923206,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557068696
    },
    {
        "content": "<p>But there's no good way to define that described in the spec, and it leaves it up to the server to decide what to do. For example, <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  server adds the FHIR data as an attachement</p>",
        "id": 164923233,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557068732
    },
    {
        "content": "<p>The HAPI implementation sounded like it puts the FHIR resource in the body</p>",
        "id": 164923237,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557068745
    },
    {
        "content": "<p>and <span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span>  server produces nice human readable body only</p>",
        "id": 164923290,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557068779
    },
    {
        "content": "<p>Do we have any opinions on how to make this more predictable?</p>",
        "id": 164923292,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557068793
    },
    {
        "content": "<p>or for the subscriber to be able to specify some expectations?</p>",
        "id": 164923294,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557068808
    },
    {
        "content": "<p>(this is logged as <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=21286\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=21286\">GF#21286</a> )</p>",
        "id": 164923311,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557068866
    },
    {
        "content": "<p>I'm going to defend my choice, naturally ;-) - can message human or machine...</p>",
        "id": 164924071,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557070175
    },
    {
        "content": "<p>including by <a class=\"stream\" data-stream-id=\"179303\" href=\"/#narrow/stream/179303-Direct.2FCertificates\">#Direct/Certificates</a></p>",
        "id": 164924072,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557070180
    },
    {
        "content": "<p>I think it's important to allow for both. I think the gotcha is that right now it doesn't describe how a server should achieve that so that a subscriber has consistent expectations</p>",
        "id": 164930152,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557080382
    },
    {
        "content": "<p>Or really the way a subscriber should indicate that a human or machine is watching</p>",
        "id": 164930196,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557080404
    },
    {
        "content": "<p>There is <code>payload</code>: <code>text/html</code> = human readable, <code>application/fhir+json</code> = machine</p>",
        "id": 164999152,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1557162158
    },
    {
        "content": "<p>Question from FHIR-I call: are there use-cases where you'd ever want a channel to deliver both - i.e. human readable and computable?</p>",
        "id": 175280761,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1568061493
    },
    {
        "content": "<p>Is the expectation that if the human-readable content is delivered that it would always be the resource narrative?</p>",
        "id": 175280872,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1568061589
    },
    {
        "content": "<p>Connecting dots: <span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span> note that <span class=\"user-mention\" data-user-id=\"191407\">@Rick Geimer</span> will be at the connectathon on Subscriptions track and we can talk through requirements / desiderata.</p>",
        "id": 175281029,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568061669
    },
    {
        "content": "<p>From what I remember of the last time it was discussed on an Argonaut call, there were people expecting the resource and people expecting an email to the patient that they have new health data.<br>\nThe idea that I've been mulling over is to offer guidance that it should be based off the contentType of the email... if you ask for an email with application/fhir+json, you are obviously expecting the resource while asking for a text/html message would expect something patient-facing.  Can honor the payload types within that for more flexibility (e.g., patient email with <code>full-resource</code> vs. patient email with <code>empty</code>).<br>\nWas going to bring it up last call, but figured it would be easier to talk through in Atlanta.</p>",
        "id": 175281411,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1568061901
    },
    {
        "content": "<p>contentType is fine - if we only one one of the two.  However if you want the human-friendly HTML <em>and</em> the JSON attachment, you'd need two contentTypes</p>",
        "id": 175285264,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1568064841
    },
    {
        "content": "<p>Oh, that's fun -- so <code>presentationContentType</code> (which wouldn't be used by most channels; might be an extension) <em>and</em> a <code>contentType</code>. Or reversing the roles, a <code>contentType</code> and an <code>attachmentContentType</code> (which wouldn't be used by most channels; might be an extension).</p>",
        "id": 175285420,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568064956
    },
    {
        "content": "<p>I'm not sure I follow the use-case where an email would need to be patient-friendly AND needed the attachment which couldn't be handled by including a link to the resource, but:<br>\n-extensions could work (a la Josh)<br>\n-a mutlipart content type could work (e.g., multipart/message)<br>\n-a parameter could work (e.g., text/html;attach=fhir+json)</p>\n<p>I was hoping to get a pass of some of this up prior to Atlanta, but I'm still unclear what people have been doing so far with it.</p>",
        "id": 175287543,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1568066836
    },
    {
        "content": "<p>In theory, a patient might want to receive something that made sense to them - and something they could suck into their phone.  I have no clue if that's a \"real\" use-case though.</p>",
        "id": 175288354,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1568067371
    },
    {
        "content": "<p>Yes, I will be at the Connectathon in the Subscriptions track.</p>",
        "id": 175559665,
        "sender_full_name": "Rick Geimer",
        "timestamp": 1568314569
    },
    {
        "content": "<p>Initial Connectathon discussion around email channel (track attendees, please review/correct if I got any of this wrong).</p>\n<ul>\n<li>All agree that sending the raw resource XML/JSON in the body of an email is bad. The body of the email should be for human facing content. </li>\n<li>If the payload is omitted, the server will send a server-specific text notification in the body of the email (i.e. \"Subscription X was executed\")</li>\n<li>We discussed the possibility of an extension to Subscription that would allow a client to specify the desired notification text. </li>\n<li>If payload.contentType is text/html, the XHTML content Resource.text will be sent in the body of the email. </li>\n<li>If payload.contentType is text/plain, the text equivalient of the XHTML content Resource.text will be sent in the body of the email. </li>\n<li>If payload.contentType is application/fhir+xml or application/fhir+json, the resource XML or JSON will be sent as an attachment to the email with a server specific notification in the email body (i.e. \"Subscription X was executed\")</li>\n<li>If you want both human facing content with an XML/JSON attachment, use something like this in payload.contentType: text/html;attach=application/fhir+json</li>\n</ul>",
        "id": 175706352,
        "sender_full_name": "Rick Geimer",
        "timestamp": 1568475019
    },
    {
        "content": "<p>I like everything I think but the last one so far. Struggling with what that means for the required mime binding, wondering if there's a better way.</p>",
        "id": 175706662,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568475570
    },
    {
        "content": "<p>what's the issue with it?</p>",
        "id": 175706722,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568475621
    },
    {
        "content": "<p>the attach part isn't in the mime binding :)</p>",
        "id": 175706741,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568475690
    },
    {
        "content": "<p>In email, this would be done with multi-part mime. But the spec doesn't handle that as it is today</p>",
        "id": 175706752,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568475712
    },
    {
        "content": "<p>The issue we are discussing is that adding the parameter  to the MIME type breaks the binding to the value set.<br>\nLatest idea is add another field for MimeParameters... would allow for things like asking for a zip file with a json in it</p>",
        "id": 175706800,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1568475777
    },
    {
        "content": "<p>it's the FHIR spec that's the problem?</p>",
        "id": 175706816,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568475834
    },
    {
        "content": "<p>It certainly shouldn't prevent parameters ,but I can see that it does</p>",
        "id": 175706870,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568475862
    },
    {
        "content": "<p>It also feels awkward to me, but I'm not sure why (just a \"smell\" - may not be accurate, trying to absorb)</p>",
        "id": 175706895,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568475908
    },
    {
        "content": "<p>A couple of notes from this discussion:</p>\n<ul>\n<li>\n<p>Anytime we're talking about \"Resource.text\" we should make this plural, since a subscription notification can be about &gt;1 event. And we should also say something about the case where a notification is about a <em>deletion</em> rather than an update to resource(s).</p>\n</li>\n<li>\n<p>Re: e-mail bodies, I think trying to depend too much on semantics of the payload type is going to get us in trouble. We might do well to simplify into some explicit notion of what goes into the body, plus maybe a standard extension to specify what goes in the attachment.</p>\n</li>\n</ul>",
        "id": 175711649,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568484347
    },
    {
        "content": "<h2>Use cases from <span class=\"user-mention\" data-user-id=\"191407\">@Rick Geimer</span> , for <code>email</code> channel type:</h2>\n<ul>\n<li>\n<p>Subscribing to updates on \"knowledge distribution artifacts,\" e.g. a PlanDefinition with a series of value sets that get updated over time. Here, when a new emerging condition gets added to trigger codes ValueSet, a bunch of systems want to know this ValueSet has been updated. Some people want to receive this update as an email (whether to handle manually or to feed into an automated processor). Here, we'd want the body to be human-readable and present; and attachments (optionally) with FHIR data.</p>\n</li>\n<li>\n<p>HIE supports Direct messaging and wants to also get US Core clinical notes, subscribing to DocumentReference resources. Here, the attached FHIR data would be most important.</p>\n</li>\n<li>\n<p>(May not need to support e-mail). Public health agencies want to subscribe to Conditions or Observations on a \"watch list\" (e.g., for reportable conditions).</p>\n</li>\n</ul>",
        "id": 175712146,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568485177
    },
    {
        "content": "<p>And an update from Rick: at least one of the use cases above actually expects <em>Direct</em> protocol support, not regular e-mail.</p>",
        "id": 175719397,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568497201
    },
    {
        "content": "<p>Any thoughts about using encryption with regular e-mail?  For cases requiring encryption, use <em>Direct</em> (or something similar)?  S/MIME?  PGP?</p>",
        "id": 175749579,
        "sender_full_name": "Joel Schneider",
        "timestamp": 1568554959
    },
    {
        "content": "<blockquote>\n<p>Grahame Grieve: it's the FHIR spec that's the problem?<br>\nGrahame Grieve: It certainly shouldn't prevent parameters ,but I can see that it does</p>\n</blockquote>\n<p>Where does it limit mime-type properties from being used? All I see is this:<br>\n\"The payload mimetype and content. If the payload is not present, then there is no payload in the notification, just a notification.\"<br>\nThis doesn't say that mime-type properties can't be used...???<br>\n<span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 175750180,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568555935
    },
    {
        "content": "<p>...must be referring to</p>\n<blockquote>\n<p>The mime type to send the payload in - either application/fhir+xml, or application/fhir+json. The mime type \"text/plain\" may also be used for Email and SMS subscriptions.</p>\n</blockquote>",
        "id": 175750209,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568556000
    },
    {
        "content": "<p>The way that constraint is written seems weird to me...<br>\nSHALL X or Y.<br>\nMAY Z.</p>",
        "id": 175750273,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568556050
    },
    {
        "content": "<p>So we're saying this text is preventing us from using mime-type properties?</p>",
        "id": 175750310,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568556115
    },
    {
        "content": "<p>I would say that<br>\n\"application/fhir+xml;attachment=true,bodyText=SOME TEXT\"<br>\nstill conforms to that constraint text...<br>\nIn the above example, the mimetype of the payload IS application/fhir+xml</p>",
        "id": 175750383,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568556214
    },
    {
        "content": "<p>it just happens to have some properties with it as well</p>",
        "id": 175750443,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568556288
    },
    {
        "content": "<blockquote>\n<p>All I see is this</p>\n</blockquote>\n<p>right</p>",
        "id": 175750520,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568556399
    },
    {
        "content": "<p>I was going by memory. But it doesn't say what I thought. Any valid mime type is ok including parameters</p>",
        "id": 175750541,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568556432
    },
    {
        "content": "<p><em>phew</em></p>",
        "id": 175750555,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568556455
    },
    {
        "content": "<p>was <em>just</em> working on modifications to HAPI to support mime-type parameters to indicate that the resource should be attached to the email instead of the body of the email</p>",
        "id": 175750562,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568556479
    },
    {
        "content": "<p>so, was worried I'd have to undo it all</p>",
        "id": 175750602,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568556487
    },
    {
        "content": "<p>lol</p>",
        "id": 175750607,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568556493
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191407\">@Rick Geimer</span></p>",
        "id": 175750612,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568556503
    },
    {
        "content": "<p>Isn't there a required value set on Mime type? That doesn't include the full set of properties.</p>",
        "id": 175750777,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568556750
    },
    {
        "content": "<p>I haven't been able to find anything that says properties have to be specific keys/values</p>",
        "id": 175751301,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568557511
    },
    {
        "content": "<p>I found this:<br>\n<a href=\"/user_uploads/10155/kYjAZtI3MPTCHsXQFDpje8w6/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/kYjAZtI3MPTCHsXQFDpje8w6/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/kYjAZtI3MPTCHsXQFDpje8w6/pasted_image.png\"></a></div>",
        "id": 175751350,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568557564
    },
    {
        "content": "<p>but, that just shows an <em>example</em> of a property... it doesn't say the property has to be X, Y or Z for given mime-types</p>",
        "id": 175751366,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568557592
    },
    {
        "content": "<p>if mime-type properties were enforced, I would think it would be easier to find a table of expected properties/values</p>",
        "id": 175751384,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568557644
    },
    {
        "content": "<p>So, the field has a required binding to: <a href=\"https://tools.ietf.org/rfc/bcp/bcp13.txt\" target=\"_blank\" title=\"https://tools.ietf.org/rfc/bcp/bcp13.txt\">https://tools.ietf.org/rfc/bcp/bcp13.txt</a></p>",
        "id": 175751440,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568557704
    },
    {
        "content": "<p>which I don't think includes properties. But maybe this is a semantics thing and the mime binding is a mess? :)</p>",
        "id": 175751447,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568557727
    },
    {
        "content": "<p><a href=\"https://www.iana.org/assignments/media-types/media-types.xhtml\" target=\"_blank\" title=\"https://www.iana.org/assignments/media-types/media-types.xhtml\">https://www.iana.org/assignments/media-types/media-types.xhtml</a></p>",
        "id": 175751470,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568557788
    },
    {
        "content": "<p>that does list properties for some of the mimes...</p>",
        "id": 175751529,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568557832
    },
    {
        "content": "<p>it's just 'any valid mime type', which includes properties, since their syntax is defined in bcp13</p>",
        "id": 175751547,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568557872
    },
    {
        "content": "<p><a href=\"https://www.iana.org/assignments/media-types/application/fhir+json\" target=\"_blank\" title=\"https://www.iana.org/assignments/media-types/application/fhir+json\">https://www.iana.org/assignments/media-types/application/fhir+json</a> we're missing our fhirVersion<br>\n(waiting for Grahame to throw something towards me)</p>",
        "id": 175751620,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568558011
    },
    {
        "content": "<p>yes I should. I just don't have the energy to get it updated for that</p>",
        "id": 175751626,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568558041
    },
    {
        "content": "<p>so, are we saying mime-type properties ARE ok, still?</p>",
        "id": 175752979,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568560095
    },
    {
        "content": "<p>further-more, <em>any</em> mime-type properties are OK?<br>\n(up to the implementation?)</p>",
        "id": 175752986,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568560116
    },
    {
        "content": "<p>In this case, the weirdness is that the mime type we're using (or considering using) doesn't have this as a property/it would be something we would be creating ourselves</p>",
        "id": 175753200,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568560476
    },
    {
        "content": "<p>But in general, yes, properties would be allowable</p>",
        "id": 175753203,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568560481
    },
    {
        "content": "<p>we'll take it as read that fhirVersion is valid</p>",
        "id": 175756017,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568565156
    }
]