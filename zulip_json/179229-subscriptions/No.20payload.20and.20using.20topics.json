[
    {
        "content": "<p>Hi<br>\nI have did made a post at <a href=\"https://chat.fhir.org/#narrow/stream/implementers/topic/Subscriptions\" target=\"_blank\" title=\"https://chat.fhir.org/#narrow/stream/implementers/topic/Subscriptions\">https://chat.fhir.org/#narrow/stream/implementers/topic/Subscriptions</a>.<br>\nNow moving to this (better) stream.</p>\n<p>My scenario is to notify external systems when a patient with an appointment arrives.</p>\n<p>This \"when a patient arrives\"-event seems natural to state via the topics and eventDefinition described in connectathon-topic :<br>\n{<br>\n\"resourceType\": \"Subscription\",<br>\n\"criteria\": \"Appointment\", -- could include filtering of appointments - if subscrieber only wants to hear of specific appointments<br>\n\"extension\": {[<br>\n    \"url\": \"<a href=\"http://hl7.org/fhir/subscription/topics\" target=\"_blank\" title=\"http://hl7.org/fhir/subscription/topics\">http://hl7.org/fhir/subscription/topics</a>\",<br>\n    \"valueReference\": {<br>\n    \"reference\": \"<a href=\"https://example.com/EventDefinition/123\" target=\"_blank\" title=\"https://example.com/EventDefinition/123\">https://example.com/EventDefinition/123</a>\",<br>\n    \"display\": \"Patient with appointment arrived\",<br>\n    \"channel\": {<br>\n        \"type\": \"rest-hook\",<br>\n        \"endpoint\": \"<a href=\"http://notifyMe.com/patientWithAppointmentArrived\" target=\"_blank\" title=\"http://notifyMe.com/patientWithAppointmentArrived\">http://notifyMe.com/patientWithAppointmentArrived</a>\",<br>\n        \"header\": \"Authorization: Bearer secret-token-abc-123\"<br>\n    }<br>\n}</p>\n<p>I would like to stick with a notification without payload, hence the subscriber must subsequently retrieve the data from the server.<br>\nThis however leaves me with the issue \"which GET should be perform by the subscriber\"?</p>\n<p>One solution: Just do a /Appointment?_lastUpdated=gt&lt;lastQueryTime&gt;<br>\nBut this will include extra (unwanted) appointments and leaves the understanding of the EventDefinition/123 in terms of an appointment to the subscriber.</p>\n<p>Another solution: Support some kind of patientHasArrived search: /Appointment?patientHasArrived=true&amp;_lastUpdated=gt&lt;lastQueryTime&gt;<br>\nThis seems more desirably (still with some (fewer) unwanted appointments) but introduces a new search criteria and clashes with the description at <a href=\"https://www.hl7.org/fhir/subscription.html#2.46.6.1\" target=\"_blank\" title=\"https://www.hl7.org/fhir/subscription.html#2.46.6.1\">https://www.hl7.org/fhir/subscription.html#2.46.6.1</a>.</p>\n<p>Any thoughts on this?</p>",
        "id": 153914101,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1508155661
    },
    {
        "content": "<p>And you are absolutely sure you don't want/cannot include the slightest amount of context data within your payload? Ain't performance an issue for you?</p>",
        "id": 153914192,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1508188965
    },
    {
        "content": "<p>I’m absolutely not sure, in fact I am currently slightly in favor of the payload-solution adding pros and cons.<br>\nThe no-payload solution seemed initially nice because:<br>\n1)  No need to construct and add the payload (obviously)<br>\n2)  Leave the security to the REST GET service which already handles it<br>\n3)  Simple if the POST cannot be delivery – you do not have to keep track of the each message and deliver all of them when the receiving end is ready<br>\n4)  No chronology issues<br>\nBut the no-payload solution becomes less elegant with topics/filters, and the subscriber of course has to perform a subsequent GET to get data.<br>\nWould nice to hear if someone is actually using the no-payload approach.</p>",
        "id": 153914343,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1508220510
    },
    {
        "content": "<p>yes I've seen it used in semi-prototype. It was really simple for low complexity / narrow usage.</p>",
        "id": 153914347,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1508224723
    },
    {
        "content": "<p>as you've found, doesn't scale well in terms of flexibility</p>",
        "id": 153914348,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1508224736
    },
    {
        "content": "<p>Now, reading throguh <a href=\"https://www.hl7.org/fhir/subscription.html#2.46.6.1\" target=\"_blank\" title=\"https://www.hl7.org/fhir/subscription.html#2.46.6.1\">https://www.hl7.org/fhir/subscription.html#2.46.6.1</a> ... I would say that there might be a case missing to support what I think maybe could fit your case:</p>",
        "id": 153914592,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1508321850
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192120\">@Allan Bro Hansen</span> an event from the server where the body is not empty nor the full resource, but instead a bundle that contains references to all that has changed. Thereby your client knows where to go specifically and you don't disclose any information unless it is fetched intentionally by your client</p>",
        "id": 153914593,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1508322024
    },
    {
        "content": "<p>using the normal auth mechanisms</p>",
        "id": 153914594,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1508322050
    },
    {
        "content": "<p>that maybe falls within the evendefinition talk ... I can't really figure that out ..</p>",
        "id": 153914595,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1508322633
    },
    {
        "content": "<p>I guess I would be okay to define a criteria with an \"_elements\" and hereby define a not-full resource.  It still leaves some of the other \"with payload\" issues (single event messages and chronology). On a side note: I have chosen the \"with payload\" solution</p>",
        "id": 153914596,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1508322992
    },
    {
        "content": "<p>FYI ... following seems like a bug in the spec. Cardinality on the subscription.channel.payload is 1..1 but the description says it can be left blank</p>",
        "id": 153914598,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1508323330
    },
    {
        "content": "<p>The channel.payload is 0..1 in <a href=\"https://www.hl7.org/fhir/subscription.html#resource\" target=\"_blank\" title=\"https://www.hl7.org/fhir/subscription.html#resource\">https://www.hl7.org/fhir/subscription.html#resource</a></p>",
        "id": 153914599,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1508323497
    },
    {
        "content": "<p>arhhh ... I looked at the DSTU2 ... my bad</p>",
        "id": 153914600,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1508323519
    },
    {
        "content": "<p>two strokes from submitting a ticket on gforge ... whew</p>",
        "id": 153914601,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1508323539
    }
]