[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span>  <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span>  <span class=\"user-mention\" data-user-id=\"191757\">@Christiaan Knaap</span>  Some discussion here at the table with <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  around changing the notification rules for servers. Challenge: A subscription right now will notify on v1 of a resource, but then an update (or delete) to that resource may make it no longer qualify. When that happens, the current spec calls out that there won't be a notification.</p>",
        "id": 154003108,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1538323710
    },
    {
        "content": "<p>Proposal is to make it so that a server will notify on change when the current version qualifies for the subscription <em>or the previous version did</em> so that scenarios like this can be caught</p>",
        "id": 154003109,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1538323740
    },
    {
        "content": "<p>IE: I create a subscription for all temperatures that are over 105 F. A nurse charts a temp that qualifies. Subscriber is notified. Nurse later goes in and updates that b/c she had a bad reading or fat-fingered and changes it to 104 F.</p>",
        "id": 154003116,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1538323822
    },
    {
        "content": "<p>On the previous subscription, that 104 wouldn't trigger a notify, so the subscriber won't know that something happened that they likely care about. With the new requirement, they would be notified since the previous version of the resource qualified.</p>",
        "id": 154003118,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1538323864
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  One gotcha we were discussing with <span class=\"user-mention\" data-user-id=\"191757\">@Christiaan Knaap</span>  is that the _list and other \"referential\" queries could complicate this logic. IE: you now have to know that it no longer qualifies because the content of a referenced List or value set changed.</p>",
        "id": 154003295,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1538332369
    },
    {
        "content": "<p>Also, will we detect that something no longer qualifies because you're no longer authorized to view??</p>",
        "id": 154003296,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1538332397
    },
    {
        "content": "<p>I have no idea about the second permissions question</p>",
        "id": 154003339,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1538333768
    },
    {
        "content": "<p>wooah. Someone's asking the hard questions</p>",
        "id": 154003340,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1538333768
    },
    {
        "content": "<p>the first.... you remove things from your criteria... the kind of things you get notified about change. The subscriber gets to deal with that</p>",
        "id": 154003341,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1538333768
    },
    {
        "content": "<p>Imagine client A starts a subscription on Observation with criteria based on a List (either by the _list parameter or a regular reverse reference). And now client B changes the list. How is client A supposed to deal with that on it's own. The server will have to detect that the client A needs to be notified of Observations that are now in the list or are no longer in the list. Possible but potentially costly for generic servers. Not sure whether it is at all possible for 'facades' like those on the EHR systems.</p>",
        "id": 154003993,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1538422971
    },
    {
        "content": "<p>If A isn't controlling the list, then they might want to have a subscription on that too</p>",
        "id": 154003999,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1538423577
    },
    {
        "content": "<p>&lt;deleted&gt;</p>",
        "id": 154004001,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1538423598
    },
    {
        "content": "<p>It looks like we forgot to get a tracker on this. <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I don't see anything in the r4 release about this - it says the same caveat about deletes. I can log a tracker assuming there isn't one.</p>",
        "id": 154993828,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1547316782
    },
    {
        "content": "<p>right.  nothing changed in R4</p>",
        "id": 154995708,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1547319940
    },
    {
        "content": "<p>we talked about delta based subscriptions - back in Madrid, actually, but then the talk stopped</p>",
        "id": 154995749,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1547319990
    },
    {
        "content": "<p>After the discussion offline with Grahame, logged <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19976\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19976\">GF#19976</a> to clarify the complexities, including adding an example about the security use case</p>",
        "id": 155043775,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1547408925
    }
]