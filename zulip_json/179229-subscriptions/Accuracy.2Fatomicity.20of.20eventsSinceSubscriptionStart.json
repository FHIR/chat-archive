[
    {
        "content": "<p>This was discussed a bit on the call this morning... but want some additional feedback. What is the expectation around accuracy of <a href=\"http://build.fhir.org/subscriptionstatus-definitions.html#SubscriptionStatus.eventsSinceSubscriptionStart\">http://build.fhir.org/subscriptionstatus-definitions.html#SubscriptionStatus.eventsSinceSubscriptionStart</a>?</p>",
        "id": 209705825,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599770290
    },
    {
        "content": "<p>This is the mechanism for clients to detect missing or out-of-order messages. So the expectation is that they are accurate, otherwise the client can't detect missed messages. Unless there's some way to specify a certain amount of slip/slop in the protocol...</p>",
        "id": 209705976,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599770395
    },
    {
        "content": "<p>To give more context, my concern is that it's possible for the notification component on the server to succeed in sending the event to the subscriber, but fail before it has stored the updated value of the counter.</p>",
        "id": 209707398,
        "sender_full_name": "Yazan Al-Alul",
        "timestamp": 1599771106
    },
    {
        "content": "<p>And similarly if the server is keeping track of which subscriptions it has notified of an event, if it sends the notification but isn't able to persist that it did send it successfully, the server would potentially end up sending a duplicate notification to that subscriber</p>",
        "id": 209707754,
        "sender_full_name": "Yazan Al-Alul",
        "timestamp": 1599771292
    },
    {
        "content": "<p>In general we don't require guaranteed delivery and we don't prevent duplicate delivery. But we do expect clients to be able to detect (at least as often as their heartbeat interval) whether messages have been missed. So in the examples above, you'd want to allocate a \"new event count\" before you send out a message, since the updated count appears <em>in</em> the message. It's about events for which you have made notification <em>attempts</em>.</p>\n<p>As the <a href=\"http://build.fhir.org/subscriptionstatus.html#subscription-status\">spec says, <code>SubscriptionStatus.eventsSinceSubscriptionStart</code></a> is the:</p>\n<blockquote>\n<p>number of unique events that have triggered notification attempts on this Subscription inclusive of the current notification being sent</p>\n</blockquote>",
        "id": 209708242,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599771539
    },
    {
        "content": "<p>Thanks Josh, that makes sense. I think it would be good to explicitly call out that duplicate notifications are possible</p>",
        "id": 209805822,
        "sender_full_name": "Yazan Al-Alul",
        "timestamp": 1599842937
    },
    {
        "content": "<p>Agreed!</p>",
        "id": 209806702,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599843444
    }
]