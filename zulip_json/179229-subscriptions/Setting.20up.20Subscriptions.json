[
    {
        "content": "<p>Trying to set a FHIR Subscription test for certain resources.</p>\n<p>We used the HAPI FHIR  JPA from <a href=\"https://hub.docker.com/r/polyakov/hapi-fhir-jpaserver-example/\" target=\"_blank\" title=\"https://hub.docker.com/r/polyakov/hapi-fhir-jpaserver-example/\">https://hub.docker.com/r/polyakov/hapi-fhir-jpaserver-example/</a></p>\n<p>When creating subscriptions, they are always set to \"Requested\" status. </p>\n<p>1. How do I enable the subscription to active?<br>\n2. Where do I configure the email SMTP details?</p>\n<p>Any ideas?</p>",
        "id": 153951893,
        "sender_full_name": "Rishi Tarar",
        "timestamp": 1523462665
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span></p>",
        "id": 153951899,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1523462873
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"194261\">@Rishi Tarar</span> ,</p>\n<p>Sorry for the slow reply! Subscriptions are set up in HAPI FHIR JPA using interceptors, one per channel type. See subclasses of BaseSubscriptionInterceptor to see them: <a href=\"http://hapifhir.io/apidocs-jpaserver/ca/uhn/fhir/jpa/subscription/BaseSubscriptionInterceptor.html\" target=\"_blank\" title=\"http://hapifhir.io/apidocs-jpaserver/ca/uhn/fhir/jpa/subscription/BaseSubscriptionInterceptor.html\">http://hapifhir.io/apidocs-jpaserver/ca/uhn/fhir/jpa/subscription/BaseSubscriptionInterceptor.html</a></p>\n<p>You'd use <code>SubscriptionEmailInterceptor</code> for email, and that class has all of the configuration around delivery.</p>",
        "id": 153953009,
        "sender_full_name": "James Agnew",
        "timestamp": 1524066813
    },
    {
        "content": "<p>Hello All,</p>\n<p>Looking through the Subscriptions in the 3.x.x of RestHook channel type,<br>\nWhere I have created Subscription resource and given the criteria ex, \"Observation?status=registered\" and endpoint.</p>\n<p>According to my Understanding when there is a change in Observation Resource in status(criteria given in subscription). We need to get notification <br>\nto the  Endpoint given.</p>\n<p>When i updated the Observation staus other than \"registered\",in the console iam viewing this info <br>\nSubscription check found 0 results for query: Observation?status=registered&amp;_id=Observation/753</p>\n<p>And i have no idea in what format Notification will be how can we knew it.<br>\nDO we need to enable any Configurations? or iam in the correct way of understanding only.</p>\n<p>Thank You</p>",
        "id": 153954255,
        "sender_full_name": "Anusha",
        "timestamp": 1524651459
    },
    {
        "content": "<p>which server are you testing against?</p>",
        "id": 153954277,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524659979
    },
    {
        "content": "<p>and what status does it have for your subscription?</p>",
        "id": 153954278,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524659989
    },
    {
        "content": "<p>Your understanding of the criteria is not entirely correct.<br>\n\"Observation?status=registered\" means: send me a notification for any create or update of an Observation that has status 'registered'.<br>\nSo if you change the <em>status</em> to something else than 'registered', the Observation will no longer match the criteria and you will not be notified.<br>\nYou cannot have a subscription for changes to a specific property of an Observation.</p>",
        "id": 153954284,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1524660336
    },
    {
        "content": "<p>we are trailing a subscription criteria that can do that, but I'm not sure which servers support that</p>",
        "id": 153954287,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524660563
    },
    {
        "content": "<p>I must have missed that. Where can I find a description of this functionality?</p>",
        "id": 153954302,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1524661439
    },
    {
        "content": "<p>I think the San Diego connectathon</p>",
        "id": 153954308,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524663207
    },
    {
        "content": "<p>there was a subscription stream</p>",
        "id": 153954310,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524663215
    },
    {
        "content": "<p>I think you are referring to the use of EventDefinition in conjunction with Subscription, as stated under EventDefinition: \"The EventDefinition resource is intended to be used to provide a reusable description of events for use by other resources that require event definition, such as Subscription. EventDefinition is a definition of an event that could occur, whereas Subscription is asking for notification of events when they occur.\" (<a href=\"http://build.fhir.org/eventdefinition.html\" target=\"_blank\" title=\"http://build.fhir.org/eventdefinition.html\">http://build.fhir.org/eventdefinition.html</a>).<br>\nHowever, this has not found it's way into Subscription itself yet.</p>",
        "id": 153954313,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1524663693
    },
    {
        "content": "<p>no the connectathon stream only defined an extension and has not moved beyond that</p>",
        "id": 153954352,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524692181
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191757\">@Christiaan Knaap</span> <br>\nThanks for correcting me.</p>",
        "id": 153954438,
        "sender_full_name": "Anusha",
        "timestamp": 1524719109
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <br>\nhapi fhir server<br>\nand subscription status is requested</p>",
        "id": 153954504,
        "sender_full_name": "Anusha",
        "timestamp": 1524745122
    },
    {
        "content": "<p>Hi All,<br>\nIam little bit confused some of the lines in subscription documentation,<br>\nWhen a resource is created or updated that meets the criteria, the server sends a POST request with no body to the nominated URL.</p>\n<p>When the subscriber receives a POST to <a href=\"https://biliwatch.com/customers/mount-auburn-miu/on-result\" target=\"_blank\" title=\"https://biliwatch.com/customers/mount-auburn-miu/on-result\">https://biliwatch.com/customers/mount-auburn-miu/on-result</a>, it re-issues the criteria as a query to the server, appending &amp;_since=:last <br>\n(where :last is replaced by the time at which the client last checked). In this way it can fetch all new relevant Observations.</p>\n<p>what it mean by it re-issues the criteria as a query to the server?</p>\n<p>please help me in understanding the above.</p>",
        "id": 153954766,
        "sender_full_name": "Anusha",
        "timestamp": 1524834418
    },
    {
        "content": "<p>in this case, where the server is sending pings without any details, then the only way for the subscriber to get the details is to ask the server (re-issue the query).</p>",
        "id": 153954872,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524873407
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 153955093,
        "sender_full_name": "Rishi Tarar",
        "timestamp": 1525121288
    },
    {
        "content": "<p>Hi All,</p>\n<p>Iam working on Subscription with Resthook channel type of hapi-fhir V3.2.0, where iam getting error log as \"Failure to handle Subscription payload\" and<br>\n at the subscriber side Iam receiving that \"  No mapping found for HTTP request with URI [/hapi-fhir-jpaserver-example/Patient/102] in DispatcherServlet with name 'spring'\".<br>\nCan anyone help me out with the issue.</p>",
        "id": 153955623,
        "sender_full_name": "Anusha",
        "timestamp": 1525331326
    },
    {
        "content": "<p>You may find more support on the <a class=\"stream\" data-stream-id=\"8\" href=\"/#narrow/stream/8-hapi\">#hapi</a>  stream for this</p>",
        "id": 153955664,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1525346998
    },
    {
        "content": "<p>Hey guys,</p>\n<p>I am very new to all of the Fhir and HL7 spaces but I am working on an app that a Fhir Subscription model will work great on but am having some issues/questions:</p>\n<div class=\"codehilite\"><pre><span></span> 1. I know the Fhir Server can go to a Rest-Hook service (like a C# .asmx project) but in what format does that message come?\n 2. Is there a way to add more than 1 criteria to the same Subscription entry? (I want to know about Encounters that happen with a Status of Planned, Finished, and In-Progress\n 3. What kind of sandbox instances can i get started with to see if my .asmx project can receive these messages?\n</pre></div>\n\n\n<p>Thank you in advance!<br>\nJustin</p>",
        "id": 153977883,
        "sender_full_name": "Justin",
        "timestamp": 1532523238
    },
    {
        "content": "<p>1. Is answered in <a href=\"http://hl7.org/fhir/subscription.html#2.46.6.1\" target=\"_blank\" title=\"http://hl7.org/fhir/subscription.html#2.46.6.1\">http://hl7.org/fhir/subscription.html#2.46.6.1</a><br>\n2. Criteria are expressed in the FHIR API Search framework, see the choice construction in the second paragraph of <a href=\"http://hl7.org/fhir/search.html#combining\" target=\"_blank\" title=\"http://hl7.org/fhir/search.html#combining\">http://hl7.org/fhir/search.html#combining</a><br>\n3. One of the public test servers (see <a href=\"http://wiki.hl7.org/index.php?title=Publicly_Available_FHIR_Servers_for_testing\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=Publicly_Available_FHIR_Servers_for_testing\">here</a>) but it is also very easy to setup a local <a href=\"http://docs.simplifier.net/vonk/\" target=\"_blank\" title=\"http://docs.simplifier.net/vonk/\">Vonk</a> test server.</p>",
        "id": 153977897,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1532529492
    },
    {
        "content": "<p>Thanks for the answer!<br>\nSo what do I need to add to the Subscription to request the entire resource be sent to my endpoint?</p>\n<p>Also, I see the combining, but can we use \"or\" statements instead of \"and\" so we want Encounters with a Status of Planned OR Arrived OR Finished?</p>",
        "id": 153977907,
        "sender_full_name": "Justin",
        "timestamp": 1532530642
    },
    {
        "content": "<p>Also, how do you import a Subscription Resource into a Fhir server?</p>",
        "id": 153977981,
        "sender_full_name": "Justin",
        "timestamp": 1532539718
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191757\">@Christiaan Knaap</span>  <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> <br>\nI am using the HAPI FHIR Server and a custom CQF Ruler  as a call back endpoint for my CDS Service.</p>\n<p>I dea is to fire a subscription via a rest hook to ship resources of interest to be evaluated by CDS Service.</p>\n<p>So my Subscription looks like this </p>\n<div class=\"codehilite\"><pre><span></span>{\n &quot;resourceType&quot;: &quot;Subscription&quot;,\n &quot;status&quot;: &quot;active&quot;,\n &quot;end&quot;: &quot;2018-12-20T13:27:56.202+05:30&quot;,\n &quot;reason&quot;: &quot;Detect New Discharge&quot;,\n &quot;criteria&quot;: &quot;Encounter?status=finished&quot;,\n &quot;channel&quot;: {\n   &quot;type&quot;:&quot;rest-hook&quot; ,\n   &quot;endpoint&quot;: &quot;https:/blah.com/clinicDecision/cds/stroke&quot;,\n   &quot;payload&quot;: &quot;application/fhir+json&quot;\n }\n}\n</pre></div>\n\n\n<p>So when I create an Encounter with status=finished with ID:4622205,  I do get a call back but it looks like this .. so rest hook is working(see entry below from logs in CDS service).</p>\n<div class=\"codehilite\"><pre><span></span>info method=PUT path=&quot;/clinicDecision/cds/stroke/Encounter/4622205&quot; host=blah.com request_id=4a65aa71-f673-4551-aaa4-efaa1be815af fwd=&quot;104.154.163.222&quot; dyno=web.1 connect=1ms service=669ms status=404 bytes=310 protocol=https\n</pre></div>\n\n\n<p>Notice the URL /clinicDecision/cds/stroke/Encounter/4622205 for the call back URL. It appears the FHIR server is appending the newly created resource to the callback URL.</p>\n<p>I thought I would get a bundle or a specific Encounter Resource in the payload.</p>\n<p>I have tried create , update of the Encounter resource.</p>\n<p>I am not sure if this expected behaviour or a bug or I may be doing something wrong.</p>\n<p>-R</p>",
        "id": 153980010,
        "sender_full_name": "Rishi Tarar",
        "timestamp": 1533088546
    },
    {
        "content": "<p>I don't know what happens in HAPI, but have you also tried this in <a href=\"http://vonk.fire.ly\" target=\"_blank\" title=\"http://vonk.fire.ly\">Vonk</a> to check whether an error may be on your side on on the HAPI side?<br>\nPlease note that in Vonk you have to post your Subscription to the administration API: POST <a href=\"http://vonk.fire.ly/administration/Subscription\" target=\"_blank\" title=\"http://vonk.fire.ly/administration/Subscription\">http://vonk.fire.ly/administration/Subscription</a>, and then your Encounter to the regular endpoint: POST <a href=\"http://vonk.fire.ly/Encounter\" target=\"_blank\" title=\"http://vonk.fire.ly/Encounter\">http://vonk.fire.ly/Encounter</a>.</p>",
        "id": 153980106,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1533113371
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191757\">@Christiaan Knaap</span> <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> </p>\n<p>Thank you.</p>\n<p>Tested it with Vonk and Subscriptions fire to the callback rest hook endpoint. It works as expected on Vonk. It probbably is a bug in HAPI.</p>\n<p>It is also interesting to note that Vonk rest-hook callbacks are POST and HAPI is PUT.</p>\n<div class=\"codehilite\"><pre><span></span> {&quot;resourceType&quot;:&quot;Encounter&quot;,&quot;id&quot;:&quot;c6831b8e-bac5-4dee-b0f1-172761204f56&quot;,&quot;meta&quot;:{&quot;versionId&quot;:&quot;6d1f1379-4c78-4acb-bea5-a2a65a4d3fc1&quot;,&quot;lastUpdated&quot;:&quot;2018-08-01T11:41:49.369+00:00&quot;},&quot;status&quot;:&quot;finished&quot;,&quot;class&quot;:{&quot;system&quot;:&quot;http://hl7.org/fhir/encounter-class&quot;,&quot;code&quot;:&quot;inpatient&quot;,&quot;display&quot;:&quot;Inpatient&quot;},&quot;subject&quot;:{&quot;reference&quot;:&quot;Patient/934740&quot;,&quot;display&quot;:&quot;Bunny Bugs &quot;},&quot;period&quot;:{&quot;start&quot;:&quot;2000-08-21T11:56:23.000+05:30&quot;}}\n</pre></div>",
        "id": 153980177,
        "sender_full_name": "Rishi Tarar",
        "timestamp": 1533124061
    },
    {
        "content": "<p>Thanks for testing. <br>\nOn the latter point HAPI is more correct, since the <a href=\"http://hl7.org/fhir/subscription.html#2.46.6.1\" target=\"_blank\" title=\"http://hl7.org/fhir/subscription.html#2.46.6.1\">spec</a> specifies that it has to be an Update operations (ie PUT)</p>",
        "id": 153980181,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1533124216
    },
    {
        "content": "<p>HAPI is treating the <code>endpoint</code> as the base URL of a FHIR REST endpoint, which is why it adds the resource type and ID to it.</p>\n<p>I could swear that was more explicit in the spec at some point, but at this point it doesn't seem like it is. I know lots of people rely on this behaviour though to use the rest-hook mechanism for replication.</p>\n<p>Maybe it should be configurable...</p>",
        "id": 153980337,
        "sender_full_name": "James Agnew",
        "timestamp": 1533142498
    },
    {
        "content": "<p>Subscriptions in the standard still lack the functionality to ship the immediate evaluation of the criteria once created, right? Am I the only one that sees that as a problem?</p>",
        "id": 153993365,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1536137198
    },
    {
        "content": "<p>what does 'ship the immediate evaluation of the criteria once created' mean?</p>",
        "id": 153993397,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536152934
    },
    {
        "content": "<p>Its the case I presented during a BoF on Subscriptions at DevDays '17. The case is today:<br>\nStep 1) Client issues a query against the server in order to obtain the current state<br>\nStep 2000) Client creates a subscription at the server with the same query used in step 1</p>\n<p>That's what the current spec says</p>",
        "id": 153993545,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1536174166
    },
    {
        "content": "<p>Anything can happen in between Step 1 and Step 2000. Being the state the client thought was the correct and the state where the client starts to get updates from the subscription</p>",
        "id": 153993546,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1536174278
    },
    {
        "content": "<p>What I suggest is that you cut away step 1 - it does not make sense</p>",
        "id": 153993547,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1536174306
    },
    {
        "content": "<p>Instead, once a subscription is created, the criteria should be evaluated at once and the result should be sent to the client on the means specified in the subscription</p>",
        "id": 153993548,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1536174367
    },
    {
        "content": "<p>so that is \"ship the immediate evaluation of the criteria once created\"</p>",
        "id": 153993549,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1536174399
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 153993550,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1536174518
    },
    {
        "content": "<p>It depends on the method used by the Client to get updates. Where for example with websockets the client just gets a ping; therefore the client must remember the timestamp it last used in previous query. Thus it is often helpful to do all the queries up to NOW, then start the subscription., do one more, then wait for a ping.</p>",
        "id": 153993589,
        "sender_full_name": "John Moehrke",
        "timestamp": 1536182174
    },
    {
        "content": "<p>a very different use of subscription, that I worked on a prototype, is as an async API to XCA environment. In that case there is nothing to find prior to the subscription, as the subscription is what kicks off the XCA FindDocuments queries to ALL partners on the network. As results come back on the XCA queries, a notification is given to the client, so that the client can then go get everything starting from last time it queried, which for the first time is time zero.</p>",
        "id": 153993590,
        "sender_full_name": "John Moehrke",
        "timestamp": 1536182353
    },
    {
        "content": "<p>why not create the subscription, then do the query?</p>",
        "id": 153993598,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536184772
    },
    {
        "content": "<p>doesn't that put a certain amount of logic into the client that ain't necessarily consistent across client implementations?</p>",
        "id": 153993626,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1536217492
    },
    {
        "content": "<p>I admit that I cannot directly see the case for my suggestion on \"eager evaluation\" when payload is not part of the notifications</p>",
        "id": 153993627,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1536217947
    },
    {
        "content": "<p>But when payload is wanted, I can't see any reason for not doing eager evaluation. It places the responsibility at a central place</p>",
        "id": 153993629,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1536218180
    },
    {
        "content": "<p>Thereby providing some consistency to what can be expected</p>",
        "id": 153993635,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1536219142
    },
    {
        "content": "<p>the initial load could be very large</p>",
        "id": 153995555,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536612421
    },
    {
        "content": "<p>Isn't the client the only one that can know what that initial load is? Let me explain, the server can only know what NEW has happened. The server can't know what else the client is interested in. Thus the client is the only one that can know how deep into history it needs to go. If the client has no interest in history, just NEW, then the client does nothing. right?</p>",
        "id": 153995572,
        "sender_full_name": "John Moehrke",
        "timestamp": 1536613678
    },
    {
        "content": "<p>that's what I think, yes</p>",
        "id": 153995625,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536619813
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194261\">@Rishi Tarar</span> , did you enable anything for subscription on HAPI FHIR Test server? I followed your steps, but i didnt receive any response back for the update in subscribed resources.. Please advise.</p>",
        "id": 153997587,
        "sender_full_name": "Sahil Khanna",
        "timestamp": 1537271643
    },
    {
        "content": "<blockquote>\n<p>that's what I think, yes</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>  What you describe as the initial load is executed anyways - by the client at first 'encounter' with the server.</p>",
        "id": 153999594,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1537824772
    }
]