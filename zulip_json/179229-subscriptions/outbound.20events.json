[
    {
        "content": "<p>Imagine the following flow:<br>\nWhen the client issues a subscription, the server acknowledges the subscription and returns a bundle including the subscription as well as the evaluated result of the criteria (initial result set). Now, whenever a change occurs that would result in a different result set according to the criteria, a change/update is sent - this could be either an update, create or delete on one of the resources in the set. If this is done e.g. over Server-Sent Events (SSE) or Web sockets, order is also guaranteed over the same connection without having the server deal with a client behind a firewall. Clients will therefor not need to ever query again for the given criteria/predicate, meaning that the clients can be developed as almost pure event driven applications and that the load for handling queries from clients is lowered considerably. Can you dig it? (While there may be general security issues related to emitting events embedding content, this scheme may be a great fit for own/approved applications).</p>\n<p>Just a thought</p>",
        "id": 153904439,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1504614550
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  there you go</p>",
        "id": 153904440,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1504614569
    },
    {
        "content": "<p>Is this the equivalient of the CCOW stuff?</p>",
        "id": 153904524,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1504649836
    },
    {
        "content": "<p>Hey Brian - yes, but on FHIR!</p>",
        "id": 153904531,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1504650983
    },
    {
        "content": "<p>Looks good, except I'm not convinced on the ImagingStudy, Patient,Encounter properties.<br>\nThe context of the user session is not always that simple. A session with a group for example, or a mediation session.<br>\nThen all the other resource types other than ImagingStudy that could be open</p>",
        "id": 153904534,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1504653116
    },
    {
        "content": "<p>My description of the flow is pretty generic and could in principle be implemented on any RESTful server that supports an outbound eventing mechanism. I can't see why CCOW shouldn't be supported in some FHIR'ish way</p>",
        "id": 153904597,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1504680102
    },
    {
        "content": "<blockquote>\n<p>Looks good, except I'm not convinced on the ImagingStudy, Patient,Encounter properties.</p>\n</blockquote>\n<p>Yeah, you're exactly right. I think that 0..1 patient and encounter meets the 80+% use-case. We're  suggesting ImagingStudy simply because it fits the first use-case. </p>\n<p>Would you recommend adding additional elements for each of the other resource types that could be included in a session?</p>",
        "id": 153904624,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1504702064
    },
    {
        "content": "<p>I'd be more likely to suggest something along the lines of <code>OpenResources 0..* (Any)</code></p>",
        "id": 153904704,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1504726906
    },
    {
        "content": "<p>or maybe a pair:<br>\n<code>focusedResources</code> and <code>SupportingResources</code></p>",
        "id": 153904705,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1504727001
    },
    {
        "content": "<p>I'm not following this discussion - where did the  resource specific stuff come from.</p>",
        "id": 153904932,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1504841245
    },
    {
        "content": "<p>we could work this by adding an extension to the subscription asking for an initial dump on the specified channel of all the existing matching resources</p>",
        "id": 153904933,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1504841281
    },
    {
        "content": "<p>this wouldn't work for the topic type subscriptions we're talking about on the other channel</p>",
        "id": 153904934,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1504841300
    },
    {
        "content": "<p>I figured out where the resource stuff came from - crossing topics.</p>",
        "id": 153904938,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1504841663
    }
]