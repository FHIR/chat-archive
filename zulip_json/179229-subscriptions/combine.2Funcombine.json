[
    {
        "content": "<p>Alright my FHIIR query/FHIRPath gurus... How would you do the prev and next or FHIRPath criteria to detect a patient combine or uncombine?</p>",
        "id": 175710964,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568483047
    },
    {
        "content": "<p>In R4, the Patient.link set of data would change, but you only care if links of type replaces or replaced-by</p>",
        "id": 175710981,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568483109
    },
    {
        "content": "<p>link is a query param...</p>",
        "id": 175710987,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568483143
    },
    {
        "content": "<p>but it's the reference it's defined against</p>",
        "id": 175711041,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568483218
    },
    {
        "content": "<p>Can you give an example of before-and-after data?</p>",
        "id": 175711615,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568484243
    },
    {
        "content": "<p>The below is at the bottom of the Patient resource in the after, and not there in the before.</p>\n<div class=\"codehilite\"><pre><span></span>  &lt;link&gt;\n    &lt;other&gt;\n      &lt;reference value=&quot;Paitent/01&quot; /&gt;\n      &lt;display value=&quot;Mary Lincoln&quot; /&gt;\n    &lt;/other&gt;\n    &lt;type value=&quot;replaces&quot; /&gt;\n  &lt;/link&gt;\n</pre></div>",
        "id": 175711694,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1568484393
    },
    {
        "content": "<p>so we assume %current and %previous are available? and we're looking for anything different? Not quite sure what the parameters are</p>",
        "id": 175711696,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568484399
    },
    {
        "content": "<p>There are some example patient resources on this page Josh<br>\n<a href=\"https://confluence.hl7.org/display/PA/Connectathon+Sept+2019+at+WGM+%28Atlanta%29+Patient+%24Merge\" target=\"_blank\" title=\"https://confluence.hl7.org/display/PA/Connectathon+Sept+2019+at+WGM+%28Atlanta%29+Patient+%24Merge\">https://confluence.hl7.org/display/PA/Connectathon+Sept+2019+at+WGM+%28Atlanta%29+Patient+%24Merge</a></p>",
        "id": 175711704,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1568484430
    },
    {
        "content": "<p>After a merge, the merged <em>to</em> patient will have a new Patient.link of type \"replaces\", the merged <em>away</em> patient will have a new Patient.link of type \"replaced-by\"</p>",
        "id": 175712380,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568485559
    },
    {
        "content": "<p>After an unmerge, the unmerged <em>from</em> patient will have a Patient.link of type \"replaces\" removed, the unmerged <em>to</em> patient will have a Patient.link of type \"replaced-by\" removed.</p>",
        "id": 175712432,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568485607
    },
    {
        "content": "<p>I think :)</p>",
        "id": 175712435,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568485611
    },
    {
        "content": "<p><code>%this.link.where(type = 'replaced-by').count() != %previous.link.where(type = 'replaced-by').count()</code></p>",
        "id": 175712513,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568485731
    },
    {
        "content": "<p>but... that's loose. what exact events do you want? can you have more than replace-by? no? but you could have more than replaces, yes?</p>",
        "id": 175712529,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568485778
    },
    {
        "content": "<p>There's also a question of listening for an operation call directly. Today we have defined <code>Topic.resourceTrigger</code>, but when we want to trigger on operation invocations, we may want an <code>operationTrigger</code> (i.e., rather than looking for the <em>result</em> of the operation as it plays out in the affected resources, we may want to learn about the operation invocation itself).</p>",
        "id": 175712653,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568485949
    },
    {
        "content": "<p>But for operations that <em>do</em> impact resources, like Patient $merge,  listening for telltale changes on Patient with a filter like Grahame defined above seems pretty reasonable.</p>",
        "id": 175712660,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568485970
    },
    {
        "content": "<p>Right, I think you would want to handle both. In our server, very few will likely come through the actual FHIR operation (for quite a while). But that wouldn't be true for native FHIR servers.</p>",
        "id": 175712694,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568486026
    },
    {
        "content": "<p>Trying to figure out how to make it actually computable</p>",
        "id": 175712765,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568486120
    },
    {
        "content": "<p>Yeah. I think Grahame's solution is a good start. Are there any cases it misses? Or where it triggers unnecessarily?</p>",
        "id": 175712850,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568486188
    },
    {
        "content": "<p>it's tricky. I can write FHIRpath statements but exactly you are looking for depends on what you're doing</p>",
        "id": 175712867,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568486211
    },
    {
        "content": "<p>In the patient merge track we are increasingly distinguishing between merge and link.  We're leaning toward suggesting (but not requiring) that the $merge operation not actually do anything with Patient.link</p>",
        "id": 175712973,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568486351
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span>  this one.</p>",
        "id": 175712974,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1568486351
    },
    {
        "content": "<p>In a merge, the source record could be deleted, and the new (target) record may either 1) have no changes or 2) have some normal demographic changes (e.g. address) if the source patient demographics were carried over.  In both cases the link property on the target patient would not be touched.</p>",
        "id": 175713042,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568486422
    },
    {
        "content": "<p>Our system would do everything based on link/we update the relationships under the covers for legal reasons.</p>",
        "id": 175713124,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568486523
    },
    {
        "content": "<p>which should work if a system can trigger off of an operation</p>",
        "id": 175713135,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568486554
    },
    {
        "content": "<p>so as long as I can <em>still</em> do that...</p>",
        "id": 175713136,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568486554
    },
    {
        "content": "<p>Also, this gets back to the discussion about logical subscription vs. trying to compute</p>",
        "id": 175713139,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568486566
    },
    {
        "content": "<p>EG: ADT - it doesn't matter if a system is running the exact query under the covers, as long as it meets the functional need/description of the trigger</p>",
        "id": 175713149,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568486611
    },
    {
        "content": "<p>Which is why it's ok if systems run it off their older ADT systems for admission, discharge, and transfer subscriptions</p>",
        "id": 175713194,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568486648
    },
    {
        "content": "<p>But we should make sure it works for both types of use cases</p>",
        "id": 175713195,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568486648
    },
    {
        "content": "<p>Even though you link under the covers, would you  \"pretend\" that the source patient was deleted when represented via the FHIR patient.search API?  Or would you return the source patient in your search results, just marked as inactive?</p>",
        "id": 175713305,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568486878
    },
    {
        "content": "<blockquote>\n<p>the $merge operation not actually do anything with Patient.link</p>\n</blockquote>\n<p>+1</p>",
        "id": 175713344,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568486891
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span>  it's treated as inactive, and isn't returned if you're just searching</p>",
        "id": 175713361,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568486948
    },
    {
        "content": "<p>You can read it by id, and we redact all the demographic info, and then have patient.link that tells you where to go look</p>",
        "id": 175713365,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568486973
    },
    {
        "content": "<p>Eg: <a href=\"https://fhir.cerner.com/millennium/dstu2/individuals/patient/#patient-combines-example\" target=\"_blank\" title=\"https://fhir.cerner.com/millennium/dstu2/individuals/patient/#patient-combines-example\">https://fhir.cerner.com/millennium/dstu2/individuals/patient/#patient-combines-example</a></p>",
        "id": 175713414,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568487014
    },
    {
        "content": "<p>In DSTU 2, you couldn't link both directions, so for R4 I would like to take advantage of that so that you can see that data has gone nuts under the covers regardless of which patient your system uses</p>",
        "id": 175713436,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568487098
    },
    {
        "content": "<p>Also, if data comes in to that old patient, our system records it on the new and records in the system that the old id was used (for unmerge). This is usually something that is limited to the time that it takes to do the actual merge.</p>",
        "id": 175713963,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568487945
    },
    {
        "content": "<p>And not something we would expect to keep happening after the merge is completed (since no one could load the old patient anymore)</p>",
        "id": 175714008,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568487965
    },
    {
        "content": "<p>But back to the subscription use case, if the merge track is leaning toward not requiring a patient link, then monitoring patient.link for subscriptions won't be reliable.</p>",
        "id": 175714279,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568488380
    },
    {
        "content": "<p>Which goes back to being able to monitor a combination of things. EG: our server may not support the merge operation, but that doesn't mean we won't be merging under the covers...</p>",
        "id": 175714294,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568488421
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span> I haven't followed the merge track, and out of curiosity – what's the reason for leaning to <em>not</em> requiring <code>Patient.link</code>?</p>",
        "id": 175714802,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1568489281
    },
    {
        "content": "<p>This would be for cases where the source patient resource (that was merged into a target patient resource) gets deleted, and no longer accessible from the API, and hence the resource Id that would be in the link is now a dead link.</p>",
        "id": 175715343,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1568490212
    },
    {
        "content": "<p>1. If the source patient is deleted (not just inactive) as it is in some implementations, then it doesn't exist to be linked to<br>\n2. We've been thinking about link representing more of a cross-domain patient association, while a merge represents an intra-domain process that combines data.  e.g. with merge, all references in all resources need to be fixed up to point to the resulting patient, but in link, they don't.  All that to say that the meaning of link is shifting a bit.</p>",
        "id": 175715879,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568491201
    },
    {
        "content": "<p>I believe that we need to support link/unlink in internal records as well as full merge.</p>",
        "id": 175716002,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568491339
    },
    {
        "content": "<p>I'm not opposed to supporting cross-domain association as well</p>",
        "id": 175716009,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568491364
    },
    {
        "content": "<p>As semantically the same as merge?  Or different?  I.e. if you link two patients, does that mean to get a full picture of their allergies you need to do two searches?  Or would all the allergies be returned by a single AllergyIntolerance?patient=2?</p>",
        "id": 175716165,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568491650
    },
    {
        "content": "<p>search on both patients.</p>",
        "id": 175716557,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568492306
    },
    {
        "content": "<p>that's not the same as 1 or 2 searches</p>",
        "id": 175716560,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568492318
    },
    {
        "content": "<p>It depends on the SMART scopes you have.   If you only got access to one patient, you would need to re-auth to get access to all the other linked patients (maybe).</p>\n<p>And if there are 3-4 links that get added over time, then the flow always becomes:  1) do a SMART launch, get the patient ID in context.  2) query that patient get all the links 3) hope your SMART scope lets you see all of them and 4) query for all the linked IDs.  You'd also need to hope that all of the (say 4) patients are cross linked, so you don't have to follow links to each patient, and then follow those links, etc. to get a full view.</p>\n<p>And if we support both link and merge, then every client will need to support that workflow as well as the simple single-patient search workflow depending on the system they talk to.</p>",
        "id": 175716665,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568492521
    },
    {
        "content": "<p>yes all those things!</p>",
        "id": 175716847,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568492764
    },
    {
        "content": "<p>I'm curious why a replaces or replaced by would leave data out on the old patient?</p>",
        "id": 175716984,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568493005
    },
    {
        "content": "<p>By definition \"The patient resource containing this link must no longer be used. The link points forward to another patient resource that must be used in lieu of the patient resource that contains this link.\"</p>",
        "id": 175716998,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568493036
    },
    {
        "content": "<p>and \"The patient resource containing this link is the current active patient record. The link points back to an inactive patient resource that has been merged into this resource, and should be consulted to retrieve additional referenced information.\"</p>",
        "id": 175717010,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568493075
    },
    {
        "content": "<p>If we move all the data from the old patient, what is the value of having the replaced by link?  As opposed to a redirec or something like that?</p>",
        "id": 175717015,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568493098
    },
    {
        "content": "<p>I would think that for the workflows you all are referring to, it would be invalid to use those link types?</p>",
        "id": 175717068,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568493145
    },
    {
        "content": "<p>See also and refer would be more appropriate?</p>",
        "id": 175717069,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568493145
    },
    {
        "content": "<p>It depends on how the system is integrating</p>",
        "id": 175717070,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568493145
    },
    {
        "content": "<p>If it has its own set of data, it may have its own logic to merge</p>",
        "id": 175717071,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568493145
    },
    {
        "content": "<p>and need the new one</p>",
        "id": 175717072,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568493148
    },
    {
        "content": "<p>zulip seems to be reorganizing the order of this conversation for me... weirdness</p>",
        "id": 175717140,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568493275
    },
    {
        "content": "<p>We're too quick for it</p>",
        "id": 175717141,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568493277
    },
    {
        "content": "<p>The value in having at least the old <code>Patient</code> resource available is that clients that have refresh tokens can still retrieve that resource and infer from its links that something has happened to which the client needs to take action. Even if this just means throw away the tokens and have the user sign in again (and invalidate all the locally stored resources).</p>",
        "id": 175717157,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1568493327
    },
    {
        "content": "<p>Yeah - we were considering what to do about token expiration.  Specifically for patient-authorized representatives.  We were leaning toward adding guidance to expire all tokens, since you might want to review who should have access to the new merged chart.  Input on that point would be nice.</p>",
        "id": 175717209,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568493400
    },
    {
        "content": "<p>For patient-self access, maybe we don't expire those?</p>",
        "id": 175717212,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568493420
    },
    {
        "content": "<p>My gut says yeah, don't expire.</p>",
        "id": 175717222,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568493448
    },
    {
        "content": "<p>It isn't like the patient did something to make that happen.</p>",
        "id": 175717225,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568493453
    },
    {
        "content": "<p>My gut says the same!</p>",
        "id": 175717227,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1568493460
    },
    {
        "content": "<p>And our direction in general has been away from expiring patient tokens unless there's a really good reason.</p>",
        "id": 175717231,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568493472
    },
    {
        "content": "<p>The problem, in our system, is that there's nothing anymore that lets us figure out who the patient is from their sign on</p>",
        "id": 175717286,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568493550
    },
    {
        "content": "<p>Are you both saying don't expire for patient self-access only?  Or patient-authorized representative access as well?</p>",
        "id": 175717287,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568493553
    },
    {
        "content": "<p>(if you were the loser in the merge operation)</p>",
        "id": 175717295,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568493572
    },
    {
        "content": "<p>I  was only talking about self-access.</p>",
        "id": 175717299,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568493596
    },
    {
        "content": "<p>I agree with your \"input would be nice\" on the proxy access case.</p>",
        "id": 175717342,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568493609
    },
    {
        "content": "<p>(So I guess I agree with you on both cases.)</p>",
        "id": 175717345,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568493619
    },
    {
        "content": "<p>Even with self-access though, before the merge you have two different user accounts (with two different passwords maybe).  After the merge, I'm not really sure if both accounts should be able to access the resulting patient or what.  I need to investigate what we (Epic ) do there.</p>",
        "id": 175717355,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568493689
    },
    {
        "content": "<p>AH,</p>",
        "id": 175717405,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568493739
    },
    {
        "content": "<p>Yes, of course.</p>",
        "id": 175717408,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568493743
    },
    {
        "content": "<p>I was talking about the target patient's token.</p>",
        "id": 175717409,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568493744
    },
    {
        "content": "<p>Target patient for us is still good, keeps moving on with life</p>",
        "id": 175717411,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568493758
    },
    {
        "content": "<p>Likewise</p>",
        "id": 175717412,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568493768
    },
    {
        "content": "<p>just has new magic data back in the past</p>",
        "id": 175717415,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568493772
    },
    {
        "content": "<p>Yep.</p>",
        "id": 175717416,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568493777
    },
    {
        "content": "<p>The problem I have with expiring tokens is that this makes me prompt the user to sign-in again (which we also do in other scenarios, e.g. refresh token revoked). That alone doesn't tell me that I should or should not delete all the data I have. And then, upon re-login, I get a different patient ID back – which again could happen in this merge scenario but also because the user selected the wrong patient from the picker or used different credentials. And I as a client again don't know what to do with the old data that I have.</p>",
        "id": 175717427,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1568493815
    },
    {
        "content": "<p>Which (as <span class=\"user-mention\" data-user-id=\"191339\">@Pascal Pfiffner</span> and <span class=\"user-mention\" data-user-id=\"193764\">@Ricky Bloomfield</span> and I discussed earlier) is easy for everyone involved.  \"Oh nice,\" says the client, \"more data!\"  (Talking about the target patient, since things get out of order in chat)</p>",
        "id": 175717428,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568493817
    },
    {
        "content": "<p>This might be a little bit of a stretch, but we do grant different access based on criteria like age.  So if the target patient is an adult, and has full access, and the source patient is a minor and has limited access... what permissions do the accounts have to the resultant patient (depending on which birth day was identified as being correct).</p>",
        "id": 175717475,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568493855
    },
    {
        "content": "<p>Ugh</p>",
        "id": 175717477,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568493870
    },
    {
        "content": "<p>Good point. The issue is about differences between Patient Identifier domain and Patient Portal Security domain from a solution perspective. Can we assume that the patient registry and patient security directory are two distinct instances ( I think that most cases are)? If they are different instances,  merging two patients in the patient identifier domain(s) triggers a task to consolidate patient security credentials of two patients in the security domain(s).</p>",
        "id": 175719357,
        "sender_full_name": "Charles Ye",
        "timestamp": 1568497104
    },
    {
        "content": "<p>I would have thought that with the Patient resource ID in the token, you wouldn't be able to get at any data anymore... (if you were the loser as <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> so nicely points out)</p>",
        "id": 175720389,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1568498892
    },
    {
        "content": "<p>yes, that's exactly why ours kills the session :)</p>",
        "id": 175720761,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568499524
    }
]