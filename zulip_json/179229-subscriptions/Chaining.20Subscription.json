[
    {
        "content": "<p>We are working on a feasibility of a use case using subscriptions. The goal is to send a notification when a patient is discharged with an observation having a certain result from a value set. We, however, found that most of the current FHIR implementation servers have not yet fully implemented the complex subscription criteria where the criteria spans across multiple FHIR resources types e.g. Pt, Observation and Encounter. </p>\n<p>To get around this limitation, we tried chaining of subscriptions see below:</p>\n<p>We divided the subscriptions into two and chained them. When the first subscription fires (Observation), we used a CDS service to dynamically register a new subscription (pt context+encounter). This chaining actually worked. Any comments if this is a proper use of such transactions.</p>\n<p><span class=\"user-mention\" data-user-id=\"194261\">@Rishi Tarar</span></p>",
        "id": 153955091,
        "sender_full_name": "ArunSrinivasan",
        "timestamp": 1525121030
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span>  <span class=\"user-mention\" data-user-id=\"191757\">@Christiaan Knaap</span>  any insights would be helpful...  Our need is purely non UI based CDS triggering to a remote service.. for further adjudication using CQL.</p>",
        "id": 153955098,
        "sender_full_name": "Rishi Tarar",
        "timestamp": 1525121344
    },
    {
        "content": "<p>well, it would be better if everyone supported everything, but that's not the world we live in... so I think it's a proper use...</p>",
        "id": 153955101,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525121631
    },
    {
        "content": "<p>For lack of better, yes. But I have been looking for a use case that justifies implementing chained subscriptions for Vonk (if at all possible in a performing way), so thanks for this one.</p>",
        "id": 153955621,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1525330235
    }
]