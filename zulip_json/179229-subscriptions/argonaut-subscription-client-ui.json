[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span> I'm trying to use your UI (running locally) to help drive my server side work. I'm able to get up to the point where it requests the subscription from my server, and I can see in my logs that it was created successfully, but the UI outputs the following</p>\n<p>Request for Subscription (<a href=\"http://localhost:3000/beta/2c400054-42d8-4e74-87b7-80b5bd5fde9f/Subscription/\" target=\"_blank\" title=\"http://localhost:3000/beta/2c400054-42d8-4e74-87b7-80b5bd5fde9f/Subscription/\">http://localhost:3000/beta/2c400054-42d8-4e74-87b7-80b5bd5fde9f/Subscription/</a>) failed:<br>\nSyntaxError: Unexpected end of JSON input</p>\n<p>What is it expecting for a response from the create? Typically for a POST only the HTTP Status, Location, and ETag are returned</p>",
        "id": 175337469,
        "sender_full_name": "Bradley Strecker",
        "timestamp": 1568123320
    },
    {
        "content": "<p>I am NOT running the Client Host locally, I'm pointing that to <a href=\"https://client.subscriptions.argo.run\" target=\"_blank\" title=\"https://client.subscriptions.argo.run\">https://client.subscriptions.argo.run</a>, could that be related?</p>",
        "id": 175337690,
        "sender_full_name": "Bradley Strecker",
        "timestamp": 1568123422
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191577\">@Bradley Strecker</span> , I had put in resource return so that it could be displayed and you're the first to bring it up.  I will update the UI to allow for the different return types and post shortly.</p>",
        "id": 175344352,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1568127105
    },
    {
        "content": "<p>Cool. Was just trying to make sure I wasn't missing something. The argonaut scenario (<a href=\"https://github.com/argonautproject/subscriptions/tree/master/connectathon-scenarios-201909#scenario-1\" target=\"_blank\" title=\"https://github.com/argonautproject/subscriptions/tree/master/connectathon-scenarios-201909#scenario-1\">https://github.com/argonautproject/subscriptions/tree/master/connectathon-scenarios-201909#scenario-1</a>) does kind of imply the resource should be returned (\"4. Server responds with status: requested\"), but that does seem strange. Maybe a hold-over from the previous design?</p>",
        "id": 175344647,
        "sender_full_name": "Bradley Strecker",
        "timestamp": 1568127270
    },
    {
        "content": "<p>I just implemented that by default instead of checking the <a href=\"http://www.hl7.org/fhir/http.html#2.21.0.5.2\" target=\"_blank\" title=\"http://www.hl7.org/fhir/http.html#2.21.0.5.2\">Prefer header</a>.  For clarity I started with return=representation, and forgot to make a note to do the other ones.  I've added a task to honor that header in the proxy properly so that future clients work as expected as well.</p>",
        "id": 175345603,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1568127747
    },
    {
        "content": "<p>One other thing I've noticed, that might (?) be easy to support would be to accept an Auth header that could be used by the client when talking to the FHIR server during the workflow. This is separate from the Auth header which can be captured as part of the Subscription body, but rather the Auth header used to tell the FHIR server that you are allowed access the FHIR server at all. We require authorization to perform any writes, so I've head to temporarily disable those checks for now</p>",
        "id": 175346859,
        "sender_full_name": "Bradley Strecker",
        "timestamp": 1568128380
    },
    {
        "content": "<p>I like it, will be in shortly.</p>",
        "id": 175347036,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1568128468
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191577\">@Bradley Strecker</span> , just pushed a new version now (will take a few minutes to be live).  It includes support for an Auth header for the FHIR server, as well as specifying the Prefer header.  The UI will now check for not having the normal resource returned (e.g., <code>minimal</code> or <code>OperationOutcome</code>) and fetch the necessary resource based on the Location header.<br>\nPlease let me know if you run into any issues or if there's anything else you need.</p>",
        "id": 175382482,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1568152827
    },
    {
        "content": "<p>Nice. I've pulled them down and verified that the changes work. It lets me do a little TODO cleanup in our server.</p>",
        "id": 175426906,
        "sender_full_name": "Bradley Strecker",
        "timestamp": 1568205826
    },
    {
        "content": "<p>Is the full workflow implemented for the Patient+REST scenario? I always get hung on the \"Wait on Endpoint Handshake\".  We are successfully sending the handshake notification and updating the status to \"active\", so I know something is receiving the handshake, but the UI never progresses. </p>\n<p>I've tried running the argonaut-subscription-client locally to see if I could identify anything, but not really familiar with .net :) None of the breakpoints that I think should be hitting are hitting</p>",
        "id": 175427305,
        "sender_full_name": "Bradley Strecker",
        "timestamp": 1568206100
    },
    {
        "content": "<p>Under the Patient+Rest tab, the sample topic resource has id = 1, and Title=\"admission\".  The sample subscription has topic.reference = \"<a href=\"https://server.subscriptions.argo.run/Topic/admission\" target=\"_blank\" title=\"https://server.subscriptions.argo.run/Topic/admission\">https://server.subscriptions.argo.run/Topic/admission</a>\".  (Note the examples at <a href=\"http://build.fhir.org\" target=\"_blank\" title=\"http://build.fhir.org\">build.fhir.org</a> have <a href=\"http://Topic.id\" target=\"_blank\" title=\"http://Topic.id\">Topic.id</a> = \"admission\" and Subscription.topic.reference = \"Topic/admission\".  Questions: 1) should the client UI subscription topic reference be to the topic id? (I am assuming yes) 2) Is the recommendation that if you have server side defined Topics, that the Topic id be human friendly?</p>",
        "id": 175428896,
        "sender_full_name": "Brian Wright",
        "timestamp": 1568207200
    },
    {
        "content": "<p>For (1), indeed the Subscription should point to its Topic with standard FHIR references (generally, a URL relative server base).</p>",
        "id": 175431156,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568208498
    },
    {
        "content": "<p>1) Since Subscription.topic is defined as a Reference(Topic) I would think it would have to be. FWIW, I've had my server using both \"1\" and \"admission\" as the topic id, and it the client UI subscription seems to honor that.</p>\n<p>2) I switched from \"Topic/1\" to \"Topic/admisson\" simply because I think \"Topic/1\" looks goofy :). Plus as a human looking at these \"Topic/admission\" seems more immediately obvious as to what it is. If client defined topics ever become a thing then allowing custom names seems like it would quickly lead to collisions and would be disgouraged, but the server could probably distinguish between server (friendly names) and client (generated ids) defined topics (as your caveat alludes)</p>",
        "id": 175431184,
        "sender_full_name": "Bradley Strecker",
        "timestamp": 1568208521
    },
    {
        "content": "<p>Drat, beat me</p>",
        "id": 175431202,
        "sender_full_name": "Bradley Strecker",
        "timestamp": 1568208535
    },
    {
        "content": "<p>We have not discussed (2), and I'm not sure I would make this recommendation in production, but it's very nice in a test environment.</p>",
        "id": 175431256,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568208574
    },
    {
        "content": "<p>And re (2), there's also <code>Topic.url</code> (which in my opinion should definitely be human-readable for any canonical URL). It doesn't show up the internal references, so it's not quite the same thing -- but figured I'd mention it as a place where human readability should also be considered.</p>",
        "id": 175432224,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568209171
    },
    {
        "content": "<blockquote>\n<p>Is the full workflow implemented for the Patient+REST scenario? I always get hung on the \"Wait on Endpoint Handshake\".  We are successfully sending the handshake notification and updating the status to \"active\", so I know something is receiving the handshake, but the UI never progresses. </p>\n<p>I've tried running the argonaut-subscription-client locally to see if I could identify anything, but not really familiar with .net :) None of the breakpoints that I think should be hitting are hitting</p>\n</blockquote>\n<p>The UI checks to see if the subscription event count is zero in order to qualify it as a handshake.  If you turn on console logging, you can see any events that the UI receives to figure out if the issue is there.<br>\nIf you are looking to set an endpoint in the Client Host, the area you want would be in EndpointServiceController.cs depending on what the endpoint is you are looking for.  I noticed that I have the endpoints set to only accept <code>application/fhir+json</code> right now, so if you are using a different content type that may be an issue.  I am updating the client host now so that it will also accept <code>application/json</code>.</p>",
        "id": 175439818,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1568213566
    },
    {
        "content": "<p>I also updated the flow in the UI so that it can start receiving notifications prior to the notification being created in the UI (in case they were coming in too quickly), but I'm guessing the other fix is more relevant.</p>",
        "id": 175440293,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1568213880
    },
    {
        "content": "<p>As a test, you can also post the sample handshake notification to the endpoint (e.g., with PostMan) and it should show up in the UI.  If it doesn't, we can track from there.</p>",
        "id": 175440476,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1568213980
    },
    {
        "content": "<blockquote>\n<p>Under the Patient+Rest tab, the sample topic resource has id = 1, and Title=\"admission\".  The sample subscription has topic.reference = \"<a href=\"https://server.subscriptions.argo.run/Topic/admission\" target=\"_blank\" title=\"https://server.subscriptions.argo.run/Topic/admission\">https://server.subscriptions.argo.run/Topic/admission</a>\".  (Note the examples at <a href=\"http://build.fhir.org\" target=\"_blank\" title=\"http://build.fhir.org\">build.fhir.org</a> have <a href=\"http://Topic.id\" target=\"_blank\" title=\"http://Topic.id\">Topic.id</a> = \"admission\" and Subscription.topic.reference = \"Topic/admission\".  Questions: 1) should the client UI subscription topic reference be to the topic id? (I am assuming yes) 2) Is the recommendation that if you have server side defined Topics, that the Topic id be human friendly?</p>\n</blockquote>\n<p>1) Yes that's an error.  The proxy is allowing resolution based on the title, which I'm not quite sure what I was doing.<br>\n2) I don't think that's desired.  It is that way in the examples for clarity, but in real-world scenarios I don't think we want the topic id to convey anything about the patient.  If it does, then we need to exclude the topic id from payloads (e.g., if the ID was <code>new-diagnosis-condition-x</code> then even the empty payload fully conveys that a person has been diagnosed with 'x'.</p>",
        "id": 175441870,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1568214756
    },
    {
        "content": "<blockquote>\n<p>The proxy is allowing resolution based on the title, which I'm not quite sure what I was doing.</p>\n</blockquote>\n<p>Found it: the Topic/admission was hard coded because I didn't want to assume that the server had implemented Topic discovery.  I will update it so that if you DO have topic discovery it will use the proper URL, otherwise it will default to that for demo purposes.</p>",
        "id": 175442174,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1568214909
    },
    {
        "content": "<p>Ok, I just pushed a new version of the UI.  It will use the URL for the proper topic if discovered, and for now will default to <code>Topic/admission</code> if topic discovery is not implemented or performed.<br>\nMade a note to refine this further to allow for the user to set the ID of the topic if discovery isn't implemented, but need to finish groups first.</p>",
        "id": 175445345,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1568216703
    },
    {
        "content": "<p>BTW <span class=\"user-mention\" data-user-id=\"191577\">@Bradley Strecker</span> just to confirm, does your implementation support Topic search (for the discovery step)? By find all, or by Topic.url?</p>",
        "id": 175445489,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568216786
    },
    {
        "content": "<p>Find all works, by id should (but it looks like I managed to break it): <a href=\"https://fhir-open.stagingcerner.com/beta/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/Topic?_format=json\" target=\"_blank\" title=\"https://fhir-open.stagingcerner.com/beta/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/Topic?_format=json\">https://fhir-open.stagingcerner.com/beta/0b8a0111-e8e6-4c26-a91c-5069cbc6b1ca/Topic?_format=json</a></p>",
        "id": 175445824,
        "sender_full_name": "Bradley Strecker",
        "timestamp": 1568217029
    },
    {
        "content": "<p>Currently I have the Topic.url for the admission topic set to \"<a href=\"http://argonautproject.org/subscription-ig/Topic/admission\" target=\"_blank\" title=\"http://argonautproject.org/subscription-ig/Topic/admission\">http://argonautproject.org/subscription-ig/Topic/admission</a>\", should it be that or pointing back to our own server?</p>",
        "id": 175446011,
        "sender_full_name": "Bradley Strecker",
        "timestamp": 1568217147
    },
    {
        "content": "<p>It should be that (our working canonical).  The UI now checks for a Topic with that URL, then grabs the ID of that Topic and uses that for the subscription (if you got the list of topics in step 1)</p>",
        "id": 175446226,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1568217281
    },
    {
        "content": "<p>Thanks, that's perfect :)</p>",
        "id": 175446993,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568217652
    },
    {
        "content": "<p>I think the whole canonical vs literal reference  thing is confusing in general and  for Subscription.topic   in particular and we should probably document that is the literal  ( relative or absolute reference to a resource and not the canonical.</p>",
        "id": 175508927,
        "sender_full_name": "Eric Haas",
        "timestamp": 1568276837
    },
    {
        "content": "<p>You're saying we'd want to prohibit the use of canonical URLs in Subscription.topic.reference?</p>",
        "id": 175532014,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568297028
    },
    {
        "content": "<p>The core spec says for literal references, \"The URL may contain a reference to a canonical URL\" (<a href=\"https://www.hl7.org/fhir/references.html#literal\" target=\"_blank\" title=\"https://www.hl7.org/fhir/references.html#literal\">https://www.hl7.org/fhir/references.html#literal</a>).  I kinda like this behavior, but I'm willing to be convinced otherwise. (Do you think it is a mistake for the court spec to allow this at all, or is Subscription.topic.reference a special case?)</p>",
        "id": 175532340,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568297233
    },
    {
        "content": "<p>That reference makes it pretty clear and the part that I was unclear about.   so I'm good.</p>",
        "id": 175534296,
        "sender_full_name": "Eric Haas",
        "timestamp": 1568298581
    }
]