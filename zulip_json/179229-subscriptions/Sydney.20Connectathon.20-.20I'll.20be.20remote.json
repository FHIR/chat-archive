[
    {
        "content": "<p>Hi everyone!  Unfortunately, I won't be at the Connectathon this weekend, so I wanted to post something here.</p>\n<p>For anyone who hasn't used it yet, there is a client/server test combo available at <a href=\"http://subscriptions.argo.run\" target=\"_blank\" title=\"http://subscriptions.argo.run\">subscriptions.argo.run</a>.</p>\n<p>Below is some short-ish info for using them.  While I won't be there, feel free to ping me on Zulip, I'll check periodically if there are any problems or requests with those tools.</p>\n<p>Anyway, are three projects accessed there: a UI, a proxy-server, and the \"client host\" server.  Together everything does the whole loop, but each piece can be used to test against something else (e.g., use the UI as a subscriptions client with a different server or use the server to test a different client).</p>\n<p>UI:</p>\n<ul>\n<li>TypeScript React App (link to repo is on the hosted page)</li>\n<li>Everything possible runs in the browser<ul>\n<li>Can't have REST endpoints in the browser, so those are in the Client Host</li>\n<li>Creating endpoints in the UI sets one up in the client host and shows that URL</li>\n<li>Notifications sent to endpoints in the session get forwarded to the UI</li>\n</ul>\n</li>\n</ul>\n<p>UI: Config Tab</p>\n<ul>\n<li>Settings (e.g., URLs, light/dark look, etc.)<ul>\n<li>FHIR Server URL can be set to your test URL</li>\n<li>Since everything runs in the browser, it can point to localhost, etc.</li>\n<li>Connecting gets the Capabilities Statement and checks for needed capabilities based on the operations in the UI</li>\n<li>If you are having trouble connecting to your server, turn on the 'Skip FHIR Server Capabilities Check' toggle</li>\n</ul>\n</li>\n<li>Useful links (e.g., to the current and previous Connectathons, to the GitHub repos of this software, etc.)</li>\n<li>Connect/Disconnect button: connect to the server and client host (required for all other operations)</li>\n</ul>\n<p>UI: Patient + REST</p>\n<ul>\n<li>Walks through a single-patient encounter notification and REST notifications</li>\n<li>\"On Rails\" version, only options available are valid for the scenario</li>\n</ul>\n<p>UI: Group + REST</p>\n<ul>\n<li>Same as above, but uses the <code>Group</code> resource for filtering events instead of <code>Patient</code></li>\n</ul>\n<p>UI: Playground</p>\n<ul>\n<li>Named appropriately  :-)</li>\n<li>Allows for testing of things like Websockets, Email, etc.</li>\n</ul>\n<p>UI: DevDays</p>\n<ul>\n<li>The most BASIC client tutorials I could figure out.</li>\n<li>More info can be found on my <a href=\"https://aka.ms/devdays-gino\" target=\"_blank\" title=\"https://aka.ms/devdays-gino\">DevDays slides</a></li>\n</ul>\n<p>Server Proxy:</p>\n<ul>\n<li>Thin proxy server that points to <a href=\"http://hapi.fhir.org\" target=\"_blank\" title=\"http://hapi.fhir.org\">hapi.fhir.org</a>.</li>\n<li>Intercepts everything it needs for Subscriptions</li>\n<li>Can be used directly, FHIR endpoint is: server.subscriptions.argo.run</li>\n</ul>\n<p>Client Host:</p>\n<ul>\n<li>Public hosted endpoints for testing</li>\n<li>Only useful paired with this UI</li>\n</ul>\n<p>Hope everything goes well this weekend, and safe travels!</p>",
        "id": 187037827,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1580423033
    }
]