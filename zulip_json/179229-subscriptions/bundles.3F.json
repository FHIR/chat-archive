[
    {
        "content": "<p>(deleted)</p>",
        "id": 154005213,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1538571427
    },
    {
        "content": "<p>Continued from <a href=\"#narrow/stream/4-implementers/topic/Subscriptions.20and.20includes\" title=\"#narrow/stream/4-implementers/topic/Subscriptions.20and.20includes\">https://chat.fhir.org/#narrow/stream/4-implementers/topic/Subscriptions.20and.20includes</a> - is it possible using subscriptions to get bundled resources in the events when using includes / revincludes in the criteria aka some sort of piggybacking?</p>",
        "id": 154006660,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1539005177
    },
    {
        "content": "<p>I don't believe we've commented about this. Let's start with this question: why do you want to do an include? is it that you need atomicity?</p>",
        "id": 154006774,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539023188
    },
    {
        "content": "<p>yes - one compound transaction should in the best case end up in one event</p>",
        "id": 154006849,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1539030199
    },
    {
        "content": "<p>what makes this a compound transaction?</p>",
        "id": 154006851,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539030244
    },
    {
        "content": "<p>nothing specially .... if I receive a transaction that creates both a patient and his/hers encounter I would like to be able to ship a single event using a subscription</p>",
        "id": 154006852,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1539030378
    },
    {
        "content": "<p>it saves me the trouble of having multiple subscriptions (one pr. type) and ordering of events</p>",
        "id": 154006853,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1539030477
    },
    {
        "content": "<p>And I would imagine that its a pretty common scenario ... (but I could be mistaken -  I just couldn't find any previous discussions about it)</p>",
        "id": 154006855,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1539030567
    },
    {
        "content": "<p>but then again ... you could probably spin up af lot of more cases for piggybacking related resources when some criteria is fulfilled</p>",
        "id": 154006856,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1539030705
    },
    {
        "content": "<p>well, if you're not subscribing to the other resource, then you'll miss updates to it. Would that matter?</p>",
        "id": 154006871,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539032811
    },
    {
        "content": "<p>I might also need the other subscription - but what I need to avoid is that the system listening for events can receive an encounter before it has heard of the patient.</p>",
        "id": 154006887,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1539033904
    },
    {
        "content": "<p>so bundling and piggybacking seemed like a way forward</p>",
        "id": 154006888,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1539033973
    },
    {
        "content": "<p>to match parts of an incoming transaction</p>",
        "id": 154006889,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1539033990
    },
    {
        "content": "<p>but the subscription resource documentation is pretty silent about the use of transactions and/or bundles</p>",
        "id": 154006891,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1539034167
    }
]