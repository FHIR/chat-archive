[
    {
        "content": "<p>it  the backport IG it states: </p>\n<blockquote>\n<p>In order to limit the scope of this Implementation Guide, SubscriptionTopic definitions are not defined here. Since topics are always referenced by their canonical URL, servers using FHIR R4 have no need to implement any of the functionality around topics themselves.</p>\n</blockquote>\n<p>So what happens when one hits the canonical url.  What gets returned exactly?</p>",
        "id": 221306527,
        "sender_full_name": "Eric Haas",
        "timestamp": 1609437894
    },
    {
        "content": "<p>in the test app it resolve to the argonaut page.  I would expect it to resolve to some definition of the topic. ( registry somewhere? )</p>",
        "id": 221307260,
        "sender_full_name": "Eric Haas",
        "timestamp": 1609438570
    },
    {
        "content": "<p>The problem I am trying to solve is where to define what is returned ( a list of resources in addition to the target.)  In R5 would be an extension to a  List reference  on the SubTopic.  In R4 am unclear what the analog is?</p>",
        "id": 221307596,
        "sender_full_name": "Eric Haas",
        "timestamp": 1609439041
    },
    {
        "content": "<p>Like all canonical URLs in FHIR , this SubscriptionTopic URL serves primarily as an <em>identifier</em>. A \"best practice\" is that it should dereference to useful content, which presumably would include a FHIR representation of the topic itself when appropriate \"accept\" headers are provided -- but even if this works, developers should not rely on this behavior in their software!</p>",
        "id": 221536036,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1609773816
    },
    {
        "content": "<p>How does the client then know what it is subscribing too? There needs to be some way to find out what it is (In R5 the resource does that,  but no analog in R4).   The documentation assumes that I guess, because I don't care about the canonical unless I am interested in a certain topic.</p>",
        "id": 221550553,
        "sender_full_name": "Eric Haas",
        "timestamp": 1609779902
    },
    {
        "content": "<p>Basically am looking for \"here's an amazing topic....if you want to subscribe, here is the canonical.\" instead of here is an operation to get you a list of canonicals....</p>",
        "id": 221551835,
        "sender_full_name": "Eric Haas",
        "timestamp": 1609780444
    },
    {
        "content": "<p>So far in the R4 backport we've left it out of band.  The assumption so far has been that people implementing the R4 backport can discover the definitional resources for the topics they want and use the canonical URL to find out if it is supported on the server.</p>\n<p>So far, the use cases haven't needed more than that - do you have one that does?</p>",
        "id": 221552466,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1609780753
    },
    {
        "content": "<blockquote>\n<p>How does the client then know what it is subscribing too? </p>\n</blockquote>\n<p>The answer here is similar to the answer to any canonical resolution question -- e.g., how does an app learn what a ValueSet URL means? The answer is... get the right IG packages from somewhere (e.g., a registry), and look the URL up in those packages.</p>",
        "id": 221555811,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1609782235
    },
    {
        "content": "<p>It's not a fantastic answer, but there's nothing special/different about subscription topics vs ValueSets, Measures, or any other conformance resources.</p>",
        "id": 221555894,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1609782268
    },
    {
        "content": "<blockquote>\n<p>The assumption so far has been that people implementing the R4 backport can discover the definitional resources for the topics they want and use the canonical URL to find out if it is supported on the server.</p>\n</blockquote>\n<p>That need to be explicitly said in the IG -  for naive readers it is not obvious  ( I already have a tracker)</p>",
        "id": 221558684,
        "sender_full_name": "Eric Haas",
        "timestamp": 1609783626
    },
    {
        "content": "<p>Sure -- if you can propose specific language, that'd be great. Even better would be to point to the place in FHIR Core that explains how resolution of canonical URLs works, because Subscriptions shouldn't be doing anything \"special\" here.</p>",
        "id": 221559091,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1609783817
    },
    {
        "content": "<blockquote>\n<p>A URI that refers to a resource by its canonical URL (resources with a url property). The canonical type differs from a uri in that it has special meaning in this specification, and in that it may have a version appended, separated by a vertical bar (|). Note that the type canonical is not used for the actual canonical URLs that are the target of these references, but for the URIs that refer to them, and may have the version suffix in them. Like other URIs, elements of type canonical may also have #fragment references</p>\n</blockquote>\n<p>and  here: <a href=\"http://build.fhir.org/references.html#canonical\">http://build.fhir.org/references.html#canonical</a></p>\n<p>talk about resources</p>\n<p>I think in this case the canonical doesn't resolve to an actual resource because the resource doesn't exist in R4.  That make this more hand wavy IMO.  Things like valuesets you expect to get a resource with VSD.  The canonical should resolve to something that informs you what it is.</p>",
        "id": 221560155,
        "sender_full_name": "Eric Haas",
        "timestamp": 1609784348
    },
    {
        "content": "<p>... you are subscribing to.</p>",
        "id": 221560383,
        "sender_full_name": "Eric Haas",
        "timestamp": 1609784454
    },
    {
        "content": "<p>What about defining the list of ids to return ( in addition to the focus resource)</p>\n<p>The use case I imagine ( and I am split-balling here , but looking at the next iteration of DV Notifications) is the subscriber won't to or can't efficiently search for a bunch of resources but the publisher won't risk pushing a bunch of content over the wire.  Assuming this scenario made any sense,  what if you split the difference and sent a list (graph) of resource ids.... In R5 an extension on topic, in R4 an extension on Parameter  item next to canonical??</p>",
        "id": 221562229,
        "sender_full_name": "Eric Haas",
        "timestamp": 1609785331
    },
    {
        "content": "<p>Defining a graph for return is an open topic right now; it's fairly complex and we need to ensure that we define something that is both generic and implementable.</p>\n<ul>\n<li>If we decide a client just asks for a graph, a server may support somewhere between all and none of the requested links.<ul>\n<li>If the policy is to reject the request, then the server needs to advertise what it supports.</li>\n<li>If the policy is to modify the request, clients need a way to determine what was accepted.</li>\n</ul>\n</li>\n<li>If we decide servers have the option of including one or more <em>specific</em> graphs (per topic), it simplifies negotiation but has more front-end work.</li>\n<li>We could also go the route of defining a graph within a topic, with servers indicating support for the graph or not.</li>\n<li>What's the best format for defining the graph?<ul>\n<li>List of resources</li>\n<li>_include / _revInclude</li>\n<li>GraphDefinition</li>\n<li>GraphQL</li>\n</ul>\n</li>\n<li>etc.</li>\n</ul>\n<p>I've been pretty swamped between the R5/R4 docs and updating the implementations for the connectathon, so I haven't had time to pursue more discussion.  I'd be happy to talk about it during the connectathon and/or the WGM though.</p>",
        "id": 221569753,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1609788971
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span>  can we do a  Noon Eastern Breakout with DV Notifications to discuss this?</p>",
        "id": 221688480,
        "sender_full_name": "Eric Haas",
        "timestamp": 1609873971
    },
    {
        "content": "<p>on Friday?</p>",
        "id": 221688491,
        "sender_full_name": "Eric Haas",
        "timestamp": 1609873979
    },
    {
        "content": "<p>That works for me, but I believe we're missing <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> on Friday.  However, I'm happy to take comments beforehand and champion them in the discussion as well.</p>",
        "id": 221688867,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1609874154
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span>  In R5, you use the Topic resource to discover topics supported. The Topic itself describes what it is (assuming the caller is savvy enough to understand it in order to \"discover\" dynamically). If, OTOH, you are following an IG, you would search the Topic Resource by the canonical from the IG</p>",
        "id": 221689987,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1609874744
    },
    {
        "content": "<p>I <em>think</em> the R5 solution is covered and we don't need anything</p>",
        "id": 221690013,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1609874758
    },
    {
        "content": "<p>We didn't really want to port back the full R5 to R4... use cases would be using IGs and know the canonical</p>",
        "id": 221690072,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1609874778
    },
    {
        "content": "<p>the way you discover in the backport was through the operation, which just (I thought... now need to go confirm) that listed the canonicals</p>",
        "id": 221690099,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1609874801
    },
    {
        "content": "<p>again, because all use cases for backport would have followed an IG</p>",
        "id": 221690110,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1609874810
    },
    {
        "content": "<p>I'm not sure I'm following the other use case specifically</p>",
        "id": 221690316,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1609874945
    },
    {
        "content": "<p>eg: defining the list of ids - are you saying the Topic allows for a set of ids as a match - hard coded? Or that the Subscription to that topic might?</p>",
        "id": 221690359,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1609874975
    },
    {
        "content": "<p>Curious why that specificity would be on topic and not the Subscription itself</p>",
        "id": 221690451,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1609875016
    },
    {
        "content": "<p>IE: An admit topic allows for a patient id to be input during subscription, it doesn't hard-code the list of patients on the topic</p>",
        "id": 221690498,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1609875049
    },
    {
        "content": "<p>(obv, you could if you allowed dynamic topic creation, but most servers will likely NOT allow this type of creation?)</p>",
        "id": 221690520,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1609875070
    },
    {
        "content": "<p>I thought the breakout was about graphs more than the topic issue (which I assume will be a point of discussion throughout the connectathon), but perhaps I misread.  <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> ?</p>",
        "id": 221692224,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1609875923
    },
    {
        "content": "<p>To Clarify:</p>\n<p>1) <span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span>  is correct the breakout is about graphs and whether EHRs would support that.<br>\n2)  <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span>  \"the way you discover in the backport was through the operation, which just (I thought... now need to go confirm) that listed the canonicals\" That is correct but my point is a list of canonicals does not give you a description of the topic in R4  so its useless without way to get a definition.</p>",
        "id": 221706639,
        "sender_full_name": "Eric Haas",
        "timestamp": 1609883505
    },
    {
        "content": "<p>So someone is dynamically using topics to determine what to subscribe to? Can you provide an example <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> ? As Gino mentioned, so far all use cases are based on IGs which define the subscription topics I thought :)</p>",
        "id": 221818414,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1609964745
    },
    {
        "content": "<p>We never intended for R4 backport to have full functional parity with R5 in order to reduce complexity and match with the use cases requesting the backport (minimum viable)</p>",
        "id": 221818546,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1609964803
    },
    {
        "content": "<p>I am only pointing out that  neither the track not the backport IG discussed how to advertise what topic based subscriptions are available beyond getting an opaque url (URN? ).  Out of band seems like an OK answer to me.</p>",
        "id": 221845888,
        "sender_full_name": "Eric Haas",
        "timestamp": 1609982120
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span> , <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span>   are either of you available next Friday noon Eastern breakout  for discussion on the idea of defining a Graph of content to publish (id-only  of course ;-) ). I am not proposing for the backport  but exploring it for DaVinci Notifications as an extension.</p>",
        "id": 221846235,
        "sender_full_name": "Eric Haas",
        "timestamp": 1609982468
    },
    {
        "content": "<p>I can't meet until after 3 eastern. Maybe 2 eastern but that might be risky</p>",
        "id": 221847858,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1609984032
    },
    {
        "content": "<p>Gino is covering track lead on Friday due to a prior commitment on my side</p>",
        "id": 221847877,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1609984058
    },
    {
        "content": "<p>(omg, just saw my parody vs parity... Predictive/swipe text ftw)</p>",
        "id": 221847989,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1609984179
    },
    {
        "content": "<p>Fixed. Never happened. <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 221848065,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1609984237
    },
    {
        "content": "<p>ok 3 eastern it is.</p>",
        "id": 221855992,
        "sender_full_name": "Eric Haas",
        "timestamp": 1609993970
    },
    {
        "content": "<p>I added this to the track page</p>",
        "id": 222615780,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1610558739
    }
]