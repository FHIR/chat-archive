[
    {
        "content": "<blockquote>\n<p>Many of the people I've talked with feel the computational load for search and FHIRPath based topics is too high to be supported.  Many are expecting to have thousands or tens of thousands of subscriptions simultaneously and want to maintain a reasonable response time (&lt;5 minutes).</p>\n</blockquote>\n<p>David, are you saying you want to remove this from the definitions, or just saying that you don't expect some servers to support it? in general servers choose which topics to support and a server that does not want to support any topics based on fhirpath do not need to. it's also worth noting that a server might support specific highly optimized expressions and not others; there is no expectation that a server needs to support generic topic definitions dynamically at runtime.</p>",
        "id": 209640291,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599745017
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192587\">@David Pyke</span>  Discovery of support for specific topics would be by searching the server for topics available. </p>\n<p>If you're thinking about ways to discover proactively whether a server will accept a specific topic that you try to post to it... right now we have a way for a server to say you can post a new topics or you can't. I don't know that modeling the details beyond that is going to be very helpful -- but of course fhir Capability Statements let you specify a list of profiles for any resource type if you want to go that route. (I don't think we would have to do something specific in subscriptions.)</p>",
        "id": 209642111,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599745373
    },
    {
        "content": "<p>I think we need to have a way of listing if you support dynamic or not, rather than what types of resources you can do dynamically.</p>",
        "id": 209643533,
        "sender_full_name": "David Pyke",
        "timestamp": 1599745843
    },
    {
        "content": "<p>It may end up needing a dynamic resource and a non-dynamic element on subscription.  That way if you opt out of dynamic, you can just use a codelist/uri on Subscription and show that the dynamic based Topic resource being not supported</p>",
        "id": 209643818,
        "sender_full_name": "David Pyke",
        "timestamp": 1599745945
    },
    {
        "content": "<p>When you say support dynamic... is that essentially equivalent to advertising support of SubscriptionTopic create in conformance? Or are you looking more specifically at how flexible those can be (which may be, to Josh's point, advertising profiles of SubscriptionTopic?)</p>",
        "id": 209658847,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599749999
    },
    {
        "content": "<p>I'm thinking advertising support of SubscriptionTopic.  Those that don't support that can use a codelist/uri</p>",
        "id": 209659445,
        "sender_full_name": "David Pyke",
        "timestamp": 1599750198
    },
    {
        "content": "<p>For R5, SubscriptionTopic is required. In R4, there's a query for \"known\" uris for the patch back</p>",
        "id": 209659559,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599750240
    },
    {
        "content": "<p>the fully dynamic query is one thing we specifically dropped from R5 because of performance concerns</p>",
        "id": 209659642,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599750257
    },
    {
        "content": "<p>So it's declaration of \"I only support the R5 back port profile of Subscription\" maybe...</p>",
        "id": 209659726,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599750297
    },
    {
        "content": "<p>Right, so I'm suggesting that SubscriptionTopic get moved to optional and Subscription gains a Topic element.  SubscriptionTopic gets all search and FHIRPath capabilites</p>",
        "id": 209659794,
        "sender_full_name": "David Pyke",
        "timestamp": 1599750324
    },
    {
        "content": "<p>I'm not sure I'm following</p>",
        "id": 209660028,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599750404
    },
    {
        "content": "<p>Subscripton's link to SubscriptionTopic becomes 0..1 and gains topicCode or topicUri 0..*  SubscriptionTopic has all search based or FHIRPath based capabilities.</p>",
        "id": 209660200,
        "sender_full_name": "David Pyke",
        "timestamp": 1599750482
    },
    {
        "content": "<p>Possibly with a invariant that forces either a reference to SubscriptionTopic or a topicCode/Uri to have an entry</p>",
        "id": 209660336,
        "sender_full_name": "David Pyke",
        "timestamp": 1599750539
    },
    {
        "content": "<p>What would this accomplish? Currently every SubscriptionTopic has a canonical URI and you can use that just the way you'd use the \"topicUri\" you're proposing -- but the canonical URLs are better because you can <em>also</em> optionally make them resolve, document behaviors, authorship, relation to other topics, etc.</p>",
        "id": 209662591,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599751267
    },
    {
        "content": "<p>It gives a simple implementation path for systems that don't need/want to have those capabilities</p>",
        "id": 209662907,
        "sender_full_name": "David Pyke",
        "timestamp": 1599751388
    },
    {
        "content": "<p>It's no simpler: if you have a \"topicUri\", just consider that as a SubscriptionTopic.url (canonical URL). You don't need to make it resolve or anything.</p>",
        "id": 209663093,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599751442
    },
    {
        "content": "<p>For example, <a href=\"http://build.fhir.org/subscriptionstatus-definitions.html#SubscriptionStatus.topic\">http://build.fhir.org/subscriptionstatus-definitions.html#SubscriptionStatus.topic</a> is just a canonical reference.</p>",
        "id": 209663165,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599751474
    },
    {
        "content": "<p>But with my changes, you don't have to implement the SubscriptionTopic resource</p>",
        "id": 209663178,
        "sender_full_name": "David Pyke",
        "timestamp": 1599751480
    },
    {
        "content": "<p>You shouldn't have to anyway.</p>",
        "id": 209663243,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599751508
    },
    {
        "content": "<p>You do if it's required for the Subscription resource</p>",
        "id": 209663273,
        "sender_full_name": "David Pyke",
        "timestamp": 1599751529
    },
    {
        "content": "<p>You're referring to <a href=\"http://build.fhir.org/subscription-definitions.html#Subscription.topic\">http://build.fhir.org/subscription-definitions.html#Subscription.topic</a> ?</p>",
        "id": 209663293,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599751538
    },
    {
        "content": "<p>It could be contained, but you will lose the capability for people to discover what topics you allow</p>",
        "id": 209663323,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599751553
    },
    {
        "content": "<p>Yes</p>",
        "id": 209663347,
        "sender_full_name": "David Pyke",
        "timestamp": 1599751562
    },
    {
        "content": "<p>which was why we did this - it follows pub/sub patterns outside of FHIR</p>",
        "id": 209663378,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599751565
    },
    {
        "content": "<p>that lack of capability to discover was a big deal</p>",
        "id": 209663405,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599751573
    },
    {
        "content": "<p>I actually don't remember why <a href=\"http://build.fhir.org/subscription-definitions.html#Subscription.topic\">http://build.fhir.org/subscription-definitions.html#Subscription.topic</a> can't be a canonical reference. Jenni, do you?</p>",
        "id": 209663409,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599751575
    },
    {
        "content": "<p>Agreed that a first-class discovery API to ask a server about topics is super helpful!</p>",
        "id": 209663441,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599751591
    },
    {
        "content": "<p>Discovery</p>",
        "id": 209663444,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599751593
    },
    {
        "content": "<p>was the main reason</p>",
        "id": 209663464,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599751604
    },
    {
        "content": "<p>Being able to discover a codelist would be just as good, in my mind</p>",
        "id": 209663491,
        "sender_full_name": "David Pyke",
        "timestamp": 1599751617
    },
    {
        "content": "<p>Using a canonical at <a href=\"http://build.fhir.org/subscription-definitions.html#Subscription.topic\">http://build.fhir.org/subscription-definitions.html#Subscription.topic</a> wouldn't prevent discovery.</p>",
        "id": 209663498,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599751621
    },
    {
        "content": "<p>i.e. a client could always ask the server \"which topics do you support\" and the server can choose to respond. That's distinct from whether a server-local reference is required within Subscription.topic.</p>",
        "id": 209663603,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599751667
    },
    {
        "content": "<p>In any case, I don't see any \"simplification\" from offering <em>multiple</em> ways to do this <span class=\"user-mention\" data-user-id=\"192587\">@David Pyke</span></p>",
        "id": 209663689,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599751687
    },
    {
        "content": "<p>How would they ask what is supported with the canonical reference?</p>",
        "id": 209663749,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599751713
    },
    {
        "content": "<p>Witha topicCode element in Subscription, they can not implement the SubscriptionTopic resource, mark the CapabilityStatement with a lack of support for it (eliminating dynamics) and then pull the codelist for supported codes and their meanings</p>",
        "id": 209663990,
        "sender_full_name": "David Pyke",
        "timestamp": 1599751808
    },
    {
        "content": "<p>If we have an HL7 defined list of basic supported codes (extensible), that makes it even easier to support</p>",
        "id": 209664117,
        "sender_full_name": "David Pyke",
        "timestamp": 1599751866
    },
    {
        "content": "<blockquote>\n<p>How would they ask what is supported with the canonical reference?</p>\n</blockquote>\n<p><code>GET /SubscriptionTopic</code>, just like today if the server wants to support it. But yeah, I don't actually understand the underlying pain point here.</p>",
        "id": 209664180,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599751889
    },
    {
        "content": "<blockquote>\n<p>then pull the codelist for supported codes</p>\n</blockquote>\n<p>This is a new API, right? That means ... another additional discovery mechanism.</p>",
        "id": 209664291,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599751925
    },
    {
        "content": "<p>Why is it easier to host <em>that</em> one vs hosting a fixed list of SubscriptionTopics?</p>",
        "id": 209664316,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599751935
    },
    {
        "content": "<p>I think there's something I'm missing.</p>",
        "id": 209664386,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599751954
    },
    {
        "content": "<p>IF you can have a fixed list of SubscriptionTopics and list them and be able to show a lack of search or FHIRpath based topics, then the problem isn't difficult</p>",
        "id": 209664497,
        "sender_full_name": "David Pyke",
        "timestamp": 1599752005
    },
    {
        "content": "<p>If you have a fixed list, I'm not sure what it means to \"be able to show a lack of search or FHIRpath based topics\" -- you'd just have a fixed list, and presumably the items on it wouldn't be fhirpath-based topics.</p>",
        "id": 209666307,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599752698
    },
    {
        "content": "<p>Good point.</p>",
        "id": 209667134,
        "sender_full_name": "David Pyke",
        "timestamp": 1599753045
    },
    {
        "content": "<p>Jumping back a bit to the canonical question (Josh), we discussed it somewhat recently.  The discussion ended with:</p>\n<ul>\n<li>the client needs to have access to a <code>SubscriptionTopic</code> resource</li>\n<li>if we allow canonicals, servers may not keep a definition copy locally</li>\n</ul>",
        "id": 209667919,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1599753337
    },
    {
        "content": "<p>Okay, so if canonicals are not appropriate, I'd like to go back to must suggestion</p>",
        "id": 209669934,
        "sender_full_name": "David Pyke",
        "timestamp": 1599754155
    },
    {
        "content": "<p>I am not sure I understand this part:</p>\n<blockquote>\n<p>the client needs to have access to a <code>SubscriptionTopic</code> resource</p>\n</blockquote>\n<p>Why is that? Josh was just saying that resolving the canonical was not necessary.</p>",
        "id": 209670416,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1599754355
    },
    {
        "content": "<p>Right now, a client creating a Subscription needs to populate Subscrition.topic with some kind of valid reference. We generally expect that'll be a server-local FHIR reference like <code>{\"reference\": \"SubscriptionTopic/891247142\"}</code>  but in theory it <em>could</em> be a canonical URL based reference like <code>{\"reference\": \"https://argo.run/example-topics/admission\"}</code>, if a server chooses to allow this.</p>",
        "id": 209671595,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599754886
    },
    {
        "content": "<p>... but either way, the client wants some way to know which topics it'll be <em>allowed</em> to subscribe to, which is to say some discovery mechanism. And this means it's really most convenient if the server supports enumeration of its SubscriptionTopics via \"GET /SubscriptionTopic\". (A server could maybe just say \"discovery is out of band, don't ask me about SubscriptionTopics,\" but I don't hear anyone advocating for that as a good practice :-))</p>",
        "id": 209671935,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599755030
    },
    {
        "content": "<p>I would prefer that topic is a canonical(SubscriptionTopic) not a Reference(SubscriptionTopic); I haven't followed the issue why it shouldn't be. And <span class=\"user-mention\" data-user-id=\"192587\">@David Pyke</span> I haven't understand what you're trying to achieve at all</p>",
        "id": 209672139,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599755112
    },
    {
        "content": "<p>I'm trying to achieve a subscription system that uses a fixed codelist of specific events</p>",
        "id": 209672405,
        "sender_full_name": "David Pyke",
        "timestamp": 1599755229
    },
    {
        "content": "<p>but that's already how it works, if you want - a fixed list of specific topics</p>",
        "id": 209672463,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599755253
    },
    {
        "content": "<p>Okay, then I'm completely stumped where such a code is entered.</p>",
        "id": 209672862,
        "sender_full_name": "David Pyke",
        "timestamp": 1599755402
    },
    {
        "content": "<p>Subscription points to SubscriptionTopic  which has a resourceTrigger</p>",
        "id": 209673058,
        "sender_full_name": "David Pyke",
        "timestamp": 1599755488
    },
    {
        "content": "<p>SubscriptionTopic has a canonical to another SubscriptionTopic that it's derived from</p>",
        "id": 209673237,
        "sender_full_name": "David Pyke",
        "timestamp": 1599755542
    },
    {
        "content": "<p>\"such a code\" - what kind of code?</p>",
        "id": 209673398,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599755612
    },
    {
        "content": "<p>A code list \"admit\" that says trigger when an admission for patientX happens</p>",
        "id": 209673446,
        "sender_full_name": "David Pyke",
        "timestamp": 1599755637
    },
    {
        "content": "<p>That's what the topic is</p>",
        "id": 209673570,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599755682
    },
    {
        "content": "<p>Okay, I'm obviously not getting this.  how do you express \"Trigger when PatientX is admitted\" without having to use search or FHIRPath logic?</p>",
        "id": 209674518,
        "sender_full_name": "David Pyke",
        "timestamp": 1599756103
    },
    {
        "content": "<p>I don't know. How do you express that without saying what it actually means?</p>",
        "id": 209674850,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599756242
    },
    {
        "content": "<p>I think what you want is for some magic to happen somewhere where by you can say what you want without defining how it happens</p>",
        "id": 209674978,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599756291
    },
    {
        "content": "<p>for me, this is what derivedFrom is about.</p>",
        "id": 209675052,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599756319
    },
    {
        "content": "<p>Personally, I'd like a subscription that has a link to a patient and a codelist that has \"admit\" as one of the codes.  In the back end, there would be something processing the codes and handling this.  There is a blackbox attribute to it but I have a number of people wanting this.</p>",
        "id": 209675105,
        "sender_full_name": "David Pyke",
        "timestamp": 1599756347
    },
    {
        "content": "<p>Having to use search or FHIRPath logic is seen as too computationally expensive</p>",
        "id": 209675219,
        "sender_full_name": "David Pyke",
        "timestamp": 1599756383
    },
    {
        "content": "<p>HL7 can define a base list of topics, which correspond to widely supported events. We publish formally correct definitions of them, both in narrative and using search/fhirpath. Because they are well known definitions, people can treat them as magic, ignore the formal definitions, and implement them as they want in their system. </p>\n<p>Then they can advertise HL7's well known definitions as 'the ones they support'</p>",
        "id": 209675339,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599756444
    },
    {
        "content": "<p>That works for me.  AS long as there's a fixed list somewhere</p>",
        "id": 209675408,
        "sender_full_name": "David Pyke",
        "timestamp": 1599756478
    },
    {
        "content": "<p>because of course people won't necessarily implement using search or FHIRPath.</p>",
        "id": 209675448,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599756483
    },
    {
        "content": "<p>but it does mean that someone has to do the work to define them.</p>",
        "id": 209675473,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599756497
    },
    {
        "content": "<p>they can even advertise their variations in support for the underlying topic, but still link back to the base topic using derivedFrom</p>",
        "id": 209675554,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599756542
    },
    {
        "content": "<p>I have a base list that I'm using for Carequality that we could translate</p>",
        "id": 209675578,
        "sender_full_name": "David Pyke",
        "timestamp": 1599756555
    },
    {
        "content": "<p>this, btw, is why I think it's clearer for it to be a canonical()</p>",
        "id": 209675611,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599756570
    },
    {
        "content": "<p>Personally, I think a codelist and patient reference are simpler but that's me</p>",
        "id": 209676060,
        "sender_full_name": "David Pyke",
        "timestamp": 1599756756
    },
    {
        "content": "<p>handling fewer requirements is always simpler. Doesn't make it better</p>",
        "id": 209676261,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599756845
    },
    {
        "content": "<p>I think that a Subscription </p>\n<div class=\"codehilite\"><pre><span></span><code>  topic = http://carequality.org/SubscriptionTopic/Admit\n  filterBy\n    searchParamName = patient\n   searchModifier = =\n   value = &quot;X&quot;\n</code></pre></div>\n\n\n<p>seems pretty straight foward</p>",
        "id": 209676477,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599756959
    },
    {
        "content": "<p>BTW, the way you advertise that canonical on the SubscriptionTopic today is via the url &amp; derivedFrom fields</p>",
        "id": 209676597,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599757008
    },
    {
        "content": "<p>(that the topic is a reference to another canonical)</p>",
        "id": 209676626,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599757022
    },
    {
        "content": "<p>But <span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span> it would be more align with FHIR elsewhere for it to be :</p>\n<div class=\"codehilite\"><pre><span></span><code>topic = http://carequality.org/SubscriptionTopic/Admit\n  filterBy\n    parameter = patient\n    op = =\n    value = &quot;X&quot;\n</code></pre></div>\n\n\n<p>Because there's no actual requirement that the parameter be a search parameter - it can be just a parameter that you can filter by as defined in the topic</p>",
        "id": 209676809,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599757088
    },
    {
        "content": "<p>But Grahame's example is also valid as tht still references a SubscriptionTopic</p>",
        "id": 209676814,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599757089
    },
    {
        "content": "<p>That works</p>",
        "id": 209676889,
        "sender_full_name": "David Pyke",
        "timestamp": 1599757123
    },
    {
        "content": "<p>Making it canonical means that sometimes a client will be able to get a definitional resource (for checking things like allowed filters) and sometimes it won't.  For specific use cases, this is fine.  For generic clients, this is problematic.</p>\n<p>At the end of the day, I'm fine with either - just relaying the last round of discussions on the topic.</p>",
        "id": 209676944,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1599757147
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  for \"discovery\" - would you still expect it to be listed in a SubscriptionTopic search or would it just be a profile advertised?</p>",
        "id": 209676973,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599757159
    },
    {
        "content": "<p>Jenni, I'm not sure the difference you're drawing there, maybe because I don't know what you mean by 'profile advertised\"</p>\n<p>And Gino, why would it make any difference?</p>",
        "id": 209677163,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599757212
    },
    {
        "content": "<p>The way a client discovers what they can subscribe to today is by search on SubscriptionTopic</p>",
        "id": 209677227,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599757239
    },
    {
        "content": "<p>a reference or a canonical can be unresolvable</p>",
        "id": 209677234,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599757242
    },
    {
        "content": "<p>they can search by canonical</p>",
        "id": 209677245,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599757246
    },
    {
        "content": "<p>I thought it was GET [base]/Subscription/$topic-list</p>",
        "id": 209677352,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599757281
    },
    {
        "content": "<p>that's in patch back</p>",
        "id": 209677396,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599757289
    },
    {
        "content": "<p>in R5, SubscriptionTopic is its own resource</p>",
        "id": 209677431,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599757303
    },
    {
        "content": "<p>So it's GET /SubscriptionTopic</p>",
        "id": 209677569,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599757347
    },
    {
        "content": "<p>well, either way. if you search SubscriptionTopic, you'll get a list of topics. These might have carequality or hl7 canonical urls, or your own ones with derivations to the carequality or hl7 ones, or they might just be your own ones</p>",
        "id": 209677640,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599757380
    },
    {
        "content": "<p>It does look like it would work as the only required fields are the url and status</p>",
        "id": 209677749,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599757439
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179229-subscriptions/topic/Fhirpath.20triggers/near/209676809\">said</a>:</p>\n<blockquote>\n<p>But <span class=\"user-mention silent\" data-user-id=\"222054\">Gino Canessa</span> it would be more align with FHIR elsewhere for it to be :</p>\n<div class=\"codehilite\"><pre><span></span><code>topic = http://carequality.org/SubscriptionTopic/Admit\n  filterBy\n    parameter = patient\n    op = =\n    value = &quot;X&quot;\n</code></pre></div>\n\n\n<p>Because there's no actual requirement that the parameter be a search parameter - it can be just a parameter that you can filter by as defined in the topic</p>\n</blockquote>\n<p>We don't have a mechanism for defining parameters like that, so we were using search parameters.  If we want to open that up, we need to add content around how to describe them.</p>",
        "id": 209677956,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1599757501
    },
    {
        "content": "<p>could that be as simple as a text description or would you need fhirpath?</p>",
        "id": 209678067,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599757553
    },
    {
        "content": "<blockquote>\n<p>We don't have a mechanism for defining parameters like that</p>\n</blockquote>\n<p>What is SubscriptionTopic.canFilterBy but a mechanism for that. I suppose that if you wanted to define your own, you'd really need a canonical(SearchParameter) to formally define it as well as the name</p>",
        "id": 209678334,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599757641
    },
    {
        "content": "<p>Jenni - not sure what the context of that is?</p>",
        "id": 209678367,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599757658
    },
    {
        "content": "<p>Proposal for the method to define instead of SearchParameter reference :)</p>",
        "id": 209679850,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599758426
    },
    {
        "content": "<p>the computable definition parts are optional</p>",
        "id": 209680073,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599758532
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span> on the subject of String vs Canonical, the backport has something else again: uri</p>",
        "id": 209681097,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599759055
    },
    {
        "content": "<p>but that aligns with canonical, I guess</p>",
        "id": 209681121,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599759068
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179229-subscriptions/topic/Fhirpath.20triggers/near/209680073\">said</a>:</p>\n<blockquote>\n<p>the computable definition parts are optional</p>\n</blockquote>\n<p>The part of interest was the <code>canFilterBy</code> fields, IIRC.  It just means a developer needs to know what filters are allowed out-of-band if the canonical doesn't resolve.  Not terrible, just needs to be documented.</p>",
        "id": 209683234,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1599760029
    }
]