[
    {
        "content": "<p>Separating out the resource type into 0..1 within a resource trigger is going to make it extremely verbose to express common cases like notify on any resource created in a patient compartment. You would need to repeat the patient query for every resource type. This might be fine; just sharing one of the initial considerations that went into the current design.</p>",
        "id": 209640190,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599744973
    },
    {
        "content": "<p>Yes, and the more complex (multi resource) we get, the harder it is to support. I would really like to go as \"simple\" as we can and get initial implementation and real world feedback before going really complex... there's definitely a balance</p>",
        "id": 209659067,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599750073
    },
    {
        "content": "<p>EG: if we support multi-resource, I would propose it's automatically an \"and\"</p>",
        "id": 209659125,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599750100
    },
    {
        "content": "<p>Patient is over 65 AND prescribed this med</p>",
        "id": 209659151,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599750112
    },
    {
        "content": "<p>any \"or\" should just be separate subscriptions</p>",
        "id": 209659176,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599750121
    },
    {
        "content": "<p>But even that \"basic\" patient example means that whatever is processing the topics is adding post-filter logic/needing to go query the source system and could slow down the notifications for all</p>",
        "id": 209659373,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599750173
    },
    {
        "content": "<p>(depends heavily on the architecture underlying notifications)</p>",
        "id": 209659426,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599750192
    },
    {
        "content": "<p>I'm not following your response Jenni. I think that the processing issues are important but how are they not orthogonal to the way the search parameter relationships are expressed. I agree that verboseness is the result, but lack of clarity won't help processing. </p>\n<p>Unless you are questioning the fact that a notification can be fore multiple resources at all</p>",
        "id": 209671414,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599754803
    },
    {
        "content": "<p>So, in some of our notification systems internally, they are very separate from the clinical system</p>",
        "id": 209671593,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599754885
    },
    {
        "content": "<p>Each \"domain\" has events it publishes, and the metadata that comes along is primarily within that domain or microservice</p>",
        "id": 209671718,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599754925
    },
    {
        "content": "<p>eg: a notification about patient registration would know demographics</p>",
        "id": 209671752,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599754937
    },
    {
        "content": "<p>or an admission would know patient <em>id</em> and encounter details</p>",
        "id": 209671781,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599754951
    },
    {
        "content": "<p>If that system that knows where to publish those to is separate from the clinical system (entirely common in public clouds, also possible in ours if we want to put it in our cloud), then that \"and\" on the other resource is usually a filter between that \"blind\" push notification and the end receiver</p>",
        "id": 209672085,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599755088
    },
    {
        "content": "<p>in the case of something like \"and the patient is 65\" - that's not an event the system can combine - it's more a query it now has to go run against a clinical system</p>",
        "id": 209672157,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599755123
    },
    {
        "content": "<p>which may or may not be very efficient depending on where the systems are</p>",
        "id": 209672314,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599755185
    },
    {
        "content": "<p>and your notifications now could start to bottleneck</p>",
        "id": 209672335,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1599755196
    },
    {
        "content": "<p>right so that's why you say which things you can do on top the topic - I get that. What I'm saying is that I the current design is confusing because there's no way to relate the 'you can  do this' to 'for this resource type'.</p>",
        "id": 209672345,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599755201
    },
    {
        "content": "<p>Right -- today we limit the list of allowed params to... things that make sense across the board for  all the resources that can trigger the notification. I thought (still think) that's kind of a cute way to keep usage focused, but maybe too cute.</p>",
        "id": 209691819,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599763790
    },
    {
        "content": "<p>right. it's cute, but how do I process that?</p>",
        "id": 209692165,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599763954
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span> more on this. What's the intent if <code>SubscriptionTopic.resourceTrigger.resourceType</code> is not present?</p>",
        "id": 209693739,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599764534
    },
    {
        "content": "<p>does this mean all resource types, or no resource types?</p>",
        "id": 209693780,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599764552
    },
    {
        "content": "<p>I believe the default was 'all'.  That allows:</p>\n<ul>\n<li>notifications on any resource being 'deleted'</li>\n<li>notifications for any resource being 'created' that can satisfy the other criteria (e.g., having a <code>patient=Patient/123</code>)</li>\n</ul>\n<p>That said, I don't think anyone's pushed on it one way or the other for more detailed implications.</p>",
        "id": 209694294,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1599764791
    },
    {
        "content": "<p>well, I'm going to push that whatever it is, it should be documented ;-)</p>",
        "id": 209694335,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599764823
    },
    {
        "content": "<p>PR's welcome  <span aria-label=\"stuck out tongue wink\" class=\"emoji emoji-1f61c\" role=\"img\" title=\"stuck out tongue wink\">:stuck_out_tongue_wink:</span> </p>\n<p>I'll add it to my list to reconcile with Jenny's at the end of the connectathon.</p>",
        "id": 209694985,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1599765133
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span> I just stumbled into a problematic issue. <code>SubscriptionTopic.resourceTrigger.resourceType</code> has a required binding to ResourceType. That's a problem for an R4 backport because the R4 ResourceType list is different</p>",
        "id": 209695042,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599765166
    },
    {
        "content": "<p>How is it problematic?  An R5 subscription should use the R5 resource listing, and R4 doesn't have a field for that (it is embedded in the criteria string currently).</p>",
        "id": 209695514,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1599765368
    },
    {
        "content": "<p>the R4 backport is using the R5 SubscriptionTopic.</p>",
        "id": 209696045,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599765656
    },
    {
        "content": "<p>but the R5 subscription topic resource type list is wrong. e.g. I want to subscribe to MedicationStatement</p>",
        "id": 209696079,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599765677
    },
    {
        "content": "<p>Fair enough.  I assume we should change it to extensible.  Would've come up once someone tried with a custom resource too.</p>",
        "id": 209697645,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1599766339
    },
    {
        "content": "<p>it should match what we do elsewhere with type (e.g. ElementDefinition.type.code), which is a uri with an extensible binding to  the ResourceTypes value set and an assertion that a relative reference is a reference to the types defined in the FHIR specification</p>",
        "id": 209698112,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599766543
    },
    {
        "content": "<p>Do you have an example to save me some searching?</p>",
        "id": 209698328,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1599766630
    },
    {
        "content": "<p><a href=\"http://build.fhir.org/elementdefinition-definitions.html#ElementDefinition.type.code\">http://build.fhir.org/elementdefinition-definitions.html#ElementDefinition.type.code</a></p>",
        "id": 209698473,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599766687
    },
    {
        "content": "<p>Working through <a href=\"http://jira.hl7.org/browse/FHIR-28490\">FHIR#28490</a> .  The changes to <code>SubscriptionTopic</code> are straightforward, but I would like some additional feedback on how to represent this on the <code>Subscription</code> side.</p>\n<p>I think the problem is trying to cover two use cases that would be modeled differently:</p>\n<ol>\n<li>Multiple resources are listed because it's common to all of them (e.g., 'n' resources, filtered by patient id).</li>\n<li>Multiple resources are listed because you need something across them (e.g., Diagnosis 'x' and Patient age &gt; 'y').</li>\n</ol>\n<p>If only one of the two cases is valid, the modeling is pretty simple to fix.  If both cases are needed, we'll likely need to consider changing the filter structure (on Subscription) to be just text (so that you can build things like <code>Resource1.field=x&amp;Resource2.field=y</code>).</p>\n<p>Can discuss further at the WGM session as well, but I know that not everyone will be present.  Thanks!</p>",
        "id": 210931361,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1600808890
    },
    {
        "content": "<p>Use case number one in the list above makes sense to me, and has been driving topic design from the beginning.</p>\n<p>I haven't heard about what you describe as use case number two, and indeed from your example this would raise serious questions about the idea that filters correspond to query strings, since your example is not a valid FHIR query.</p>\n<p>So my initial reaction is that use case number one is in scope, and use case number two is not in scope</p>",
        "id": 211033295,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1600881013
    },
    {
        "content": "<p>With the changes to the R5 triggers (which look good), it brings the same question to the backport.  Prior to this change, we had been saying all of the filters should just be dumped into the criteria string.  But, with the additional structure in the R5 versions, this doesn't seem like it would work (e.g., being able to specify filters per resource).</p>\n<p>Right now, I'd lean towards some sort of static value in the criteria, and use a complex extension to define the filters - since we already need a couple of fields (resource type and criteria), I think just splitting them out to match R5 (param, modifier, and value) makes sense.</p>\n<p>Does anyone have a strong opinion one way or the other?</p>",
        "id": 211690643,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1601416980
    },
    {
        "content": "<p>it would be good if the criteria listed the overall types that are possible</p>",
        "id": 211691071,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1601417206
    },
    {
        "content": "<p>?_type=type,type,type</p>",
        "id": 211691085,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1601417216
    },
    {
        "content": "<p>Sounds like I can leave it in just the <code>criteria</code> field, but document that the <code>_type</code> parameter is required if there is more than one type available then.  Thanks!</p>",
        "id": 211768663,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1601476353
    }
]