[
    {
        "content": "<p>Can someone help me with a gloss on <a href=\"http://www.fhir.org/guides/argonaut/scheduling/patient-scheduling.html\" target=\"_blank\" title=\"http://www.fhir.org/guides/argonaut/scheduling/patient-scheduling.html\">http://www.fhir.org/guides/argonaut/scheduling/patient-scheduling.html</a> -- what do operations like <code>$find</code> and <code>$prefetch</code> provide instead of regular FHIR search interactions?</p>",
        "id": 153999554,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1537818777
    },
    {
        "content": "<p>Looks like a custom way to require fixed set of parameters ... but what do I know ... <span class=\"emoji emoji-1f610\" title=\"neutral face\">:neutral_face:</span></p>",
        "id": 153999579,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1537823994
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> do you have any background you can share on this?</p>",
        "id": 154000103,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1537994802
    },
    {
        "content": "<p>The operations are like api calls to a black box appointment scheduler.  You plug in your requirements and it returns some options.  There is no expectation of a set of  FHIR  open Slots or open Appointments stored in a server ready to be queried. where a search would work.   <span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span>  and <span class=\"user-mention\" data-user-id=\"195162\">@Brandon LaRue</span>  can speak to the real world functionality a bit better than I.</p>",
        "id": 154000107,
        "sender_full_name": "Eric Haas",
        "timestamp": 1537996816
    },
    {
        "content": "<p>Okay -- I'd like to understand the distinction. Is it that only a limited set of slots will be returned?</p>",
        "id": 154000156,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1538003470
    },
    {
        "content": "<p>search only applies to existing things. the operation creates new things.  I think that's the difference here</p>",
        "id": 154000157,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1538003542
    },
    {
        "content": "<p>The server would determine how many proposed appointment times or slots to return based on the input parameters.  There is a parameter for the client to limit the number but that is a suggestion really.   Note for $find these are <em>proposed</em> appointment times and they could disappear by the time you try to book.    For prefetch the client server does all the work to determine the appointments instead of the EHR's Scheduling Server,  So the EHR sends them a bunch of open slots periodically refreshing them so they can present appointments to the end user based on their  ( Client Server's) logic and business rules.  This is very similar to booking a flight for the end user  you get a set of choices and then book.</p>",
        "id": 154000172,
        "sender_full_name": "Eric Haas",
        "timestamp": 1538010114
    },
    {
        "content": "<p>... and as GG points out there is no such thing as a pre-existing set of open slots/appointments to choose from.  These are all created on the fly all the time.  Even the idea of discrete slots is often not how these systems work they have varying chunks of time and the slot are virtual...  Brandon has a lot experience with this and can explain it  in great detail.</p>",
        "id": 154000173,
        "sender_full_name": "Eric Haas",
        "timestamp": 1538010406
    },
    {
        "content": "<blockquote>\n<p>Grahame Grieve: search only applies to existing things. the operation creates new things. I think that's the difference here</p>\n</blockquote>\n<p>Wait, <code>$find</code> creates new things?</p>",
        "id": 154000914,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1538109246
    },
    {
        "content": "<p>Maybe I'm just confused by the name, in this case. <span class=\"user-mention\" data-user-id=\"195162\">@Brandon LaRue</span>, I'm subscribing you here (zulip prompts me that you're not in this channel).</p>",
        "id": 154000915,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1538109333
    },
    {
        "content": "<p>find sounds like a domain appropriate name (e.g. 'find the next available slot') but a bit confusing from a FHIR search perspective, since at the API level, it's not 'finding' a resource</p>",
        "id": 154000917,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1538109414
    },
    {
        "content": "<p>Like in the example, <code>$find</code> is returning <code>Appointment</code> resources with ids and everything (e.g., <code>\"id\": \"proposed-appt-3\"</code>). Do they not then exist on the server?</p>",
        "id": 154000918,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1538109419
    },
    {
        "content": "<p>not sure. I think they would by then</p>",
        "id": 154000919,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1538109439
    },
    {
        "content": "<p>(I mean, I suppose the answer is \"there is no general purpose fhir server\" -- but if that's the case, it seems like the regular fhir search interaction would have served as well.)</p>",
        "id": 154000920,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1538109594
    },
    {
        "content": "<p>you mean, if there was a general purpose server that had a fully populated set of slots, then you could find the next available appropriate slot simply by doing a search?</p>",
        "id": 154000921,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1538109663
    },
    {
        "content": "<p>well, that and also for a limited-purpose server that just invented slots on the fly (and kept them around until they were confirmed by a client or timed out).</p>",
        "id": 154000923,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1538109717
    },
    {
        "content": "<p>not sure how search would work for the second case.</p>",
        "id": 154000927,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1538109835
    },
    {
        "content": "<p>Just the same way that <code>$find</code> does -- but it would be invoked via <code>GET /Appointment</code></p>",
        "id": 154000928,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1538109864
    },
    {
        "content": "<p>also, if you had fully populated slots, is there any flexibility around their length? Is everything always 7 minutes?</p>",
        "id": 154000929,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1538109874
    },
    {
        "content": "<p>what's it finding?</p>",
        "id": 154000930,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1538109885
    },
    {
        "content": "<p><a href=\"http://www.fhir.org/guides/argonaut/scheduling/OperationDefinition-appointment-find.html\" target=\"_blank\" title=\"http://www.fhir.org/guides/argonaut/scheduling/OperationDefinition-appointment-find.html\">http://www.fhir.org/guides/argonaut/scheduling/OperationDefinition-appointment-find.html</a> really describes visit types rather than explicit lengths.</p>",
        "id": 154000931,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1538110008
    },
    {
        "content": "<p>I think that's another reason why the search semantics are not appropriate in this case</p>",
        "id": 154000932,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1538110032
    },
    {
        "content": "<p>Appointment supports search by serviceType; it's not entirely clear to me that this wouldn't fit -- where a special-purpose server would examine its schedule, and your search, and return a set of Appointments that fit the criteria (but I do take your point).</p>",
        "id": 154000933,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1538110227
    },
    {
        "content": "<p>To be clear, I _like_ the explicit rpc style here. It just makes me think we should be using it <em>more broadly</em> (or be able to articulate the distinction).</p>",
        "id": 154000934,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1538110299
    },
    {
        "content": "<p>I think the FHIR documentation outlines pretty clearly why we use an operation in this case: <a href=\"http://build.fhir.org/operations.html#3.2.0\" target=\"_blank\" title=\"http://build.fhir.org/operations.html#3.2.0\">http://build.fhir.org/operations.html#3.2.0</a></p>",
        "id": 154000940,
        "sender_full_name": "Eric Haas",
        "timestamp": 1538115647
    },
    {
        "content": "<p>I agree -- it's just \"active role\" is kind of slippery when your server is anything other than a rote FHIR store.</p>",
        "id": 154001002,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1538142297
    },
    {
        "content": "<p>why?</p>",
        "id": 154001004,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1538142468
    },
    {
        "content": "<p>Just because there is some logic to apply -- you may be for example of inferring the \"existence\" of a resource</p>",
        "id": 154001012,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1538142897
    },
    {
        "content": "<p>I'm not deeply bothered by this. Just musing...</p>",
        "id": 154001013,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1538142915
    },
    {
        "content": "<p>question is whether the inferring behaviour is explicit to an API consumer</p>",
        "id": 154001015,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1538142969
    },
    {
        "content": "<p>Like, consider a FHIR search endpoint for medications where the server decorated the medication ndc codes with rxnorm codes, but only if for certain consumers.. where does that fit on the spectrum? Does it matter it has explicit inline hints from the client, vs static preferences? Is that no longer a search, and crossing into $find-and-translate (or whatever) territory?</p>",
        "id": 154001027,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1538147038
    },
    {
        "content": "<p>Again, really just musing here.</p>",
        "id": 154001028,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1538147050
    },
    {
        "content": "<p>not sure</p>",
        "id": 154001061,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1538148328
    }
]