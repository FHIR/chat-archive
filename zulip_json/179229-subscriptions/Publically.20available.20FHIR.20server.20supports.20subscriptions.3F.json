[
    {
        "content": "<p>I'm looking for a publicly available FHIR server that supports both transaction Bundles and Subscriptions (4+) and the Subscription support is 'activated'.  I know this is an option for HAPI FHIR servers, but Subscriptions are not enabled out of the box so most such servers don't support subscriptions. The transaction Bundle contains Device, Patient, and Observation resources.</p>",
        "id": 235501678,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1619008585
    },
    {
        "content": "<p>there are many publicly available FHIR servers for testing <a href=\"https://confluence.hl7.org/display/FHIR/Public+Test+Servers\">https://confluence.hl7.org/display/FHIR/Public+Test+Servers</a><br>\nYou can pull their capability statement and determine what they support.<br>\nAre you looking for support of the new subscription implementation guide backport for R4? I would hope the servers declare that support in their capability statement -- <a href=\"http://hl7.org/fhir/http.html#capabilities\">http://hl7.org/fhir/http.html#capabilities</a></p>",
        "id": 235518885,
        "sender_full_name": "John Moehrke",
        "timestamp": 1619015108
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>  That's a lot of servers to test. Was hoping to save myself a lot of time. Previously I have found it hard to find servers that are 4+,  have subscriptions activated, and support transaction Bundles. I can support Subscriptions that just give the ping but I am really interested in those that give the logical id of the resource. That will GREATLY simplify the code!</p>",
        "id": 235522318,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1619016333
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> somewhat of a side note - how does a server declare support for Subscriptions? The only thing I could find is the WS extension. If the server supports the Subscription resource is that declaring support? To know if it supports rest-hook notifications would you just need to create a new subscription and see if it is accepted?</p>",
        "id": 235562496,
        "sender_full_name": "Benjamin Langley",
        "timestamp": 1619031316
    },
    {
        "content": "<p>Clarification -- if one is speaking of the backport subscription, then one could find that declaration of support for the IG in the capability statement. Right?<br>\n<a href=\"https://build.fhir.org/ig/HL7/fhir-subscription-backport-ig/index.html\">https://build.fhir.org/ig/HL7/fhir-subscription-backport-ig/index.html</a><br>\nIt seems they want you to query the $topic-list<br>\n<a href=\"https://build.fhir.org/ig/HL7/fhir-subscription-backport-ig/workflow.html\">https://build.fhir.org/ig/HL7/fhir-subscription-backport-ig/workflow.html</a><br>\nThese would all be good comments to make on the ballot for this IG.</p>",
        "id": 235565921,
        "sender_full_name": "John Moehrke",
        "timestamp": 1619032649
    },
    {
        "content": "<p>Right that makes sense for the backport but I assumed 4+ plus meant regular old R4 subscriptions too. Is 4+ common abbreviation for R5 backport subscriptions?</p>",
        "id": 235566509,
        "sender_full_name": "Benjamin Langley",
        "timestamp": 1619032875
    },
    {
        "content": "<p>again.. good comment for the specification.</p>",
        "id": 235567241,
        "sender_full_name": "John Moehrke",
        "timestamp": 1619033167
    },
    {
        "content": "<p>So far in R5 we have been using support for the resources as indicators for supporting subscriptions (e.g., if a server supports <code>Subscription</code> and <code>SubscriptionTopic</code>).  There is some text on the <a href=\"http://build.fhir.org/subscriptions.html#overview-subscription\">subscriptons</a> page, but if it either isn't clear or could use refinement, please file a ticket.</p>\n<p>In the backport IG, there is a <a href=\"http://build.fhir.org/ig/HL7/fhir-subscription-backport-ig/conformance.html\">Conformance</a> page, which links to the required capabilities (e.g., listing the IG as supported, operations, etc.).  Same as above, if there is anything missing, confusing, or unclear please let us know.</p>",
        "id": 235570333,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1619034529
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span> I have also assumed that support for Subscriptions was given by its presence in the Capability Statement. But as you stated that might not be the case as in HAPI FHIR - it might have to be enabled. Maybe that's an inconsistency?</p>",
        "id": 235682576,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1619100057
    },
    {
        "content": "<p>I would expect that subscriptions would be topic specific. Meaning that a use-case would drive for a use-case specific ImplementationGuide. Thus a server could declare support for that in their capabiltiyStatement. Thus clients also wanting to follow that ImplementationGuide would look for that decoration. This what IHE has defined for how these capabilities can be discovered. For example where we have defined a patient identity feed, that an app could subscribe to receive. Just one example, among an infinite future set of IGs.</p>",
        "id": 235688594,
        "sender_full_name": "John Moehrke",
        "timestamp": 1619102029
    },
    {
        "content": "<p>John is correct - one of the big pushes for the redesign was that servers may only want to support some <em>specific</em> subscriptions, which this enables.</p>\n<p>We still have an open discussion on whether servers need to communicate channel support in some conformance piece as well (e.g., a server may only support REST-hooks, etc.).  So far, testing has shown that accepting/rejecting the subscription request is enough there.</p>",
        "id": 235698760,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1619105388
    }
]