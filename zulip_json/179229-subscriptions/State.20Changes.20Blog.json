[
    {
        "content": "<p>Hey all, I know there's been a lot of discussion around FHIR R5 Subscriptions and when states trigger.  So, I've written a <a href=\"https://cloudblogs.microsoft.com/opensource/2020/01/07/fhir-subscriptions-state-changes/\" target=\"_blank\" title=\"https://cloudblogs.microsoft.com/opensource/2020/01/07/fhir-subscriptions-state-changes/\">blog post</a> around my current understanding and thoughts.  Questions/comments/feedback welcome!</p>",
        "id": 185031684,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1578417160
    },
    {
        "content": "<blockquote>\n<p>Hey all, I know there's been a lot of discussion around FHIR R5 Subscriptions and when states trigger.  So, I've written a <a href=\"https://cloudblogs.microsoft.com/opensource/2020/01/07/fhir-subscriptions-state-changes/\" target=\"_blank\" title=\"https://cloudblogs.microsoft.com/opensource/2020/01/07/fhir-subscriptions-state-changes/\">blog post</a> around my current understanding and thoughts.  Questions/comments/feedback welcome!</p>\n</blockquote>\n<p>Great blog post! Thx for sharing! </p>\n<p>I’m really interested in the area of state transitions as it really is what drives process and workflow as well as has high impact on business logic and  validations. The easier it is for the client to understand what has happened the better, and having to compare versions to find out what has happened is not great.</p>\n<p>You divide state changes into Create, Delete and Update. Update of course can be really anything.</p>\n<p>Do you know if resource specific standard update events are defined or are being discussed? I think that would be a very good idea. An example is in the ADT area, it should be possible for a client to understand directly that an event is an Admission, Discharge or Transfer instead of having to figure out what type of Update event has occurred. For ADTs, these standard events would then apply to the Encounter resource.</p>",
        "id": 185427967,
        "sender_full_name": "Martin Grundberg",
        "timestamp": 1578824009
    },
    {
        "content": "<p>One consideration that can complicate the otherwise straightforward 'create' is that the case where the client gets access to a resource that it previously did not have access to is...kind of like a create?</p>",
        "id": 185439877,
        "sender_full_name": "Paul Church",
        "timestamp": 1578845606
    },
    {
        "content": "<p>On the delete / loss of access side, I think the server should definitely broadcast the ID to avoid the following problematic pattern:</p>\n<ol>\n<li>User is looking at their data in an app, sees a lab result that they don't want that app to have access to.</li>\n<li>User goes to the data provider and changes their settings to stop sharing that lab result.</li>\n<li>The app isn't notified, because this was a deletion related to privacy settings.</li>\n<li>The user checks in the app and the lab result is still displayed!</li>\n</ol>",
        "id": 185439984,
        "sender_full_name": "Paul Church",
        "timestamp": 1578845850
    },
    {
        "content": "<p>@Martin - sounds like Messaging to me <span aria-label=\"rolling eyes\" class=\"emoji emoji-1f644\" role=\"img\" title=\"rolling eyes\">:rolling_eyes:</span></p>",
        "id": 185441256,
        "sender_full_name": "René Spronk",
        "timestamp": 1578848281
    },
    {
        "content": "<p>Gave it a <a href=\"https://fhirblog.com/2020/01/13/subscriptions/\" target=\"_blank\" title=\"https://fhirblog.com/2020/01/13/subscriptions/\">little push</a>...  <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 185443232,
        "sender_full_name": "David Hay",
        "timestamp": 1578851646
    },
    {
        "content": "<p>One of the considerations that went into the Topic design was that there could be \"standard\" topics published by an IG, and they can have specialized logic that identifies an event like an ADT rather than just a bag of generic resource updates. I don't know how far that's been developed but the idea was there.</p>",
        "id": 185443259,
        "sender_full_name": "Paul Church",
        "timestamp": 1578851736
    },
    {
        "content": "<p>Great post and thanks for asking for opinions in public!<br>\nWith Dynamics 365 experience, this seems very similar of how plugin registrations works. The dynamics team enabled on the subscription layer to actually pick and choose whether to include Pre or Post images (record snapshot) which each event (when applicable) and even on a more granular level, which fields should be included with those images.<br>\nIn the FHIR world where there are privacy concerns, regulations and etc. I would think that it would be nice to have the same type of options but it would need to go through some sort of authorization whether to allow the subscription or not.</p>",
        "id": 185443533,
        "sender_full_name": "Aron Kohn",
        "timestamp": 1578852145
    },
    {
        "content": "<blockquote>\n<p>Do you know if resource specific standard update events are defined or are being discussed? I think that would be a very good idea. An example is in the ADT area, it should be possible for a client to understand directly that an event is an Admission, Discharge or Transfer instead of having to figure out what type of Update event has occurred. For ADTs, these standard events would then apply to the Encounter resource.</p>\n</blockquote>\n<p>This is something we were discussing at the CMS Connectathon last week.  Right now, any of those events <em>could</em> be defined as a <code>SubscriptionTopic</code> (and would only need to be defined once, as Paul mentioned), but those topics would rely heavily on the description of the event.  E.g., most people using them don't want to figure out computable definitions for 'standard' events.</p>\n<p>That lead to the idea of adding an additional way of describing triggers (to the existing <code>fhirPath</code> and <code>queryCriteria</code>), which would allow for a code system and event (e.g., HL7v2 + ADT01) or a reference to an <a href=\"http://build.fhir.org/eventdefinition.html\" target=\"_blank\" title=\"http://build.fhir.org/eventdefinition.html\">EventDefinition</a> resource.</p>\n<p>So far, it hasn't been asked for enough enough to get traction/feedback for inclusion into the spec.  Today, it could be added as an extension (maybe even a 'standard' one), but not as a first-class field.  If we want to dig into it, there will need to be discussion around pros-cons, trade-offs, etc., but I'm all ears.</p>",
        "id": 185510259,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1578933526
    },
    {
        "content": "<blockquote>\n<p>@Martin - sounds like Messaging to me <span aria-label=\"rolling eyes\" class=\"emoji emoji-1f644\" role=\"img\" title=\"rolling eyes\">:rolling_eyes:</span></p>\n</blockquote>\n<p>That's something that has come up recently as well - we are actively trying to figure out if there is overlap/opportunity/fit.</p>",
        "id": 185510339,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1578933581
    },
    {
        "content": "<blockquote>\n<p>One of the considerations that went into the Topic design was that there could be \"standard\" topics published by an IG, and they can have specialized logic that identifies an event like an ADT rather than just a bag of generic resource updates. I don't know how far that's been developed but the idea was there.</p>\n</blockquote>\n<p>Yes, <code>SubscriptionTopic</code> includes <code>derivedFromUri</code> and <code>derivedFromCanonical</code> fields to ensure that clients can find what they are looking for (e.g., a Server can derive from a canonical topic to add additional filters, and a client can still find the derived topic).</p>\n<p>There is also guidance about what can be done when deriving from a topic (e.g., adding additional filters is good, changing the key resource is bad).</p>",
        "id": 185510668,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1578933770
    },
    {
        "content": "<blockquote>\n<p>With Dynamics 365 experience, this seems very similar of how plugin registrations works. The dynamics team enabled on the subscription layer to actually pick and choose whether to include Pre or Post images (record snapshot) which each event (when applicable) and even on a more granular level, which fields should be included with those images.<br>\nIn the FHIR world where there are privacy concerns, regulations and etc. I would think that it would be nice to have the same type of options but it would need to go through some sort of authorization whether to allow the subscription or not.</p>\n</blockquote>\n<p>That's interesting!  There has been quite a bit of discussion around including graphs (by either <a href=\"https://www.hl7.org/fhir/graphql.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/graphql.html\">GraphQL</a> or <a href=\"http://hl7.org/fhir/graphdefinition.html\" target=\"_blank\" title=\"http://hl7.org/fhir/graphdefinition.html\">GraphDefinition</a> ), but the general consensus has been to focus on the core mechanisms first and make sure they are solid.</p>\n<p>There is also a strong camp that would prefer to have those types of operations done post-notification for simplicity (e.g., a client receives the notification, then authenticates and builds their desired graph normally, even if that client is just a hop to build the graph and sends it on to someone else).</p>\n<p>Pre-state graphs are much harder, since they either need to be built during the workflow in question, or later using a time database, etc.  Given all the architectural implications, I don't think it's feasible in the core spec (today).  That said, if a sever wanted to implement pre-state notifications, it should just require one or two extension fields to make it happen.</p>",
        "id": 185512217,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1578934672
    }
]