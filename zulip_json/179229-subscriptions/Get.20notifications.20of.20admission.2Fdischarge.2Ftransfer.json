[
    {
        "content": "<p>How would one setup a subscription to get notification of admissions, discharge and transfers? Use simply <code>Encounter</code> and get all new / modified encounters?</p>",
        "id": 161992190,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1553806730
    },
    {
        "content": "<p>That won't work, since not all encounters are admissions. You'd have to figure out how to discriminate admission Encounters. (When you do, please let me know how, as I've been struggling with how to distinguish those in another context.)</p>",
        "id": 161996176,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1553809978
    },
    {
        "content": "<p>Admission encounters have a <code>period</code> with a start date but no end date - and possibly an 'inpatient' class</p>",
        "id": 161998098,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1553811667
    },
    {
        "content": "<p>Discharges modify the encounters to have an end date</p>",
        "id": 161998111,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1553811696
    },
    {
        "content": "<p>My understanding is that other encounters within an admission also have those characteristics.</p>",
        "id": 161998131,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1553811719
    },
    {
        "content": "<p>OK - that would just make the situation worse... my point is that there seem no way to define these criteria as searches, so the only way to setup subscription is getting all modified encounters and sort them client-side - or is there something I am missing?</p>",
        "id": 161998296,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1553811848
    },
    {
        "content": "<p>Not from what I can tell, but maybe you'll get more eyes on this in the implementers stream. Identifying admission/discharge encounters isn't subscription-specific.</p>",
        "id": 161998361,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1553811940
    },
    {
        "content": "<p>My question is about how to setup notifications - assuming that there is a criteria</p>",
        "id": 161998509,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1553812075
    },
    {
        "content": "<p>Because it seem a pretty common / basic use for notifications</p>",
        "id": 161998604,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1553812126
    },
    {
        "content": "<p>(subscribe to ADT)</p>",
        "id": 161998638,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1553812160
    },
    {
        "content": "<p>One question is always whether it is possible to subscribe to a slightly broader group of events. Like all changes to the encounter resource, and then you might apply logic down stream based on the location or other attributes that you care about in your specific scenario.</p>",
        "id": 162014540,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1553830638
    },
    {
        "content": "<p>Im with Josh, for subscription it is not going to be that noisy. Far better to get notifications that you can locally process, than to have a false-negative miss a change you should have known about.</p>",
        "id": 162044042,
        "sender_full_name": "John Moehrke",
        "timestamp": 1553864603
    },
    {
        "content": "<p>OK, yes, that was what I got at: subscribe to all encounter (or maybe all inpatient ones) and have the client sort out things</p>",
        "id": 162047105,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1553866968
    },
    {
        "content": "<p>The alternative I can think of not to burden the client is to have the server implement whatever algorithm to detect ADT and put the resulting encounters in a list, and have the client subscribe to changes to the list (that I think is possible?)</p>",
        "id": 162047229,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1553867051
    },
    {
        "content": "<p>Messaging might be a better option than subscription, perhaps ? ;-)</p>",
        "id": 162177955,
        "sender_full_name": "René Spronk",
        "timestamp": 1554043677
    },
    {
        "content": "<p>Messaging and <code>Subscription</code> are not mutually exclusive. Subscriptions are for when you want <code>criteria</code> to live on the FHIR server. As the Subscription spec is now, Messaging is an option for delivery. To me, Subscription is probably overkill for most servers to implement at scale without slicing the allowed criteria down a bunch. If it's possible getting all data and filtering on the client side is probably the easiest solution for both ADT producer and consumer.</p>",
        "id": 162178635,
        "sender_full_name": "Nick Hatt",
        "timestamp": 1554044785
    },
    {
        "content": "<p>Largely agree - however, with messaging the sending system may (easily) base its trigger events on information/context it is aware of (e.g. user selecting some GUI button), information which isn't captured as part of FHIR resources, and as such can't be (easily) detected by a receiver.</p>",
        "id": 162207841,
        "sender_full_name": "René Spronk",
        "timestamp": 1554092436
    },
    {
        "content": "<p>A way around that would be if one could subscribe to \"trigger events known to the sender\", ones that could be specified in non-FHIR specific terms (like a search URL or  FHIRPath). <br>\nThis is probably already an option if I were to subscribe to an 'operation/named query based URL'  which is related to the server side trigger event.</p>",
        "id": 162207978,
        "sender_full_name": "René Spronk",
        "timestamp": 1554092658
    },
    {
        "content": "<p>A bit of background on my question: in most (all?) of our installation we get ADT data via HL7v2 feeds, now we have customers developing solutions on top of our FHIR API, and they want / need some way to get notifications of 'interesting' things - without having to constantly poll for changes, and the interesting thing at the top of the list is ADT</p>",
        "id": 162223312,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1554111797
    },
    {
        "content": "<p>The possibilities seem: subscribe to all Encounter (or all inpatient Encounter) changes - that is not much better than polling though</p>",
        "id": 162223385,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1554111848
    },
    {
        "content": "<p>Or use some kind of custom server-side logic to detect ADT (maybe just linked to the incoming HL7v2 feeds) and base subscription on that - probably via FHIR List</p>",
        "id": 162223445,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1554111946
    },
    {
        "content": "<p>The latter would be <span class=\"user-mention\" data-user-id=\"191372\">@René Spronk</span> 'subscribe to \"trigger events known to the sender\"' if I understand correctly</p>",
        "id": 162223497,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1554111972
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> yes, exactly.</p>",
        "id": 162242426,
        "sender_full_name": "René Spronk",
        "timestamp": 1554127973
    },
    {
        "content": "<p>IHE is building both into their current FHIR IG on patient id management. We recognize that some want a classic long-standing messaging configuration, and some want an occational or dynamically initiated subscription. I do expect the list of things to subscribe to will be very small to begin with.  <span class=\"user-mention\" data-user-id=\"193299\">@Luke Duncan</span> <span class=\"user-mention\" data-user-id=\"193427\">@Ben Levy</span></p>",
        "id": 162243905,
        "sender_full_name": "John Moehrke",
        "timestamp": 1554128963
    },
    {
        "content": "<p>Wouldn't the non admission encounters be a part-of the admission encounter? (where in patient too I suppose)<br>\nso Encounter?partOf:missing=true</p>",
        "id": 162422803,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1554293341
    }
]