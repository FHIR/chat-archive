[
    {
        "content": "<p>Hi all, has there has been any discussion of a custom operation to <em>publish</em> events on a specific SubscriptionTopic?  This is probably not relevant in a pure FHIR server, but I have a use case of a centralized FHIR facade that is backed by multiple independent services, some of which may be native FHIR while others are transformation layers on top of other data models.  I need a way for those services to broadcast their events to the centralized facade which will then re-publish (possibly with some transformation/augmentation) to any external subscribers.</p>\n<p>I was thinking the facade could support a \"POST /SubscriptionTopic/{id}/$publish\" operation that would accept a Bundle as the only input parameter.  The idea would be that any producer services which natively support the new Subscription resource could just set up a rest-hook subscription to the relevant topic with my facade's $publish url as the target endpoint.  Other producers would just make explicit REST calls to that endpoint at the appropriate trigger points in their application.</p>\n<p>Any reason this would not work?  Anyone else have a similar use case?</p>",
        "id": 257560802,
        "sender_full_name": "Steve Atwood",
        "timestamp": 1634227579
    },
    {
        "content": "<p>Neat, and worth thinking about! I don't see any immediate reason why this wouldn't work or why you could not incorporate this kind functionality into your implementation. Obviously driving to standardized view of exactly what the parameters and behaviors look like would take some experimentation and discussion, but it seems like a great (ahem!) topic area to me.</p>",
        "id": 257564245,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1634228969
    },
    {
        "content": "<p>Interesting idea!</p>\n<p>I think this could work without needing to use separate URLs during the POST (not that it can't, just that it shouldn't be needed).  Since the notifications can contain the canonical URL of the SubscriptionTopic (and <em>should</em> if these are <code>full-resource</code>, which I assume these are based on the workflow), any notification received should be fairly straightforward to route.</p>\n<p>I've been periodically considering what an 'accept a notification' operation would look like on a FHIR server, but  it hasn't been pressing enough to bubble up.  For discussion, I had been leaning towards something like <code>base/$accept-subscription-notification</code>, so that it could just be tied to the root server and and handling would happen from there.  The same could also be said for adding an operation to <code>/Bundle</code>, in order to narrow the scope.</p>\n<p>I don't want to discourage discussion on Zulip, but I'd also be happy to add this to the agenda for next week's call.</p>",
        "id": 257575202,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1634233179
    },
    {
        "content": "<p>Cool, thanks for the responses Josh and Gino!  I will plan to dial in next week so if there's time to discuss that sounds great.  I know the focus is on getting the R4B stuff finalized for publication though so also totally fine if you want to defer this topic.</p>\n<p>Gino, fair point about the SubscriptionTopic being potentially redundant.  That said, some things I like about the topic-specific operation:</p>\n<ul>\n<li>(1) Separate routes just make it easier for monitoring/reporting on calls per topic using common logging/metrics/telemetry tools without needing to parse the post body.</li>\n<li>(2) Could optionally use custom scopes to control write access to specific topics.</li>\n<li>(3) The topic referenced in the notification could be different from the topic as defined by my server.  The topic-specific operation allows that mapping to be expressed when I subscribe to your server.  E.g. I could subscribe my \"/SubscriptionTopic/Encounter.create/$publish\" endpoint to your \"/SubscriptionTopic/admission\" topic instead of requiring business logic in code somewhere to do the mapping based on the canonical url in your notifications.</li>\n<li>(4) In the scenario where the producer is <em>not</em> a FHIR Subscription server, I might not need to require the SubscriptionStatus resource at all.  Need to think through this case a bit more, but it's unclear to me if the SubscriptionStatus adds any value in that case and some of its required fields such as the Subscription reference become meaningless in that scenario, so if it's required they would have to insert some dummy reference.</li>\n</ul>\n<p>To address your earlier question about the payload type for my specific use case, I think it could be either <code>full-resource</code> or <code>id-only</code> depending on the topic.</p>",
        "id": 257591748,
        "sender_full_name": "Steve Atwood",
        "timestamp": 1634239787
    }
]