[
    {
        "content": "<p>1) As in the examples -- create a Location instance with the State specified, and possibly a GeoJSON<br>\n2) In the reference, include the state name (or  2 char symbol) in the display/reference strings</p>\n<p>Should one of these be the canonical approach?</p>",
        "id": 209788450,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1599834934
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"196359\">@Robert Dieterle</span></p>",
        "id": 209800044,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1599840168
    },
    {
        "content": "<p>#1 is preferred -- since it is not subject to interpretation by a 3rd party querying the data.<br>\n#2 required the 3rd party to understand the encoding of the display/reference strings.</p>",
        "id": 209814950,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1599847468
    },
    {
        "content": "<p>Added implementation note in Location, Network, InsurancePlan, and HealthcareService.</p>",
        "id": 210070338,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1600122383
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"215604\">@Saul Kravitz</span>   In the Insurance Plan (or Network).coverage area  refer to the provider coverage area or the eligiblity?  Example:  Medicare elig is county by county, but the providers are nationwide.  How should we  return coverage area in this instance?  Noted:  coverage area is also present under InsurancePlan.plans.coverage area.</p>",
        "id": 210331952,
        "sender_full_name": "Kristin Ashby",
        "timestamp": 1600298537
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"196359\">@Robert Dieterle</span>  <span class=\"user-mention\" data-user-id=\"231038\">@Gail Kocher</span></p>",
        "id": 210336497,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1600302951
    },
    {
        "content": "<p>Network.coverage area refers to the geographic area the network covers <br>\nInsurancePlan.coverage area refers to the geographic area where the plan is available</p>\n<p>A plan may be for all of a state, but the network may only be for part of the state.</p>\n<p>BTW Medicare ffs is nationwide but a provider is only available in the state(s) where the have a valid license</p>",
        "id": 210343016,
        "sender_full_name": "Robert Dieterle",
        "timestamp": 1600311049
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"196359\">@Robert Dieterle</span> Another question,  we have found that Medicare eligibility is by both County and State.  How do we map InsurancePlan.coveragearea to allow 3rd Party apps to search available plans by coverage area when both state and county should be specified?  Can we link in both through the reference.</p>",
        "id": 210930241,
        "sender_full_name": "Kristin Ashby",
        "timestamp": 1600808218
    },
    {
        "content": "<p>Good afternoon <span class=\"user-mention\" data-user-id=\"215604\">@Saul Kravitz</span> <span class=\"user-mention\" data-user-id=\"196359\">@Robert Dieterle</span> , I would like to see if there is any way to include a collection of insurancePlan references into PractitionerRole &amp; OrganizationAffiliation resources. I have completed some analysis of customer data on our end and noticed that we have, at least one customer, that has a national network that supports their Medicare line of business. In our case, this national network does not directly tie into the list of Networks provided by the plan. In this case, itâ€™s more of an inferred network that is applied when a search is conducted in our application via the Product/Plan the member has. The other thing we are noticing is, in some cases, there are over 90 Networks that make up a single Product/plan. The concern for this is around managing those 90+ networks and system load when the member or third-party system is trying to conduct a search.</p>",
        "id": 211064568,
        "sender_full_name": "Robert Little",
        "timestamp": 1600896518
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"231038\">@Gail Kocher</span></p>",
        "id": 211065562,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1600897130
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"342457\">@Robert Little</span> <br>\nIs there a reason you can't combine the 90+ networks into a single (or a smaller number) of networks?<br>\nIf not, the client will need to iteratively query using a subset of the networks (first 10, next 10, etc).</p>",
        "id": 211923071,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1601564238
    },
    {
        "content": "<p>Good morning <span class=\"user-mention\" data-user-id=\"215604\">@Saul Kravitz</span> , we do that already with our Plan's/Product's. We combine any number of networks into a single value for searching purposes and relevance to the member. However, the way the IG is written, we need to search by network and not Product which is why we are running into this problem.</p>",
        "id": 211925615,
        "sender_full_name": "Robert Little",
        "timestamp": 1601565170
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"342457\">@Robert Little</span>  So you are saying that in your model the association of practitioners/organizations to a network, is essentially an association to a product?   In Plan-Net (as per VhDir) the association between InsurancePlan (product with associated plans) to Networks is potentially many-to-many.</p>",
        "id": 212088374,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1601651867
    },
    {
        "content": "<p>Good morning <span class=\"user-mention\" data-user-id=\"215604\">@Saul Kravitz</span> , The Product to Network relation on our side can be many to many but here is what we normally tend to see in the data we get from our customers: <br>\n<a href=\"/user_uploads/10155/V22HXVnJwqQdIgtjRF1tR1MR/image.png\">image.png</a>Product_Code/Plan    Product_Name    Network_Code    Network_Name<br>\nP123456 Product Name_1  N12365  Network Name_0<br>\nP123456 Product Name_1  N12366  Network Name_1<br>\nP123456 Product Name_1  N12367  Network Name_2<br>\nP123456 Product Name_1  N12368  Network Name_3<br>\nP123456 Product Name_1  N12369  Network Name_4<br>\nP567891 Product Name_2  N12368  Network Name_3<br>\nP567891 Product Name_2  N12369  Network Name_4<br>\nPC123456    Product Name_3  Net1563 Network Name_5</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/V22HXVnJwqQdIgtjRF1tR1MR/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/V22HXVnJwqQdIgtjRF1tR1MR/image.png\"></a></div><p>In this relationship, we also have for some customers a National network attribute that infers that Product has a form of national data to support it. On our application, when the user searches on the Product/Plan, we are able to pull in all the local providers as defined by the Network to Product mapping and then infer the National Providers outside of the area covered by local providers.</p>",
        "id": 212096432,
        "sender_full_name": "Robert Little",
        "timestamp": 1601655515
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 212111922,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1601663863
    }
]