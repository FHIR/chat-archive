[
    {
        "content": "<p>Searching with chained parameters seems to be broken again on the public HAPI test server. I tested multiple searches on multiple resource types, they all return 0 responses.  <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span></p>",
        "id": 270578007,
        "sender_full_name": "René Spronk",
        "timestamp": 1643906308
    },
    {
        "content": "<p>Hmm, something is wrong with the server's indexing... I'm reindexing everything. I think someone added a bad search parameter and then deleted it</p>",
        "id": 270628063,
        "sender_full_name": "James Agnew",
        "timestamp": 1643927266
    },
    {
        "content": "<p>FWIW: still not functional at this point in time..</p>",
        "id": 270676571,
        "sender_full_name": "René Spronk",
        "timestamp": 1643959847
    },
    {
        "content": "<p>Here's an example where you can see chaining does not work correctly <code>GET /Basic?patient._id=2806640</code> does not work (0 results), but <code>GET /Basic?patient=Patient/2806640</code> does (1 result).</p>",
        "id": 270705132,
        "sender_full_name": "Mirjam Baltus",
        "timestamp": 1643976334
    },
    {
        "content": "<p>Still not functional, could you have a look? <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span>  (this issue means we can't use one of our key public test servers used for FHIR training courses, so a fix would certainly be welcome)</p>",
        "id": 271677314,
        "sender_full_name": "René Spronk",
        "timestamp": 1644654188
    },
    {
        "content": "<p>Hi Team, I need help on FHIR UUID concept. Anyone here to help me</p>",
        "id": 272936871,
        "sender_full_name": "Murugan",
        "timestamp": 1645616417
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"481014\">@Murugan</span> Please create a new topic if your question is unrelated to the ongoing discussion. Please also study <a href=\"https://confluence.hl7.org/display/FHIR/FHIR+Rules+for+Asking+Questions\">https://confluence.hl7.org/display/FHIR/FHIR+Rules+for+Asking+Questions</a> and ask detailed questions, showing what you already know and specifically which aspect is part of your question. Be welcome to the community!</p>",
        "id": 273233013,
        "sender_full_name": "René Spronk",
        "timestamp": 1645798313
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191372\">@René Spronk</span> </p>\n<p>Current Scenario: </p>\n<p>We are currently having 2 API calls GET &amp; PUT, we have a common JSON for handling the data creation and updation. so every time we are making a get API call<br>\nand make sure this data has already inserted are not. Based on that we are continuing the 2nd API call(Bundle), here we are assigning the exact <br>\nPatient ID which we received from initial GET call.</p>\n<p>As per your suggestion, removing the Full URL is working fine but the problem is we have to identify the creation and updation flow. To achieve this<br>\nwe need additional GET API call.</p>\n<p>Expected Solution:</p>\n<p>Without any GET API call, How to handle single API call for insert and update(Bundle with multiple resource type with reference)?</p>",
        "id": 273456645,
        "sender_full_name": "Murugan",
        "timestamp": 1646035994
    },
    {
        "content": "<p>If you can assume that mostly the initial POST has worked (but you can't be certain) you can use a 'conditional create' (based on a business identifier, not the id) in a bundle, which will fail when the initial POST failed. (the condition isn't met, causing a 412 http result)</p>",
        "id": 273458863,
        "sender_full_name": "René Spronk",
        "timestamp": 1646037581
    },
    {
        "content": "<p>Searching with chained parameters is still broken (since Feb. 3rd) on the public HAPI test server. I tested multiple searches on multiple resource types, they all return 0 responses. <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> - this'll really need fixing...</p>",
        "id": 273519353,
        "sender_full_name": "René Spronk",
        "timestamp": 1646067187
    }
]