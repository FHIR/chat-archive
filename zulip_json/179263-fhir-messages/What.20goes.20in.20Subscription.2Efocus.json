[
    {
        "content": "<p>The Da Vinci Alerts project is focused ( pun intended ) on Alert notifications using FHIR messaging, The definition of the element <code>MessageHeader.focus</code> allows for multiple interpretations...:</p>\n<blockquote>\n<p>The actual data of the message - a reference to the root/focus class of the event</p>\n</blockquote>\n<p>for the Requirements:</p>\n<blockquote>\n<p>Every message event is about actual data, a single resource, that is identified in the definition of the event, and perhaps some or all linked resources.</p>\n</blockquote>\n<p>The comments are not very helpful either since I don't know what \"transaction type\" means:</p>\n<blockquote>\n<p>The data is defined where the transaction type is defined. The transaction data is always included in the bundle that is the full message. Only the root resource is specified. The resources it references should be contained in the bundle but are not also listed here. Multiple repetitions are allowed to cater for merges and other situations with multiple focal targets.</p>\n</blockquote>\n<p>Resource are notes not much better and refer to list that does not exist.:</p>\n<blockquote>\n<p>The actual content of the focus resource is specified for each message event (see the list on the messaging page). Any resources referenced in the focus element are always included in the bundle</p>\n</blockquote>\n<p>So this leads to two way of implementing this:</p>\n<ul>\n<li>Defines all the required resources that need to be in the message and ignore MessageDefinition since this interpretation makes that totally redundant and it a lot simpler.</li>\n<li>Narrowly focused to a few key resources, for example, Encounter for admit notification and the use MessageDefintion to say what needs to go into the message Bundle.</li>\n</ul>\n<p>There has been some discussion on this thread but is still not clear to us and I imagine to many others as well.</p>",
        "id": 173224264,
        "sender_full_name": "Eric Haas",
        "timestamp": 1565803875
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"200498\">@Brendan Keeler</span>  Redox seems to do it using option 1</p>\n<p>note that this approach would imply that you would profile MessageHeader instead of using MessageDefinition </p>\n<p>What are the advantages of MessageDefinition then: </p>\n<ul>\n<li>lighter weight assuming creating instances of MessageDefintion easier than creating instances of StructureDefinitions</li>\n</ul>",
        "id": 173423379,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566011955
    },
    {
        "content": "<p>MessageHeader.focus <em>must</em> point only to the focus (or foci) of the specified event.  Otherwise, the receiver doesn't know what the event is about.  As an example, consider a message conveying a change (e.g. discharge) to an Encounter that, for one reason or another, also includes information about other encounters (sub-encounters, prior encounters, whatever).  If the focus points to everything in the message, there'd be no clear way to figure out which of the encounters was the focus of the event.</p>\n<p>There is no need for MessageHeader.focus to point to anything else other than the object of the event that triggered the message.  Everything else in the message will be tied to the focus (foci) by relationship paths to and from the focal resource.  There are only a few situations where you'd ever have more than one focus:<br>\n- if you were doing something like a merge - in which case each resource being merged would be one of the focuses<br>\n- if the message was reporting multiple events (e.g. here are all the reportable results for today), in which case each focus would be a distinct result</p>\n<p>The boundary of what's included in the message vs. not is established by the MessageDefinition.  Obviously the focus resources are included.  Others are included as the graph in the MessageDefinition requires.  The event code tells you what happened to the focus and the focus tells you what the event occurred to.</p>",
        "id": 173625342,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566270644
    },
    {
        "content": "<blockquote>\n<p>Everything else in the message will be tied to the focus (foci) by relationship paths to and from the focal resource. </p>\n</blockquote>\n<p>Is this strictly a requirement?  what if I want to send some totally unrelated isolated resource ( say a  binary of a picture of my cat ) as well in the message and I define in the Messagedefinition?</p>",
        "id": 173658379,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566308388
    },
    {
        "content": "<p>It's a strict requirement - both for messages and documents.  If you traverse all the relationships in all of the entries, the entire web must cling together.  There can't be any non-connected nodes.  If there are, it's an error.  (And the validator currently checks this.)</p>",
        "id": 173664919,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566312632
    },
    {
        "content": "<p>`The document bundle SHALL include only:</p>\n<p>The Composition resource, and any resources directly or indirectly (e.g. recursively) referenced from it<br>\nA Binary resource containing a stylesheet (as described below)<br>\nProvenance Resources that have a target of Composition or another resource included in the document`</p>\n<p>I can't see similarly clear wording for messages, but that's certainly the intent and is currently enforced.  I've submitted <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23722\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23722\">GF#23722</a> to get clearer wording into the spec.</p>",
        "id": 173665735,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566313102
    }
]