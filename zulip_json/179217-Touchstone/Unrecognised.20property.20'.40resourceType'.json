[
    {
        "content": "<p>Another Touchstone question...  this time regarding \"ERROR: Unrecognized property @resourceType', as you can see here:</p>\n<p><a href=\"/user_uploads/10155/nLqQUiDT9IqlSoqX2by3FV4k/Screen-Shot-2017-03-30-at-1.16.46-PM.png\" target=\"_blank\" title=\"Screen-Shot-2017-03-30-at-1.16.46-PM.png\">Screen-Shot-2017-03-30-at-1.16.46-PM.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/nLqQUiDT9IqlSoqX2by3FV4k/Screen-Shot-2017-03-30-at-1.16.46-PM.png\" target=\"_blank\" title=\"Screen-Shot-2017-03-30-at-1.16.46-PM.png\"><img src=\"/user_uploads/10155/nLqQUiDT9IqlSoqX2by3FV4k/Screen-Shot-2017-03-30-at-1.16.46-PM.png\"></a></div>",
        "id": 153880417,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1490898410
    },
    {
        "content": "<p>I know *why* this is erroring.  It's because we're including the resourceType field in our response, like so:</p>\n<p><a href=\"/user_uploads/10155/-prnv4suJ461WGwRQEZ3Rcbi/Screen-Shot-2017-03-30-at-1.19.35-PM.png\" target=\"_blank\" title=\"Screen-Shot-2017-03-30-at-1.19.35-PM.png\">Screen-Shot-2017-03-30-at-1.19.35-PM.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/-prnv4suJ461WGwRQEZ3Rcbi/Screen-Shot-2017-03-30-at-1.19.35-PM.png\" target=\"_blank\" title=\"Screen-Shot-2017-03-30-at-1.19.35-PM.png\"><img src=\"/user_uploads/10155/-prnv4suJ461WGwRQEZ3Rcbi/Screen-Shot-2017-03-30-at-1.19.35-PM.png\"></a></div>",
        "id": 153880418,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1490898480
    },
    {
        "content": "<p>But why is this incorrect?  I don't understand why having the resourceType is invalid.  It's semantically richer; and consistent with the FHIR spec, and more effort to remove.  </p>",
        "id": 153880419,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1490898563
    },
    {
        "content": "<p>Validation of the operation payloads (request and response) is defined via the assert.validateProfileId.  Touchstone leverages the FHIR Java RI Validation Engine (for each corresponding FHIR version) to support this assert directive.  So, the error message you see (in red) is coming from the FHIR Validation Engine.  When validating a JSON formatted resource, the validation rules follow the FHIR specification for the JSON format found here - <a href=\"http://hl7.org/fhir/STU3/json.html\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/json.html\">http://hl7.org/fhir/STU3/json.html</a>.  If you examine the \"Comparison with XML\" section - <a href=\"http://hl7.org/fhir/STU3/json.html#xml\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/json.html#xml\">http://hl7.org/fhir/STU3/json.html#xml</a> - you'll see that the <code>resourceType</code> is a special property that is used only once within the JSON representation of the resource instance.</p>",
        "id": 153880534,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490917820
    },
    {
        "content": "<p>So, I'm afraid your use of the <code>resourceType</code> property outside of this context is invalid in the current definition of the spec.</p>",
        "id": 153880535,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490917945
    },
    {
        "content": "<p>I don't see anything in either of those links about <code>resourceType</code> only being allowed to be used once in an object.  And who would come up with such a rule?  Particularly if we're globbing resources into each other.  </p>\n<p>I understand that the FHIR Java RI Validation Engine may be configured so it rejects resourceTypes in sub-objects; but it seems overly restrictive.  It's simply enforcing an unneeded boxing/unboxing problem.  In the real world, data modeling is going to happen with the minimal amount of data transformations possible, and people are going to want to simply glob resource onto others.</p>",
        "id": 153880542,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1490919208
    },
    {
        "content": "<p>True.  <code>resourceType</code> is not explicitly restricted in the descriptions on that page.  However, it is restricted based on the individual resource type definitions based each type's defined structure; i.e. <code>resourceType</code> is not a defined property in the resource's structure anywhere except as defined on the JSON format page as described in the \"Comparison with XML\" section.<br>\nThe main issue here is the ability of any FHIR system to render the resource in any of the supported formats: XML, JSON and RDF (turtle).  Rendering your version of the Organization resource from JSON into XML would produce an invalid XML format according to the FHIR structure (or more appropriately, the FHIR profile/StructureDefinition).</p>",
        "id": 153880548,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490920680
    },
    {
        "content": "<p>Ultimately, it comes down to interoperability.  Insuring the content of the resources is consistent across all format types insures that FHIR systems can reliably exchange those resources.</p>",
        "id": 153880549,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490921179
    }
]