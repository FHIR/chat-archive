[
    {
        "content": "<p>I had an epiphany while in the shower... since the QR are created on demand,  I recommend using the SDC defined operation <a href=\"http://hl7.org/fhir/uv/sdc/OperationDefinition/Questionnaire-populate\">http://hl7.org/fhir/uv/sdc/OperationDefinition/Questionnaire-populate</a></p>\n<p><a href=\"/user_uploads/10155/xx_jhe_yyy4vakGAw8_cVuDD/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/xx_jhe_yyy4vakGAw8_cVuDD/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/xx_jhe_yyy4vakGAw8_cVuDD/image.png\"></a></div><p>Then can use the Q reference from the extension + the Patient id to fetch the QRs avoiding having to add all those pesky extensions  on the members. <br>\nOn the server side behavior is basically the same since are creating on demand QRs anyways and is purer in the sense that is not truly a RESTful Search.   On the downside the patient Reference type means it needs to be a Post + Parameters and is not an out of the box search operation that is universally supported.  </p>\n<p>or... using a new operation  that combines the<br>\nBundle in the Group Fetch using that solves the updating the patient list and QR results separately. </p>\n<p>Also need a way to discover if PL comes with a Q ...</p>",
        "id": 212618307,
        "sender_full_name": "Eric Haas",
        "timestamp": 1602104359
    },
    {
        "content": "<p>Interesting! (I need to stop listening to the news in the shower -- depressing and it stifles random epiphany time.) </p>\n<p>That said: do we want to commit to \"on demand\" creation? I was expecting some servers would pre-generate (perhaps at intervals) others might generate and cache; others might generate fresh every time... what's the advantage of locking in a \"generate on demand\" requirement?</p>",
        "id": 212619455,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1602104902
    },
    {
        "content": "<p>We also talked recently about servers using pagination of search response bundles as a place to enforce rate limiting  -- I think you lose this with a custom operation too.</p>",
        "id": 212619605,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1602104977
    },
    {
        "content": "<p>I assumed on demand will be the common use case,  but I am not fussed if stick to GETs.  Are we comforatble with a 1:1 Q to Group?</p>",
        "id": 212734158,
        "sender_full_name": "Eric Haas",
        "timestamp": 1602183241
    },
    {
        "content": "<p>Eric, would this operation allow for the requesting of multiple QRs at the same time? Or would it be one patient's QR at a time?</p>",
        "id": 214385668,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1603491436
    }
]