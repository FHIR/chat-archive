[
    {
        "content": "<p>Hey Guys, Playing around with Hapi's Questionnaire/Response. <a href=\"https://confluence.hl7.org/pages/viewpage.action?pageId=86977234#id-202009ArgonautPatientLists-3.3-PatientLists-ExtraDetailsviaQuestionnaire\">Eric pointed out</a> that <code>questionnaire</code> is a <a href=\"https://www.hl7.org/fhir/questionnaireresponse.html#search\">standard search param</a> on the QuestionnaireResponse resource ... and therefore we could eliminate the proposed second extension in Group.member.entity.extension which concretely defines a QuestionnaireResponse for each patient in the group.</p>",
        "id": 208397411,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1598650427
    },
    {
        "content": "<p>Instead issuing a series of searches?</p>",
        "id": 208397510,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1598650485
    },
    {
        "content": "<p>Can you provide an example of what this would look like?</p>",
        "id": 208397533,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1598650502
    },
    {
        "content": "<p>So, I created a <a href=\"http://hapi.fhir.org/baseR4/Questionnaire/1169270\">Questionnaire</a> and a <a href=\"http://hapi.fhir.org/baseR4/QuestionnaireResponse/1169472\">QuestionnaireResponse</a> in HAPI, but the <a href=\"http://hapi.fhir.org/baseR4/QuestionnaireResponse?questionnaire=1169270\">?questionnaire query param doesn't work</a>. I strongly suspect that the problem is user error, but I'm not sure what it is. </p>\n<p>Any suggestions?</p>",
        "id": 208397639,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1598650565
    },
    {
        "content": "<p>Hey Josh! Happy Friday! I do have <a href=\"https://hackmd.io/AfJ9YNb6TNGeDSuAaHIn1g?view#Patients-with-column-data\">examples of the two extensions</a> in which Group.member.entity.extension concretely associates a QR with a Patient. The alternative would be a Group like this:</p>",
        "id": 208397694,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1598650640
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>{\n  &quot;resourceType&quot;: &quot;Group&quot;,\n  &quot;extension&quot;: [\n    {\n      &quot;url&quot;: &quot;http://registry.fhir.org/argonaut/patientlistsquestionnairev1&quot;,\n      &quot;valueReference&quot;: &quot;http://hapi.fhir.org/baseR4/Questionnaire/1169270&quot;\n    }\n  ],\n  &quot;identifier&quot;: [\n    {\n      &quot;system&quot;: &quot;http://example.org&quot;,\n      &quot;value&quot;: &quot;dba0a9f9-82cb-4d42-ad92-3250756a9420&quot;\n    }\n  ],\n  &quot;active&quot;: true,\n  &quot;type&quot;: &quot;person&quot;,\n  &quot;actual&quot;: true,\n  &quot;name&quot;: &quot;ICU List&quot;,\n  &quot;managingEntity&quot;: {\n    &quot;reference&quot;: &quot;Organization/example-organization-2&quot;,\n    &quot;display&quot;: &quot;Dairyland Hospital&quot;\n  },\n  &quot;member&quot;: [\n    {\n      &quot;entity&quot;: {\n        &quot;identifier&quot;: {\n          &quot;system&quot;: &quot;http://example.org&quot;,\n          &quot;value&quot;: &quot;456&quot;\n        },\n        &quot;display&quot;: &quot;Name = Daniel Crimson (MRN = 456)&quot;,\n      },\n      &quot;inactive&quot;: false\n    },\n    {\n      &quot;entity&quot;: {\n</code></pre></div>",
        "id": 208397793,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1598650705
    },
    {
        "content": "<p>and a follow-up query like:</p>\n<div class=\"codehilite\"><pre><span></span><code>QuestionairreResponse?questionnaire=1169270\n</code></pre></div>\n\n\n<p>which, per FHIR should return all of the QuestionnaireResponses for that Questionnaire (but which HAPI is not).</p>",
        "id": 208397864,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1598650790
    },
    {
        "content": "<p>Are you saying the API guarantee would be that this questionnaire is only ever used  with this specific list? So if I had three lists of patients and I wanted to fill in the same information about all of them I would define three different questionnaires with identical content? I can see how one might thread this needle but it is a little bit surprising and fragile, since normally we think about a questionnaire as being reusable.</p>",
        "id": 208398641,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1598651393
    },
    {
        "content": "<p>Yeah.</p>",
        "id": 208398750,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1598651468
    },
    {
        "content": "<p>@Josh this measns the url is unique for each group.   We can define the Q as being derivedfrom a standard Q.  Let me review how we did this for adaptive Questionnaires.  I personally think this simplication is worth it .  Just fetch the whole gaggle of QAs.  Why is it fragile? The server needs to do all the work on the back end in either case.</p>",
        "id": 208461856,
        "sender_full_name": "Eric Haas",
        "timestamp": 1598748942
    },
    {
        "content": "<p>Fragile in the sense that many servers can't enforce an invariant like \"never allow Questionnaire 123 to be answered except for patients currently in Group 456\".</p>",
        "id": 208462056,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1598749311
    },
    {
        "content": "<p>Like, there's no good way to enforce this (in sync, consistently) as groups and memberships change.</p>",
        "id": 208462103,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1598749392
    },
    {
        "content": "<p>(re: tracking the relationship among multiple questionnaires derived from the same core content, yes <a href=\"http://build.fhir.org/questionnaire-definitions.html#Questionnaire.derivedFrom\">http://build.fhir.org/questionnaire-definitions.html#Questionnaire.derivedFrom</a> can capture this.)</p>",
        "id": 208462162,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1598749512
    },
    {
        "content": "<p>I'm trying to find a way to avoid two extensions.  All you need is a Q and a patient id. . Why do we need a QR ref?  I doubt very much the QR is made ahead of time and stored for later use/fetching. Assuming the server create the QRs on the fly, the server needs to index the patients to Q somehow anyway.</p>",
        "id": 208462988,
        "sender_full_name": "Eric Haas",
        "timestamp": 1598751155
    },
    {
        "content": "<p>sooooo. why not fetch QR based on URL and Patient ?</p>",
        "id": 208463079,
        "sender_full_name": "Eric Haas",
        "timestamp": 1598751362
    },
    {
        "content": "<p>Questionnaire Url <em>and</em> patient? That sounds fine -- I thought the proposal was to omit patient from the query.</p>",
        "id": 208463239,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1598751662
    },
    {
        "content": "<p>although answering my own questions.  The QR ids are basically a way to index this and expose to client.   So I guess is \"moving the deck chairs\"</p>",
        "id": 208463244,
        "sender_full_name": "Eric Haas",
        "timestamp": 1598751666
    },
    {
        "content": "<p>Well my initial thought was to do that, but if as you suggest syncing this is problematic then can do the Patient + Q url.  query.    I  guess will find out whether 2 extensions or 1   is more palatable for servers.</p>",
        "id": 208463366,
        "sender_full_name": "Eric Haas",
        "timestamp": 1598751885
    },
    {
        "content": "<p>The reason to not fetch QR with both questionnaire and patient id is performance. I want/need to be able to query for many QR at once. I agree that the certainty provided by the second extension in the Group (pointing to a QR per patient) makes an integration less brittle. That's what we're prototyping out.</p>",
        "id": 208756289,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1598998783
    },
    {
        "content": "<p>We could also supply a list of patient IDs in the query.</p>",
        "id": 208757235,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1598999403
    },
    {
        "content": "<p>Or a batch of queries.</p>",
        "id": 208757275,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1598999417
    },
    {
        "content": "<p>I've come full circle and see the utility of exposing the QR for each patient.   I have a basic client  that doew a the simple stuff - trying to  get it deployed and hope to dig into the Q an QR stuff soon.</p>",
        "id": 208761557,
        "sender_full_name": "Eric Haas",
        "timestamp": 1599002614
    }
]