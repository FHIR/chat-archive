[
    {
        "content": "<p>Hi Lloyd, how do we address race and ethnicity of the patient in FHIR? Do we use an extension? Also, FHIR, has the concept of logical identifiers. How can we handle those in our EHR use case? Each source system may have different Patient ID's?</p>",
        "id": 167502335,
        "sender_full_name": "Roney A",
        "timestamp": 1559842103
    },
    {
        "content": "<p>Yes, race and ethnicity are handled via extensions.  If you look at US-Core, they have some extensions for both of those.</p>",
        "id": 167502354,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1559842130
    },
    {
        "content": "<p>On Patient, you should capture whatever identifiers you know - MRNs, insurance identifiers, SSN, whatever you have that is known to uniquely identify that particular Patient.  Other systems will obviously have different identifier collections.  To interoperate, you should ideally have at least one identifier in common, though you can use demographic-based searches and matching in cases where that's not possible.</p>",
        "id": 167503626,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559842994
    },
    {
        "content": "<blockquote>\n<p>Yes, race and ethnicity are handled via extensions.  If you look at US-Core, they have some extensions for both of those.</p>\n</blockquote>\n<p>Thank you Jean.</p>",
        "id": 167520429,
        "sender_full_name": "Roney A",
        "timestamp": 1559853556
    },
    {
        "content": "<blockquote>\n<p>On Patient, you should capture whatever identifiers you know - MRNs, insurance identifiers, SSN, whatever you have that is known to uniquely identify that particular Patient.  Other systems will obviously have different identifier collections.  To interoperate, you should ideally have at least one identifier in common, though you can use demographic-based searches and matching in cases where that's not possible.</p>\n</blockquote>\n<p>Thank you Lloyd.</p>",
        "id": 167520459,
        "sender_full_name": "Roney A",
        "timestamp": 1559853586
    },
    {
        "content": "<p>Hi Lloyd, how do we address EHR fields that could not be mapped and/or matched to FHIR resources or elements? Do we create extensions (resource or element) for ALL? For example, \"Attribution  table\" has some 12 columns, including attribution code. How can we accommodate the 12 columns / elements in the current resource \"FHIR Extension Attribution Code\"Â ? Do we create a new resource  extension \"Attribution\" and add 12 elements to accommodate the 12 EHR Attribution columns or add the 12 columns to the current resource \"FHIR Extension Attribution Code?  We also have another \"Attachment table\" with that many columns?  What's the best FHIR approach?</p>",
        "id": 167591382,
        "sender_full_name": "Roney A",
        "timestamp": 1559924830
    },
    {
        "content": "<p>The general recommendation is:<br>\n1. Decide if there's any reason to share the elements at all?  (Not everything that's in your EHR repository is necessarily going to be useful to downstream systems<br>\n2. Look carefully at the definitions in the core spec (not just the names) as well as the list of common extensions in the core spec as well as extensions in any potentially relevant implementation guides (C-CDA, US Core/AU Core/CA Core/IHE profiles/etc.)<br>\n3. If you can't find an appropriate home, raise separate questions for each element/interlinked group of elements on <a href=\"http://chat.fhir.org\" target=\"_blank\" title=\"http://chat.fhir.org\">chat.fhir.org</a>.  The community may identify an appropriate location/convention you've missed (e.g. using Observation, using an extension with a broader purpose/different name that caused you to not recognize it, etc.)  Alternatively, they may encourage you to submit a change request that will result in a standard extension being defined<br>\n4. If the consensus is \"you'll need an extension and it's not sufficiently general purpose to define a 'standard' extension\", then do that.  Try to define the extension in a generic enough manner that other systems could use it too.  The more systems that use the extension, the more systems will recognize it - which is your objective.</p>",
        "id": 167591897,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559925224
    },
    {
        "content": "<blockquote>\n<p>The general recommendation is:<br>\n1. Decide if there's any reason to share the elements at all?  (Not everything that's in your EHR repository is necessarily going to be useful to downstream systems<br>\n2. Look carefully at the definitions in the core spec (not just the names) as well as the list of common extensions in the core spec as well as extensions in any potentially relevant implementation guides (C-CDA, US Core/AU Core/CA Core/IHE profiles/etc.)<br>\n3. If you can't find an appropriate home, raise separate questions for each element/interlinked group of elements on <a href=\"http://chat.fhir.org\" target=\"_blank\" title=\"http://chat.fhir.org\">chat.fhir.org</a>.  The community may identify an appropriate location/convention you've missed (e.g. using Observation, using an extension with a broader purpose/different name that caused you to not recognize it, etc.)  Alternatively, they may encourage you to submit a change request that will result in a standard extension being defined<br>\n4. If the consensus is \"you'll need an extension and it's not sufficiently general purpose to define a 'standard' extension\", then do that.  Try to define the extension in a generic enough manner that other systems could use it too.  The more systems that use the extension, the more systems will recognize it - which is your objective.</p>\n</blockquote>\n<p>Thank you Lloyd.</p>\n<p>In other words, if the there is a general consensus, we can then add new standard element(s) to an existing 'FHIR resource', as well add a new resource, such as 'attribution' or 'attachment' and add all the agreed upon elements to the appropriate resources?</p>",
        "id": 167592220,
        "sender_full_name": "Roney A",
        "timestamp": 1559925519
    },
    {
        "content": "<p>Only HL7 can add things to a resource - and then it will only take effect in the next version of FHIR.  For everything else, the only solution is extensions.  (A single version of FHIR has a single set of schemas that all FHIR-compliant instances must align with wherever they are in the world.  Letting implementers add their own elements would totally break that.</p>",
        "id": 167596452,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559928818
    },
    {
        "content": "<blockquote>\n<p>Only HL7 can add things to a resource - and then it will only take effect in the next version of FHIR.  For everything else, the only solution is extensions.  (A single version of FHIR has a single set of schemas that all FHIR-compliant instances must align with wherever they are in the world.  Letting implementers add their own elements would totally break that.</p>\n</blockquote>\n<p>Thank you Lloyd. That makes sense.</p>",
        "id": 167599339,
        "sender_full_name": "Roney A",
        "timestamp": 1559930872
    },
    {
        "content": "<blockquote>\n<p>On Patient, you should capture whatever identifiers you know - MRNs, insurance identifiers, SSN, whatever you have that is known to uniquely identify that particular Patient.  Other systems will obviously have different identifier collections.  To interoperate, you should ideally have at least one identifier in common, though you can use demographic-based searches and matching in cases where that's not possible.</p>\n</blockquote>\n<p>Hi Lloyd, Is the logical ID (<a href=\"https://www.hl7.org/fhir/resource.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/resource.html\">https://www.hl7.org/fhir/resource.html</a>) of the resource randomly generated on the FHIR server and if it is dynamic? Will all the changes (history), will be made  and maintained at the business \"identifier\" level? Or, do we need to maintain changes by resource 'id' at the Resource.meta.versionId when the resource is created, updated, or deleted for the business identifier?</p>",
        "id": 167794954,
        "sender_full_name": "Roney A",
        "timestamp": 1560199567
    },
    {
        "content": "<p>The logical id is like a primary key.  It's generally determined by the FHIR server.  It could be random, sequential, or be generated by some other algorithm.  Some servers may allow clients to actually assign the key (using PUT rather than POST).  However, if that happens, the server would need to trust the clients to not create colliding identifiers.</p>\n<p>Once assigned, the expectation is that ids will be consistent.  If you query today and you query 2 months from now, the id should be the same.  History is tracked on each server at the 'id' level.  Each time a resource with a given id changes, the versionId and lastUpdated elements should change.</p>",
        "id": 167795640,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560200116
    },
    {
        "content": "<blockquote>\n<p>The logical id is like a primary key.  It's generally determined by the FHIR server.  It could be random, sequential, or be generated by some other algorithm.  Some servers may allow clients to actually assign the key (using PUT rather than POST).  However, if that happens, the server would need to trust the clients to not create colliding identifiers.</p>\n<p>Once assigned, the expectation is that ids will be consistent.  If you query today and you query 2 months from now, the id should be the same.  History is tracked on each server at the 'id' level.  Each time a resource with a given id changes, the versionId and lastUpdated elements should change.</p>\n</blockquote>\n<p>Thank you Lloyd.</p>",
        "id": 167800398,
        "sender_full_name": "Roney A",
        "timestamp": 1560204016
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>The logical id is like a primary key.  It's generally determined by the FHIR server.  It could be random, sequential, or be generated by some other algorithm.  Some servers may allow clients to actually assign the key (using PUT rather than POST).  However, if that happens, the server would need to trust the clients to not create colliding identifiers.</p>\n<p>Once assigned, the expectation is that ids will be consistent.  If you query today and you query 2 months from now, the id should be the same.  History is tracked on each server at the 'id' level.  Each time a resource with a given id changes, the versionId and lastUpdated elements should change.</p>\n</blockquote>\n<p>Thank you Lloyd.</p>\n</blockquote>\n<p>Question arises: How do we handle, map, relate, match, merge, or associate business \"identifier\" for each resource,  (for example: Patient.identifier, MRNs, insurance identifiers, SSN, etc.) with the \"logical id\" for each resource, that being the primary key?</p>",
        "id": 167801591,
        "sender_full_name": "Roney A",
        "timestamp": 1560205061
    },
    {
        "content": "<p>Just put the identifier on the Patient, Observation, etc.  Each resource instance might have multiple business identifiers.  (In some cases, multiple records may share the same business identifiers (e.g. multiple PractitionerRole instances might share the same national provider identifier)</p>",
        "id": 167810945,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560216485
    },
    {
        "content": "<blockquote>\n<p>Just put the identifier on the Patient, Observation, etc.  Each resource instance might have multiple business identifiers.  (In some cases, multiple records may share the same business identifiers (e.g. multiple PractitionerRole instances might share the same national provider identifier)</p>\n</blockquote>\n<p>Thank you Lloyd. Agreed. Need clarity on  how we relate all these identifiers (Patient.identifier, Type: Identifier) with the  \"logical id\" (<a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a>, Type:id) of the resource which is like a primary key?</p>",
        "id": 167857493,
        "sender_full_name": "Roney A",
        "timestamp": 1560264715
    },
    {
        "content": "<p>The relationship is that the record with the id (key) includes the identifiers.</p>",
        "id": 167862197,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560267777
    },
    {
        "content": "<blockquote>\n<p>The relationship is that the record with the id (key) includes the identifiers.</p>\n</blockquote>\n<p>Thank you Lloyd. That makes sense, id (key) is like the surrogate key.</p>",
        "id": 167876585,
        "sender_full_name": "Roney A",
        "timestamp": 1560277679
    },
    {
        "content": "<p>Hi Lloydâ{FHIR Constraints, and/or limitations] Could you please clarify the following:</p>\n<p>1. Claim headerâ may have several columns: servicing provider, admitting provider, attending provider, referencing provider, other_provider,  etc. FHIR \"Claim.provider\" seems to be the relevant field.  Issue: the cardinality of the field (Claim.provider) is 1..1. How to map several type of providers in a single Claim resource. The constraint 1:1 limits referring to a single provider.<br>\n2. Lab resultâ using multiple columns: value (a value 'String'), numeric value, observation unit. FHIR Observation.value[x] seems to be the relevant field. Issue:  the cardinality is 0..1. Either numeric or string value could be represented. We need both fields for aggregations, etc.<br>\n3. DiagnosisâFor Diagnosis, the corresponding FHIR resource is \"Condition\"âmay have several columns: claim id, claim line id under Diagnosis/Condition. Issue: There is no mapping for claim id, claim line id in 'Condition' resource for Claim.</p>",
        "id": 167968568,
        "sender_full_name": "Roney A",
        "timestamp": 1560360254
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"221969\">@Roney A</span> 1. The Claim.provider indicates who's submitting the claim.  Additional providers would be part of the careTeam and/or referenced on resources you're claiming for (e.g. encounter)<br>\n2. Can you expand on this?<br>\n3. Each Claim item can point to a particular diagnosis using diagnosisSequence.  So first you list all diagnoses that are relevant to any of the items.  Then each item points to the diagnosis(es) that are relevant for that item.</p>",
        "id": 167970965,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560361905
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"221969\">Roney A</span> 1. The Claim.provider indicates who's submitting the claim.  Additional providers would be part of the careTeam and/or referenced on resources you're claiming for (e.g. encounter)<br>\n2. Can you expand on this?<br>\n3. Each Claim item can point to a particular diagnosis using diagnosisSequence.  So first you list all diagnoses that are relevant to any of the items.  Then each item points to the diagnosis(es) that are relevant for that item.</p>\n</blockquote>\n<p>Thank you Lloyd.</p>\n<p>Explanation on 2) above. Lab result 'value' column comes in different format for different types. Lab result value column will store the results as 'string'.  Lab result 'numeric value' column also comes in different format for different types, although it stores only the numeric/float values in order to perform basic functions like avg, sum, other aggregations, etc. Both columns are required.</p>\n<p>The FHIR \"Observation.value[x]\" cardinality is 0..1. restricts  Observation.value[x] \"FHIR Comments...An observation may have; 1) a single value here, ...\"</p>\n<p>**<em>Unless, we use, FHIR Comments:  for \"both a value and a set of related or component values,... in Observation.component (0..</em>) by Observation.component.code (1:1), by Observation.component.value[x] (0..1) to identify different lab results format to store the result for data aggregation.</p>",
        "id": 167985340,
        "sender_full_name": "Roney A",
        "timestamp": 1560371915
    },
    {
        "content": "<p>I'm still not understanding where you'd have both a string and an encoded result.  If you have an encoded value that says \"5\" \"mg\", what's the need for a string that says \"5 mg\" as well?</p>",
        "id": 167988642,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560373923
    },
    {
        "content": "<blockquote>\n<p>I'm still not understanding where you'd have both a string and an encoded result.  If you have an encoded value that says \"5\" \"mg\", what's the need for a string that says \"5 mg\" as well?</p>\n</blockquote>\n<p>Thank you Lloyd. Yes, we get separate values from source for both the columns. For example:  value = 'Negative' and numeric_value = 17.5. In other words, the need to store both the values separately in FHIR Observation resource is required.</p>",
        "id": 168059858,
        "sender_full_name": "Roney A",
        "timestamp": 1560442411
    },
    {
        "content": "<p>Negative would be an interpretation, not a value.</p>",
        "id": 168060848,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560443152
    },
    {
        "content": "<p>(And thus go in Observation.interpretation)</p>",
        "id": 168060912,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560443168
    },
    {
        "content": "<blockquote>\n<p>Negative would be an interpretation, not a value.</p>\n</blockquote>\n<p>Thank you Lloyd. It makes sense.</p>",
        "id": 168064744,
        "sender_full_name": "Roney A",
        "timestamp": 1560445798
    },
    {
        "content": "<blockquote>\n<p>(And thus go in Observation.interpretation)</p>\n</blockquote>\n<p>Hi Lloyd, The only issue using 'Observation.interpretation' is that it is a normalcy flagâa categorical assessment to determine if the lab result value was low, high or normal. </p>\n<p>This coded representation is not for the actual numeric_value = 17.5. In this case \"Negative\" is the coded representation. Other example, for value column, 'Glucose' and for column numeric_value =  65.90</p>",
        "id": 168071691,
        "sender_full_name": "Roney A",
        "timestamp": 1560450248
    },
    {
        "content": "<p>Glucose would be the Observation.code, not the Observation.value.   Observation.interpretation can convey normalcy, positive vs. negative, change and a few other things (that's why it's 0..*).</p>",
        "id": 168071989,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560450412
    },
    {
        "content": "<blockquote>\n<p>Glucose would be the Observation.code, not the Observation.value.   Observation.interpretation can convey normalcy, positive vs. negative, change and a few other things (that's why it's 0..*).</p>\n</blockquote>\n<p>Thank you Lloyd. I see a workaround to address other definition as well.</p>",
        "id": 168158051,
        "sender_full_name": "Roney A",
        "timestamp": 1560535668
    }
]