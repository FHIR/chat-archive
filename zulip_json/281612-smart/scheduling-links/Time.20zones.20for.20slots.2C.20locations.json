[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"406306\">@Nick Muerdter</span>  wrote:</p>\n<blockquote>\n<p>Time Zones: I don’t see location time zones anywhere in the spec. Technically, you could include timezone offset information in the slot's ISO8601 times, but this isn’t indicated anywhere, and I haven’t seen any providers actually doing this (relying purely on offsets can also get funky around DST). You could determine the time zone of the location from geocoding, but it looks like some providers may also be providing local times but in UTC (eg, 2021-04-21T09:00:00.000Z is returned in the API, but that would be 4AM local time, which doesn’t seem right), so the conversions may not be technically correct if you’re relying on parsing the ISO8601 format. I can dig more into this tomorrow and provide more details about what providers this may affect.</p>\n</blockquote>\n<p>This is a super important issue. I want to focus on \"fine-grained slots\" (at least to start) for this evaluation, because slots like \"all day on May 2\" or \"from May 2 through May 5\" are basically just a hack/stop-gap.</p>",
        "id": 235528150,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619017906
    },
    {
        "content": "<p>The one thing we want to <em>enforce</em> is that slot times are valid FHIR <code>instant</code>s, meaning they specify a precise point in time, including a timezone specifier. This value doesn't necessarily need to be <em>in the timezline of the location</em>, so for instance using UTC times (<code>Z</code> suffix) is okay as long as they're actually correct (e.g., if your Boston clinic opens at 9a ET, and you choose to populate a <code>Slot.start</code> in UTC, then it needs to be for <code>T16:00:00Z</code>).</p>",
        "id": 235528606,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619018024
    },
    {
        "content": "<p>I'm thinking at a minimum, then, we should add clarification that:</p>\n<ol>\n<li>Slot start and end times SHALL include an offset specifier that correctly reflects the time of start</li>\n<li>Slot start and end times SHOULD be expressed az UTC times (<code>Z</code> suffix) or with offset that matches the local timezone</li>\n</ol>",
        "id": 235529007,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619018112
    },
    {
        "content": "<p>This should ensure that slot times are correct, and not expressed with some arbitrary offest. Clients should be able to convert these as needed (e.g., for localized display to a user).</p>",
        "id": 235529344,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619018164
    },
    {
        "content": "<p>Now the second question here from Nick: should locations advertise their local timezones / offsets in some explicit way? I'm not convinced on this, because I think it's easy to \"get wrong\" and I <em>think</em> the main use case for clients would be to show times to a user in <em>the user's local timezone</em> which would always be possible with (1) and (2) above. If a client really needs to translate a time to \"at-location,\" this can be done with public reference data sets.</p>\n<p>^^ I'm willing to be convinced otherwise; this is my attempt at solving the smallest piece of the problem I can to keep everyone un-stuck. Feedback is most welcome!</p>",
        "id": 235529647,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619018278
    },
    {
        "content": "<p>Would it be useful for our validation tools to flag a warning for slot times that \"don't quite seem right\" when converted to local time?   e.g. anything before 7am or after 10pm?  Or configurable when you run the test?</p>",
        "id": 235536513,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1619020823
    },
    {
        "content": "<p>Yeah, I agree that getting the times correct (regardless of whether its returned in UTC or with an offset) is the most important part. So maybe this is just something that needs to be clarified. Or this could also just be an issue with some of the early data that will be corrected later on. But since I've seen what look like incorrect times across multiple producers, it seems like maybe this is something that could use some extra clarification or examples.</p>\n<p>For reference, here are the times in each producer's slots that I've pulled in:</p>\n<ul>\n<li>CVS: <code>\"2021-04-21T09:00:00.000Z\"</code> (doesn't seem right)</li>\n<li>Kroger: <code>\"2021-04-21T08:00:00.000Z\"</code>  (doesn't seem right)</li>\n<li>SMART Samples: <code>\"2021-03-02T14:00:00.000Z\"</code></li>\n<li>Walgreens: <code>\"2021-04-21T00:00:00.000Z\"</code>  (doesn't seem right)</li>\n</ul>",
        "id": 235536853,
        "sender_full_name": "Nick Muerdter",
        "timestamp": 1619020962
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192576\">@Robert Scanlon</span>: Yeah, I think that type of check could be useful. But it looks like some produces are trying to represent full-day availability, so maybe there would need to be an exception for times that are midnight-midnight?</p>",
        "id": 235536999,
        "sender_full_name": "Nick Muerdter",
        "timestamp": 1619021017
    },
    {
        "content": "<blockquote>\n<p>Would it be useful for our validation tools to flag a warning for slot times that \"don't quite seem right\"</p>\n</blockquote>\n<p>Yeah, I think these kinds of heuristics can go a long way.</p>",
        "id": 235537604,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619021246
    },
    {
        "content": "<p>Regarding having the location's local time zone, yes, it could be determined by the API consumers by geocoding the location, so it's not as essential. But I think displaying slot times in the location's local time zone and <em>not</em> the user's local timezone may be preferable, or at least that's what I've settled on. I'm not sure how much of an edge-case this is, but I know a lot of people use Vaccine Spotter to find appointments for people in other time zones (eg, people booking appointments for their parents in another state or volunteers booking appointments for people across the country). In this case, it seems most useful to know when the local time of the appointment is, since if I'm in CA and booking something for someone in NY, it can get confusing if everything I'm seeing looks like the appointments are at 4AM on my local computer, but I would actually need to tell the person I'm booking for that it's at 7AM. So again, maybe this is more of an edge case, but I guess that's why I've seen the location's time zones as useful.</p>",
        "id": 235537999,
        "sender_full_name": "Nick Muerdter",
        "timestamp": 1619021387
    },
    {
        "content": "<blockquote>\n<p>SMART Samples: \"2021-03-02T14:00:00.000Z\"</p>\n</blockquote>\n<p>This one I can speak to: the time was intentional (\"9a ET opening time for a MA-based pharmacy, expressed in UTC\")</p>\n<p><a href=\"https://github.com/smart-on-fhir/smart-scheduling-links/blob/master/generate-examples/src/index.ts#L12\">Source snippet</a></p>\n<div class=\"codehilite\" data-code-language=\"JavaScript\"><pre><span></span><code><span class=\"nx\">OPENING_TIME</span> <span class=\"o\">=</span> <span class=\"s1\">'T09:00-05:00'</span><span class=\"p\">;</span>\n\n<span class=\"kd\">const</span> <span class=\"nx\">openingTime</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"nx\">date</span><span class=\"o\">:</span> <span class=\"nx\">string</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"nx\">string</span> <span class=\"p\">=&gt;</span> <span class=\"p\">{</span>\n  <span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"nb\">Date</span><span class=\"p\">(</span><span class=\"nx\">date</span><span class=\"p\">.</span><span class=\"nx\">slice</span><span class=\"p\">(</span><span class=\"mf\">0</span><span class=\"p\">,</span> <span class=\"mf\">10</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nx\">OPENING_TIME</span><span class=\"p\">).</span><span class=\"nx\">toISOString</span><span class=\"p\">();</span>\n<span class=\"p\">};</span>\n</code></pre></div>",
        "id": 235538543,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619021591
    },
    {
        "content": "<blockquote>\n<p>But I think displaying slot times in the location's local time zone and not the user's local timezone may be preferable, or at least that's what I've settled on.</p>\n</blockquote>\n<p>That's fair; I'm thinking that public data sets should let you do this even if the FHIR <code>$bulk-export</code> data don't include any specific details here. I will raise the question in <a class=\"stream-topic\" data-stream-id=\"179166\" href=\"/#narrow/stream/179166-implementers/topic/Time.20zone.20for.20locations\">#implementers &gt; Time zone for locations</a>  though to see if there's any other common advice.</p>",
        "id": 235538785,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619021665
    },
    {
        "content": "<p>For all the \"doesn't seem right\" examples <span class=\"user-mention\" data-user-id=\"406306\">@Nick Muerdter</span>, I agree... but they're being used in \"coarse-grained\" slots that don't actually specify what time of day the appointments are available, so I'm not really sure how to fix them. The key point for me is that when publishers get around to posting fine-grained slots, they'll need to populate timestamps with accurate offsets.</p>",
        "id": 235539362,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619021928
    },
    {
        "content": "<p>Added <a href=\"https://github.com/smart-on-fhir/smart-scheduling-links/pull/30\">https://github.com/smart-on-fhir/smart-scheduling-links/pull/30</a> -- happy to take additional suggestions before we merge.</p>",
        "id": 235540065,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619022204
    },
    {
        "content": "<p>It might be important to get offsets right enough for course grained slots to at least have it be the right day when converted to the local timezone.</p>",
        "id": 235540129,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1619022232
    },
    {
        "content": "<p>Now <em>that's</em> a bit of pragmatism I could get behind ;-)</p>",
        "id": 235540572,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619022415
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span> given how Epic is populating \"midnight\" slots? (tried to check but I'm getting no locations or slots from <a href=\"https://fhir.epic.com/interconnect-fhir-oauth/api/epic/2021/Scheduling/Utility/covid-vaccine-availability/$bulk-publish\">https://fhir.epic.com/interconnect-fhir-oauth/api/epic/2021/Scheduling/Utility/covid-vaccine-availability/$bulk-publish</a> right now)</p>",
        "id": 235540842,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619022527
    },
    {
        "content": "<p>Having <code>2021-04-21T00:00:00.000Z</code> could really mean 6PM local time on 4-20, but it is suspicious.  Especially if they are all listed as that.</p>",
        "id": 235540903,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1619022552
    },
    {
        "content": "<p>I wish these coarse-grained slots could just express a date instead of an instant, but the FHIR model requires an instant. But coarse-grained slots are a hack.</p>",
        "id": 235541110,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619022625
    },
    {
        "content": "<p>Yup, I find it a little surprising that the base resource constrains this down to an instant</p>",
        "id": 235541204,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1619022660
    },
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"192576\">@Robert Scanlon</span> , how would you precisely express this constraint?</p>",
        "id": 235541221,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619022666
    },
    {
        "content": "<p>Yeah this is tough -- I honestly don't have a great answer. I do like the language in there about operating hours at most, and then it is just a matter of some of these probably being technically wrong right now (and I'm not sure how adding more constraints on top of this would help).  It would be nice if even getting the intended date wrong was 'even more wrong', but you could imagine situations where there is a slot from 11:45PM - 12:15AM local, so coming up with any hard rules is tough.</p>",
        "id": 235545107,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1619024196
    },
    {
        "content": "<p>OK -- well I'm going to treat my PR as \"strictly better\" than what we have now, even if there are still some known gaps.</p>",
        "id": 235545896,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619024518
    },
    {
        "content": "<p>Merged <a href=\"https://github.com/smart-on-fhir/smart-scheduling-links/pull/30\">https://github.com/smart-on-fhir/smart-scheduling-links/pull/30</a> -- thanks for the review + suggestion <span class=\"user-mention\" data-user-id=\"406306\">@Nick Muerdter</span> ; I incorporated your example.</p>",
        "id": 235546927,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619024932
    }
]