[
    {
        "content": "<p>Don't want to miss out here, for completeness <span class=\"user-mention\" data-user-id=\"192576\">@Robert Scanlon</span>  <span class=\"user-mention\" data-user-id=\"191647\">@Michael O'Keefe</span>  :-) I think y'all are primarily in \"rapid response\" mode, but if there are specific plans for this week that you want to highlight here, don't hesitate.</p>",
        "id": 234197762,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1618248316
    },
    {
        "content": "<p>Just made updates to the sample data  <a href=\"https://raw.githubusercontent.com/smart-on-fhir/smart-scheduling-links/master/examples/$bulk-publish\">https://raw.githubusercontent.com/smart-on-fhir/smart-scheduling-links/master/examples/$bulk-publish</a>, based on helpful Inferno results!  When I re-run the tool I'm getting Inferno results with:</p>\n<blockquote>\n<p>Fatal Error: undefined local variable or method `extension' for #&lt;Inferno::Sequence::SmartSchedulingLinksBasicSequence:0x000055dc9b18eb60&gt; Did you mean? extend</p>\n</blockquote>\n<p>I may be doing something wrong, but I think Inferno is <em>also</em> doing something wrong here ;-)</p>\n<p><span class=\"user-mention\" data-user-id=\"191647\">@Michael O'Keefe</span>  <span class=\"user-mention\" data-user-id=\"192576\">@Robert Scanlon</span></p>",
        "id": 234381707,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1618340314
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> That does seem like it may be an Inferno-side issue. I'll take a look!</p>",
        "id": 234381980,
        "sender_full_name": "Michael O'Keefe",
        "timestamp": 1618340419
    },
    {
        "content": "<p>The thing I was doing wrong (probably) was mis-spelling \"phone\" as \"hhone\"</p>\n<div class=\"codehilite\"><pre><span></span><code>{&quot;url&quot;:&quot;http://fhir-registry.smarthealthit.org/StructureDefinition/booking-hhone&quot;,&quot;valueString&quot;:&quot;000-000-0000&quot;},\n</code></pre></div>\n\n<p>... and fixed.</p>",
        "id": 234381998,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1618340426
    },
    {
        "content": "<p>Yeah, this variable name is wrong: <a href=\"https://github.com/onc-healthit/inferno/blob/8ef8a5e757a65947061fd14f87beed1b7bd2b136/lib/modules/smart_scheduling_links/smart_scheduling_links_basic_sequence.rb#L785\">https://github.com/onc-healthit/inferno/blob/8ef8a5e757a65947061fd14f87beed1b7bd2b136/lib/modules/smart_scheduling_links/smart_scheduling_links_basic_sequence.rb#L785</a></p>",
        "id": 234382730,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1618340709
    },
    {
        "content": "<p>Yup, just found the same thing</p>",
        "id": 234382750,
        "sender_full_name": "Michael O'Keefe",
        "timestamp": 1618340717
    },
    {
        "content": "<p>Is this covered as a warning in profile validation now <span class=\"user-mention\" data-user-id=\"191647\">@Michael O'Keefe</span>?  We may be able to just remove this code.  Less code = fewer potential bugs.</p>",
        "id": 234383759,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1618341040
    },
    {
        "content": "<p>Yeah, the extensions/profiles should catch this as a part of the structureDefinitions we built using FSH</p>",
        "id": 234384031,
        "sender_full_name": "Michael O'Keefe",
        "timestamp": 1618341144
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> We updated our tests to fix that bug, and now yours pass.  Though there is one warning that comes through still, not sure if that is an issue with our invariant or if that is ok.</p>",
        "id": 234672322,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1618492509
    },
    {
        "content": "<p>Also, <span class=\"user-mention\" data-user-id=\"218703\">@Nick Robison</span>, <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> -- we can trigger Inferno to run tests against endpoints that are published in Github when PRs are opened (or any time that GitHub workflows support). I put together a quick, messy PR as a proof of concept here: <a href=\"https://github.com/arscan/smart-scheduling-links/pull/1\">https://github.com/arscan/smart-scheduling-links/pull/1</a>. If it is worth exploring further I can clean it up and try out any other ideas that people might think is helpful.  FYI <span class=\"user-mention\" data-user-id=\"191647\">@Michael O'Keefe</span></p>",
        "id": 234672732,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1618492659
    },
    {
        "content": "<p>Very cool, re: GH workflow! Have you thought about encapsulating this as a GH Action so it would be easier for others to add up to their own projects without having to include as much boilerplate?</p>",
        "id": 234675546,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1618493710
    },
    {
        "content": "<p>Apologies for just dropping in here, but wanted to make sure this is the right URL to use the validor at: <a href=\"https://infernotest.healthit.gov/community/\">https://infernotest.healthit.gov/community/</a></p>\n<p>I keep losing that link and then spending 10 minutes trying to find it again, since it’s not directly accessible from anywhere on <a href=\"https://inferno.healthit.gov\">https://inferno.healthit.gov</a></p>",
        "id": 235403229,
        "sender_full_name": "Rob Brackett",
        "timestamp": 1618947776
    },
    {
        "content": "<p>That's the right link, thanks for dropping it here! (For me, I have our <a href=\"https://docs.google.com/spreadsheets/d/1Fh0zwCjKYh4D-Mp1k5uxzINh6GG0yI1ezko49VaJV2c/edit#gid=0\">Connectathon Spreadsheet</a> open as my source of truth during the event.)</p>",
        "id": 235404033,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1618948078
    },
    {
        "content": "<p>I know that's not very logical / discoverable, we'll see if we can have a setup that makes a little more sense in the future for these draft standards.</p>",
        "id": 235404185,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1618948134
    },
    {
        "content": "<p>No worries! It’s mainly that I keep forgetting it’s in the sheet, and that seems to be the last place I look for some reason.</p>",
        "id": 235417485,
        "sender_full_name": "Rob Brackett",
        "timestamp": 1618953182
    },
    {
        "content": "<p>I just pushed up an update to <a href=\"https://infernotest.healthit.gov/community\">https://infernotest.healthit.gov/community</a>, which incorporates a few newer rules from the <a href=\"https://github.com/inferno-community/fsh-smart-scheduling-links\">FHIR profiles</a> we put together, removes some redundant tests, and adds a few more checks for things that we missed before (e.g. improperly formatted ids).</p>",
        "id": 235612002,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1619059322
    },
    {
        "content": "<p>Most of the endpoints I've seen have at least something (technically) structurally incorrect with the data being sent back.  Most issues are very minor (e.g. using a String instead of a Number for an integer element), but worth fixing.</p>",
        "id": 235612271,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1619059607
    },
    {
        "content": "<p>For sure! Can you add an \"Inferno Feedback\" column to the spreadsheet with these issues perhaps <span class=\"user-mention\" data-user-id=\"192576\">@Robert Scanlon</span> ?</p>",
        "id": 235659472,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619090912
    },
    {
        "content": "<p>All set, we added another column with issues we found, as of last night / this morning.  Happy to help anyone that has any questions.</p>",
        "id": 235680844,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1619099546
    },
    {
        "content": "<p>There are various flavors of 'warnings' there, so maybe I should downgrade the less important ones to 'informational'.  I think it is a good idea to really distinguish the ones that are important enough to warrant some work to get into the feed as true warnings, and downgrade ones that are less important or could be derived from other sources (e.g. position if you have an address)</p>",
        "id": 235682163,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1619099949
    },
    {
        "content": "<p>I had missed this before, but the definition for <code>id</code> in SMART Scheduling Links doesn’t match FHIR. Specifically, SMART SL allows underscores but not dashes, and FHIR allows dashes but not underscores. Inferno is using a regex that matches the FHIR definition.</p>\n<p>(I just noticed this because I’m advising a team helping PrepMod to implement the standard, and their IDs use <code>_</code>. The validator yelled at me.)</p>",
        "id": 242398748,
        "sender_full_name": "Rob Brackett",
        "timestamp": 1623443315
    },
    {
        "content": "<p>Not sure if that’s a validator problem or if the spec should be changed (kinda seems like the latter, but worried other implementers may be using underscores and it’s hard to change now).</p>",
        "id": 242398838,
        "sender_full_name": "Rob Brackett",
        "timestamp": 1623443369
    },
    {
        "content": "<p>The validator is also reporting <code>Resource type \"NilClass\" at line \"1\" does not match type defined in output \"Slot\")</code>, but I don’t see anything that looks like we might have serialized out that string somewhere. Guessing this is happening because the slot’s schedule ID has an underscore, and somewhere in Inferno it’s resolving to <code>nil</code>. If that’s the case, there ought to be a better error to display.</p>",
        "id": 242399246,
        "sender_full_name": "Rob Brackett",
        "timestamp": 1623443623
    },
    {
        "content": "<p>URL under test, for reference: <a href=\"https://test-prepmod.doh.wa.gov/api/smart-scheduling-links/$bulk-publish\">https://test-prepmod.doh.wa.gov/api/smart-scheduling-links/$bulk-publish</a></p>",
        "id": 242399312,
        "sender_full_name": "Rob Brackett",
        "timestamp": 1623443647
    },
    {
        "content": "<blockquote>\n<p>I had missed this before, but the definition for id in SMART Scheduling Links doesn’t match FHIR. Specifically, SMART SL allows underscores but not dashes, and FHIR allows dashes but not underscores. Inferno is using a regex that matches the FHIR definition.</p>\n</blockquote>\n<p>Whoa, good catch!</p>",
        "id": 242399452,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1623443758
    },
    {
        "content": "<p>This is a spec bug for scheduling links. That's the challenge of being \"helpful\" by surfacing relevant details from the FHIR spec --- suddenly, you've got a surface area for errors/mismatches.</p>",
        "id": 242399608,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1623443831
    },
    {
        "content": "<p>Fixing in <a href=\"https://github.com/smart-on-fhir/smart-scheduling-links/pull/44\">https://github.com/smart-on-fhir/smart-scheduling-links/pull/44</a></p>",
        "id": 242399610,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1623443832
    },
    {
        "content": "<p>Yeah this looks like a typo in the SMART SL spec?  Requiring something that isn't valid FHIR would be problematic.</p>",
        "id": 242399611,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1623443833
    },
    {
        "content": "<p>yep.</p>",
        "id": 242399619,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1623443838
    },
    {
        "content": "<p>If someone gives me a quick review of the PR, will merge.</p>",
        "id": 242399652,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1623443858
    },
    {
        "content": "<p>Didn't see any other spots in the spec where the format of the id was described, so gave it an approval.</p>",
        "id": 242400150,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1623444116
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"398591\">@Rob Brackett</span> the Slot resources are missing the \"resourceType\" field, which is why our unhelpful error popped up.  We haven't run into that specific issue before.</p>",
        "id": 242400486,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1623444297
    },
    {
        "content": "<p>Ahhhhhh, so obvious I didn’t see it at all. D'oh!</p>",
        "id": 242400531,
        "sender_full_name": "Rob Brackett",
        "timestamp": 1623444319
    },
    {
        "content": "<p>Was looking at Rite Aid's latest and noticed that the validator doesn’t seem to be validating the format of <code>transactionTime</code> in the manifest file. Rite Aid is outputting valid ISO 8601 (I think?), but it’s not a valid FHIR instant since it doesn't include a TZ offset at uses a space instead of <code>T</code> to delimit date and time: <code>\"2021-06-22 13:51\"</code></p>",
        "id": 243555366,
        "sender_full_name": "Rob Brackett",
        "timestamp": 1624384888
    },
    {
        "content": "<p>Also wondering if it might be useful to sanity-check things like the capitalization of extensions. Technically <code>state</code> and <code>State</code> are different extensions, but it seems reasonable to error if the only difference from a known extensions is capitalization: <a href=\"#narrow/stream/281612-smart.2Fscheduling-links/topic/Publisher.3A.20Rite-Aid/near/243554928\">https://chat.fhir.org/#narrow/stream/281612-smart.2Fscheduling-links/topic/Publisher.3A.20Rite-Aid/near/243554928</a></p>",
        "id": 243555794,
        "sender_full_name": "Rob Brackett",
        "timestamp": 1624385055
    },
    {
        "content": "<p>Yeah, at the least it should be a warning if it is a common mistake.  Might be good to make it an error even if it technically isn't \"non-conformant\" syntactically, because it is very clear that this was done by mistake and they didn't intend to define a new extension.</p>",
        "id": 243850753,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1624571091
    },
    {
        "content": "<p>I just deployed an update that now checks that the transactionTime is consistent with FHIR's <code>instant</code> type (iso8601 + timezone offset or <code>Z</code>)</p>",
        "id": 243993624,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1624680769
    }
]