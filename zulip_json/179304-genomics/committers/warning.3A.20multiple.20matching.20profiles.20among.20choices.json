[
    {
        "content": "<p>Interesting error (strength=\"warning\") we are currently getting on Observation.derivedFrom instances in examples:</p>\n<p><code>Found multiple matching profiles among choices: ; [http://hl7.org/fhir/uv/genomics-reporting/StructureDefinition/obs-haplotype, http://hl7.org/fhir/uv/genomics-reporting/StructureDefinition/obs-variant]</code></p>\n<p>In particular, Haplotype can be derived from either a Haplotype or a Variant, and the validator seems to get confused because they are both Observations. That is, even if we are declaring the \"derivedFrom\" resource as <code>obs-variant</code>, the validator seems to be picking haplotype and validating it against that structureDef.--We later get the error,</p>\n<p><code>Expected fixed CodeableConcept not found for system: http://loinc.org code: 84414-2 display: null - Issues: [ValidationMessage[level=ERROR,type=VALUE,location=Bundle.entry[9].resource.code.coding.code,message=Value is '69548-6' but must be '84414-2']]</code></p>\n<p>Where the haplotype is 84414-2 and variant is 69548-6.</p>\n<p>I saw another thread about this, will try and link here/follow-up</p>",
        "id": 175559597,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1568314535
    },
    {
        "content": "<p>Similar errors appear for genotypes which can be derived from either haplotypes or variants</p>",
        "id": 175559678,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1568314583
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"196553\">@James Jones</span> -- just checking on this, as we are still getting these warnings.  Did you ever find another thread on this topic?</p>",
        "id": 176680287,
        "sender_full_name": "Kevin Power",
        "timestamp": 1569520414
    },
    {
        "content": "<p>This is \"working as intended\" due to the other errors</p>",
        "id": 176680943,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1569520822
    },
    {
        "content": "<p>Heh heh, ok.  Which other errors, or do you know?</p>",
        "id": 176681115,
        "sender_full_name": "Kevin Power",
        "timestamp": 1569520926
    },
    {
        "content": "<p>The validator realizes the reference could be multiple profiles so test it against all options. If one passes, no errors or warning is displayed. If all fail (current case due to LOINC value set errors) then the warning and relevant errors are displayed.</p>",
        "id": 176681117,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1569520930
    },
    {
        "content": "<p>From Lloyd, Q4 Wednesday, tried to get that into the notes</p>",
        "id": 176681183,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1569520979
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>Matching multiple error class should go away after Tx server fix\n</pre></div>\n\n\n<p>Bet that is it?  I was sort of wondering what that meant, but now it makes perfect sense.  <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span>  Thanks <span class=\"user-mention\" data-user-id=\"196553\">@James Jones</span></p>",
        "id": 176682407,
        "sender_full_name": "Kevin Power",
        "timestamp": 1569521732
    },
    {
        "content": "<p>Think we may have to declare this differently on the spreadsheets. Getting errors for the other profile types even when the derivedFrom resource does validate against one of the matched profiles.</p>",
        "id": 177394043,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1570242462
    },
    {
        "content": "<p>(validates with warnings and not errors, that is)</p>",
        "id": 177394084,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1570242501
    },
    {
        "content": "<p>Have you tried anything different?</p>",
        "id": 177394783,
        "sender_full_name": "Kevin Power",
        "timestamp": 1570244120
    },
    {
        "content": "<p>Well, I tried just having it say \"Observation|MolecularSequence\" and putting the relevant profiles in the definition ... that worked</p>",
        "id": 177394889,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1570244380
    },
    {
        "content": "<p>we may need to mirror how genomics-report and grouper do their references rather on individual lines rather than using | in one line</p>",
        "id": 177394938,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1570244445
    },
    {
        "content": "<p>Whatever works <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 177394960,
        "sender_full_name": "Kevin Power",
        "timestamp": 1570244518
    },
    {
        "content": "<p>Well, not forcing the validator to (very strictly) check the referenced profiles match is one way that works. If we want to mirror the slicing on hasMember for grouper or result for genomic-report we have some issue as most of these derivedFrom references can also refer to a MolecularSequence, which fails to have a code and can't be discriminated under the resolve().code.@pattern</p>",
        "id": 177396177,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1570247043
    },
    {
        "content": "<p>Sorry. I am ignorant. Why would MolecularSequence, a Resource, need a code?</p>",
        "id": 177397584,
        "sender_full_name": "Bret H",
        "timestamp": 1570250129
    },
    {
        "content": "<p>Slicing derivedFrom on resolve().code requires all the profiles we list in the slice to have codes. There's probably a better solution to define the references, and I'm not sure we need to slice here, especially on code, but the previous approach causes errors</p>",
        "id": 177412434,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1570278761
    },
    {
        "content": "<p>Maybe <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> has a recommendation?</p>",
        "id": 177415192,
        "sender_full_name": "Kevin Power",
        "timestamp": 1570283412
    },
    {
        "content": "<p>You could slice by type, then by code</p>",
        "id": 177428578,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1570304970
    },
    {
        "content": "<p>So it would “short circuit” and not look for code on MolecularSequence since it is a different type?</p>",
        "id": 177431716,
        "sender_full_name": "Kevin Power",
        "timestamp": 1570310277
    },
    {
        "content": "<p>I <em>think</em> it would only look for code if there is more than one slice for the same type.  That's what <em>should</em> happen</p>",
        "id": 177433616,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1570313791
    },
    {
        "content": "<p>makes sense to me now. I think we'd need to to do type first then by code.</p>",
        "id": 177441441,
        "sender_full_name": "Bret H",
        "timestamp": 1570330243
    },
    {
        "content": "<p>Ok I can try this Monday unless someone else beats me to it.</p>",
        "id": 177460600,
        "sender_full_name": "Kevin Power",
        "timestamp": 1570366936
    },
    {
        "content": "<p>We talked about it on the call, but to update here:  I did try a variety of approaches, and none have worked yet.  I tried defining the discriminator like this in the spreadsheet (I am playing around with Genotype):</p>\n<p>resolve(), resolve().code.@pattern</p>\n<p>Then I list variant, haplotype, and MolecularSequence as different slices.  It builds fine, and the profile page looks right, but the examples do not validate appropriately.  We get the error:</p>\n<p>Unable to resolve discriminator in definitions: code</p>\n<p>It just seems like having MolecularSequence in there causes problems.  For a test, I took it out, and the error above goes away.  So, it doesn't seem like it short cuts, and still looks for a 'code' on MolecularSequence.  <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  says he has seen this work before, so I am just not doing something right.  </p>\n<p>Any feedback from anyone is welcome at this point.</p>",
        "id": 177535588,
        "sender_full_name": "Kevin Power",
        "timestamp": 1570465342
    },
    {
        "content": "<p>Well crap - never mind.  We don't need to specify MolecularSequence, because it is listed in the Observation profile for derivedFrom already (meaning any Observation can already be derivedFrom() a MolecularSequence.  When I took it out before, I thought I was seeing a different error come up, but turns out I was wrong.</p>",
        "id": 177537691,
        "sender_full_name": "Kevin Power",
        "timestamp": 1570466900
    },
    {
        "content": "<p>If we don't list it on the profile then aren't we constraining the choice of references to just the Observations?</p>",
        "id": 177538139,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1570467227
    },
    {
        "content": "<p>I thought the same thing, and I thought I say an error that said that.  However, it doesn't seem that way.  We have examples (CG-IG-HLA-FullBundle-01.xml) that deriveFrom() MolecularSequence, and it seems to validate just find if I take it out.</p>",
        "id": 177538309,
        "sender_full_name": "Kevin Power",
        "timestamp": 1570467325
    },
    {
        "content": "<p>Not even a suppressed error like we saw on call today for implications?</p>",
        "id": 177538939,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1570467703
    },
    {
        "content": "<p>Ahhh, OK.  It turns into a 'informational' message:</p>\n<p>Bundle/CG-IG-HLA-FullBundle-01: Bundle.entry[9].resource.derivedFrom[0] information This element does not match any known slice for the profile <a href=\"http://hl7.org/fhir/uv/genomics-reporting/StructureDefinition/haplotype\" target=\"_blank\" title=\"http://hl7.org/fhir/uv/genomics-reporting/StructureDefinition/haplotype\">http://hl7.org/fhir/uv/genomics-reporting/StructureDefinition/haplotype</a></p>",
        "id": 177539095,
        "sender_full_name": "Kevin Power",
        "timestamp": 1570467834
    },
    {
        "content": "<p>Turns out that example has a Haplotype, not a Genotype.  And since I was only playing around with Genotype, I didn't see this informational message until I applied my \"fix\" to all of our profiles.</p>",
        "id": 177539182,
        "sender_full_name": "Kevin Power",
        "timestamp": 1570467875
    },
    {
        "content": "<p>This still feels better to me, at least for now?</p>",
        "id": 177539235,
        "sender_full_name": "Kevin Power",
        "timestamp": 1570467915
    },
    {
        "content": "<p>I will push up my change and let everyone take a look (if you can make heads or tails of the Diff) ((yet another way doing this via spreadsheets is tough))</p>",
        "id": 177539390,
        "sender_full_name": "Kevin Power",
        "timestamp": 1570468042
    },
    {
        "content": "<p>I'll review it today for sure</p>",
        "id": 177541849,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1570469760
    },
    {
        "content": "<p>Just tested putting a resource in derivedFrom() (Patient in this case) that is NOT valid at all, and got an error.  Not a surprise, but that does indicate the validator realizes that a derivedFrom() to MolecularSequence is 'valid' - but since we defined slices, it is just telling us it doesn't match one that we defined.</p>",
        "id": 177544289,
        "sender_full_name": "Kevin Power",
        "timestamp": 1570471412
    },
    {
        "content": "<p>Changes pushed up.</p>",
        "id": 177545461,
        "sender_full_name": "Kevin Power",
        "timestamp": 1570472293
    },
    {
        "content": "<p>Also, I had forgotten about the 'suppressed' warnings that we discussed today on the call.  I just removed all of the warnings/info messages from the src\\ignoreWarnings.txt file, and rebuilt.  Did not add any new error, warning, or info messages to the QA that I can see.</p>",
        "id": 177553055,
        "sender_full_name": "Kevin Power",
        "timestamp": 1570477636
    },
    {
        "content": "<p>Should we consider adding new 'ignoreWarnings' here for the items identified as ok?</p>",
        "id": 177555431,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1570479054
    },
    {
        "content": "<p>I figure we will see if that needs to happen during publishing</p>",
        "id": 177555812,
        "sender_full_name": "Kevin Power",
        "timestamp": 1570479297
    },
    {
        "content": "<p>change looks good to me. Can consider better guidance in the future but getting a warning from someone sending a Molecular sequence rather than one of the profiles we defined in the IG seems like pretty good practice for now.</p>",
        "id": 177562357,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1570483455
    },
    {
        "content": "<p>sorry: what's the text for the warning? Best practice warning? thanks!</p>",
        "id": 177638416,
        "sender_full_name": "Bret H",
        "timestamp": 1570555531
    },
    {
        "content": "<p>Bundle/CG-IG-HLA-FullBundle-01: Bundle.entry[9].resource.derivedFrom[0] information This element does not match any known slice for the profile <a href=\"http://hl7.org/fhir/uv/genomics-reporting/StructureDefinition/haplotype\" target=\"_blank\" title=\"http://hl7.org/fhir/uv/genomics-reporting/StructureDefinition/haplotype\">http://hl7.org/fhir/uv/genomics-reporting/StructureDefinition/haplotype</a></p>",
        "id": 177638816,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1570555757
    },
    {
        "content": "<p>it's provided as 'information' severity</p>",
        "id": 177638915,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1570555803
    },
    {
        "content": "<p>okay. Thanks. I think I got it.  Currently, when Molecular Seq is used you get the text you sent. Right? This is going to drive developers nuts. But I favor a planned technical correction - it needs to not error if Molec Seq is appropriate.  If possible keep working at it. I wish I was more helpful and had a solution. You all have done marvelous with the problems to date.</p>",
        "id": 177639205,
        "sender_full_name": "Bret H",
        "timestamp": 1570555994
    },
    {
        "content": "<p>Maybe now is the point at which to abandon the Spreadsheet as the point of truth and edit the profile directly? But that is in your hands, cause you all are using it.</p>",
        "id": 177639226,
        "sender_full_name": "Bret H",
        "timestamp": 1570556023
    },
    {
        "content": "<p>We need to evaluate the new IG template coming out soon, and move in that direction.  Will have to see where that leads us in editing the profiles (XML, spreadsheets, online tool, etc ...)</p>",
        "id": 177639673,
        "sender_full_name": "Kevin Power",
        "timestamp": 1570556369
    },
    {
        "content": "<p>Is there anything new on this? I'm trying to profile Haplotype to add derivedFrom to reference a profile of MolecularSequence, and am getting similar errors (no code). Any idea how I should set the discriminator path for this slice?</p>",
        "id": 193534596,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586487986
    },
    {
        "content": "<p>Even if I set the discriminator path to resolve().type in my profile of Haplotype, I keep getting a build  error</p>\n<div class=\"codehilite\"><pre><span></span>Slicing rules on differential (pattern:resolve().type (/open) &quot;reference HLA molecular sequence&quot;) do not match those on base (pattern:resolve().code (/open)) - disciminator @ Observation.derivedFrom (http://hl7.org/fhir/uv/genomics-reporting/StructureDefinition/haplotype)\n</pre></div>\n\n\n<p>So it looks like it's first getting the discriminator from Haplotype and that interfers with the one I'm creating in my profile of Haplotype.</p>",
        "id": 193535106,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586488938
    },
    {
        "content": "<p>Error? Or informational warning</p>",
        "id": 193535125,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1586489026
    },
    {
        "content": "<p>build stops with a stack dump</p>",
        "id": 193535191,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586489088
    },
    {
        "content": "<p>If I use resolve().code, it builds fine, but I get an error when I try to add a slice for a profile of MolecularSequence (makes sense, MS doesn't have a code). If I change it to resolve().type, then I get a stack dump during the build.</p>",
        "id": 193535458,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586489567
    },
    {
        "content": "<p>I just asked about this in the shorthand stream<br>\n<a href=\"#narrow/stream/215610-shorthand/topic/changing.20derivedFrom.20path.20from.20parent\" title=\"#narrow/stream/215610-shorthand/topic/changing.20derivedFrom.20path.20from.20parent\">https://chat.fhir.org/#narrow/stream/215610-shorthand/topic/changing.20derivedFrom.20path.20from.20parent</a></p>",
        "id": 193574925,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586529141
    },
    {
        "content": "<p>Good luck <span class=\"user-mention\" data-user-id=\"191916\">@ Bob Milius</span> - I remember beating my head on a wall for a long time on this one.  I hope you can find a good answer <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 193576193,
        "sender_full_name": "Kevin Power",
        "timestamp": 1586529898
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191916\">@ Bob Milius</span>  to me this sounds like the shorthand framework overwrites the original discriminator somehow (or this is a Validator/Publisher bug). Could you share the created profile?</p>",
        "id": 193599972,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586542272
    },
    {
        "content": "<p>I think I've found a solution. I saw this thread <br>\n<a href=\"#narrow/stream/179177-conformance/topic/Validator.20and.20slicing\" title=\"#narrow/stream/179177-conformance/topic/Validator.20and.20slicing\">https://chat.fhir.org/#narrow/stream/179177-conformance/topic/Validator.20and.20slicing</a><br>\nand Rob Hausam suggested this</p>\n<div class=\"codehilite\"><pre><span></span>&lt;slicing&gt;\n    &lt;discriminator&gt;\n        &lt;type value=&quot;profile&quot;/&gt;\n        &lt;path value=&quot;$this.resolve()&quot;/&gt;\n    &lt;/discriminator&gt;\n    &lt;rules value=&quot;open&quot;/&gt;\n&lt;/slicing&gt;\n</pre></div>\n\n\n<p>I tested this and it behaved as I wanted. So, would it be possible to create a technical correction of our IG to change the derivedFrom discriminator type and path to be like this? Then I could create profiles of the CG profiles and have derivedFrom slices for references other than Observation.</p>",
        "id": 193641441,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586578701
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> I'll post SDs later this weekend.</p>",
        "id": 193641527,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586578854
    },
    {
        "content": "<p>This is reminding me that I need to study up on slicing again <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>\n<p>Did you try Grahame’s suggestion on IG creation channel?</p>\n<p>discriminator = type + pattern</p>",
        "id": 193657244,
        "sender_full_name": "Kevin Power",
        "timestamp": 1586607034
    },
    {
        "content": "<p>I didn't see that. I'm not sure what that looks like in a SD</p>",
        "id": 193658497,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586608827
    },
    {
        "content": "<p>I tried setting </p>\n<div class=\"codehilite\"><pre><span></span>&lt;slicing&gt;\n    &lt;discriminator&gt;\n        &lt;type value=&quot;pattern&quot;/&gt;\n        &lt;path value=&quot;type&quot;/&gt;\n    &lt;/discriminator&gt;\n    &lt;rules value=&quot;open&quot;/&gt;\n&lt;/slicing&gt;\n</pre></div>\n\n\n<p>to create a named slice of derivedFrom in a  profile of Observation. But I get an error in the qa.html when it validates an example:</p>\n<blockquote>\n<p>Could not match discriminator ([type]) for slice Observation.derivedFrom:hla-sequence in profile <a href=\"http://example.org/ig/test/StructureDefinition/hla-allele3\" title=\"http://example.org/ig/test/StructureDefinition/hla-allele3\">http://example.org/ig/test/StructureDefinition/hla-allele3</a> - the discriminator [type] does not have fixed value, binding or existence assertions</p>\n</blockquote>\n<p>Rob's suggestion worked for me, and didn't limit the kinds of profiles I can create slices for.</p>",
        "id": 193659563,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586610305
    },
    {
        "content": "<p>I uploaded a test ig to <a href=\"http://fhir.b12x.org/ig/test/\" title=\"http://fhir.b12x.org/ig/test/\">http://fhir.b12x.org/ig/test/</a><br>\nThere are no errors or warning in the <a href=\"http://fhir.b12x.org/ig/test/qa.html\" title=\"http://fhir.b12x.org/ig/test/qa.html\">qa.html</a> though there are information msgs re some of the examples.<br>\nTake a look at the snapshot of <a href=\"http://fhir.b12x.org/ig/test/StructureDefinition-hla-allele-obs2.html\" title=\"http://fhir.b12x.org/ig/test/StructureDefinition-hla-allele-obs2.html\">hla-allele-obs2 profile</a>. It contains two <code>derivedFrom</code> named slices, one for a profile of Observation, and the other for a profile for MolecularSequence. The former slice (named <code>hla-allele</code>) was created in this profile, and the latter slice (named <code>hla-sequence</code>) was created in the <a href=\"http://fhir.b12x.org/ig/test/StructureDefinition-hla-allele-obs.html\" title=\"http://fhir.b12x.org/ig/test/StructureDefinition-hla-allele-obs.html\">parent of this profile</a>. <br>\nYou can also see <a href=\"http://fhir.b12x.org/ig/test/artifacts.html#example-example-instances\" title=\"http://fhir.b12x.org/ig/test/artifacts.html#example-example-instances\">examples of each profile in the IG</a>.</p>",
        "id": 193664757,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586617872
    },
    {
        "content": "<p>finally got some time for this:<br>\nDiscriminating by profile is an anti pattern and quite dangerous. The problem here is that slicing on profiles relies on declaring the profile in meta. In our use-cases we can't assume that everyone fills meta.profile. (Our lab e.g. doesn't atm) but still complies to our IG.</p>",
        "id": 193877341,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586860182
    },
    {
        "content": "<p>So i would advise strongly against the usage of a profile discriminator.</p>",
        "id": 193877407,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586860206
    },
    {
        "content": "<p>It should be possible to add another discriminator in your derived profile. I assume this is also could be a FSH issue. Do you have a snapshot of a your haplotype profile which adds a second discriminator <code>type</code>?</p>",
        "id": 193877528,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586860291
    },
    {
        "content": "<p>when I add add a second discriminator that isn't a subset of code, then the igpublisher crashes with a stack dump.<br>\nI asked the question on the shorthand stream. Mark Kramer doesn't think it's possible.<br>\n<a href=\"#narrow/stream/215610-shorthand/topic/changing.20derivedFrom.20path.20from.20parent\" title=\"#narrow/stream/215610-shorthand/topic/changing.20derivedFrom.20path.20from.20parent\">https://chat.fhir.org/#narrow/stream/215610-shorthand/topic/changing.20derivedFrom.20path.20from.20parent</a></p>",
        "id": 193898377,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586871834
    },
    {
        "content": "<p>Here's the publisher crash error I get:</p>\n<blockquote>\n<p>Caused by: org.hl7.fhir.exceptions.DefinitionException: Slicing rules on differential (pattern:type (/open) \"reference HLA molecular sequence\") do not match those on base (pattern:resolve().code (/open)) - disciminator @ Observation.derivedFrom (<a href=\"http://hl7.org/fhir/uv/genomics-reporting/StructureDefinition/haplotype\" title=\"http://hl7.org/fhir/uv/genomics-reporting/StructureDefinition/haplotype\">http://hl7.org/fhir/uv/genomics-reporting/StructureDefinition/haplotype</a>)</p>\n</blockquote>\n<p>Here's the StructureDefinition that caused it:</p>\n<div class=\"codehilite\"><pre><span></span>{\n  &quot;resourceType&quot;: &quot;StructureDefinition&quot;,\n  &quot;id&quot;: &quot;hla-allele-haplotype&quot;,\n  &quot;url&quot;: &quot;http://example.org/ig/test/StructureDefinition/hla-allele-haplotype&quot;,\n  &quot;version&quot;: &quot;0.1.0&quot;,\n  &quot;name&quot;: &quot;MyHaplotype&quot;,\n  &quot;title&quot;: &quot;HLA Allele profile of Haplotype&quot;,\n  &quot;status&quot;: &quot;active&quot;,\n  &quot;description&quot;: &quot;HLA Allele profile of haplotype&quot;,\n  &quot;fhirVersion&quot;: &quot;4.0.1&quot;,\n  &quot;mapping&quot;: [\n    {\n      &quot;identity&quot;: &quot;v2-cg-results&quot;,\n      &quot;uri&quot;: &quot;http://unknown.org/V2-CG-Results&quot;,\n      &quot;name&quot;: &quot;V2-CG-Results&quot;\n    },\n    {\n      &quot;identity&quot;: &quot;workflow&quot;,\n      &quot;uri&quot;: &quot;http://hl7.org/fhir/workflow&quot;,\n      &quot;name&quot;: &quot;Workflow Pattern&quot;\n    },\n    {\n      &quot;identity&quot;: &quot;sct-concept&quot;,\n      &quot;uri&quot;: &quot;http://snomed.info/conceptdomain&quot;,\n      &quot;name&quot;: &quot;SNOMED CT Concept Domain Binding&quot;\n    },\n    {\n      &quot;identity&quot;: &quot;v2&quot;,\n      &quot;uri&quot;: &quot;http://hl7.org/v2&quot;,\n      &quot;name&quot;: &quot;HL7 v2 Mapping&quot;\n    },\n    {\n      &quot;identity&quot;: &quot;rim&quot;,\n      &quot;uri&quot;: &quot;http://hl7.org/v3&quot;,\n      &quot;name&quot;: &quot;RIM Mapping&quot;\n    },\n    {\n      &quot;identity&quot;: &quot;w5&quot;,\n      &quot;uri&quot;: &quot;http://hl7.org/fhir/fivews&quot;,\n      &quot;name&quot;: &quot;FiveWs Pattern Mapping&quot;\n    },\n    {\n      &quot;identity&quot;: &quot;sct-attr&quot;,\n      &quot;uri&quot;: &quot;http://snomed.org/attributebinding&quot;,\n      &quot;name&quot;: &quot;SNOMED CT Attribute Binding&quot;\n    }\n  ],\n  &quot;kind&quot;: &quot;resource&quot;,\n  &quot;abstract&quot;: false,\n  &quot;type&quot;: &quot;Observation&quot;,\n  &quot;baseDefinition&quot;: &quot;http://hl7.org/fhir/uv/genomics-reporting/StructureDefinition/haplotype&quot;,\n  &quot;derivation&quot;: &quot;constraint&quot;,\n  &quot;differential&quot;: {\n    &quot;element&quot;: [\n      {\n        &quot;id&quot;: &quot;Observation.value[x]&quot;,\n        &quot;path&quot;: &quot;Observation.value[x]&quot;,\n        &quot;min&quot;: 1\n      },\n      {\n        &quot;id&quot;: &quot;Observation.valueCodeableConcept&quot;,\n        &quot;path&quot;: &quot;Observation.valueCodeableConcept&quot;,\n        &quot;patternCodeableConcept&quot;: {\n          &quot;coding&quot;: [\n            {\n              &quot;system&quot;: &quot;http://glstring.org&quot;\n            }\n          ]\n        }\n      },\n      {\n        &quot;id&quot;: &quot;Observation.derivedFrom&quot;,\n        &quot;path&quot;: &quot;Observation.derivedFrom&quot;,\n        &quot;slicing&quot;: {\n          &quot;discriminator&quot;: [\n            {\n              &quot;type&quot;: &quot;pattern&quot;,\n              &quot;path&quot;: &quot;type&quot;\n            }\n          ],\n          &quot;rules&quot;: &quot;open&quot;,\n          &quot;description&quot;: &quot;reference HLA molecular sequence&quot;\n        }\n      },\n      {\n        &quot;id&quot;: &quot;Observation.derivedFrom:hla-sequence&quot;,\n        &quot;path&quot;: &quot;Observation.derivedFrom&quot;,\n        &quot;sliceName&quot;: &quot;hla-sequence&quot;,\n        &quot;type&quot;: [\n          {\n            &quot;code&quot;: &quot;Reference&quot;,\n            &quot;targetProfile&quot;: [\n              &quot;http://example.org/ig/test/StructureDefinition/hla-molecularsequence&quot;\n            ]\n          }\n        ]\n      },\n      {\n        &quot;id&quot;: &quot;Observation.component&quot;,\n        &quot;path&quot;: &quot;Observation.component&quot;,\n        &quot;min&quot;: 1\n      },\n      {\n        &quot;id&quot;: &quot;Observation.component:gene-studied&quot;,\n        &quot;path&quot;: &quot;Observation.component&quot;,\n        &quot;sliceName&quot;: &quot;gene-studied&quot;,\n        &quot;min&quot;: 1,\n        &quot;max&quot;: &quot;1&quot;,\n        &quot;mustSupport&quot;: true\n      }\n    ]\n  }\n}\n</pre></div>",
        "id": 193899501,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586872291
    },
    {
        "content": "<p>hmm multiple discriminators should work.</p>",
        "id": 193899835,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586872441
    },
    {
        "content": "<p>i'll try to investigate this week.</p>",
        "id": 193899929,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586872457
    },
    {
        "content": "<p>From the FHIR spec: <code>If a discriminator for an element is declared in a parent profile, child profiles referencing that element:\nSHALL include all the same discriminators\nMAY add additional discriminators</code></p>",
        "id": 193900454,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586872633
    },
    {
        "content": "<p>I'm guessing the 'additional discriminators' have to be additional qualifiers to the parent (subsumed?). So not only obs.code, but perhaps obs.component as well.</p>",
        "id": 193901392,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586872962
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> how do you validate a resource instance against a profile if you don't have meta.profile in the resource?</p>",
        "id": 193907900,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586875413
    },
    {
        "content": "<p>You can validate any instance against any profile--the meta is a shorthand for that but you could have a server require all sequences validate against profile XX, etc, or have it do whatever logic is required to determine which profiles to check it against</p>",
        "id": 193908530,
        "sender_full_name": "Jamie Jones",
        "timestamp": 1586875676
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"196553\">@Jamie Jones</span> can you show me a command line example? I know I can use <code>-ig [source]</code> option, but if the resource doesn't have the <code>meta.profile</code> how does it know which StructureDefinition to validate against?  I assume it would just default to validating against the base resource (e.g., Observation). I just tried this before and after commenting out <code>meta.profile</code> and I get different validation errors/warnings</p>\n<div class=\"codehilite\"><pre><span></span>java -jar org.hl7.fhir.validator.jar  genotype-example.xml  -ig &quot;http://hl7.org/fhir/uv/genomics-reporting/StructureDefinition/genotype&quot;\n</pre></div>",
        "id": 193913225,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586877493
    },
    {
        "content": "<p>The cli validator can't do that. But in our hapi we have implemented an interceptor checking all incoming DR against our profiles</p>",
        "id": 193920306,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586880429
    },
    {
        "content": "<p>Discriminating with a value which is always there (like code &amp; type) is better. Even if a a MolSeq claims to comply to a profile, you would first have to validate it.</p>",
        "id": 193920370,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586880464
    },
    {
        "content": "<p>If you look at types and codes, this gets a lot easier. I think just adding <code>type</code> as a discriminator in the differential should be sufficient.</p>",
        "id": 193920636,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586880578
    },
    {
        "content": "<p>I assume the Validator has a bug</p>",
        "id": 193920657,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586880586
    },
    {
        "content": "<p>Will check that, we then should bring this to the conformance stream.</p>",
        "id": 193920746,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586880610
    },
    {
        "content": "<p>You can tell the validator to validate against a profile:  <a href=\"https://confluence.hl7.org/display/FHIR/Using+the+FHIR+Validator#UsingtheFHIRValidator-Whattovalidateagainst\" title=\"https://confluence.hl7.org/display/FHIR/Using+the+FHIR+Validator#UsingtheFHIRValidator-Whattovalidateagainst\">https://confluence.hl7.org/display/FHIR/Using+the+FHIR+Validator#UsingtheFHIRValidator-Whattovalidateagainst</a></p>\n<blockquote>\n<p>The -profile parameter is the canonical URL for the profile you wish to validate against. This is usually clearly specified on the page where the profile is published. If the profile you specify has not been loaded through one of the implementation guides, the validator will try and load it directly from the canonical url, but it's better to load it with an -ig parameter first.</p>\n</blockquote>",
        "id": 193921439,
        "sender_full_name": "Kevin Power",
        "timestamp": 1586880959
    },
    {
        "content": "<p>ah right!</p>",
        "id": 193922891,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586881604
    },
    {
        "content": "<p>re slicing on MolecularSequence.type, I notice that it isn't required (0..1). Does that matter?<br>\nMaybe a better option would be to slice on MS.coordinateSystem (1..1)? (if we can figure out how)</p>",
        "id": 193926270,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586883195
    },
    {
        "content": "<p>OK, maybe I am confused, but I don't think we are talking about MolecularSequence.type (as in attribute on the resource named 'type'), I think 'type' means the \"Discriminator processing type\" of <em>type</em> (way to many 'types' there <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span>)</p>\n<p><a href=\"https://www.hl7.org/fhir/profiling.html#discriminator\" title=\"https://www.hl7.org/fhir/profiling.html#discriminator\">https://www.hl7.org/fhir/profiling.html#discriminator</a></p>\n<blockquote>\n<p>Each discriminator is a pair of values: <strong>a type that indicates how the field is processed when evaluating the discriminator</strong>, and a FHIRPath expression that identifies the element in which the discriminator is found. There are five different processing types for discriminators</p>\n<p>value   The slices have different values in the nominated element.<br>\nexists  The slices are differentiated by the presence or absence of the nominated element.<br>\npattern The slices have different values in the nominated element, as determined by testing them against the applicable ElementDefinition.pattern[x].<br>\n<strong>type  The slices are differentiated by type of the nominated element.</strong><br>\nprofile The slices are differentiated by conformance of the nominated element to a specified profile. Note that if the path specifies .resolve() then the profile is the target profile on the reference. In this case, validation by the possible profiles is required to differentiate the slices.</p>\n</blockquote>",
        "id": 193926925,
        "sender_full_name": "Kevin Power",
        "timestamp": 1586883502
    },
    {
        "content": "<p>Okay, Im confused too. I think right now <code>discriminator.type = pattern</code>, and <code>discriminator.path= resolve().code</code>. So I thought the <code>code</code> was for <code>Observation.code</code>. Maybe I'm wrong. I thought we were considering adding/changing path to <code>resolve().type</code> which would be a resource with a <code>type</code> element. I'm don't know much about fhirpath, so I could easily be wrong.</p>",
        "id": 193927848,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586883913
    },
    {
        "content": "<p>the code is [Resource].code. So every resource which is allowed in derived will be checked for code for the slice matching.</p>",
        "id": 193944346,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586891649
    },
    {
        "content": "<p>MolSeq doesnt has code. Thats why there is a runtime failure</p>",
        "id": 193944433,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586891698
    },
    {
        "content": "<p>And not a compile time failure</p>",
        "id": 193944463,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586891709
    },
    {
        "content": "<p>For Molseq we could add a type based slicing. Type equals the Name of a Resource here.</p>",
        "id": 193944649,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586891814
    },
    {
        "content": "<p>so it would need an additional discriminator: <code>discriminator.type = type</code>and <code>discriminator.path = $this.resolve()</code></p>",
        "id": 193944815,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586891896
    },
    {
        "content": "<p>disclaimer: slicing is still puzzles me a lot of times, and i'm not 100% sure.</p>",
        "id": 193944960,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586891988
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191916\">@ Bob Milius</span> you did try that already and got the error from the validator / IG creator right?</p>",
        "id": 193945112,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586892052
    },
    {
        "content": "<p>No, I tried <code>discriminator.type=pattern</code> (or value) and <code>discriminator.path = resolve().type</code><br>\nI'll try what you suggested.</p>",
        "id": 193945439,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586892229
    },
    {
        "content": "<p>What does a json snippet look like for multiple discriminators?</p>",
        "id": 193945450,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586892237
    },
    {
        "content": "<p><a href=\"https://www.hl7.org/fhir/elementdefinition-definitions.html#ElementDefinition.slicing.discriminator\" title=\"https://www.hl7.org/fhir/elementdefinition-definitions.html#ElementDefinition.slicing.discriminator\">https://www.hl7.org/fhir/elementdefinition-definitions.html#ElementDefinition.slicing.discriminator</a></p>",
        "id": 193945541,
        "sender_full_name": "Kevin Power",
        "timestamp": 1586892266
    },
    {
        "content": "<p>It is a 0..*</p>\n<p>.... discriminator  Σ   0..*    Element Element values that are used to distinguish the slices<br>\n....... type    Σ   1..1    code    value | exists | pattern | type | profile ---- DiscriminatorType (Required)<br>\n....... path    Σ   1..1    string  Path to element value</p>",
        "id": 193945613,
        "sender_full_name": "Kevin Power",
        "timestamp": 1586892298
    },
    {
        "content": "<p>so, you're suggesting something like this slicing? The first matches the parent (STU1), the second for the molseq?</p>\n<div class=\"codehilite\"><pre><span></span>{\n        &quot;id&quot;: &quot;Observation.derivedFrom&quot;,\n        &quot;path&quot;: &quot;Observation.derivedFrom&quot;,\n        &quot;slicing&quot;: {\n            &quot;discriminator&quot;: [\n                {\n                    &quot;type&quot;: &quot;pattern&quot;,\n                    &quot;path&quot;: &quot;resolve().code&quot;\n                },\n                {\n                    &quot;type&quot;: &quot;type&quot;,\n                    &quot;path&quot;: &quot;$this.resolve()&quot;\n                }\n            ],\n            &quot;rules&quot;: &quot;open&quot;,\n        }\n    }\n</pre></div>",
        "id": 193949159,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586894202
    },
    {
        "content": "<p>i‘m not 100% sure if the $this is needed. Maybe resolve() without the this is correct</p>",
        "id": 193949369,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586894291
    },
    {
        "content": "<p>but for the rest yes. So if you are deriving from our haplotype, only the type slicing has to be added. The resulting snapshot should then contain both.</p>",
        "id": 193949503,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586894353
    },
    {
        "content": "<p>I tried different variations on this, and keep getting stack dumps from the publisher when trying to generate the snapshot. But I may be doing something wrong. If someone can show me an example profile whose parent is one of the observation profiles in our IG that adds a molseq to derivedFrom, I would be grateful.</p>",
        "id": 193954567,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586897038
    },
    {
        "content": "<p>I am totally shooting in the dark here, but if you don't derive from the genomics-reporting Haplotype (as a test) does it still stack dump?  Did you try to re-order the discriminators?</p>",
        "id": 193957905,
        "sender_full_name": "Kevin Power",
        "timestamp": 1586898808
    },
    {
        "content": "<p>I'll test that. In my example above I was able to use type=profile, and path=$this.resolve() on a profile for Observation and that worked for me (that profile being a parent for another profile). But that's not a good solution for Patrick's use case.</p>",
        "id": 193959198,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586899617
    },
    {
        "content": "<p>i think i did it: <a href=\"/user_uploads/10155/CryUt_Jgl4puTbxqkJRVqXGy/MyHaplotype.StructureDefinition.json\" title=\"MyHaplotype.StructureDefinition.json\">MyHaplotype.StructureDefinition.json</a></p>",
        "id": 194027569,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586956519
    },
    {
        "content": "<p>Derived from haplotype and adding a type slicing</p>",
        "id": 194027602,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586956532
    },
    {
        "content": "<p>I can validate this profile without getting errors.</p>",
        "id": 194027783,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586956580
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"s2\">&quot;slicing&quot;</span><span class=\"err\">:</span> <span class=\"p\">{</span>\n          <span class=\"nt\">&quot;discriminator&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n              <span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;type&quot;</span><span class=\"p\">,</span>\n              <span class=\"nt\">&quot;path&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;$this&quot;</span>\n            <span class=\"p\">}</span>\n          <span class=\"p\">],</span>\n          <span class=\"nt\">&quot;rules&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;open&quot;</span>\n        <span class=\"p\">}</span>\n</pre></div>",
        "id": 194027830,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586956602
    },
    {
        "content": "<p>found horrible bugs while doing this (probably in Forge):</p>",
        "id": 194027890,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586956628
    },
    {
        "content": "<p><a href=\"#narrow/stream/179177-conformance/topic/Context.20for.20Normative.20Version\" title=\"#narrow/stream/179177-conformance/topic/Context.20for.20Normative.20Version\">https://chat.fhir.org/#narrow/stream/179177-conformance/topic/Context.20for.20Normative.20Version</a> (at the end)</p>",
        "id": 194027945,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586956651
    },
    {
        "content": "<p>You didn't include a slice, does that matter?</p>",
        "id": 194028495,
        "sender_full_name": "Kevin Power",
        "timestamp": 1586956864
    },
    {
        "content": "<p>hmm good question. Grahame tells me that i'm wrong in this second. brb :-/</p>",
        "id": 194028895,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586957005
    },
    {
        "content": "<p>ok </p>\n<div class=\"codehilite\"><pre><span></span>          <span class=\"s2\">&quot;discriminator&quot;</span><span class=\"err\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n              <span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;type&quot;</span><span class=\"p\">,</span>\n              <span class=\"nt\">&quot;path&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;$this.resolve()&quot;</span>\n            <span class=\"p\">}</span>\n          <span class=\"p\">]</span><span class=\"err\">,</span>\n          <span class=\"s2\">&quot;rules&quot;</span><span class=\"err\">:</span> <span class=\"s2\">&quot;open&quot;</span>\n        <span class=\"err\">}</span>\n</pre></div>",
        "id": 194030718,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586957707
    },
    {
        "content": "<p>you have to resolve of course to compare the type.</p>",
        "id": 194030752,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586957721
    },
    {
        "content": "<p>I just looked at Haplotype: We are currently pattern slicing on: resolve(code)</p>",
        "id": 194030887,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586957764
    },
    {
        "content": "<p>BUT: don't habe a pattern on our slices.</p>",
        "id": 194030907,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586957776
    },
    {
        "content": "<p>i think this is broken/wrong</p>",
        "id": 194030922,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586957784
    },
    {
        "content": "<p>Yea, I think <span class=\"user-mention\" data-user-id=\"191916\">@ Bob Milius</span> wanted us to change our 'haplotype' profile</p>",
        "id": 194030996,
        "sender_full_name": "Kevin Power",
        "timestamp": 1586957821
    },
    {
        "content": "<p>Hence, his request for a 'technical corrections' on STU1 <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 194031064,
        "sender_full_name": "Kevin Power",
        "timestamp": 1586957849
    },
    {
        "content": "<p>i have some other urgent stuff to do atm. Will have a look later, starting with fixing the haplotype profile</p>",
        "id": 194031217,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586957903
    },
    {
        "content": "<p>Just to be clear, if I can't have a <code>derivedFrom</code> to a profile of MolecularSequence inside a profile of <code>Genotype</code> or <code>Haplotype</code>, my HLA Reporting IG will be <em>informed</em> by the CG IG, instead of profiling directly from it. I would prefer to profile it, but I can profile <code>Observation</code> directly if I need to.</p>\n<p>In the meantime, I'll play with Patrick's example.</p>",
        "id": 194035912,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586959801
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191916\">@ Bob Milius</span> it is possible!!! Just the tooling has bugs, and my knowledge is limited.</p>",
        "id": 194044356,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586963044
    },
    {
        "content": "<p>and we have an issue with the haplotype discriminator/slicing (wondering that this at least worked somehow, to me it looks broken)</p>",
        "id": 194044523,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586963117
    },
    {
        "content": "<ul>\n<li>will fix our current sliceDefs in haplotype in the ci build</li>\n<li>get your example flying</li>\n</ul>",
        "id": 194044892,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1586963262
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> your knowledge is not as limited as mine <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span></p>",
        "id": 194049070,
        "sender_full_name": " Bob Milius",
        "timestamp": 1586964800
    },
    {
        "content": "<p>just issued/started discussion on 3 bugs in the java validator and IG creator:<br>\n<a href=\"#narrow/stream/179177-conformance/topic/structuredefinition-normative-version.20errors\" title=\"#narrow/stream/179177-conformance/topic/structuredefinition-normative-version.20errors\">https://chat.fhir.org/#narrow/stream/179177-conformance/topic/structuredefinition-normative-version.20errors</a><br>\n<a href=\"#narrow/stream/179177-conformance/topic/error.20on.3A.20http.3A.2F.2Fhl7.2Eorg.2Ffhirpath.2FSystem.2EString\" title=\"#narrow/stream/179177-conformance/topic/error.20on.3A.20http.3A.2F.2Fhl7.2Eorg.2Ffhirpath.2FSystem.2EString\">https://chat.fhir.org/#narrow/stream/179177-conformance/topic/error.20on.3A.20http.3A.2F.2Fhl7.2Eorg.2Ffhirpath.2FSystem.2EString</a><br>\n<a href=\"#narrow/stream/179252-IG-creation/topic/packaged.20profiles.20not.20handled.20by.20jekyll\" title=\"#narrow/stream/179252-IG-creation/topic/packaged.20profiles.20not.20handled.20by.20jekyll\">https://chat.fhir.org/#narrow/stream/179252-IG-creation/topic/packaged.20profiles.20not.20handled.20by.20jekyll</a></p>",
        "id": 194294119,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1587039471
    }
]