[
    {
        "content": "<p>Has anybody tried to do FHIR resource conversions (e.g. from dstu2 to r4) in Javascript?  I've found this npm that could perhaps be used together with the version mappings in the specs (<a href=\"https://github.com/Vermonster/fhir-kit-mapping-language/blob/master/README.md\">https://github.com/Vermonster/fhir-kit-mapping-language/blob/master/README.md</a>) but was wondering if there was anything that would be more of a drop-in module for converting dstu2 and stu3 resources to r4?</p>",
        "id": 245812628,
        "sender_full_name": "Patrick Narkinsky",
        "timestamp": 1626177196
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"231454\">@Patrick Narkinsky</span>  - This was an early prototype, and was a bit misguided. Instead of using actual FHIR StructureMap as the abstract syntax, this attempted to directly use the generated AST from the mapping concrete syntax, to evaluate mappings.</p>\n<p>I think it could be useful to have a JS/Typescript Mapping Engine (using FHIR StructureMap as the abstract syntax), but re-written from the ground up. In the meantime, we have been using and building our own more template-based approaches -- such as <a href=\"https://github.com/microsoft/FHIR-Converter\">https://github.com/microsoft/FHIR-Converter</a></p>",
        "id": 245853064,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1626194821
    },
    {
        "content": "<p>(such an engine would also be useful for apps needing to support more advanced SDC and $apply translations)</p>",
        "id": 245853380,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1626194970
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"231454\">Patrick Narkinsky</span> <a href=\"#narrow/stream/179169-javascript/topic/Resource.20conversion/near/245812628\">said</a>:</p>\n<blockquote>\n<p>Has anybody tried to do FHIR resource conversions (e.g. from dstu2 to r4) in Javascript?</p>\n</blockquote>\n<p>The <code>fhir-starter</code> library has a <code>FhirDehydrator</code> object that does FHIR resource conversions from any resource version into a flattened display object for UI rendering.  <br>\n<a href=\"https://github.com/symptomatic/fhir-starter/blob/master/src/FhirDehydrator.js\">https://github.com/symptomatic/fhir-starter/blob/master/src/FhirDehydrator.js</a></p>\n<p>While it's not precisely the DSTU2 to R4 conversation that you're asking about, the structure of the library deploys via NPM and supports multiple build pipelines; the import/export pattern for the <code>FhirDehydrator</code> object would be the same for a <code>FhirVersionConverter</code> object, the <code>get/has/set</code> pattern  would be the same, etc.</p>\n<p>StructureMap could probably work, but I'd want to land on its use after coding things by hand over a few resources, and then doing a refactor.  </p>\n<p>I'll be happy to stub out a <code>FhirVersionConverter</code> object to get everything started.  The problems I see are a) how to handle missing elements, and b) awareness of profiles and extensions.</p>",
        "id": 253119749,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1631550671
    }
]