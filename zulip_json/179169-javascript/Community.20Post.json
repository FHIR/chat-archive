[
    {
        "content": "<p>Is there any valid issues here:</p>",
        "id": 153850733,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474858715
    },
    {
        "content": "<p><a href=\"http://community.fhir.org/t/fhir-js-app-integration-problems/235\" target=\"_blank\" title=\"http://community.fhir.org/t/fhir-js-app-integration-problems/235\">http://community.fhir.org/t/fhir-js-app-integration-problems/235</a></p>",
        "id": 153850734,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474858716
    },
    {
        "content": "<p>?</p>",
        "id": 153850735,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474858718
    },
    {
        "content": "<p>It's certainly not impossible, and mostly it's not too bad to use native FHIR JSON as the model for Angular-based UIs - we do that with Snapper for the CodeSystem, ConceptMap, and ValueSet editors.<br>\nIt is, however, a relatively verbose format (anything self-describing through use of maps rather than arrays will be) and that poses practical constraints on, for example, use of local storage.</p>\n<p>The main area where it's painful to work with the native JSON is things that are map-like (e.g., Parameters) where you just want to pull out some values by the parameter name, but instead you have to iterate through to find a matching 'name' (or transform to a more native-like representation).</p>\n<p>[my 2c]</p>",
        "id": 153850825,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1474929098
    },
    {
        "content": "<p>thanks. We've been talking about change the json format for parameters to something more dense, but you need to the types in order to parse it.... so you'd need the operation definition. and all the parameters would have to be in it </p>",
        "id": 153850826,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474932609
    }
]