[
    {
        "content": "<p>For interactive and convenience purposes, I'm creating an alias for grabbing the fhir.js module from the command line as this:</p>\n<div class=\"codehilite\"><pre><span></span>alias sandbox=&quot;cd Documents/location;node -i -p \\&quot;var smart=require(&#39;fhir.js&#39;)({baseUrl: &#39;https://sb-fhir-stu3.smarthealthit.org/smartstu3/open&#39;});\\&quot;&quot;\n</pre></div>\n\n\n<p>âˆ´</p>\n<div class=\"codehilite\"><pre><span></span>...\n\nvar smart.fetchAll({type: &quot;Patient&quot;, query:{name: &quot;Batz&quot;}}).then(e=&gt;console.log(e)).catch(e=&gt;console.error(e))\n//will output-&gt;\nTypeError: Cannot read property &#39;statusCode&#39; of undefined\n    at Request._callback (C:\\Users\\Akeem Spencer\\Documents\\afas-stu3\\afas-stu3\\node_modules\\fhir.js\\src\\adapters\\node.js:18:57)\n    at self.callback (C:\\Users\\Akeem Spencer\\Documents\\afas-stu3\\afas-stu3\\node_modules\\fhir.js\\node_modules\\request\\request.js:236:22\n)\n    at emitOne (events.js:115:13)\n    at Request.emit (events.js:210:7)\n    at ClientRequest.self.clientErrorHandler (C:\\Users\\Akeem Spencer\\Documents\\afas-stu3\\afas-stu3\\node_modules\\fhir.js\\node_modules\\r\nequest\\request.js:341:10)\n    at emitOne (events.js:115:13)\n    at ClientRequest.emit (events.js:210:7)\n    at TLSSocket.socketErrorListener (_http_client.js:401:9)\n    at emitOne (events.js:115:13)\n    at TLSSocket.emit (events.js:210:7)\n</pre></div>\n\n\n<p>What does this trace mean and how can I call it from the cli?</p>\n<p>EDIT:</p>\n<p>I found a workaround, but I can't quite explain the reasoning behind it:</p>\n<div class=\"codehilite\"><pre><span></span>alias sandbox=&quot;cd Documents/location;node -i -p \\&quot;var smart=require(&#39;fhir.js&#39;)({baseUrl:decodeURIComponent( &#39;https:%2F%2Fsb-fhir-stu3.smarthealthit.org%2Fsmartstu3%2Fopen&#39;});\\&quot;&quot;\n</pre></div>",
        "id": 153936368,
        "sender_full_name": "Akeem Leighton Foster Spencer",
        "timestamp": 1518105607
    }
]