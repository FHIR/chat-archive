[
    {
        "content": "<p>ok: <a href=\"http://wiki.hl7.org/index.php?title=Open_Source_FHIR_implementations#Javascript\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=Open_Source_FHIR_implementations#Javascript\">http://wiki.hl7.org/index.php?title=Open_Source_FHIR_implementations#Javascript</a> - please edit and fill this out</p>",
        "id": 154018403,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1542200823
    },
    {
        "content": "<ul>\n<li><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19648\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19648\">GF#19648</a></li>\n</ul>",
        "id": 154018405,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1542200951
    },
    {
        "content": "<p>Hey everyone, just wanted to share some news with the community. I am proud to say we (asymmetrik) have open sourced several more JavaScript related FHIR tools. These are individual tools we have developed in our open source secure JavaScript server. We pulled them out of the server and made them standalone modules. This makes them easier to test, develop, and version. </p>\n<p>We plan to integrate these back into all of our open source servers (node-fhir-server-core, node-fhir-server-mongo, and graphql-fhir) in the next month or two. They are currently available in a monorepo at <a href=\"https://github.com/Asymmetrik/phx-tools\" target=\"_blank\" title=\"https://github.com/Asymmetrik/phx-tools\">https://github.com/Asymmetrik/phx-tools</a>. You can click into the packages directory to see all the tools.</p>\n<p>We have GraphQL schema utils (fhir-gql-schema-utils), Smart on FHIR GraphQL authentication module (sof-graphql-invariant), Smart on FHIR scope checker (sof-scope-checker) which is useful for building custom middleware, and Smart on FHIR passport strategy (sof-strategy). All of these are already published on NPM and ready for use.</p>\n<p>We have a parameter sanitizer in early beta but it will be changing so it is not published yet and will be adding some more tools in the near future.</p>",
        "id": 154026338,
        "sender_full_name": "Robert Winterbottom",
        "timestamp": 1545231961
    },
    {
        "content": "<p>how do/should these relate to other open source js code?</p>",
        "id": 154026457,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1545257001
    },
    {
        "content": "<p>I notice that the server is 'bound' to US Code: - how extensible is that? ie ie you wanted to support other profiles or 'ad hoc' extensions for example...</p>\n<p>(I guess I could just look at the code  - I'm being lazy :) )</p>",
        "id": 154026484,
        "sender_full_name": "David Hay",
        "timestamp": 1545264752
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>   These are designed to help others build javascript based facade server's of their own or make it easier for others to contribute to the tools that will be used in our open source server's. In my experience in the open source world, people can often shy away from making contributions to larger projects, but smaller individual modules lowers that barrier. Currently their is 4 open source JS modules and we plan to add more coming soon, possibly even some client side ones since these at the moment are all intended for node.js. We would love to see others contribute or pull these into their own projects.</p>\n<p><span class=\"user-mention\" data-user-id=\"191321\">@David Hay</span> Thats a good question. The code generated in node-fhir-server-core and graphql-fhir is generated from structure definitions and only performs structural validation.  Full validation is a fairly high priority item on the roadmap.  We are internally working on updating that to cover extensions, custom profiles, newer versions, and much more.  Most of the generated code also generically allows extensions and modifierExtensions defined in structure definitions to be passed in. So if you pass one of those in on your resource, we won't block it, but we aren't validating it. Im not positive where that tool is going to land (open source vs free service vs premium service), but that would allow the server's to be extended to whatever they need.  Plus, anyone could always fork it and add more customizations on top of that if needed.</p>\n<p>We are trying to develop things in a pluggable manner so it could adapt to whatever you need. Some of the code we published may be specific to certain profiles or extensions, but we would love to make them more generic where it makes sense or even add more modules specific to other profiles so they can be easily swapped in to various projects.</p>",
        "id": 154026692,
        "sender_full_name": "Robert Winterbottom",
        "timestamp": 1545311983
    }
]