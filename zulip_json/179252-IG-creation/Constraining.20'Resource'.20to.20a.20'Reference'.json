[
    {
        "content": "<p>(deleted)</p>",
        "id": 180478480,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1573529297
    },
    {
        "content": "<p>I'm trying to determine all the ways that one type might be constrained to another.  I found that <code>Bundle.entry.resource</code> provides an interesting use case since it can be constrained to multiple types -- effectively increasing the type array from 1 item to many (e.g., <code>[{ \"code\": \"Resource\" }]</code> can be constrained to <code>[{ \"code\": \"MedicationRequest\" } , { \"code\": \"MedicationStatement\" }]</code>).</p>\n<p>In researching what is and is not possible, I found the <a href=\"http://hl7.org/fhir/us/davinci%2Dalerts/2019Sep/StructureDefinition-alerts-bundle.html\" target=\"_blank\" title=\"http://hl7.org/fhir/us/davinci%2Dalerts/2019Sep/StructureDefinition-alerts-bundle.html\">Da Vinci Alerts Bundle Profile</a>.  In this profile, <code>{ \"code\": \"Resource\"}</code> (from <code>Bundle</code>) gets \"constrained\" to <code>{ \"code\": \"Reference\", \"targetProfile\": [\"\"http://hl7.org/fhir/us/davinci-alerts/StructureDefinition/alerts-communication\"\"] }</code>.  I'm trying to understand how/why this works, because <code>Reference</code> is <em>not</em> a specialization or constraint of <code>Resource</code>.  It is, in fact, a <code>complex-type</code> that specializes <code>Element</code>.  So how/why is it allowed as a constraint of a <code>Resource</code> type?</p>",
        "id": 180478779,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1573529832
    },
    {
        "content": "<p>first that IG never went to ballot and we need to 'unpublish' it.  Its been totally replaced and that profile is not being used.  secondly I don't know what I was doing that should be Resource and not Reference. and I am not sure why it was not picked up by the validator...</p>",
        "id": 180486659,
        "sender_full_name": "Eric Haas",
        "timestamp": 1573541037
    },
    {
        "content": "<p>Hmm... OK.  I did look at the QA for that IG and it is clean -- so the IG Publisher definitely <em>did</em> let it through (which is why I assumed it must be ok, even if I don't understand it).  I feel like I saw that happen in other IGs too... but maybe not -- I looked at a lot of IGs for examples, so my memory is a little murky.  (BTW -- I found that IG in the IG registry).</p>\n<p>For now I will assume that it was a mistake for the IG publisher to allow it -- and that you <em>shouldn't</em> be allowed to constrain <code>Resource</code> to <code>Reference</code>.  Thanks, <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span>!</p>",
        "id": 180520161,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1573568233
    },
    {
        "content": "<p>if the QA was clean, there's a problem somewhere...</p>",
        "id": 180554856,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1573588706
    },
    {
        "content": "<p>It was built Aug 5, so may be a moot point now.  Perhaps would not come up clean again in a rebuild: <a href=\"http://hl7.org/fhir/us/davinci-alerts/2019Sep/qa.html\" target=\"_blank\" title=\"http://hl7.org/fhir/us/davinci-alerts/2019Sep/qa.html\">http://hl7.org/fhir/us/davinci-alerts/2019Sep/qa.html</a></p>",
        "id": 180561380,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1573592515
    },
    {
        "content": "<p>doesn't feature in the current qa.html</p>",
        "id": 180561874,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1573592786
    }
]