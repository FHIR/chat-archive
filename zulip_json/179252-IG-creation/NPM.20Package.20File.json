[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> , working on the NPM package file for the IGs. Here's a draft package.json for the spec itself:</p>",
        "id": 153947152,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1521723610
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;@fhir/fhir&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;version&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;3.2.0&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Base FHIR specification Package&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;license&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;CC0-1.0&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;author&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;HL7 Inc&quot;</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">&quot;files&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">&quot;igpack.zip&quot;</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre></div>",
        "id": 153947154,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1521723857
    },
    {
        "content": "<p>this is the package.json for a 1st derivative IG:</p>",
        "id": 153947158,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1521724115
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;@fhir/au-base&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;3.0.1&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Implementation Guide Template&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;license&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;CC0-1.0&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;author&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;HL7 Australia&quot;</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">&quot;contributors&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;HL7 Australia Patient Administration Working Group&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://confluence.hl7australia.com/display/PA/Patient+Administration+Work+Group&quot;</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;HL7 Australia Orders and Observations Working Group&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://confluence.hl7australia.com/display/OO/Orders+and+Observations+Work+Group&quot;</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;HL7 Australia Medications Working Group&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://confluence.hl7australia.com/display/MED/Medications+Work+Group&quot;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">&quot;files&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">&quot;validation.pack&quot;</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">&quot;dependencies&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;@fhir/fhir&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;3.0.1&quot;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>",
        "id": 153947162,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1521724725
    },
    {
        "content": "<p>comments?</p>",
        "id": 153947163,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1521724777
    },
    {
        "content": "<p>Accidentally, we have been discussing packaging over the past few days, since the whole Simplifier team is now present and packaging is in our next design phase for Simplifier.  I know <span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span>  already had some feedback on the wiki page.</p>",
        "id": 153947214,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1521728836
    },
    {
        "content": "<p>.. but no comment yet...?</p>",
        "id": 153947399,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1521754068
    },
    {
        "content": "<p>here's a package.json for a 2nd derivative IG:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;@fhir/au-pd&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;3.0.1&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Implementation Guide Template&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;license&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;CC0-1.0&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;author&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;HL7 Australia&quot;</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">&quot;contributors&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;HL7 Australia Patient Administration Working Group&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://confluence.hl7australia.com/display/PA/Patient+Administration+Work+Group&quot;</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Secure Messaging Technical Working Group&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://collaborate.digitalhealth.gov.au/display/SMT/Secure+Messaging+TWG+Home&quot;</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">&quot;files&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">&quot;validation.pack&quot;</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">&quot;dependencies&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;@fhir/fhir&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;3.0.1&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;@fhir/au-base&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;3.0.1&quot;</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>",
        "id": 153947400,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1521754237
    },
    {
        "content": "<p>Is there a place where we can comment? Or do you want our comments by mail?</p>",
        "id": 153947496,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1521814957
    },
    {
        "content": "<p>Or I can type them here :)</p>",
        "id": 153947497,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1521814980
    },
    {
        "content": "<p>1. <br>\nPackages can be a very powerful adition to FHIR. And can make the use of easier to understand and use. But for it to be adopted by the FHIR community and implementers, a package system must be easy enough to use. The base choice for npm is understandable as it is one of the most widely used. However it will require each user to install nodejs and npm. clients.  We suspect that half of the non technical users will quit before they have responded to the question \"do you want to download the 32bit or the 64bit version\".</p>\n<p>In other words: the best scenario is where each FHIR tool that works with profiles and other conformance resources, is able to implement their own package client without too much problems. The community should be able to build package consumption libraries in various languages that can help add that client functionality to any conformance tooling app. </p>\n<p>There for a FHIR package clients needs is just to be just a small subset of features that npm provides. We think it's unnecessary and probably even harmful for the client to do any javascript postprocessing.</p>",
        "id": 153947498,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1521815211
    },
    {
        "content": "<p>Npm features we think have to be excluded for a FHIR package client to be light and manageable:<br>\n- No package references to github tags, branches or commits.<br>\n- No javascript execution <br>\n- Maybe limit some of the very free versioning rules. References like wildcards, min max and multiple range probably lead to more confusion than help. Only Floating minor or bugfix versions are sufficient.</p>",
        "id": 153947499,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1521815275
    },
    {
        "content": "<p>2.  Naming<br>\nYes, naming needs to centralized to avoid collision, but I think it's not the best solution to have a central administrator. It will create a delay in peoples workflow and it will not scale if becomes succesful. And if we allow publication to <a href=\"http://npmjs.org\" target=\"_blank\" title=\"http://npmjs.org\">npmjs.org</a>, you cannot enforce it anyway, can you? <br>\nIt might be more effective to have some clear guidelines. Like some package standards do enforce. NuGet now has the option to reserve prefixes.</p>",
        "id": 153947500,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1521815499
    },
    {
        "content": "<p>3. Scopes<br>\nSearching for scoped packages on npm is not trivial. Building dedicated fhir-npm package server seems doable. And with proper client tooling, it might be a lot easier to jump start a fhir-package ecosystem. - but this one is my personal opinion.</p>",
        "id": 153947501,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1521815808
    },
    {
        "content": "<p>4. It might be valuable to define some rules on how and where local fire packages are stored and cached. Because it is not trivial for a regular user to configure that in npm.</p>",
        "id": 153947502,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1521815895
    },
    {
        "content": "<p>And with a properly defined subset of npm (npm-light) we might standardize how fhir package tooling can deal with local storage and caching.</p>",
        "id": 153947504,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1521816021
    },
    {
        "content": "<p>What issues are the NPM packaging trying to solve?  versioning?  How is a published IG going to benefit from this?</p>",
        "id": 153947528,
        "sender_full_name": "Eric Haas",
        "timestamp": 1521822192
    },
    {
        "content": "<p>I assumed the IG is on the web and folks read it there and download the downloadable artifacts.</p>",
        "id": 153947529,
        "sender_full_name": "Eric Haas",
        "timestamp": 1521822249
    },
    {
        "content": "<p>The main improvements that packages solve is that it is a level of indirection for your references. This will make sure that a cluster of conformance resources refer to a consistent set of base resources.</p>",
        "id": 153947538,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1521824166
    },
    {
        "content": "<p>You can now refer to a package version instead of having to refer to a correct profile version in each reference.</p>",
        "id": 153947539,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1521824234
    },
    {
        "content": "<p>#1 - agree. <br>\n#2 - it's not like IGs roll over quickly - so I don't see the issue in requiring IGs published by HL7 or <a href=\"http://FHIR.org\" target=\"_blank\" title=\"http://FHIR.org\">FHIR.org</a> to be managed<br>\n#3 - I'm not sure what you mean by 'scoped packages'<br>\n#4 - what kind of rules could we define?</p>",
        "id": 153947561,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1521833382
    },
    {
        "content": "<p>#2. Ok didn't get that. I thought it was for all packages.<br>\n#3. Scoped as in npm scoped packages @fhir/ ... I guess if that too was only for HL7/FHIR.org, I don't seen an issue.</p>\n<p>#4. The rules I can think of:<br>\n- Cache packages globally under ~/.fhir/packages or something similar.<br>\n- Do not use folder recursion: no dependencies under the current packages folder. Store all packages at the top level</p>\n<p>It might be worth noting, that we foresee use cases where packages are consumed by profile authors before those packages are final. We've seen several cases already where projects started working together and depending on eachother while both still in draft.</p>",
        "id": 153947899,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1522063492
    },
    {
        "content": "<p>Regarding #4. Other rules could be <br>\n- Not to use javascript post processing.</p>",
        "id": 153947900,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1522063598
    },
    {
        "content": "<ul>\n<li>No complex version references like \"^1.3 || 2.x || &gt;=3.5.0 || 5.0.0 - 7.2.3\"</li>\n</ul>",
        "id": 153947901,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1522063841
    },
    {
        "content": "<p>I've tried to implement a npm client in C# with full the full version logic. It was doable, but it makes everything very complex and harder to manage.</p>",
        "id": 153947902,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1522063959
    },
    {
        "content": "<p>And it definitely does not satisfy the FHIR paradigm of moving complexity to the server ;)</p>",
        "id": 153947903,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1522064006
    },
    {
        "content": "<p>#2 I forgot to say. <br>\n#3 we'll have to see how it plays out...<br>\n#4<br>\n- cache packages globally... I don't know what that means unless it's a pure deployment thing<br>\n- no recursion - shudder. compleeetely agree. Same for javascript post-processing<br>\n- agree about version references. But what do we need? In eclipse land, I've always gotten by on &gt;= x(, &lt;= Y)?</p>",
        "id": 153947904,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522064142
    },
    {
        "content": "<p>For sake of simplicity I would say the same rules that we have (or will have) for canonical references behind the pipe.</p>",
        "id": 153947905,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1522064268
    },
    {
        "content": "<p>bet we don't finish that simple. but I'm game to try</p>",
        "id": 153947906,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522064294
    },
    {
        "content": "<p>:)</p>",
        "id": 153947907,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1522064301
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> , we wrote a first draft text for Fhir packaging. <br>\n<a href=\"https://gist.github.com/mharthoorn/a52de54d1d010fb6c6e74f8a5d85fbc8\" target=\"_blank\" title=\"https://gist.github.com/mharthoorn/a52de54d1d010fb6c6e74f8a5d85fbc8\">https://gist.github.com/mharthoorn/a52de54d1d010fb6c6e74f8a5d85fbc8</a></p>",
        "id": 153951437,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1523274823
    },
    {
        "content": "<p>ok I'll look at it. In fact, first scan... tarball.. really?</p>",
        "id": 153951449,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1523278001
    },
    {
        "content": "<p>I am not a fan of tarbal. But it's the npm package format.</p>",
        "id": 153951456,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1523278229
    },
    {
        "content": "<blockquote>\n<p>Should we really distribute implementation guides that way. it will make it slower and it won't be consumed by a regular package client. Maybe we need a regular not standardized zip for ig's. What is grahame's use case here?</p>\n</blockquote>",
        "id": 153951470,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1523284323
    },
    {
        "content": "<p>this is the core of the issue. I don't really have a use case; Ewout suggested that we use npm format for resolving dependencies, and for people to use when working with implementation guides... whatever that means. <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> - what does that mean</p>",
        "id": 153951471,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1523284403
    },
    {
        "content": "<p>but my pain point is resolving IG dependencies when building IGs</p>",
        "id": 153951472,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1523284419
    },
    {
        "content": "<p>But what you care about resolving is only the conformance resources. Not the static content, right? Or do you want to inject that too?</p>",
        "id": 153951474,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1523285434
    },
    {
        "content": "<p>I only care about the resources, yes</p>",
        "id": 153951535,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1523301608
    },
    {
        "content": "<p>So, maybe we should not distribute IG htmls etc. like this, it's just about a package.</p>",
        "id": 153952243,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1523631376
    },
    {
        "content": "<p>I'm happy if it's just the resources, and maybe a version indicator.</p>",
        "id": 153952323,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1523653158
    },
    {
        "content": "<p>ping to bring this back to life</p>",
        "id": 153954235,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524639584
    },
    {
        "content": "<p>ping.</p>",
        "id": 153954257,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524652412
    },
    {
        "content": "<p>We are currently building a C# FHIR packaging library - to allow consumption of packages by profile tools.</p>",
        "id": 153954258,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524652495
    },
    {
        "content": "<p>We are also working on canonical url resolving in packages (forementioned global package cache)</p>",
        "id": 153954259,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524652556
    },
    {
        "content": "<p>And we have build a command line tool to download, install and create packages specifically for FHIR.</p>",
        "id": 153954260,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524652588
    },
    {
        "content": "<p>-- based on the preliminary choices that we've made sofar.</p>",
        "id": 153954261,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524652629
    },
    {
        "content": "<p>ok, so I don't understand this comment:</p>",
        "id": 153954288,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524660731
    },
    {
        "content": "<p>Should we really distribute implementation guides that way. it will make it slower and it won't be consumed by a regular package client. Maybe we need a regular not standardized zip for ig's. What is grahame's use case here?</p>",
        "id": 153954289,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524660732
    },
    {
        "content": "<p>slower than what? why?</p>",
        "id": 153954290,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524660738
    },
    {
        "content": "<p>what's a regular package client? what would it consume?</p>",
        "id": 153954291,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524660749
    },
    {
        "content": "<p>what's the relationship between the name and the canonical URL?</p>",
        "id": 153954293,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524660797
    },
    {
        "content": "<p>I think the package file needs the canonical URL somehow</p>",
        "id": 153954294,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524660810
    },
    {
        "content": "<p>we cannot make semver  mandatory. I'm happy to recommend it strongly</p>",
        "id": 153954296,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524660860
    },
    {
        "content": "<p>license - I've been using <a href=\"https://spdx.org/licenses/\" target=\"_blank\" title=\"https://spdx.org/licenses/\">https://spdx.org/licenses/</a> which is much more comprehensive than <a href=\"https://help.github.com/articles/licensing-a-repository/\" target=\"_blank\" title=\"https://help.github.com/articles/licensing-a-repository/\">https://help.github.com/articles/licensing-a-repository/</a> and also I got that link from the npm documentation.</p>",
        "id": 153954297,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524660962
    },
    {
        "content": "<p>master package dependency has to be versioned. And you haven't indicated quite what you think they should look like (other than inconsistency on the naming suggestions)</p>",
        "id": 153954298,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524661106
    },
    {
        "content": "<p>A package with only the profiles is smaller (a lot) than the whole implementation guide (all pages, images, etc). And the primary use case that I see, the user doesn't need the source of the IG. he needs to find it rendered online somewhere.</p>\n<p>and a smaller package is a faster download.</p>",
        "id": 153954314,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524665803
    },
    {
        "content": "<p>The primary use case that I see for packages is automated profiles + dependencies distribution. A 'one click' install and you have all conformance resources in your scope - with the right version.</p>",
        "id": 153954315,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524665808
    },
    {
        "content": "<p>-- a regular package client: any desktop tool that works with conformance resources.</p>",
        "id": 153954316,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524665829
    },
    {
        "content": "<ul>\n<li>relationship between a package name and a canonical URL: I have no idea yet. It might be valueable to establish a rule there, but I also think of meta packages (that only refer to other packages), where a relationship between a package name and a canonical url is not evident.</li>\n</ul>",
        "id": 153954317,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524665901
    },
    {
        "content": "<p>semver: of course we cannot enforce it. But tooling can.</p>",
        "id": 153954318,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524665973
    },
    {
        "content": "<p>-- license: sure. spdx looks complete :)</p>",
        "id": 153954319,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524666083
    },
    {
        "content": "<p>\"master package dependency has to be versioned\" -- what do you mean here?</p>",
        "id": 153954320,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524666124
    },
    {
        "content": "<p>We are experimenting with including an table in the package.json with a link from the canonical URL to the actual file.</p>",
        "id": 153954321,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524666164
    },
    {
        "content": "<p>Do you want me to update the gist with what we discuss here?</p>",
        "id": 153954322,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524666228
    },
    {
        "content": "<p>yes update the gist, though it needs to move to the wiki page at some stage.</p>",
        "id": 153954354,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524692342
    },
    {
        "content": "<p>so I understand your responses about that note, but they don't explain the note itself</p>",
        "id": 153954355,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524692415
    },
    {
        "content": "<p>some of my confusion is that I don't know, when you say 'profiles', whether you are stritctly referring to structure definitions, or just generally to conformance definitions. ome of your gist implies that you think that these things should be broken up (I strongly disagree with that). But I'm going to ignore the comment now.</p>",
        "id": 153954356,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524692497
    },
    {
        "content": "<p>so let's say this: the package includes all the resources in the guide, in json (no xml in this context, since the package itself is json).</p>",
        "id": 153954357,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524692526
    },
    {
        "content": "<p>\" including an table in the package.json with a link from the canonical URL to the actual file\" - which looks like?</p>",
        "id": 153954358,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524692567
    },
    {
        "content": "<p>with regard to naming conventions, something like this:</p>\n<p>hl7.fhir  (main build)<br>\nhl7.us.core<br>\nhl7.au.base<br>\nhl7.nl.medmij<br>\nihe.pix<br>\nihe.mhd<br>\n[country].[company].[purpose]</p>",
        "id": 153954369,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524693380
    },
    {
        "content": "<p>and on semver: my issue is a policy one: we should not force everyone to use semver. Nothing to do whether it's possible to enforce or not.</p>",
        "id": 153954370,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524693574
    },
    {
        "content": "<p>If you do not enforce semver, you cannot use version wildcards or ranges. I am fine with that. But it will mean that you can only target 1 specific version. It's also a deviation from npm.</p>",
        "id": 153954624,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524776192
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span>  what is your opinion on this?</p>",
        "id": 153954625,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524776200
    },
    {
        "content": "<p>you can still use version wildcards for some deviations, they just don't work well. I'm fine to strongly encourage semver, and can enforce it for HL7 and <a href=\"http://fhir.org\" target=\"_blank\" title=\"http://fhir.org\">fhir.org</a> implementation guides, but it won't be possible everywhere</p>",
        "id": 153954626,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524776407
    },
    {
        "content": "<p>ok. I think I updated all comments. <br>\n<a href=\"https://gist.github.com/mharthoorn/a52de54d1d010fb6c6e74f8a5d85fbc8\" target=\"_blank\" title=\"https://gist.github.com/mharthoorn/a52de54d1d010fb6c6e74f8a5d85fbc8\">https://gist.github.com/mharthoorn/a52de54d1d010fb6c6e74f8a5d85fbc8</a></p>",
        "id": 153954627,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524776538
    },
    {
        "content": "<p>this gist approach is not working for me. Wiki or google do would be better so I could comment directly.</p>",
        "id": 153954628,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524776656
    },
    {
        "content": "<p>\"A set of resource files<br>\nIt MAY contain additional content, like example resources or documentation, but this content will be ignored by most package clients and does not follow a standard.\"</p>",
        "id": 153954629,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524776659
    },
    {
        "content": "<p>I think you mean conformance resources in the first sentence given what you say in the second</p>",
        "id": 153954630,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524776681
    },
    {
        "content": "<p>why in the manifest example do you have devDependencies which are ignored and not dependencies which are critical?</p>",
        "id": 153954631,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524776718
    },
    {
        "content": "<p>Yup. just saw that. updated it.</p>",
        "id": 153954632,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524776741
    },
    {
        "content": "<p>\"It should always have at least one dependency to the core StructureDefinitions package hl7.fhir.StructureDefinitions\"... should be just core</p>",
        "id": 153954633,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524776763
    },
    {
        "content": "<p>done.</p>",
        "id": 153954634,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524776835
    },
    {
        "content": "<p>and just realised that if this works well, the other parts of Hl7 will want to use it. so hl7.use.core needs hl7.fhir.us.core or fhir.hl7.us.core</p>",
        "id": 153954635,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524776837
    },
    {
        "content": "<p>not sure about the global cache. why do we document that?</p>",
        "id": 153954636,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524776892
    },
    {
        "content": "<p>Meta packages:  I don't understand why separating out value sets and profiles is a good idea. it just sounds like a problem to me</p>",
        "id": 153954638,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524776940
    },
    {
        "content": "<p>I see that most package standards seem to have global caches, because the content is the same for each project.</p>",
        "id": 153954639,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524776941
    },
    {
        "content": "<p>No point in saving it in more than one place.</p>",
        "id": 153954640,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524776953
    },
    {
        "content": "<p>doesn't npm cover that?</p>",
        "id": 153954641,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524776962
    },
    {
        "content": "<p>npm does have a global cache...  but that cache might get very big with node (js) modules... And if you want fast / indexed conformance resources, it's probably much faster to have specific .fhir cache over a .npm cache.</p>",
        "id": 153954648,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524777177
    },
    {
        "content": "<p>I'm not sure about this. What I know is that many IGs manually include the correct version of the dependency in the version controlled source. the next version of the IG publisher will use npm for dependencies, but so far I haven't figured out how to reduce this necessity</p>",
        "id": 153954652,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524777304
    },
    {
        "content": "<p>Would including a package.json or package references in the ImplementationGuide resource solve that?</p>",
        "id": 153954655,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524777418
    },
    {
        "content": "<p>well, the new IG resource has a dependency structure that maps to the npm logically though it uses canonical URLs (that's going to be pain point). But that doesn't address the need for carrying the actual package around, because the principal use for that is where you're depending on an as yet unpublished version</p>",
        "id": 153954657,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524777564
    },
    {
        "content": "<p>An unpublished version can still have a name and a version.</p>",
        "id": 153954658,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524777619
    },
    {
        "content": "<p>so it can. but authors (a) don't assign the version as they roll over every few minutes and (b) share the package before they commit and publish</p>",
        "id": 153954661,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524777670
    },
    {
        "content": "<p>i was thinking about version \"latest\" for that. But that might introduce some problems too.</p>",
        "id": 153954662,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524777710
    },
    {
        "content": "<p>Btw, Ewout has noted too that the relation between package name and canonical urls do need more thought.</p>",
        "id": 153954665,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524777964
    },
    {
        "content": "<p>i think we're going to need automatic conversion at last from canonical -&gt; npm package name. I.m not sure we need the reverse?</p>",
        "id": 153954670,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524778134
    },
    {
        "content": "<p><a href=\"https://docs.google.com/document/d/1Skm7Bw_Q4hlfF7rBUay0CIuS9InN91EAyjHX7_QXGcA/edit?usp=sharing\" target=\"_blank\" title=\"https://docs.google.com/document/d/1Skm7Bw_Q4hlfF7rBUay0CIuS9InN91EAyjHX7_QXGcA/edit?usp=sharing\">https://docs.google.com/document/d/1Skm7Bw_Q4hlfF7rBUay0CIuS9InN91EAyjHX7_QXGcA/edit?usp=sharing</a></p>",
        "id": 153954685,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524778516
    },
    {
        "content": "<p>I moved the document here.</p>",
        "id": 153954686,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1524778520
    },
    {
        "content": "<p>thx</p>",
        "id": 153954688,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524778578
    },
    {
        "content": "<p>with regard to package resolution, what would work for me is if we defined 2 special values for version: 'current' (means to get whatever is current from the accepted CI build) and 'local' (means that the only working version is whatever you have locally on your store (whether that's disk or simplifier). If we define those in both IG and packages, that would solve most of the issues I've seen</p>",
        "id": 153954695,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524784891
    },
    {
        "content": "<p>what I don't see anywhere is a standard file name for the package. Something like [npm-name].tar.gz</p>",
        "id": 153954696,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524785003
    },
    {
        "content": "<p>this would replace the current validation.pack</p>",
        "id": 153954700,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524785837
    },
    {
        "content": "<p>and one solution for the package name problem is to put the npm package name in the IG resource.</p>",
        "id": 153954701,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524786029
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> I'm about to do a long flight, and I'm going to work on this. When publishing an implementation guide, I'm going to produce a file package.tgz that coontains:<br>\n- package/package.json - as described, so far. no doubt this will raise new issues<br>\n- package/[type]-[id].json - all the resources in the IG<br>\n- package/ig-r4.json - the IG in R4 format<br>\n- openapi/[id].schema.json - any generated json schema for the profiles<br>\n- openapi/[id].oai.json - any generated open  api files for the capability statements<br>\n- xml/[id].sch - any generated schematron files</p>",
        "id": 153955139,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525133317
    },
    {
        "content": "<p>I will share them here for people to review</p>",
        "id": 153955140,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525133330
    },
    {
        "content": "<p>To confirm, there's no json schema for any 'required' value sets?  If there is, then [id].schema.json wouldn't be guaranteed to be unique (though a collision is highly unlikely)</p>",
        "id": 153955145,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1525137661
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> concerning proposed file names:</p>\n<blockquote>\n<p>package/[type]-[id].json - all the resources in the IG</p>\n</blockquote>\n<p>When saving a new profile, Forge currently proposes a file name of the format \"[name].[type].xml\" (which the author can override). If desired, I could update the logic to generate file names of the same form \"[type]-[id].xml\", e.g. \"StructureDefinition-MyPatient.xml\", to align Forge output with the upcoming NPM tooling.</p>",
        "id": 153955162,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1525157466
    },
    {
        "content": "<p>That would be useful from just a file-sorting perspective too.</p>",
        "id": 153955216,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1525179585
    },
    {
        "content": "<p>json schema is only produced for profiles</p>",
        "id": 153955222,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525181357
    },
    {
        "content": "<p>I don't feel strongly about the naming</p>",
        "id": 153955223,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525181376
    },
    {
        "content": "<p>How does JSON Schema handle fixed bindings?</p>",
        "id": 153955254,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1525187871
    },
    {
        "content": "<p>enumeration - conceptually like schema</p>",
        "id": 153955357,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525248242
    },
    {
        "content": "<p>The real question is \"In what file are the enumerations maintained?\"</p>",
        "id": 153955375,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1525265091
    },
    {
        "content": "<p>Note: Not everyone saves an id in conformance resources. It's not mandatory field.</p>",
        "id": 153955923,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1525423695
    },
    {
        "content": "<p>The comments on <a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a> indicate that the only time it's not present is when submitted for a \"create\".  I can think of a few other times when it could be omitted, but I'd expect tools to enforce its presence in an IG.</p>",
        "id": 153955951,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1525435634
    },
    {
        "content": "<p>the IG publisher will always have assigned an id - has to be mandatory as part of an IG</p>",
        "id": 153956082,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525490655
    },
    {
        "content": "<p>the IG publisher doesn't mind if inputs don't have ids</p>",
        "id": 153956083,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525490666
    },
    {
        "content": "<p>ok, here's an example package for us-core:</p>",
        "id": 153956125,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525505331
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/EQov1jgprTSU_DQn3eDLRjJI/package.tgz\" target=\"_blank\" title=\"package.tgz\">package.tgz</a></p>",
        "id": 153956126,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525505343
    },
    {
        "content": "<p>comments welcome</p>",
        "id": 153956127,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525505346
    },
    {
        "content": "<p>so the biggest thing that is bugging me about NPM is the difference between npm package ids and canonical urls. Package ids are sort of globally unique, but when presented with a package id, how do you resolve it to an actual package? if it's in the cache, sure, but if it's not...? I don't understand how to do that..</p>",
        "id": 153956316,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525680988
    },
    {
        "content": "<p>so it seems to me that you need something like a packageid.ini in the user fhir package cache that maps from a canonical URL to a package id or vice versa, and that allows a user to specify a local override for a package id (to support development)</p>",
        "id": 153956317,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525681080
    },
    {
        "content": "<p>or have I missed something?</p>",
        "id": 153956318,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525681086
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span></p>",
        "id": 153956319,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525681089
    },
    {
        "content": "<p>A package server, like <a href=\"http://registry.npmjs.org\" target=\"_blank\" title=\"http://registry.npmjs.org\">registry.npmjs.org</a> can resolve that. We will bring a poc for a FHIR package server to Kohln. But I agree that it would be good if there is a rule / logical relation between a package id and a canonical url.</p>",
        "id": 153956329,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1525685959
    },
    {
        "content": "<p>there won't be a rule. I've been playing around with that and it isn't really practical.</p>",
        "id": 153956368,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525696478
    },
    {
        "content": "<p>so I think that we'll have to have a redirect file. but as for a poC for a package server - why woldn't we just use <a href=\"http://registry.npmjs.org\" target=\"_blank\" title=\"http://registry.npmjs.org\">registry.npmjs.org</a>?</p>",
        "id": 153956369,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525696531
    },
    {
        "content": "<p>so the IG publisher is going to migrate to the package based infrastructure by the end of the Koln meeting if we can figure out package resolution.</p>",
        "id": 153956372,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525696702
    },
    {
        "content": "<p>it's producing packages now, following the spec. I'll back generate packages and post them for all the existing published IGs, and then switch to doing dependency fetching using the npm infrastructure</p>",
        "id": 153956373,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525696757
    },
    {
        "content": "<p>btw, <span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> you haven't commented on my example package...</p>",
        "id": 153956395,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525698584
    },
    {
        "content": "<p>one last thing - the package cache does not contain tarballs? they are extracted?</p>",
        "id": 153956396,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525698584
    },
    {
        "content": "<p>Yes. In my poc i extracted them.</p>",
        "id": 153956479,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1525705164
    },
    {
        "content": "<p>And npm extracts them too.</p>",
        "id": 153956480,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1525705173
    },
    {
        "content": "<blockquote>\n<p>btw, <span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> you haven't commented on my example package...</p>\n</blockquote>\n<p>Looks good. My client tool can install it correctly.</p>",
        "id": 153956483,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1525705665
    },
    {
        "content": "<p>great. ok, we go with that for now</p>",
        "id": 153956504,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525707203
    },
    {
        "content": "<p>thx</p>",
        "id": 153956505,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525707213
    },
    {
        "content": "<p>so I asked above: \"as for a poC for a package server - why woldn't we just use <a href=\"http://registry.npmjs.org\" target=\"_blank\" title=\"http://registry.npmjs.org\">registry.npmjs.org</a>?\".. and the answer appears to be... because of canonical --&gt; npm package id. For which we should use <a href=\"http://registry.fhir.org\" target=\"_blank\" title=\"http://registry.fhir.org\">registry.fhir.org</a>, no? The only problem is, it doesn't support the latest IG resource on which I am building all this...</p>",
        "id": 153956684,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525721570
    },
    {
        "content": "<p>ok I have uploaded package.tgz files for all the FHIR base specifications</p>",
        "id": 153956782,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525727799
    },
    {
        "content": "<p>the IGPublisher will support 2 special version values for package versions:<br>\n- current - this refers to the most recent build performed by the auto-ig-publisher<br>\n- dev - this refers to your local build, or current if no local build exists</p>\n<p>These are only valid when developing implementation guides - neither value of version is acceptable when actually publishing</p>",
        "id": 153956893,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525761871
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> - both current and dev will be in the global package cache. current will have a timestamp on it - in the root package folder, which should be checked against the auto-builder json registry before using (unless offline). The dev package is written at the conclusion of a successful local build. we'll have to consider how to extend the support for current to simplifier.</p>",
        "id": 153956894,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525762067
    },
    {
        "content": "<p>Bottom line for editors:  When will these be implemented and we have to switch over?</p>",
        "id": 153956969,
        "sender_full_name": "Eric Haas",
        "timestamp": 1525792456
    },
    {
        "content": "<p>you have to 'switch over' now - in that some optional things are now mandatory</p>",
        "id": 153957035,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525810087
    },
    {
        "content": "<p>otherwise, you don't need to do anything to switch over.</p>",
        "id": 153957036,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525810112
    },
    {
        "content": "<p>actually, you might - the version of your dependencies is going to start mattering.</p>",
        "id": 153957037,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525810145
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> another issue: there's a 99 character limit on file names. If the resource name is &gt;22 characters long (and we have some) this means that a filename can get longer than that (8+64+5 = 77)</p>",
        "id": 153957038,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525810200
    },
    {
        "content": "<p>does that mean as soon as I start using the latest ig-pub... everything breaks including my preprocessing?</p>",
        "id": 153957078,
        "sender_full_name": "Eric Haas",
        "timestamp": 1525825218
    },
    {
        "content": "<p>the NPM package file has nothing to do with pre-processing.</p>",
        "id": 153957107,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525845094
    },
    {
        "content": "<p>what you will have to do is version all your dependencies. Which the build tool has not been enforcing, but will when I next commit.</p>",
        "id": 153957108,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525845125
    },
    {
        "content": "<p>as far as I know, nothing else should break... but it depends how far behind you are. You should always use the latest version. You might think you're avoiding pain but you're just kicking it down the road... and things are going to much more stable unless we start making breaking changes to the conformance resources again - in which case you really need to keep up because I'll be writing one off converters....</p>",
        "id": 153957109,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525845211
    },
    {
        "content": "<p>I have uploaded NPM package files for all IGs that are posted to <a href=\"http://hl7.org\" target=\"_blank\" title=\"http://hl7.org\">hl7.org</a> or <a href=\"http://fhir.org\" target=\"_blank\" title=\"http://fhir.org\">fhir.org</a> for all supported versions. (1.0.2, 1.4.0, 3.01, and 3.2.0+).</p>",
        "id": 153957110,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525846065
    },
    {
        "content": "<p>what about the CI builds?  can we still use a local source file?</p>",
        "id": 153957223,
        "sender_full_name": "Eric Haas",
        "timestamp": 1525878292
    },
    {
        "content": "<p>We will definitely need to be able to run the build process totally offline using locally cached files.</p>",
        "id": 153957231,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1525878947
    },
    {
        "content": "<p>I don't understand the question, Eric.</p>",
        "id": 153957410,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525895678
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> I really hate gzipped tarballs. What a stinking hard format to read... I've spent 4 hours on it so far, and I'm getting <em>nowhere</em></p>",
        "id": 153957411,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525895710
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I think Martijn uses libraries to deal with gzip/tar, don't think he implemented custom compression logic.</p>",
        "id": 153957498,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1525945992
    },
    {
        "content": "<p>I was trying to do the same. Only the libraries for gzip didn't work (i needed a secret undocumented setting, and my google work was deficient in finding it). And there was only one choice for tarball at all, but it worked great.</p>",
        "id": 153957634,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525968424
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> ok let's talk about a package server....</p>",
        "id": 153957636,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525968436
    },
    {
        "content": "<p>I know that I need 4 operations:</p>\n<ul>\n<li>list me the packages for a given (partial) package id </li>\n<li>list me packages for a canonical id (should all be the same package, different versions)</li>\n<li>return me a package</li>\n<li>return me a package and all it's dependencies</li>\n</ul>",
        "id": 153957637,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525968501
    },
    {
        "content": "<p>Another issue: I want to be able to use a global package cache from system services too, where there's no user context</p>",
        "id": 153957675,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525985292
    },
    {
        "content": "<p>system package cache (as opposed to user cache) will be at c:\\programdata\\.fhir or /var/lib/.fhir</p>",
        "id": 153957722,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526025189
    },
    {
        "content": "<p>I will be maintaining files like these now:</p>",
        "id": 153957723,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526025199
    },
    {
        "content": "<p><a href=\"http://hl7.org/fhir/us/core/package-list.json\" target=\"_blank\" title=\"http://hl7.org/fhir/us/core/package-list.json\">http://hl7.org/fhir/us/core/package-list.json</a></p>",
        "id": 153957724,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526025199
    },
    {
        "content": "<p>there's also <a href=\"http://hl7.org/fhir/package-list.json\" target=\"_blank\" title=\"http://hl7.org/fhir/package-list.json\">http://hl7.org/fhir/package-list.json</a></p>",
        "id": 153957725,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526025218
    },
    {
        "content": "<p><a href=\"http://wiki.hl7.org/index.php?title=FHIR_NPM_Package_Spec\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=FHIR_NPM_Package_Spec\">http://wiki.hl7.org/index.php?title=FHIR_NPM_Package_Spec</a></p>",
        "id": 153959288,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526186981
    },
    {
        "content": "<p>and <a href=\"http://wiki.hl7.org/index.php?title=FHIR_Package_Cache\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=FHIR_Package_Cache\">http://wiki.hl7.org/index.php?title=FHIR_Package_Cache</a></p>",
        "id": 153959289,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526188014
    },
    {
        "content": "<p>I'm not sure whether the first belongs in the spec? I think not. I'll be asking FHIR-I to adopt both of these as formal policy for FHIR Tooling authors</p>",
        "id": 153959290,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526188060
    },
    {
        "content": "<p>My leaning would be to put the first in the spec.  It's going to be pretty essential to tool users/developers</p>",
        "id": 153959297,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1526191427
    },
    {
        "content": "<p>(minor grammar edits to both)</p>",
        "id": 153959298,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1526191434
    },
    {
        "content": "<blockquote>\n<p>I know that I need 4 operations:</p>\n</blockquote>",
        "id": 153960026,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1526288786
    },
    {
        "content": "<blockquote>\n<ul>\n<li>list me the packages for a given (partial) package id </li>\n<li>list me packages for a canonical id (should all be the same package, different versions)</li>\n<li>return me a package</li>\n<li>return me a package and all it's dependencies</li>\n</ul>\n</blockquote>",
        "id": 153960028,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1526288831
    },
    {
        "content": "<p>The first and third are covered by the npm spec.</p>",
        "id": 153960029,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1526288850
    },
    {
        "content": "<p>The last one is a feature addressed by the client in most package resolving standards.</p>",
        "id": 153960030,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1526288875
    },
    {
        "content": "<p>The main question that we have to answer: do we want to <br>\nA - stay within the npm spec, <br>\nB - expand on the npm spec,<br>\nor C - let it go and define our own.</p>",
        "id": 153960032,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1526288933
    },
    {
        "content": "<p>is there an npm field to use for canonical URL?</p>",
        "id": 153960035,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526288977
    },
    {
        "content": "<p>if there is, I'd rather use it. If there isn't, then we have to extend</p>",
        "id": 153960036,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526288986
    },
    {
        "content": "<p>As far as I know the whole concept does not exist in npm.</p>",
        "id": 153960042,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1526289189
    },
    {
        "content": "<p>\"list me packages for a canonical id (should all be the same package, different versions)\"<br>\n1. What is the use case here?</p>",
        "id": 153961006,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1526386603
    },
    {
        "content": "<p>2. I think it is possible that multiple packages contain the same conformance resource.</p>",
        "id": 153961007,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1526386618
    },
    {
        "content": "<p>(not just different versions)</p>",
        "id": 153961009,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1526386629
    },
    {
        "content": "<p>canonical URL of the IG itself, not of any of the resources in it</p>",
        "id": 153961370,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526417033
    },
    {
        "content": "<p>use case - user knows the package id ,but not what versions are available</p>",
        "id": 153961371,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526417052
    },
    {
        "content": "<p>Updating the QI-Core IG to the latest publisher, the documentation for NPM says the NPM name is assigned by the product director for HL7 IGs. Has one already been assigned for QI-Core?</p>",
        "id": 153967897,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1528404691
    },
    {
        "content": "<p>it will be hl7.fhir.us.qicore</p>",
        "id": 153967900,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528404889
    },
    {
        "content": "<p>Following the pattern in US core, it would be: hl7.fhir.us.qicore</p>",
        "id": 153967901,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1528404897
    },
    {
        "content": "<p>Ah yes. same time.</p>",
        "id": 153967902,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1528404902
    },
    {
        "content": "<p>This new publisher is the cat's meow: NPM support, license declaration, nice work!</p>",
        "id": 153967908,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1528405364
    },
    {
        "content": "<p>The docs are really good too.</p>",
        "id": 153967909,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1528405400
    },
    {
        "content": "<p>thanks. I'm glad someone is happy</p>",
        "id": 153967910,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528405457
    },
    {
        "content": "<p>i'am very happy to, much cleaner separation, possibility to specify the ig for validation, thanks a lot!</p>",
        "id": 153967912,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1528405655
    },
    {
        "content": "<p>I admit I don't understand the whole package thing.  I'm doing the same thing in generating igs as before.   So I am not personally seeing any differences in creating a npm file.   What are the benefits again, who is the big beneficiary, and am I ignoring something I should be taking advantage of as an ig author?</p>",
        "id": 153968041,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528468446
    },
    {
        "content": "<p>Referencing the IG can be done with standard NPM package managers now, makes it easier to plug in to existing tooling.</p>",
        "id": 153968089,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1528481908
    },
    {
        "content": "<p>the big problem I had was how to manage references. There was a location property on  dependency in the json file, but everyone had to have the same literal path for that. Now, the package infrastructure can auto-resolve local references. that's the primary benefit for IT publishers, and more than justified the trivial cost of having to define npm-name and license.</p>",
        "id": 153968111,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528489108
    },
    {
        "content": "<p>otherwise there is many downstream benefits for tooling</p>",
        "id": 153968113,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528489133
    },
    {
        "content": "<p>ok got it</p>",
        "id": 153968117,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528489635
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> for the Case Reporting IG, I have set \"npm-name\": \"hl7.fhir.us.ecr\" - is this correct?</p>",
        "id": 153968269,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1528704046
    },
    {
        "content": "<p>no. it's hl7.fhir.uv.ecr (you were close though)</p>",
        "id": 153968270,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528704202
    },
    {
        "content": "<p>Ok, isn't uv universal realm? This is US realm...</p>",
        "id": 153968271,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1528704237
    },
    {
        "content": "<p>its not US realm. So I was assured when the project proposal went through. see <a href=\"http://hl7.org/fhir/uv/ecr/\" target=\"_blank\" title=\"http://hl7.org/fhir/uv/ecr/\">http://hl7.org/fhir/uv/ecr/</a></p>",
        "id": 153968272,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528704793
    },
    {
        "content": "<p>Ha! News to me... Will look into it!<br>\nPretty sure it wouldn't be of much use to us here, that's for sure...</p>",
        "id": 153968273,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1528704836
    },
    {
        "content": "<p>that's what I thought...</p>",
        "id": 153968274,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528704907
    },
    {
        "content": "<p>Maybe the FHIR version is supposed to be uv. Though it's pretty much a copy of the CDA, which is definitely US Realm. Looking for PSS now.</p>",
        "id": 153968275,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1528704954
    },
    {
        "content": "<p><a href=\"http://www.hl7.org/special/Committees/projman/searchableProjectIndex.cfm?action=edit&amp;ProjectNumber=1366\" target=\"_blank\" title=\"http://www.hl7.org/special/Committees/projman/searchableProjectIndex.cfm?action=edit&amp;ProjectNumber=1366\">http://www.hl7.org/special/Committees/projman/searchableProjectIndex.cfm?action=edit&amp;ProjectNumber=1366</a></p>",
        "id": 153968276,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1528705068
    },
    {
        "content": "<p>It's def US realm.</p>",
        "id": 153968277,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1528705082
    },
    {
        "content": "<p>Is it something we need to fix now or can it wait until later?</p>",
        "id": 153968278,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1528705097
    },
    {
        "content": "<p>I'm not sure.</p>",
        "id": 153968279,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528705200
    },
    {
        "content": "<p>Maybe later - more concerned with getting the CI build working again right now. Clearly I also have canonical base path wrong in ig.json (us vs uv).</p>",
        "id": 153968280,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1528705347
    },
    {
        "content": "<p>it was balloted as UV - see <a href=\"http://www.hl7.org/documentcenter/public_temp_4B4D4D8F-1C23-BA17-0CB0A5D31878A17B/ballots/2018JAN/Announcements/Announcement%20of%20Ballot%20Openings%20for%202018%20January%20Ballot%20Cycle.pdf\" target=\"_blank\" title=\"http://www.hl7.org/documentcenter/public_temp_4B4D4D8F-1C23-BA17-0CB0A5D31878A17B/ballots/2018JAN/Announcements/Announcement%20of%20Ballot%20Openings%20for%202018%20January%20Ballot%20Cycle.pdf\">http://www.hl7.org/documentcenter/public_temp_4B4D4D8F-1C23-BA17-0CB0A5D31878A17B/ballots/2018JAN/Announcements/Announcement%20of%20Ballot%20Openings%20for%202018%20January%20Ballot%20Cycle.pdf</a></p>",
        "id": 153968281,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528705388
    },
    {
        "content": "<p>Wow, crazy. I'll talk to the powers that be and get back to you tomorrow...</p>",
        "id": 153968282,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1528705428
    },
    {
        "content": "<p>That was the problem with the CI build - the US vs UV issue... It's running now. Not sure how it was running last week...</p>",
        "id": 153968284,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1528705825
    },
    {
        "content": "<p>Except now it's failing with stuff like this: <br>\n<code>base/ resource url mismatch: http://hl7.org/fhir/uv/ecr vs http://fhir.hl7.org/us/ecr/StructureDefinition/extension-trigger</code><br>\nI will leave it for now and find out what the project is really supposed to be UV or US realm - otherwise I'll be changing all the US to UV and will likely have to change them back later.</p>",
        "id": 153968285,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1528705978
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> So eCR is definitely supposed to be US Realm NOT UV. John Loonsk thinks the confusion may have come about because originally there was an idea that we might need to create a new public health resource - which obviously wouldn't have been US Realm? It should really have been balloted as US realm...</p>\n<p>So, can you change the npm name to US and <a href=\"http://hl7.org/fhir/uv/ecr/\" target=\"_blank\" title=\"http://hl7.org/fhir/uv/ecr/\">http://hl7.org/fhir/uv/ecr/</a> to reflect US Realm also?</p>",
        "id": 153968445,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1528745654
    },
    {
        "content": "<p>I don't think I can fix this.... will have to talk to FMG about it</p>",
        "id": 153968563,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528757857
    },
    {
        "content": "<p>Ok.<br>\nIs there anything I need to do? Or is it something you need to take care of?</p>",
        "id": 153968588,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1528766413
    },
    {
        "content": "<p>The NIB: <a href=\"http://www.hl7.org/special/Committees/tsc/ballotmanagement/ViewPastNIB.cfm?ballot_pool_id=1151\" target=\"_blank\" title=\"http://www.hl7.org/special/Committees/tsc/ballotmanagement/ViewPastNIB.cfm?ballot_pool_id=1151\">http://www.hl7.org/special/Committees/tsc/ballotmanagement/ViewPastNIB.cfm?ballot_pool_id=1151</a> <br>\nstates that it's US specific...</p>",
        "id": 153968589,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1528766566
    },
    {
        "content": "<p>Is any one interested in a connectathon track for FHIR packages in Baltimore (September)?</p>",
        "id": 153969574,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1528970107
    },
    {
        "content": "<p>Quoting Grahame:</p>\n<blockquote>\n<p>there's two parts to test: local cache interoperability and package resolution consistency</p>\n</blockquote>",
        "id": 153969576,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1528970184
    },
    {
        "content": "<p>and yes i have to be interested though I'll be under immense pressure. we can do it next weje in Boston?</p>",
        "id": 153969578,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528970235
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> (<span class=\"user-mention\" data-user-id=\"191407\">@Rick Geimer</span>) Grahame - is this something you can take to FMG this week? This issue is holding me up as the IG publisher won't build until the US vs UV mismatches are sorted (and I really don't want to go and rename everything to UV!)</p>",
        "id": 153970342,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1529354623
    },
    {
        "content": "<p>back to this: <span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> the package spec makes no rules around the possible values for the version string, and I just got bitten by this. We need to at least say: shall not contain a space or characters /\\:;,?</p>",
        "id": 153990340,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1535003971
    },
    {
        "content": "<p>Our spec currently says it should adhere to Semver and \"Version strings SHALL contain only letters, numbers, and the characters \".\", \"_\", and \"-\"</p>",
        "id": 153990512,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1535057335
    },
    {
        "content": "<p>Or do you mean something else?</p>",
        "id": 153990513,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1535057342
    },
    {
        "content": "<p><a href=\"http://wiki.hl7.org/index.php?title=FHIR_NPM_Package_Spec\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=FHIR_NPM_Package_Spec\">http://wiki.hl7.org/index.php?title=FHIR_NPM_Package_Spec</a></p>",
        "id": 153990514,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1535057357
    },
    {
        "content": "<p>I drafted the </p>\n<blockquote>\n<p>Version strings SHALL contain only letters, numbers, and the characters \".\", \"_\", and \"-\" </p>\n</blockquote>\n<p>slightly before I wrote what I wrote here</p>",
        "id": 153990520,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1535058700
    },
    {
        "content": "<p>I think we should update to include the other characters but I was looking for confirmation here on the details</p>",
        "id": 153990521,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1535058765
    },
    {
        "content": "<p>Ah. That explains. The initial proposal had a MUST for semver. I think there is still a strong case for that, since you tooling can use it to calculate compatibility. If people choose not to follow semver, it's much less certain whether a tool can still do that.</p>",
        "id": 153990699,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1535086610
    },
    {
        "content": "<p>Semver says you can only have numbers for major, minor and patch. Except for the prerelease which can contain alphanumerics and a dash. (and a more optionally + and an alpha-identifier for a build)</p>",
        "id": 153990700,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1535086683
    },
    {
        "content": "<p>For people, organizations that can't or won't follow semver - or whatever form of computability we choose, I don't see why we care what is in the version string at all.</p>",
        "id": 153990702,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1535086828
    },
    {
        "content": "<p>But personally I don't mind setting up some rules for it, like dot, underscore or dash and not spaces.</p>",
        "id": 153990704,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1535086873
    },
    {
        "content": "<p>well, because the cache specification is unimplementable if characters that are not valid file names on all platforms are allowed in the version</p>",
        "id": 153990705,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1535087237
    }
]