[
    {
        "content": "<p>I recently became aware of <a href=\"https://www.hl7.org/fhir/namingsystem.html\" title=\"https://www.hl7.org/fhir/namingsystem.html\">NamingSystem</a> and am wondering about its proper use in an IG. From the spec</p>\n<blockquote>\n<p>The NamingSystem resource identifies the existence of a code or identifier system, and its possible and preferred identifiers. The key difference between the resources is who creates and manages them - CodeSystem resources are managed by the owner of the code system resource, who can properly define the features and content of the code system. NamingSystem resources, on the other hand, are frequently defined by 3rd parties that encounter the code system in use, and need to describe the use, but do not have the authority to define the features and content. Additionally, there may be multiple authoritative NamingSystem resources for a code system, but there should only be one CodeSystem resource.</p>\n</blockquote>\n<p>So it sounds like if I'm using an external code system that I don't have authority over (e.g., <a href=\"http://www.genenames.org\" title=\"http://www.genenames.org\">http://www.genenames.org</a> or <a href=\"http://www.ncbi.nlm.nih.gov/clinvar\" title=\"http://www.ncbi.nlm.nih.gov/clinvar\">http://www.ncbi.nlm.nih.gov/clinvar</a>) to be used in a CodeableConcept, I should describe it in a NamingSystem in the IG. Is this correct?</p>",
        "id": 192678849,
        "sender_full_name": " Bob Milius",
        "timestamp": 1585840084
    },
    {
        "content": "<p>NamingSystem is the only choice for identifier systems.  For code systems, you have a choice of CodeSystem or NamingSystem.  CodeSystem allows you to convey more detail about the behavior of the code system, even if you don't have the content.  There's no strict requirement that you be the authoritative source to be able to expose metadata or content using CodeSystem.  NamingSystem is primarily about knowing what the identifiers are and supporting translation between them.  CodeSystem is more about use by terminology services.  In theory, you might have both.  <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span>, has vocab come up with any clearer guidance about when to use CodeSystem vs. NamingSystem vs. both?</p>",
        "id": 192679358,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1585840258
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> , I'm having a some difficulty reconciling these two</p>\n<blockquote>\n<p>There's no strict requirement that you be the authoritative source to be able to expose metadata or content using CodeSystem</p>\n</blockquote>\n<p>and from the <a href=\"https://www.hl7.org/fhir/namingsystem.html\" title=\"https://www.hl7.org/fhir/namingsystem.html\">NamingSystem spec</a></p>\n<blockquote>\n<p>CodeSystem resources are managed by the owner of the code system resource, who can properly define the features and content of the code system</p>\n</blockquote>\n<p>I can see multiple IGs describing <a href=\"http://genenames.org\" title=\"http://genenames.org\">genenames.org</a>. Would each on have its own CodeSystem describing it?</p>",
        "id": 192681307,
        "sender_full_name": " Bob Milius",
        "timestamp": 1585840754
    },
    {
        "content": "<p>Just as there can be multiple Condition instances talking about the same problem (from the perspective of different providers/systems), you can also have different CodeSystem instances talking about the same CodeSystem.  Ideally, every code system author would produce a single authoritative CodeSystem instance that would simply be propagated and cached.  However, there are lots of CodeSystem authors that aren't FHIR-aware (or HL7-aware or even terminology-aware), so that ideal state is hard to get to.  In some cases, HL7 takes on responsibility for publishing external terminologies in a standards-friendly way, but that's not always possible (for technical, licensing and/or workload reasons).</p>",
        "id": 192682074,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1585841023
    },
    {
        "content": "<p>Thanks for the clarification. I also only used NamingSystems for Identifier Namespaces. But i agree with Bob: the guidance on the NamingSystem Page is misleading in the part about CodeSystems</p>",
        "id": 192686619,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1585842746
    },
    {
        "content": "<p>I already asked in the hapi thread, but as we are talking about it now: In R5 NamingSystem has a canonicalUri. I expected that this uri would be the same as one of the uniqueIdentifiers, but it isn't.<br>\nRelated question: it would be nice to be able to bind Identifier to NamingSystems like we are binding CodeableConcepts to ValueSets.</p>",
        "id": 192686941,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1585842871
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191451\">Patrick Werner</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Use.20of.20NamingSystem.20in.20an.20IG.3F/near/192686941\" title=\"#narrow/stream/179252-IG-creation/topic/Use.20of.20NamingSystem.20in.20an.20IG.3F/near/192686941\">said</a>:</p>\n<blockquote>\n<p>Related question: it would be nice to be able to bind Identifier to NamingSystems like we are binding CodeableConcepts to ValueSets.</p>\n</blockquote>\n<p>Is this not possible with slicing?</p>",
        "id": 192687251,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1585842985
    },
    {
        "content": "<p>you could slice an Identifier and fix the System to a string, but not to a NamingSystem, which could contain several system strings for the same Namingsystem</p>",
        "id": 192687353,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1585843037
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> Vocab WG has had some discussions on different occasions, but so far we haven't developed clearer specific guidance about when to use CodeSystem vs. NamingSystem vs. both, although we definitely agree that there is a need for that.  We should be able to bring up the issue on the call today if we're ready to try to move that forward.  But FHIR-I currently owns the NamingSystem resource.  How would you suggest would be best to proceed (in both WGs, and otherwise)?</p>",
        "id": 192694697,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1585846099
    },
    {
        "content": "<p>If we have clear guidance on when to use each (which probably best comes from the vocab WG), I'm pretty sure FHIR-I will be happy to update the intro section of the NamingSystem resource to cover it</p>",
        "id": 192694937,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1585846203
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> I argued long and hard against putting a canonical URL on NamingSystem because I figured it would inevitably be confusing - because it's <em>not</em> actually one of the URIs you can use in the 'system' element :(</p>",
        "id": 192695044,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1585846249
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Use.20of.20NamingSystem.20in.20an.20IG.3F/near/192695044\" title=\"#narrow/stream/179252-IG-creation/topic/Use.20of.20NamingSystem.20in.20an.20IG.3F/near/192695044\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191451\">Patrick Werner</span> I argued long and hard against putting a canonical URL on NamingSystem because I figured it would inevitably be confusing - because it's <em>not</em> actually one of the URIs you can use in the 'system' element :(</p>\n</blockquote>\n<p>I agree on the confusing part. If there was a Binding Identifier -&gt; NamingSystem.uri i could see the benefit here. As i can declare a binding to multiple system uris without multiple slices.</p>",
        "id": 192702669,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1585849959
    },
    {
        "content": "<p>But having the same canonical uri as one of the uniqueId.values would be possible? I naturally would do it that way.</p>",
        "id": 192702955,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1585850094
    },
    {
        "content": "<p>You can, but if that identifier then gets deprecated - as may happen - you can't very well change the canonical URL</p>",
        "id": 192717337,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1585857308
    },
    {
        "content": "<p>I think it would be inappropriate - the canonical URI on the naming system represents the identify of the naming statement</p>",
        "id": 192717391,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585857334
    },
    {
        "content": "<p>Then a naive question: what's the benefit of the canonical url? I can't bind to it as far as i understood. So is there a use-case for it?</p>",
        "id": 192723361,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1585860149
    },
    {
        "content": "<p>without a canonical URL, there's no real way to refer to it as as statement. And we have all sorts of infrastructure that manages content and refers to it via canonical URLs. Except for Naming system, that never fits into that infrastructure because of this</p>",
        "id": 192723836,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585860375
    },
    {
        "content": "<p>I've used NamingSystem to document origin of the identifier and other stuff - but it will only act as a sort of documentation</p>",
        "id": 192761981,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1585894739
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> <span class=\"user-mention\" data-user-id=\"195036\">@Carol Macumber</span>  NamingSystem needs to be discussed in vocab ASAP. It seems to me we need to restrict the use of namingsystem to very few use cases (honestly I think it should disappear), open up the use of codesystem to include how it is used <em>in the majority of cases now</em> which is as an artifact created by a FHIR \"designer\" to represent something they need <em>but do not control</em>, and then clean up the documentation. IMHO I think we need to use codesystem for a wider range of situations then our documentation currently indicates. We might want to move this discussion (again) to terminology stream?</p>",
        "id": 193209937,
        "sender_full_name": "Robert McClure",
        "timestamp": 1586275240
    },
    {
        "content": "<p>We can certainly move the discussion of the use (or not) of NamingSystem with code systems to the terminology stream.</p>",
        "id": 193211655,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1586275889
    },
    {
        "content": "<p>Conversation moved here: <a href=\"#narrow/stream/179202-terminology/topic/NamingSystem\" title=\"#narrow/stream/179202-terminology/topic/NamingSystem\">https://chat.fhir.org/#narrow/stream/179202-terminology/topic/NamingSystem</a></p>",
        "id": 193214270,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1586277033
    }
]