[
    {
        "content": "<p>The code block width not limited to 80 char.  For example when have base64 data.  Is there class I need to label it with or can we consider making that a part of the standard css?</p>",
        "id": 264203245,
        "sender_full_name": "Eric Haas",
        "timestamp": 1638989978
    },
    {
        "content": "<p>we can consider that though I think of it as a feature for base64 data</p>",
        "id": 264206277,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1638991214
    },
    {
        "content": "<p>is the base64 data already split by newlines? i.e. does <code>&lt;pre&gt;</code> work?</p>\n<p>According to the Bootstrap 3 documentation <code>&lt;code&gt;</code> is for inline code, while <code>&lt;pre&gt;</code> is for code blocks.</p>",
        "id": 264207177,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1638991659
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"192685\">Vassil Peytchev</span> <a href=\"#narrow/stream/179252-IG-creation/topic/code.20block.20width.20not.20limited.20to.2080.20char/near/264207177\">said</a>:</p>\n<blockquote>\n<p>is the base64 data already split by newlines? i.e. does <code>&lt;pre&gt;</code> work?</p>\n<p>According to the Bootstrap 3 documentation <code>&lt;code&gt;</code> is for inline code, while <code>&lt;pre&gt;</code> is for code blocks.</p>\n</blockquote>\n<p>sometimes it is and sometimes is not based on how is generated.  Do we stipulate anywhere that it should be formatted some way?</p>",
        "id": 264227198,
        "sender_full_name": "Eric Haas",
        "timestamp": 1639000870
    },
    {
        "content": "<p>MnM just approved that we'll <em>clarify</em> in R5 that whitespace is not allowed in base64Binary. This is not a new rule, and it's not our rule either - it comes from the RFC, though it's often not followed in other specifications</p>",
        "id": 264227359,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639000972
    },
    {
        "content": "<p>yes for markdown  <code>~~~...~~</code> is rendered as &lt;pre&gt;  tags.  That is what I meant.</p>",
        "id": 264227410,
        "sender_full_name": "Eric Haas",
        "timestamp": 1639001016
    },
    {
        "content": "<p>make a git issue?</p>",
        "id": 264227599,
        "sender_full_name": "Eric Haas",
        "timestamp": 1639001123
    },
    {
        "content": "<p>i am thinking something like</p>\n<div class=\"codehilite\" data-code-language=\"CSS\"><pre><span></span><code><span class=\"nt\">pre</span><span class=\"p\">.</span><span class=\"nc\">base64</span> <span class=\"p\">{</span>\n    <span class=\"k\">white-space</span><span class=\"p\">:</span> <span class=\"kc\">pre-wrap</span><span class=\"p\">;</span>\n    <span class=\"k\">word-wrap</span><span class=\"p\">:</span> <span class=\"kc\">break-word</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 264255965,
        "sender_full_name": "Eric Haas",
        "timestamp": 1639024403
    },
    {
        "content": "<p>the question for me is why people want to see the base64. it's not like the characters matter to anyone.</p>",
        "id": 264263993,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639033761
    },
    {
        "content": "<p>I construct inline transactions to illustrate from actual valid examples using {% include_relative %}. My expectation is that the transaction will work as if created in Postman.</p>",
        "id": 264267856,
        "sender_full_name": "Eric Haas",
        "timestamp": 1639037491
    }
]