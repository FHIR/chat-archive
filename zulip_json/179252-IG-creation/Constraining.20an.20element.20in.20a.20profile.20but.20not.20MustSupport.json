[
    {
        "content": "<p>In all of my profiles, for any element that I am constraining (or even not constraining but intending to use) I mark it as MustSupport.  I've always wondered what does it mean in a non-abstract profile to constrain an element from the base resource (or from a dependent IG) and not mark it as MustSupport?  Does it make sense to say \"if you are going to use this element in the context of this guide, you must use this binding or it can't repeat, or xxx\"?  I'm not denying that it might make sense, but I can't think of a case where it would, so I'd love to hear from others that have a good case for doing this (constraining an element but not marking it as MS).</p>",
        "id": 237440529,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1620190153
    },
    {
        "content": "<p>It’d be super rare.  You’d be saying “The value of this doesn’t matter for the use case, but it’d be erroneous if this tighter constraint weren’t met.</p>",
        "id": 237441785,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1620191122
    },
    {
        "content": "<p>It's almost like we need an opt out rather than an opt in for Must Support because you basically just have to add it everywhere you constrain anything... (Kidding, kind of.)</p>",
        "id": 237450735,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1620198774
    },
    {
        "content": "<p>fixed value stuff - not relevant to the use case - that would be contrained but not must-support</p>",
        "id": 237455389,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1620201496
    },
    {
        "content": "<p>I think it is as meaningful as  a preferred binding.  You are signaling that it would be nice to have this element but a lot of  implementers are going to ignore it.</p>",
        "id": 237504448,
        "sender_full_name": "Eric Haas",
        "timestamp": 1620225090
    },
    {
        "content": "<p>Most of the times you're not going to constrain stuff you don't care about.  But in some cases you might.  Simple example: constraining Patient.deceased[x] to be max=0 or have an optional fixed value of deceasedBoolean=false.  It's not going to be mustSupport.  You don't need systems to support deceased or store or display or do anything with it, but you DO want to say that it's non-conformant to send a patient that is deceased.</p>",
        "id": 237518834,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1620229722
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Constraining.20an.20element.20in.20a.20profile.20but.20not.20MustSupport/near/237455389\">said</a>:</p>\n<blockquote>\n<p>fixed value stuff - not relevant to the use case - that would be contrained but not must-support</p>\n</blockquote>\n<p>Hmm, that makes sense but I think I have still been setting those to must-support.  Good to think about going forward.</p>",
        "id": 237518939,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1620229777
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191401\">Eric Haas</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Constraining.20an.20element.20in.20a.20profile.20but.20not.20MustSupport/near/237504448\">said</a>:</p>\n<blockquote>\n<p>I think it is as meaningful as  a preferred binding.  You are signaling that it would be nice to have this element but a lot of  implementers are going to ignore it.</p>\n</blockquote>\n<p>I've never had a profile where I needed to say \"it would be nice to send this element and if you do, send it like this\" but I could potentially see that.</p>",
        "id": 237519167,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1620229862
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Constraining.20an.20element.20in.20a.20profile.20but.20not.20MustSupport/near/237518834\">said</a>:</p>\n<blockquote>\n<p>Most of the times you're not going to constrain stuff you don't care about.  But in some cases you might.  Simple example: constraining Patient.deceased[x] to be max=0 or have an optional fixed value of deceasedBoolean=false.  It's not going to be mustSupport.  You don't need systems to support deceased or store or display or do anything with it, but you DO want to say that it's non-conformant to send a patient that is deceased.</p>\n</blockquote>\n<p>Right, constraining something out would obviously not be must-support.</p>",
        "id": 237519245,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1620229897
    },
    {
        "content": "<p>Setting a fixed value can too.  I have cases where I set Task.intent to a fixed value - and don't make it mustSupport - because mustSupport says \"must display, allow data capture and allow storage\" - and there's no expectation to do any of those things.</p>",
        "id": 237543722,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1620239374
    }
]