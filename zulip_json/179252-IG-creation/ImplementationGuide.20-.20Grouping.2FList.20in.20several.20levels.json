[
    {
        "content": "<p>FHIR-I would like some feedback on the proposed resolution for the following JIRA tracker: </p>\n<p><a href=\"https://jira.hl7.org/browse/FHIR-25458\">https://jira.hl7.org/browse/FHIR-25458</a></p>\n<p>Repeated here for convenience:</p>\n<p>Drop the notion of 'grouping' and grouping references from the ImplementationGuide resource</p>\n<p>Define an IG Parameter that points to a List resource that defines the groupings to use when generating the table of contents (determines order of artifacts in the ToC).  Like the parameter for terminology settings, this can either be a file location or a # reference to a contained resource.</p>\n<p>The base template will generate a list if you don't specify one.  If you don't use the template and don't specify the parameter, then the order of the artifact entries in the ToC will be arbitrary</p>\n<p>The List can point to sub-lists if there's a desire for greater hierarchy.</p>\n<p>Will use List.title for the grouping name and define a standard extension to allow providing a description of the List.  (Will make a change request to consider having this be a core element for R5?)</p>\n<p>Will change the base template to produce the artifact list from the List resources rather than groupings.<br>\nIf someone wants to use the same mechanism to define alternate lists such that there are multiple orthogonal artifact lists navigable in different ways, they can, but only one can be primary and drive the ToC.</p>\n<p>At some point, could explore whether some portions of the menu could be generated from these lists, but that's a separate discussion.</p>\n<p>The anchor points used in the artifacts page would be driven by <a href=\"http://List.id\">List.id</a></p>\n<p><span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> <span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span></p>",
        "id": 219139972,
        "sender_full_name": "Rick Geimer",
        "timestamp": 1607376105
    },
    {
        "content": "<p>Thanks for this. Apologies for missing the call.<br>\nI think the suggested resolution makes sense.  A few thoughts: </p>\n<ol>\n<li>With this solution, do we still need to list the resources in the IG? It would make sense if this solution also covers that. We could add an extension to replace implementationguide.resource.exampleCanonical.</li>\n</ol>",
        "id": 219141606,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607376929
    },
    {
        "content": "<ol start=\"2\">\n<li>Just to share athought I had meanwhile - I've wondered if Composition would be more suited than List?  just  because it includes nested sections and has a .text attribute already.</li>\n</ol>",
        "id": 219141636,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607376943
    },
    {
        "content": "<p>I'm happy to provide some examples (and help with adapting the template of course)</p>",
        "id": 219141873,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607377056
    },
    {
        "content": "<p>I'd prefer List to overloading the usage of Composition.  A List of Lists seems to me to be a better organization than one large resource.  If we're going to have a monolithic resource, we can stick with adding levels to ImplementationGuide</p>",
        "id": 219142367,
        "sender_full_name": "David Pyke",
        "timestamp": 1607377331
    },
    {
        "content": "<p>The idea from Composition came when I was creating content - I realized that this is actually an authored set of resources, with a focus on presentation, and I realized that besides the <code>title</code> and <code>narrative</code>, the nesting would be really handy - you could say \"This section contains the profile, and sub-sections are the examples\" - this should look neat in the ToC and the template could pick it up quite easily</p>",
        "id": 219147540,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607380009
    },
    {
        "content": "<p>+1 on Composition for TOC generation...  especially if Sushi can build from a config sushi-config,yml</p>",
        "id": 219148241,
        "sender_full_name": "Eric Haas",
        "timestamp": 1607380417
    },
    {
        "content": "<p><a href=\"http://jira.hl7.org/browse/FHIR-25458\">FHIR#25458</a> is only about the Artifact Index page; e.g., using <code>List</code> to control the artifacts and how they are listed / grouped.  I think <code>Composition</code> would be something interesting to look into for an entire IG, but it doesn't feel like the right fit for just listing artifacts to me.</p>",
        "id": 219148571,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1607380597
    },
    {
        "content": "<p>if listing artifacts includes titles and descriptions of the groups and nesting,  then I am with  <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> , everytime I look at composition structure, I see a table of contents.</p>",
        "id": 219149165,
        "sender_full_name": "Eric Haas",
        "timestamp": 1607380979
    },
    {
        "content": "<p>but I am more interested in Sushi doing this for me whatever the structure(s) winds up being.  So asking  <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span>  his opinion.</p>",
        "id": 219149325,
        "sender_full_name": "Eric Haas",
        "timestamp": 1607381094
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> Yes, my idea (initially for List but also applicable for Composition) is that this would be supported in sushi - we'd have a fsh file (not necessarily sushi-config) and that creates the composition (and avoid those new extensions that were discussed recently). In my case, when I need to copy content across IGs, I would just copy the fsh files and I would not need to touch the ig.json - but that sushi feature would be a request for Sushi, once this Jira  is settled</p>",
        "id": 219149969,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607381541
    },
    {
        "content": "<ol>\n<li>The referenced List would be pointed to by file-path.  So long as that was just in input or some other folder not searched for resources, it wouldn't show up in the IG.  (We didn't talk about the possibility of how to find <em>other</em> lists though...  I guess we'd need extensions that pointed to all of them.</li>\n<li>That's actually somewhat appealing.  It has build in hierarchy and has both title and text, which takes care of label and description.  Composition is an 'organizer'.  It's fine if we're just using it to organize only the resources, not everything. The need to have independent Lists of Lists only really matters if you've got a tool generating some of the Lists and you're then compiling them into your own ordered List of Lists. <br>\nIf SUSHI is representing this, it should be the same way it represents Compositions (or Lists) generally - it shouldn't create a custom solution just for this I don't think.</li>\n</ol>",
        "id": 219150240,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607381730
    },
    {
        "content": "<p>Yes, sushi would just use the standard sushi way of creating Compositions.</p>",
        "id": 219150417,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607381846
    },
    {
        "content": "<p>One thing I did not think through was the impact of using Composition in multidimensional structuring of contents - I guess it would not change much?<br>\nOne Composition for artifacts grouped by type, other for artifacts grouped by topic (e.g. Vaccination vs Allergies vs Procedures).. (or one single Composition and different sections for each group)</p>",
        "id": 219150621,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607381964
    },
    {
        "content": "<p>The resources (whether list or composition) could be done as contained (inline in FSH) resources.</p>",
        "id": 219151040,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1607382210
    },
    {
        "content": "<p>why contained? contained in which resource?</p>",
        "id": 219151637,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607382622
    },
    {
        "content": "<p>The 'base' organizer used to generate the ToC can't be multi-dimensional.  Every artifact should appear in the hierarchy exactly once.  However, other Compositions that don't have that requirement could also be used and it's possible to have the artifact list be driven by a different organizer than the ToC.</p>",
        "id": 219151688,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607382677
    },
    {
        "content": "<p>Well, my first thought was contained in the IG resource. But I suppose that might get in the way of actual resources contained in the IG. Hmm, needs more thought.</p>",
        "id": 219151704,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1607382690
    },
    {
        "content": "<p>Agree that contained is possible, but shouldn't be a requirement.  (Formally speaking, 'contained' is appropriate as the organizers would presumably have no meaning/relevance if the IG went away.)</p>",
        "id": 219151736,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607382716
    },
    {
        "content": "<p>However, from a maintenance perspective, you might want different individuals to work on the organizer(s) than are allowed to mess with the IG itself.</p>",
        "id": 219151804,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607382746
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179252-IG-creation/topic/ImplementationGuide.20-.20Grouping.2FList.20in.20several.20levels/near/219151688\">said</a>:</p>\n<blockquote>\n<p>The 'base' organizer used to generate the ToC can't be multi-dimensional.  Every artifact should appear in the hierarchy exactly once.  However, other Compositions that don't have that requirement could also be used and it's possible to have the artifact list be driven by a different organizer than the ToC.</p>\n</blockquote>\n<p>Yes, the 'base' organizer could be a Composition but it could also be a section in the composition, right?</p>",
        "id": 219152198,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607383046
    },
    {
        "content": "<p>I suppose, though we'd then need to point to both the file and an id within the file</p>",
        "id": 219152866,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607383567
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179252-IG-creation/topic/ImplementationGuide.20-.20Grouping.2FList.20in.20several.20levels/near/219152866\">said</a>:</p>\n<blockquote>\n<p>I suppose, though we'd then need to point to both the file and an id within the file</p>\n</blockquote>\n<p>Unless the id was a magic value, like \"TOC\".</p>",
        "id": 219152903,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1607383622
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191380\">Elliot Silver</span> <a href=\"#narrow/stream/179252-IG-creation/topic/ImplementationGuide.20-.20Grouping.2FList.20in.20several.20levels/near/219152903\">said</a>:</p>\n<blockquote>\n<p>Unless the id was a magic value, like \"TOC\".</p>\n</blockquote>\n<p>That'd work</p>",
        "id": 219153344,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607383968
    },
    {
        "content": "<p>well I  was  thinking adding it as a YAML list to the sushi-config.yml  and foregoing using fsh and let sushi do all the work like it does for the ig resource :-)</p>",
        "id": 219153690,
        "sender_full_name": "Eric Haas",
        "timestamp": 1607384246
    },
    {
        "content": "<p>all this for a  stupid TOC. sigh..  If git didn't sort alphabetically we could just used the tree structure....</p>",
        "id": 219153973,
        "sender_full_name": "Eric Haas",
        "timestamp": 1607384479
    },
    {
        "content": "<p>It's not just sorting, it's names and descriptions.  We don't want to create custom YAML files all over.  We're trying to minimize the number of things that aren't proper resources.</p>",
        "id": 219154096,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607384559
    },
    {
        "content": "<p>it is a proper resource... I am talking about convenient data entry</p>",
        "id": 219154311,
        "sender_full_name": "Eric Haas",
        "timestamp": 1607384741
    },
    {
        "content": "<p>This only support my opinion that for  static web site should use the menu for navigation.  TOC are for pdfs.</p>",
        "id": 219154538,
        "sender_full_name": "Eric Haas",
        "timestamp": 1607384897
    },
    {
        "content": "<p>Data entry needs to be in one of the official syntaxes</p>",
        "id": 219154542,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607384901
    },
    {
        "content": "<p>.... or whatever gets the job done. :-)</p>",
        "id": 219154602,
        "sender_full_name": "Eric Haas",
        "timestamp": 1607384974
    },
    {
        "content": "<p>I think I'll need to see this in action before fully understanding it, but SUSHI can support it in whatever way makes sense.  One of the things SUSHI does is try to support graceful transitions from configuration changes -- so I wouldn't be surprised if we at least supported converting the old way (via IG groups) to the new way (Composition?) for a period of time to ease that transition.  As for how else SUSHI supports it, I'd have to see how it shakes out before I comment further.</p>",
        "id": 219156470,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1607386455
    },
    {
        "content": "<p>I got lost on a detail above.<br>\nI presume we can have one single Composition, with one section that works as a TOC, and other sections that work as other dimensions to group content, right?<br>\nthe section that works as a TOC could have the identifier as a magic value, but why not use Composition.section.code = \"IG_TOC\"</p>",
        "id": 219268966,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607464802
    },
    {
        "content": "<p>also, to make it fun, we can add pages (DocumentReference) as well as resources, right?</p>",
        "id": 219269104,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607464874
    },
    {
        "content": "<p>How would you reference a page as a DocumentReference?</p>",
        "id": 219269857,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607465286
    },
    {
        "content": "<p>point to the xhtml / md?</p>",
        "id": 219304314,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607498874
    },
    {
        "content": "<p>It would be nice if we could use compositions to provide the page content. Currently only the text is rendered, not sections.</p>",
        "id": 219315307,
        "sender_full_name": "Frank Oemig",
        "timestamp": 1607507426
    },
    {
        "content": "<p>From an authoring perspective, I don't think we want to go there.  Each page needs to be its own file.  We don't want all the pages glommed into a single resource.  That would make both authoring and source control pretty miserable.</p>",
        "id": 219350648,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607527412
    },
    {
        "content": "<p>Not a single one. But why not using the structures composition provides in case it is helpful?</p>",
        "id": 219357539,
        "sender_full_name": "Frank Oemig",
        "timestamp": 1607530053
    },
    {
        "content": "<p>My markdown is more robust as a standalone file for one</p>",
        "id": 219357837,
        "sender_full_name": "Eric Haas",
        "timestamp": 1607530176
    },
    {
        "content": "<p>( less surprises when rendered than when nested inside a resource)</p>",
        "id": 219357933,
        "sender_full_name": "Eric Haas",
        "timestamp": 1607530204
    },
    {
        "content": "<p>I do pull some content out of resources directly but editing directly in files is so much easier too.   it could be packaged in a composition if you want. just stick em all in a data folder and reference them from there using liquid tags.  it sounds a little like FHIR purity over practicality to me.</p>",
        "id": 219358636,
        "sender_full_name": "Eric Haas",
        "timestamp": 1607530440
    },
    {
        "content": "<p>One composition per page would be a huge amount of overhead for no obvious benefit.</p>",
        "id": 219367022,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607533897
    },
    {
        "content": "<p>IMO, I'm not fond of the idea of having a separate List resource to define the grouping of resources in an IG. It seems to me like it would be really easy for that List resource to deviate from the resources defined in the IG. And requires more logic to address issues like what happens when a resource defined in the List group doesn't existing the ImplementationGuide.definition.resource.</p>",
        "id": 219375377,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1607537585
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179252-IG-creation/topic/ImplementationGuide.20-.20Grouping.2FList.20in.20several.20levels/near/219367022\">said</a>:</p>\n<blockquote>\n<p>One composition per page would be a huge amount of overhead for no obvious benefit.</p>\n</blockquote>\n<p>that would be silly indeed. I didn't think it through, but Composition.section.entry would point to N DocumentReferences whose content.attachment points to the xml / md</p>",
        "id": 219382642,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607540740
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191505\">Sean McIlvenna</span> <a href=\"#narrow/stream/179252-IG-creation/topic/ImplementationGuide.20-.20Grouping.2FList.20in.20several.20levels/near/219375377\">said</a>:</p>\n<blockquote>\n<p>IMO, I'm not fond of the idea of having a separate List resource to define the grouping of resources in an IG. It seems to me like it would be really easy for that List resource to deviate from the resources defined in the IG. And requires more logic to address issues like what happens when a resource defined in the List group doesn't existing the ImplementationGuide.definition.resource.</p>\n</blockquote>\n<p>The List resource would not only deviate from the resources defined in the IG, it would replace it. No issue should happen when a resource in the List doesn't exist in the IG.definition.resource , because that is the intended situation.</p>",
        "id": 219382848,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607540826
    },
    {
        "content": "<blockquote>\n<p>but Composition.section.entry would point to N DocumentReferences whose content.attachment points to the xml / md</p>\n</blockquote>\n<p>and why is this indirection better that the direct reference in the IG resource?</p>",
        "id": 219382926,
        "sender_full_name": "Eric Haas",
        "timestamp": 1607540861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span> perhaps you assumed that the IG.definition.resource would still list all resources, and List would only be to structure them? That is not the intent (not mine, at least)</p>",
        "id": 219383007,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607540884
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191401\">Eric Haas</span> <a href=\"#narrow/stream/179252-IG-creation/topic/ImplementationGuide.20-.20Grouping.2FList.20in.20several.20levels/near/219382926\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>but Composition.section.entry would point to N DocumentReferences whose content.attachment points to the xml / md</p>\n</blockquote>\n<p>and why is this indirection better that the direct reference in the IG resource?</p>\n</blockquote>\n<p>You only have one IG, but you could have many Compositions, right? (again, this part I did not think through, so we can avbandon it. I'm just exploring)</p>",
        "id": 219383109,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607540940
    },
    {
        "content": "<p>Scenario: I'm done with Vaccination part in my Project IG. I want the whole thing - profiles, pages, extensions, model, examples, vocabulary, etc. to become a legal standard. I would send a single pack to the government people: </p>\n<ol>\n<li>\n<p>my resources<br>\n+</p>\n</li>\n<li>\n<p>my Composition with the structure that I need, including the profiles and examples already pointing to that profile, the pages, the models, etc.</p>\n</li>\n</ol>",
        "id": 219383491,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607541115
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span> I responded to your comment in Jira - we can discuss here or there (i think it's easier to get a broader discussion here.</p>",
        "id": 219397592,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607547882
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> , sure, we can chat here... I just see my email notifications from JIRA more predominantly than I do from <a href=\"http://chat.fhir.org\">chat.fhir.org</a> (for some reason).</p>",
        "id": 219404600,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1607551010
    },
    {
        "content": "<p>As I stated in JIRA:<br>\nI'm still pretty strongly opposed to this. Seems like a lot of extra resources, references, and more, to support multiple people working on different sections of the groups of resources in an IG. I'm also skeptical that the List/Composition resource would even give you all the functionality we need to replace ImplementationGuide.definition.resource; what about things like <code>exampleCanonical</code> and <code>exampleBoolean</code>? It also needs to be easy to determine what resources are in an implementation guide, and it should be supported by the server's _has search parameters (ex: I should be able to say, list all StructureDefinition resources that are part of the XX ImplementationGuide).</p>",
        "id": 219404619,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1607551023
    },
    {
        "content": "<p>I don't see a reason yet to be strongly opposed.  Let's start with that to see if that opposition is from any misunderstanding:</p>",
        "id": 219408740,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607552959
    },
    {
        "content": "<ol start=\"4\">\n<li>The goal is not only supporting more people working in parts of an IG (which is something that I consider a condition for better management of IGs, instead of one person handling everything), but especially to allow better structure - the TOC and the Artifact index are quite poor</li>\n</ol>",
        "id": 219409434,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607553359
    },
    {
        "content": "<ol start=\"5\">\n<li>The starting point is removing the ig.grouping. Do you oppose that? Do you think the grouping should only and always be defined as is now - one-dimension, flat groupings? Why? I think this is not good enough as IGs grow more complex.</li>\n</ol>",
        "id": 219409482,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607553368
    },
    {
        "content": "<ol start=\"6\">\n<li>If you really need to keep grouping as it is - for simple IGs, do you mean oppose adding the more advanced structuring as option? Or you mean that you don't have any issue with the Composition as long as the current grouping stays?</li>\n</ol>",
        "id": 219409494,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607553375
    },
    {
        "content": "<p>...</p>",
        "id": 219409502,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607553379
    },
    {
        "content": "<ol>\n<li>Knowing that the IG will include resources that are NOT defined in the ig.json, we don't always have the possibility to search using the _has, right? So is that a must have?</li>\n</ol>",
        "id": 219409515,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607553386
    },
    {
        "content": "<ol start=\"2\">\n<li>I'm sure we can easily find a solution for exampleCanonical - one that IMO is a bit better than the extension we need to have in sushi.  And that looks nicer in the ToC. No need for skepticism until we try /see</li>\n</ol>",
        "id": 219409551,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607553410
    },
    {
        "content": "<ol start=\"3\">\n<li>This is a lot of work for toolsmiths, but I would not be defending this proposal if I did not think that this is definitely worth the effort I will probably have with XSLTs. I want to support a clean process that does not have the IG editor as a bottleneck.</li>\n</ol>",
        "id": 219409609,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607553442
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span>  has brought up a coupla great points,  I forgot about the exampleBool/Ref  thing  - is not a feature of Comp/List and I am not a fan of repeating that either.   I generally don't use Group and don't look at the TOC .  If all we are concerned about is the TOC sorting then we can fix that with a better template so it looks more like this one: <a href=\"https://www.hl7.org/fhir/us/core/toc.html\">https://www.hl7.org/fhir/us/core/toc.html</a></p>",
        "id": 219416461,
        "sender_full_name": "Eric Haas",
        "timestamp": 1607557933
    },
    {
        "content": "<p>using liquid</p>",
        "id": 219416483,
        "sender_full_name": "Eric Haas",
        "timestamp": 1607557955
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> I've asked that we make some other improvements to the ToC before, as well :) I think the ToC is not very usable as it stands. I really would love for the ToC to be in a pop-up div on all pages, so that the user doesn't have to navigate to a separate page in order to look at the ToC. I'd also really like some search functionality on the ToC.<br>\nAt a minimum, I think it needs to be clear what each resource type is in the ToC, and the distinction between a page vs. a resource. In many cases, CodeSystem resources have the same name as ValueSet resources, so if they're both included in the same IG, then it is pretty much impossible to distinguish the difference between the two resources.<br>\nHowever, I digress... I'd ask that if we're considering improvements to the ToC, that we meet and brainstorm amongst a group of us.</p>",
        "id": 219417205,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1607558506
    },
    {
        "content": "<p>I think the point here that using a List/Comp does not solve this issue</p>",
        "id": 219418913,
        "sender_full_name": "Eric Haas",
        "timestamp": 1607559962
    },
    {
        "content": "<p>The rendering of the ToC is orthogonal.  The key thing is that there needs to be an ordered list of artifacts in order to produce a ToC.  It's also necessary to produce a navigable artifacts list.  When the list of artifacts gets too long (&gt;15 or so) you need to split them into groupings.  When it gets very long (&gt;150?) then you start to want a multi-layer hierarchy and perhaps even multiple orthogonal hierarchical ways of navigation (though one must be primary to allow a sequential ToC and section numbering).  Right now, we have no mechanism to support a multi-layer hierarchy in the ToC at all and no 'standard' way of maintaining one in IGs in general (though you could develop one manually, tooling can't check that it's complete/consistent).  We need a way to support that capability.</p>\n<p>Note that the question of what artifacts exist and what examples they're part of is orthogonal to the question of groupings.  I'm still expecting the IG to include a complete list of all artifacts (and what examples they're associated with).  My assumption was that the Composition/Lists/whatever would simply point to the artifacts, not that they'd be the authoritative list of the artifact contents.  We still need names and definitions for artifacts, etc.  Those wouldn't live in Composition or List.</p>",
        "id": 219427366,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607569452
    },
    {
        "content": "<blockquote>\n<p>I'm still expecting the IG to include a complete list of all artifacts (and what examples they're associated with)<br>\nWe still need names and definitions for artifacts, etc. Those wouldn't live in Composition or List.</p>\n</blockquote>\n<p>then the Comp/List is redundant and I am completely against that.   Why not allow the groupings to nest</p>\n<p>as far as tooling -  use a file tree in the source and tell the tool to suck up and group based on that. it will still sort alphabetically but is a step in the right direction.</p>",
        "id": 219428818,
        "sender_full_name": "Eric Haas",
        "timestamp": 1607571628
    },
    {
        "content": "<p>So here's a first idea for the ExampleCanonical:<br>\nFor one conformance resource , all the examples would be listed in a sub .section.<br>\nthat .section.code would be \"examples\" and the .section.focus would be the conformance resource.<br>\nIn the TOC, the examples would appear under the conformance resource(s), because they are in a sub section.<br>\nThe template /publisher would create the internal links as usual.</p>\n<p>This would also work for other things like history and testing</p>",
        "id": 219437890,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607584125
    },
    {
        "content": "<p>changing the tool to support a file tree in the source does not solve any problem - it was my first idea but I don't think it works.</p>",
        "id": 219438076,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607584360
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191505\">Sean McIlvenna</span> <a href=\"#narrow/stream/179252-IG-creation/topic/ImplementationGuide.20-.20Grouping.2FList.20in.20several.20levels/near/219417205\">said</a>:</p>\n<blockquote>\n<p>However, I digress... I'd ask that if we're considering improvements to the ToC, that we meet and brainstorm amongst a group of us.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span> that is what we are trying to do.</p>",
        "id": 219438184,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607584532
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> we could explore a way to include name and description with Composition.section.entry... - although that would be a step 2 or 3..?</p>",
        "id": 219438381,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607584789
    },
    {
        "content": "<p>I'll try and focus on the grouping only - leaving aside for now the menu, the exampleOf, etc.</p>",
        "id": 219438539,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607584959
    },
    {
        "content": "<p>I'm happy with the openness to revisit the resources. So let's do it right, without custom fsh or yaml, no assumptions that one editor handles it all.</p>",
        "id": 219438654,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1607585084
    },
    {
        "content": "<p>I was not clear... I was suggesting we hash this out on a call. Might be easier</p>",
        "id": 219489701,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1607614939
    },
    {
        "content": "<p>I  think we should have the option to add sort keys as front-matter to the pages (can hear Lloyd frowning) and extensions to the resources. that way the information lives with pages or artifacts.  you can create Lists and Compositions from them even!</p>",
        "id": 220332655,
        "sender_full_name": "Eric Haas",
        "timestamp": 1608260928
    },
    {
        "content": "<p>Definitely frowning.  Pages shouldn't have any metadata at all.  They should be bare XHTML or markdown.  Any metadata should be in the IG resource.  Just list them in the order you want them in.</p>",
        "id": 220333576,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1608262234
    }
]