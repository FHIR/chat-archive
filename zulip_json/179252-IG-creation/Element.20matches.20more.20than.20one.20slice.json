[
    {
        "content": "<p>I'm trying to add an entry slice to a profile based on CCDAonFHIR's Consult Note (@ Plan of Treatment.entry) to allow an entry conforming to the Dental ServiceRequest profile to be allowed as an optional entry reference. But I'm getting this error \"Profile <a href=\"http://hl7.org/fhir/us/dental-data-exchange/StructureDefinition/dental-consult-note\">http://hl7.org/fhir/us/dental-data-exchange/StructureDefinition/dental-consult-note</a>, Element matches more than one slice - sliceEntry, sliceEntry/dental_sliceEntry\". Is my slicing definition incorrect, or is this an IG Publisher thing? CI Build is here: <a href=\"https://build.fhir.org/ig/HL7/dental-data-exchange/\">https://build.fhir.org/ig/HL7/dental-data-exchange/</a></p>",
        "id": 247585434,
        "sender_full_name": "David deRoode",
        "timestamp": 1627566596
    },
    {
        "content": "<p>It's an error on your part.  You've said that you're slicing entry by profile.  slice_entry includes the profile ServiceRequest and slice_entry_dental includes DentalServiceRequest, which is a proper constraint on ServiceRequest.  Therefore, you can have an instance that's valid in multiple slices - and that's not allowed.  When you have slicing, your slicing rules much be such that every element in an instance is valid against exactly one (or if slicing is open, against zero) of the slices.  Being valid against more than one isn't allowed.</p>",
        "id": 247609181,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1627577138
    },
    {
        "content": "<p>Agreed, an instance should never be allowed to be valid against 2 profiles. That is not the intent here. In this case, instances must conform to DentalServiceRequest (and not base ServiceRequest). But disallowing reference to a base ServiceReqest when it is an allowable targetReference in the base profile is not allowed either. So, I'm stuck</p>",
        "id": 247617144,
        "sender_full_name": "David deRoode",
        "timestamp": 1627580641
    },
    {
        "content": "<p>If it conforms to DentalServiceRequest, it automatically complies with ServiceRequest.  If you allow ServiceRequest, then saying you also allow DentalServiceRequest is unnecessary and redundant.</p>",
        "id": 247620913,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1627582384
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Element.20matches.20more.20than.20one.20slice/near/247609181\">said</a>:</p>\n<blockquote>\n<p>It's an error on your part.  You've said that you're slicing entry by profile.  slice_entry includes the profile ServiceRequest and slice_entry_dental includes DentalServiceRequest, which is a proper constraint on ServiceRequest.  Therefore, you can have an instance that's valid in multiple slices - and that's not allowed...</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> -- it's actually <code>sliceEntry/dental_sliceEntry</code>, so he is <em>re-slicing</em> the <code>sliceEntry</code> slice.  Isn't it valid for a reslice to discriminate based on a tighter constraint of the parent slice?  Or am I missing something here?</p>",
        "id": 247620934,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1627582394
    },
    {
        "content": "<p>I'll admit that I don't see the utility of it (since the slice doesn't specify any additional constraints/rules) -- but it doesn't seem invalid to me.</p>",
        "id": 247621133,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1627582499
    },
    {
        "content": "<p>I'm not sure what's being attempted.  But it's not accomplishing anything - the base spec allows a whole bunch of resources.  The derived spec isn't constraining that.  If you want to say \"Hey, by the way, we'd like you to pay attention to this new profile in this context\", you can do that in documentation, but you can't do that via slicing.  Slicing is about constraining what's allowed.  If you're not constraining, you can't use it.</p>",
        "id": 247621176,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1627582518
    },
    {
        "content": "<p>The intent is to require references from plan_of_care.entry conform to DentalServiceRequest profile.</p>",
        "id": 247625727,
        "sender_full_name": "David deRoode",
        "timestamp": 1627584849
    },
    {
        "content": "<p>Then you shouldn't be slicing, you should just be constraining the target type.</p>",
        "id": 247626809,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1627585420
    },
    {
        "content": "<p>That will prohibit any other resource or any ServiceRequest that doesn't comply with the DentalServiceRequest profile.</p>",
        "id": 247626895,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1627585446
    },
    {
        "content": "<p>Thanks for explaining, constraining resolved the errors. I let my wishful thinking of not needing to reference targetProfiles that *are * the same as the base profile get the better of me here. All clear now.</p>",
        "id": 247633756,
        "sender_full_name": "David deRoode",
        "timestamp": 1627588911
    }
]