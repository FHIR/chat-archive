[
    {
        "content": "<p>The IG publisher (and/or validator) used to accept elements not in the order they are in the resource. The latest version does check for the order. I fail to understand why the order of the elements are so important in a differential part of a structure definition. Why cannot I add a differential element in an AllergyIntolerance profile with a path like \"note\" before a path like \"category\"? I would expect the snapshot generation step to correct this for me.</p>",
        "id": 215315510,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1604322368
    },
    {
        "content": "<p>If the order is wrong, the instance is non-conformant.  It's reasonable for the tool to yell at you.  (And the logic of snapshot generation is so over-the-top complicated, that trying to accommodate for 'out of order' and 'fix' it isn't a super reasonable ask.</p>",
        "id": 215322676,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1604326241
    },
    {
        "content": "<p>I was not aware that order mattered in JSON.</p>",
        "id": 215355189,
        "sender_full_name": "Eric Haas",
        "timestamp": 1604339939
    },
    {
        "content": "<p>Order of elements in an array (e.g. order of elements in the snapshot or differential) matters regardless of syntax.  If it didn't, you couldn't differentiate first names from middle names in the collection of HumanName.given</p>",
        "id": 215355479,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1604340078
    },
    {
        "content": "<p>Yes I am confusing the instances with elements array.</p>",
        "id": 215355799,
        "sender_full_name": "Eric Haas",
        "timestamp": 1604340213
    },
    {
        "content": "<p>I think the confusion is that elements, while being in an array, are generally <em>keyed</em> (i.e., identifiable by <code>id</code>).  In theory, one should be able to reconstruct the element array in the correct order.  That said, IIRC, some parts of the publisher do not use <code>id</code> but use <code>path</code> and element order instead.  This is particularly important with slices; if nested parts of slices are out of order, then you can end up in a world of hurt because the publisher keeps track of the <em>last</em> <code>sliceName</code> and applies that to the following elements until the path goes out of scope of the slice or an element w/ a new <code>sliceName</code> is encountered.</p>",
        "id": 215362922,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1604343742
    },
    {
        "content": "<p>Yes. Most elements are keyed, so the order is irrelevant then. For arrays the story is different. I understand that too.</p>",
        "id": 215839843,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1604666273
    },
    {
        "content": "<p>OK.  But just to be clear, <code>snapshot.element</code> and <code>differential.element</code> are arrays, so they need to be in the right order (even though each element may appear to be keyed).</p>",
        "id": 215845648,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1604669517
    }
]