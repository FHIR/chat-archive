[
    {
        "content": "<p>Can someone point me to some documentation and/or example of how to use pattern[x] in slicing?</p>",
        "id": 154020252,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1542822090
    },
    {
        "content": "<p>The genomics reporting IG uses it a lot.  What are you trying to do?</p>",
        "id": 154020258,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1542822498
    },
    {
        "content": "<blockquote>\n<p>The genomics reporting IG uses it a lot.  What are you trying to do?</p>\n</blockquote>\n<p>Trying a desperate attempt to get around the Error in discriminator at Observation.component:supplementalTypesComponent.code.coding: slicing found of which I have 100s</p>",
        "id": 154020259,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1542822561
    },
    {
        "content": "<p>Take a look at the profiles in the genomics-reporting IG.</p>",
        "id": 154020262,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1542822628
    },
    {
        "content": "<blockquote>\n<p>Take a look at the profiles in the genomics-reporting IG.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  I do not understand the spreadsheet rendering of StructureDefinitions. I have always needed to go to some other project that creates Structure definitions directly to try and find help. Maybe actual structure definitions are somewhere else than in the /resources dircetory?</p>\n<p>I tried pulling this out of the spread sheet in hopes that it would lead to something</p>\n<div class=\"codehilite\"><pre><span></span>http://hl7.org/fhir/uv/genomics-reporting/StructureDefinition/device-fish-probe\n</pre></div>\n\n\n<p>but I just get 404 errors.</p>",
        "id": 154020264,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1542822941
    },
    {
        "content": "<p>You can get to them like this: <a href=\"http://build.fhir.org/ig/HL7/genomics-reporting/StructureDefinition-device-fish-probe.json\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/genomics-reporting/StructureDefinition-device-fish-probe.json\">http://build.fhir.org/ig/HL7/genomics-reporting/StructureDefinition-device-fish-probe.json</a></p>",
        "id": 154020267,
        "sender_full_name": "Kevin Power",
        "timestamp": 1542823260
    },
    {
        "content": "<blockquote>\n<p>You can get to them like this: <a href=\"http://build.fhir.org/ig/HL7/genomics-reporting/StructureDefinition-device-fish-probe.json\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/genomics-reporting/StructureDefinition-device-fish-probe.json\">http://build.fhir.org/ig/HL7/genomics-reporting/StructureDefinition-device-fish-probe.json</a></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191913\">@Kevin Power</span>  that helped, not exactly an element definition that I am used to but is the jist of 'pattern' that the pattern itself is defined in the slice?</p>",
        "id": 154020272,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1542823664
    },
    {
        "content": "<p>The pattern is declared on the slice and reflects requirements the instance must match to be considered part of that slice.</p>",
        "id": 154020276,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1542824009
    },
    {
        "content": "<blockquote>\n<p>The pattern is declared on the slice and reflects requirements the instance must match to be considered part of that slice.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  I understand the <em>concept</em> its just the how to do the syntax. I am mapping certain PHD attributes to Observation.components. They are distinguished by the code.coding.code/system elements. Both the code and the system are fixed values to identify the slice. BUT I want to allow someone to express the same concept in a different coding system. For example, look at this component element</p>\n<div class=\"codehilite\"><pre><span></span>    &quot;component&quot;: [\n        {\n            &quot;code&quot;: {\n                &quot;coding&quot;: [\n                    {\n                        &quot;system&quot;: &quot;urn:iso:std:iso:11073:10101&quot;, // Identifies the slice along with code 68193\n                        &quot;code&quot;: &quot;68193&quot;\n                    }\n                                     //  put an additional  code system system/code value here if you want that expresses the same concept as above\n                ],\n                &quot;text&quot;: &quot;MDC_ATTR_SUPPLEMENTAL_TYPES&quot;\n            },\n            &quot;valueCodeableConcept&quot;: {\n                &quot;coding&quot;: [\n                    {\n                        &quot;system&quot;: &quot;urn:iso:std:iso:11073:10101&quot;,\n                        &quot;code&quot;: &quot;150588&quot;\n                    }\n                ],\n                &quot;text&quot;: &quot;MDC_MODALITY_SPOT&quot;\n            }\n        }\n    ]\n</pre></div>\n\n\n<p>That is why I have a slice on the code.coding. Is that extra slicing unnecessary?</p>",
        "id": 154020279,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1542824488
    },
    {
        "content": "<p>I removed the slicing on the Observation.component.code.coding element. Maybe it is not needed. So my effort looks as follows:</p>\n<div class=\"codehilite\"><pre><span></span>    &lt;element id=&quot;Observation.component&quot;&gt;\n      &lt;path value=&quot;Observation.component&quot; /&gt;\n      &lt;slicing&gt;\n        &lt;discriminator&gt;\n          &lt;type value=&quot;pattern&quot; /&gt;\n          &lt;path value=&quot;code.coding.code&quot; /&gt;\n        &lt;/discriminator&gt;\n        &lt;rules value=&quot;open&quot; /&gt;\n      &lt;/slicing&gt;\n    &lt;/element&gt;\n\n    &lt;!-- SUPPLEMENTAL TYPES COMPONENT --&gt;\n    &lt;element id=&quot;Observation.component:supplementalTypesComponent&quot;&gt;\n      &lt;path value=&quot;Observation.component&quot; /&gt;\n      &lt;sliceName value=&quot;supplementalTypesComponent&quot; /&gt;\n      &lt;short value=&quot;Supplemental Type: A further description of the measurement type.&quot; /&gt;\n      &lt;definition value=&quot;some text.&quot; /&gt;\n      &lt;comment value=&quot;More text&quot; /&gt;\n      &lt;patternCodeableConcept&gt;\n        &lt;code&gt;\n          &lt;coding&gt;\n            &lt;system value=&quot;urn:iso:std:iso:11073:10101&quot;/&gt;\n            &lt;code value=&quot;68198&quot;/&gt;\n          &lt;/coding&gt;\n        &lt;/code&gt;\n      &lt;/patternCodeableConcept&gt;\n    &lt;/element&gt;\n    &lt;element id=&quot;Observation.component:supplementalTypesComponent.code.text&quot;&gt;\n      &lt;path value=&quot;Observation.component.code.text&quot; /&gt;\n      &lt;definition value=&quot;It is recommended to display at least the reference identifier for the Supplemental-Types which is MDC_ATTR_SUPPLEMENTAL_TYPES&quot; /&gt;\n    &lt;/element&gt;\n    &lt;element id=&quot;Observation.component:supplementalTypesComponent.code.coding&quot;&gt;\n      &lt;path value=&quot;Observation.component.code.coding&quot; /&gt;\n      &lt;min value=&quot;1&quot; /&gt;\n    &lt;/element&gt;\n    &lt;element id=&quot;Observation.component:supplementalTypesComponent.code.coding.system&quot;&gt;\n      &lt;path value=&quot;Observation.component.code.coding.system&quot; /&gt;\n      &lt;min value=&quot;1&quot; /&gt;\n      &lt;fixedUri value=&quot;urn:iso:std:iso:11073:10101&quot; /&gt;\n    &lt;/element&gt;\n    &lt;element id=&quot;Observation.component:supplementalTypesComponent.code.coding.code&quot;&gt;\n      &lt;path value=&quot;Observation.component.code.coding.code&quot; /&gt;\n      &lt;definition value=&quot;68193 is the 32-bit nomenclature code indicating a &#39;Supplemental-Types&#39; value&quot; /&gt;\n      &lt;min value=&quot;1&quot; /&gt;\n      &lt;fixedCode value=&quot;68193&quot; /&gt;\n      &lt;binding&gt;\n        &lt;strength value=&quot;required&quot;/&gt;\n        &lt;valueSet value=&quot;http://hl7.org/fhir/uv/phd/ValueSet/11073MDCobject&quot;/&gt;\n      &lt;/binding&gt;\n    &lt;/element&gt;\n    &lt;element id=&quot;Observation.component:supplementalTypesComponent.value[x]:valueCodeableConcept&quot;&gt;\n      &lt;path value=&quot;Observation.component.valueCodeableConcept&quot; /&gt;\n      &lt;sliceName value=&quot;valueCodeableConcept&quot; /&gt;\n      &lt;definition value=&quot;The information determined as a result of making the observation, if the information is a code.&quot; /&gt;\n      &lt;min value=&quot;1&quot; /&gt;\n      &lt;type&gt;\n        &lt;code value=&quot;CodeableConcept&quot; /&gt;\n      &lt;/type&gt;\n    &lt;/element&gt;  and so-on\n</pre></div>\n\n\n<p>I hope this allows one to put in alternative coding systems ....</p>\n<p>But now I get this error</p>\n<div class=\"codehilite\"><pre><span></span>The value provided (&#39;68193&#39;) is not in the value set http://hl7.org/fhir/uv/phd/ValueSet/11073MDCobject (http://hl7.org/fhir/uv/phd/ValueSet/11073MDCobject, and a code is required from this value set) (error message = Access violation at address 0000000000B9CF8F in module &#39;FHIRServer.exe&#39;. Read of address 0000000000000000) (see Tx log)\n</pre></div>\n\n\n<p>I will say that the code 68193 is in the value set referenced.</p>",
        "id": 154020283,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1542825766
    },
    {
        "content": "<p>Your path for the pattern should just be code, not code.coding.code.   I.e. it needs to be the path to the element that contains the pattern.  The pattern will ensure that one repetition of coding matches the sub-elements specified.  It's totally fine to have other repetitions of coding that don't match.</p>",
        "id": 154020289,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1542826407
    },
    {
        "content": "<blockquote>\n<p>Your path for the pattern should just be code, not code.coding.code.   I.e. it needs to be the path to the element that contains the pattern.  The pattern will ensure that one repetition of coding matches the sub-elements specified.  It's totally fine to have other repetitions of coding that don't match.</p>\n</blockquote>\n<p>Thanks you. Will try</p>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  Didn't work so well. Got many more errors.</p>",
        "id": 154020335,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1542838780
    },
    {
        "content": "<p>Which were?</p>",
        "id": 154020385,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1542864147
    },
    {
        "content": "<blockquote>\n<p>Which were?</p>\n</blockquote>\n<p>The main error  of interest is </p>\n<div class=\"codehilite\"><pre><span></span>/f:StructureDefinition/f:differential/f:element/f:patternCodeableConcept    error   Undefined element &#39;code&#39;\n</pre></div>\n\n\n<p>which makes sense I would guess since the (pattern)CodeableConcept does not have a 'code' element. It has a coding.code element though.</p>\n<p>I am getting in the order of 1000 errors with this  (most of which are repeats). Is there a way I can get a list of these errors? Using code.coding.code it drops to 600</p>",
        "id": 154020435,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1542887692
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  Can I add the binding to my pattern?</p>\n<div class=\"codehilite\"><pre><span></span>&lt;patternCodeableConcept&gt;\n        &lt;code&gt;\n          &lt;coding&gt;\n            &lt;system value=&quot;urn:iso:std:iso:11073:10101&quot;/&gt;\n            &lt;code value=&quot;68198&quot;/&gt;\n                    &lt;binding&gt;\n                           &lt;strength value=&quot;required&quot;/&gt;\n                           &lt;valueSet value=&quot;http://hl7.org/fhir/uv/phd/ValueSet/11073MDCobject&quot;/&gt;\n                    &lt;/binding&gt;\n          &lt;/coding&gt;\n        &lt;/code&gt;\n      &lt;/patternCodeableConcept&gt;\n</pre></div>\n\n\n<p>The answer turns out to be NO</p>",
        "id": 154020438,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1542887850
    },
    {
        "content": "<p>Right.  Because a CodeableConcept doesn't contain an element named \"code\", just an element named \"coding\".</p>",
        "id": 154020482,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1542898989
    }
]