[
    {
        "content": "<p>In the current build for ImagingStudy the previous (3.5.0) series.identifier and series.instance.identifier elements have been changed from 'identifier' to 'uid', but the latest IG Publisher doesn't seem to recognize them: </p>\n<div class=\"codehilite\"><pre><span></span>The link &#39;StructureDefinition-ImagingStudy-uv-ips-definitions.html#ImagingStudy.series.uid&#39; for &quot;uid&quot; cannot be resolved\nThe link &#39;StructureDefinition-ImagingStudy-uv-ips-definitions.html#ImagingStudy.series.instance.uid&#39; for &quot;uid&quot; cannot be resolved\n</pre></div>\n\n\n<p>The other paths in ImagingStudy-uv-ips.structuredefinition.xml are resolving as expected.</p>",
        "id": 154018860,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1542293829
    },
    {
        "content": "<p>can I reproduce this?</p>",
        "id": 154019044,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1542351461
    },
    {
        "content": "<p>you should be able to - just build <a href=\"https://github.com/HL7/fhir-ips\" target=\"_blank\" title=\"https://github.com/HL7/fhir-ips\">https://github.com/HL7/fhir-ips</a></p>",
        "id": 154019053,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1542355026
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Did you ever look at this?  I'm still getting the error.</p>",
        "id": 154021341,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1543425002
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> Can you remove the constraint? The uid element is already a 1..1 element, so adding must-support seems odd.</p>",
        "id": 154021687,
        "sender_full_name": "John Moehrke",
        "timestamp": 1543502940
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> I see your point about must support on a 1..1 element, but that shouldn't be an error.  And there seems to be a fundamental issue here, as I note that the snapshot view rendered by the current IG Publisher (after first trashing the ig output and temp folders) is showing the <a href=\"http://series.id\" target=\"_blank\" title=\"http://series.id\">series.id</a> and <a href=\"http://series.instance.id\" target=\"_blank\" title=\"http://series.instance.id\">series.instance.id</a> elements, rather than the .uid elements as in the current build.  So something is out of sync.   <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>?</p>",
        "id": 154021715,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1543506971
    },
    {
        "content": "<p>okay, but does the problem go away if you remove these unnecessary constraints?</p>",
        "id": 154021727,
        "sender_full_name": "John Moehrke",
        "timestamp": 1543510464
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> ips doesn't build for me right now...?</p>",
        "id": 154021824,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1543525048
    },
    {
        "content": "<p>I'll check, but it's been building for us locally</p>",
        "id": 154021940,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1543537663
    },
    {
        "content": "<p>The last ips auto-build succeeded (as the previous ones have been).   But I've also noted that these particular errors don't actually show up in the qa in either the auto-build or when I build on Windows, but they do occur when I build on the Mac.  That is a consistent difference which seems to be showing a real issue which apparently may be masked when building on Windows (for whatever reason).  The snapshot view in both the auto-build and Windows output shows both an 'id' element (which doesn't exist in the core spec) <strong>plus</strong> the correct 'uid' element (and it has a little different rendering but is still an issue in the Mac build) - obviously that shouldn't be happening.</p>",
        "id": 154022117,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1543590986
    },
    {
        "content": "<p>that's bizarre</p>",
        "id": 154022173,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1543611362
    },
    {
        "content": "<p>agree - any thoughts?</p>",
        "id": 154022338,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1543709497
    },
    {
        "content": "<p>mainly that since I publish from windows, I can worry about it later</p>",
        "id": 154022571,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1543865621
    },
    {
        "content": "<p>ok - sounds like I should ignore it, too, then :)</p>",
        "id": 154022798,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1543940594
    },
    {
        "content": "<p>for now. I may have time next week now that I've published the ballots and R3/R4 conversion is nearly done</p>",
        "id": 154022850,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1543949243
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> minOccurs of 1 doesn't mean mustSupport=true.  You're free to ignore mandatory elements as a receiver, not let a user see them, not take them into account in decision support, or any of the other things that mustSupport might imply.</p>",
        "id": 154024293,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544485836
    },
    {
        "content": "<p>I was approaching it a different way... since cardionality is 1..1, there is little added value of mustSupport.  This cardiolnality was a change in R4 from prior ImagingStudy models...  I was just looking to help get <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> through being able to build his IG. I was just offering a hack that might have minimal negative impact.    I agree that mustSupport is defined in that IG however that IG wants, and thus it is very possible that the flag is needed in this case.</p>",
        "id": 154024299,
        "sender_full_name": "John Moehrke",
        "timestamp": 1544486540
    },
    {
        "content": "<p>There's significant added value.  1..1 says what will be present on the wire.  mustSupport says what you actually need to do something useful with.</p>",
        "id": 154024323,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544492220
    },
    {
        "content": "<p>1..1 doesn't imply you need to pay attention to it.</p>",
        "id": 154024324,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544492238
    },
    {
        "content": "<p>I think of 1..1 as implying \"must write\" but not \"must read\".</p>",
        "id": 154024333,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1544493752
    },
    {
        "content": "<p>It's a \"must write\" but it's not even a \"must write usefully\".  You can satisfy a 1..1 by sending a fixed value (or even an extension saying something like \"not applicable\") without exposing the element to a user or giving them a chance to provide a meaningful value.  On the other hand, if it's marked as mustSupport and mustSupport indicates that user entry must be allowed, that's a much tighter set of expectations.</p>",
        "id": 154024341,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544494794
    },
    {
        "content": "<p>mustSupport means nothing... it is given meaning in that Implementation Guide... so you can't make any statements about what mustSupport means until you indicate which IG is providing the rule for the tag.  <a href=\"http://build.fhir.org/conformance-rules.html#mustSupport\" target=\"_blank\" title=\"http://build.fhir.org/conformance-rules.html#mustSupport\">http://build.fhir.org/conformance-rules.html#mustSupport</a></p>",
        "id": 154024406,
        "sender_full_name": "John Moehrke",
        "timestamp": 1544535758
    },
    {
        "content": "<p>It always means <em>something</em>.  The specific meaning is variable.  The point is that 1..1 mustSupport=false and 1..1 mustSupport=true can drive very different implementation expectations.</p>",
        "id": 154024435,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544543322
    }
]