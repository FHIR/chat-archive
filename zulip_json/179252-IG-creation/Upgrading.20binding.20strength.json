[
    {
        "content": "<p>We have a number of profiles that upgrade the base binding strength from preferred to required or extensible. The differential then contains:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;binding&gt;</span>\n  <span class=\"nt\">&lt;strength</span> <span class=\"na\">value=</span><span class=\"s\">&quot;extensible&quot;</span> <span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/binding&gt;</span>\n</pre></div>\n\n\n<p>So it does not repeat the full binding spec from the base:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;binding&gt;</span>\n    <span class=\"nt\">&lt;strength</span> <span class=\"na\">value=</span><span class=\"s\">&quot;preferred&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;description</span> <span class=\"na\">value=</span><span class=\"s\">&quot;LegalStatusCodelist&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;valueSetReference&gt;</span>\n      <span class=\"nt\">&lt;reference</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://decor.nictiz.nl/fhir/ValueSet/2.16.840.1.113883.2.4.3.11.60.40.2.14.3.2--20171231000000&quot;</span> <span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;display</span> <span class=\"na\">value=</span><span class=\"s\">&quot;JuridischeStatusCodelijst&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/valueSetReference&gt;</span>\n<span class=\"nt\">&lt;/binding&gt;</span>\n</pre></div>\n\n\n<p>This leads to onGenerate issues like this</p>\n<p><code>No value set specified at Procedure.extension:legalStatus.valueCodeableConcept:valueCodeableConcept (no url)</code></p>\n<p>How worried should I be? I'd really like to not have to restate the full binding in the differential for risk of inconsistencies.</p>",
        "id": 188198341,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1581680371
    },
    {
        "content": "<p>I don't think that's legitimate.  If you're declaring binding, I'd expect you to always declare \"to what\".  (Most typically you're binding to something else anyhow, and if the parent changes, you'd likely want to evaluate if you wanted to change the value set for the derived spec.</p>",
        "id": 188214269,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1581693096
    },
    {
        "content": "<p>Maybe this is the exception to the rule then. Really all I do is upgrade the binding strength. Because nothing else differs, Forge then writes just the strength in the differential. Looks like quite sound behavior to me.</p>\n<p>Unless you are saying that upgrading the binding strength (constraining the binding strength if you will) is not a supported use case</p>",
        "id": 188221574,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1581697477
    },
    {
        "content": "<p>I think there's an implicit assumption that the binding needs to declare a value set, a description or provide an extension that says something else, but we've never made that implicit.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ?</p>",
        "id": 188225391,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1581700119
    },
    {
        "content": "<p>If we're taking votes, I'm with <span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span> on this one...  If a child profile just wants to say that it's being more strict than the parent (e.g., making the <code>preferred</code> binding to XYZ an <code>extensible</code> binding to XYZ instead -- I don't see why we would need to put the valueset (XYZ) in the differential.  For reviewers, it gives the impression that you have changed the value set (when you did not).</p>",
        "id": 188227269,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1581701548
    },
    {
        "content": "<p>Agree.</p>",
        "id": 188253476,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1581719287
    },
    {
        "content": "<p>upgrading the binding strength is fine. I thought I had a unit test for exactly this so it's not a problem</p>",
        "id": 188265529,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581734056
    },
    {
        "content": "<p>it looks like an IG publisher issue - I guess I'll have to look into it</p>",
        "id": 188265534,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581734078
    },
    {
        "content": "<blockquote>\n<p>No value set specified at Procedure.extension:legalStatus.valueCodeableConcept:valueCodeableConcept (no url)</p>\n</blockquote>\n<p>This log entry is produced when rendering the terminology notes for a profile.</p>",
        "id": 188338320,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581885235
    },
    {
        "content": "<p>since this is based on the differential, not the snpashot</p>",
        "id": 188338360,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581885259
    },
    {
        "content": "<p>I've changed it so it looks it up from the inherited element</p>",
        "id": 188339089,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581886642
    },
    {
        "content": "<p>Another consequence of just changing the binding strength is that the built differential table renders \"(unbound)\" as the binding.</p>\n<p>See recently posted thread on this: <a href=\"#narrow/stream/179252-IG-creation/topic/R4.20IG.20diff.20has.20.22unbound.22.20with.20valueset.20strength.20constraint\" title=\"#narrow/stream/179252-IG-creation/topic/R4.20IG.20diff.20has.20.22unbound.22.20with.20valueset.20strength.20constraint\">https://chat.fhir.org/#narrow/stream/179252-IG-creation/topic/R4.20IG.20diff.20has.20.22unbound.22.20with.20valueset.20strength.20constraint</a></p>",
        "id": 188342490,
        "sender_full_name": "Rob Eastwood",
        "timestamp": 1581893195
    },
    {
        "content": "<p>not any more</p>",
        "id": 188346262,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581901107
    }
]