[
    {
        "content": "<p>I have a profile of Practitioner in which the differential table does not show the data types for the children of Practitioner.qualification.<br>\nThis looks like an igPublisher problem<br>\n<a href=\"/user_uploads/10155/tm-592ObCoJnGZ12kJRdUHOH/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/tm-592ObCoJnGZ12kJRdUHOH/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/tm-592ObCoJnGZ12kJRdUHOH/pasted_image.png\"></a></div>",
        "id": 183030515,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1575955635
    },
    {
        "content": "<p>The structure definition is at <a href=\"https://github.com/AuDigitalHealth/ci-fhir-stu3/blob/master/output/SharedMedicinesList/StructureDefinition-practitioner-dh-base-1.xml\" target=\"_blank\" title=\"https://github.com/AuDigitalHealth/ci-fhir-stu3/blob/master/output/SharedMedicinesList/StructureDefinition-practitioner-dh-base-1.xml\">https://github.com/AuDigitalHealth/ci-fhir-stu3/blob/master/output/SharedMedicinesList/StructureDefinition-practitioner-dh-base-1.xml</a><br>\nThe display can be found in full-ig.zip at <a href=\"https://github.com/AuDigitalHealth/ci-fhir-stu3/blob/master/output/SharedMedicinesList/full-ig.zip\" target=\"_blank\" title=\"https://github.com/AuDigitalHealth/ci-fhir-stu3/blob/master/output/SharedMedicinesList/full-ig.zip\">https://github.com/AuDigitalHealth/ci-fhir-stu3/blob/master/output/SharedMedicinesList/full-ig.zip</a></p>",
        "id": 183030580,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1575955722
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> any ideas?</p>",
        "id": 183030592,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1575955746
    },
    {
        "content": "<p>I'll add it to my list</p>",
        "id": 183030968,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575956276
    },
    {
        "content": "<p>The problem is also there in our R4 version of the profile.</p>",
        "id": 183031035,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1575956337
    },
    {
        "content": "<p>ok well, now it doesn't build: </p>\n<p>Unable to generate snapshot for <a href=\"http://ns.electronichealth.net.au/ci/fhir/3.0/StructureDefinition/patient-dh-base-1\" target=\"_blank\" title=\"http://ns.electronichealth.net.au/ci/fhir/3.0/StructureDefinition/patient-dh-base-1\">http://ns.electronichealth.net.au/ci/fhir/3.0/StructureDefinition/patient-dh-base-1</a> in C:\\work\\org.hl7.fhir.igs\\ci-fhir-stu3\\resources\\patient-dh-base-1: <br>\nUnexpected condition in differential: type-slice.type-list.size() != 1 at Patient.deceased[x]/deceasedBoolean</p>",
        "id": 183220750,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576114271
    },
    {
        "content": "<p>that's a new rule I added</p>",
        "id": 183220758,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576114282
    },
    {
        "content": "<p>We want to make Patient.deceased mustSupport and have an extension on Patient.deceased[x]:deceasedDateTime. So we produced:</p>\n<div class=\"codehilite\"><pre><span></span>    &lt;element id=&quot;Patient.deceased[x]&quot;&gt;\n      &lt;path value=&quot;Patient.deceased[x]&quot;/&gt;\n      &lt;mustSupport value=&quot;true&quot;/&gt;\n    &lt;/element&gt;\n    &lt;element id=&quot;Patient.deceased[x]:deceasedBoolean&quot;&gt;\n      &lt;path value=&quot;Patient.deceased[x]&quot;/&gt;\n      &lt;sliceName value=&quot;deceasedBoolean&quot;/&gt;\n      &lt;short value=&quot;Boolean indicates if individual is deceased&quot;/&gt;\n      &lt;mustSupport value=&quot;true&quot;/&gt;\n    &lt;/element&gt;\n    &lt;element id=&quot;Patient.deceased[x]:deceasedDateTime&quot;&gt;\n      &lt;path value=&quot;Patient.deceased[x]&quot;/&gt;\n      &lt;sliceName value=&quot;deceasedDateTime&quot;/&gt;\n      &lt;short value=&quot;Indicates date-time the individual died&quot;/&gt;\n      &lt;mustSupport value=&quot;true&quot;/&gt;\n    &lt;/element&gt;\n    &lt;element id=&quot;Patient.deceased[x]:deceasedDateTime.extension:accuracyIndicator&quot;&gt;\n      &lt;path value=&quot;Patient.deceased[x].extension&quot;/&gt;\n      &lt;sliceName value=&quot;accuracyIndicator&quot;/&gt;\n      &lt;mustSupport value=&quot;true&quot;/&gt;\n    &lt;/element&gt;\n</pre></div>",
        "id": 183227975,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1576124857
    },
    {
        "content": "<p>Any ideas what is wrong? <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 183228028,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1576124891
    },
    {
        "content": "<p>It now builds OK with v19 of the publisher. <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 183325275,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1576206963
    },
    {
        "content": "<p>But in the profiles of Practitioner the differential table still does not show the data types for the children of Practitioner.qualification.</p>",
        "id": 183325297,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1576207013
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 183325302,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1576207024
    },
    {
        "content": "<p>so, looking at this. There's a problem:</p>",
        "id": 183330619,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576215685
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/RCKyD4TqdEWMYFhp_SNZuPez/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/RCKyD4TqdEWMYFhp_SNZuPez/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/RCKyD4TqdEWMYFhp_SNZuPez/pasted_image.png\"></a></div>",
        "id": 183330621,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576215691
    },
    {
        "content": "<p>the problem is that you take a profile that has slicing (on Practitioner.qualification), and then ignore that and make all the elements of the underlying element must support.</p>",
        "id": 183330684,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576215744
    },
    {
        "content": "<p>do you mean to make a rule on all the slices? because you probably did, but technically, that's multiple inheritance. And I'm pretty sure we said that doesn't happen</p>",
        "id": 183330696,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576215786
    },
    {
        "content": "<p>yes; see: <a href=\"#narrow/stream/179177-conformance/topic/More.20about.20Slicing/near/172028815\" title=\"#narrow/stream/179177-conformance/topic/More.20about.20Slicing/near/172028815\">https://chat.fhir.org/#narrow/stream/179177-conformance/topic/More.20about.20Slicing/near/172028815</a></p>",
        "id": 183330800,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576215935
    },
    {
        "content": "<p>It's not so much multiple inheritance as it is dual profiles.  Elements must meet the profile of the base and the profile of the slices.  You did indicate that the snapshot for the slices won't necessarily include everything from the base.</p>",
        "id": 183353973,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1576239991
    },
    {
        "content": "<blockquote>\n<p>the problem is that you take a profile that has slicing (on Practitioner.qualification), and then ignore that and make all the elements of the underlying element must support.<br>\ndo you mean to make a rule on all the slices? because you probably did, but technically, that's multiple inheritance. And I'm pretty sure we said that doesn't happen</p>\n</blockquote>\n<p>We want to say that you must support qualification and all of its children, whether they are part of a slice or not.</p>",
        "id": 183517340,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1576467721
    },
    {
        "content": "<p>then you have to iterate the slices in the diff</p>",
        "id": 183517395,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576467804
    },
    {
        "content": "<p>If I put must support on elements in a slice, those elements display nicely. Yay!<br>\nIf I put must support on elements in the base, those elements display without type. <br>\nIf I do not put must support on elements in the base, there is no requirement to support uses of the element that do not meet the slice.</p>",
        "id": 183517733,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1576468471
    },
    {
        "content": "<p>So iterating the slices in the diff does not give us the constraints that we want.</p>",
        "id": 183517743,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1576468507
    },
    {
        "content": "<p>So slicing an element limits the use of must support, and other constraints, that apply to all iterations, even in iterations that do not match any of the defined slices.<br>\nIs this just a tooling issue, so that we can put must support on a sliced element with the only issue being how it is displayed? And possibly how validators react?<br>\nIs this a modelling issue, so that we are creating an ill defined resource when we put must support on a sliced element?</p>",
        "id": 183518628,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1576470214
    },
    {
        "content": "<p>well, first of all, must-support is not relevant for validators</p>",
        "id": 183518708,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576470343
    },
    {
        "content": "<p>Of course!</p>",
        "id": 183518751,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1576470391
    },
    {
        "content": "<p>Is it just a display issue?</p>",
        "id": 183518760,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1576470413
    },
    {
        "content": "<p>well, it was a snapshot generation issue. A tough one, too. The issue was that the unslice constraints crossed a type boundary. It took me a long time to isolate that case from the others. Anyway, committed and released now</p>",
        "id": 183550672,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576504709
    },
    {
        "content": "<p>Still not working with v  1.0.24-SNAPSHOT. <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 183624050,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1576567247
    }
]