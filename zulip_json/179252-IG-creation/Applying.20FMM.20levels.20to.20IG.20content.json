[
    {
        "content": "<p>Does anyone have experience using FMM levels for IG resources; for example labelling one profile as FMM0 while another profile is FMM2? Can organizations other than HL7 use FMM levels (since the definition of the levels speak about WGs, etc.)?</p>",
        "id": 238809070,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1621016573
    },
    {
        "content": "<p>That's on the near-term list of things to add to the templates.  (Also standards status.) I've been struggling about whether to support it in the 'base' template or only the HL7 template.  FMM refers to specific expectations around 'ballot', which wouldn't be relevant to non-HL7 artifacts.  However, perhaps FMG could soften that to 'formal review', noting that in HL7, that formal review is expected to be balloting.  You could submit a request to the FMG to suggest that.</p>",
        "id": 238810632,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621017295
    },
    {
        "content": "<p>I think any solution would have to allow organizations to define their own maturity levels, which could involve balloting, formal review, or just publication. What I'd like to see in the base template is standard content that appears if a maturity level is defined for a resource. \"This profile/valueset/etc. is at MyOrg maturity level: PG-13. To know more about MyOrg maturity levels, please see link\"</p>",
        "id": 238821618,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1621022436
    },
    {
        "content": "<p>Perhaps a base property that says \"maturity definitions\".  If the IG has such a property, we'll expose.  Though I'm concerned that the extension we drive off of has a fixed value set, which might make it harder to find other types of maturities</p>",
        "id": 238822613,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621022895
    },
    {
        "content": "<p>Why have a fixed value set? Why not just use an example value set (which corresponds to the FMM levels), but allows users to define any maturity levels they want?</p>",
        "id": 238822895,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1621023035
    },
    {
        "content": "<p>Because the extension was defined for HL7 without other uses in mind.  At minimum, I think we'd have a preferred binding.  Trick if we loosen it how do we enforce that HL7 artifacts only have the HL7 maturities and don't allow any others</p>",
        "id": 238824790,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621024040
    },
    {
        "content": "<p>Make it one of the FMM maturity criteria? <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span> </p>\n<p>Sorry I misunderstood, I thought your were proposing a new extension, not using an existing one. And I'm not convinced that the HL7 FMM levels _are_ preferred in other contexts.</p>",
        "id": 238825461,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1621024326
    },
    {
        "content": "<p>I don't think that HL7 should redefine it's own maturity level criteria to generalize them.</p>",
        "id": 238830109,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1621026515
    },
    {
        "content": "<p>but I think it makes total sense for organizations to define their own levels and criteria.</p>",
        "id": 238830145,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1621026531
    },
    {
        "content": "<p>perhaps we could define an alternative link for the FMM definitions to be used in an IG?</p>",
        "id": 238830180,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1621026553
    },
    {
        "content": "<p>I am very much wanting to expose in the IG I author the underlying FMM of the resources I profile. We do this manually in IHE today, would be great if it could be automated. Today it shows up as a IG wide table of Resource | FMM</p>",
        "id": 238834456,
        "sender_full_name": "John Moehrke",
        "timestamp": 1621028980
    },
    {
        "content": "<p>What I'm thinking of now is that there'd be two parameters in the IG - one would be the URL where maturity levels are defined and the second would be the canonical URL of the extension that conveys maturity on artifacts.  The publisher would 'propagate' that extension from high-level resources down into resources that don't have declared maturities and would expose those maturities in the resource summary table with a hyperlink to the place that defines them.  If an IG doesn't define either property, no maturities shown.  If it defines one but not the other, that's an error.  (I'm also thinking we'll put an extension on the maturity extension that conveys where an inferred maturity came from and could show a flag indicating that a maturity had been inferred and a fly-over showing from where (would probably only show the first 5 artifacts or so whose maturity drove that level declaration).  I think we'd require that maturities have a numeric scale - because otherwise there'd be no way to know how to propagate the 'highest' maturity.</p>",
        "id": 238835490,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621029617
    },
    {
        "content": "<p>Sorry, I'm having a hard time understanding this. I get a \"URL where maturity levels are defined\" (although, I am kinda drawn to using a codesystem for this, which makes it easy to validate), but I get lost after that. You're proposing an extension that identifies another extension?</p>\n<p>Are you also picturing something that enforces a profile on an FMM 2 resource can't have a profile maturity of more than 2? I can't see that working unless we align the definitions. What happens if my IG uses a 3-level maturity model, or a 12-level model? How do those map to FMM2? Maybe one org's levels match 1:1 for FMM levels 0-4, but have 3 more levels before the FMM level 5; another org may have 3 levels between 0 and 1, but 2-5 match the FMM. Even if definitions are aligned, why shouldn't an org say this is a finalized (balloted, published, normative, etc.) IG (and thus the profiles in it are highest maturity) based on FHIR STU3 (which has no normative content).</p>",
        "id": 238837185,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1621030775
    },
    {
        "content": "<p>I'm proposing two IG properties (not extensions):</p>\n<ul>\n<li>fmm-definition-page: the URL of the web page that defines the maturity levels and their associated rules.  For HL7 artifacts, this would be <a href=\"http://hl7.org/fhir/versions.html#maturity\">http://hl7.org/fhir/versions.html#maturity</a></li>\n<li>fmm-extension: the canonical URL of the extension that appears on a resource and defines its maturity level.  For HL7 artifacts, this would be <a href=\"http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm\">http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm</a></li>\n</ul>",
        "id": 238864333,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621049665
    },
    {
        "content": "<p>The validation of the IG specific codeSystem would not need to be enforced by this navigation URL mechanism... but, It might be   a solution some IG might choose to have the URL be to the html rendering of their codeSystem.</p>",
        "id": 238905547,
        "sender_full_name": "John Moehrke",
        "timestamp": 1621092483
    },
    {
        "content": "<p>The maturity levels would need to be integers</p>",
        "id": 238907023,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621094004
    },
    {
        "content": "<p>why not codes?</p>",
        "id": 238908268,
        "sender_full_name": "John Moehrke",
        "timestamp": 1621095226
    },
    {
        "content": "<p>Because the logic has to be able to compare maturities to tell what's higher or lower than another maturity in order to auto-propagate the highest maturity of a 'using' resource to value sets, code systems, etc. that don't declare maturities</p>",
        "id": 238917562,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621104262
    },
    {
        "content": "<p>In theory, we could do codes with an ordinalValue extension, but I don't see much reason to support that level of complexity...</p>",
        "id": 238917597,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621104315
    },
    {
        "content": "<p>that would only work if we can come up with a universal meaning to the FMM integers. Even Normative means slightly different things in different standards organizations. I think it is best to just show the code at various levels of depth of profiling.</p>",
        "id": 238974168,
        "sender_full_name": "John Moehrke",
        "timestamp": 1621168603
    },
    {
        "content": "<p>The integers don't have have universal meaning.  All that matters is that 3 is more mature than 2 and 7 is more mature than 6.</p>",
        "id": 239000820,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621193590
    },
    {
        "content": "<p>Maturities must exist on a linear scale.  I'm not saying people can't do other things too, but if they do, that would fall outside the notion of a maturity scale.</p>",
        "id": 239000887,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621193644
    },
    {
        "content": "<p>so, how do we assure that there is enough space between FHIR core integers for the various organizations that are going to derive off of FHIR core? As it stands today, there is no room for other organizations to add more fine grain maturity because there are no spare integers between the FHIR core FMM integers.</p>",
        "id": 239073778,
        "sender_full_name": "John Moehrke",
        "timestamp": 1621252009
    },
    {
        "content": "<p>They can define their own scales.  If they want to have a maturity range between 1 and 25, they can.  The meaning of their numbers can be completely different from HL7s.  If they want to map some of their numbers to FHIR's levels they can.</p>",
        "id": 239127414,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621271899
    },
    {
        "content": "<p>okay, that is what I was looking for</p>",
        "id": 239127550,
        "sender_full_name": "John Moehrke",
        "timestamp": 1621271959
    },
    {
        "content": "<p>the other problem with numbers is ... what happens for things that have matured enough to be retired?</p>",
        "id": 239127690,
        "sender_full_name": "John Moehrke",
        "timestamp": 1621272006
    },
    {
        "content": "<p>or deprecated</p>",
        "id": 239127728,
        "sender_full_name": "John Moehrke",
        "timestamp": 1621272024
    },
    {
        "content": "<p>That's a different element - reflecting 'standards status'.  Something can be deprecated independent of maturity level.</p>",
        "id": 239129468,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621272772
    },
    {
        "content": "<p>OK, this is where I get confused. You want maturities on a linear scale, so you can inherit base resource maturities and cap current resource maturity based on base resource maturity? If my profile's base has a FMM of 2, does that mean my resource (which I would put as a 17--predraft status--on my maturity scale) gets capped at 2?</p>",
        "id": 239134533,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1621274783
    },
    {
        "content": "<p>My other issue is why the need for fmm-extension? Why have an element that lets you select an extension, instead of everyone agreeing on one extension, but leaving the valueset open?</p>\n<p>If you do need it, unless it is specifically for conveying FMM, leave FMM out of the name. Use maturity-extension.</p>",
        "id": 239135319,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1621275060
    },
    {
        "content": "<p>I don't want to inherit base resource maturities.  The driver for numbers is so that if you have a value set with no maturity and it's used by an extension with maturity 6 and a profile with maturity 8, we can infer a maturity of 8 for the value set.</p>",
        "id": 239137000,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621275706
    },
    {
        "content": "<p>The extension for fmm already exists and has a type of 'code'.  It's tied into a whole bunch of logic in the publisher already, so I don't want to mess with it.</p>",
        "id": 239137103,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621275741
    },
    {
        "content": "<p>Maturity of a resource would never be inherited to determine the maturity of a profile.  (Though in HL7, there would be a warning if a profile declares that it's more mature than the underlying resource.)</p>",
        "id": 239137269,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621275812
    },
    {
        "content": "<p>Ah, <strong>within</strong> the same IG. I'm not sure that things should project that way in all cases though.</p>\n<p>OK, the fmm extension exists and is used. Is that sufficient reason to make things more difficult for all the non-HL7 guides? Is it any more difficult to add code to the publisher to recognize two fixed extensions vs one dynamic extension?</p>",
        "id": 239137978,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1621276135
    },
    {
        "content": "<p>Not sure how we're making things more difficult.  You can define the extension you want to use with the semantics and scale you want it to have and it should just work.  If everyone uses the <em>same</em> extension, then we'd have to make it a Coding rather than a code or integer, which bulks things up a bit.  Not understanding how a generic extension with Coding makes things easier?</p>",
        "id": 239139573,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621276854
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> , where did you land on this? What's the current mechanism to indicate resource and IG maturity?</p>",
        "id": 253821829,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1631922227
    },
    {
        "content": "<p>The extensions for capturing standards status and resource maturity will be the same ones as are used in the core spec.  They will propagate, so for example, if the IG is set to \"STU\" and \"FMM 3\", then everything else in the IG will be too.  If two resources would be propagated to by the same source - e.g. a value set is used by two profiles, one STU and one draft, the higher one will be inherited.  Examples are always 'informative' and have no FMM.</p>",
        "id": 253832707,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1631933700
    },
    {
        "content": "<p>The changes are mostly made, but Grahame wanted me to refactor a few things and I've needed to turn my attention to getting SDC changes finalized.  I hope to return to FMM shortly after the WGM.  If you want to be proactive and start putting your maturity levels into your resources, feel free.</p>",
        "id": 253832779,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1631933766
    },
    {
        "content": "<p>OK, I'll play around with that a bit. The propagation isn't present yet, correct?</p>\n<p>Somewhat related, if I'm profiling a resource that has an element with an example valueset, and I provide that element with another valueset (maybe with a stricter binding), is there a way to show that binding is draft/trial-use/experimental? The rest of the profiling is solid, and the valueset we've chosen is solid too, but we want feedback on whether that was the right valueset to choose. As far as I can tell, I can't apply the standards-status extension to the element, since it isn't (e.g.) TU in the base resource, and I can't indicate that the binding is trial, so I\"m left with setting the whole profile as trial. Now, setting the profile as trial makes sense because that reflects that not all of the profile is ready to go normative, but the flip side is that there is no way to point attention to the elements that are less mature in the profiling, except use of a note/ballot note in the intro. Is that all accurate?</p>",
        "id": 253841560,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1631943362
    },
    {
        "content": "<p>You can show an element overall as being STU or draft, but you can't show a specific constraint as being STU or draft.  We haven't talked about what it means for a profile element to be STU when the base resource is normative, but given that the entire profile can be STU, it seems that a single element should be able to be - and similarly, you could have a draft element in an STU profile based on an STU resource.</p>",
        "id": 253879171,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1631982821
    },
    {
        "content": "<p>I'm looking at adding maturity levels to mCODE IG. Reading the above discussion about using the HL7 FMM and alternative maturity models, my vote would be to change the FMM extension to a CodeableConcept. That allows the user to specify the system that defines the code. The codes then could be ordinal.  I think that is the proper approach.</p>",
        "id": 264458441,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1639148323
    },
    {
        "content": "<p>One more thing about this:  I see the fmm extension being used on StructureDefinition, but the context of the fmm extension is \"Element\".  Are you supposed to use this as a top-level extension to express a profile's maturity, or are you supposed to add it to element[0]?</p>",
        "id": 264460755,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1639149203
    },
    {
        "content": "<p>Typically you add it at the profile level, but there are times when the maturity of certain elements differs from the overall maturity of the profile.</p>",
        "id": 264464388,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1639150799
    },
    {
        "content": "<p>For HL7, everyone should be using the same maturity scale.</p>",
        "id": 264464448,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1639150813
    },
    {
        "content": "<p>For HL7, fully agree.  Can you add the FMM extension to a value set, or only an element bound to a value set.</p>",
        "id": 264465095,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1639151096
    },
    {
        "content": "<p>You can add maturity to any conformance resource that isn't an example.  (You can add to examples too, but it'll be ignored.)  Once the process for IGs turns on, maturity will cascade from IG to profiles to valuesets, code systems and extensions.  So you really only need to declare it where you want to override what'd be inherited.</p>",
        "id": 264465533,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1639151291
    }
]