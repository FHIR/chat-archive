[
    {
        "content": "<p>More what is the best approach?</p>\n<p>Should we lean on profiles or rely more on OperationDefinition and MessageDefinition resources.</p>\n<p>For FHIR Messages I've already gone down the route of extending validation to use MessageDefinition (to check the focused resources are following the profile specified in the message definition).<br>\nI'm looking at extending this to operations and if a Parameters resource is present, this should have the OperationDefinition and that needs to be followed. </p>\n<p>I think I'd rather not have both profiles and Message/Operation Definition with similar rules which allows them to get out of step.</p>",
        "id": 275201698,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1647243558
    },
    {
        "content": "<p>OperationDefinition and MessageDefinition don't really validate instances, they validate interface behavior.  I would definitely expect to have a profile (or, for messages, GraphDefinition) that defines the content.  (I was unsuccessful in stripping the parameters from OperationDefinition and having them defined exclusively in StructureDefinition.)</p>",
        "id": 275241506,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1647267376
    },
    {
        "content": "<p>I'll take a look. I think it's possible to create a <code>profile on the fly</code> from the OperationDefinition and use that for testing. <br>\nI don't like the idea of documenting twice - one for testing (profile) and another for documentation. They can easily get out of step.</p>",
        "id": 275331532,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1647322438
    },
    {
        "content": "<p>The main issue around that is</p>\n<p><a href=\"/user_uploads/10155/BZ7SqO-K0B9VBMYbj3QIpc70/Screenshot-2022-03-15-at-05.38.52.png\">Screenshot-2022-03-15-at-05.38.52.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/BZ7SqO-K0B9VBMYbj3QIpc70/Screenshot-2022-03-15-at-05.38.52.png\" title=\"Screenshot-2022-03-15-at-05.38.52.png\"><img src=\"/user_uploads/10155/BZ7SqO-K0B9VBMYbj3QIpc70/Screenshot-2022-03-15-at-05.38.52.png\"></a></div><p>if type is a Resource, then would want to specify a profile. This constraint prevents that.</p>",
        "id": 275331884,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1647322852
    },
    {
        "content": "<p>one reason it's not a profile per se is that the parameters can be in HTTP formats, not a parameters resource</p>",
        "id": 275332073,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1647323106
    },
    {
        "content": "<p>I could extend the validator to validate an HTTP request/response against an OperationDefinition</p>",
        "id": 275332139,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1647323165
    },
    {
        "content": "<p>Fingers crossed - we may be able to help with that.</p>",
        "id": 275335108,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1647326869
    },
    {
        "content": "<p>Even if they can be passed in the URL, you might still need the capabilities of profile to fully define what's going on.  There are a whole bunch of constraints that ElementDefinition allows that OperationDefinition doesn't.</p>",
        "id": 275370375,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1647349891
    },
    {
        "content": "<p>but there are also things going on that StructureDefinition doesn't deal with</p>",
        "id": 275427146,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1647374202
    }
]