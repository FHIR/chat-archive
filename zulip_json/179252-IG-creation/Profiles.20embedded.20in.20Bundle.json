[
    {
        "content": "<p>I just noticed that between the STU2 ballot build for mCODE (back in April 2021) and now, it appears that the snapshot of our Bundle profile now includes the contents of the <strong>entirety</strong> of each profile under <code>entry:sliceName.resource</code>. Here's an example:</p>\n<ul>\n<li>The <a href=\"http://hl7.org/fhir/us/mcode/2021May/StructureDefinition-mcode-patient-bundle.html\">STU2 ballot build</a> does not have any child elements off <code>resource</code>.</li>\n<li>The <a href=\"https://build.fhir.org/ig/HL7/fhir-mCODE-ig/branches/master/StructureDefinition-mcode-patient-bundle.html\">current CI build</a> has an entire copy of each slices profile inside <code>resource</code>.</li>\n</ul>\n<p><strong>My question:</strong> Is this an intentional change? If so, what's the thinking behind this? (Apologies if I missed previous discussion on this -- I searched and couldn't find anything easily.)</p>",
        "id": 260529348,
        "sender_full_name": "Max Masnick",
        "timestamp": 1636223969
    },
    {
        "content": "<p>This is what the STU2 ballot build looks like:</p>\n<p><a href=\"/user_uploads/10155/LGWN0a5FRyWgHcTYgAXy9eKj/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/LGWN0a5FRyWgHcTYgAXy9eKj/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/LGWN0a5FRyWgHcTYgAXy9eKj/image.png\"></a></div><p>Compare to the current CI build:</p>\n<p><a href=\"/user_uploads/10155/S-1dicrWWAX-Y-xH0__NHRK4/CleanShot-2021-11-06-at-14.41.182x.png\">CleanShot-2021-11-06-at-14.41.182x.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/S-1dicrWWAX-Y-xH0__NHRK4/CleanShot-2021-11-06-at-14.41.182x.png\" title=\"CleanShot-2021-11-06-at-14.41.182x.png\"><img src=\"/user_uploads/10155/S-1dicrWWAX-Y-xH0__NHRK4/CleanShot-2021-11-06-at-14.41.182x.png\"></a></div>",
        "id": 260529491,
        "sender_full_name": "Max Masnick",
        "timestamp": 1636224128
    },
    {
        "content": "<p>I looked at the JSON generated by SUSHI for our profile of Bundle, and it doesn't include any of the contents of the profiles that are slices in the Bundle -- just what I would expect to see in a Bundle StructureDefinition. So I think whatever changed happened after SUSHI in the IG Publisher pipeline.</p>",
        "id": 260529563,
        "sender_full_name": "Max Masnick",
        "timestamp": 1636224248
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> can you please take a look at this when you have a minute? We want to try to resolve this before we publish mCODE STU2 (which is close)</p>",
        "id": 260638926,
        "sender_full_name": "Max Masnick",
        "timestamp": 1636367353
    },
    {
        "content": "<p>it's on my lsit</p>",
        "id": 260638967,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1636367377
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> we are on the agenda for mCODE STU2 publication for FMG's Nov 17 meeting...any chance you'll be able to put in a fix before then? <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span> </p>\n<p>(FYSA I logged <a href=\"https://github.com/HL7/fhir-ig-publisher/issues/334\">https://github.com/HL7/fhir-ig-publisher/issues/334</a> describing this issue as well.)</p>",
        "id": 261513749,
        "sender_full_name": "Max Masnick",
        "timestamp": 1636990573
    },
    {
        "content": "<p>ok finally got to this. I should've looked first because I assumed that it was actually something I did. But no.</p>",
        "id": 263784654,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1638732475
    },
    {
        "content": "<p>In your STU2 ballot:</p>",
        "id": 263784698,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1638732496
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>     {\n        &quot;id&quot; : &quot;Bundle.entry:tumorSize.resource&quot;,\n        &quot;path&quot; : &quot;Bundle.entry.resource&quot;,\n        &quot;type&quot; : [\n          {\n            &quot;code&quot; : &quot;Observation&quot;,\n            &quot;profile&quot; : [\n              &quot;http://hl7.org/fhir/us/mcode/StructureDefinition/mcode-tumor-size&quot;\n            ]\n          }\n        ],\n        &quot;mustSupport&quot; : true\n      },\n</code></pre></div>",
        "id": 263784715,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1638732523
    },
    {
        "content": "<p>in your current draft:</p>",
        "id": 263784753,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1638732598
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>      {\n        &quot;id&quot; : &quot;Bundle.entry:tumorSize.resource&quot;,\n        &quot;path&quot; : &quot;Bundle.entry.resource&quot;,\n        &quot;type&quot; : [\n          {\n            &quot;code&quot; : &quot;Observation&quot;,\n            &quot;profile&quot; : [\n              &quot;http://hl7.org/fhir/us/mcode/StructureDefinition/mcode-tumor-size&quot;\n            ]\n          }\n        ]\n      },\n      {\n        &quot;id&quot; : &quot;Bundle.entry:tumorSize.resource.meta.profile&quot;,\n        &quot;path&quot; : &quot;Bundle.entry.resource.meta.profile&quot;,\n        &quot;min&quot; : 1,\n        &quot;patternCanonical&quot; : &quot;http://hl7.org/fhir/us/mcode/StructureDefinition/mcode-tumor-size&quot;\n      }\n</code></pre></div>",
        "id": 263784817,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1638732625
    },
    {
        "content": "<p>by walking into the resource, you make it necessary for the snapshot generator to include the entire resource in the profile.</p>",
        "id": 263784837,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1638732675
    },
    {
        "content": "<p>you said:</p>\n<blockquote>\n<p>I looked at the JSON generated by SUSHI for our profile of Bundle, and it doesn't include any of the contents of the profiles that are slices in the Bundle</p>\n</blockquote>\n<p>by specifying content inside the target profile, you make the snapshot generator reconcile the contents of the profiles, and publish the reconciliation. So from my pov, what happened is expected</p>",
        "id": 263785022,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1638732923
    },
    {
        "content": "<p>Agreed, the behavior makes sense. Apologies I didn't catch this initially.</p>",
        "id": 264484934,
        "sender_full_name": "Max Masnick",
        "timestamp": 1639159500
    },
    {
        "content": "<p>next time I'll check immediately rather than assuming there's some nasty issue I need a clear head for. But the question is, how to do what you're trying to do more effectively</p>",
        "id": 264498402,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639165513
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  So fundamentally we are trying to make sure <code>meta.profile</code> is populated for resource instances within Bundle instances conforming to our \"mCODE Patient Bundle\" profile.</p>\n<p>But we don't want to require <code>meta.profile</code> in <em>every</em> profile in mCODE as there may be cases where <code>meta.profile</code> can't be copied.</p>\n<p>What we're doing now is slicing <code>Bundle.entry</code> by <code>entry.resource.meta.profile</code>, and then (as you say above) adding a constraint like <code>entry[sliceName].resource.meta.profile 1..* MS</code>. (We also make <code>entry[sliceName].resource.meta</code> required.)</p>\n<p>We looked at instead doing <code>entry.resource.meta.profile 1..* MS</code>, but this causes errors if <code>entry.resource 1..1 MS</code> is set (related to <code>entry.resource.meta.profile</code> being an invalid element path, I believe).</p>\n<p>If we remove <code>entry.resource 1..1 MS</code> so <code>entry.resource.meta.profile 1..* MS</code> \"works\", but this breaks validation of Bundles (it seems like the validator stops looking at the referenced profile if <code>entry.resource.meta.profile</code> is constrained in the profile of Bundle).</p>\n<p>So unless some of this behavior is surprising to you, it seems like our current approach is the best one. However, this makes the .html page for \"mCODE Patient Profile\" less usable than would be ideal -- the snapshot tab is veeeeeeeeery long.</p>\n<p>I have a sample project I can share with you if you want to reproduce any of this. </p>\n<p>/cc <span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span> <span class=\"user-mention\" data-user-id=\"215604\">@Saul Kravitz</span></p>",
        "id": 264797493,
        "sender_full_name": "Max Masnick",
        "timestamp": 1639447371
    },
    {
        "content": "<p>well, firstly:</p>\n<blockquote>\n<p>But we don't want to require meta.profile in every profile in mCODE as there may be cases where meta.profile can't be copied.</p>\n</blockquote>\n<p>I'm thoroughly on board with that </p>\n<blockquote>\n<p>we are trying to make sure meta.profile is populated for resource instances within Bundle instances conforming to our \"mCODE Patient Bundle\" profile</p>\n</blockquote>\n<p>why?</p>",
        "id": 264807676,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639454735
    },
    {
        "content": "<p>let's talk about that before looking at alternative approaches - I can think of some you haven't mentioned, but the why is important in that regard</p>",
        "id": 264807732,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639454764
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> We slice <code>Bundle.entry</code> by <code>resource.meta.profile</code> because otherwise it’s hard to identify which instances in the bundle are supposed to conform with which profile. (True both for validation and for an implementer receiving one of these bundles and trying to process it.)</p>\n<p>Specifically, we’re trying to discourage/prohibit implementers including resource instances in the Bundle that are intended to fit in one of the slices, but don’t have <code>meta.profile</code> populated. Our Bundle is open and most slices aren’t required, so it’s possible to this could happen.</p>",
        "id": 264908392,
        "sender_full_name": "Max Masnick",
        "timestamp": 1639508371
    },
    {
        "content": "<p>in other words, the resources aren't really differentiated, so there's no way for a reader of the bundle to know what's going on unless the writer specifically adds extra metadata to differentiate them?</p>",
        "id": 264909110,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639508564
    },
    {
        "content": "<p>Exactly -- for example, an Observation resource might be included in the bundle but it's not meant to conform with mCODE. For someone trying to process the Bundle, they might just want the Observation resources that are meant to conform with a specific profile. They <em>might</em> be able to tell based on specific characteristics of the profile, but this isn't always possible or easy.</p>\n<p>It's much simpler if the producer of the Bundle just indicates their intent (simpler at least for everyone except the producer <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span>).</p>",
        "id": 264910039,
        "sender_full_name": "Max Masnick",
        "timestamp": 1639508840
    },
    {
        "content": "<p>so the core of your problem is that you are conflating \"intent\" with \"conformance\". The profile tag is a statement of conformance to a profile. So it someone adds a resource that happens to conform to the profile but doesn't meet the intent, then what?</p>",
        "id": 264910964,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639509218
    },
    {
        "content": "<p>I suppose it's too late to consider the solution that I would think matches the intent then - the bundle can contain a set of information as specified by the mCode profiles, but possibly other content as well, and the resources themselves aren't obviously differentiated - that calls for a manifest that lays out the bundle. That's what a composition is for - gives the bundle context and structure, and who built it. And the profile on composition establishes the structure of the bundle</p>",
        "id": 264911576,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639509481
    },
    {
        "content": "<p>you could do the same thing a little more simply with List as well</p>",
        "id": 264912487,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639509899
    },
    {
        "content": "<p>Profile isn't allowed to contain information that isn't in the resource.  It must <em>always</em> be possible to tell what profile(s) a resource complies with.  And if a resource complies with multiple profiles, it should be fine to list all of them in .meta or none of them.  Profile can't ever tell you what to do with a resource - you should always be able to figure that out by just looking at the data in the resource.  You <em>can</em> use profiles as a shortcut in the validation process to figure out what something is likely valid against.</p>",
        "id": 264925199,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1639515906
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ,<br>\nWe have a proposed resolution for the issue that caused the <a href=\"http://build.fhir.org/ig/HL7/fhir-mCODE-ig/branches/master/StructureDefinition-mcode-patient-bundle.html\">mCODE bundle</a> profile to blow up in size.<br>\nThe solution we adopted balances the need to enumerate/constrain the contents of the <a href=\"http://build.fhir.org/ig/HL7/fhir-mCODE-ig/branches/master/StructureDefinition-mcode-patient-bundle.html\">bundle</a> with the burden on the implementer.<br>\nRather than require implementers to add a manifest to indicate the intent of inclusion of each instance, we decided to limit the specified slices in the <a href=\"http://build.fhir.org/ig/HL7/fhir-mCODE-ig/branches/master/StructureDefinition-mcode-patient-bundle.html\">bundle</a> to the Cancer Patient, and establishing the expectations for content inclusion in the bundle in the narrative.</p>\n<p>Your suggestion for a composition with a manifest seemed like a big change to make this deep in the STU2 process and should be considered once we have feedback from implementers on STU2.</p>\n<p><span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span> <span class=\"user-mention\" data-user-id=\"322501\">@Max Masnick</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span></p>",
        "id": 267635437,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1641930662
    },
    {
        "content": "<p>well, that's not a compromise that's thrilling, but that's the nature of compromises. And I understand why selecting that compromise. I agree about the magnitude of the composition change</p>",
        "id": 267636414,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1641931120
    },
    {
        "content": "<p>Thanks for the quick response and your agreement.  <br>\nWe will move forward with publication.  There are two spurious (based on my examination) terminology <a href=\"#narrow/stream/179252-IG-creation/topic/Help.3A.20Spurious.20SNOMED.20Terminology.20Errors.20from.20IG.20Pub.20v1.2E1.2E93\">errors</a>....</p>",
        "id": 267641974,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1641933739
    }
]