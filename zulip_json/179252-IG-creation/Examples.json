[
    {
        "content": "<p>In the <a href=\"http://wiki.hl7.org/index.php?title=IG_Publisher_Documentation#Examples\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=IG_Publisher_Documentation#Examples\">examples</a> section of the IG Publisher Documentation, it points to the <code>\\build\\test\\ig</code> which is used for testing the tooling. I notice there are others in that directory as well, e.g., ig10, ig14, ig30, ig40, which I assume are for different releases of FHIR. The current release would be ig and is equivalent to ig30. And ig40 is a version using the new framework approach described in <a href=\"http://wiki.hl7.org/index.php?title=FHIR_IG_Framework\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=FHIR_IG_Framework\">http://wiki.hl7.org/index.php?title=FHIR_IG_Framework</a>.<br>\nIs that assumption correct?</p>\n<p>Should the most recent version of <code>org.hl7.fhir.igpublisher.jar</code> work on all these examples?</p>",
        "id": 153952123,
        "sender_full_name": " Bob Milius",
        "timestamp": 1523560784
    },
    {
        "content": "<p>It should...</p>",
        "id": 153952125,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1523561237
    },
    {
        "content": "<p>for something a bit fancier you can use mine.<br>\n<a href=\"https://github.com/Healthedata1/IG-Template2\" target=\"_blank\" title=\"https://github.com/Healthedata1/IG-Template2\">https://github.com/Healthedata1/IG-Template2</a></p>",
        "id": 153952131,
        "sender_full_name": "Eric Haas",
        "timestamp": 1523563169
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> thanks! Nicely documented. I'm beginning to understand that while there are rules around the IG and the IG Publisher, there seems to be several approaches to authoring the material to be published.</p>",
        "id": 153952132,
        "sender_full_name": " Bob Milius",
        "timestamp": 1523564408
    },
    {
        "content": "<p>One of our to-dos is to come up with standard templates for HL7-Int'l developed IGs</p>",
        "id": 153952137,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1523565789
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191916\">@ Bob Milius</span>    there are some caveats I need to mention.  all the profile have 3 included pages that I autogenerate.  you need to add them to the folder by hand if you don't.  The TOC next to the breadcrumbs is hand generated and can be a pain to create.  let me know if you have any questions.  it should run right out of the box.</p>",
        "id": 153952138,
        "sender_full_name": "Eric Haas",
        "timestamp": 1523565968
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  template wars...</p>",
        "id": 153952139,
        "sender_full_name": "Eric Haas",
        "timestamp": 1523566085
    },
    {
        "content": "<p>I would like to be able to place comments in my json examples that can help implementers understand the mappings from IEEE devices to the various resource elements. However, I do not see a way to do this if I enter examples as a resource. On the other hand, if I place the example in an markdown page then I can do it. Would using this approach be considered a violation of the FHIR IG 'look and feel'?</p>\n<p>It just that I feel examples can be VERY helpful to implementers especially if one can directly comment on how the specific elements derive from the IEEE concepts.</p>",
        "id": 154017623,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1542027825
    },
    {
        "content": "<p>you can put comments in XML examples, but not JSON?</p>",
        "id": 154017628,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1542028917
    },
    {
        "content": "<p>That's a limitation of the JSON syntax.  It's not anything FHIR can get around.</p>",
        "id": 154017633,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1542029508
    },
    {
        "content": "<blockquote>\n<p>you can put comments in XML examples, but not JSON?</p>\n</blockquote>\n<p>There is no 'standard' that I am aware of to place comments in JSON. In my case we have people who know FHIR but don't know IEEE (the majority of readers) but also those who know IEEE but don't know FHIR (a rare breed). Having comments in the examples really helps both sides.</p>",
        "id": 154017634,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1542029523
    },
    {
        "content": "<p>we like comments in examples. All our examples are XML for that reason</p>",
        "id": 154017635,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1542029600
    },
    {
        "content": "<blockquote>\n<p>That's a limitation of the JSON syntax.  It's not anything FHIR can get around.</p>\n</blockquote>\n<p>So to get around it can I put my examples as md pages instead of example resources or would this be a breach of contract?</p>",
        "id": 154017636,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1542029610
    },
    {
        "content": "<blockquote>\n<p>we like comments in examples. All our examples are XML for that reason</p>\n</blockquote>\n<p>In my case I am using an actual gateway implementation from real PHDs to create the examples (helps eliminate easy-to-make errors when done by hand ... assuming the implementation is right) so it would be very hard to change.</p>",
        "id": 154017637,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1542029729
    },
    {
        "content": "<p>I generate examples like that and then annotate them</p>",
        "id": 154017638,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1542029791
    },
    {
        "content": "<p>It's important to define your examples as \"real\" instances so they can be validated.  Best practice is to author as XML with comments.  That way you get comments plus full validation - and the JSON and RDF versions get generated for you.</p>",
        "id": 154017641,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1542030275
    },
    {
        "content": "<p>Perhaps we could generate the \"HTML\" view of the JSON with comments too?  Not sure how hard that would be...</p>",
        "id": 154017642,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1542030315
    },
    {
        "content": "<blockquote>\n<p>It's important to define your examples as \"real\" instances so they can be validated.  Best practice is to author as XML with comments.  That way you get comments plus full validation - and the JSON and RDF versions get generated for you.</p>\n</blockquote>\n<p>How do I validate my examples? Does the IG generation do that? Where is that done?</p>",
        "id": 154017644,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1542030362
    },
    {
        "content": "<blockquote>\n<p>Perhaps we could generate the \"HTML\" view of the JSON with comments too?  Not sure how hard that would be...</p>\n</blockquote>\n<p>Maybe I can do both. An md page and then a list of resources.</p>",
        "id": 154017646,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1542030411
    },
    {
        "content": "<p>the IG publisher automatically validates all resources, and puts errors in qa.html in the output directory</p>",
        "id": 154017647,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1542030543
    },
    {
        "content": "<p>I could generate a JSON variant with comments, yes</p>",
        "id": 154017648,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1542030564
    },
    {
        "content": "<blockquote>\n<p>the IG publisher automatically validates all resources, and puts errors in qa.html in the output directory</p>\n</blockquote>\n<p>Learn something new every day!   The server must have just gone down.  <a href=\"http://build.fhir.org/org.hl7.fhir.igpublisher.jar\" target=\"_blank\" title=\"http://build.fhir.org/org.hl7.fhir.igpublisher.jar\">http://build.fhir.org/org.hl7.fhir.igpublisher.jar</a> gives 404 and I cant run the build</p>",
        "id": 154017649,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1542030597
    },
    {
        "content": "<p>what error do you get?</p>",
        "id": 154017651,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1542030695
    },
    {
        "content": "<blockquote>\n<p>what error do you get?</p>\n</blockquote>\n<p>404 Not Found.  In the build I get this error<br>\n Error opening connection java.io.FileNotFoundException: <a href=\"http://build.fhir.org/org.hl7.fhir.igpublisher.jar\" target=\"_blank\" title=\"http://build.fhir.org/org.hl7.fhir.igpublisher.jar\">http://build.fhir.org/org.hl7.fhir.igpublisher.jar</a></p>\n<p>Was working 15 minutes ago.</p>",
        "id": 154017652,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1542030754
    },
    {
        "content": "<p>..works for me...</p>",
        "id": 154017653,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1542030780
    },
    {
        "content": "<p>Ditto.  Perhaps a transitory network issue?</p>",
        "id": 154017654,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1542030882
    },
    {
        "content": "<blockquote>\n<p>..works for me...</p>\n</blockquote>\n<p>looks like its back ... still waiting for a response but when the error came it was immediate.</p>",
        "id": 154017655,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1542030894
    },
    {
        "content": "<p>Note that your examples need to actually be referenced by your IG in order for them to validate (or publish properly)</p>",
        "id": 154017656,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1542030927
    },
    {
        "content": "<blockquote>\n<p>Note that your examples need to actually be referenced by your IG in order for them to validate (or publish properly)</p>\n</blockquote>\n<p>The single example I have so far DOES do that and it creates the rather intense display in the artifacts window</p>",
        "id": 154017657,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1542031021
    },
    {
        "content": "<p>you can create your own pseudo comments in Jekyll using markdown for  code blocks which will display in red (as errors )</p>\n<p>for example</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n<span class=\"nt\">&quot;foo&quot;</span><span class=\"err\">;</span>  <span class=\"s2\">&quot;bar&quot;</span>  <span class=\"err\">\\\\adding</span> <span class=\"err\">comment</span> <span class=\"err\">here</span> <span class=\"err\">is</span> <span class=\"err\">shown</span> <span class=\"err\">as</span> <span class=\"err\">a</span> <span class=\"err\">error</span> <span class=\"err\">in</span> <span class=\"err\">jekyll</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n</pre></div>",
        "id": 154017817,
        "sender_full_name": "Eric Haas",
        "timestamp": 1542051414
    },
    {
        "content": "<p>DELETED - issue was my fault!</p>",
        "id": 185461607,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1578884406
    },
    {
        "content": "<p>IGNORE!  I think I have an issue with that Encounter profile!  My bad...</p>",
        "id": 185461863,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1578884953
    }
]