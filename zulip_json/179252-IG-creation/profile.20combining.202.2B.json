[
    {
        "content": "<p>Is there a way to have a profile combining the constaints of two (or more) other profiles? The structureDefinition.baseDefinition is limited to 0..1. I do understand that combining might need combining rules. So I just wondered if there was a solution.<br>\nIn my case I have two standalone profiles that each have their own use-cases, but I also want to show the resulting profile of grouping them. (e.g. AuditEvent for RESTful activities + AuditEvent impact on OAuth credentials identifying the .agent participant).</p>",
        "id": 259868042,
        "sender_full_name": "John Moehrke",
        "timestamp": 1635775877
    },
    {
        "content": "<p>The only thing you can do is inherit from one and mandate that meta.profile contains the URL for the second - and that's not a super attractive solution.</p>\n<p>Combining profiles is a <em>tremendously</em> difficult thing to do.</p>",
        "id": 259869004,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1635776319
    },
    {
        "content": "<p>understood. :-(</p>",
        "id": 259869989,
        "sender_full_name": "John Moehrke",
        "timestamp": 1635776780
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179252-IG-creation/topic/profile.20combining.202.2B/near/259869004\">said</a>:</p>\n<blockquote>\n<p>Combining profiles is a <em>tremendously</em> difficult thing to do.</p>\n</blockquote>\n<p>Do you mean conceptually difficult, or that we've made it tremendously difficult to do?</p>",
        "id": 259897034,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1635789333
    },
    {
        "content": "<p>both</p>",
        "id": 259917815,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1635799152
    },
    {
        "content": "<p>simple cases are simple, but the last 10% rapidly turn into an intractable nightmare</p>",
        "id": 259917864,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1635799184
    },
    {
        "content": "<p>E.g. two profiles that have sliced (or better yet, re-sliced) the same element with different discriminators.  Especially if the slices overlap.  Misery...</p>",
        "id": 259922870,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1635801454
    },
    {
        "content": "<p>I expected as such.</p>",
        "id": 260009319,
        "sender_full_name": "John Moehrke",
        "timestamp": 1635865960
    },
    {
        "content": "<p>in my case I know the two profiles are not conflicting.  So need to figure out some other way to replicate the profiling.</p>",
        "id": 260009433,
        "sender_full_name": "John Moehrke",
        "timestamp": 1635866017
    },
    {
        "content": "<p>IHE often has cases where multiple IGs are combined to a bigger capability. Sometimes we need to expresess specific behaviours \"when grouped\"</p>",
        "id": 260009572,
        "sender_full_name": "John Moehrke",
        "timestamp": 1635866063
    },
    {
        "content": "<p>the current model in FHIR allows me to linearly combine profiles into bigger ones. But this forces a specific build sequence. In IHE we have layered approach that allows grouping. This enables more distinct modularity at content, vs transport, vs identity, vs security, vs privacy, etc.</p>",
        "id": 260011413,
        "sender_full_name": "John Moehrke",
        "timestamp": 1635866776
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> <a href=\"#narrow/stream/179252-IG-creation/topic/profile.20combining.202.2B/near/260009572\">said</a>:</p>\n<blockquote>\n<p>IHE often has cases where multiple IGs are combined to a bigger capability. Sometimes we need to expresess specific behaviours \"when grouped\"</p>\n</blockquote>\n<p>Lots of organizations have this need. Even HL7 has this need (try profiling vital signs).</p>",
        "id": 260028653,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1635873635
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179252-IG-creation/topic/profile.20combining.202.2B/near/259922870\">said</a>:</p>\n<blockquote>\n<p>E.g. two profiles that have sliced (or better yet, re-sliced) the same element with different discriminators.  Especially if the slices overlap.  Misery...</p>\n</blockquote>\n<p>Could we just detect the edge cases and throw an error? If we can detect an error on validation for adding in meta.profile, shouldn't we be able to detect it here? \"Multiple base profiles may conflict, please reprofile with one base\"</p>",
        "id": 260029031,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1635873790
    },
    {
        "content": "<p>Generating snapshots is already a nightmare.  Generating snapshots when you have two bases would be quite horrendous, though I guess it would be done in two phases - first, try to merge the two base snapshots, then apply the differential.  So the 'merge' process would be net new code.  Having multiple parents would have to be extension space because the cardinality of 'base' is already normative.  If we limited the \"additional\" profiles to not permitting slicing, then perhaps it wouldn't be too bad. However, there'd be lots of other gotchas - if the definitions, comments, etc. are different - which one wins?  For a start, perhaps someone should write up a detailed algorithm (probably on a confluence page) that describes the algorithm for merging two sibling profiles going through all of the core elements and standard extensions that can be defined on StructureDefinition and ElementDefinition.  <em>If</em> the algorithm isn't a nightmare and the restrictions it imposes don't rule out most of the use-cases people have for doing this, then I guess there's at least a theoretical possibility of it happening.</p>",
        "id": 260087280,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1635911479
    },
    {
        "content": "<p>there's a simpler way to half solve this: a profile can nominate additional profiles that a resource must also conform to. Doesn't merge the rules, but can be tested and rendered</p>",
        "id": 260087362,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1635911571
    },
    {
        "content": "<p>Can you do  that without slicing meta.profile and requiring declarations?</p>",
        "id": 260087459,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1635911704
    },
    {
        "content": "<p>sure. it'd be an extension in the profile itself that the validator and the renderer know about</p>",
        "id": 260087478,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1635911735
    },
    {
        "content": "<p>I mean, you could declare it in meta.profile, but you wouldn't need to</p>",
        "id": 260087489,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1635911759
    },
    {
        "content": "<p>Technically, you could do it now without an extension - just assert the profile as an invariant</p>",
        "id": 260087545,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1635911808
    },
    {
        "content": "<p>i guess. But it would be a lot more computable as a direct declaration</p>",
        "id": 260087568,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1635911852
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> 's suggestion would address a majority of the use cases.</p>\n<p>Actually, it probably would address all the use cases I can think of, since it would let you solve the complex cases <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> is referring to:</p>\n<ul>\n<li>Given complex profile B with base A, complex profile C with base A, and the desire for profile D \"inheriting\" B and C</li>\n<li>You could have D be based on B, and also conform to C</li>\n<li>You could have D be based on C, and also conform to B</li>\n<li>You could have D be based on A, and also conform to B and C<br>\nWhich you pick would probably be based on which element descriptions/slicing were closest to how you wanted your profile to look (look, not behave).</li>\n</ul>",
        "id": 260092049,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1635918205
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179252-IG-creation/topic/profile.20combining.202.2B/near/260087545\">said</a>:</p>\n<blockquote>\n<p>Technically, you could do it now without an extension - just assert the profile as an invariant</p>\n</blockquote>\n<p>we do that approach on our ig's where our national ig is depending on the core and the ihe ig's. see example here: <a href=\"http://fhir.ch/ig/ch-epr-mhealth/StructureDefinition-ch-mhd-providedocumentbundle-comprehensive-definitions.html#Bundle.entry:DocumentRefs.resource\">http://fhir.ch/ig/ch-epr-mhealth/StructureDefinition-ch-mhd-providedocumentbundle-comprehensive-definitions.html#Bundle.entry:DocumentRefs.resource</a> it works, however the constraint is quite hidden then and not obvious for implementers.</p>",
        "id": 260095703,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1635922850
    }
]