[
    {
        "content": "<p>When I try to do the first act (_updatePublisher) after cloning the sample-ig, I get failures... ---- Is this a Windows 7 issue?<br>\nC:\\Users\\john.moehrke\\Git\\sample-ig&gt;_updatePublisher<br>\nA subdirectory or file input-cache already exists.<br>\n\"Downloading most recent publisher - it's ~100 MB, so this may take a bit<br>\nException calling \"DownloadFile\" with \"2\" argument(s): \"The underlying connecti<br>\non was closed: An unexpected error occurred on a send.\"<br>\nAt line:1 char:47<br>\n+ (new-object System.Net.WebClient).DownloadFile &lt;&lt;&lt;&lt; (\"<a href=\"https://fhir.github.io/\" target=\"_blank\" title=\"https://fhir.github.io/\">https://fhir.github.io/</a><br>\nlatest-ig-publisher/org.hl7.fhir.publisher.jar\",\"input-cache\\org.hl7.fhir.publi<br>\nsher.jar\")<br>\n    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException<br>\n    + FullyQualifiedErrorId : DotNetMethodException</p>\n<p>\"Done\"<br>\nPress any key to continue . . .sample-ig - getting started</p>",
        "id": 175477781,
        "sender_full_name": "John Moehrke",
        "timestamp": 1568237110
    },
    {
        "content": "<p>typically this is a network access issue</p>",
        "id": 175478826,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568238154
    },
    {
        "content": "<p>yet I could put that http GET into my browser and pull it without issue. While still the bat still failed.</p>",
        "id": 175536401,
        "sender_full_name": "John Moehrke",
        "timestamp": 1568299800
    },
    {
        "content": "<p>Grahame had the same issue.  I think there may be certain security policies in Windows that keep that code from working.  I'm not enough of a Windows expert to know how to do a command-prompt download from a website in some other way though.</p>",
        "id": 175554935,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1568311724
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> can you try this and see if it works? in a command line anywhere, run</p>\n<div class=\"codehilite\"><pre><span></span>bitsadmin /transfer &quot;Get IG Publisher&quot; https://fhir.github.io/latest-ig-publisher/org.hl7.fhir.publisher.jar %cd%\\org.hl7.fhir.publisher.jar\n</pre></div>",
        "id": 175556957,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1568312925
    },
    {
        "content": "<p>I get this<br>\nDISPLAY: 'Get IG Publisher' TYPE: DOWNLOAD STATE: ERROR<br>\nPRIORITY: NORMAL FILES: 0 / 1 BYTES: 0 / UNKNOWN<br>\nUnable to complete transfer.<br>\nERROR FILE:    <a href=\"https://fhir.github.io/latest-ig-publisher/org.hl7.fhir.publishe\" target=\"_blank\" title=\"https://fhir.github.io/latest-ig-publisher/org.hl7.fhir.publishe\">https://fhir.github.io/latest-ig-publisher/org.hl7.fhir.publishe</a><br>\nERROR CODE:    0x80072f7d - An error occurred in the secure channel support<br>\nERROR CONTEXT: 0x00000005 - The error occurred while the remote file was being</p>\n<p>C:\\Users\\john.moehrke\\Git\\sample-ig&gt;</p>",
        "id": 175557285,
        "sender_full_name": "John Moehrke",
        "timestamp": 1568313098
    },
    {
        "content": "<p>seems a network issue indeed...<br>\n<a href=\"https://www.drivethelife.com/windows-10/fix-microsoft-store-error-code-0x80072f7d.html\" target=\"_blank\" title=\"https://www.drivethelife.com/windows-10/fix-microsoft-store-error-code-0x80072f7d.html\">https://www.drivethelife.com/windows-10/fix-microsoft-store-error-code-0x80072f7d.html</a></p>",
        "id": 175557462,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1568313194
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> should find some other more reliable way to download rather than using a microsoft way</p>",
        "id": 175557651,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568313302
    },
    {
        "content": "<p>If it works on windows 10 reliably.. then I am fine... I presumed it was due to me being on WIn 7... I should not be on 7. or not for much longer.</p>",
        "id": 175567905,
        "sender_full_name": "John Moehrke",
        "timestamp": 1568320026
    },
    {
        "content": "<p>I'm open to alternatives.  What I want is a .bat and a .sh file that can do the download - ideally without requiring each IG to have a local copy of a jar or something that does the work.</p>",
        "id": 175572580,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1568323220
    },
    {
        "content": "<p>Grabbing the new publisher should just be a question of double-clicking on something, not having to remember/look-up a URL, launch a browser and then save it into a standard location.</p>",
        "id": 175572642,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1568323281
    },
    {
        "content": "<p>...curl?</p>",
        "id": 175582866,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1568333680
    },
    {
        "content": "<p>or you can Ant both batch scripts..</p>",
        "id": 175582894,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1568333722
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> if you don't mind testing, does this work for you?<br>\ncurl <a href=\"https://fhir.github.io/latest-ig-publisher/org.hl7.fhir.publisher.jar\" target=\"_blank\" title=\"https://fhir.github.io/latest-ig-publisher/org.hl7.fhir.publisher.jar\">https://fhir.github.io/latest-ig-publisher/org.hl7.fhir.publisher.jar</a> -O .\\org.hl7.fhir.publisher.jar</p>",
        "id": 175582969,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1568333797
    },
    {
        "content": "<p>I was surprised to find that 'curl' appears to be installed on my machine.  Is it a standard part of Windows, Unix and MacOS now?</p>",
        "id": 175583629,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1568334656
    },
    {
        "content": "<p>it seems that in windows curl is just an alias to a built in function</p>",
        "id": 175584068,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1568335226
    },
    {
        "content": "<p>curl is not native on windows 7... so no good.</p>",
        "id": 175585401,
        "sender_full_name": "John Moehrke",
        "timestamp": 1568336770
    },
    {
        "content": "<p>If it's native on Windows and Unix, I might take it anyhow.  Those who are using Windows 7 might have to manage the download on their own.</p>",
        "id": 175587385,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1568339771
    },
    {
        "content": "<p>\"If your Windows 10 build is 17063, or later, cUrl is included by default. \"</p>",
        "id": 175587648,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1568340196
    },
    {
        "content": "<p>Do you happen to know what the date on 17063 is?  Are we talking last few months or last couple of years?</p>",
        "id": 175587665,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1568340234
    },
    {
        "content": "<p>i think Jan 2018</p>",
        "id": 175587751,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1568340348
    },
    {
        "content": "<p>my PR currently uses wget, will switch to curl as well as i just found out that stock OSX only includes curl and no wget</p>",
        "id": 175587820,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1568340440
    },
    {
        "content": "<p>pushed the change, <a href=\"http://_updatePublisher.sh\" target=\"_blank\" title=\"http://_updatePublisher.sh\">_updatePublisher.sh</a> now uses curl</p>",
        "id": 175588415,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1568341322
    },
    {
        "content": "<p>script also checks if curl is available and exits with an error if not</p>",
        "id": 175588456,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1568341358
    },
    {
        "content": "<p>Awesome</p>",
        "id": 175589148,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1568342409
    },
    {
        "content": "<p>here is my bash for OSX users  it kind of does everything depending on the situation but the p option get the latest Ig-pub - It lives in my downloads and it and keeps the last version of the ig-pub in case the newest one is broken.</p>\n<p>ignore the d n and s options those are for my custom script of ig.json an ig.xml</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"ch\">#!/bin/bash</span>\n<span class=\"c1\"># exit when any command fails</span>\n<span class=\"nb\">set</span> -e\n<span class=\"nv\">path1</span><span class=\"o\">=</span>/Users/ehaas/Downloads/org.hl7.fhir.igpublisher.jar\n<span class=\"nv\">path2</span><span class=\"o\">=</span>/Users/ehaas/Downloads/org.hl7.fhir.igpublisher-old.jar\n<span class=\"nv\">path3</span><span class=\"o\">=</span>/Users/ehaas/Documents/FHIR/IG-tools/\n<span class=\"k\">while</span> <span class=\"nb\">getopts</span> ds:tonpw option\n<span class=\"k\">do</span>\n <span class=\"k\">case</span> <span class=\"s2\">&quot;</span><span class=\"si\">${</span><span class=\"nv\">option</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span>\n in\n d<span class=\"o\">)</span> <span class=\"nv\">DEFN</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"p\">;;</span>\n s<span class=\"o\">)</span> <span class=\"nv\">SOURCE</span><span class=\"o\">=</span><span class=\"si\">${</span><span class=\"nv\">OPTARG</span><span class=\"si\">}</span><span class=\"p\">;;</span>\n t<span class=\"o\">)</span> <span class=\"nv\">NA</span><span class=\"o\">=</span><span class=\"s1\">&#39;N/A&#39;</span><span class=\"p\">;;</span>\n o<span class=\"o\">)</span> <span class=\"nv\">PUB</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"p\">;;</span>\n n<span class=\"o\">)</span> <span class=\"nv\">USEDEF</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"p\">;;</span>\n p<span class=\"o\">)</span> <span class=\"nv\">UPDATE</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"p\">;;</span>\n w<span class=\"o\">)</span> <span class=\"nv\">WATCH</span><span class=\"o\">=</span><span class=\"m\">1</span><span class=\"p\">;;</span>\n <span class=\"k\">esac</span>\n<span class=\"k\">done</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">&quot;=================================================================&quot;</span>\n<span class=\"nb\">echo</span> <span class=\"o\">===</span> Publish <span class=\"nv\">$SOURCE</span> IG!!! <span class=\"k\">$(</span>date -u<span class=\"k\">)</span> <span class=\"o\">===</span>\n<span class=\"nb\">echo</span> see <span class=\"s1\">&#39;local workflow.md&#39;</span> file <span class=\"k\">for</span> how to use\n<span class=\"nb\">echo</span> <span class=\"s2\">&quot;Optional Parameters&quot;</span>\n<span class=\"nb\">echo</span> <span class=\"s1\">&#39;-d parameter = create definitions files  = &#39;</span> <span class=\"nv\">$DEFN</span>\n<span class=\"nb\">echo</span> <span class=\"s1\">&#39;-n parameter = use definitions source directory definition files  = &#39;</span> <span class=\"nv\">$USEDEF</span>\n<span class=\"nb\">echo</span> <span class=\"s1\">&#39;-s parameter = source directory = &#39;</span> <span class=\"nv\">$SOURCE</span>\n<span class=\"nb\">echo</span> <span class=\"s1\">&#39;-t parameter for no terminology server (run faster and offline)= &#39;</span> <span class=\"nv\">$NA</span>\n<span class=\"nb\">echo</span> <span class=\"s1\">&#39;-o parameter for running previous version of the igpublisher= &#39;</span> <span class=\"nv\">$PUB</span>\n<span class=\"nb\">echo</span> <span class=\"s1\">&#39;-p parameter for downloading latest version of the igpublisher from source = &#39;</span> <span class=\"nv\">$UPDATE</span>\n<span class=\"nb\">echo</span> <span class=\"s1\">&#39;-w parameter for using watch on igpublisher from source default is off = &#39;</span> <span class=\"nv\">$WATCH</span>\n<span class=\"nb\">echo</span> <span class=\"s1\">&#39; current directory =&#39;</span> <span class=\"nv\">$PWD</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">&quot;=================================================================&quot;</span>\n<span class=\"nb\">echo</span> getting rid of .DS_Store files since they gum up the igpublisher....\nfind . -name <span class=\"s1\">&#39;.DS_Store&#39;</span> -type f -delete\nsleep <span class=\"m\">1</span>\n<span class=\"c1\"># git status</span>\n<span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">$UPDATE</span> <span class=\"o\">]]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">&quot;=================================================================&quot;</span>\n<span class=\"nb\">echo</span> <span class=\"o\">===</span> get the latest ig-pub <span class=\"nv\">file</span> <span class=\"o\">===</span>\n<span class=\"nb\">echo</span> <span class=\"s2\">&quot;=================================================================&quot;</span>\n<span class=\"c1\">#mv /Users/ehaas/Downloads/org.hl7.fhir.igpublisher.jar /Users/ehaas/Downloads/org.hl7.fhir.igpublisher-old.jar</span>\n<span class=\"c1\"># _L flag for redirects</span>\ncurl -L https://github.com/FHIR/latest-ig-publisher/raw/master/org.hl7.fhir.publisher.jar -o /Users/ehaas/Downloads/org.hl7.fhir.igpublisher.jar\nsleep <span class=\"m\">3</span>\n<span class=\"k\">fi</span>\n\n<span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">$DEFN</span> <span class=\"o\">]]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n  <span class=\"nb\">echo</span> <span class=\"s2\">&quot;=================================================================&quot;</span>\n  <span class=\"nb\">echo</span> <span class=\"o\">===</span> run definitions maker with optional <span class=\"nb\">source</span> directory name as first <span class=\"nv\">argument</span> <span class=\"o\">===</span>\n  <span class=\"nb\">echo</span> <span class=\"o\">===</span> create ig.json and ig.xml in <span class=\"nv\">$PWD</span> and ../<span class=\"nv\">$SOURCE</span> <span class=\"o\">===</span>\n  <span class=\"nb\">echo</span> <span class=\"s2\">&quot;=================================================================&quot;</span>\n  python3.5 <span class=\"si\">${</span><span class=\"nv\">path3</span><span class=\"si\">}</span>definitions.py <span class=\"nv\">$SOURCE</span>\n  sleep <span class=\"m\">3</span>\n  git status\n<span class=\"k\">fi</span>\n\n<span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">$USEDEF</span> <span class=\"o\">]]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n  <span class=\"nb\">echo</span> <span class=\"s2\">&quot;=================================================================&quot;</span>\n  <span class=\"nb\">echo</span> <span class=\"o\">===</span> use definition files from relative path ../<span class=\"nv\">$SOURCE</span> <span class=\"o\">===</span>\n  <span class=\"nb\">echo</span> <span class=\"s2\">&quot;=================================================================&quot;</span>\n  cp ../<span class=\"nv\">$SOURCE</span>/ig.json <span class=\"nv\">$PWD</span>/ig.json\n  sed -i <span class=\"s2\">&quot;&quot;</span> <span class=\"s2\">&quot;s|source/pages|../</span><span class=\"nv\">$SOURCE</span><span class=\"s2\">/source/pages|g&quot;</span> <span class=\"si\">${</span><span class=\"nv\">PWD</span><span class=\"si\">}</span>/ig.json\n  sed -i <span class=\"s2\">&quot;&quot;</span> <span class=\"s2\">&quot;s|source/resources|../</span><span class=\"nv\">$SOURCE</span><span class=\"s2\">/source/resources|g&quot;</span> <span class=\"si\">${</span><span class=\"nv\">PWD</span><span class=\"si\">}</span>/ig.json\n  sed -i <span class=\"s2\">&quot;&quot;</span> <span class=\"s2\">&quot;s|source/examples|../</span><span class=\"nv\">$SOURCE</span><span class=\"s2\">/source/examples|g&quot;</span> <span class=\"si\">${</span><span class=\"nv\">PWD</span><span class=\"si\">}</span>/ig.json\n  sleep <span class=\"m\">3</span>\n  git status\n<span class=\"k\">fi</span>\n\n<span class=\"k\">if</span> <span class=\"o\">[[</span> <span class=\"nv\">$WATCH</span> <span class=\"o\">]]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n  <span class=\"nb\">echo</span> <span class=\"s2\">&quot;=================================================================&quot;</span>\n  <span class=\"nb\">echo</span> <span class=\"o\">===</span>un most recent version of the igpublisher with watch <span class=\"nv\">on</span> <span class=\"o\">===</span>\n  <span class=\"nb\">echo</span> <span class=\"s2\">&quot;=================================================================&quot;</span>\n  java -jar <span class=\"si\">${</span><span class=\"nv\">path1</span><span class=\"si\">}</span> -ig ig.json -watch -tx <span class=\"nv\">$NA</span>\n<span class=\"k\">elif</span> <span class=\"o\">[[</span> <span class=\"nv\">$PUB</span> <span class=\"o\">]]</span><span class=\"p\">;</span> <span class=\"k\">then</span>\n  <span class=\"nb\">echo</span> <span class=\"s2\">&quot;=================================================================&quot;</span>\n  <span class=\"nb\">echo</span> <span class=\"o\">===</span> run last known good version of the igpublisher run most recent version of the <span class=\"nv\">igpublisher</span> <span class=\"o\">===</span>\n  <span class=\"nb\">echo</span> <span class=\"s2\">&quot;=================================================================&quot;</span>\n  java -jar <span class=\"si\">${</span><span class=\"nv\">path2</span><span class=\"si\">}</span> -ig ig.json -watch -tx <span class=\"nv\">$NA</span>\n<span class=\"k\">else</span>\n  <span class=\"nb\">echo</span> <span class=\"s2\">&quot;=================================================================&quot;</span>\n  <span class=\"nb\">echo</span> <span class=\"o\">===</span>run igpublisher just once <span class=\"se\">\\(</span>no watch option<span class=\"se\">\\)</span><span class=\"o\">===</span>\n  <span class=\"nb\">echo</span> <span class=\"s2\">&quot;=================================================================&quot;</span>\n  java -jar <span class=\"si\">${</span><span class=\"nv\">path1</span><span class=\"si\">}</span> -ig ig.json -tx <span class=\"nv\">$NA</span>\n<span class=\"k\">fi</span>\n</pre></div>",
        "id": 175589216,
        "sender_full_name": "Eric Haas",
        "timestamp": 1568342574
    },
    {
        "content": "<p>Yeah, that's more complex than what I want.  First, the .bat/.sh script needs to be user independent and can't assume the existence of a downloads folder.  Second, I want separate scripts for the common combinations so that no-one needs to use commandline - they should be able to just launch whatever type of build they need to run.</p>",
        "id": 175590002,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1568344035
    },
    {
        "content": "<blockquote>\n<p>If it's native on Windows and Unix, I might take it anyhow.  Those who are using Windows 7 might have to manage the download on their own.</p>\n</blockquote>\n<p>Yes I agree. Win7 should not be a limiting factor... but it would be good to be aware of the limit.  Most organizations are off of win7, but there are some machines that have not yet been expired.  I think I am a month or two away from upgrade on the last machine that isn't win10.</p>",
        "id": 175612206,
        "sender_full_name": "John Moehrke",
        "timestamp": 1568371946
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> i read that PowersHell has an issue with TLS not being set to 1.2</p>",
        "id": 175612431,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1568372171
    },
    {
        "content": "<ul>\n<li>Perhaps this helps: run this before the download<br>\n[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12;</li>\n</ul>",
        "id": 175612446,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1568372192
    },
    {
        "content": "<p>the command line to download is <br>\nPOWERSHELL -command (new-object System.Net.WebClient).DownloadFile(\"https://fhir.github.io/latest-ig-publisher/org.hl7.fhir.publisher.jar\",\"org.hl7.fhir.publisher.jar\")</p>",
        "id": 175612549,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1568372304
    }
]