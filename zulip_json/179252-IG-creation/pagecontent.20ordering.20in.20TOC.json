[
    {
        "content": "<p>I'm working on a simple IG based on the fhir.base.template. I wamt to add several markdown files for adding specific pages accessible in the IG TOC. I understand the rendering uses the file name for the TOC and page title. How does the IG publisher determine the ordering of these pages? </p>\n<p>I thought I read somewhere to prefix the file name with a number to define the order, but haven't been able to find that reference. I tried prefixes such as \"1-MyPage.md\", \"2-AnotherPage.md\" and \"1.MyPage.md\", \"2.AnotherPage.md\", but the leading number was treated as text in the page title in both examples. What is the \"secret sauce\" to specifying the page order? I'd rather not have to use  <code>pages:</code> in sushi-config.yaml because I rather let the publisher render the content for me.</p>",
        "id": 224345164,
        "sender_full_name": "Joe Paquette",
        "timestamp": 1611848915
    },
    {
        "content": "<p>Sushi uses 1_pagename.md to set the order</p>",
        "id": 224348421,
        "sender_full_name": "David Pyke",
        "timestamp": 1611850054
    },
    {
        "content": "<p>index.md is the home page</p>",
        "id": 224348468,
        "sender_full_name": "David Pyke",
        "timestamp": 1611850071
    },
    {
        "content": "<p>The underscore is the \"secret sauce\" and it worked as expected. Many thanks!</p>",
        "id": 224357366,
        "sender_full_name": "Joe Paquette",
        "timestamp": 1611853097
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"211704\">Joe Paquette</span> <a href=\"#narrow/stream/179252-IG-creation/topic/pagecontent.20ordering.20in.20TOC/near/224345164\">said</a>:</p>\n<blockquote>\n<p>I'd rather not have to use  <code>pages:</code> in sushi-config.yaml because I rather let the publisher render the content for me.</p>\n</blockquote>\n<p>To be clear, the IG publisher doesn't render the pages differently in either case; it's just whether or not SUSHI builds up the page hierarchy for you or if you control it yourself.  The downside of using <code>pages:</code> is that you have to manually list your pages (and remember to add them as you create new pages), but the upside is better control of the page structure (nested pages!), better control of titles (divorced from filename), and cleaner URLs (since you don't need to put numbers in the filenames).</p>\n<p>Obviously we offer the page number prefix scheme because we know some people will prefer it, but I just wanted to be sure that the tradeoffs are clear!</p>",
        "id": 224368815,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1611857624
    },
    {
        "content": "<blockquote>\n<p>Sushi uses 1_pagename.md to set the order</p>\n</blockquote>\n<p>Can you point me to doco on this?  I was under the impression that the order was based on the order in the file tree ( alpha based  and driven by GitHub) when letting sushi assemble the IG resource? ( which I Love BTW - so much better than my version)</p>",
        "id": 224370984,
        "sender_full_name": "Eric Haas",
        "timestamp": 1611858542
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span>, it is documented <a href=\"https://fshschool.org/docs/sushi/project/#ig-projects\">here</a>:</p>\n<blockquote>\n<p><strong>N_pagename.xml|md</strong>: If present, these files will be generated as individual pages in the IG. The leading integer (N) determines the order of the pages in the table of contents. Adding a leading integer is optional, and in the absence of a leading integer, SUSHI will sort the pages alphabetically. The order of the pages can also be explitly specified with the <code>pages</code> property in sushi-config.yaml.</p>\n</blockquote>",
        "id": 224371704,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1611858831
    },
    {
        "content": "<p>Special treatment (vs just alphabetic) is important so that <code>10</code> comes after <code>9</code> and not before <code>2</code>.</p>",
        "id": 224371909,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1611858907
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span>! That is really helpful information.  I didn't fully understand how that worked, so now I can make a more informed decision as to if/when to use <code>pages:</code> in our project.  I'm still learning the details of Sushi/IG Publisher.  Thanks again for the clarifications.</p>",
        "id": 224385885,
        "sender_full_name": "Joe Paquette",
        "timestamp": 1611864638
    },
    {
        "content": "<p>You're very welcome!</p>",
        "id": 224388711,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1611866089
    }
]