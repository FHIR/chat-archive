[
    {
        "content": "<p>I added external dependencies to my IG (via the \"dependsOn\" in my IG ressource). Unfortunatly, while this works fine for IG Publisher packages,  I depend on one Simplifier Package (de.basisprofil.r4#0.9.2) which causes an error when added:</p>\n<div class=\"codehilite\"><pre><span></span>java.io.IOException: Unable to find the file other/spec.internals in the package de.basisprofil.r4\n</pre></div>\n\n\n<p>Is there any solution / workaround for this error so I can get my IG to build?</p>",
        "id": 191884993,
        "sender_full_name": "Noemi Deppenwiese",
        "timestamp": 1585229885
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span></p>",
        "id": 191898754,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1585235576
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> What's <code>other/spec.internals</code>? Can't find it in <a href=\"https://confluence.hl7.org/display/FHIR/NPM+Package+Specification\" title=\"https://confluence.hl7.org/display/FHIR/NPM+Package+Specification\">https://confluence.hl7.org/display/FHIR/NPM+Package+Specification</a>.<br>\nI worry multiple classes of packages are emerging. With or without snapshots, with or without implementation guides. I see multiple users running into that.</p>",
        "id": 191901994,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1585236788
    },
    {
        "content": "<p>This issue is not related to Simplifier. But related to the IG publisher not playing nice with the Package Spec.</p>",
        "id": 191923700,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1585245022
    },
    {
        "content": "<blockquote>\n<p>I worry multiple classes of packages are emerging</p>\n</blockquote>\n<p>yeah well, more collaboration on your part would help with that</p>",
        "id": 191933666,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585249426
    },
    {
        "content": "<p>I've been trying to make spec.nternals go away but haven't got there yet</p>",
        "id": 191933770,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585249463
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Sorry if we haven't. What's the best way: set a dedicated meeting, discuss at an upcoming FHIR-I, a dedicated Zulip thread? I'll set it up. Topics:</p>\n<ul>\n<li>Should every package include snapshots or can we expect consumers to be able to generate them? Is it an issue if some do and some don't?</li>\n<li>Should every package contain an IG resource? Is it an issue if some do and some don't?</li>\n<li>Should packages just the machine-readable content (FHIR resources) of an IG or also the human-readable (pages, images) part?</li>\n<li>Should anything be allowed in packages (like the tools-package with images for IGs)?</li>\n</ul>\n<p>And please add any requirements (spec.internals, others) you have for the IG publisher to the list, so we can discuss whether packages are the place for them and how.</p>",
        "id": 191996563,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1585303708
    },
    {
        "content": "<p>well, we can discuss it here. Some answers:</p>\n<ul>\n<li>all my packages will contain snapshots, but we haven't said that they must. OTOH, I think there's only 2 sets of code for generating them correctly, so  I think that they should.  I think it's important that we both use the same test cases. I know you haven't done anything about that or we'd be talking about the test cases</li>\n</ul>",
        "id": 191998529,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585304847
    },
    {
        "content": "<ul>\n<li>all packages that represent an IG should contain an IG resource. Other packages won't</li>\n</ul>",
        "id": 191998561,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585304862
    },
    {
        "content": "<ul>\n<li>I think packages should only contain the machine readable stuff. that's what the package spec says</li>\n</ul>",
        "id": 191998664,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585304919
    },
    {
        "content": "<ul>\n<li>anything is allowed in the packages in other folders, and it should still be the case. I use kind to tell the different kinds of packages apart</li>\n</ul>",
        "id": 191998732,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585304963
    },
    {
        "content": "<ul>\n<li>\n<p>Snapshots: I tend to agree it would be better if all packages had them. The worry has been the server load impact, I'll revisit what the impact would be and if we could manage to mandate them. </p>\n</li>\n<li>\n<p>Test cases: Yes, those are important. For the general .NET API there's the ticket you're familiar with: <a href=\"https://github.com/FirelyTeam/fhir-net-api/issues/1262\" title=\"https://github.com/FirelyTeam/fhir-net-api/issues/1262\">https://github.com/FirelyTeam/fhir-net-api/issues/1262</a>. That's for the API team (<span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> <span class=\"user-mention\" data-user-id=\"193551\">@Marco Visser</span>) to decide on. Package generation is in a separate library on our side. Are there dedicated tests for package generation, can't find them in <a href=\"https://github.com/FHIR/fhir-test-cases\" title=\"https://github.com/FHIR/fhir-test-cases\">https://github.com/FHIR/fhir-test-cases</a>. We should indeed have those to validate our works against the spec.</p>\n</li>\n</ul>\n<blockquote>\n<p>I think packages should only contain the machine readable stuff. that's what the package spec says</p>\n</blockquote>\n<ul>\n<li>I think you are only referring to the package folder in the package, given your next bullet. Indeed the current spec allows anything in other folders (even an empty package folder), but for size (hosting space, download size), security, clarity I'm not very comfortable with that. Packages not meant as the distribution of an API specification/data model seems like a misuse of packages to me.</li>\n<li><code>kind</code> is only part of the listing in your feed, for now, right? If it's needed, let's make a proposal to add it to the package manifest if there's already a definition for different kinds of packages in practice.</li>\n<li>How about any other requirements the IG publisher has on packages right now? Let's create a proposal for additions to the package spec, perhaps for a specific kind, and discuss it.</li>\n</ul>",
        "id": 192013342,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1585314369
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"221444\">@Noemi Deppenwiese</span> Sorry for going deep in the weeds following your question. Grahame, can we think of a shorter-term solution for her?</p>",
        "id": 192013502,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1585314451
    },
    {
        "content": "<p>it's on my todo to finish getting rid of the dependency on spec.internals which was supposed to be gone by now</p>",
        "id": 192057805,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585332537
    },
    {
        "content": "<p>so returning to this subject... what spec.internals does for me, that the package de.basisprofil.r4#0.9.2 doesn't, is tell me what html reference to use for a canonical URL. And the general canonical URL is not the right reference - there's version issues, and hosting issues (this one doesn't resolve at all)</p>",
        "id": 193176928,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586261423
    },
    {
        "content": "<p>so I don't know how to depend on the package in an implementation guide</p>",
        "id": 193176951,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586261440
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span> <span class=\"user-mention\" data-user-id=\"221444\">@Noemi Deppenwiese</span></p>",
        "id": 193176962,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586261450
    },
    {
        "content": "<p>If i understand you corretly, you're looking for the HTML of the (rendered) IG? As far as I can tell, that is always the \"url\" in the ImplementationGuide resource for Simplifier IGs.</p>",
        "id": 193203757,
        "sender_full_name": "Noemi Deppenwiese",
        "timestamp": 1586272794
    },
    {
        "content": "<p>so that references the root of the ig (with a redirect)</p>",
        "id": 193247815,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586293457
    },
    {
        "content": "<p>that doesn't make it possible for me to find the url for the individual resources</p>",
        "id": 193247968,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586293514
    },
    {
        "content": "<p>In this case the specific canonicals also redirect to the right pages in the Simplifier project, right? E.g.</p>\n<ul>\n<li><a href=\"http://fhir.de/CodeSystem/arge-ik/klassifikation\" title=\"http://fhir.de/CodeSystem/arge-ik/klassifikation\">http://fhir.de/CodeSystem/arge-ik/klassifikation</a> -&gt; <a href=\"https://simplifier.net/BasisprofilDE/klassifikation\" title=\"https://simplifier.net/BasisprofilDE/klassifikation\">https://simplifier.net/BasisprofilDE/klassifikation</a></li>\n<li><a href=\"http://fhir.de/StructureDefinition/practitioner-de-basis\" title=\"http://fhir.de/StructureDefinition/practitioner-de-basis\">http://fhir.de/StructureDefinition/practitioner-de-basis</a> -&gt; <a href=\"https://simplifier.net/BasisprofilDE/practitioner-de-basis\" title=\"https://simplifier.net/BasisprofilDE/practitioner-de-basis\">https://simplifier.net/BasisprofilDE/practitioner-de-basis</a></li>\n</ul>\n<p>For the more general case I get your point, this might not always be the case. I'll think about how we can provide that in general and how we could add that requirement to the spec.<br>\nWhat's the use of those html-URLs? Are you making web links in the IG publisher's results to where the parent profiles are described?</p>",
        "id": 193300498,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1586342321
    },
    {
        "content": "<p>interesting. the first canonical I tried didn't even resolve. those ones you have there do. but how does versioning work?</p>",
        "id": 193307936,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586346916
    },
    {
        "content": "<p>and yes, that's the use</p>",
        "id": 193307947,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586346931
    },
    {
        "content": "<p>the packaging, it doesn't matter, but the generated html links to the right version of the content</p>",
        "id": 193307972,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586346955
    },
    {
        "content": "<p>I'm moving away from spec.internals because we added a way to do that in the IG resource in R4. So that means that the IG generator has to find somewhere to put an R4 IG for older versions of the spec ... that's why I haven't done it yet; it holds certain... challenges...</p>",
        "id": 193308107,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586347035
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> What do packages in practice currently need to have on top of <a href=\"https://confluence.hl7.org/display/FHIR/NPM+Package+Specification#NPMPackageSpecification-ImplementationGuidesandpackages\">https://confluence.hl7.org/display/FHIR/NPM+Package+Specification#NPMPackageSpecification-ImplementationGuidesandpackages</a> to be accepted as a dependency for the IG publisher?</p>\n<ol>\n<li><code>other/spec.internals</code>?</li>\n<li><code>.index.json</code> not anymore, right?</li>\n<li>I see in a created package both <code>ig-r4.json</code> and <code>ImplementationGuide-nl.wardweistra.acme.json</code>. Is that needed (not sure why this happened, maybe misuse of IG publisher by me)?</li>\n<li>In the package manifest: <code>directories</code>? <code>tools-version</code>? <code>type</code>? <code>date</code>?</li>\n<li>Anything else?</li>\n</ol>",
        "id": 197699421,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1589552985
    },
    {
        "content": "<ul>\n<li>not required: .index.json will be built on the fly if not not found</li>\n<li>required in the package manifest (I think): name | version | canonical | url | fhirVersions (if no dependency) </li>\n</ul>\n<p>With regard to spec.internals, we are trying to phase it out, but haven't done so yet. It's how I locate resources to refer to them in the web. Last time round we discussed this, simplifier packages do not have a way to locate the correct version on the web, and the discussion stopped before this was resolved. So right now, I can't depend on simplifier packages because this is unresolved. One way to resolve this would be spec.internals, but I'm trying to phase that out and replace it with just using the IG resource, but I need the more recent version of the IG resource to do that. Hence, producing ig-r.json. Only, I don't use that yet, because the we didn't finish that discussion I referred to above.</p>",
        "id": 197725431,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589563877
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Simplifier has a way to find the webpage for a specific resource by providing a package name + version and canonical: eg <a href=\"https://simplifier.net/resolve?scope=nictiz.fhir.nl.stu3.zib2017@1.3.9&amp;canonical=http://fhir.nl/fhir/StructureDefinition/nl-core-patient\">https://simplifier.net/resolve?scope=nictiz.fhir.nl.stu3.zib2017@1.3.9&amp;canonical=http://fhir.nl/fhir/StructureDefinition/nl-core-patient</a>. I guess that could be a way for the IG Publisher to link to the web version.</p>\n<p>Another way could of course be to change the IG publisher logic, to not require having a direct link to the parent profile, but linking to the base URL for the Implementation Guide (from the IG resource) and let them find the right parent profile themselves? A little less user friendly, but it more robust, not needing any data that isn't guaranteed to be there.</p>",
        "id": 197728824,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1589565404
    },
    {
        "content": "<blockquote>\n<p>A little less user friendly</p>\n</blockquote>\n<p>Entirely not at all user friendly and I won't consider it</p>",
        "id": 197729102,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589565514
    },
    {
        "content": "<p>why is the other method not guaranteed?</p>",
        "id": 197729290,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589565597
    },
    {
        "content": "<p>The resolve URL (<a href=\"https://simplifier.net/resolve?scope=nictiz.fhir.nl.stu3.zib2017@1.3.9&amp;canonical=http://fhir.nl/fhir/StructureDefinition/nl-core-patient\">https://simplifier.net/resolve?scope=nictiz.fhir.nl.stu3.zib2017@1.3.9&amp;canonical=http://fhir.nl/fhir/StructureDefinition/nl-core-patient</a>) works for every package in the package registry.</p>",
        "id": 197729720,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1589565771
    },
    {
        "content": "<p>so it is guaranteed then?</p>",
        "id": 197729797,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589565799
    },
    {
        "content": "<p>That URL is. So, I'm happy if you want to use that to create these links.</p>",
        "id": 197730461,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1589566086
    },
    {
        "content": "<p>ok I'll work on that next week</p>",
        "id": 197730501,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589566105
    },
    {
        "content": "<p>so the problem for me is that I can't tell whether a package is a simplifier package or not. There's no way is there?</p>",
        "id": 198155945,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589952193
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span></p>",
        "id": 198157331,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589953992
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Not yet. Although for now likely every package not from the IG publisher will be a Simplifier package? But that might someday change. (Still the url pattern will give a page for each registry package)</p>\n<p>I expect the Registry work to introduce a way to show from which feed it came to the registry. But perhaps it's better if you didn't have to write code per feed and in the package spec, we add support for either adding a link per resource (already there with via the manifest of the IG resource?) or providing a url pattern?</p>\n<p>Do you ever need web urls for examples from dependency packages? Since I believe they generally don't have a canonical the resolving URL pattern based on canonical doesn't work for them.</p>",
        "id": 198160569,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1589957726
    },
    {
        "content": "<p>for IGs that we publish, all resources resolve, not just the canonicals.</p>",
        "id": 198161737,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589958731
    },
    {
        "content": "<p>that's convenient but not mandatory. But if people reference them, what to do but reference their web location?</p>",
        "id": 198161775,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589958766
    },
    {
        "content": "<p>it's true that all packages that don't have a spec.internals currently come from simplifier.</p>",
        "id": 198161882,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589958848
    },
    {
        "content": "<p>it would be good to transition to ImplementationGuide.manifest.resource.relativePath. That's still on my todo list</p>",
        "id": 198161928,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589958902
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span> Simplifier is not populating StructureDefinition.derivation. The Java code won't process structure definitions unless they declare whether they are a constraint or a specialization. </p>\n<p>Technically, the element is optional since there's one type that doesn't have a base definition. Otherwise, it's supposed to be populated but we overlooked making the constraint. </p>\n<p>I suppose Simplifier imagines that \"constraint\" is the default. But is it set for logical models?</p>",
        "id": 198165952,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589961759
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I asked this in the API team and it seems Forge does populate <code>StructureDefinition.derivation</code> with <code>constraint</code> for StructureDefinitions and <code>specialization</code> for Logical Models and snapshot generator does not touch it. Perhaps we don't fill it if people upload a SD without it.</p>\n<p>Taking a random (not random, my goto profile actually) it does seem to be filled: <a href=\"https://simplifier.net/NictizSTU3-Zib2017/nl-core-patient/~xml\">https://simplifier.net/NictizSTU3-Zib2017/nl-core-patient/~xml</a>. Any specific packages where you ran into this?</p>",
        "id": 198210730,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1589986742
    },
    {
        "content": "<p>The first package I worked with is de.basisprofil.r4#0.9.2 - Extension-gender-amtlich-de.json</p>",
        "id": 198250630,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1590005320
    },
    {
        "content": "<p>Indeed, it is not filled in that Extension in that package version: <a href=\"https://simplifier.net/packages/de.basisprofil.r4/0.9.2/files/114506/~xml\">https://simplifier.net/packages/de.basisprofil.r4/0.9.2/files/114506/~xml</a><br>\nHowever, it is filled in the most recent version of the package: <a href=\"https://simplifier.net/packages/de.basisprofil.r4/0.9.6/files/129547/~xml\">https://simplifier.net/packages/de.basisprofil.r4/0.9.6/files/129547/~xml</a><br>\nAdded to the extension in March: <a href=\"https://simplifier.net/Basisprofil-DE-R4/GenderAmtlichDE/$diff/4/5/Original\">https://simplifier.net/Basisprofil-DE-R4/GenderAmtlichDE/$diff/4/5/Original</a><br>\nSeems <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> <a href=\"https://github.com/hl7germany/basisprofil-de-r4/commit/4b2564bc90da9e66ca6b0263f9af25c750c1887f#diff-5162d63e92b86810dbc7431bb9a4d9a3\">added it manually</a>, likely because the Java tooling didn't like it? Patrick, do you know how the extension was created, why derivation was missing in the first place? Or perhaps the creator <span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span>? Since Forge seems to include it with any new Extension and doesn't even allow you to change it.</p>",
        "id": 198261903,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1590011616
    },
    {
        "content": "<p>ok, well, the next release of the IG publisher will support simplifier packages. At least in principle. You can now declare a simplifier package in your dependencies:</p>\n<div class=\"codehilite\"><pre><span></span><code>  <span class=\"nt\">&lt;dependsOn</span> <span class=\"na\">id=</span><span class=\"s\">&quot;debasis&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;uri</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://fhir.de&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;packageId</span> <span class=\"na\">value=</span><span class=\"s\">&quot;de.basisprofil.r4&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;version</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0.9.6&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;/dependsOn&gt;</span>\n</code></pre></div>\n\n\n<p>And the IG will run. I expect that there will be lots of downstream problems, so I'm just calling this provisional support at this time</p>",
        "id": 198271630,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1590018822
    },
    {
        "content": "<p>note that for simplifier packages, it's the packageId and version that matter - the canonical URL can be determined from the package</p>",
        "id": 198271719,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1590018870
    },
    {
        "content": "<p>Would it be possible for me to test UK/NHS packages with this? <span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span> Presume I run the IG Publisher against the simplifier package?</p>",
        "id": 198519111,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1590210687
    },
    {
        "content": "<p>it would be good for you to try. You can't 'run the IG publisher against the simplifier package'. What you can do is refer to a simplifier package from an IG publisher project</p>",
        "id": 198521644,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1590215940
    },
    {
        "content": "<p>Wonderful <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>, thanks. I'll get testing on Monday. Both on depending on a Simplifier package with IG publisher and creating an IG publisher IG from a Simplifier project.</p>",
        "id": 198525892,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1590223855
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179252-IG-creation/topic/IG.20Publisher.20and.20Simplifier.20packages/near/197725431\">said</a>:</p>\n<blockquote>\n<ul>\n<li>not required: .index.json will be built on the fly if not not found</li>\n</ul>\n</blockquote>\n<p>Thoughts on why I run into this error building an IG with the publisher on <a href=\"https://simplifier.net/packages/de.basisprofil.r4/0.9.7\">de.basisprofil.r4@0.9.7</a>?</p>\n<div class=\"codehilite\"><pre><span></span><code>Publishing Content Failed: Error parsing C:\\Users\\Ward\\.fhir\\packages\\de.basisprofil.r4#0.9.7\\package\\.index.json: null (00:26.0931)\n                                                                                 (00:26.0931)\nUse -? to get command line help                                                  (00:26.0931)\n                                                                                 (00:26.0932)\nStack Dump (for debugging):                                                      (00:26.0932)\njava.io.IOException: Error parsing C:\\Users\\Ward\\.fhir\\packages\\de.basisprofil.r4#0.9.7\\package\\.index.json: null\n        at org.hl7.fhir.utilities.cache.NpmPackage.loadFiles(NpmPackage.java:251)\n        at org.hl7.fhir.utilities.cache.NpmPackage.fromFolder(NpmPackage.java:213)\n        at org.hl7.fhir.utilities.cache.FilesystemPackageCacheManager.loadPackageInfo(FilesystemPackageCacheManager.java:144)\n        at org.hl7.fhir.utilities.cache.FilesystemPackageCacheManager.loadPackageFromCacheOnly(FilesystemPackageCacheManager.java:311)\n        at org.hl7.fhir.igtools.publisher.Publisher.loadIg(Publisher.java:2533)\n        at org.hl7.fhir.igtools.publisher.Publisher.initializeFromIg(Publisher.java:1745)\n        at org.hl7.fhir.igtools.publisher.Publisher.initialize(Publisher.java:1325)\n        at org.hl7.fhir.igtools.publisher.Publisher.execute(Publisher.java:692)\n        at org.hl7.fhir.igtools.publisher.Publisher.main(Publisher.java:7533)\nCaused by: java.lang.NullPointerException\n        at org.hl7.fhir.utilities.cache.NpmPackage$NpmPackageFolder.readIndex(NpmPackage.java:125)\n        at org.hl7.fhir.utilities.cache.NpmPackage.loadFiles(NpmPackage.java:249)\n        ... 8 more\n</code></pre></div>",
        "id": 200956564,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1592262550
    },
    {
        "content": "<p>Got the same when using <code>hl7.fhir.us.core</code>... Removed the FHIR cache and now it runs for us.core.</p>",
        "id": 201019327,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1592316161
    },
    {
        "content": "<p>Aaand it also runs for <code>de.basisprofil.r4</code> now <span aria-label=\"heart\" class=\"emoji emoji-2764\" role=\"img\" title=\"heart\">:heart:</span></p>",
        "id": 201020516,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1592316654
    },
    {
        "content": "<p>I do get some curious errors though, especially:</p>\n<blockquote>\n<p>unable to parse character reference [...] This structure is derived from &lt;a href=\"null/https://simplifier.net/resolve?scope=de.basisprofil.r4@0.9.7&amp;canonical=http://fhir.de/StructureDefinition/practitioner-de-basis\"&gt;PractitionerDeBasis&lt;/a&gt; [...]<br>\n<a href=\"/user_uploads/10155/MLfte1E6E7sDcUZuH0oY9No6/image.png\">image.png</a> </p>\n</blockquote>\n<p>Is that <code>null</code> the IG base URL or something?</p>",
        "id": 201021169,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1592316931
    },
    {
        "content": "<p>Terminal output:</p>\n<div class=\"codehilite\"><pre><span></span><code>Internal error in location for message: &#39;Error in ?? at 1, 1: Premature ExpressionNode termination at unexpected token &quot;:&quot;&#39;, loc = &#39;C:\\Users\\Ward\\Documents\\FHIR workspace\\R4\\SushiProjectGerman\\build\\output\\StructureDefinition-anId-d&#39;, err = &#39;unable to parse character reference &#39;canonical=http://fhir.de/StructureDefinition/identifier-lanr&quot; t&#39;\nInternal error in location for message: &#39;Error in ?? at 1, 1: Premature ExpressionNode termination at unexpected token &quot;:&quot;&#39;, loc = &#39;C:\\Users\\Ward\\Documents\\FHIR workspace\\R4\\SushiProjectGerman\\build\\output\\StructureDefinition-anId.h&#39;, err = &#39;unable to parse character reference &#39;canonical=http://fhir.de/StructureDefinition/practitioner-de-ba&#39;\n</code></pre></div>\n\n\n<p>Would love to hear if this is a legitimate problem with the package or other pointers.</p>",
        "id": 201024164,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1592318091
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Where does the IG publisher get packages, specifically the <code>hl7.fhir.us.core</code> package, from? From using the IG publisher, I get a different version of the <code>hl7.fhir.us.core@3.1.0</code> package (with a single package root folder). From using Sushi or Forge I get the one being served from <a href=\"http://packages.fhir.org\">packages.fhir.org</a>, still with the multiple root folder as it was offered originally.<br>\nMultiple versions of the same package version are really scary to me. Can we make the IG publisher look on <a href=\"http://packages.fhir.org\">packages.fhir.org</a> first?</p>\n<p>Also, the IG publisher fails with the above <code>java.io.IOException: Error parsing C:\\Users\\Ward\\.fhir\\packages\\hl7.fhir.us.core#3.1.0\\package\\.index.json: null</code> error when using the package from the package cache if installed with Forge. It doesn't fail when Sushi (or the IG publisher) installs the package. I assume that is because Sushi is also updating the package/.index.json file which IG Publisher then still relies on, because I see the .index.json in the Sushi version of the package is indeed updated.</p>",
        "id": 201165383,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1592410998
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span> -- see this thread which speaks of the magic IG Publisher (and now SUSH) does for older package formats: <a href=\"#narrow/stream/215610-shorthand/topic/dev.20dependencies/near/199502644\">https://chat.fhir.org/#narrow/stream/215610-shorthand/topic/dev.20dependencies/near/199502644</a></p>\n<p>In short, when we detect the old package format, we fix it before storing it in the <code>.fhir</code> cache.</p>",
        "id": 201166006,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1592411305
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span>. I read that earlier, but didn't comprehend the impact. I've updated my sushi and indeed see the same post-processed package coming from sushi and IG publisher.</p>\n<p>However, sushi doesn't fail on the package installed by Forge (without an post-processed package/.index.json), where the IG publisher does. That is still something that likely needs resolving.</p>",
        "id": 201167150,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1592411879
    },
    {
        "content": "<p>SUSHI doesn't even look at the <code>.index.json</code> file, so that may be why it doesn't fail.</p>",
        "id": 201169555,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1592413005
    },
    {
        "content": "<p>how do I get forge to install a package?</p>",
        "id": 201194732,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1592425007
    },
    {
        "content": "<p>I can't reproduce this: </p>\n<blockquote>\n<p>Internal error in location for message: 'Error in ?? at 1, 1: Premature ExpressionNode termination at unexpected token \":\"', loc = 'C:\\Users\\Ward\\Documents\\FHIR workspace\\R4\\SushiProjectGerman\\build\\output\\StructureDefinition-anId-d', err = 'unable to parse character reference 'canonical=http://fhir.de/StructureDefinition/identifier-lanr\" t'</p>\n</blockquote>",
        "id": 201197982,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1592426666
    },
    {
        "content": "<p>and I can't figure out how to get torinox to run, or forge to install a package. but do you get a stack dump?</p>",
        "id": 201198036,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1592426695
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span> The .index.json file that Torinox installs does not conform to the specification, so the IG pbulisher fails to read it. The specification is here: <a href=\"https://confluence.hl7.org/display/FHIR/NPM+Package+Specification#NPMPackageSpecification-.index.json\">https://confluence.hl7.org/display/FHIR/NPM+Package+Specification#NPMPackageSpecification-.index.json</a></p>\n<p>Instead, the torinox file looks like:</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n  &quot;date&quot;: &quot;2020-06-18T17:11:33.8586458+10:00&quot;,\n  &quot;canonicals&quot;: {\n    &quot;http://hl7.org/fhir/us/core/CapabilityStatement/us-core-client&quot;: &quot;CapabilityStatement-us-core-client.json&quot;,\n...\n</code></pre></div>",
        "id": 201234830,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1592464674
    },
    {
        "content": "<p>IG publisher won't crash in the future. It'll just overwrite any .index.json that doesn't have <code>\"index-version\": 1</code> as specified.</p>",
        "id": 201237762,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1592467025
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Sorry, I was completely convinced the .NET packages library didn't touch package/.index.json, but you are right that it does. I'll look into fixing that, but regenerating it as stated in the spec should work.<br>\nInstalling with Forge: Open a Profile Folder &gt; go to Dependencies tab &gt; Select Simplifier to search there &gt; Search for package name &gt; Select version and click Add.</p>",
        "id": 201261464,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1592483911
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> The only likely relevant part in the terminal on the internal error seems to be:</p>\n<div class=\"codehilite\"><pre><span></span><code>Generating Summary Outputs                                                       (00:39.0686)\nSending Usage Stats to Server                                                    (00:49.0863)\nJekyll: Source: C:/Users/Ward/Documents/FHIR workspace/R4/SushiProjectGerman/build/temp/pages (00:54.0547)\nJekyll: Generating...                                                            (00:54.0548)\nJekyll: done in 2.294 seconds.                                                   (00:56.0848)\nInstalling nl.wardweistra.acme#dev to the package cache\n  Fetching:\n  Installing: Checking Output HTML                                                             (00:57.0152)\nfound 517 files                                                                  (00:57.0207)\n  ... 517 html files, 2 pages invalid xhtml (0%)                                 (01:03.0488)\n  ... 31089 links, 11 broken links (0%)                                          (01:03.0489)\nBuild final .zip                                                                 (01:03.0489)\nFinal .zip built                                                                 (01:04.0013)\ncontext [anonymous] 2:13 attribute path isn&#39;t defined\nInternal error in location for message: &#39;Error in ?? at 1, 1: Premature ExpressionNode termination at unexpected token &quot;:&quot;&#39;, loc = &#39;C:\\Users\\Ward\\Documents\\FHIR workspace\\R4\\SushiProjectGerman\\build\\output\\StructureDefinition-anId-d&#39;, err = &#39;unable to parse character reference &#39;canonical=http://fhir.de/StructureDefinition/identifier-lanr&quot; t&#39;\nInternal error in location for message: &#39;Error in ?? at 1, 1: Premature ExpressionNode termination at unexpected token &quot;:&quot;&#39;, loc = &#39;C:\\Users\\Ward\\Documents\\FHIR workspace\\R4\\SushiProjectGerman\\build\\output\\StructureDefinition-anId.h&#39;, err = &#39;unable to parse character reference &#39;canonical=http://fhir.de/StructureDefinition/practitioner-de-ba&#39;\nFinished. 00:34.0645. Validation output in C:\\Users\\Ward\\Documents\\FHIR workspace\\R4\\SushiProjectGerman\\build\\output\\qa.html\nErrors: 2, Warnings: 3, Info: 0, Broken Links = 11 (01:04.0393)\nDone                                                                             (01:04.0399)\nPress any key to continue . . .\n</code></pre></div>\n\n\n<p>Or is there a place to find more output?</p>\n<p>My ImplementationGuide has:</p>\n<div class=\"codehilite\"><pre><span></span><code>  &quot;dependsOn&quot;: [\n    {\n      &quot;uri&quot;: &quot;https://simplifier.net/guide/basisprofil-de-r4&quot;,\n      &quot;packageId&quot;: &quot;de.basisprofil.r4&quot;,\n      &quot;id&quot;: &quot;de_basisprofil_r4&quot;,\n      &quot;version&quot;: &quot;0.9.7&quot;\n    }\n  ]\n</code></pre></div>\n\n\n<p>The only resource I'm using is a very simple derived profile from the <a href=\"https://simplifier.net/packages/de.basisprofil.r4/0.9.7/files/133437\">German base practitioner</a>.</p>",
        "id": 201263635,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1592485177
    },
    {
        "content": "<p>Here's the project on Github for reproduction: <a href=\"https://github.com/wardweistra/SushiProjectGerman\">https://github.com/wardweistra/SushiProjectGerman</a></p>",
        "id": 201269417,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1592487920
    },
    {
        "content": "<p>ok thanks. I'll look into it</p>",
        "id": 201297084,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1592499659
    },
    {
        "content": "<p>ok, well, we haven't had a canonical URL that included a &amp; before. All the errors were associated with that. I've fixed them in the next release (probably about 24 hours away)</p>",
        "id": 201344776,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1592530689
    }
]