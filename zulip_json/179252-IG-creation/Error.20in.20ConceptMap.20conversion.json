[
    {
        "content": "<p>My input ConceptMap contains:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;element&gt;</span>\n    <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;55561003&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;display</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Active&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;target&gt;</span>\n        <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;active&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;display</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Active&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;equivalence</span> <span class=\"na\">value=</span><span class=\"s\">&quot;equal&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/target&gt;</span>\n<span class=\"nt\">&lt;/element&gt;</span>\n<span class=\"nt\">&lt;element&gt;</span>\n    <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;55561003&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;display</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Active&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;target&gt;</span>\n        <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;recurrence&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;display</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Recurrence&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;equivalence</span> <span class=\"na\">value=</span><span class=\"s\">&quot;specializes&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/target&gt;</span>\n<span class=\"nt\">&lt;/element&gt;</span>\n</pre></div>\n\n\n<p>The html rendering displays:</p>\n<div class=\"codehilite\"><pre><span></span>55561003 (Active) equivalent active\n55561003 (Active) narrower recurrence\n</pre></div>\n\n\n<p>And the QA page says:</p>\n<div class=\"codehilite\"><pre><span></span>ConceptMap/ProbleemStatusCodelijst-to-Condition-Clinical-Status-Codes: ConceptMap.jurisdiction[0].coding[0] information Code System URI &#39;urn:iso:std:iso:3166&#39; is unknown so the code cannot be validated\nConceptMap/ProbleemStatusCodelijst-to-Condition-Clinical-Status-Codes: ConceptMap.group[0].element[1].target[0] error cmd-1: If the map is narrower or inexact, there SHALL be some comments [comment.exists() or equivalence.empty() or ((equivalence != &#39;narrower&#39;) and (equivalence != &#39;inexact&#39;))]\n</pre></div>\n\n\n<p>I can sure enough add a comment to satisfy the complaint, but is it correct to phrase a different equivalence value than the STU3 ConceptMap has?</p>",
        "id": 188402542,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1581968561
    },
    {
        "content": "<p>Secondly: the <a href=\"http://hl7.org/fhir/STU3/conceptmap-definitions.html#ConceptMap.group.element.target.equivalence\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/conceptmap-definitions.html#ConceptMap.group.element.target.equivalence\">STU3 ConceptMap</a> says that equivalence serves to state relationship <em>from target to source</em>, not the other way around</p>\n<p><em>The equivalence between the source and target concepts (counting for the dependencies and products). The equivalence is read from target to source (e.g. the target is 'wider' than the source).</em></p>",
        "id": 188402723,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1581968789
    },
    {
        "content": "<p>For R5 we're in the process of cleaning up the ConceptMap \"equivalence\" codes (replacing them with a simpler set of \"relationship\" codes) and fixing the language and the codes themselves to more clearly and unambiguously indicate the direction for the \"narrower\" and \"wider/broader\" codes.  In this case, 'specializes' in STU3/R4 is converted to 'narrower' in the current CI build - but that is going to be changed (very soon) to 'source_is_broader_than_target' (or 'source-is-broader-than-target'), based on our continuing discussions prior to and in Sydney and our vote last week on these proposed ConceptMap changes for R5.</p>",
        "id": 188406421,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1581973270
    },
    {
        "content": "<p>but that is R5, <span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span>'s point is quite valid</p>",
        "id": 188412814,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581981791
    },
    {
        "content": "<p>Sure.  I agree that 'specializes' shouldn't be changed to 'narrower' for an instance in STU3 (or R4).  I mentioned R5 because that conversion <strong>would</strong> be applied in going from STU3 or R4 to the current CI build (although the 'narrower' code is going to be changed soon), and at first that triggered the thought that the conversion code may have been applied incorrectly - but that appears to be a coincidence.</p>",
        "id": 188422714,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1581999583
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> / <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> there are two points here:</p>\n<ul>\n<li>\n<p>you’d expect an STU3 ConceptMap to be rendered as an STU3 ConceptMap. Current rendering has all characteristics of R5. I think Grahame indicates he’s going to look into that?</p>\n</li>\n<li>\n<p>Vocab aims to reverse the semantics of the equivalence from target-to-source to source-to-target in R5. I think that is going to make  the conversion process a lot harder. In fact for people not using the IG Publisher it might be a gem they overlook and a source of confusion and bugs. I would vote against this change. It aims to end confusion but in doing so will add more (is my expectation). Target-to-source has been explicitly documented for the longest time, it was never ambiguous, just overlooked.</p>\n<ul>\n<li>Afterthought on why conversion might even be impossible: the IG Publisher requests a comment that tells something about the equivalence. I've just added these comments, but those make a whole lot less sense if the direction of the equivalence is reversed.</li>\n</ul>\n</li>\n</ul>\n<p>I see that the new <em><a href=\"http://build.fhir.org/conceptmap-definitions.html#ConceptMap.group.element.target.relationship\" target=\"_blank\" title=\"http://build.fhir.org/conceptmap-definitions.html#ConceptMap.group.element.target.relationship\">relationship</a></em> element still has the same semantics by the way: <em>The relationship is read from target to source (e.g. the target is 'broader' than the source).</em></p>",
        "id": 188423298,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1582000690
    },
    {
        "content": "<p>As product director, I will insist on asking the implementers about reversing the direction. I'm.. ambivalent... myself</p>",
        "id": 188426691,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582007269
    },
    {
        "content": "<p>I will fix the rendering. <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> I think that this is arguing against the changes vocb has made there</p>",
        "id": 188426749,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582007383
    },
    {
        "content": "<p>and yes, I'm fixing the rendering</p>",
        "id": 188426793,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582007410
    },
    {
        "content": "<p>should be fixed next release</p>",
        "id": 188491961,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582060479
    },
    {
        "content": "<p>ConceptMap says </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;element&gt;</span>\n  <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;55561003&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;display</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Active&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;target&gt;</span>\n    <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;recurrence&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;display</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Recurrence&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;equivalence</span> <span class=\"na\">value=</span><span class=\"s\">&quot;specializes&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;comment</span> <span class=\"na\">value=</span><span class=\"s\">&quot;When problem is recurring, ...&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;/target&gt;</span>\n<span class=\"nt\">&lt;/element&gt;</span>\n</pre></div>\n\n\n<p>While the xml means <em>recurrence specializes active</em>, the html seems to be saying the opposite. Could it be that vocab is aiming to reverse the direction of relationship because of the HTML rendering?</p>\n<p><a href=\"/user_uploads/10155/nFrC363JZas8VUDzYhDJmlmv/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/nFrC363JZas8VUDzYhDJmlmv/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/nFrC363JZas8VUDzYhDJmlmv/pasted_image.png\"></a></div>",
        "id": 188540326,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1582116121
    },
    {
        "content": "<p>Yes, that's part of it.  It should read with the correct semantics when it's presented in a <code>source | relationship | target</code> table format - which it would if the relationship was <code>has-narrower-target</code>.  But the decision in Vocab is that the relationship will now become <code>source_is_broader_than_target</code> (or possibly <code>source-is-broader-than-target</code>), so the table display rendering (leaving off the fourth column) would become  <code>55561003 (Active) | source-is-broader-than-target | recurrence</code>.</p>",
        "id": 188544244,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1582119536
    },
    {
        "content": "<p>But if the HTML rendering is off you fix the HTML rendering, right? What's been decided effectively retrofits the ConceptMap into the rendering thereof.</p>",
        "id": 188556116,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1582127291
    },
    {
        "content": "<p>the rendering is for humans. The ConceptMap is for tools. You break the connection between tooling and ConceptMaps to please the human eye :-)</p>",
        "id": 188556225,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1582127382
    },
    {
        "content": "<p>ok so how about <br>\n<a href=\"/user_uploads/10155/CHcT-yjwd66Qi9m0gslJoKm9/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/CHcT-yjwd66Qi9m0gslJoKm9/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/CHcT-yjwd66Qi9m0gslJoKm9/pasted_image.png\"></a></div>",
        "id": 188601867,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582160484
    },
    {
        "content": "<p>Works for me. I like it. <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> ?</p>",
        "id": 188623764,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1582192454
    },
    {
        "content": "<p>I'm not seeing this as helpful - and I think it probably is going in the wrong direction.  For mapping, I think that 'equivalent' (not 'equal') and 'broader' or 'narrower' (rather than 'subsumes' or 'specializes') are the semantics that are the most appropriate (in whatever specific permutations of the actual code strings we decide to use).  That's what we did in the new simplified code system and value set (that Alexander said he agreed with earlier).  I think I still prefer to stay with those changes and to finish nailing down the specific codes to use for the \"broader\" and \"narrower\" cases.  I think you can only rarely (if ever) talk meaningfully and definitively about subsumption relationships between concepts in different code systems, which still is the primary use case for terminology mapping generally and specifically for the ConceptMap resource.</p>",
        "id": 188654364,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1582216802
    },
    {
        "content": "<p>so first of all, you're on the wrong track with what you are commenting about.</p>",
        "id": 188673939,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582230069
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span> (who's off for a week) and I are working on the rendering of an R3 concept map, not interested in the R5 changes. So first I'll comment on that</p>",
        "id": 188673977,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582230104
    },
    {
        "content": "<p>Alexander's criticism was around the presentation of the directionality of the relationships - because the renderer simply renders the code, the presentation is mis-leading. So I've provided substitute wording to convey the directionality in the rendering, and that was what I was asking about</p>",
        "id": 188674107,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582230194
    },
    {
        "content": "<p>On the subject of the R5 changes:</p>\n<ul>\n<li>when it comes to big public terminologies like snomed etc, you're right about rarely talking about subsumption</li>\n<li>but when it comes to private codes around status etc, it's actually pretty common to be able to say definitely that concepts are subsumed. I feel as though Vocab is ignoring the actual use of ConceptMap here</li>\n</ul>",
        "id": 188674258,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582230304
    },
    {
        "content": "<p>Well, sorry about that.  There has been some discussion in the topic about the proposed R5 changes.  I see now that your rendering of the relationship was a description rather than the code, but without an explanation of that I'm not sure that was particularly clear.  Anyway, I get what you are trying to do.  And I think we do (or will) need to consider where we'll end up on this for R5.</p>",
        "id": 188674738,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1582230685
    },
    {
        "content": "<p>I did the same for R5 - convey the directionality in the description (where it matters)</p>",
        "id": 188675641,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582231430
    },
    {
        "content": "<p>if the directionality flips over then the descriptions will have to flip</p>",
        "id": 188675688,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582231445
    },
    {
        "content": "<p>right - thanks</p>",
        "id": 188675734,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1582231486
    },
    {
        "content": "<p>I agree that having the directionality in the displayed description/definition text is where it is really needed, if that is sufficiently clear (and this will help).  I'm not sure that we need to (or should) also force all of those semantics into the codes themselves (we already don't have meaningless identifiers, but this would take us even farther in the other direction).</p>",
        "id": 188684916,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1582237167
    },
    {
        "content": "<p>I'm not proposing to change the codes</p>",
        "id": 188687157,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582238751
    },
    {
        "content": "<p>Yes, I understand that you are not - at first I thought that was what you were doing, hence my reaction (apologies for the confusion).</p>",
        "id": 188687387,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1582238898
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Error.20in.20ConceptMap.20conversion/near/188674107\" title=\"#narrow/stream/179252-IG-creation/topic/Error.20in.20ConceptMap.20conversion/near/188674107\">said</a>:</p>\n<blockquote>\n<p>Alexander's criticism was around the presentation of the directionality of the relationships - because the renderer simply renders the code, the presentation is mis-leading. So I've provided substitute wording to convey the directionality in the rendering, and that was what I was asking about</p>\n</blockquote>\n<p>why do not \"just\" invert the order of the columns in the shown html (i.e. target - relationship - source) and keep the codes as they are now ? <br>\nor do you think that also this may be misleading in term of directionality of the map?</p>",
        "id": 188735694,
        "sender_full_name": "Giorgio Cangioli",
        "timestamp": 1582295292
    },
    {
        "content": "<p>BTW, is there any specific reason why \"equivalent\" and \"equal\" are both shown as \"equivalent\" ?</p>",
        "id": 188735774,
        "sender_full_name": "Giorgio Cangioli",
        "timestamp": 1582295348
    },
    {
        "content": "<p>In the CI build (for R5) there is only 'equivalent', and when converting an instance from an earlier version to CI/R5 'equal' will be converted to 'equivalent'.  But that shouldn't be happening if the rendering is being done in R4 or STU3.</p>",
        "id": 188736183,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1582295601
    },
    {
        "content": "<p>Working with R4, but not a problem to use only the \"equivalent\" concept..thanks</p>",
        "id": 188737985,
        "sender_full_name": "Giorgio Cangioli",
        "timestamp": 1582296687
    },
    {
        "content": "<blockquote>\n<p>is there any specific reason why \"equivalent\" and \"equal\" are both shown as \"equivalent\"</p>\n</blockquote>\n<p>That should no longer be the case as of the last release</p>",
        "id": 188762146,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582310960
    },
    {
        "content": "<p>In a previous incarnation of our mapping tool, we rendered maps as <code>source | relationship | target</code> -- we continually had problems with a subgroup of our users who would not read this left-to-right because they were very close to their workflow of creating maps where the relationship is about the target.</p>\n<p>When we migrated our tooling to FHIR, we changed the rendering of maps to be <code>source | target | relationship</code> -- this satisfied that subgroup of users, and we've not had negative feedback from anyone else. </p>\n<p>However, I think it would be naive to think that this \"solved\" the problem.  I rather suspect that it removed the dissonance created when people mis-understood the intended direction of the relationship and thus concealed the issue.</p>\n<p>The root cause of the problem, IMO, is that the relationship codes in R4 and prior have implicit direction (target to source) and are thus open to misunderstanding and misuse.  The only safe way to correct this is to clearly indicate the direction <strong>in the code</strong> (and it's display), rather than relying on the context of a rendering (be it human or technical; JSON/XML/...)</p>",
        "id": 200999035,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1592305568
    },
    {
        "content": "<p>So have we achieved that (at least reasonably) with the recent updates that we have now in the current CI build (projected R5)?</p>",
        "id": 200999406,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1592305862
    },
    {
        "content": "<p>those also reversed the direction of the meaning, which was not necessary to solve it</p>",
        "id": 201044635,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1592326716
    },
    {
        "content": "<p>Agree.</p>",
        "id": 201065529,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1592337187
    },
    {
        "content": "<p>Maybe, if we had something like 'source_narrower' and 'target_narrower'  then we might let implementations determine the direction of the relationship, rather than attempting to herd them all in one direction?</p>",
        "id": 201088345,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1592351946
    },
    {
        "content": "<p>I think that truly sounds unsafe, where the same code could mean the diametrically opposite thing in different implementations</p>",
        "id": 201089559,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1592353083
    },
    {
        "content": "<p>hmm - if you expanded those codes to 'source_narrower_than_target' and 'target_narrower_than_source', I fail to see how that's any more unsafe than what's currently in R5. That is, unless you believe we can finally reach a consensus on a single direction. </p>\n<p>The two codes that I've suggested would certainly fit my use case which is translating between different NZ Ethnicity Code Levels - but admittedly that is quite a simplistic one as the direction is implicit in the levels of the source and target.</p>",
        "id": 201102602,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1592371182
    },
    {
        "content": "<p>I must misunderstand you - we have to get consensus on a single direction.</p>",
        "id": 201107156,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1592377329
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Error.20in.20ConceptMap.20conversion/near/201107156\">said</a>:</p>\n<blockquote>\n<p>I must misunderstand you - we have to get consensus on a single direction.</p>\n</blockquote>\n<p>Well, if anyone can achieve that, I guess that person might just be you. :)</p>",
        "id": 201113557,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1592382762
    },
    {
        "content": "<p>The CODE tells you the direction.  It is the only way that works - we cannot rely on the context of use of the code to indicate direction (what we had up to and including R4).<br>\nI don't see any problem with choosing the code <code>source-is-narrower-than-target</code> over <code>target-is-broader-than-source</code> -- they both mean the same thing.<br>\nWhile the latter, <code>target-is-broader-than-source</code>, is the replacement for R4's <code>broader</code> so it might seem a better choice, there was a strong preference for a code that \"read\" from left to right.<br>\nThat is, <code>123 source-is-narrower-than-target abc</code> was preferred over <code>123 target-is-broader-than-source abc</code> because in both cases <code>123</code> is the source, but the second rendering can be misunderstood.</p>",
        "id": 201228521,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1592456753
    },
    {
        "content": "<p>FWIW I think the Definition for <code>not-related-to</code> should be revised to use wording that is not directional.<br>\ne.g., This is an explicit assertion that the concepts are not related to each other.</p>",
        "id": 201228645,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1592456952
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I am concerned that you think the direction has been reversed?</p>\n<p>The underlying ConceptMap structure is the same and the code <code>broader</code> (with the meaning \"target is broader than source\") has been replaced by the code <code>source-is-narrower-than-target</code> (which has the same meaning).  This also aligns with your desired rendering.  I don't see any direction reversing, only clarification of ambiguity.</p>",
        "id": 202296089,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1593429207
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> and I reversed all the codes in all the instances as part of the change</p>",
        "id": 202365865,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1593463601
    },
    {
        "content": "<p>I think I would say rather that we <strong>updated</strong> all of the codes, in accordance with the changes as Michael described.  The intended <strong>direction</strong> of the maps is still the same (although there are a small number of cases where it was wrong, and I believe those still need to be updated).  What has changed is how we are reading and describing the direction, not the direction itself - and now the codes explicitly state the direction in accordance with the reading \"from source to target\".</p>",
        "id": 202366687,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1593464044
    }
]