[
    {
        "content": "<p>The mustSupport view doesn't really cover what most of us want.  What we really want is a view that shows \"What elements to implementers who only care about compliance with this specification have to worry about?\".  Obviously that includes the mustSupport elements, but it also includes:</p>\n<ul>\n<li>mandatory elements</li>\n<li>elements that have been constrained in some way from the base resource (e.g. constrained cardinality, constrained data types, invariants, etc.-) -because it may impact interoperability with other profiles</li>\n<li>elements that are 'modifiers' because implementers must check for the existence of values they don't recognize that might invalidate their understanding of the instance.</li>\n</ul>\n<p>The proposal is to define a new 'view' of StructureDefinitions that reflects this set of constraints.  The intention is to replace the 'mustSupport' view in the standard template with the new rendering, though we can retain the old \"only mustSupport\" elements if there is interest.</p>\n<p>Feedback here or in Git: <a href=\"https://github.com/HL7/fhir-ig-publisher/issues/147\">https://github.com/HL7/fhir-ig-publisher/issues/147</a></p>",
        "id": 239832622,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621646257
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> did some work on this a little while back I recall...</p>",
        "id": 239934427,
        "sender_full_name": "David Hay",
        "timestamp": 1621758158
    },
    {
        "content": "<p>That's what the must support view is.</p>",
        "id": 239934515,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1621758264
    },
    {
        "content": "<p>For my consumers I'm happy with must support. Most of my consumers are new implementers, and just want to see what they have to code against.<br>\nIf they want to see that other detail, the other views are there.<br>\nSome who review might use the other views, but that's very few of the users for a small part of its life cycle.</p>",
        "id": 239934661,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1621758448
    },
    {
        "content": "<p>But your customers have to code against mandatories that aren't mustSupport.  They also have to code against modifiers that aren't mustSupport (at least to check if they're valued with something unrecognizable).  Finally, they need to code against targets of invariants that aren't mustSupport .  If we split into senders vs. receivers, senders care about mandatories and invariants, receivers care about modifiers.</p>",
        "id": 239944528,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621769590
    },
    {
        "content": "<p><em>If</em> mandatories and modifiers and targets of invariants are already mustSupport, then obviously the views won't be different - and that's often the case for most well-designed IGs, but there are situations where you don't want to make something must support, but still need to provide a value as a sender (just no expectation to capture, store or display).  And sometimes designers miss things - particularly modifier extensions and things like Resource.implicitRules that a whole lot of implementers don't check because they forget it's even there (and IG designers forget to constrain it away).</p>",
        "id": 239944666,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621769750
    },
    {
        "content": "<p>If they need to know about them, I'll be marking them as must support.</p>",
        "id": 240223788,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1621964352
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span>  Can you give an example where they wouldn't need to know about them?  There are certainly use-cases where something will be mandatory and need to be known about, but will have a fixed value and <em>not</em> need to be mustSupport.  Would you object to those being in your view?  Obviously if you don't have that situation, nothing extra will show up...</p>",
        "id": 240231675,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621967885
    },
    {
        "content": "<p>There is an example of a profile that uses a fixed value on a mandatory element that is not must support in Task.intent in <a href=\"https://sra.digitalhealth.gov.au/fhir/currentdraft/StructureDefinition-sra-match-record.html\">https://sra.digitalhealth.gov.au/fhir/currentdraft/StructureDefinition-sra-match-record.html</a></p>",
        "id": 240274934,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1621998522
    }
]