[
    {
        "content": "<p>Given this differential:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">[</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Observation.value[x]\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Observation.value[x]\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"slicing\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"discriminator\"</span><span class=\"p\">:</span> <span class=\"p\">[{</span> <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"type\"</span><span class=\"p\">,</span> <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"$this\"</span> <span class=\"p\">}],</span>\n      <span class=\"nt\">\"ordered\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"rules\"</span><span class=\"p\">:</span> <span class=\"s2\">\"open\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">[{</span> <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"CodeableConcept\"</span> <span class=\"p\">}]</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Observation.value[x]:valueCodeableConcept\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Observation.value[x]\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"sliceName\"</span><span class=\"p\">:</span> <span class=\"s2\">\"valueCodeableConcept\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"min\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"max\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"mustSupport\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</code></pre></div>\n<p>the IG publisher creates this:<br>\n<a href=\"/user_uploads/10155/8w6TjLEFRhOV9P3cdMrPmuQ4/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/8w6TjLEFRhOV9P3cdMrPmuQ4/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/8w6TjLEFRhOV9P3cdMrPmuQ4/image.png\"></a></div><p>Notice that the type slice has ALL the types in it.  Since <code>value[x]</code> was already type constrained to only CodeableConcept, then shouldn't the slice also be type constrained to CodeableConcept (without having to put it in the differential)?  It doesn't make sense for a type slice to support more types than its slice base, but this is what the snapshot generator is doing...  That's not right, is it?</p>",
        "id": 265234984,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1639697463
    },
    {
        "content": "<p>It's not right, but the question is whether we expect the base information to be propagated into slices.  I believe the answer is \"no\".  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ?</p>",
        "id": 265241457,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1639702511
    },
    {
        "content": "<p>Why shouldn't the snapshot generator use the base slice element as its starting point (rather than the unconstrained element from the core resource)?  If authors have to manually duplicate all their constraints into each slice, then there will undoubtedly be mistakes -- and it can potentially introduce a lot of noise into the differential as well.  Is this a technical limitation in the snapshot generator or an intentional design choice?</p>",
        "id": 265296880,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1639748784
    },
    {
        "content": "<p>I'll let <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> answer that.  I think some of it has to do with constraints around constraining slices.</p>",
        "id": 265313908,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1639756109
    }
]