[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  I get this warning in the QA.html relating to the JIRA specification</p>\n<div class=\"codehilite\"><pre><span></span><code>The jira specification file appears to be out of date with the versions, artifacts and pages currently defined in the IG. A proposed revised file to be reviewed and, if appropriate, submitted as a pull request against the XML folder in https://github.com/HL7/JIRA-Spec-Artifacts. To see the differences, perform a file compare on &#39;template/jira-current.xml&#39; (a normalized view of what is in Github) and &#39;template/jira-new.xml&#39; (reflects current IG content)\n</code></pre></div>\n<p>Anyone know what it means and how to fix it?</p>\n<p>For what its worth I see no difference between my jiraspec.xml and the FHIR-phd.xml in JIRA-Spec-Artifacts. What is out of date? one of the version values in both of the files? I edited my local file to use version 1.0 instead of 0.1 and it got restored to the original when running the publisher. Probably pulled from JIRA-Spec-Artifacts...?</p>",
        "id": 229834435,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1615462629
    },
    {
        "content": "<p>Did you do a diff on the two files it told you to diff?</p>",
        "id": 229869695,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1615477308
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  Where do I find these files? I found the JIRA_Spec-Artifacts project but I have no idea where template/jira-current.xml and template/jira-new.xml are located. I could not find them in the Artifacts project. Where are these two 'template' files? I searched some other projects with the name 'template' in them but that turned out to be barking up the wrong tree. Of course there are many pages of projects and I could not search them all.</p>\n<p>I found them in my own project...why would my project have both files and not use the new one? What needs to happen here? Do I need to put the new one in JIRA_Spec-Artifacts? If so, I suppose it is something you have to do or something someone with write access to that repo has to do. If so, I attach the file here. <a href=\"user_uploads/10155/97RJE7q_mch0fgLecREzh7Kc/jira-new.xml\">jira-new.xml</a><br>\nBy the way, the difference is HUGE which scares me. There are many elements in the 'new' version that are not in the old. It seems like it is much MUCH larger than any of the corresponding files in JIRA_Spec-Artifacts. That does not bode well.</p>",
        "id": 230003711,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1615543555
    },
    {
        "content": "<p>The 'new' file is driven by what artifacts and pages exist in your IG.  If you've renamed artifacts or pages, you'll need to adjust the 'new' file to reflect that renaming (keep the key and change the name, possibly also including the old name).  You might choose to not expose certain fine-grained artifacts.  E.g. you might choose not to allow tracking changes against each individual example, but instead have an 'examples' page.  But you do want to ensure that all major artifacts and pages that exist in your IG are represented in Jira and there is continuity between feedback provided in past releases, even as artifacts have been renamed, merged, etc.</p>",
        "id": 230039316,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1615560042
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  How does the new file get generated? I certainly did not do it. And looking through the list it looks like it does list all the 'artifacts' that are in the IG. Is there a reason NOT to include all of them? And if I renamed an example, for example, wouldn't that get automatically updated next build?</p>",
        "id": 230041750,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1615560974
    },
    {
        "content": "<p>The new file is generated by the build process - driven by what's in your IG.</p>",
        "id": 230041899,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1615561035
    },
    {
        "content": "<p>The reason to not include them is if you feel the fine-grained list would be overwhelming.  For example, with core, we don't list every single example or search parameter because we'd have 10k+ artifacts.  For IGs, that's less of a problem, but could still be too much.  Similarly, some pages get 'grouped' and are treated as a single 'page' from the perspective of tracking feedback.  Your key question is \"how, as a work group, do you want feedback against your IG to be categorized?\"</p>",
        "id": 230042452,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1615561227
    },
    {
        "content": "<p>So I guess I would have a better understanding of this file if I went through the process of reporting a bug or something like that on this IG. I am not sure how to do that. I see the usual propose a change option, but that brings me to the generic FHIR issues page. I would think it would be easier to find the issue the more 'detail' one has - so one can home into the problem. Of course, I have no idea what I am talking about as I have never submitted an issue against an IG.</p>",
        "id": 230044392,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1615561845
    },
    {
        "content": "<p>From the generic FHIR issues page, fill in the 'specification' to be your IG.  That then determines what artifacts, pages and versions are available in the other dropdowns.</p>",
        "id": 230044622,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1615561927
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  I actually tried to do that, but I did not find my IG in the list. I did find Personal HealthCare Devices but I do not think that is the IG - it only has a version of 0.1 (probably a default). It might be because this IG has never been published.</p>",
        "id": 230046212,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1615562477
    },
    {
        "content": "<p>If it's gone to ballot it'll be in Jira.  Why do you think \"Personal Healthcare Devices\" isn't the IG?</p>",
        "id": 230047625,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1615562997
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> Its version was 0.1 (it was 1.0.0 at ballot) and I could not find any artifacts. All my entries return nothing found.</p>\n<p>Wait a second, that's what's in the phd file in the JIRA-artifacts file. There are no artifacts in that file and its also 0.1. That's why I am finding nothing. So I need that updated file to replace the PHD version of the template in the JIRA-Artifacts directory. Then I should find something.</p>",
        "id": 230049780,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1615563728
    },
    {
        "content": "<p>It should not have been 1.0.0 at ballot - that would have been the publication release number, not the ballot release number.<br>\nCorrect - that file is what determines what's available in the Jira dropdowns for people to provide feedback.  (And that's why the build process now hollers if it appears there's content in your IG that isn't listed in Jira)</p>",
        "id": 230050493,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1615563993
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  Okay, maybe it wasn't 1.0.0 at ballot. Was probably current. But then I need to have that updated file installed in the artifacts list. I assume that it can always be changed once we have some experience. To be honest with you, I had no idea such an infrastructure existed for IGs.</p>",
        "id": 230055027,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1615565294
    },
    {
        "content": "<p>Once you add an artifact or page, you can't remove it (easily) because someone might have referenced it in Jira, so in general it's best to be cautious about what you add, because once it's in a Jira dropdown, it's there forever.  You can deprecate - which keeps people from selecting it on new issues, but you can't easily get rid of stuff that might have been used on old issues.</p>",
        "id": 230055684,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1615565458
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  Okay, better have a discussion about that in DoF. It would be good for them to know about this as they will have the same situation arise when its time to publish the PoCD. At least I know what all this means. Learn something new every day!</p>",
        "id": 230056596,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1615565814
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> , I thought that the templated IGs generated this file, but I can't find it? Is there a parameter I need to set to turn on generation?</p>",
        "id": 233731158,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1617916587
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> are you using an HL7 template? Only those use the Jira stuff</p>",
        "id": 233731749,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1617916759
    },
    {
        "content": "<p>Yes, hl7.fhir.template</p>",
        "id": 233732987,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1617917083
    },
    {
        "content": "<p>Do you have a package-list.json file?  You won't get a Jira file unless/until you have a package-list.json</p>",
        "id": 233766374,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1617942268
    },
    {
        "content": "<p>I do, in the root of the directory (same place as the ig.ini), but I haven't added the entry for the version we're publishing, I'll try that.</p>",
        "id": 233847028,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1617983603
    },
    {
        "content": "<p>What is the relationship between the package-list.json in the root and the data/packagelist-list.yaml</p>",
        "id": 233848172,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1617984026
    },
    {
        "content": "<p>Is the tooling aware of the packagelist yaml?</p>",
        "id": 233848190,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1617984033
    },
    {
        "content": "<p>(Other than making it available through the sitedata variables)?</p>",
        "id": 233848337,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1617984084
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span></p>",
        "id": 233848354,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1617984091
    },
    {
        "content": "<p>No clue what packagelist-list.yaml is.  Is that a FSH thing?</p>",
        "id": 233853871,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1617986242
    },
    {
        "content": "<p>nope, not a FSH thing</p>",
        "id": 233854317,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1617986424
    },
    {
        "content": "<p>Then the yaml file shouldn't exist and you should be authoring and editing the package-list.json file directly.</p>",
        "id": 233854559,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1617986525
    },
    {
        "content": "<p>Okay, I've got an updated package-list and building with templates, but I still don't see the JIRA Spec artifact file. Where does it get generated?</p>",
        "id": 233862180,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1617989795
    },
    {
        "content": "<p>@Lloyd I see you merged his PR but how does the update get into Jira then?</p>",
        "id": 233863317,
        "sender_full_name": "Lynn Laakso",
        "timestamp": 1617990335
    },
    {
        "content": "<p>When the PR is merged into the main build, there's an automatic process that pushes \"built\" content into a separate branch.  Jira grabs the list of elements from the XML file exposed on that separate branch</p>",
        "id": 233867780,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1617992138
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span>  the data/package-list.yaml is to enable references to the package-list within the ig and is not used for validation.  In the guides I author, I typically set it up to have both ig.yaml and package-list.yaml in the data folder using a bash script to refresh the ig.yaml file.  The package-list is manually updated in real time as I apply trackers to create a change log which is published in the blue information box in the home page. for example see <a href=\"http://build.fhir.org/ig/HL7/US-Core/branches/master/index.html\">here</a>:  This helps reviewers qa the applied trackers. Prior to publishing the package-list.yaml is converted to a json file and the blue box removed.</p>",
        "id": 233867863,
        "sender_full_name": "Eric Haas",
        "timestamp": 1617992171
    },
    {
        "content": "<p>Thanks Eric! Yes, we adopted your styling for the QM IG (because it's fantastic), so we are using that same approach, and I've just then updated the package-list.json manually. (<a href=\"http://build.fhir.org/ig/HL7/cqf-measures\">http://build.fhir.org/ig/HL7/cqf-measures</a>)</p>",
        "id": 233868135,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1617992308
    },
    {
        "content": "<p>I think it'd be cleaner to have the template process copy the package-list.json file into the temp/pages/_data folder - no need to have a yaml file (or remember to run custom bash scripts)</p>",
        "id": 233868142,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1617992311
    },
    {
        "content": "<p>I agree, I don't like having that content in multiple places, so if there's a way that can be automated, that would be great.</p>",
        "id": 233868249,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1617992368
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  For me editing in Yaml is easier and more intuitive.  converting to and from json is single click on my editing or a single line in my bash.  It is automated for me and I am not advocating or mandating everyone does it the same way.</p>",
        "id": 233868638,
        "sender_full_name": "Eric Haas",
        "timestamp": 1617992527
    },
    {
        "content": "<p>json, yaml or csv all work in the data files,  I like yaml</p>",
        "id": 233868750,
        "sender_full_name": "Eric Haas",
        "timestamp": 1617992576
    },
    {
        "content": "<p>Right now this is a manual process, but we have discussed before the automation of the change logs , maybe by adding a couple of fields to Jira and doing an export into the ig.  The fields are summary of change and reference to change in the spec.</p>",
        "id": 233869395,
        "sender_full_name": "Eric Haas",
        "timestamp": 1617992879
    },
    {
        "content": "<p>The problem is if someone comes along and fixes something in your IG, they're going to edit the json file - and may not even realize the yaml exists.  And you'll then wipe their fix the next time you run the bash script.  We're trying to make our IGs so that anyone who knows how to edit IGs can feel comfortable editing any IG.</p>",
        "id": 233869416,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1617992883
    },
    {
        "content": "<p>same problem with fsh.   So I don't see why this is any different</p>",
        "id": 233870074,
        "sender_full_name": "Eric Haas",
        "timestamp": 1617993169
    },
    {
        "content": "<p>FSH is an official HL7 standard and is used by many HL7 IG authors (eventually, I expect it'll be used by most).  It also offers a bunch of features that make it significantly faster and easier to create and maintain IGs.  I don't think we can make the same argument here for yaml vs. json for the package-list.json.  If you feel strongly that there's a serious benefit to moving to yaml, then we should have that as a discussion and do it for everyone.</p>",
        "id": 233876082,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1617995680
    },
    {
        "content": "<p>Back to the issue at hand though, I'm still not seeing the generated JIRA spec artifact file, am I looking in the wrong place?</p>",
        "id": 233877131,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1617996154
    },
    {
        "content": "<p>Should be in the root folder of your IG.  What's the Git URL?  I can take a look if you like</p>",
        "id": 233897735,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1618005144
    },
    {
        "content": "<p>I see the issue, it is looking in the JIRA-Spec-Artifacts github for FHIR-us-cqfmeasures.xml, but the file in github is named \"FHIR-us-qm.xml\"</p>",
        "id": 234073462,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1618173021
    },
    {
        "content": "<p>So it gets an error trying to download and doesn't generate.</p>",
        "id": 234073482,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1618173033
    },
    {
        "content": "<p>so the <a href=\"https://confluence.hl7.org/display/HL7/Configuring+Specification+Feedback\">https://confluence.hl7.org/display/HL7/Configuring+Specification+Feedback</a> page says that if the code in the package-id ever changes, the Jira code must remain the same.  To allow the IG to link to the correct Jira file, add a parameter called 'jira-code' to your ImplementationGuide resource (under 'definition'), with a value of whatever the 'Code' is in Jira.</p>",
        "id": 234075142,
        "sender_full_name": "Lynn Laakso",
        "timestamp": 1618174683
    },
    {
        "content": "<p>Perfect, that did it, thank you <span class=\"user-mention\" data-user-id=\"193599\">@Lynn Laakso</span></p>",
        "id": 234083458,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1618182430
    }
]