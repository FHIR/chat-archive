[
    {
        "content": "<p>I'm experimenting w/ creating DSTU2 profiles.  When I run the IG publisher, the QA reports an error about an invalid id for every element in every structure definition.  For example:</p>\n<div class=\"codehilite\"><pre><span></span>id value &#39;Extension:myTestExt&#39; is not valid\nid value &#39;Extension:myTestExt.id&#39; is not valid\n...\n</pre></div>\n\n\n<p>I tried removing the name (e.g., <em>myTestExt</em>) from the root and that eliminated many of the errors, but whenever I have slices with a slicename in the id, I still get the error.  For example:</p>\n<div class=\"codehilite\"><pre><span></span>id value &#39;Condition.extension:someExt&#39; is not valid\n</pre></div>\n\n\n<p>Furthermore, ids with [x] are also marked as invalid.  For example:</p>\n<div class=\"codehilite\"><pre><span></span>id value &#39;Condition.onset[x]&#39; is not valid\n</pre></div>\n\n\n<p>Does DSTU2 have different rules for ids (like only alphanumeric characters)?  If so, is there a recommended approach for slice ids and choice ids?</p>",
        "id": 154013514,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1540864971
    },
    {
        "content": "<p>Looking into this further, the Argonaut Data Query profiles use ids very similar to this, for example:</p>\n<div class=\"codehilite\"><pre><span></span>&quot;id&quot; : &quot;Condition:argoprofile&quot;,\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>&quot;id&quot; : &quot;Condition:argoprofile.id&quot;,\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>&quot;id&quot; : &quot;Condition:argoprofile.onset[x]&quot;,\n</pre></div>\n\n\n<p>I think this means that one of the following must be the case:</p>\n<ul>\n<li>it's valid and there is a bug in the publisher that incorrectly flags it as an error</li>\n<li>it's invalid in DSTU2, but Argonaut got away with it</li>\n</ul>\n<p>Any insight on this, <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ?</p>",
        "id": 154013849,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1540933374
    },
    {
        "content": "<p>its an error in the IG.  Argonaut got away with it because is predated to changes in the validator</p>",
        "id": 154013899,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540938329
    },
    {
        "content": "<p>can you create an issue on GitHub?</p>",
        "id": 154013902,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540938373
    },
    {
        "content": "<p>For Argonaut DQ guide</p>",
        "id": 154013903,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540938387
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> -- OK.  Do you know what the guidance is regarding how it <em>should</em> be done (since the STU3 way of doing choices and slices in ids is apparently illegal)?  I couldn't find anything in the DSTU2 spec, but it's possible I missed it.  The base resource StructureDefinitions don't use <code>id</code> at all, so they're not much help.</p>",
        "id": 154014055,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1540986962
    },
    {
        "content": "<p>Here is  some guidelines it the spec:  <a href=\"http://build.fhir.org/elementdefinition.html#id\" target=\"_blank\" title=\"http://build.fhir.org/elementdefinition.html#id\">http://build.fhir.org/elementdefinition.html#id</a></p>",
        "id": 154014140,
        "sender_full_name": "Eric Haas",
        "timestamp": 1541000945
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> -- I'm aware of that guidance, but it is R4.  If you follow that guidance in DSTU2, the IG publisher will spit out errors for any <code>id</code>s that specify slices with a <code>:</code> or that contain <code>[x]</code> for choice elements.  DSTU2 seems to have a much stricter set of rules, although I couldn't find anything in the DSTU2 spec that actually called them out.</p>",
        "id": 154014170,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1541002532
    },
    {
        "content": "<p>Hmmm... this is interesting.  According to the DSTU2 spec, <code>id</code> should actually be <code>_id</code> in the JSON representation: <a href=\"http://hl7.org/fhir/DSTU2/element.html#json\" target=\"_blank\" title=\"http://hl7.org/fhir/DSTU2/element.html#json\">http://hl7.org/fhir/DSTU2/element.html#json</a><br>\nIn STU3, the <code>_</code> was removed.  In my DSTU2 JSON StructureDefinitions, I'm using <code>id</code> instead of <code>_id</code>.  I wonder if that has anything to do with it...</p>",
        "id": 154014176,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1541002854
    },
    {
        "content": "<p>No I am not aware.  I based all of my work on the tooling.</p>",
        "id": 154014203,
        "sender_full_name": "Eric Haas",
        "timestamp": 1541005038
    },
    {
        "content": "<p>So the DSTU2 limitations on <code>id</code> were under my nose the whole time.  I just had to go to the definition of the <code>id</code> primitive, which apparently changed.</p>",
        "id": 154015209,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1541179337
    },
    {
        "content": "<blockquote>\n<p>Any combination of upper or lower case ASCII letters ('A'..'Z', and 'a'..'z', numerals ('0'..'9'), '-' and '.', with a length limit of 64 characters.<br>\n<a href=\"http://hl7.org/fhir/DSTU2/datatypes.html#id\" target=\"_blank\" title=\"http://hl7.org/fhir/DSTU2/datatypes.html#id\">http://hl7.org/fhir/DSTU2/datatypes.html#id</a></p>\n</blockquote>",
        "id": 154015210,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1541179560
    },
    {
        "content": "<p>I'm not sure about this. It's going to be hard for to resolve, that's for sure. do you have a worked example I can experiment with?</p>",
        "id": 154017040,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1541745346
    },
    {
        "content": "<p>Well... the limitation on allowed characters is built right into the spec (as I discovered in my last comment on this thread), so I don't think that's something that can change.  I was just wondering if there was any guidance around how slice names and specific choices should be reflected in the id since <code>:</code>, <code>[</code> and <code>]</code> are all disallowed.  If there is no guidance/convention, I suppose I can make something up.</p>\n<p>I noticed that the FHIR core definitions don't even include <code>id</code>s in the snapshot/differential elements -- so maybe they're not even important for DSTU2 profiles?</p>",
        "id": 154018101,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1542133834
    },
    {
        "content": "<p>it's an issue in the r2/r4 conversions. I might be able to do something... maybe.</p>",
        "id": 154018285,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1542163640
    },
    {
        "content": "<p>have you seen the test IGs? do you want to extend those with some breaking things?</p>",
        "id": 154018286,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1542163658
    },
    {
        "content": "<p>I haven't seen the test IGs.  I'll see if I can find them.  If not, I'll ask for a pointer.</p>",
        "id": 154018433,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1542206253
    },
    {
        "content": "<p>/test/ig in the build</p>",
        "id": 154018463,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1542210008
    }
]