[
    {
        "content": "<p>I am getting errors in some of my example questionnaire responses</p>\n<p>A. error    Item has answer, even though it is not enabled (item id = 'linkId_3')</p>\n<p>When I look at all of the link Ids mentioned, the example questionnaire response shows a response to the proceeding question or questions (eg. linkId_1 and linkId_2) that are necessary for the question to be enabled. And, the response is consistent with the answer needed for enablement. In fact, it was enabled, because we created the example questionnaire responses by hand, so we wouldn't have seen the questions if they weren't enabled.</p>\n<p>I wonder if the problem might be that the validator is not processing the variable in the enableWhen expressions correctly, such as  %eventOccurredAtLeadPISite = 'N'.  </p>\n<p>Does the validator have access to all of the variables?</p>\n<p>B. QuestionnaireResponse.item[1].item[0].item[1].answer[0]  information Cannot validate options because no option or options are provided</p>\n<p>This is information, not a error or warning, so I guess that I can suppress this.</p>\n<p>It seems to be happening where the options are dynamically generated using an answerExpression.</p>\n<p>Does the validator have access to the variables to run the answerExpression like:</p>\n<p>iif(%eventOccurredAtLeadPISite = 'Y', %lookupInitiateStudy.descendants().where(linkId = 'in7.1.1').answer.value, %lookupInitiateStudy.descendants().where(item.where(linkId = 'in8.9' and answer.value = %relyingSiteForForm)).item.descendants().where(linkId = 'in8.1.1').answer.value)</p>",
        "id": 275159335,
        "sender_full_name": "Diane",
        "timestamp": 1647184267
    },
    {
        "content": "<p>Is the variable declared in the questionnaire?  You can't pass in variables from outside.</p>\n<p>You don't suppress things because you can.  You suppress because you understand the issue and have determined it's not a problem.</p>",
        "id": 275163309,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1647189668
    },
    {
        "content": "<p>Some of the variables like  %eventOccurredAtLeadPISite  are declared and initialized with values in the questionnaires as the user answers the questions.  It would seem like the validator should have access to those, but can it simulate the variable<br>\nbecoming initialized with a value as the question is answered?    The expressions are based the variable getting the value from the %questionnaire as the question is answered.   Does the validator know since this is not real-time,  it has to look in the <br>\nquestionnaire response instead?</p>\n<p>The other variables are all based off the JSON text that is passed in through the launch context variable  that LHC Forms receives as a parameter when our software calls LHC Forms.   This was the solution for passing the parent QR into the child questionnaires decided at the SDC call  <a href=\"https://confluence.hl7.org/display/FHIRI/FHIR+SDC+Minutes+CC+20220210\">https://confluence.hl7.org/display/FHIRI/FHIR+SDC+Minutes+CC+20220210</a>.</p>\n<p>I do not and would not suppress messages without your input.   I am still trying to understand how the validator handles variables so that I can be sure this is even where the issue is occurring.  But, I think that if there is an error that is the most important issue to focus on.</p>",
        "id": 275171962,
        "sender_full_name": "Diane",
        "timestamp": 1647201327
    },
    {
        "content": "<p>It has to look in the QuestionnaireResponse.  And it's entirely likely that the validator does not yet support all of the extensions defined in SDC.</p>",
        "id": 275178390,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1647210423
    },
    {
        "content": "<p>After looking through our example Questionnaire Responses, it looks like all 8 of our example Questionnaire Responses have either</p>\n<p>A.  Error message: Item has answer, even though it is not enabled </p>\n<p>or</p>\n<p>B.  Information message:  QuestionnaireResponse.item[1].item[0].item[1].answer[0] information Cannot validate options because no option or options are provided  because they have answerExpressions for the choice items. </p>\n<p>How do you want us to resolve A?</p>\n<p>How do you want us to resolve B?</p>\n<p>If we delete the answers out of the JSON files for the questions that the IG doesn't think are enabled, that would remove the errors.  But, it makes the examples less helpful.</p>",
        "id": 275193678,
        "sender_full_name": "Diane",
        "timestamp": 1647233124
    },
    {
        "content": "<p>If the issue is problems with the validator, then we won't stop the IG from going to ballot.  We'll definitely need to update the validator before the IG can proceed to publication.</p>",
        "id": 275241284,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1647267280
    },
    {
        "content": "<p>have you got examples?</p>",
        "id": 275291993,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1647288803
    },
    {
        "content": "<p>In off-line discussion, it seems that the issue is that the enableWhen depends on context variables passed from outside, including a custom launchContext.  So that's not something the validator ever <em>could</em> support.  I've suggested modifying the Questionnaire to drive solely off answers within the QR - even if some of them are hidden answers that are populated based on launch context.</p>",
        "id": 275320331,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1647308950
    },
    {
        "content": "<p>the validator might be able to support that, but not in an IG.</p>",
        "id": 275322170,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1647310662
    },
    {
        "content": "<p>no it could, actually</p>",
        "id": 275322180,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1647310672
    },
    {
        "content": "<p>a parameters resource that feeds to it. Like the expansion parameters one.</p>",
        "id": 275322228,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1647310694
    },
    {
        "content": "<p>but it sure doesn't do that now</p>",
        "id": 275322234,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1647310705
    },
    {
        "content": "<p>In general, you wouldn't want the Questionnaire to behave that way because the launch context when viewing the form isn't necessarily going to be the same as when you fill out the form.</p>",
        "id": 275326515,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1647316037
    },
    {
        "content": "<p>I thought we were talking about validation?</p>",
        "id": 275327023,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1647316697
    },
    {
        "content": "<p>We are.  You don't want the validation results to vary depending on the context of how you open the response.</p>",
        "id": 275382551,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1647355577
    },
    {
        "content": "<p>why not?</p>",
        "id": 275427093,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1647374170
    },
    {
        "content": "<p>Because then you have a QR that's valid on completion (and thus allowing the QR to be marked complete in the first place).  However, if opened a day or two later with a slightly different context, the QR would suddenly be invalid.</p>",
        "id": 275427277,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1647374274
    },
    {
        "content": "<p>Population based on context makes total sense.  Validation based on context is inevitably going to cause grief.</p>",
        "id": 275427351,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1647374299
    },
    {
        "content": "<p>but you'd choose to validate based on context, so that's what you'd want to happen.</p>",
        "id": 275428356,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1647374753
    },
    {
        "content": "<p>The QR could be validated in a wide range of contexts.</p>",
        "id": 275432986,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1647377187
    },
    {
        "content": "<p>y so? You'd feed the context. I'm not sure i follow the issue</p>",
        "id": 275433023,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1647377216
    },
    {
        "content": "<p>There would typically be a patient context when launching, but not necessarily when subsequently reviewing or transmitting.  And validation could happen at any point.</p>",
        "id": 275433037,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1647377223
    },
    {
        "content": "<p>The context is \"who is the current user?\" \"what is the currently active patient?\"</p>",
        "id": 275433064,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1647377237
    },
    {
        "content": "<p>If those change between filling out the form and subsequently looking at it, the validation results shouldn't change.</p>",
        "id": 275433115,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1647377262
    }
]