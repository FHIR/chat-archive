[
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> and <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> -- we plan to release SUSHI 1.0.0 Beta 1 today.  This beta supports a new (and I think better) approach to IG Publisher integration.  We are releasing it as beta to ensure it gets some revs w/ various projects before we force it on everyone.  As a beta, it <em>won't</em> be tagged as the \"latest\" release in NPM (as that's reserved for stable releases) -- so <code>npm install -g fsh-sushi</code> will still install the 0.16.0 version.  I think this means the autobuild will continue to run SUSHI 0.16.0, which is probably appropriate for most people.</p>\n<p>My question (sorry it took so long to get here) is if there is a way for autobuild to run the <em>beta</em> version of SUSHI for projects that request/require it?  IIRC, Grahame added a <code>sushi.ini</code> capability to affect the timeout when running SUSHI.  Could this also be used to indicate a specific tag or version to use when installing SUSHI?</p>",
        "id": 212070985,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601643818
    },
    {
        "content": "<p>This would be helpful because in order to fully leverage the beta, authors need to change their project structure -- and if they do that, SUSHI 0.16.0 will fail to build it.</p>",
        "id": 212071193,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601643929
    },
    {
        "content": "<blockquote>\n<p>I think this means the autobuild will continue to run SUSHI 0.16.0, which is probably appropriate for most people.</p>\n</blockquote>\n<p>That's correct.</p>",
        "id": 212087918,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1601651672
    },
    {
        "content": "<blockquote>\n<p>IRC, Grahame added a sushi.ini capability to affect the timeout when running SUSHI. Could this also be used to indicate a specific tag or version to use when installing SUSHI?</p>\n</blockquote>\n<p>We can define something like this, for sure. Let's see...</p>",
        "id": 212088001,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1601651708
    },
    {
        "content": "<p><a href=\"https://github.com/FHIR/auto-ig-builder/blob/c19e9050b1613d34d2116e7418d11001496cdc02/images/ig-build/builder/builder.py#L42\">https://github.com/FHIR/auto-ig-builder/blob/c19e9050b1613d34d2116e7418d11001496cdc02/images/ig-build/builder/builder.py#L42</a> is where the autobuilder installs sushi. This is done after the target repo is git-cloned, so we'd have access to any files from the repo at this point.</p>",
        "id": 212088219,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1601651796
    },
    {
        "content": "<p>I haven't see documentation for the sushi.ini format, and a Zulip search only turns up this thread. Is it a Windows-format INI file that would be compatible with <a href=\"https://docs.python.org/3/library/configparser.html\">https://docs.python.org/3/library/configparser.html</a> ?</p>",
        "id": 212088372,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1601651866
    },
    {
        "content": "<p>Basically, if you can write down the logic for:</p>\n<p>1) Where to find a <code>sushi.ini</code> file relative to the repository root (if it exists)<br>\n2) Where, inside the <code>sushi.ini</code> file to find information about which <code>fsh-sushi</code> version to install<br>\n3) How to translate this into an <code>npm install...</code> command, and what default to use if none is present</p>\n<p>... we should be able to make this work.</p>",
        "id": 212088761,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1601652011
    },
    {
        "content": "<p>Cool.  I only stumbled on <code>sushi.ini</code> the other day myself.  It seems that <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> invented it.  So... I actually have no more details than you.  Grahame, can you confirm that <code>sushi.ini</code> follows the Windows INI format (like ig.ini, I assume)?  And can you confirm it goes in repository root?  If you can confirm those, I can take care of #2 and #3 above.</p>",
        "id": 212096588,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601655602
    },
    {
        "content": "<p>it's actually fsh.ini, and it's a windows ini file, and it's current format is </p>\n<div class=\"codehilite\" data-code-language=\"INI\"><pre><span></span><code><span class=\"k\">[FSH]</span>\n<span class=\"na\">timeout</span><span class=\"o\">=</span><span class=\"s\">{msec}</span>\n</code></pre></div>",
        "id": 212120601,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1601668418
    },
    {
        "content": "<p>this is only a question for auto-build?</p>",
        "id": 212120632,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1601668438
    },
    {
        "content": "<p>no. it's most definitely a question elsewhere. What's the expectation for when we do release builds?</p>",
        "id": 212120721,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1601668469
    },
    {
        "content": "<blockquote>\n<p>this is only a question for auto-build?<br>\nno. it's most definitely a question elsewhere.</p>\n</blockquote>\n<p>On local builds it always uses whatever version of SUSHI the user has installed on their system.  So locally, the user already has control over what version of SUSHI is used.  To ensure no confusion, the property could be <code>autobuild-sushi-version={version|tag}</code>.</p>\n<blockquote>\n<p>What's the expectation for when we do release builds?</p>\n</blockquote>\n<p>I guess we have some choices.  Do you want to allow people to have flexibility of SUSHI version for release builds?  Or do you want to require the most recent official release?  If you're concerned about people tacking their projects to <em>old</em> SUSHI builds then we could intentionally limit the fsh.ini capability.  Instead of allowing a specific version, we could only allow the current released version or the most recent prerelease version (e.g., only support an optional <code>allow-sushi-prerelease=true</code>).</p>",
        "id": 212122207,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601669164
    },
    {
        "content": "<p>My main concern is allowing users to move to cutting edge prerelease versions if they want/need to.</p>",
        "id": 212122359,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601669235
    },
    {
        "content": "<p>well, I'm not sure. I don't want to have to chop and change manually on the release build, but the version of sushi isn't really anything to do with the quality directly</p>",
        "id": 212133270,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1601675550
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> -- would you be ok w/ us introducing this capability in <code>fsh.ini</code> so that people can control the SUSHI used in auto-build?  I would expect this would mainly be used only temporarily in IGs -- either to leverage a feature in a beta version of SUSHI or in rare cases to use an older version of SUSHI if/when the current SUSHI has a show-stopper bug for a particular IG.  Whether or not the publication team allows for IGs to use a non-current (or beta) version of SUSHI for final publication seems more like a policy matter -- and it's something that can be checked easily enough by looking at the <code>fsh.ini</code> (i.e., you can choose to outright reject officially publishing any IG that has overridden the SUSHI version).</p>",
        "id": 212358440,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601932889
    },
    {
        "content": "<p>I don't know quite enough about npm here. is it possible to have multiple different versions installed, and to use a nominated version when invoking sushi?</p>",
        "id": 212361378,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1601934796
    },
    {
        "content": "<p>NPM doesn't allow you to globally install multiple versions of the same package.  The closest they come to something like that is <code>npx</code>.  The <code>npx</code> command (which is packaged with NPM) is a \"package runner\".</p>\n<p>If you do <code>npx fsh-sushi</code> it locally installs and invokes the latest stable release of SUSHI.  If you do <code>npx fsh-sushi@0.16.0</code> it locally installs and invokes the specific version of SUSHI (in this case 0.16.0).  If you do <code>npx fsh-sushi@beta</code> it installs the version of SUSHI tagged as <code>beta</code>.  Etc.  For example <code>npx fsh-sushi@0.16.0 . -o build</code> is the same as running <code>sushi . -o build</code> if SUSHI 0.16.0 were installed globally.</p>",
        "id": 212364050,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601936728
    },
    {
        "content": "<p>I think I have to do this - I'm one of a number of people who build lots of IGs, and have already been tripped up by not having the correct version. If there's more than one version in play....</p>",
        "id": 212364162,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1601936789
    },
    {
        "content": "<p>If you were to called <code>npx fsh-sushi</code> in the IG Publisher instead of just <code>sushi</code>, however, the end result is that the globally installed sushi would never be used.  Maybe that's a good thing, I don't know -- but it is different than what happens now.  In that case, it would probably be pretty important for users to be able to control what version of SUSHI the publisher invokes when it calls <code>npx</code>.</p>",
        "id": 212364256,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601936858
    },
    {
        "content": "<p>well, what I'm thinking is that I'll look in fsh.ini to decide whether I'm going to run it directly or run a particular version</p>",
        "id": 212364331,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1601936895
    },
    {
        "content": "<p>Ah.  OK.  That would be backward compatible then.  So if you see something in <code>fsh.ini</code>, you use <code>npx fsh-sushi@${version-from-ini}</code> otherwise you just invoke <code>sushi</code> and use whatever is on the path.</p>",
        "id": 212364404,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601936970
    },
    {
        "content": "<p>Then the thing in <code>fsh.ini</code> controls the version of SUSHI that is used no matter where the publisher is invoked (i.e., locally <em>and</em> in <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>'s Auto-Builder (and Josh shouldn't need to do anything special).  In that case, we'd probably want to call the ini property something simpler and have something like <code>sushi-version=0.16.0</code>.</p>",
        "id": 212364708,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601937167
    },
    {
        "content": "<p>what versions can I test this with right now?</p>",
        "id": 212365015,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1601937430
    },
    {
        "content": "<p>v0.16.0 and v1.0.0-beta.1 are considerably different. v1.0.0-beta.1 uses the new folder structure (no ig-data, instead input is in <code>input/fsh</code> and output in <code>fsh-generated </code></p>",
        "id": 212386679,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601962603
    },
    {
        "content": "<p>I can create a fork of the sample IG with this new config if you want to use that for testing.</p>",
        "id": 212386712,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601962667
    },
    {
        "content": "<p>Sorry, had to step out -- but <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> is right.  To use v0.16.0:</p>\n<div class=\"codehilite\"><pre><span></span><code>npx fsh-sushi@0.16.0 .\n</code></pre></div>\n\n\n<p>and to use the beta:</p>\n<div class=\"codehilite\"><pre><span></span><code>npx fsh-sushi@1.0.0-beta.1 .\n</code></pre></div>\n\n\n<p>or more simply, using the beta tag:</p>\n<div class=\"codehilite\"><pre><span></span><code>npx fsh-sushi@beta .\n</code></pre></div>\n\n\n<p>You'll notice that I just used <code>.</code> as the argument (indicating current folder).  That assumes you are running it from the root folder of the IG.  In this case, it will find the input path (whether it's <code>fsh</code> or <code>input/fsh</code>) and also correctly choose the appropriate output path.  I noticed that the IG Publisher explicitly passes in the input and output paths, but this is not necessary.</p>\n<p>If you're just looking to test this locally, to make sure it really uses the right versions, you can just invoke it with the <code>-v</code> flag to have it only print out the version.</p>\n<p>One thing to note, it will redownload and install (in a temporary location) SUSHI on every invocation, so depending on how long that takes, you may want to consider bumping the default timeout by 10 or 15 seconds to accommodate it.</p>",
        "id": 212420101,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601987538
    },
    {
        "content": "<p>ok this works fine. It'll be in the next release</p>",
        "id": 212502455,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602030154
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"INI\"><pre><span></span><code><span class=\"k\">[FSH]</span>\n<span class=\"na\">version</span><span class=\"o\">=</span><span class=\"s\">1.0.0-beta.1</span>\n</code></pre></div>",
        "id": 212502458,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602030158
    },
    {
        "content": "<p>I'm not yet going to require that IGs using sushi set this before making a publication request, but I'm planning to do that onec we see how it works</p>",
        "id": 212502515,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602030215
    },
    {
        "content": "<p>Would it be possible to call that <code>sushi-version</code> rather than just <code>version</code>?  I'm afraid that <code>version</code> is too ambiguous and there might be confusion between the version of FSH and the version of SUSHI (which are definitely two different things).</p>",
        "id": 212551061,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1602074044
    },
    {
        "content": "<p>ok. done</p>",
        "id": 212632628,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602113716
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 212633641,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1602114618
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> -- I just tried this out and it did not work.  I tried to determine if maybe the IG Publisher hasn't been released yet since you fixed it -- but I don't see your fix at all in the <a href=\"https://github.com/HL7/fhir-ig-publisher/commits/master\">IG Publisher commits on GitHub</a>.  Am I looking in the wrong place?</p>",
        "id": 212829619,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1602252191
    },
    {
        "content": "<p>I haven't committed yet. getting there</p>",
        "id": 212860468,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602268154
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> -- do you have an ETA on this?  There are a few IG authors who have already converted to the beta structure, but can't leverage auto-builds again until this feature is in place.  They're wondering when it will be available.  If it's still not close, would it be possible to push just a commit supporting the new <code>fsh.ini</code> stuff?  (I'm assuming the stuff holding it up is not related to <code>fsh.ini</code> at all).</p>",
        "id": 213299955,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1602686942
    },
    {
        "content": "<p>a few hours</p>",
        "id": 213337936,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602702834
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> released</p>",
        "id": 213352429,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602710684
    },
    {
        "content": "<p>Confirmed to be working.  For those of you who need to use the SUSHI 1.0.0 beta releases, I recommend the following <code>fsh.ini</code> config:</p>\n<div class=\"codehilite\"><pre><span></span><code>[FSH]\nsushi-version=beta\n</code></pre></div>\n\n\n<p>See <a href=\"#narrow/stream/215610-shorthand/topic/Build.20failure.20in.20auto-build.3F/near/213365948\">the thread on the shorthand stream</a> for more details.</p>",
        "id": 213366064,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1602720580
    },
    {
        "content": "<p>in the future, IGs built by Sushi will be required to specify the correct version of FSH to run before submitting for publication</p>",
        "id": 213367490,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602721916
    }
]