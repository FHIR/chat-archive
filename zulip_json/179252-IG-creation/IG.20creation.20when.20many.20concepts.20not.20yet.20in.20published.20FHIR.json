[
    {
        "content": "<p>Hello, </p>\n<p>I'm a newbie, so apologies for naïve questions.  Also, not sure if this question is better in <a class=\"stream\" data-stream-id=\"211987\" href=\"/#narrow/stream/211987-methodology\">#methodology</a>  but since it impacts the ability to make an IG I put it here.  Finally, apologies for the long message.</p>\n<p>My question is about potentially using the Basic resource (and potentially a previous build snapshot) to allow IT development and testing while FHIR R4B and R5 discussions continue to evolve.</p>\n<p>By the way, I welcome any corrections of any incorrect assumptions here.  I am not an expert in any way :)</p>\n<p><strong>Scenario:</strong><br>\nCurrently there is a project in which large amount of the data concepts we want to use are not yet officially in FHIR. Most <em>are</em> in the build (R4B at ballot) though the final form of that and R5 may be many months or years in settling and publishing.  As a result, we are unable to create a draft IG that can be used for any internal purpose in the interim period.</p>\n<p>After many years of standards work on this project, we really need to be able to at least build something to design, develop, and test IT needs.  So I'm exploring any and all options that might fill the interim period until the standard is settled.  Hence my post here.</p>\n<p>For additional consideration: I believe our project as it stands is something like a FHIR façade: we necessarily have to take apart the FHIR messages for parsing right when they come in, so for ingestion purposes I believe there are no FHIR server requirements.  In a sense, we are an endpoint for dataflow at this time.   Further, this data is not coming from healthcare data concepts.  I think interoperability concerns may be low at least for now.</p>\n<p><strong>Assets</strong><br>\nI think we have two things going for us:</p>\n<ol>\n<li>\n<p>A lot of our concepts that support transfer of needed information DO exist in the build - even though their final form may change radically after reconciliation.  My limited understanding is that may be sufficient to build an IG for internal development use - for the interim until R4B/R5 etc are settled.</p>\n</li>\n<li>\n<p>The Basic resource. My basic read of this is that Basic could be used as a very FHIR-appropriate way of conveying in an IG the non-canonical FHIR concepts and allowing it to look somewhat close in design to what might come in the future.   </p>\n</li>\n</ol>\n<p><strong>Options to move forward in the interim</strong><br>\nWe need something (an IG) to build and test. There may be many options that may work in the interim period.  I'm curious if folks here have thoughts that might help.    I have thought about 2 options but don't know how realistic they are so I thought I'd see what folks here think. Both options would require a re-jiggering of the IT aspects once the FHIR standard settles and if we choose to upgrade to the published standard with all our concepts.</p>\n<p>Option 1:  IG made with existing build snapshot plus Basic/extensions.  I'm told that it is possible to base an IG (with traditional or SUSHI powered tools) on a snapshot of a build (R4B ballot, perhaps?).  One option is to create an IG based on that plus filling in gaps with Basic resources/extensions.</p>\n<p>Option 2: Ignore all old build design, do all gaps with Basic.  This seems more extreme, but since we know that the R4B balloted FHIR structure may change a lot - and then the build will take a long time to reflect that, and publish.  Another option is to wait until the design is at least settled and then mock up the design using Basic.</p>\n<p>One again, I welcome any thoughts/considerations about these or other potential approaches to move us forward.  <br>\nThank you for any information!</p>\n<p>Regards<br>\nScott</p>",
        "id": 248331765,
        "sender_full_name": "Scott Gordon",
        "timestamp": 1628072139
    },
    {
        "content": "<p>Just for my understanding, what is the scope / area that you want to build the IG in?</p>",
        "id": 248337883,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1628076702
    },
    {
        "content": "<p>You're probably arware of this one <a href=\"https://confluence.hl7.org/plugins/servlet/mobile?contentId=51225362#content/view/51225362\">https://confluence.hl7.org/plugins/servlet/mobile?contentId=51225362#content/view/51225362</a></p>",
        "id": 248341804,
        "sender_full_name": "Scott Gordon",
        "timestamp": 1628079509
    },
    {
        "content": "<p>Oh that.</p>",
        "id": 248349755,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1628083858
    },
    {
        "content": "<p>I think your option 2 is sensible. I expect indeed lots of new concepts, so Basic for data structures, Task for actions, Measure/MeasureReport or Observation for the reporting itself..?</p>",
        "id": 248349949,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1628083951
    },
    {
        "content": "<p>my recommendation would be: start with logical models, keep them up to date. Then you know what your information means, and even if you change from R4 to R4B, or R5, or anything in between, at least one of your feet is on stable ground</p>",
        "id": 248350196,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1628084053
    },
    {
        "content": "<p>It's perfectly possible to write an IG against any frozen build of the base spec - e.g. the ballot release of R4B or the \"for comment\" ballot version of R5.  The only downside is that you probably won't find implementer support for that (i.e. no public test servers, no support from the Simplifier tools, etc.)  Moving to use Basic in a stable release will be more widely supported, but it will be pretty darn ugly, as everything will be extensions.</p>",
        "id": 248355032,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1628086325
    },
    {
        "content": "<p>Both these perspectives are helpful, thank you!</p>",
        "id": 248391343,
        "sender_full_name": "Scott Gordon",
        "timestamp": 1628102893
    },
    {
        "content": "<p>As a note: I just documented the process the other day for building an IG (locally) that references a local build of R4B.  I've been taking the output from the local build and pushing it to a github pages location so that it's publicly available until CI supports everything I need.  Doesn't help on the 'official' front, but it lets us move forward and do things like 'try this model and see if it works'.</p>\n<p>For software coding/testing, I ended up writing a toolchain when I needed it.  <a href=\"https://github.com/microsoft/fhir-codegen\">fhir-codegen</a> exports things like TypeScript and C# <em>models</em> that can be used to build projects for testing (e.g., the <a href=\"https://github.com/microsoft-healthcare-madison/argonaut-subscription-server-proxy\">Subscriptions Proxy Server</a> and the <a href=\"https://github.com/microsoft-healthcare-madison/argonaut-subscription-client-ui\">Subscription Test UI</a>).  I'm hopeful that eventually we'll be able to do things like nightly builds of the typical SDKs (e.g., Firely's FHIR Net SDK), but having models that serialize and parse correctly been enough so far.  I kind of like the 'less good' story of usability on them, so that it's clear these aren't things you'd want to move into production.</p>",
        "id": 248519485,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1628189571
    }
]