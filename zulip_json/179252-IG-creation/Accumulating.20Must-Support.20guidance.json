[
    {
        "content": "<p>In profile views, it should be possible to render the red letter \"S\" with (funtionally) a set of links to all the Must-Support guidance that applies -- i.e., in an IG that accumulates Must-Support guidance on top of its base profiles, or layers Must-Support guidance on top of not-Must-Support elements in the base profile.</p>\n<p>There are some missing pieces we'd need to make this possible -- <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> have you thought about this? Is it worth outlining an \"ideal UX\" here?</p>\n<p>(See <a href=\"#narrow/stream/179252-IG-creation/topic/.E2.9C.94.20Differential.20table.20bug.20.28or.20.2E.2E.2E.20bug.20in.20my.20brain.29.3F\">https://chat.fhir.org/#narrow/stream/179252-IG-creation/topic/.E2.9C.94.20Differential.20table.20bug.20.28or.20.2E.2E.2E.20bug.20in.20my.20brain.29.3F</a> for context.)</p>",
        "id": 251591068,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630514672
    },
    {
        "content": "<p>The issue is that if you reference a US core profile in a downstream IG, all of the mustSupport rules of the downstream IG apply, even though that won't be surfaced in the links.</p>",
        "id": 251592974,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630515394
    },
    {
        "content": "<p>(consolidating some comments from the other thread)</p>\n<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179252-IG-creation/topic/.E2.9C.94.20Differential.20table.20bug.20.28or.20.2E.2E.2E.20bug.20in.20my.20brain.29.3F/near/251592710\">said</a>:</p>\n<blockquote>\n<p>They might think they're doing that, but they're not.  IGs inherit the mustSupport rules from their parent and any mustSupport rules they introduce in their IG apply to all elements, whether listed in their differential or not.<br>\ni.e. all US-core AND pathology must-support rules apply to all mustSupport elements in all profiles used by the IG.</p>\n</blockquote>\n<p>Is that implementable?</p>\n<p>US Core explicitly limits some claims to what is contained in US Core (e.g., <code>...SHALL be capable of populating all data elements as part of the query results as specified by the US Core Server Capability Statement.</code>).  How would a downstream IG add something to that Capability Statement?</p>\n<p>Similarly, if an IG's purpose is to cover things not included in US Core, claims about things like missing data (established in US Core) would be unresolvable.</p>\n<p>I would also be curious if IG authors are crafting their rules around things like 'Must Supports I don't define here'.  My assumption has been that I'm defining rules for things I'm covering in my IG - if there's another layer, above or below, it defines what it is interested in.  If I don't touch an element in any way, how would my rules apply to it?</p>\n<p>I'll also say this more than somewhat terrifying as someone who is authoring an infrastructure-level IG, knowing that other IGs <em>will</em> be layered on top of it.  It means I need to redefine my Must Support in such a way that it is exceedingly lightweight and penalty-free for other IGs to add to.</p>",
        "id": 251596867,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1630516944
    },
    {
        "content": "<blockquote>\n<p>if you reference a US core profile in a downstream IG, all of the mustSupport rules of the downstream IG apply,</p>\n</blockquote>\n<p>Wait, I'm not sure I follow. I would have thought both of these are true:</p>\n<ul>\n<li>\n<p>If US Core marks <code>Patient.name</code> as Must-Support, and the downstream IG has nothing additional to say about this, then only the US Core definitions should apply</p>\n</li>\n<li>\n<p>If US Core marks <code>Patient.name</code> as Must-Support, and the downstream IG adds its own Must-Support definition of \"need to have specific support for displaying all names together in the UI\" (or whatever.. just some extra constraint), then both the US Core requirements and the downstream requirements apply</p>\n</li>\n</ul>\n<p>... but I think <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>'s saying \"no, the Must-Support flag should always be interpreted as rolling up all the Must-Support definitions from the root of the inheritance tree down to the current IG, so you only ever need to point to definitions in the current IG\"</p>",
        "id": 251597300,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630517143
    },
    {
        "content": "<p>If the downstream IG makes additional generic rules about US Core and the downstream IG leverages us-core-Patient, then the additional generic mustSupport rules apply to that IG's use of us-core-Patient - and thus the <a href=\"http://Patient.name\">Patient.name</a>.</p>",
        "id": 251597466,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630517214
    },
    {
        "content": "<p>E.g. If a downstream IG says \"clients must display mustSupport data\", that expectation would apply to all profiles used by the IG, even if inherited without modification.</p>",
        "id": 251597582,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630517265
    },
    {
        "content": "<p>OK -- so there's no additional semantics associated with including <code>Patient.name</code> in the downstream IG's differential, if it's already Must-Support in the base?</p>",
        "id": 251597584,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630517266
    },
    {
        "content": "<p>Right.  It just means the author happened to repeat it in the differential with no cosntraints.</p>",
        "id": 251597680,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630517293
    },
    {
        "content": "<p>Or maybe they added a usage note that's just not visible in the table.</p>",
        "id": 251597746,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630517330
    },
    {
        "content": "<p>Inclusion in the differential doesn't impact mustSupport behavior.</p>",
        "id": 251597792,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630517348
    },
    {
        "content": "<p>So your recommendation is: every IG should provide Must-Support guidance that manually links out to the M-S guidance from every base IG it depends on? Or, how else are developers expected to discover all the obligations that apply?</p>",
        "id": 251598384,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630517577
    },
    {
        "content": "<p>It would be good if the MS Flag could be a link to a specific spot in the IG that outlines the MS requirements.</p>",
        "id": 251598490,
        "sender_full_name": "David Pyke",
        "timestamp": 1630517625
    },
    {
        "content": "<p>This isn't sinking in for me, so please bear with me  =).   If we have two IG's (A and B) that each have their own definitions of Must Support, there's a set of possibilities for where an element is 'tagged' with Must Support: A, B, or both A and B.</p>\n<ul>\n<li>if an element is only tagged in A, I would expect the MS rules from A to apply.</li>\n<li>if an element is only tagged in B, I would expect the MS rules from B to apply.</li>\n<li>if an element is tagged in <em>both</em>, I would expect the MS rules from both to apply.</li>\n</ul>\n<p>I don't believe it's actually possible to differentiate between these states today - which is (for me) the issue I'm seeing..  I don't believe IG authors are taking into account that their Must Support rules are going to apply to any element that an IG based on them tags as MS.<br>\n(edit: based on knowing that I haven't.. and a lack of confidence that it's possible to define a useful set of rules that includes elements I'm not using)</p>",
        "id": 251598583,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1630517649
    },
    {
        "content": "<p>You can't, as of now, differentiate automagically, only in the prose.  We need to have a way to computationally differentiate what MS means in a profile  or element.</p>",
        "id": 251599556,
        "sender_full_name": "David Pyke",
        "timestamp": 1630518032
    },
    {
        "content": "<p>the reader can navigate to A from B and see the difference... ugly, but it is possible to do what Gino is outlining</p>",
        "id": 251600232,
        "sender_full_name": "John Moehrke",
        "timestamp": 1630518341
    },
    {
        "content": "<p>It's possible, just really manual.  We should move on from that.</p>",
        "id": 251601821,
        "sender_full_name": "David Pyke",
        "timestamp": 1630518987
    },
    {
        "content": "<p>not saying it couldn't be better. just disagreeign that it is impossible</p>",
        "id": 251603700,
        "sender_full_name": "John Moehrke",
        "timestamp": 1630519699
    },
    {
        "content": "<p>Fair - I was thinking 'possible looking at the structure definition from the top profile'.</p>",
        "id": 251605053,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1630520224
    },
    {
        "content": "<p>Not sure if it's the same thing, but this reminded me of an idea from an IHE colleague - when we have a constraint (not only a MS), it is interesting to see where is that constraint added. National level? IHE level? project level?</p>",
        "id": 251605835,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630520535
    },
    {
        "content": "<p>we've talked before about a terminology for must-support, why something is must-support. I could certainly do that technically, but we're made zero progress in coming up with such a terminology.</p>",
        "id": 251614260,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630524063
    },
    {
        "content": "<p>Terminology aside, there is today a stack of (narrative) M-S guidance that accumulates whenever profiles inherit from other profiles. What do you think about surfacing this stack to end-users so they can navigate it?</p>",
        "id": 251615576,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630524621
    },
    {
        "content": "<p>I think that's true in concept, but I don't think it's as tidy as that in practice</p>",
        "id": 251615969,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630524776
    },
    {
        "content": "<p>do you have an example where it is?</p>",
        "id": 251616003,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630524793
    },
    {
        "content": "<p>There's no ability to tag mustSupport in more than one place.  Once set, it remains set.  The rules that apply depend on what IG its used in.  <em>All</em> of the rules for the current IG as well as any inherited IGs apply.</p>\n<p>What we <em>could</em> do is require that the mustSupport rules be explicitly declare either on IGs or on profiles, so that we could aggregate all that apply and put them someplace you could link to.  However, that gets messy because some child IGs might choose to restate parent rules (with any constraints added) rather than expecting readers to read both - so rendering parent + child would give redundancy and cause confusion.  Also, if there are multiple parents, there could be overlap.  I suppose we could say that \"if you're going to specify mustSupport rules for an IG, you must integrate all parents\".  Then the IG could be published with text that says \"The mustSupport rules when using any profiles referenced by this IG are as follows....  These rules comply with and further refine the rules defined in parent IGs here, here and here\".  However, you still couldn't have your inherited and non-redefined profiles point to that because they won't know about the derived IG.</p>",
        "id": 251617758,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630525471
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Accumulating.20Must-Support.20guidance/near/251614260\">said</a>:</p>\n<blockquote>\n<p>we've talked before about a terminology for must-support, why something is must-support. I could certainly do that technically, but we're made zero progress in coming up with such a terminology.</p>\n</blockquote>\n<p>I know <span class=\"user-mention\" data-user-id=\"191549\">@Frank Oemig</span> was interested. I think that is a valuable addition</p>",
        "id": 251617866,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630525517
    },
    {
        "content": "<p>I'm doubtful that we'll ever have a terminology that can say all the things designers will want to be able to say.</p>",
        "id": 251618261,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630525676
    },
    {
        "content": "<p>but that's the wrong question. The right question is 'could we have a terminology that will say useful things for the readers of an IG\"?</p>",
        "id": 251619133,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630526037
    },
    {
        "content": "<p>I think there are a few flavours of MS that we can come up with. And it wouldn't have to be a required binding, right?</p>",
        "id": 251619383,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630526150
    },
    {
        "content": "<p>If we could clarify something, I'd appreciate it.  It feels like there are different resolution policies being discussed.  If we have two IGs: <code>Subscriptions Backport IG</code> (A) and <code>IG That Uses Subscriptions in R4</code> (B).</p>\n<p>I am reading Lloyd's position as all MS rules apply to any MS element in a chain.  E.g.:</p>\n<ul>\n<li>Whatever rules I put for MS in A will apply to all elements that are MS in B, even if they are not flagged MS in A.</li>\n<li>Any MS rules defined in B are 'applied' to MS elements defined in A.</li>\n</ul>\n<p>This is fairly different from what I described earlier, that MS rules are relevant to elements tagged as MS in <em>that</em> IG (regardless of ability to computably discover that information).</p>\n<p>Is this defined, or are are we all resolving it way we 'think it should be'?  If this is documented, where?</p>",
        "id": 251626012,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1630528976
    },
    {
        "content": "<p>You're reflecting my position correctly.  With the added note that 'tagging' of MS isn't IG-specific.  Once it's declared, it's declared.  It can't be \"re-declared\" in a child IG.</p>",
        "id": 251631758,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630531435
    },
    {
        "content": "<p>Is this right?  </p>\n<ul>\n<li>The MS tag is just a tag. It is not the only way to indicate that an element must be supported, just the most obvious.</li>\n<li>Identifying an element as must support can also be done by text ,which can be in the SD (e.g. in SD.description) or elsewhere in the IG.</li>\n<li>Defining the meaning of must support can be done in the SD (e.g. in SD.description) or elsewhere in the IG.</li>\n<li>All of that (flag and text) gets inherited by derived profiles.</li>\n</ul>",
        "id": 251656262,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1630548731
    },
    {
        "content": "<p>if you say it's must support you are expected to flag it. So if it's not flagged, you should be able assume there's no text that says how it is somewhere</p>",
        "id": 251656317,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630548814
    },
    {
        "content": "<p>What <em>can</em> happen though is that usage notes on a single element can alter (or if within the same IG), override the generic must support guidance.</p>",
        "id": 251659800,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630552169
    },
    {
        "content": "<p>This is my point. In principle it can vary for each MS because it depends where and how you declare the scope.<br>\nMy proposal was to start with a structured extension to capture all possibilities with in an IG. The code systems can be somehow arbitrary so not really following good practices. Eg., 1=print, 2=show etc., eventually using the sentences from the IG.<br>\nThat way it would be possible to get it in a machine readable format first, and not hidden somewhere. Once we have that we can think about how we can improve it.<br>\n(This is optional for those who think in that direction, so not a breaking change.)</p>",
        "id": 251678137,
        "sender_full_name": "Frank Oemig",
        "timestamp": 1630568953
    },
    {
        "content": "<p>This feels like an odd default to me - is it documented somewhere?  (I phrase it as 'default' because if you can change the behavior of MS by explicitly defining it for an element, then it's just the default propagation rule.)</p>\n<p>Based on my current understanding, I have two specific questions:</p>\n<p>1) In the Subscriptions Backport IG we don't have a DAR alternative for MS - our MS means that it must be present.  If someone builds an IG on top of it that has MS means present or DAR, the two rules are incompatible.</p>\n<p>In the scenario where the IG is profiling Subscription to specifically add that type of support to an element, that makes sense - use the 'newer' rule.  But, does it apply to all elements in the Backport IG now?  What if they are not trying to override the MS from Subscriptions, but just adding that behavior for some other element in the resource; what is the behavior then?</p>\n<p>2) If an IG includes both Subscriptions Backport and US Core, which rules apply?  Is it based on the chain for each resource, or is it applied to everything in the IG (since MS rules are in an IG)?  For example, <a href=\"http://hl7.org/fhir/us/davinci-pcde/\">DaVinci PCDE</a> references US Core, HRex, PDex, PAS, and Subscriptions Backport.  Do I look at the MS definition chain for each resource individually, or for the IG as a whole?</p>\n<p>If there's documentation I can use to resolve these types of questions, please just let me know.  Otherwise, I'm happy to file a ticket for adding/clarifying, though I'd appreciate a link to the existing documentation either way - I've come up short for this.  Thanks!</p>",
        "id": 251751640,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1630603195
    },
    {
        "content": "<ol>\n<li>Da Vinci ran into this same issue.  We settled on the notion that - for Da-Vinci defined profiles, DAR is only allowed for mandatory elements if explicitly defined in the profile.  We wanted to do that everywhere, but created an exception for profiles inherited from US Core because we couldn't override their rules.  In short, an IG's MS rules can't break the behavior for anything they import, but can add additional rules, and can set different rules for stuff that's not imported.</li>\n<li>The rules for US core apply to the US core stuff.  The rules for backport apply to the backport stuff.  The new IG needs to define the expectations for stuff defined in the new IG - including possibly setting additional expectations on the imported stuff.</li>\n</ol>",
        "id": 251753642,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630603904
    },
    {
        "content": "<p>Note - the above are my opinions/understandings.  We haven't documented such expectations anywhere that I'm aware.</p>",
        "id": 251753789,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630603941
    },
    {
        "content": "<p>forgive me... what is \"DAR\"?</p>",
        "id": 251775939,
        "sender_full_name": "John Moehrke",
        "timestamp": 1630612258
    },
    {
        "content": "<p>\"Data Absent Reason\" :(</p>",
        "id": 251776086,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630612324
    },
    {
        "content": "<p>It seems to me that the issue here is not the lack of a terminology for classification of MS elements, but varied understanding of how must support works with inherited IGs. Perhaps there is a need to make inherited MS requirements more visible, but I'd say that's secondary to a better understanding of MS and inheritance.</p>\n<p>For that matter, I'm not sure we have a good definition of what an \"inherited\" IG is -- If I declare a dependency on an IG have I inherited the entire IG? Can I bring in just a profile, or extension, or valueset without brining in all the other parts I don't need?) What does dependency on multiple IGs mean?  (This also ties into a discussion on <a class=\"stream\" data-stream-id=\"207835\" href=\"/#narrow/stream/207835-IPS\">#IPS</a> about whether adding a <code>summary</code> operation to the IG imposes a burden on systems that merely consume or create IPS documents.)</p>",
        "id": 251897562,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1630682752
    },
    {
        "content": "<blockquote>\n<p>It seems to me that the issue here is not the lack of a terminology for classification of MS elements, but varied understanding of how must support works with inherited IGs. </p>\n</blockquote>\n<p>Yes. </p>\n<blockquote>\n<p>I'm not sure we have a good definition of what an \"inherited\" IG is -- If I declare a dependency on an IG have I inherited the entire IG? </p>\n</blockquote>\n<p>My reading is, at least with respect to Must-Support: IGs don't really \"depend on\" other IGs, so much as StructureDefinitions inherit from other StructureDefinitions. All inherited requirements are accumulated this way, through a chain of SD.base relationships. (Of course, we do look at all these SD inheritance relationships and roll them up to create a nice list of IGs that that we \"depend on\" so we can fetch artifacts, provide documentation links, etc -- but the actual conformance requirements for Must-Support are attached to specific FHIR Elements in specific profiles, not to IGs.)</p>",
        "id": 251906775,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630686294
    },
    {
        "content": "<p>My interpretation of what happens is as follows:</p>\n<ul>\n<li>When mustSupport is defined, it impacts everything defined in that IG and is inherited - for those artifacts - in any downstream IG that subsequently uses those artifacts.  The rules include those defined on the IG as a whole, those defined on the profile and those defined on individual elements.  </li>\n<li>Constraints can be defined in such away that they can be overridden in the context of an IG.  E.g. \"Unless otherwise specified at the profile or element level, mustSupport means X\".  However, they can't be overridden within a referencing IG.  If an implementer of a base IG would have had certain expectations, those expectations hold wherever the artifact is referenced</li>\n<li>If an IG defines its own must support rules <em>and</em> declares a dependency on other IGs, any resource it references from those IGs retain their original mustSupport rules and <em>also</em> incur the mustSupport rules of the referencing IG unless the wording declares otherwise</li>\n<li>The mustSupport rules for an IG can choose to reference rules defined in other IGs but, otherwise, rules defined in dependency IGs are not automatically presumed to apply to net new profiles defined in the referencing IG.</li>\n</ul>",
        "id": 251917053,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630690834
    }
]