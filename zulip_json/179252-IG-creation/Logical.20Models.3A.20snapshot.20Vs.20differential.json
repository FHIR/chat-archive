[
    {
        "content": "<p>I noticed that there are different expectations about LM from different tools: forge specifies LM using snapshots, the IG builder expects to have the elements in the differential. <br>\nIs there any way to by-pass this ? <br>\nI.e. Allow forge to save as differential and/or permit the IG publisher to build the IG without failures if the LMs are specified as snapshot.</p>",
        "id": 167064225,
        "sender_full_name": "Giorgio Cangioli",
        "timestamp": 1559380838
    },
    {
        "content": "<p>FYI Forge serializes logical models to a snapshot component because Grahame once instructed me to do so (over 1y ago). I'm a bit surprised that the IG builder has different expectations.</p>",
        "id": 167173689,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1559556391
    },
    {
        "content": "<p>? what different expectations?</p>",
        "id": 167174154,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559556812
    },
    {
        "content": "<p>just to be more clear :-) </p>\n<p>to have the IG correctly built by the IG builder I specified my Logical Models by using the differential. <br>\nIf someone tries to edit my logical models with forge , the new version is saved as snapshot, this is the result with the IG builder</p>\n<p>org.hl7.fhir.exceptions.FHIRException: Differential is empty generating hierarchical table</p>",
        "id": 167200367,
        "sender_full_name": "Giorgio Cangioli",
        "timestamp": 1559575231
    },
    {
        "content": "<p>so my question is if there is a way to force forge to save the logical models as differential  and/or to have the IG builder accepting logical models having only the snapshot</p>",
        "id": 167200911,
        "sender_full_name": "Giorgio Cangioli",
        "timestamp": 1559575503
    },
    {
        "content": "<p>well, <span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> will have to deal with Forge but I can look at hte IG Publisher</p>",
        "id": 167245214,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559608232
    },
    {
        "content": "<p>As I mentioned, the Forge implementation follows your guidelines. However if I misunderstood and/or need to change something, let me know.</p>",
        "id": 167271105,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1559638079
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> What would it take to port my IG built using Lloyd's framework to Forge/Simplifier or whatever it is called now? The content I create is xml structure definitions and markdown pages and json examples. I have not created any html files. The framework takes these and creates the web pages IG. I have no idea how that part works. The most difficult part for me was the creation of the structure definition xml files. I did it using Notepad++. The files are hard to read and it was very error prone.</p>",
        "id": 167281708,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1559646774
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"192228\">@Brian Reinhold</span>, I assume that you reverted to manual (Notepad++) profile authoring because you need R4 support? Recently we published Forge for R4, so you don't need to edit XML/JSON anymore.<br>\nSimplifier now also supports FHIR R4. So you can upload your profiles to Simplifier and use the online IG editor to create a new guide. There is not automatic tool to convert an existing IG from IG Publisher input format to Simplifier. However you can copy/paste the markdown, formatting is the same. Then you'd have to manually replace special \"placeholders\" for the IG Publisher with placeholders supported by Simplifier, e.g. to render a profile tree.<br>\nI suggest you try it out with a small (dummy) IG and a couple of pages, to get an indication of the amount of work involved to port the full IG.</p>",
        "id": 167282370,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1559647535
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> Yes,  I needed R4 support. The IG publisher gives validation of examples as well. That is pretty important. I suppose the same is true in Simplifier/Forge?</p>",
        "id": 167282590,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1559647753
    },
    {
        "content": "<p>Yes, you can upload examples to Simplifier and validate them, provided that they contain a meta.profile claim and the target profile can be resolved. Simplifier will then validate the example against the referenced target profile.</p>",
        "id": 167284000,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1559648939
    },
    {
        "content": "<p>Please note that Simplifier and IG publisher validation features/reports are similar, but not identical.</p>",
        "id": 167284070,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1559649001
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> can we make a Logical Model from a resource in Forge? I thought we could only start from Element..</p>",
        "id": 174704534,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1567417893
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span>, I'm not sure I understand your question. Would you like to transform an existing resource into a (similar) logical model? You can manually edit the XML/JSON and update <code>StructureDefinition.kind</code> to <code>logical</code>.<br>\nIn Forge, a Logical Model is always based on <code>Element</code>, as Grahame once suggested to me. However theoretically, you could also derive a logical model from another base class such as <code>Resource</code> or <code>DomainResource</code>. Not sure if FHIR (R4) allows this?</p>",
        "id": 174707605,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1567421331
    },
    {
        "content": "<p>Yes, from this thread, that is what I understood people were talking about - using a resource to create a similar logical model.</p>",
        "id": 174707702,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1567421466
    },
    {
        "content": "<p>If that is not foreseen, there is no problem, I just thought it was what was being discussed in this thread, and I wondered if I was missing out on that.</p>",
        "id": 174707704,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1567421468
    },
    {
        "content": "<p>Current behavior has been developed historically.  If FHIR also allows other base classes for  Logical Models, such as <code>Resource</code> and/or <code>DomainResource</code>, I could easily update Forge to support that.</p>",
        "id": 174708677,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1567422487
    },
    {
        "content": "<p>thanks</p>",
        "id": 174708968,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1567422844
    },
    {
        "content": "<p>I don't think we've ever talked about it</p>",
        "id": 174738830,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1567453564
    },
    {
        "content": "<p>I'm open for suggestions</p>",
        "id": 174776607,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1567507449
    },
    {
        "content": "<p>I think we can live quite well with changing .kind to logical. I was wondering if there was a way to do that in Forge directly.<br>\nIf the discussion is \"should a LM be based on something else then Element\", I don't see a reason why we'd want that.</p>",
        "id": 174779109,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1567510073
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span>, thanks for the helpful feedback. It's relatively easy to implement a command in Forge to create a new logical model based on an existing profile. However we don't want to (further) clutter the UI - the learning curve is already quite steep. Therefore I am reluctant to introduce advanced new features for very specific use cases. Do you think this would be frequently used?</p>",
        "id": 174780366,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1567511330
    },
    {
        "content": "<p>only in a ramp-up phase, I guess. <br>\nPerhaps this is just a matter of documentation / academy than changing the UI indeed</p>",
        "id": 174780494,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1567511439
    },
    {
        "content": "<p>For coincidental use, I guess it's not that hard to hack the <code>StructureDefinition.kind</code> value using a plain text editor.</p>",
        "id": 174780539,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1567511501
    },
    {
        "content": "<p>when we create a new LM, it provides a list with just one entry. My question started because I thought I was missing something</p>",
        "id": 174780588,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1567511527
    },
    {
        "content": "<p>I wondered if besides profile-type.xml (Definition for Element) we would have something else. Not change to the UI.</p>",
        "id": 174780651,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1567511602
    },
    {
        "content": "<p>yes, I will just take a bunch of StructureDefinitions, change them to reuse in Logical Models.</p>",
        "id": 174780734,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1567511664
    },
    {
        "content": "<p>thanks, <span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span></p>",
        "id": 174780743,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1567511678
    },
    {
        "content": "<p>Theoretically, one could define a derived logical model based upon another logical model. Not sure if this is actually useful and/or helpful...?</p>",
        "id": 174780909,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1567511825
    },
    {
        "content": "<p>We could also allow slicing &amp; extensions in logical models, but again, not sure if this would provide any value.</p>",
        "id": 174780992,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1567511891
    }
]