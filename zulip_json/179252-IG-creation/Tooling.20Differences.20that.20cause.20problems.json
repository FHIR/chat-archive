[
    {
        "content": "<p>Summary of technical issue:<br>\nWe found there are structure differences between Forge and Trifolia when displaying the element in the differential view.<br>\nIn Trifolia, the root element is required in order to display in the differential view. For example, the bodysite element below is present in the Trifolia xml output of the StructureDefinition differential view information:<br>\n    &lt;element id=\"Observation.bodySite\"&gt;<br>\n            &lt;path value=\"Observation.bodySite\"/&gt;<br>\n        &lt;/element&gt;<br>\n        &lt;element id=\"Observation.bodySite.coding\"&gt;<br>\n            &lt;path value=\"Observation.bodySite.coding\"/&gt;<br>\n            &lt;min value=\"1\"/&gt;<br>\n            &lt;max value=\"1\"/&gt;<br>\n        &lt;/element&gt;<br>\n        &lt;element id=\"Observation.bodySite.coding.system\"&gt;<br>\n            &lt;path value=\"Observation.bodySite.coding.system\"/&gt;<br>\n            &lt;min value=\"1\"/&gt;<br>\n            &lt;fixedUri value=\"http://snomed.info/sct\"/&gt;<br>\n        &lt;/element&gt;<br>\n        &lt;element id=\"Observation.bodySite.coding.code\"&gt;<br>\n            &lt;path value=\"Observation.bodySite.coding.code\"/&gt;<br>\n            &lt;min value=\"1\"/&gt;<br>\n            &lt;binding&gt;<br>\n                &lt;strength value=\"required\"/&gt;<br>\n                &lt;valueSet value=\"http://www.ama-ihmi.org/fhir/ValueSet/AMA-IHMI-valueSet-body-structure-1-instance\"/&gt;<br>\n            &lt;/binding&gt;<br>\n        &lt;/element&gt;<br>\n        &lt;element id=\"Observation.bodySite.coding.display\"&gt;<br>\n            &lt;path value=\"Observation.bodySite.coding.display\"/&gt;<br>\n            &lt;min value=\"1\"/&gt;<br>\n        &lt;/element&gt;<br>\nThe element Observation.bodySite is in the list of element in Trifolia, but it is missing in the corresponding StructureDefinition resource generated by Forge.  Forge doesn't require a root element to be in the list in order to display in the differential view.</p>\n<p>Forge says:  <br>\nThe Forge team reports that the way they are expressing the structure is permitted by the spec.</p>\n<p>Lantana says:<br>\nThey are following the guideline in the spec, citing that the spec implies that the parent element must be asserted:<br>\nSee <a href=\"https://www.hl7.org/fhir/profiling.html#using\" target=\"_blank\" title=\"https://www.hl7.org/fhir/profiling.html#using\">https://www.hl7.org/fhir/profiling.html#using</a></p>\n<p>Where it indicates \"A structure definition contains a linear list of element definitions. The inherent nested structure of the elements is derived from the path value of each element. For instance, a sequence of the element paths like this:\"</p>\n<p>Further-more, it indicates \"The structure is coherent - children are never implied, and the path statements are always in order. The element list is a linear list rather than being explicitly nested because element definitions are frequently re-used in multiple places within a single definition, and this re-use is easier with a flat structure.\"</p>\n<p>We, the FHIR Accelerator team at Gravity, are stuck between our tooling vendorâ€™s.  We need to work with the Forge team and Trifolia team to collaborate and address this inconsistency. If the intention is for SturctureDefinition resources to be interoperable between systems, it seems like being explicit in the inclusion of all structural elements would be better approach. </p>\n<p>Any advice on how to get this resolved?  We are blocked by this issue. </p>\n<p>Lisa</p>",
        "id": 180131107,
        "sender_full_name": "Lisa Nelson",
        "timestamp": 1573133178
    },
    {
        "content": "<p>The structure definition is coherent, but that doesn't mean that the differential can't be sparse.  The intention is that differentials <em>can</em> be sparse.  The HL7 tool suite struggled with this for years, but now supports it properly (we believe - thanks <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> :) ).  Needing to list ancestor elements to constrain a child doesn't add value, just overhead and isn't algorithmicly required.  So Trifolia <em>should</em> also support sparse differentials.  It's certainly going to start seeing those in IGs it will need to constrain (e.g. US Core).</p>",
        "id": 180143407,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1573140835
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191407\">@Rick Geimer</span> <span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span> Is this something you can resolve on the Trifolia side to help Gravity proceed?</p>",
        "id": 180145383,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1573142003
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span> , I have this on my list of todo in the next couple weeks.</p>",
        "id": 180151776,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1573145954
    },
    {
        "content": "<p>It was just brought to my attention a couple days ago</p>",
        "id": 180151786,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1573145964
    },
    {
        "content": "<p>I think we can address this, but it will take a bit of time to figure out</p>",
        "id": 180151805,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1573145972
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span>, that's great to hear.<br>\n<span class=\"user-mention\" data-user-id=\"192205\">@Lisa Nelson</span> Is this going to work with your timeline for Gravity?</p>",
        "id": 180154625,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1573147857
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192205\">@Lisa Nelson</span> note this text from the next section:</p>\n<blockquote>\n<p>(note that this means that a differential profile can be sparse and only mention the elements that are changed, without having to list the full structure. This rule includes the root element - it is not needed in a sparse differential)</p>\n</blockquote>",
        "id": 180168439,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1573156130
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span> I think our workaround is a manual adjustment prior to importing the artifact generated by Forge.  Not ideal, but it will be our approach until <span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span> has time to get this addressed in Trifolia.  Thanks to all for getting this cleared up.</p>",
        "id": 180176165,
        "sender_full_name": "Lisa Nelson",
        "timestamp": 1573160899
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"218707\">@Corey Smith</span>: Please take a look at this discussion, since I'm not sure my emails have reached you successfully, and this answers your questions.</p>",
        "id": 180185593,
        "sender_full_name": "Mirjam Baltus",
        "timestamp": 1573166999
    },
    {
        "content": "<p>FYI The first step of the SnapshotGenerator in the .NET API library is to complete the differential by adding missing parent elements. Such a preprocessing step is trivial to implement and simplifies downstream logic.</p>",
        "id": 180222023,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1573213271
    }
]