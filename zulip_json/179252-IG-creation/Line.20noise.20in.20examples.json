[
    {
        "content": "<p>We know from experience that developers grab and work with examples. The fact that FHIR includes lots of examples has helped with its rapid adoption. That said, as our publication tooling grows more sophisticated, examples are being forced to perform two jobs:</p>\n<ol>\n<li>Show developers how the spec works (this is the <em>raison d'Ãªtre</em> for examples)</li>\n<li>Show the publisher tooling how to process each example (this is a side effect)</li>\n</ol>\n<p>and (2) makes (1) harder, because our examples get annotated with a bunch of stuff that real-life instances wouldn't/shouldn't have.</p>\n<p>To make this concrete: in ballot review I'm seeing <a href=\"http://build.fhir.org/ig/HL7/US-Core/Observation-prapare-multiselect-example.json.html\">this example</a>:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"nt\">\"resourceType\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Observation\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"id\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"prapare-multiselect-example\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"meta\"</span> <span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"extension\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"url\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"http://hl7.org/fhir/StructureDefinition/instance-name\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"valueString\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Prapare Multiselect Example\"</span>\n      <span class=\"p\">},</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"url\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"http://hl7.org/fhir/StructureDefinition/instance-description\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"valueMarkdown\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"This is a Prapare Multiselect Example for the *US Core Screening Response Observation Profile*.\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"profile\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"s2\">\"http://hl7.org/fhir/us/core/StructureDefinition/us-core-observation-screening-response\"</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"text\"</span> <span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"status\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"generated\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"div\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"&lt;div xmlns=\\\"http://www.w3.org/1999/xhtml\\\"&gt;&lt;p&gt;&lt;b&gt;Generated Narrative&lt;/b&gt;&lt;/p&gt;&lt;div style=\\\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\\\"&gt;&lt;p style=\\\"margin-bottom: 0px\\\"&gt;Resource \\\"prapare-multiselect-example\\\" &lt;/p&gt;&lt;p style=\\\"margin-bottom: 0px\\\"&gt;Profile: &lt;a href=\\\"StructureDefinition-us-core-observation-screening-response.html\\\"&gt;US Core Screening Response Observation Profile&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;&lt;b&gt;status&lt;/b&gt;: final&lt;/p&gt;&lt;p&gt;&lt;b&gt;category&lt;/b&gt;: SocialDeterminantsOfHealth &lt;span style=\\\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\\\"&gt; (&lt;a href=\\\"https://loinc.org/\\\"&gt;LOINC&lt;/a&gt;#LG41762-2)&lt;/span&gt;, Survey &lt;span style=\\\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\\\"&gt; (&lt;a href=\\\"http://terminology.hl7.org/3.0.0/CodeSystem-observation-category.html\\\"&gt;Observation Category Codes&lt;/a&gt;#survey)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;code&lt;/b&gt;: Have you or any family members you live with been unable to get any of the following when it was really needed in past 1 year [PRAPARE] &lt;span style=\\\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\\\"&gt; (&lt;a href=\\\"https://loinc.org/\\\"&gt;LOINC&lt;/a&gt;#93031-3)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;subject&lt;/b&gt;: &lt;a href=\\\"Patient-example.html\\\"&gt;Patient/example&lt;/a&gt; \\\" SHAW\\\"&lt;/p&gt;&lt;p&gt;&lt;b&gt;effective&lt;/b&gt;: 2021-11-12T17:59:15-08:00&lt;/p&gt;&lt;p&gt;&lt;b&gt;performer&lt;/b&gt;: &lt;a href=\\\"Patient-example.html\\\"&gt;Patient/example&lt;/a&gt; \\\" SHAW\\\"&lt;/p&gt;&lt;p&gt;&lt;b&gt;derivedFrom&lt;/b&gt;: &lt;span&gt;: PREPARE example&lt;/span&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;component&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;code&lt;/b&gt;: Have you or any family members you live with been unable to get any of the following when it was really needed in past 1 year [PRAPARE] &lt;span style=\\\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\\\"&gt; (&lt;a href=\\\"https://loinc.org/\\\"&gt;LOINC&lt;/a&gt;#93031-3)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;value&lt;/b&gt;: Clothing &lt;span style=\\\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\\\"&gt; (&lt;a href=\\\"https://loinc.org/\\\"&gt;LOINC&lt;/a&gt;#LA30126-9)&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;&lt;b&gt;component&lt;/b&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;code&lt;/b&gt;: Have you or any family members you live with been unable to get any of the following when it was really needed in past 1 year [PRAPARE] &lt;span style=\\\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\\\"&gt; (&lt;a href=\\\"https://loinc.org/\\\"&gt;LOINC&lt;/a&gt;#93031-3)&lt;/span&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;value&lt;/b&gt;: Child care &lt;span style=\\\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\\\"&gt; (&lt;a href=\\\"https://loinc.org/\\\"&gt;LOINC&lt;/a&gt;#LA30127-7)&lt;/span&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;/div&gt;\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"status\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"final\"</span><span class=\"p\">,</span>\n</code></pre></div>\n<p>... which of these fields are \"real\" and which are just helping the publisher do its job? (I think the <code>extension</code>s are all just hints to the publisher, and I think the <code>profile</code>is too -- but some of our IGs actually put conformance requirements around <code>profile</code> so you really need to <em>know stuff</em> to understand what it's safe to ignore).</p>",
        "id": 267110640,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1641501284
    },
    {
        "content": "<p>I think it'd be good if we could avoid this confusion. Perhaps our published examples could strip out any \"hints\", or the hints could live elsewhere, or... probably other better ideas that y'all might have?</p>",
        "id": 267110833,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1641501365
    },
    {
        "content": "<p>I have no idea what those extensions are doing there</p>",
        "id": 267111239,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1641501568
    },
    {
        "content": "<p>and I don't think the profile should be there either</p>",
        "id": 267111256,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1641501576
    },
    {
        "content": "<p>I had assumed publisher used <code>profile</code> as a hint to run validation checks... is that wishful thinking, or is there a different way to opt into that (like populating elements in the ImplementationGuide resource)?</p>",
        "id": 267112317,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1641502174
    },
    {
        "content": "<p>publisher does use profile to drive validation checks, but there are other ways to do that (yes, in the IG resource), so you should only do it that way if you're explicit intent is that the profile should be there in production examples</p>",
        "id": 267112498,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1641502264
    },
    {
        "content": "<p>We have a few challenges:</p>\n<ul>\n<li>a bunch of people want to put the documentation about a resource (title, description, what to validate it against) in the resource and NOT in the IG.  SUSHI folks in particular.  I think that's where these two extensions are coming from</li>\n<li>the ImplementationGuide currently only supports a single profile assertion for a particular example, and sometimes more than one is needed</li>\n</ul>\n<p>What might help is an extension that we could include on elements that say \"please strip this before rendering/publishing\".  That extension might appear on:</p>\n<ul>\n<li>id (because there are times when examples <em>shouldn't</em> have ids, even though the publication process requires them to</li>\n<li>meta.profile</li>\n<li>the title &amp; description extensions</li>\n<li>maybe other things?</li>\n</ul>\n<p>Would that be doable <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>?</p>",
        "id": 267116536,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1641504146
    },
    {
        "content": "<p>Althgough I disagree with Josh's complaint - they do no harm in my opinion.  so pop em  off if you want but not by an extension but a parameter set to default stripping.   Also EVEN IF the IG resource could do the same, the overhead is greatly reduced by keeping the metadata on the instance, and as an end result will lead to more examples not less.</p>",
        "id": 267126720,
        "sender_full_name": "Eric Haas",
        "timestamp": 1641509854
    },
    {
        "content": "<p>Anything in an example that isn't expected to be in a production instance is confusing for implementers and thus is definitely a problem.  So we definitely need to find a way to strip it.  But I accept that there are going to be people who want to maintain the metadata as part of their instances.</p>",
        "id": 267126879,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1641509969
    },
    {
        "content": "<p>Confusing for implementers who copy and paste and do not comprehend what they are doing. ( been there and done that many times :-))</p>",
        "id": 267132692,
        "sender_full_name": "Eric Haas",
        "timestamp": 1641513925
    },
    {
        "content": "<p>I support the point Josh is making. The reader should not need to comprehend extensions well enough to know when an extension is intended and when it is there as an artifact of the publication process. <br>\nI do recognize these are much easier to manage in the github source when they are inside the resource.<br>\nI liked the idea Lloyd has to have in your project the things you want stripped out. much like the ignoreWarnings.txt.</p>",
        "id": 267186132,
        "sender_full_name": "John Moehrke",
        "timestamp": 1641560599
    },
    {
        "content": "<p>I guess it could be another extension within the resource that indicates the things to be removed, but I suspect this will make the github editing harder... so, both. a ignroeWarnings like thing to remove most of the cruft, and an extension to remove additional things specific to this example instance (like remove the id).</p>",
        "id": 267186319,
        "sender_full_name": "John Moehrke",
        "timestamp": 1641560740
    },
    {
        "content": "<p>I think the title and description extensions should just always be removed.  I think we'll need a special extension for profile because, even within a single IG or even a single instance, there'll be some that should be removed and some that should stay.</p>",
        "id": 267203787,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1641570204
    }
]