[
    {
        "content": "<p>The IG publisher checks that ValueSets are valid, or at least the error messages make me feel that it does.<br>\nThere is no similar check for code systems.   I have defined valuesets using arbitrary URLs, and the IG publisher complains not one peep.</p>\n<p>If I want to use a code system with a defining URL of <a href=\"http://whatever.org/something\">http://whatever.org/something</a>, I could create a CodeSystem stub -- a codeSystem that sets url=http://whatever.org/something.   Alternatively, I could define a ValueSet that includes all codes from <a href=\"http://whatever.org/something\">http://whatever.org/something</a>.   And I could start sprinkling codes using that system all over the place.</p>\n<p>What is the value of defining a CodeSystem stub?   Why not just start using the defining URL as if it as been defined as a CodeSystem?<br>\nIn the published IG, the valuesets that reference the code system reference the defining URL, not the CodeSystem instance.   Defining the CodeSystem in these cases seems like extra work that adds little value.</p>",
        "id": 208031339,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1598393893
    },
    {
        "content": "<p>The only value is providing slightly more value to IG consumers about the code system if it isn't actually available via its URL.  So if the code system is <a href=\"http://whatever.org/something\">http://whatever.org/something</a> and that doesn't actually resolve, then IG consumers can't see the details of the code system.  For X12, we create the stubs so that we can provide more information about what the codes are (since we can't actually provide the codes) as well as provide the copyright information.</p>",
        "id": 208031704,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1598394143
    },
    {
        "content": "<p>Rob Hausam had this to say in the #terminology stream about code system stubs (this was in relation to using a CodeSystem with content not present vs a NamingSystem):</p>\n<p>The decision at least partly comes down to who is in control of the code system and how much and what types of metadata are available for it. The CodeSystem resource should represent the point of view and the content determined by the code system owner/publisher (although someone else, such as yourself, might actually create the resource instance). If the metadata includes the copyright and many of the additional items (including properties, filters, etc.), then CodeSystem is the only way that we have to represent that.</p>",
        "id": 208031855,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1598394255
    },
    {
        "content": "<p>OK, So we should view it as a place to put documentation.    Therefore, better to err on the side of creating them.  thx</p>",
        "id": 208044785,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1598406089
    }
]