[
    {
        "content": "<p>I have a validation issue that I can't figure out. </p>\n<p>The BFDR IG references profiles defined in the Vital Records Common Profiles IG.</p>\n<p>Re: this profile: <a href=\"http://build.fhir.org/ig/HL7/vr-common-library/branches/master/StructureDefinition-Observation-number-prenatal-visits.html\">http://build.fhir.org/ig/HL7/vr-common-library/branches/master/StructureDefinition-Observation-number-prenatal-visits.html</a> </p>\n<p>The exact same example (only differs by id) validates differently between the two IGs. When the example is in the \"owning\" IG, the informational messages say it correctly validates against the one profile it's supposed to validate against (<a href=\"http://build.fhir.org/ig/HL7/vr-common-library/branches/master/qa.html\">http://build.fhir.org/ig/HL7/vr-common-library/branches/master/qa.html</a>):<br>\n<a href=\"/user_uploads/10155/E6hNAjge2__lNrQ482FoQsVj/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/E6hNAjge2__lNrQ482FoQsVj/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/E6hNAjge2__lNrQ482FoQsVj/image.png\"></a></div><p>When it's in the IG that references the owning IG, the informational messages say it is validating against 16 (!!!) profiles (<a href=\"http://build.fhir.org/ig/HL7/fhir-bfdr/branches/master/qa.html\">http://build.fhir.org/ig/HL7/fhir-bfdr/branches/master/qa.html</a>):<br>\n<a href=\"/user_uploads/10155/EdelWWvlZVhsYTiq_9WWYNl8/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/EdelWWvlZVhsYTiq_9WWYNl8/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/EdelWWvlZVhsYTiq_9WWYNl8/image.png\"></a></div><p>Then, I'm pretty sure, this is causing multiple matching slicing errors in the containing Composition like: <code>Profile http://hl7.org/fhir/us/bfdr/StructureDefinition/Composition-jurisdiction-live-birth-report, Element matches more than one slice - numberPrenatalCareVisits, cigaretteSmokingBeforeDuringPregnancy</code></p>\n<p>A weird thing too is that all the errors I am now getting about multiple matching slices were not there until I used -resetTx when running (and subsequently deleted the inputcache from the git directory). The errors were only surfaced when Lynn was trying to publish and was reporting errors that I wasn't getting in the CI build nor my local build.</p>\n<p>It's got to be something I'm doing wrong, but I can't see what it is...</p>",
        "id": 257643326,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1634271031
    },
    {
        "content": "<p>What are you slicing on?</p>",
        "id": 257643934,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1634271646
    },
    {
        "content": "<p>Composition.section.entry: </p>\n<div class=\"codehilite\"><pre><span></span><code>&lt;discriminator&gt;\n                    &lt;type value=&quot;profile&quot;/&gt;\n                    &lt;path value=&quot;$this.resolve()&quot;/&gt;\n                &lt;/discriminator&gt;\n</code></pre></div>",
        "id": 257644039,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1634271738
    },
    {
        "content": "<p>I did consider that the patternCodeableConcept in the profiles was causing an issue, but I changed to fixedCodeableConcept, and tested and no difference (other than the errors that I then got because of display and text being included).</p>",
        "id": 257644085,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1634271800
    },
    {
        "content": "<p>It's not just that profile, btw - almost all the examples in the non-owning guide are validating against multiple profiles.</p>",
        "id": 257644187,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1634271900
    },
    {
        "content": "<p>I chose that one specifically because it's an \"easy\" profile - i.e. Observation.code is bound to a LOINC code and not a phin vads code...</p>",
        "id": 257644294,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1634271993
    },
    {
        "content": "<p>What's likely happening then is that it's validating against all the possible profiles and not finding a match against any - so it's listing all of them.  Try validating just that instance against just the profile you <em>think</em> it's valid against.</p>",
        "id": 257694470,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1634303237
    },
    {
        "content": "<p>Yes, but why is it not finding a match against any of them? And why is the same sample file finding the proper match in  one IG but then finding multiple matches in another IG?</p>\n<p>What do you mean \"Try validating just that instance against just the profile you think it's valid against\".  How do I do that?</p>",
        "id": 257749713,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1634325345
    },
    {
        "content": "<p>Invoke the validator and assert the profile id</p>",
        "id": 257755947,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1634328003
    },
    {
        "content": "<p>Ok tx will try...</p>",
        "id": 257760062,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1634329651
    },
    {
        "content": "<p>So if I run <code>java -jar  \"validator_cli.jar\" \"input\\resources\\observation\\observation-number-prenatal-visits-jada-ann-quinn.xml\" -version 4.0.1 -ig hl7.fhir.us.bfdr#current -profile http://hl7.org/fhir/us/vr-common-library/StructureDefinition/Observation-number-prenatal-visits -output validation.xml</code></p>\n<p>I get</p>\n<div class=\"codehilite\"><pre><span></span><code>&lt;extension url=&quot;http://hl7.org/fhir/StructureDefinition/operationoutcome-file&quot;&gt;\n    &lt;valueString value=&quot;input\\resources\\observation\\observation-number-prenatal-visits-jada-ann-quinn.xml&quot;/&gt;\n  &lt;/extension&gt;\n  &lt;issue&gt;\n    &lt;severity value=&quot;information&quot;/&gt;\n    &lt;code value=&quot;informational&quot;/&gt;\n    &lt;details&gt;\n      &lt;text value=&quot;All OK&quot;/&gt;\n    &lt;/details&gt;\n  &lt;/issue&gt;\n</code></pre></div>",
        "id": 258110152,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1634595814
    },
    {
        "content": "<p>I'm thinking there is a possibly(?) an issue with the way the IG publisher is validating against profiles that it is referencing from other IGs.</p>\n<p>When I look at the Vital Records Common Profiles IG - which has zero examples that reference against profiles that aren't defined in the same IG, every single profile only has one informational validation message and they all look like: <code>Observation: Validated against this.Observation - APGAR Score</code> - i.e. not mention of meta or trying to validate against any other profiles or the base profile or anything. <a href=\"http://build.fhir.org/ig/HL7/vr-common-library/qa.html\">http://build.fhir.org/ig/HL7/vr-common-library/qa.html</a></p>\n<p>When I look at pretty much any other IG that references profiles in another IG (US Core mostly), there are multiple validations when the profile being referenced isn't defined in the IG there are multiple informational validation messages that look like: <code>Observation: Validated against fhir.Observation and hl7.fhir.us.core.US Core Laboratory Result Observation Profile (per meta)</code> - it looks like it isn't validating properly - like only validating against the US Core Lab Result profile because it's in meta, not because it's finding a \"real\" match... <a href=\"https://build.fhir.org/ig/HL7/dental-data-exchange/branches/master/qa.html\">https://build.fhir.org/ig/HL7/dental-data-exchange/branches/master/qa.html</a>, <a href=\"https://build.fhir.org/ig/HL7/fhir-mCODE-ig/branches/master/qa.html\">https://build.fhir.org/ig/HL7/fhir-mCODE-ig/branches/master/qa.html</a>, etc.</p>\n<p>Maybe this is the way it's supposed to work? It's not causing problems in other IGs because they are only using US Core and it is causing problems with BFDR and the VR Common Profiles library, because the Common Profiles library has lots of Observation profiles and then BFDR checks all of them. (Causing issues with slicing on those multiple \"matching\" profiles).</p>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> - thoughts? Am I barking up a totally wrong tree here?</p>",
        "id": 258111140,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1634596354
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191918\">Sarah Gaunt</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Validation.20issue.20-.20profile.20in.20different.20IG/near/257643326\">said</a>:</p>\n<blockquote>\n<p>A weird thing too is that all the errors I am now getting about multiple matching slices were not there until I used -resetTx when running (and subsequently deleted the inputcache from the git directory). The errors were only surfaced when Lynn was trying to publish and was reporting errors that I wasn't getting in the CI build nor my local build.</p>\n</blockquote>\n<p>So I just did what you're talking about in this thread: <a href=\"#narrow/stream/179252-IG-creation/topic/CI.20not.20working\">https://chat.fhir.org/#narrow/stream/179252-IG-creation/topic/CI.20not.20working</a> - i.e. first run with -resetTx and second run without and in the first run I get the slicing errors about multiple matching slices but in the second run I don't get the errors (i.e. the one that uses the cache doesn't have the errors). So clearly this is part of the issue here.</p>\n<p>When the IG Publisher is fixed, which is the correct validation output, the one with  -resetTx or the one that is using the cache?</p>",
        "id": 258132814,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1634611421
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>, thoughts?</p>",
        "id": 258138822,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1634616874
    },
    {
        "content": "<p>So I think the -resetTx thing can be ignored. The cached terminology data was clearly hiding errors (not exactly sure why that would hide multiple slice matching errors, but...).</p>\n<p>The differences in validation when a profile is not defined in the IG and is referencing another IG, I think is a problem?</p>",
        "id": 258289704,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1634686460
    },
    {
        "content": "<p>so looking at this, <span class=\"user-mention\" data-user-id=\"191918\">@Sarah Gaunt</span> I don't see the problem. It might be because I'm running the pre-release publisher - I've made changes that matter in this regard. But: yes, the resource is validated against 16 profiles because you sliced by profile. so it has to be checked against the profiles in order to find out whether it conforms to them. I don't get slicing errors in any of the compositions (probably that's what I fixed)</p>",
        "id": 258411127,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634751633
    },
    {
        "content": "<p>Well, it is the Composition errors that I'm primarily stressing about and have been trying to debug for the past week - the multiple matching profiles errors. If you're not getting them with the new publisher, that's excellent! <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>\n<p>I guess I'm unsure how the validation works then. </p>\n<p>Are you saying that if a profile, say ObservationA, is included in an IG and then is used for slicing, in say, CompositionA, the validation/validation messages for ObservationA (not the validation/validation messages for CompositionA where ObservationA is included) is different to how ObservationA would have been validated if it weren't included in any slicing in CompositionA? </p>\n<p>i.e. if I remove ObservationA from slicing in CompositionA, there would only be the one validation message - exactly the same as the one validation message where it validates in the \"owning\" IG - the top validation for the profile would change from looking like the top example to the bottom example?</p>\n<p><a href=\"/user_uploads/10155/hHYKw7ive30Chfu4t2giYjCx/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/hHYKw7ive30Chfu4t2giYjCx/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/hHYKw7ive30Chfu4t2giYjCx/image.png\"></a></div>",
        "id": 258428481,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1634757988
    },
    {
        "content": "<p>yes. It's just telling you which profiles that observation was validated against, and if you slice by profile, then it will be validated against all the profiles in the slices in order to know which profiles it matches.</p>",
        "id": 258429449,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634758325
    },
    {
        "content": "<p>Ok thanks, makes sense I think. I guess it was a red herring due to the Composition multiple matching errors.</p>",
        "id": 258431056,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1634758835
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> not to hassle you or anything, but do you have an ETA on the new publisher?</p>",
        "id": 258435966,
        "sender_full_name": "Sarah Gaunt",
        "timestamp": 1634760651
    },
    {
        "content": "<p>sometime today, I think</p>",
        "id": 258436786,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634760989
    }
]