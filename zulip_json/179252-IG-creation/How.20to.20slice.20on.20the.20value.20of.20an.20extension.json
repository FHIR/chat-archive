[
    {
        "content": "<p>I have an extension that has a boolean value and I want to slice based on the true/false value.  I've tried a number of different ways of expressing the discriminator and keep getting the following error:</p>\n<div class=\"codehilite\"><pre><span></span><code>Slicing cannot be evaluated: Unable to resolve discriminator in definitions: extension(&#39;http://hl7.org/fhir/us/davinci-pas/StructureDefinition/extension-careTeamClaimScope&#39;).value.ofType(boolean) (@char 1)\n</code></pre></div>\n<p>The extension is on the Claim.careTeam element and the slice is on the careTeam element (if that is important to know).</p>\n<p>Can anyone provide the proper expression for this discriminator?  Bonus points if you can explain why:</p>\n<div class=\"codehilite\"><pre><span></span><code>extension(&#39;blah&#39;).value\n</code></pre></div>\n<p>doesn't just work (where blah is the actual url of the extension).</p>",
        "id": 251803774,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1630626979
    },
    {
        "content": "<p>My guess is that the ofType bit isn't handled.  Can the extension have a value other than boolean?  If not, you can leave that bit off</p>",
        "id": 251908577,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630687095
    },
    {
        "content": "<p>If that works, submit a Git issue against the validator for lack of support for ofType</p>",
        "id": 251908685,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630687165
    },
    {
        "content": "<p>I did try 'extension('url').value' and 'extension('url').valueBoolean.  They both gave the same error as above.</p>",
        "id": 251921825,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1630692928
    },
    {
        "content": "<p>valueBoolean wouldn't be expected to work.  You're doing a 'slice by value' and have a fixed value defined for your slices?</p>",
        "id": 251922776,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630693351
    },
    {
        "content": "<p>yes.  the extension is a valueBoolean and I have one slice for 'true' and one slice for 'false'.</p>",
        "id": 251924554,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1630694265
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>      {\n        &quot;id&quot;: &quot;Claim.careTeam&quot;,\n        &quot;path&quot;: &quot;Claim.careTeam&quot;,\n        &quot;slicing&quot;: {\n          &quot;discriminator&quot;: [\n            {\n              &quot;type&quot;: &quot;value&quot;,\n              &quot;path&quot;: &quot;extension(&#39;http://hl7.org/fhir/us/davinci-pas/StructureDefinition/extension-careTeamClaimScope&#39;).value&quot;\n            }\n          ],\n          &quot;rules&quot;: &quot;open&quot;,\n          &quot;description&quot;: &quot;Slice based on whether the care team member belongs to the overall claim or to an individual claim item.&quot;\n        },\n        &quot;mustSupport&quot;: true\n      },\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>      {\n        &quot;id&quot;: &quot;Claim.careTeam:OverallClaimMember&quot;,\n        &quot;path&quot;: &quot;Claim.careTeam&quot;,\n        &quot;sliceName&quot;: &quot;OverallClaimMember&quot;,\n        &quot;min&quot;: 0,\n        &quot;max&quot;: &quot;14&quot;\n      },\n      {\n        &quot;id&quot;: &quot;Claim.careTeam:OverallClaimMember.extension:careTeamClaimScope&quot;,\n        &quot;path&quot;: &quot;Claim.careTeam.extension&quot;,\n        &quot;sliceName&quot;: &quot;careTeamClaimScope&quot;\n      },\n      {\n        &quot;id&quot;: &quot;Claim.careTeam:OverallClaimMember.extension:careTeamClaimScope.valueBoolean&quot;,\n        &quot;path&quot;: &quot;Claim.careTeam.extension.valueBoolean&quot;,\n        &quot;min&quot;: 0,\n        &quot;max&quot;: &quot;1&quot;,\n        &quot;patternBoolean&quot;: true\n      },\n</code></pre></div>",
        "id": 251924703,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1630694327
    },
    {
        "content": "<p>The id should be \".value:valueBoolean\" rather than \".valueBoolean\".  Similarly, the path should be \".value\", not \".valueBoolean\"</p>",
        "id": 252021254,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630784130
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I've worked with the Sushi team and Chris thinks that the slicing is correct.  This might be a validator problem.  I've checked in the code: <a href=\"https://github.com/HL7/davinci-pas\">https://github.com/HL7/davinci-pas</a>. I'm unsure what to do to move this forward since I want to slice on the boolean value of an extension and the validator appears to not like that slicing discriminator.</p>",
        "id": 252306531,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1631022068
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> said:</p>\n<blockquote>\n<p>The id should be \".value:valueBoolean\" rather than \".valueBoolean\". Similarly, the path should be \".value\", not \".valueBoolean\"</p>\n</blockquote>\n<p>My understanding is that this shortcut syntax (<code>valueBoolean</code>) is allowed in the discriminator -- and we even see it used like this in some core FHIR profiles.  When the IG Publisher processes it, it correctly converts the shortcut paths/ids to their standard variants (id <code>value[x]:valueBoolean</code>, path <code>value[x]</code>) in the snapshot.  I have confirmed this myself.</p>",
        "id": 252314107,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1631024960
    },
    {
        "content": "<p>I know some tools support it.  I'm not clear that it's \"allowed\".  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>?</p>",
        "id": 252319356,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1631026852
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192166\">@Jean Duteau</span> looking at this, I can improve the error to be more informative, and so I have. Now, I get this error:</p>\n<p>Slicing cannot be evaluated: Unable to resolve discriminator extension('http://hl7.org/fhir/us/davinci-pas/StructureDefinition/extension-careTeamClaimScope').value found in the definitions because the extension <a href=\"http://hl7.org/fhir/us/davinci-pas/StructureDefinition/extension-careTeamClaimScope\">http://hl7.org/fhir/us/davinci-pas/StructureDefinition/extension-careTeamClaimScope</a> wasn't found in the profile <a href=\"http://hl7.org/fhir/us/davinci-pas/StructureDefinition/profile-claim-update\">http://hl7.org/fhir/us/davinci-pas/StructureDefinition/profile-claim-update</a></p>",
        "id": 253679928,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631845465
    },
    {
        "content": "<p>so profile-claim-update has profile-claim as its parent.  the careTeamClaimScope is found in profile-claim.  profile-claim-update just puts constraints on supportingInfo and item.</p>",
        "id": 253687234,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1631852269
    },
    {
        "content": "<p>when I look at the snapshot of profile-claim-update, the careTeamClaimScope extension is there:</p>\n<div class=\"codehilite\"><pre><span></span><code>      {\n        &quot;id&quot;: &quot;Claim.careTeam.extension:careTeamClaimScope&quot;,\n        &quot;path&quot;: &quot;Claim.careTeam.extension&quot;,\n        &quot;sliceName&quot;: &quot;careTeamClaimScope&quot;,\n        &quot;short&quot;: &quot;Extension&quot;,\n        &quot;definition&quot;: &quot;A flag that indicates whether the care team applies to the entire claim or a single item.&quot;,\n        &quot;min&quot;: 1,\n        &quot;max&quot;: &quot;1&quot;,\n        &quot;base&quot;: {\n          &quot;path&quot;: &quot;Element.extension&quot;,\n          &quot;min&quot;: 0,\n          &quot;max&quot;: &quot;*&quot;\n        },\n        &quot;type&quot;: [\n          {\n            &quot;code&quot;: &quot;Extension&quot;,\n            &quot;profile&quot;: [\n              &quot;http://hl7.org/fhir/us/davinci-pas/StructureDefinition/extension-careTeamClaimScope&quot;\n            ]\n          }\n        ],\n</code></pre></div>",
        "id": 253687447,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1631852441
    },
    {
        "content": "<p>well, not so fast. here's an even more improved error message once I got to that same point:</p>",
        "id": 253688022,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631852899
    },
    {
        "content": "<p>Slicing cannot be evaluated: Unable to resolve discriminator extension('http://hl7.org/fhir/us/davinci-pas/StructureDefinition/extension-careTeamClaimScope').value on Claim.careTeam:OverallClaimMember found in the definitions because the extension <a href=\"http://hl7.org/fhir/us/davinci-pas/StructureDefinition/extension-careTeamClaimScope\">http://hl7.org/fhir/us/davinci-pas/StructureDefinition/extension-careTeamClaimScope</a> wasn't found in the profile <a href=\"http://hl7.org/fhir/us/davinci-pas/StructureDefinition/profile-claim-update\">http://hl7.org/fhir/us/davinci-pas/StructureDefinition/profile-claim-update</a></p>",
        "id": 253688023,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631852899
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>      {\n        &quot;id&quot;: &quot;Claim.careTeam:OverallClaimMember&quot;,\n        &quot;extension&quot;: [\n          {\n            &quot;url&quot;: &quot;http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name&quot;,\n            &quot;valueString&quot;: &quot;CareTeam&quot;\n          }\n        ],\n        &quot;path&quot;: &quot;Claim.careTeam&quot;,\n        &quot;sliceName&quot;: &quot;OverallClaimMember&quot;,\n        &quot;short&quot;: &quot;Members of the care team&quot;,\n        &quot;definition&quot;: &quot;The members of the team who provided the products and services.&quot;,\n        &quot;requirements&quot;: &quot;Common to identify the responsible and supporting practitioners.&quot;,\n        &quot;min&quot;: 0,\n        &quot;max&quot;: &quot;14&quot;,\n        &quot;base&quot;: {\n          &quot;path&quot;: &quot;Claim.careTeam&quot;,\n          &quot;min&quot;: 0,\n          &quot;max&quot;: &quot;*&quot;\n        },\n        &quot;type&quot;: [\n          {\n            &quot;code&quot;: &quot;BackboneElement&quot;\n          }\n        ],\n</code></pre></div>",
        "id": 253688229,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1631853101
    },
    {
        "content": "<p>right. and then the extension inside it...</p>",
        "id": 253688508,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631853319
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n        <span class=\"nt\">\"id\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Claim.careTeam:OverallClaimMember.extension:careTeamClaimScope\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"path\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Claim.careTeam.extension\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"sliceName\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"careTeamClaimScope\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"short\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Extension\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"definition\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"An Extension\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"min\"</span> <span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"max\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"*\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"base\"</span> <span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"nt\">\"path\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Element.extension\"</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"min\"</span> <span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"max\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"*\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"nt\">\"type\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"nt\">\"code\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Extension\"</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">],</span>\n        <span class=\"nt\">\"constraint\"</span> <span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"nt\">\"key\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"ele-1\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"severity\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"error\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"human\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"All FHIR elements must have a @value or children\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"expression\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"hasValue() or (children().count() &gt; id.count())\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"xpath\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"@value|f:*|h:div\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"source\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"http://hl7.org/fhir/StructureDefinition/Element\"</span>\n          <span class=\"p\">},</span>\n          <span class=\"p\">{</span>\n            <span class=\"nt\">\"key\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"ext-1\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"severity\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"error\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"human\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Must have either extensions or value[x], not both\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"expression\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"extension.exists() != value.exists()\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"xpath\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"exists(f:extension)!=exists(f:*[starts-with(local-name(.), \\\"value\\\")])\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"source\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"http://hl7.org/fhir/StructureDefinition/Extension\"</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">],</span>\n        <span class=\"nt\">\"isModifier\"</span> <span class=\"p\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"isSummary\"</span> <span class=\"p\">:</span> <span class=\"kc\">false</span>\n      <span class=\"p\">},</span>\n</code></pre></div>",
        "id": 253688517,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631853329
    },
    {
        "content": "<p>no profile, so no match</p>",
        "id": 253688526,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631853342
    },
    {
        "content": "<p>so the problem is around how slicing works. I'm pretty what I'm about to say is on record, but I can't find it :-(</p>",
        "id": 253689207,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631853964
    },
    {
        "content": "<p>the base slice defines the constraints that apply to all the slices. The validator will test the rules in the base slice first, then match the slices, and then apply the rules in the slice</p>",
        "id": 253689248,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631854018
    },
    {
        "content": "<p>but the snapshot generator does not replicate the constraints in the slice into each of the slices. That would be multiple inheritance, and we don't do that</p>",
        "id": 253689274,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631854062
    },
    {
        "content": "<p>usually, it doesn't matter, since the validator tests both</p>",
        "id": 253689284,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631854078
    },
    {
        "content": "<p>but you've found a case where it does: you have to manually redeclare the extension constraint in the slice, since the discriminator refers to it</p>",
        "id": 253689357,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631854121
    },
    {
        "content": "<p>okay, i understand what that says, but I'm not sure how to accomplish it.</p>",
        "id": 253690145,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1631854776
    },
    {
        "content": "<p>profile the extension on the slice the same way you did it on the base</p>",
        "id": 253691750,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631855922
    },
    {
        "content": "<p>okay, had to do some FSH trickery, but I think I did that as I'm getting different errors now.  will look into it...</p>",
        "id": 253693071,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1631857104
    },
    {
        "content": "<p>okay, next question that is sort of related:<br>\nwith the discriminator as</p>\n<div class=\"codehilite\"><pre><span></span><code>extension(&#39;http://hl7.org/fhir/us/davinci-pas/StructureDefinition/extension-careTeamClaimScope&#39;).value\n</code></pre></div>\n<p>I get an error that \"...the discriminator XXX does not have fixed value, binding or existence assertions\"</p>\n<p>When I change it to be ...valueBoolean, I get a different error: \"Unable to resolve discriminator in definitions: valueBoolean\"</p>",
        "id": 253694126,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1631858084
    },
    {
        "content": "<p>well, commit that, and I'll have a look.</p>",
        "id": 253695353,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631859139
    },
    {
        "content": "<p>committed.  thank you.</p>",
        "id": 253741043,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1631885027
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> whenever you get a chance...</p>",
        "id": 253890339,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1631995292
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> if you can let me know what I'm doing wrong, I'd like to finish getting this IG ready for publication.  <a href=\"https://github.com/HL7/davinci-pas\">https://github.com/HL7/davinci-pas</a></p>",
        "id": 255126734,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1632779825
    },
    {
        "content": "<p>your expression is </p>\n<p><code>extension('http://hl7.org/fhir/us/davinci-pas/StructureDefinition/extension-careTeamClaimScope').valueBoolean</code></p>",
        "id": 255157745,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1632801500
    },
    {
        "content": "<p>see <a href=\"https://hl7.org/fhir/fhirpath.html#polymorphism\">https://hl7.org/fhir/fhirpath.html#polymorphism</a></p>",
        "id": 255157775,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1632801532
    },
    {
        "content": "<p>should be </p>\n<p><code>extension('http://hl7.org/fhir/us/davinci-pas/StructureDefinition/extension-careTeamClaimScope').value as Boolean</code></p>",
        "id": 255157812,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1632801582
    },
    {
        "content": "<p>okay, I had that at one time but changed it when I was getting the previous error.  running a build to check...</p>",
        "id": 255159174,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1632802720
    },
    {
        "content": "<p>that still gave me the same error:</p>\n<div class=\"codehilite\"><pre><span></span><code>Slicing cannot be evaluated: Could not match discriminator ([extension(&#39;http://hl7.org/fhir/us/davinci-pas/StructureDefinition/extension-careTeamClaimScope&#39;).value as Boolean]) for slice Claim.careTeam:OverallClaimMember in profile http://hl7.org/fhir/us/davinci-pas/StructureDefinition/profile-claim-update - the discriminator [extension(&#39;http://hl7.org/fhir/us/davinci-pas/StructureDefinition/extension-careTeamClaimScope&#39;).value as Boolean] does not have fixed value, binding or existence assertions\n</code></pre></div>",
        "id": 255159406,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1632802934
    },
    {
        "content": "<p>well, it's progress. Commit that and I'll have another look</p>",
        "id": 255159471,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1632803031
    },
    {
        "content": "<p>done</p>",
        "id": 255159887,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1632803426
    },
    {
        "content": "<p>so I don't think that the differential has changed in a meaningful way . The differential in profile <code>http://hl7.org/fhir/us/davinci-pas/StructureDefinition/profile-claim</code> says:</p>\n<ul>\n<li>Claim.careTeam sliced by the value of the extension <code>http://hl7.org/fhir/us/davinci-pas/StructureDefinition/extension-careTeamClaimScope</code></li>\n<li>Claim.careTeam.extension sliced by URL</li>\n<li>one care team claim scope extension which is extension <code>http://hl7.org/fhir/us/davinci-pas/StructureDefinition/extension-careTeamClaimScope</code></li>\n</ul>\n<p>Then it defines the first slice:</p>\n<ul>\n<li>Claim.careTeam:OverallClaimMember</li>\n<li>Claim.careTeam:OverallClaimMember.extension - 2..*</li>\n<li>Claim.careTeam:OverallClaimMember.extension:careTeamClaimScope - defines the named slice</li>\n<li>Claim.careTeam:OverallClaimMember.extension:careTeamClaimScope.valueBoolean - fixes the value to true</li>\n</ul>\n<p>But... see what I wrote above: </p>\n<blockquote>\n<p>the snapshot generator does not replicate the constraints in the slice into each of the slices</p>\n</blockquote>\n<p>so when it goes to process the first slice, nothing ever says that the extension careTeamClaimScope is actually the extension <code>http://hl7.org/fhir/us/davinci-pas/StructureDefinition/extension-careTeamClaimScope</code></p>",
        "id": 255172887,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1632813684
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>, thanks for the analysis of this.  I've done some further analysis and posted my findings <a href=\"#narrow/stream/215610-shorthand/topic/Help.20with.20slicing.20on.20an.20extension.20value/near/255461723\">here</a>.</p>\n<p>While I provided Jean a work-around, it seems that the right solution is for SUSHI to redeclare extensions in each slice.  Are there any other constraints or ElementDefinition fields that we also should redeclare (i.e. copy) from the base when people create slices of an element?</p>",
        "id": 257451464,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1634165598
    },
    {
        "content": "<p>I think pretty much everything</p>",
        "id": 257945310,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634501759
    },
    {
        "content": "<p>OK!  That makes it pretty easy then.  Thanks!</p>",
        "id": 258020453,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1634560207
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> -- we're working through the implications of what it means to redeclare \"pretty much everything\" from a slice base's differential to its individual slices.  Having done some initial implementation, we're seeing a few things we want to ask about:</p>\n<ul>\n<li>Does it make sense to redeclare the slice base's metadata like <code>short</code>, <code>definition</code>, <code>comment</code>, etc in each slice?</li>\n<li>If a choice type is restricted to one type, but a type slice is used to further constrain the element, should the type slice also have the <code>type</code> in its differential?  E.g.:<ul>\n<li>Observation.value[x] in the profile has <code>\"type\": [{ \"code\": \"Quantity\" }]</code></li>\n<li>If the profile also has an Observation.value[x]:valueQuantity element, should it also have <code>\"type\": [{ \"code\": \"Quantity\" }]</code> in its differential?</li>\n</ul>\n</li>\n<li>If a slice base has constraints on child elements (e.g., <code>Observation.component.code</code> has a contraint), then should the differential introduce <code>Observation.component:SliceA.code</code> just to redeclare that constraint?</li>\n</ul>",
        "id": 262366804,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1637609481
    },
    {
        "content": "<blockquote>\n<p>Does it make sense to redeclare the slice base's metadata like short, definition, comment, etc in each slice?</p>\n</blockquote>\n<p>mostly, I think. it's hard to answer that without more context </p>\n<blockquote>\n<p>If a choice type is restricted to one type, but a type slice is used to further constrain the element, should the type slice also have the type in its differential? E.g.:<br>\nObservation.value[x] in the profile has \"type\": [{ \"code\": \"Quantity\" }]<br>\nIf the profile also has an Observation.value[x]:valueQuantity element, should it also have \"type\": [{ \"code\": \"Quantity\" }] in its differential?</p>\n</blockquote>\n<p>I think so? Again, hard without context but this us about reprofiling?</p>\n<blockquote>\n<p>If a slice base has constraints on child elements (e.g., Observation.component.code has a contraint), then should the differential introduce Observation.component:SliceA.code just to redeclare that constraint?</p>\n</blockquote>\n<p>I think so? Again... hard to answer without context</p>",
        "id": 262966945,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1638161431
    },
    {
        "content": "<p>Thanks for the responses, <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>.  We've decided that for now we will address the immediate problem at hand -- which is that the validator needs extensions redeclared in slices in order to process discriminator paths that use the <code>extension()</code> function.  Since slices <em>conceptually</em> inherit constraints from the base slice, we think its less disruptive now if we only redundantly declare the inherited constraints in cases where we know they cause problems otherwise.  This will be in the next SUSHI release.</p>",
        "id": 263503980,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1638481136
    }
]