[
    {
        "content": "<p>Hello Everyone,</p>\n<p>How do we ensure backward compatibility of an IG?</p>\n<p>Considering that we have one FHIR Implementation Guide hosted with some resource profiles, and now I need to change a profile and provide backward compatibility for that profile also.</p>\n<p>Please guide me.</p>\n<p>Thank You!</p>",
        "id": 266682657,
        "sender_full_name": "Sayali Pophalkar",
        "timestamp": 1641214546
    },
    {
        "content": "<p>Well, unless your IG is based on normative resources, one of your issues is that the resources themselves might change in a non-backward compatible way.  That means that if you intend to move to new versions of FHIR, there's no way you can guarantee backward compatibility.  If we put that aside, you can certainly follow the backward compatibility principles documented in the core spec with respect to your design.  That said, FHIR design principles say that in the early stages of IG design, you should prepare your implementer community to expect breaking changes.  It's pretty common for the first pass of an IG to get some things wrong.  The purpose of a \"Standard for Trial Use\" is to try things out in the real world, see if any adjustments are necessary and, if so, make the needed changes.  If you lock yourself into backwards-compatibility mode to early, you remove your ability to fix things that are broken.  The savings created by not having to upgrade existing systems to deal with breaking change can be more than offset by the ongoing costs of poor design.  That doesn't mean you <em>can't</em> strive for backwards compatibility, it just means you should think about overall long-term costs before committing too strongly to it.</p>",
        "id": 266719736,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1641234164
    },
    {
        "content": "<p>Thank You <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> for the response. That helped! :)</p>",
        "id": 266768659,
        "sender_full_name": "Sayali Pophalkar",
        "timestamp": 1641271000
    }
]