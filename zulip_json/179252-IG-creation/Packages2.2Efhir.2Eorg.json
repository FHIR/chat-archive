[
    {
        "content": "<p>Someone has a script that is hammering <a href=\"http://packages2.fhir.org\">packages2.fhir.org</a>. I'm not sure what the purpose of this is, and it's running from multiple IP addresses. I'm going to start ignoring the request that the client is making; it's made the server unstable. Obviously it shouldn't, but I can't debug</p>",
        "id": 249697760,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629194218
    },
    {
        "content": "<p>although it's leaking threads. I can see that much...</p>",
        "id": 249697898,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629194325
    },
    {
        "content": "<p>unfortunately, it doesn't leak threads for me...</p>",
        "id": 249700052,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629195853
    },
    {
        "content": "<p>I'm going to ban the IP addresses from using the server at all</p>",
        "id": 249714223,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629205116
    },
    {
        "content": "<p>SUSHI uses <a href=\"http://packages2.fhir.org\">packages2.fhir.org</a>, but only for projects that declare R4B / R5 as their FHIR version -- and even then, only if it doesn't find the package in the FHIR cache first.  I don't think that CI servers (like the FHIR IG builder) maintain a FHIR cache, so SUSHI would hit <a href=\"http://packages2.fhir.org\">packages2.fhir.org</a> on each CI build of a R4B/R5-based IG.  But that shouldn't look like <em>hammering</em>.  Still, if anyone discovers that SUSHI is somehow involved, please let us know.</p>",
        "id": 249744234,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1629217986
    },
    {
        "content": "<p>Ahemmmmm ... If its from Denmark I might know the culprit ...</p>",
        "id": 249745640,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1629218645
    },
    {
        "content": "<p>In terms of 'hammering' ... Whats the approx amount here? <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 249745830,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1629218735
    },
    {
        "content": "<p>~10/sec, but when the server is down, the threads bank up, so once the server comes up, it's deluged by thousands</p>",
        "id": 249770318,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629230126
    },
    {
        "content": "<p>whatever it is is making the request <a href=\"http://packages2.fhir.org/packages/catalog?canonical=http://hl7.org/fhir/us/carin-bb\">http://packages2.fhir.org/packages/catalog?canonical=http://hl7.org/fhir/us/carin-bb</a></p>",
        "id": 249770433,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629230165
    },
    {
        "content": "<p>Oh, OK.  That's definitely <em>not</em> SUSHI then.  We don't do any queries on <code>catalog</code> -- and as I noted before, SUSHI is scoped to look <em>only</em> for R4B/R5 packages on packages2 anyway.  Phew.  Glad it's not me. ;-)</p>",
        "id": 249773268,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1629231431
    },
    {
        "content": "<p>well, I've 'solved' it for now by turning off non-SSL access to the server. But if whoever is running the script switches to SSL too, then the problem will come back.</p>",
        "id": 249777563,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629233760
    },
    {
        "content": "<p>I feel like there should be a better solution, but can't think of it</p>",
        "id": 249777618,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629233772
    },
    {
        "content": "<p>Having a blacklist is probably a good idea.  We're going to have others who hit our registries in production systems and don't cache properly and we need to protect ourselves.  Rate limiting is another possibility.</p>",
        "id": 249777755,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1629233877
    },
    {
        "content": "<p>it is rate limiting now, but that rate limits everyone.</p>",
        "id": 249777838,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629233898
    },
    {
        "content": "<p>I can't rate limit inside the server because the denial of service is to the server surface.</p>",
        "id": 249777887,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629233930
    },
    {
        "content": "<p>and windows firewall is utterly useless. :-(</p>",
        "id": 249777912,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629233949
    },
    {
        "content": "<p>This is running on Server, isn't it?  You can block IPs fairly easily.</p>",
        "id": 249777969,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1629233991
    },
    {
        "content": "<p>well, how? I tried, but windows gives me some crap about 'has to be a secure connection', which is irrelevant to me</p>",
        "id": 249778106,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629234024
    },
    {
        "content": "<p>\"you can specify user and computer authentication only when the action is set to \"Allow only secure connections.\"</p>",
        "id": 249778360,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629234136
    },
    {
        "content": "<p>we do not want windows authentication here. Stupid</p>",
        "id": 249778382,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629234149
    },
    {
        "content": "<p>or I can whitelist IPs.</p>",
        "id": 249778473,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629234207
    },
    {
        "content": "<p>But I can't figure how out to blacklist them</p>",
        "id": 249778488,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629234213
    },
    {
        "content": "<p>anyway <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> this affects you. If you're using <a href=\"http://packages2.fhir.org\">packages2.fhir.org</a>, you have to switch to https: instead of http: as of <em>now</em> (sorry, but the denial of service attack gives me no choice)</p>",
        "id": 249778662,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629234297
    },
    {
        "content": "<p>Thanks for the heads up, <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>.  I understand you're in a tight spot.  I do want to clarify though, it doesn't just affect <em>me</em> -- it currently affects every SUSHI user who has an R4B/R5 IG and uses the autobuild system (or does not have R4B/R5 in their FHIR cache).  So... we will see some failed IG builds until we push out a new SUSHI release w/ the fix.  We'll try to get one out quickly.</p>",
        "id": 249781990,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1629236039
    },
    {
        "content": "<p>yes right, but they are failing already</p>",
        "id": 249783282,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629236880
    },
    {
        "content": "<p>You can block them at the system level with the firewall.  You just need a custom rule in to deny access, I believe the step-by-step in <a href=\"https://docs.rackspace.com/support/how-to/block-an-ip-address-on-a-windows-server\">this article</a> should work.</p>",
        "id": 249783341,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1629236897
    },
    {
        "content": "<p>Ok ... that for sure aint me ... carin bb is not my thing</p>",
        "id": 249882048,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1629306946
    },
    {
        "content": "<p>OK, carin-bb is my thing and I am confused as to what is going on. carin-bb does use SUSHI, but does not use R4B or R5 and there has only been a couple of small changes to the IG in the last 1.5 months (back on August 3). I have no idea how carin-bb could be causing an issue and no clear way to diagnose. How can I tell if it is using packages2? How might I tell if something else is going on? Is there a way to tell where this is coming from or specifically the request that is causing the issue?</p>",
        "id": 250243539,
        "sender_full_name": "Corey Spears",
        "timestamp": 1629589411
    },
    {
        "content": "<p>It's not likely the IG-publication process.  It's someone who's implementing.</p>",
        "id": 250253698,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1629605978
    },
    {
        "content": "<p>someone doing something. my gut call: they picked a package at random</p>",
        "id": 250255199,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629608417
    }
]