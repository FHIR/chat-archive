[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"*\">@all</span> if you are producing an IG for publication this cycle, take note: in the next few hours I will release a new version of the IG publisher than includes a rather significant bug fix for the validator. The change is this:</p>\n<p>If you specified a fixed value in your profile, and it had a null for any element in the fixed value (in the profile), then the validator would ignore any provided value in any instances that were supposed to conform to the profile. <br>\nIt's not valid, if you have a fixed value, and it has a null, for the instance not to have null, but this wasn't being checked. </p>\n<p>If you are balloting this cycle, please rebuild your IG with the latest publisher, and hunt down and fix any new errors that arise.</p>",
        "id": 172009668,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564468555
    },
    {
        "content": "<blockquote>\n<p>If you specified a fixed value in your profile, and it had a null for any element in the fixed value (in the profile), then the validator would ignore any provided value in any instances that were supposed to conform to the profile. <br>\nIt's not valid, if you have a fixed value, and it has a null, for the instance not to have null, but this wasn't being checked.</p>\n</blockquote>\n<p>I don't know what this means,  can you provide an example?</p>",
        "id": 172055334,
        "sender_full_name": "Eric Haas",
        "timestamp": 1564505731
    },
    {
        "content": "<p>My understanding: If you provided a fixed value for a Coding that had just a code and a system and your instance was missing a system, it would match for the fixed value anyhow.</p>",
        "id": 172058526,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564507977
    },
    {
        "content": "<p>still not clear.  you have mins for code and system too so the validation is based on that as well.</p>",
        "id": 172060677,
        "sender_full_name": "Eric Haas",
        "timestamp": 1564509260
    },
    {
        "content": "<p>no. if you provided a fix value for Coding that did not include a version , then the validator would completely ignore the version in the instance - it could be present or not</p>",
        "id": 172068584,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564514921
    },
    {
        "content": "<p>when you say \" a fix value for Coding \"  what do you mean exactly?  because I think of ...</p>\n<p>Coding <br>\nCoding.value, fixed value = 'foo' , min =1, max =1 <br>\nCoding.system, fixed value = '<a href=\"http://foo.bar.com\" target=\"_blank\" title=\"http://foo.bar.com\">http://foo.bar.com</a>', min =1, max =1</p>\n<p>so here Coding.version could be present or not and still validate correctly.</p>",
        "id": 172070140,
        "sender_full_name": "Eric Haas",
        "timestamp": 1564516178
    },
    {
        "content": "<p>no. if you specify a fixed value for a coding of </p>\n<p><code>{ \"system\" : \"http://foo.bar.com\", \"code\" : \"foo\" }</code></p>",
        "id": 172070377,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564516356
    },
    {
        "content": "<p>I did not know that was even allowed.  :-)</p>",
        "id": 172073137,
        "sender_full_name": "Eric Haas",
        "timestamp": 1564518231
    },
    {
        "content": "<p>no and it would be better to use it - say in US core. I had not noticed</p>",
        "id": 172073288,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564518353
    },
    {
        "content": "<p>though there are 3 CodeableConcept patterns in US core</p>",
        "id": 172073351,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564518380
    },
    {
        "content": "<p>In general, fixed values for complex structures is not a great idea - it means that you're non-conformant if you send a display or primary or extension or anything 'extra'.  And treating extra stuff as an error essentially means imposing a site-specific interface on all clients, which is not good interoperability practice.</p>",
        "id": 172076749,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564521000
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  with the new publisher, I'm getting  \"The FHIRPath expression 'Observation.value[x].code' is not valid\" Error but not able to trace down which Observation is causing this error. Is there a way to trace the respective Observation.. For your reference, here is the build log: <a href=\"http://build.fhir.org/ig/hl7au/au-fhir-childhealth/branches/master/build.log\" target=\"_blank\" title=\"http://build.fhir.org/ig/hl7au/au-fhir-childhealth/branches/master/build.log\">http://build.fhir.org/ig/hl7au/au-fhir-childhealth/branches/master/build.log</a></p>",
        "id": 172088360,
        "sender_full_name": "Shovan Roy",
        "timestamp": 1564532432
    },
    {
        "content": "<p>fixed next release (sometime today)</p>",
        "id": 172093049,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564538673
    }
]