[
    {
        "content": "<p>Hi everyone,<br>\nin my IG I have a StructureDefinition that adds an Extension to the ResearchStudy resource, but the auto-generated narrative for the examples does not show this extension.  <br>\nI have already created a liquid template for the extension, but if I use that template for the ResearchStudy then the narrative only shows the extension.<br>\nIs there a way to just add the rules for the extension to the default template or do I have to copy the complete default template into my template?<br>\nThanks for your attention,<br>\nNiklas</p>",
        "id": 208819097,
        "sender_full_name": "Niklas Haldorn",
        "timestamp": 1599051597
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> Could we set up some sort of inheritance of liquid templates?  (Obviously we'd need to convert all the existing narrative code to be liquid and I don't know how feasible that is either - <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>)</p>",
        "id": 208821756,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1599052697
    },
    {
        "content": "<p>we can refactor the base templates as layouts and then template get inserted as content. but that requires the templating to use front matter to indicate the layout.  <a href=\"https://jekyllrb.com/docs/layouts/\">https://jekyllrb.com/docs/layouts/</a></p>\n<p>otherwise use conditional includes</p>\n<div class=\"codehilite\"><pre><span></span><code>{% if foo %} {%  include  bar.md %} {% endif  %}\n</code></pre></div>",
        "id": 208826065,
        "sender_full_name": "Eric Haas",
        "timestamp": 1599054566
    },
    {
        "content": "<p>This isn't about the rendering templates, this is about the liquid templates the publisher uses to generate narratives.</p>",
        "id": 208826592,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1599054796
    },
    {
        "content": "<p>ok let me think about this ... I only created one of those.</p>",
        "id": 208836516,
        "sender_full_name": "Eric Haas",
        "timestamp": 1599058593
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"312153\">@Niklas Haldorn</span>  is modifying the liquid template something that mere mortals might attempt?   Can you point me to the example of what you did?</p>\n<p>I've taken a different approach, just doing a concise pseudo-FSH dump of the examples in the notes section with no customization for the profile.  <a href=\"https://build.fhir.org/ig/HL7/davinci-pdex-plan-net/InsurancePlan-AcmeQHPGold.html#notes\">https://build.fhir.org/ig/HL7/davinci-pdex-plan-net/InsurancePlan-AcmeQHPGold.html#notes</a></p>",
        "id": 208870123,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1599072673
    },
    {
        "content": "<p>no liquid doesn't have any concept of inheritance.</p>",
        "id": 208880090,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599077181
    },
    {
        "content": "<p>So no way to define one liquid narrative that leverages a different liquid file?</p>",
        "id": 208883152,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1599078631
    },
    {
        "content": "<p>I'm not sure what that means. you can always provide your own liquid template, either in a template or an implementation guide</p>",
        "id": 208883547,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599078816
    },
    {
        "content": "<p>back to <span class=\"user-mention\" data-user-id=\"312153\">@Niklas Haldorn</span>'s question: is this something I can reproduce? It actually sounds like something I've overlooked to me</p>",
        "id": 208883660,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599078861
    },
    {
        "content": "<p>Sure, you can provide your own - but if you want to use the 'standard' one (including taking advantage of future enhancements), but insert some stuff, it'd be nice if there was a way.  Could we possibly embed special comments that a subsequent liquid processor could use in consuming the results of a liquid first pass to add extra stuff at certain key locations?</p>",
        "id": 208883933,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1599078974
    },
    {
        "content": "<p>some things are just a bad idea</p>",
        "id": 208886226,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599080050
    },
    {
        "content": "<p>So your preference is fork from what exists and override and monitor the base for your fork to see if you want to incorporate future changes?</p>",
        "id": 208886841,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1599080310
    },
    {
        "content": "<p>it's not really my preference. that's like asking me if gravity is my preference</p>",
        "id": 208891178,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599082674
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"215604\">@Saul Kravitz</span>  i found a documentation about how to use liquid in the IG Stream: <a href=\"#narrow/stream/179252-IG-creation/topic/Using.20liquid\">https://chat.fhir.org/#narrow/stream/179252-IG-creation/topic/Using.20liquid</a>. I dont know how to modify the default templates, but if you just want to replace the default template with your custom one, you can follow the steps in the documentation</p>",
        "id": 208951333,
        "sender_full_name": "Niklas Haldorn",
        "timestamp": 1599131723
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  this is my ResearchStudyExample: <a href=\"http://build.fhir.org/ig/Daelam/rdd-example/branches/master/ResearchStudy-exampleStudy_extern.html\">http://build.fhir.org/ig/Daelam/rdd-example/branches/master/ResearchStudy-exampleStudy_extern.html</a>. The narrative does not display the DataSetDefinition, but the extensions content is important to understand the example. I have written a template for the extension(<a href=\"https://github.com/Daelam/rdd-example/blob/master/input/liquid/DataSetDefinition.liquid\">https://github.com/Daelam/rdd-example/blob/master/input/liquid/DataSetDefinition.liquid</a>), but I am not sure how to include this, because with the current name it gets ignored and if I rename it to ResearchStudy.liquid it overrides the default template and the narrative only show the extension.</p>",
        "id": 208951971,
        "sender_full_name": "Niklas Haldorn",
        "timestamp": 1599132125
    },
    {
        "content": "<p>well, I fixed the various bugs that were stopping extensions being rendered.I did note that you extension has an odd structure. Here's what you have:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"s2\">&quot;extension&quot;</span><span class=\"err\">:</span> <span class=\"p\">[</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://interopehrate.eu/fhir/StructureDefinition/DataSetDefinition&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;extension&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span> <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;DataRequirement&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;valueDataRequirement&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>  <span class=\"err\">...</span>  <span class=\"p\">}</span>\n    <span class=\"p\">},</span> <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;DataRequirement&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;valueDataRequirement&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"err\">...</span>  <span class=\"p\">}</span>\n    <span class=\"p\">},</span> <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;DataRequirement&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;valueDataRequirement&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"err\">...</span>  <span class=\"p\">}</span>\n    <span class=\"p\">},</span> <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;DataRequirement&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;valueDataRequirement&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"err\">...</span> <span class=\"p\">}</span>\n<span class=\"p\">}</span> <span class=\"p\">]</span>\n</code></pre></div>",
        "id": 209054667,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599194852
    },
    {
        "content": "<p>Just do this:</p>",
        "id": 209054669,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599194864
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code><span class=\"s2\">&quot;extension&quot;</span><span class=\"err\">:</span> <span class=\"p\">[</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://interopehrate.eu/fhir/StructureDefinition/DataSetDefinition&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;valueDataRequirement&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>  <span class=\"err\">...</span>  <span class=\"p\">}</span>\n  <span class=\"p\">},</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://interopehrate.eu/fhir/StructureDefinition/DataSetDefinition&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;valueDataRequirement&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"err\">...</span>  <span class=\"p\">}</span>\n  <span class=\"p\">},</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://interopehrate.eu/fhir/StructureDefinition/DataSetDefinition&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;valueDataRequirement&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"err\">...</span>  <span class=\"p\">}</span>\n  <span class=\"p\">},</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://interopehrate.eu/fhir/StructureDefinition/DataSetDefinition&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;valueDataRequirement&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"err\">...</span> <span class=\"p\">}</span>\n <span class=\"p\">}]</span>\n</code></pre></div>",
        "id": 209054723,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599194934
    },
    {
        "content": "<p>as for liquid templates... if you still want to do the liquid template thing, you'll have to handle the whole resource</p>",
        "id": 209054737,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599194980
    }
]