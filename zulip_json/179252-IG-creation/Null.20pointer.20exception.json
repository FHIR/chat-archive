[
    {
        "content": "<p>THe IG Publisher is throwing a null pointer exception but I cannot tell from the output where this is happening. The stack trace is as follows:</p>\n<div class=\"codehilite\"><pre><span></span>     [java] java.lang.NullPointerException\n     [java]     at org.hl7.fhir.igtools.publisher.IGKnowledgeProvider.getProperty(IGKnowledgeProvider.java:186)\n     [java]     at org.hl7.fhir.igtools.publisher.IGKnowledgeProvider.getLinkFor(IGKnowledgeProvider.java:471)\n     [java]     at org.hl7.fhir.igtools.publisher.Publisher.load(Publisher.java:1804)\n     [java]     at org.hl7.fhir.igtools.publisher.Publisher.createIg(Publisher.java:582)\n     [java]     at org.hl7.fhir.igtools.publisher.Publisher.execute(Publisher.java:526)\n     [java]     at org.hl7.fhir.igtools.publisher.Publisher.main(Publisher.java:4925)\n     [java] Exception in thread &quot;main&quot; java.lang.NullPointerException\n     [java]     at org.hl7.fhir.igtools.publisher.Publisher.main(Publisher.java:4935)\n</pre></div>\n\n\n<p>I did add a new codesystem and two value sets to handle Device Identifiers. Before the addition there was no problem building. However, I cannot see what is wrong with what I have done. THe new system and values sets are added to the guide and they follow other coding systems/valuesets I have done.</p>\n<p>Is it because I am extending a coding system for the Identifier.type? Do I need to do something special when extending an existing coding system (I needed to add Bluetooth Address, USB PID.VID, ZIGBEE MAC, SystemId, etc identifiers for a device that were not present in the current list.</p>",
        "id": 154020717,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1543159344
    },
    {
        "content": "<p>You can't extend a code system - ever.  You can define codes in a new code system and define a value set that draws from both an original code systema nd a new code system.  In this case, are these new identifier types or identifier systems?  It seems that at least some of them should be systems...</p>",
        "id": 154020723,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1543164610
    },
    {
        "content": "<blockquote>\n<p>You can't extend a code system - ever.  You can define codes in a new code system and define a value set that draws from both an original code systema nd a new code system.  In this case, are these new identifier types or identifier systems?  It seems that at least some of them should be systems...</p>\n</blockquote>\n<p>I didn't think so and I did not extend the system. I defined a new codesystem containing the identifiers and two values sets, one for the system id and the other for the transport addresses.</p>",
        "id": 154020727,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1543173920
    },
    {
        "content": "<p>Why are you defining types for these instead of systems?</p>",
        "id": 154020729,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1543175338
    },
    {
        "content": "<blockquote>\n<p>Why are you defining types for these instead of systems?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  Not quite sure of what you are asking. I am not defining types but just a set of codes, like I do for the ASN1 and COntinua PAN and HFS. That is because the already defined IdentifierTypes code system does not include Bluetooth Address or System Ids as a possible identifier type. It is actually customer demand that is driving the inclusion of the transport address in the Device resource.<br>\nThe new code system has these values</p>\n<div class=\"codehilite\"><pre><span></span>  &lt;concept&gt;\n    &lt;code value=&quot;SYSID&quot;/&gt;\n    &lt;display value=&quot;IEEE 11073 System Identifier&quot;/&gt;\n    &lt;definition value=&quot;This code indicates that the identifier is the IEEE 11073 SystemId from the equivalent of the System-Id attribute&quot;/&gt;\n  &lt;/concept&gt;\n  &lt;concept&gt;\n    &lt;code value=&quot;BTMAC&quot;/&gt;\n    &lt;display value=&quot;Bluetooth MAC address&quot;/&gt;\n    &lt;definition value=&quot;This code indicates that the identifier is the Bluetooth MAC address, either classic or low energy&quot;/&gt;\n  &lt;/concept&gt;\n  &lt;concept&gt;\n    &lt;code value=&quot;USB&quot;/&gt;\n    &lt;display value=&quot;USB PID and VID designators&quot;/&gt;\n    &lt;definition value=&quot;This code indicates that the identifier is the USB Pid and Vid values&quot;/&gt;\n  &lt;/concept&gt;\n  &lt;concept&gt;\n    &lt;code value=&quot;ZIGBEE&quot;/&gt;\n    &lt;display value=&quot;ZigBee MAC address&quot;/&gt;\n    &lt;definition value=&quot;This code indicates that the identifier is the ZigBee MAC address&quot;/&gt;\n  &lt;/concept&gt;\n</pre></div>\n\n\n<p>And the two value sets group a subset of the above codes like this</p>\n<div class=\"codehilite\"><pre><span></span>  &lt;compose&gt;\n    &lt;include&gt;\n      &lt;system value=&quot;http://hl7.org/fhir/uv/phd/CodeSystem/ContinuaDeviceIdentifiers&quot;/&gt;\n      &lt;concept&gt;\n        &lt;code value=&quot;BTMAC&quot;/&gt;\n      &lt;/concept&gt;\n      &lt;concept&gt;\n        &lt;code value=&quot;USB&quot;/&gt;\n      &lt;/concept&gt;\n      &lt;concept&gt;\n        &lt;code value=&quot;ZIGBEE&quot;/&gt;\n      &lt;/concept&gt;\n    &lt;/include&gt;\n  &lt;/compose&gt;\n</pre></div>",
        "id": 154020731,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1543176620
    },
    {
        "content": "<p>What is the system for those identifiers?  I.e. What's the namespace in which they're globally unique?  If the identifier type has a unique system, there's no need to specify a type.</p>",
        "id": 154020735,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1543182691
    },
    {
        "content": "<blockquote>\n<p>What is the system for those identifiers?  I.e. What's the namespace in which they're globally unique?  If the identifier type has a unique system, there's no need to specify a type.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  My identifiers (in an actual Device resource)  look as follows:</p>\n<div class=\"codehilite\"><pre><span></span>    &quot;identifier&quot;: [\n        {\n            &quot;type&quot;: {\n                &quot;coding&quot;: [\n                    {\n                        &quot;system&quot;: &quot;http://hl7.org/fhir/uv/phd/CodeSystem/ContinuaDeviceIdentifiers&quot;,\n                        &quot;code&quot;: &quot;SYSID&quot;  // Indicates that this identifier is the IEEE 11073 System-Id\n                    }\n                ]\n            },\n            &quot;system&quot;: &quot;urn:oid:1.2.840.10004.1.1.1.0.0.1.0.0.1.2680&quot;,\n            &quot;value&quot;: &quot;74-E8-FF-FE-FF-05-1C-00&quot;\n        },\n        {\n            &quot;type&quot;: {\n                &quot;coding&quot;: [\n                    {\n                        &quot;system&quot;: &quot;http://hl7.org/fhir/uv/phd/CodeSystem/ContinuaDeviceIdentifiers&quot;,\n                        &quot;code&quot;: &quot;BTMAC&quot; // Indicates that this identifier is the Bluetooth Address\n                    }\n                ]\n            },\n            &quot;system&quot;: &quot;urn:oid:1.2.840.10004.1.1.1.0.0.1.0.0.1.2680&quot;,\n            &quot;value&quot;: &quot;00-1C-05-FF-E8-74&quot;\n        }\n    ],\n</pre></div>\n\n\n<p>The identifier.type  (which is a CodeableConcept) is using this new code system. Just like I did for the Observation.component, I slice on value and the path is the type element. I then use the value set for the binding in the two cases. There is really no difference between this and the handling of the Observation.components.</p>\n<p>Note that the identifier.system is the same for both types of identifiers, thus the need for the identifier.type element.</p>",
        "id": 154020736,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1543183043
    },
    {
        "content": "<p>What is the 1.2.840.10004 namespace?</p>",
        "id": 154020754,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1543204271
    },
    {
        "content": "<p>ISO/IEEE 11073 \"Health informatics -- Point-of-care medical (or, Personal health) device communication\"</p>",
        "id": 154020757,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1543205385
    },
    {
        "content": "<p><a href=\"http://oid-info.com/cgi-bin/display?oid=1.2.840.10004&amp;action=display\" target=\"_blank\" title=\"http://oid-info.com/cgi-bin/display?oid=1.2.840.10004&amp;action=display\">http://oid-info.com/cgi-bin/display?oid=1.2.840.10004&amp;action=display</a></p>",
        "id": 154020758,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1543205404
    },
    {
        "content": "<p>The description doesn't really sound like an identifier namespace.  Who manages it?  How is it ensured that the identifiers within it are globally unique?</p>",
        "id": 154020765,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1543210409
    },
    {
        "content": "<blockquote>\n<p>What is the 1.2.840.10004 namespace?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  IEEE. Both PoCD and PHD have been using it for quite a while and it has not been causing an issue with the IG publisher. The new part of the identifier is the addition of the 'type' element. That has not been in PHD or PoCD. PoCD has no need for the transport address.</p>",
        "id": 154020791,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1543225030
    },
    {
        "content": "<p>OID 1.2.840.10004.1.1.1.0.0.1.0.0.1.2680 is defined in the HL7 OID Registry (<a href=\"http://www.hl7.org/OID/\" target=\"_blank\" title=\"http://www.hl7.org/OID/\">http://www.hl7.org/OID/</a>). It's for EUI-64, so I think it doesn't apply for EUI-48. According to <a href=\"http://build.fhir.org/terminologies-systems.html\" target=\"_blank\" title=\"http://build.fhir.org/terminologies-systems.html\">this</a> page using HL7 OID is the preferred choice if no FHIR system identifier is defined. <br>\nSpecific system identifiers for EUI-64 and EUI-48 have been proposed in <a href=\"#narrow/stream/4-implementers/subject/Multiple.20identifiers\" title=\"#narrow/stream/4-implementers/subject/Multiple.20identifiers\">this</a> discussion, but didn't find their way into the FHIR specs.</p>",
        "id": 154020797,
        "sender_full_name": "Stefan Karl",
        "timestamp": 1543226374
    },
    {
        "content": "<blockquote>\n<p>OID 1.2.840.10004.1.1.1.0.0.1.0.0.1.2680 is defined in the HL7 OID Registry (<a href=\"http://www.hl7.org/OID/\" target=\"_blank\" title=\"http://www.hl7.org/OID/\">http://www.hl7.org/OID/</a>). It's for EUI-64, so I think it doesn't apply for EUI-48. According to <a href=\"http://build.fhir.org/terminologies-systems.html\" target=\"_blank\" title=\"http://build.fhir.org/terminologies-systems.html\">this</a> page using HL7 OID is the preferred choice if no FHIR system identifier is defined. <br>\nSpecific system identifiers for EUI-64 and EUI-48 have been proposed in <a href=\"#narrow/stream/4-implementers/subject/Multiple.20identifiers\" title=\"#narrow/stream/4-implementers/subject/Multiple.20identifiers\">this</a> discussion, but didn't find their way into the FHIR specs.</p>\n</blockquote>\n<p>I can't find an oid for EUI-48 so I am dropping the system value altogether and relying on the type.coding.code to identify the kind of transport address</p>\n<p>I found the problem. An extra comma in a hand-edited JSON example. It would help if the tool did indicate which file caused the exception. Teaches me a lesson though. If you hand-edit these files, use a syntax checker even if it was one line!</p>",
        "id": 154020813,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1543231684
    },
    {
        "content": "<p>Yes, you can make your own definition for Identifier.type. But it would greatly improve interoperability if everyone who is encoding EUI-64 or EUI-48 does it the same way. <br>\n<span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> can we add the proposed \"<a href=\"http://hl7.org/fhir/sid/eui-64\" target=\"_blank\" title=\"http://hl7.org/fhir/sid/eui-64\">http://hl7.org/fhir/sid/eui-64</a>\" and \"<a href=\"http://hl7.org/fhir/sid/eui-48\" target=\"_blank\" title=\"http://hl7.org/fhir/sid/eui-48\">http://hl7.org/fhir/sid/eui-48</a>\" system identifiers to the FHIR specs?</p>",
        "id": 154020855,
        "sender_full_name": "Stefan Karl",
        "timestamp": 1543242494
    },
    {
        "content": "<blockquote>\n<p>Yes, you can make your own definition for Identifier.type. But it would greatly improve interoperability if everyone who is encoding EUI-64 or EUI-48 does it the same way. <br>\n<span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> can we add the proposed \"<a href=\"http://hl7.org/fhir/sid/eui-64\" target=\"_blank\" title=\"http://hl7.org/fhir/sid/eui-64\">http://hl7.org/fhir/sid/eui-64</a>\" and \"<a href=\"http://hl7.org/fhir/sid/eui-48\" target=\"_blank\" title=\"http://hl7.org/fhir/sid/eui-48\">http://hl7.org/fhir/sid/eui-48</a>\" system identifiers to the FHIR specs?</p>\n</blockquote>\n<p>There are other transports as well in PHD: ZigBee, USB, and NFC. In the future there could be more.</p>",
        "id": 154020861,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1543244024
    },
    {
        "content": "<p>Each transport is presumably a distinct namespace and should have a distinct system - the combination of system + value must be globally unique.  Identifier type is ignored when comparing identifiers to see if they match.</p>",
        "id": 154020864,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1543244515
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  Would be nice ... and if they do it would be nice to find out what they are!</p>",
        "id": 154020866,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1543244627
    },
    {
        "content": "<p>It's possible they haven't been defined yet.  But it's not a \"would be nice\" situation.  If the values have different namespaces, they <em>must</em> have different systems.</p>",
        "id": 154020868,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1543244949
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  What would it take to define these systems?<br>\n \"<a href=\"http://hl7.org/fhir/sid/eui-64\" target=\"_blank\" title=\"http://hl7.org/fhir/sid/eui-64\">http://hl7.org/fhir/sid/eui-64</a>\" for system id or the OID<br>\n \"<a href=\"http://hl7.org/fhir/sid/eui-48\" target=\"_blank\" title=\"http://hl7.org/fhir/sid/eui-48\">http://hl7.org/fhir/sid/eui-48</a>\" for Bluetooth mac<br>\n? for Ethernet MAC (48-bit value but I do not know if it is an EUI)<br>\n? for USB<br>\n? for ZigBee (64-bit value but I do not know if it is an EUI)</p>",
        "id": 154020882,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1543249927
    },
    {
        "content": "<p>Change requests to the attention of the vocab work group</p>",
        "id": 154020883,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1543250161
    },
    {
        "content": "<blockquote>\n<p>Change requests to the attention of the vocab work group</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  seems tough to get done in time for ballot<br>\n<span class=\"user-mention\" data-user-id=\"192966\">@Stefan Karl</span>  Got any good ideas here? <br>\nfor the system id we already have urn:oid:1.2.840.10004.1.1.1.0.0.1.0.0.1.2680<br>\nFor the Bluetooth Address which is an EUI-48 ?<br>\nFor the Ethernet MAC address which is an EUI-48<br>\nFor the ZigBee address which is 64 bits?<br>\nFor the USB designator which is the VID and PID?<br>\nFor NFC which I know nothing about but is a PHD transport?</p>",
        "id": 154020888,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1543251629
    },
    {
        "content": "<p>For EUI-64 and EUI-48 there is a good guidance document <a href=\"https://standards.ieee.org/content/dam/ieee-standards/standards/web/documents/tutorials/eui.pdf\" target=\"_blank\" title=\"https://standards.ieee.org/content/dam/ieee-standards/standards/web/documents/tutorials/eui.pdf\">here</a>. 48-bit MAC addresses are also considered EUI-48.</p>",
        "id": 154020892,
        "sender_full_name": "Stefan Karl",
        "timestamp": 1543252053
    },
    {
        "content": "<blockquote>\n<p>For EUI-64 and EUI-48 there is a good guidance document <a href=\"https://standards.ieee.org/content/dam/ieee-standards/standards/web/documents/tutorials/eui.pdf\" target=\"_blank\" title=\"https://standards.ieee.org/content/dam/ieee-standards/standards/web/documents/tutorials/eui.pdf\">here</a>. 48-bit MAC addresses are also considered EUI-48.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"192966\">@Stefan Karl</span>  How does one know that one is a Bluetooth address and the other is an Ethernet MAC address? My Android has both. There needs to be some way to distinguish between these different types of addresses which are of the same 'type'. Customers have 'demanded' the inclusion of these addresses as they are often on the device itself. But you need to know what 48-bit number you are looking at, or in the case of ZigBee, 64-bit.</p>",
        "id": 154020894,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1543252410
    },
    {
        "content": "<p>In the absence of all else, and the apparent NEED to use only system and value in the identifier to discriminate (the type does NOT work so you cant invent codes to solve the problem) how about these for the transport addresses (placeholders until something real comes along:<br>\n\"<a href=\"http://hl7.org/fhir/sid/eui-64/ZigBee\" target=\"_blank\" title=\"http://hl7.org/fhir/sid/eui-64/ZigBee\">http://hl7.org/fhir/sid/eui-64/ZigBee</a>\"<br>\n\"<a href=\"http://hl7.org/fhir/sid/eui-48/BTMAC\" target=\"_blank\" title=\"http://hl7.org/fhir/sid/eui-48/BTMAC\">http://hl7.org/fhir/sid/eui-48/BTMAC</a>\"<br>\n\"<a href=\"http://hl7.org/fhir/sid/eui-48/ETHMAC\" target=\"_blank\" title=\"http://hl7.org/fhir/sid/eui-48/ETHMAC\">http://hl7.org/fhir/sid/eui-48/ETHMAC</a>\"<br>\n\"<a href=\"http://hl7.org/fhir/sid/USB\" target=\"_blank\" title=\"http://hl7.org/fhir/sid/USB\">http://hl7.org/fhir/sid/USB</a>\"</p>",
        "id": 154020921,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1543265357
    },
    {
        "content": "<p>If eui-48 is, itself a unique namespace, we don't actually need BTMAC and ETHMAC.  I.e. If you have an arbitrary value and you know it's an EUI-48, and you match with another EUI-48, does that tell you for certain it's the same instance?</p>",
        "id": 154020934,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1543267758
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  I'm looking for a way for a reader to be able to tell that one of the EUI-48's is a Bluetooth Address and the other is an Ethernet MAC address. A device can have both (for example an Android)<br>\nNull pointer exception</p>",
        "id": 154020935,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1543267877
    },
    {
        "content": "<p>I understand.  The question is what the right division is between \"type\" and \"system\".  The system defines the namespace that ensures global uniqueness - and that's all it does.  We need to ensure that systems are defined at the level of what ensures that uniqueness.  Is EUI-48 a single namespace across which all identifiers are unique?  I.e. there's no possibility that the Bluetooth address of one device might end up being the MAC address of a different device?</p>",
        "id": 154020938,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1543268620
    },
    {
        "content": "<blockquote>\n<p>I understand.  The question is what the right division is between \"type\" and \"system\".  The system defines the namespace that ensures global uniqueness - and that's all it does.  We need to ensure that systems are defined at the level of what ensures that uniqueness.  Is EUI-48 a single namespace across which all identifiers are unique?  I.e. there's no possibility that the Bluetooth address of one device might end up being the MAC address of a different device?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> That is a good question. I do not know. But from what I have read, standards (like Bluetooth) only require that the Bluetooth address be unique, and of course this is in the context of Bluetooth transports.  Given that the physical mechanisms are different, a Bluetooth address that happens to be the same as an Ethernet MAC address is not going to cause a clash. So it does not seem like there is a reason for them to be unique across both transport platforms. That being said I have never seen the two be the same. However, it is often the case that a device that has both Ethernet and Bluetooth get the chips from separate manufactures ensuring uniqueness (the OUI).</p>\n<p>Nevertheless, there is still no way to tell which of the two EUI-48s are Bluetooth or Ethernet MACs if all you have is an EUI-48 system value.</p>",
        "id": 154020940,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1543268922
    },
    {
        "content": "<p>The question is whether the EUI-48 mechanism prevents collisions because all identifiers are from the same namespace.  If the answer is yes, then there should only be one system id.</p>",
        "id": 154020942,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1543269538
    },
    {
        "content": "<blockquote>\n<p>The question is whether the EUI-48 mechanism prevents collisions because all identifiers are from the same namespace.  If the answer is yes, then there should only be one system id.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <br>\nSo then I see something like this:</p>\n<div class=\"codehilite\"><pre><span></span>    &quot;identifier&quot;: [\n        {\n            &quot;system&quot;: &quot;http://hl7.org/fhir/sid/eui-48&quot;,\n            &quot;value&quot;: &quot;74-E8-FF-FE-FF-05&quot;\n        },\n        {\n            &quot;system&quot;: &quot;http://hl7.org/fhir/sid/eui-48&quot;,\n            &quot;value&quot;: &quot;00-1C-05-FF-E8-74&quot;\n        }\n    ],\n</pre></div>\n\n\n<p>Which is the Bluetooth address and which is the Ethernet MAC address? I need some more information. So do I need to keep my Code System for the 'type' if I want to let the downstream readers know?</p>\n<p>(slicing on fixed system value does work).</p>",
        "id": 154020944,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1543269864
    },
    {
        "content": "<p><em>IF</em> they have the same namespace, then yes you'll need to slice by both Identifier.system (by value) and Identifier.type (by pattern)</p>",
        "id": 154020957,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1543274470
    }
]