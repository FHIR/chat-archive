[
    {
        "content": "<p>This is in STU3.<br>\nWe have profiled the vital signs <a href=\"http://hl7.org/fhir/STU3/bp.html\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/bp.html\">bp</a> profile. We want to add slices for SNOMED CT to <a href=\"http://hl7.org/fhir/STU3/bp-definitions.html#bp.Observation.code\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/bp-definitions.html#bp.Observation.code\">code</a>, <a href=\"http://hl7.org/fhir/STU3/bp-definitions.html#bp.Observation.component:systolicbp.code\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/bp-definitions.html#bp.Observation.component:systolicbp.code\">component:SystolicBP.code</a> and <a href=\"http://hl7.org/fhir/STU3/bp-definitions.html#bp.Observation.component:diastolicbp.code\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/bp-definitions.html#bp.Observation.component:diastolicbp.code\">component:DiastolicBP.code</a>.</p>",
        "id": 189188228,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1582781374
    },
    {
        "content": "<p>When I have added a slice to <a href=\"http://hl7.org/fhir/STU3/bp-definitions.html#bp.Observation.component:systolicbp.code.coding\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/bp-definitions.html#bp.Observation.component:systolicbp.code.coding\">component:SystolicBP.code.coding</a> and <a href=\"http://hl7.org/fhir/STU3/bp-definitions.html#bp.Observation.component:diastolicbp.code.coding\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/bp-definitions.html#bp.Observation.component:diastolicbp.code.coding\">component.DiastolicBP.code.coding</a>, the validator rejects my examples with the errors:</p>",
        "id": 189188389,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1582781620
    },
    {
        "content": "<blockquote>\n<p>Error in discriminator at Observation.component:<strong>SystolicBP</strong>.code.coding: found a sliced element while resolving the fixed value for one of the slices</p>\n</blockquote>\n<p>and</p>\n<blockquote>\n<p>Error in discriminator at Observation.component:<strong>DiastolicBP</strong>.code.coding: found a sliced element while resolving the fixed value for one of the slices</p>\n</blockquote>",
        "id": 189188429,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1582781667
    },
    {
        "content": "<p>But it does not have any trouble with the new slice on <a href=\"http://hl7.org/fhir/STU3/bp-definitions.html#bp.Observation.code.coding\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/bp-definitions.html#bp.Observation.code.coding\">code.coding</a>.</p>\n<p>Strange.</p>",
        "id": 189188452,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1582781728
    },
    {
        "content": "<p>The validator will accept my example if the profile makes all 4 instances of component.code.coding.code 1..1.</p>\n<p>I think that all elements in the discriminator should be required in slice definitions, so I am surprised that slicing works with <a href=\"http://hl7.org/fhir/STU3/bp-definitions.html#bp.Observation.code.coding\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/bp-definitions.html#bp.Observation.code.coding\">code.coding</a> optional.</p>",
        "id": 189188524,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1582781847
    },
    {
        "content": "<p><strong>tl:dr</strong>: Why does the validator treat differently additional slices to Observation.code.coding and Observation.<strong>component</strong>.code.coding, in a profile derived from <a href=\"http://hl7.org/fhir/STU3/bp.html\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/bp.html\">Vital SIgns BP</a>?</p>",
        "id": 189188706,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1582782173
    },
    {
        "content": "<p>The profile behind this is <a href=\"http://build.fhir.org/ig/hl7au/au-fhir-childhealth/StructureDefinition-ncdhc-observation-vitalsign-bp.html\" target=\"_blank\" title=\"http://build.fhir.org/ig/hl7au/au-fhir-childhealth/StructureDefinition-ncdhc-observation-vitalsign-bp.html\">NCDHC Blood Pressure(BP) Vital Sign Observation Profile</a>.<br>\nIt uses the solution mentioned above: it makes all 4 instances of component.code.coding.code 1..1. And also makes the instances of code.coding.code 1..1.</p>",
        "id": 189188864,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1582782445
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> </p>\n<blockquote>\n<p>Why does the validator treat differently additional slices to Observation.code.coding and Observation.component.code.coding, in a profile derived from Vital SIgns BP?</p>\n</blockquote>",
        "id": 189271118,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1582848243
    },
    {
        "content": "<p>because you have sliced the component on the code</p>",
        "id": 189275245,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582852522
    },
    {
        "content": "<p>Submit a change request re: whether all elements in a slice discriminator path should be at least minOccurs=1</p>",
        "id": 189275264,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582852558
    },
    {
        "content": "<p>they don't all have to be, they just have to be distinct</p>",
        "id": 189275336,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582852629
    },
    {
        "content": "<p>the problem here is that the base profile doesn't slice on component.code, it slices on component.code.coding.code</p>",
        "id": 189275348,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582852669
    },
    {
        "content": "<p>But in the discriminator, why would it make sense to list something with a fixed value that's optional</p>",
        "id": 189275349,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582852673
    },
    {
        "content": "<p>it you have more than one path, you might have slices where one element fully differentiates and another is not used when that happens, but for some slices, the first element has a non-differentiating value and the second element is populated and differentiating. Address often works like this on use + type</p>",
        "id": 189275435,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582852767
    },
    {
        "content": "<p>It now makes sense to me that components of the discriminator can be optional.</p>",
        "id": 189275523,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1582852882
    },
    {
        "content": "<p>OK. The slicing that is breaking is the slicing of component, not of component.coding.<br>\nThanks.</p>",
        "id": 189275775,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1582853180
    },
    {
        "content": "<p>Can the error message be improved to clarify that the problem is with component and not component.coding?</p>",
        "id": 189275919,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1582853402
    },
    {
        "content": "<p>My point is that if I set a fixed value for use in a single slice and it's a discriminator, it should be 1..1.</p>",
        "id": 189276337,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582853885
    },
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"191682\">@Richard Townley-O'Neill</span> can you submit a change request with respect to that bit?</p>",
        "id": 189280334,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582859784
    },
    {
        "content": "<p>with respect to what?</p>",
        "id": 189280450,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582860001
    },
    {
        "content": "<p>I'm not sure I can improve the error message</p>",
        "id": 189280489,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582860008
    },
    {
        "content": "<p>the underlying issue is more serious - what does it mean to try and do what is being done here? it seems reasonable to add a slice, but what is the impact on the other slicing?</p>",
        "id": 189280495,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582860044
    },
    {
        "content": "<p>That if you're setting a fixed value in a particular slice to satisfy a discriminator, elements from the base of the slice to the fixed value element need to be minOccurs of 1+.</p>",
        "id": 189280553,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582860142
    },
    {
        "content": "<p>I don't know what this means:</p>\n<blockquote>\n<p>elements from the base of the slice to the fixed value element</p>\n</blockquote>",
        "id": 189280642,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582860302
    },
    {
        "content": "<p>If you're slicing on Observation.code by coding.code and coding.system, then a slice that declares fixed values for coding.code and coding.system better also declare minOccurs of 1 on Observation.code.coding, Observation.code.coding.code and Observation.code.coding.system</p>",
        "id": 189280780,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582860527
    },
    {
        "content": "<p>It's not sensible to have a slice where you're declaring fixed values for elements where the slice would match if the elements were omitted entirely.</p>",
        "id": 189280787,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582860554
    },
    {
        "content": "<p>well, I don't entirely agree. That was my point above. It's certainly sensible that code.coding would be 1+ but it's not necessary for both code and system to have values</p>",
        "id": 189280866,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582860676
    },
    {
        "content": "<p>Observation.code is 1..1, do you mean </p>\n<blockquote>\n<p>slicing on Observation.code.coding. by code and system, then a slice that declares fixed values for coding.code and coding.system better also declare minOccurs of 1 on Observation.code.coding,</p>\n</blockquote>",
        "id": 189280870,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1582860682
    },
    {
        "content": "<p>It's totally fine if they don't both have values.  But if they <em>do</em> have values, they should be 1..x</p>",
        "id": 189281790,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582862137
    },
    {
        "content": "<p>So, for example, you could have a slice where coding is 1..x and system is 1..1 and has a fixed system; you could have a slice where coding is 1..x and code is 1..1 and has a fixe code; you could have a slice where coding is 0..0 and no fixed values at all.</p>",
        "id": 189281845,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582862214
    },
    {
        "content": "<p>But you can't have a slice where coding is 0..x and system is 0..1 and code is 0..1 and code and system have fixed values.  (Which the validator is totally happy with at the moment.)</p>",
        "id": 189281858,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582862249
    },
    {
        "content": "<p>I previously expected that optional elements in the discriminator would break slicing. But, now I think of the lack of an element as just another \"value\".</p>",
        "id": 189282344,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1582863063
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Slicing.20vital.20signs.20bp/near/189281858\" title=\"#narrow/stream/179252-IG-creation/topic/Slicing.20vital.20signs.20bp/near/189281858\">said</a>:</p>\n<blockquote>\n<p>But you can't have a slice where coding is 0..x and system is 0..1 and code is 0..1 and code and system have fixed values.  (Which the validator is totally happy with at the moment.)</p>\n</blockquote>\n<p>I do not follow why optional and fixed value needs to be a problem. Defining a slice with an optional element claims that the slice includes instances without the element. If that element has a fixed value, it means that the only choices are no value or the fixed value.</p>",
        "id": 189282347,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1582863068
    },
    {
        "content": "<p>In what situation would it make sense to say \"This slice matches if the value corresponds to the fixed value or if it's absent\"?  That's going to be exceptionally rare.  And having designers do it by accident is going to be exceptionally common.  So I'd much rather have the rule and in the exceptionally rare case, have to define two slices with identical constraints for the fixed value and no value cases.</p>",
        "id": 189283044,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582864165
    },
    {
        "content": "<p>I agree that is is confusing. <br>\nI had not thought of the fact that mistaken use will be more common than informed use, but I agree, it will be.</p>",
        "id": 189283973,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1582865741
    },
    {
        "content": "<p>So a rule would be<br>\nIn a slice, at lest one part of the discriminator will have a value</p>",
        "id": 189284081,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1582865883
    },
    {
        "content": "<p>No, it's valid for one slice to be one where none of the discriminators have a value.  My rule is that an element that is part of a value-based discriminator has a fixed value, then that element and all elements along the path from the slice root have to be mandatory (minOccurs=1+)</p>",
        "id": 189284162,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582866008
    },
    {
        "content": "<p>What happens if it is part of a pattern-based discriminator?</p>",
        "id": 189284197,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1582866082
    },
    {
        "content": "<p>Pattern-based would presumably require min=1 for nodes between the slice and the pattern too, though because they can use pattern, there wouldn't typically be many nodes (if any) where that would be relevant</p>",
        "id": 189284738,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582867054
    }
]