[
    {
        "content": "<p>What is the magic syntax to place a structure definition in the resources folder in a page file (using markdown)?<br>\nWould the syntax used by Simplifier {{tree:phd/CompoundNumericObservation}}</p>\n<p>Probably not. There is probably a different syntax for Jekyll. Any docs on that?</p>\n<p>I'm trying to validate a structure definition by making a minimal IG with one page containing one resource - (a structure definition) and that will be the structure definition I want to check.</p>",
        "id": 153995420,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536605708
    },
    {
        "content": "<p>{% include  StructureDefinition-{id}-{??}.xhtml%} where ?? is the kind of view you want.</p>",
        "id": 153995421,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536605890
    },
    {
        "content": "<p>use liquid syntax for Jekyll and kramdown markdown flavor which as all kinds of extra goodies.</p>",
        "id": 153995529,
        "sender_full_name": "Eric Haas",
        "timestamp": 1536610204
    },
    {
        "content": "<blockquote>\n<p>use liquid syntax for Jekyll and kramdown markdown flavor which as all kinds of extra goodies.</p>\n</blockquote>\n<p>That must be pretty generic. I am still searching the wiki and other IG guides to figure out what the ?? possibilities are (kind of view).</p>\n<p>So far I got<br>\n{% include StructureDefinition-{PhdDevice}-{??}.xhtml%}</p>\n<p>where PhdDevice is the &lt;id&gt; I give it in the structure definition. Forge had no such &lt;id&gt; in their definitions.</p>\n<p>I don't have xhtml files either; they are xml.</p>",
        "id": 153995535,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536610381
    },
    {
        "content": "<blockquote>\n<p>{% include  StructureDefinition-{id}-{??}.xhtml%} where ?? is the kind of view you want.</p>\n</blockquote>\n<p>What are the possible values for ?? (the kind of views ... I cannot find a source of options)</p>",
        "id": 153995587,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536615932
    },
    {
        "content": "<p>Look here at my template for bit more explanation:  <a href=\"https://github.com/Healthedata1/IG-Template2\" target=\"_blank\" title=\"https://github.com/Healthedata1/IG-Template2\">https://github.com/Healthedata1/IG-Template2</a></p>",
        "id": 153995592,
        "sender_full_name": "Eric Haas",
        "timestamp": 1536616178
    },
    {
        "content": "<p>the ig-pub generates the artifacts as xhtml and the pages are created  using both the layouts in the _layout folder and template files such as sd.html etc which live in root in my setup.   thetemplate is inserted at  {{content}}  tag in the layout file  (framework/_layout/ fhir-artifact.html ).</p>",
        "id": 153995595,
        "sender_full_name": "Eric Haas",
        "timestamp": 1536616434
    },
    {
        "content": "<blockquote>\n<p>the ig-pub generates the artifacts as xhtml and the pages are created  using both the layouts in the _layout folder and template files such as sd.html etc which live in root in my setup.   thetemplate is inserted at  {{content}}  tag in the layout file  (framework/_layout/ fhir-artifact.html ).</p>\n</blockquote>\n<p>Maybe I am trying to do something that can't be done. In Simplifier I could embed the structure definition right into a markdown page anywhere I wanted. In the IG publisher examples all I see is a table with a list of profiles that are not displayed in the page. I can click them and then see them but they are not present in the page themselves.</p>",
        "id": 153995596,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536616750
    },
    {
        "content": "<p>you need to read the documentation here:<a href=\"http://wiki.hl7.org/index.php?title=IG_Publisher_Documentation#Fragment_Codes\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=IG_Publisher_Documentation#Fragment_Codes\">http://wiki.hl7.org/index.php?title=IG_Publisher_Documentation#Fragment_Codes</a> -  this tells you what codes for the views that are available</p>",
        "id": 153995599,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536617547
    },
    {
        "content": "<blockquote>\n<p>you need to read the documentation here:<a href=\"http://wiki.hl7.org/index.php?title=IG_Publisher_Documentation#Fragment_Codes\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=IG_Publisher_Documentation#Fragment_Codes\">http://wiki.hl7.org/index.php?title=IG_Publisher_Documentation#Fragment_Codes</a> -  this tells you what codes for the views that are available</p>\n</blockquote>\n<p>When I put in an xml-html such that I have {% include StructureDefinition-{PhdDevice}-{xml-html}.xhtml%} which I hope means I want to view my xml file as html at this point....BUT, <br>\nthe output says the 'liquid' (what a stupid name) syntax is in error, it should be like this: {% include file.ext param='value' param2='value' %}</p>\n<p>Then it looks like if I do that {% include PhdDeviceStructureDefinition.xml  %} it can't find the file because it apparently does not look for <em>my source</em> but something it has already created and placed in the 'temp' directory.  Arrg.</p>\n<p>So I go with this {% include PhdDeviceStructureDefinition.xhml  %} which exists in the temp directory after some processing BUT then I get it wants the file in an '_include' directory within the temp directory!!! That I can't do anything about.</p>\n<p>I look on line and so far have not found any uses of 'include' that are inserting anything for example here <a href=\"https://help.shopify.com/en/themes/liquid/tags/\" target=\"_blank\" title=\"https://help.shopify.com/en/themes/liquid/tags/\">https://help.shopify.com/en/themes/liquid/tags/</a></p>\n<p>So if I want to view, as html, in a markdown page,  my PhdDeviceStructureDefinition.xml file with id PhdDevice located  in 'resources'  what should this line<br>\n{% include StructureDefinition-{id}-{??}.xhtml%} inserted in the markdown file<br>\nlook like?</p>",
        "id": 153995667,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536656226
    },
    {
        "content": "<p>I don't understand what the context of your questions is. I think you should start with a working IG and strip it down so that it works for you</p>",
        "id": 153995670,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536657908
    },
    {
        "content": "<p>a relative simple one is <a href=\"https://build.fhir.org/ig/HL7/deqm/\" target=\"_blank\" title=\"https://build.fhir.org/ig/HL7/deqm/\">https://build.fhir.org/ig/HL7/deqm/</a></p>",
        "id": 153995671,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536657960
    },
    {
        "content": "<blockquote>\n<p>I don't understand what the context of your questions is. I think you should start with a working IG and strip it down so that it works for you</p>\n</blockquote>\n<p>That's what I am doing. But the working IG does not embed a structure definition within text (like one can do in Simplifier). Instead it has links to the structure definitions which you click on and then you get a separate page with the differential and snapshot views</p>",
        "id": 153995672,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536658044
    },
    {
        "content": "<p>but those pages are built they way you are thinking</p>",
        "id": 153995673,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536658073
    },
    {
        "content": "<p>alternatively you could try the crude but very simple IG in the master repository itself - in \\build\\test\\ig</p>",
        "id": 153995674,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536658127
    },
    {
        "content": "<blockquote>\n<p>alternatively you could try the crude but very simple IG in the master repository itself - in \\build\\test\\ig</p>\n</blockquote>\n<p>That sounds like a good idea ... there seems to be quite a selection. I see<br>\nig, ig10,  ig14, ig30,  and ig40. The 'ig' is the complete one?</p>",
        "id": 153995675,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536658667
    },
    {
        "content": "<p>ig40</p>",
        "id": 153995676,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536659099
    },
    {
        "content": "<p>well, it depends which version you are targeting - these are all basically the same but differ by version</p>",
        "id": 153995677,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536659120
    },
    {
        "content": "<blockquote>\n<p>ig40</p>\n</blockquote>\n<p>R4 (3.6.0 at the current moment). The version where the Device and DeviceComponent have been merged and the DeviceComponent no longer exists</p>\n<p>the 'ig' seems the simplest. They are all more complex than my minimal guide which (if it worked) would only have a home page with a structure definition in it. I got the home page.</p>\n<p>Also, is it necessary to name my resources with these dashes like 'StructureDefinition-PhdDevice.xml'? It seems like a lot examples I see all do this. Coming down from Forge and Simplifier I have all markdown pages and structure definition resources with names like PhdDeviceStructureDefinition.xml. These structure definitions are all embedded within the markdown files with annotations that look like this</p>\n<p>{{tree:phd/CompoundNumericObservation}}</p>\n<p>where the structure definition is CompoundNumericObservation.xml</p>",
        "id": 153995679,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536659900
    },
    {
        "content": "<p>the IG publisher has to find the resource. The easiest way to find the ig is to use * for the resource path and name it whatever you want</p>",
        "id": 153995680,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536660287
    },
    {
        "content": "<blockquote>\n<p>the IG publisher has to find the resource. The easiest way to find the ig is to use * for the resource path and name it whatever you want</p>\n</blockquote>\n<p>I am trying to follow how the process goes from the structure definition in the resources directory ... for example the file 'test-ig-sd.out.xml to a line like this <br>\n{% include StructureDefinition-test-organization-diff.xhtml %}<br>\nin the profile-sd-o.html in the pages directory </p>\n<p>That line produces the differential (or snapshot should I replace 'diff' with 'snapshot') but I have no idea how the syntax of the line relates to the source files in the resources directory. But I see only two structure definitions in the resources directory (besides the implementation guide). How do the source xml files relate to that 'liquid' line above? I could not find a structure definition with an id 'test-organization'. Both SDs are Patients and I cannot find the word 'organization' anywhere in the source files in 'resource'. Isn't &lt;test-organization&gt; supposed to be an SD id?</p>\n<p>SUCCESS!  I used the line {% include StructureDefinition-PhdDevice-diff.xhtml %} and it worked. I now have a minimal IG which makes your test IG look like New York City next to my Maria, Australia IG. </p>\n<p>I still don't understand the connection between that line and the sources in the test ig though.</p>",
        "id": 153995684,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536661660
    },
    {
        "content": "<p>I don't know. Lloyd got his hands on that and did the Lloyd thing and now it's really complicated</p>",
        "id": 153995689,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536663922
    },
    {
        "content": "<p>the \"ig\" one is my favourite - now that I can look</p>",
        "id": 153995690,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536664341
    },
    {
        "content": "<blockquote>\n<p>I don't know. Lloyd got his hands on that and did the Lloyd thing and now it's really complicated</p>\n</blockquote>\n<p>Well this is pretty simple with small ig.json and ImplementationGuide.xml structure definition files. For thick skulls like mine with limited capacity it's a good starting point. </p>\n<p>Now I can easily view my structure definitions and see if they have what I want in the diff and snapshot views.</p>\n<p>Now I got to see why some of my difference fields are not showing up in the 'diff' (or snapshot). I've got some learning to do there as well!</p>",
        "id": 153995691,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536664791
    },
    {
        "content": "<blockquote>\n<p>I am trying to follow how the process goes from the structure definition in the resources directory ... for example the file 'test-ig-sd.out.xml to a line like this <br>\n{% include StructureDefinition-test-organization-diff.xhtml %}<br>\nin the profile-sd-o.html in the pages directory</p>\n</blockquote>\n<p>right now the config.json file defines:  ( in the near future will be moved to the IG resource file  ( ig.xml)</p>\n<ul>\n<li>source file  ( file url)</li>\n<li>base file -  the html page  [type]+[id].html</li>\n<li>may define the definition page and mapping page too.</li>\n</ul>\n<p>This is all based on the resource id</p>\n<p>also defines where every lives  (pages, resources, examples , etc)</p>\n<p>right now ig.xml use is a bit murky, its necessary for some things,  just assume you need it for all resources  ( you don't but ignore that ), fill in all the metadata and  populate it with the resources,  only need to stub in the home page .</p>\n<p>This is all based on the resource id.</p>\n<p>With this set up correctly you will have a bunch of prepackaged paramaters:</p>\n<div class=\"codehilite\"><pre><span></span>Jekyll Site Variables\nThese are the site variables defined here:\n\nIG Business version specification (defined in ig.json)- {{site.data.fhir.ig.version}} = 0.0.0\n\nIG status (defined in ig.xml)- {{site.data.fhir.ig.status}} = draft\n\nWhether is experimental IG (defined in ig.xml) - {{site.data.fhir.ig.experimental}} = false\n\nIG Publisher name (defined in ig.xml) - {{site.data.fhir.ig.publisher}} = Health eData Inc\n\ndependency url - e.g. “uscore” : Base url of a dependency implementation Guide (defined in ig.json) - {{site.data.fhir.uscore}} = http://hl7.org/fhir/us/core\n\nigName : Title of the implementation Guide (defined in ig.xml) - {{site.data.fhir.igName}} = IG_Test3\n\npath : path to the main FHIR specification (defined in ig.json)- {{site.data.fhir.path}} = http://build.fhir.org/\n\ncanonical : canonical path to this specification (defined in ig.json)- {{site.data.fhir.canonical}} = http://www.fhir.org/guides/test3\n\nerrorCount : number of errors in the build file (not including HTML validation errors) - {{site.data.fhir.errorCount}} = 18\n\nversion : version of FHIR - {{site.data.fhir.version}} = 3.6.0\n\nrevision : revision of FHIR - {{site.data.fhir.revision}} = 8660b499\n\nversionFull : version-revision - {{site.data.fhir.versionFull}} = 3.6.0-8660b499\n\ntotalFiles : total number of files found by the build - {{site.data.fhir.totalFiles}} = 9\n\nprocessedFiles : number of files genrated by the build - {{site.data.fhir.processedFiles}} = 146\n\ngenDate : date of generation (so date stamps in the pages can match those in the conformance resources) - {{site.data.fhir.genDate}} = Tue, Sep 11, 2018 09:22-0700\n</pre></div>\n\n\n<p>since the ig-pub generates all the resource fragments - the liquid tagging in the templates is good to go..</p>\n<p>{{type}}  and {{id}} are the variables  used to capture the fragments like <code>{% include {{[type]}}-{{[id]}}-pseudo-json.xhtml %}</code>  will inject the psuedo json from for a profile into the page</p>",
        "id": 153995785,
        "sender_full_name": "Eric Haas",
        "timestamp": 1536684481
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span>  I am a little confused about the mentioning of ig.xml and ig.json. This morning I was able to create a minimal IG with only a page and a structure definition. I needed an ig.json file and an ImplementationGuide.xml structure definition. I added the page and a Device structure definition. The ig and ImplementationGuide.xml were both small because they referenced only a single page and resource.</p>\n<p>In my page file I used {% StructureDefinition-PhdDevce-diff-xhtml %}. This gave me a nice view of the diff.</p>\n<p>Is ig.xml you are talking about the same as my ImplementationGuide.xml structure definition?</p>",
        "id": 153995837,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536690132
    },
    {
        "content": "<p>ig.xml ==   ImplementationGuide resource instance  not a StructureDefinition</p>",
        "id": 153995898,
        "sender_full_name": "Eric Haas",
        "timestamp": 1536698509
    },
    {
        "content": "<p>configuration file == ig.json</p>",
        "id": 153995899,
        "sender_full_name": "Eric Haas",
        "timestamp": 1536698528
    },
    {
        "content": "<p>Can see them in action here: <a href=\"https://github.com/Healthedata1/IG-Template2\" target=\"_blank\" title=\"https://github.com/Healthedata1/IG-Template2\">https://github.com/Healthedata1/IG-Template2</a></p>",
        "id": 153995900,
        "sender_full_name": "Eric Haas",
        "timestamp": 1536698600
    }
]