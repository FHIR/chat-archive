[
    {
        "content": "<p>When reviewing ballot feedback, often times the ballot comments reference particular section numbers.  It's frustrating that the rendered IG does not seem to include those section numbers in searchable text via Ctrl-F.  For example, if I want to jump to section 1.4.1 - I expect I should be able to press Ctrl-F and type 1.4.1 to get there.  This doesn't seem to work (possibly) because of some CSS magic.  Would it be possible to make them searchable?  I'm happy to file an issue if this hasn't come up before.</p>",
        "id": 225229176,
        "sender_full_name": "Carl Anderson",
        "timestamp": 1612475684
    },
    {
        "content": "<p>We rely on CSS auto-magic to determine the trailing part of the section numbers (the part you'd most care about searching for).  I don't know why browsers don't make it searchable - or if there's something else we could do with the Javascript that would make it searchable.  We rely on Javascript because there's no easy way to inject the section numbers into markdown-authored content via a transformation process.  If anyone has ideas on how we can/should do this better, feel free to propose.</p>",
        "id": 225229739,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612475956
    },
    {
        "content": "<p>Ug.  Looks like CSS-generated values are pseudo-elements, and therefore not searchable.<br>\n<a href=\"https://stackoverflow.com/questions/13296789/is-it-possible-to-make-css-generated-content-searchable-by-a-browser\">https://stackoverflow.com/questions/13296789/is-it-possible-to-make-css-generated-content-searchable-by-a-browser</a></p>\n<p>If we wanted the same section numbers and for them to be searchable, they would need to be real elements in the DOM (I think).</p>",
        "id": 225230877,
        "sender_full_name": "Carl Anderson",
        "timestamp": 1612476498
    },
    {
        "content": "<p>Ok - would it be possible to generate 'real' elements with Javascript - given that we don't have a good way of injecting them in the source?</p>",
        "id": 225235809,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612478987
    },
    {
        "content": "<p>I think it's possible, but it changes the resulting documents.  As it is now - if you select all in an IG, it does <em>not</em> include the section numbers.  I believe if we added them to the document - it would.</p>",
        "id": 225236546,
        "sender_full_name": "Carl Anderson",
        "timestamp": 1612479356
    },
    {
        "content": "<p>Perhaps a compromise would be a TOC that included the section numbers in a searchable way.  Then a Ctrl-F search would match that, and you could click through the TOC link to the desired section.</p>",
        "id": 225236704,
        "sender_full_name": "Carl Anderson",
        "timestamp": 1612479437
    },
    {
        "content": "<p>I don't understand why section numbers are not searchable. I inject them as standard text elements</p>",
        "id": 225239075,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1612480777
    },
    {
        "content": "<p>They are css pseudo elements</p>",
        "id": 225241881,
        "sender_full_name": "Eric Haas",
        "timestamp": 1612482462
    },
    {
        "content": "<p>In the FHIR Core they're real; in IGs they're <del>fake</del> pseudo.</p>",
        "id": 225242192,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1612482681
    },
    {
        "content": "<p>where's an example</p>",
        "id": 225242238,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1612482712
    },
    {
        "content": "<p>We have links so why do we need to add this?</p>",
        "id": 225242382,
        "sender_full_name": "Eric Haas",
        "timestamp": 1612482798
    },
    {
        "content": "<p>Cost benefit?</p>",
        "id": 225242433,
        "sender_full_name": "Eric Haas",
        "timestamp": 1612482838
    },
    {
        "content": "<p>because lots of classic standards people use section numbers to report issues rather than copying the links.</p>",
        "id": 225242690,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1612483022
    },
    {
        "content": "<p><a href=\"http://build.fhir.org/ig/dvci/vaccine-credential-ig/branches/main/\">http://build.fhir.org/ig/dvci/vaccine-credential-ig/branches/main/</a> is an example (I think all IGs are an example). ctrl-f on that page in Chromium and type \"1.1\"; you get no hits. At least, I get no hits.</p>",
        "id": 225251611,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1612490116
    },
    {
        "content": "<p>I didn't realise the template had taken over the section numbering. <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> how does it work? How does the section numbering be unique across pages?</p>",
        "id": 225252528,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1612490889
    },
    {
        "content": "<p>The section number prefix for each page is in a data file that Jeckyl sticks into a variable accessible to the Javascript.</p>",
        "id": 225256113,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612494675
    },
    {
        "content": "<p>sigh. well, can the javascript add the number in such way that it's accessible?</p>",
        "id": 225256301,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1612494881
    },
    {
        "content": "<p>That was my question.  I suspect the answer is 'yes', but I'm far from a JS expert.</p>",
        "id": 225256415,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612494994
    },
    {
        "content": "<p>who wrote the javascript?</p>",
        "id": 225256571,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1612495180
    },
    {
        "content": "<p>Me - with help from Stack Overflow :)</p>",
        "id": 225258891,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612497562
    },
    {
        "content": "<p>where is it?</p>",
        "id": 225259145,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1612497836
    },
    {
        "content": "<p>CSS is here: <a href=\"https://github.com/HL7/ig-template-base/blob/master/content/assets/css/project.css\">https://github.com/HL7/ig-template-base/blob/master/content/assets/css/project.css</a>, specifically the section labeled \"Common content for section numbering\"</p>\n<p>The heading-prefix is set here: <a href=\"https://github.com/HL7/ig-template-base/blob/master/includes/fragment-pagebegin.html\">https://github.com/HL7/ig-template-base/blob/master/includes/fragment-pagebegin.html</a></p>",
        "id": 225259587,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612498362
    },
    {
        "content": "<p>so I believe the rule is that content added by css tricks like this won't be part of the page and can't be selected or searched</p>",
        "id": 225260607,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1612499670
    },
    {
        "content": "<p>I had the same issue because I needed it in the \"give feedback about this section\" script.<br>\n<a href=\"#narrow/stream/179169-javascript/topic/help.20needed.20%28newbie%29/near/206130970\">https://chat.fhir.org/#narrow/stream/179169-javascript/topic/help.20needed.20%28newbie%29/near/206130970</a></p>",
        "id": 225287412,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1612524685
    },
    {
        "content": "<p>Since I'm not the only one suffering from that, can we add an issue to the base template to make sure these numbers are \"real\"?</p>",
        "id": 225287538,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1612524758
    },
    {
        "content": "<p>IHE would like to control the numbering even more tightly. For us, it would be better to turn it off, as we are (today) would just encode the header numbers we want into the header text. This because our header numbering is not unique  within an implementation guide, it is unique within the Technical Framework that a domain publishes.   This might change, but this is what we need now.</p>",
        "id": 225288606,
        "sender_full_name": "John Moehrke",
        "timestamp": 1612525572
    },
    {
        "content": "<p>that said, sub-numbering on a page is nice... we just want to tell you what number to start on that source page.</p>",
        "id": 225288660,
        "sender_full_name": "John Moehrke",
        "timestamp": 1612525639
    },
    {
        "content": "<p>I don't think we want to turn it off in IHE</p>",
        "id": 225291924,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1612527939
    },
    {
        "content": "<p>(in the long run, I mean)</p>",
        "id": 225291948,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1612527956
    },
    {
        "content": "<p>Sounds like you'd want to assert a prefix that would cover the whole specification?</p>",
        "id": 225309864,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612537713
    },
    {
        "content": "<p>I think (if we compile things in the usual IHE way) it could be an offset that would differ for each IG</p>",
        "id": 225312827,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1612539058
    },
    {
        "content": "<p>so that IG #2 continues where IG 1# left off</p>",
        "id": 225313019,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1612539132
    },
    {
        "content": "<p>John can confirm what is the immediate need, if any -</p>",
        "id": 225313337,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1612539278
    },
    {
        "content": "<p>in the long run , I  prefer to have each IG with its own numbering, and the Technical Framework as a super IG that compiles everything, and where numbering could be sequential again.</p>",
        "id": 225313382,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1612539300
    },
    {
        "content": "<p>An offset would seem to be problematic because if you update one of the earlier guides to have more sections, you'd end up with duplicate numbers?</p>",
        "id": 225314462,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612539736
    },
    {
        "content": "<p>Yes. Would be hard to manage lifecycles with that. Maybe I get it wrong</p>",
        "id": 225315714,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1612540241
    },
    {
        "content": "<p>This could definitely be fixed by JavaScript, but an even better solution would be doing this somehow with static HTML (not using CSS pseudo elements). From a web standards/accessibility perspective I don't think it's good practice to inject meaningful content into a page with JavaScript...for example, publisher.jar doesn't appear to execute JavaScript when checking for broken links -- maybe not directly relevant here, but it illustrates why it's just better to not _need_ JavaScript on a page that's primarily static HTML (unless it's really the only option).</p>",
        "id": 225333729,
        "sender_full_name": "Max Masnick",
        "timestamp": 1612547988
    },
    {
        "content": "<p>For Markdown content that's processed with Jekyll it looks like this kind of thing might be possible with a plugin: <a href=\"https://github.com/muratayusuke/jekyll-numbered-headings\">https://github.com/muratayusuke/jekyll-numbered-headings</a></p>\n<p>I'm pretty familiar with Jekyll but not with how the build process generates HTML so I don't know how applicable this.</p>",
        "id": 225334101,
        "sender_full_name": "Max Masnick",
        "timestamp": 1612548145
    },
    {
        "content": "<p>the iG publisher can prefix headings with numbers. I'm not sure why the template doesn't leverage this capability</p>",
        "id": 225341300,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1612551617
    },
    {
        "content": "<p>How do we trigger it?</p>",
        "id": 225342118,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612551966
    },
    {
        "content": "<p>The static site generators I've looked don't come with a section numbering capability out of the box and that tells me it is not a thing we should worry about. I'd rather get rid of section numbering than cling to them so that you are forced to use the links provided.</p>",
        "id": 225377709,
        "sender_full_name": "Eric Haas",
        "timestamp": 1612573311
    },
    {
        "content": "<p>Section numbering is hugely important for human-to-human communication.  People don't speak in hyperlinks...</p>",
        "id": 225384868,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612583800
    },
    {
        "content": "<p>While many of us spend too much of our life on <a href=\"http://chat.fhir.org\">chat.fhir.org</a>, there are phone calls and maybe even someday in-person meetings again.  We need to keep section numbers.</p>",
        "id": 225384901,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612583865
    },
    {
        "content": "<p>I don't really care if the functionality is \"out-of-the-box\" if there's a reliable, safe plugin we can use.  The bigger question is whether it's going to create extra installation work for developers - that I definitely want to avoid.</p>",
        "id": 225384951,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612583914
    },
    {
        "content": "<p>For IHE,  for now, The numbering would be radically different in the background pages, vs technical pages such as the profile pages and the pages that give a technical context to the profiles. This is ugly, I understand that. Which anyone that has looked at an IHE \"Supplement\" would agree is hard to understand the header numbering.   The ultimate reason is that the normative specifications are integrated into Volumes, so the header numbering used in the supplement is based on that ultimate integration. The advantage this brings is that any portion of a published specification has a header number defined that will not change as the specification matures. And a new supplement can reference another specification by deterministic header numbers. Promoting re-use of content (profiles, documents, etc) and transactions (operations, messages, etc).</p>",
        "id": 225548907,
        "sender_full_name": "John Moehrke",
        "timestamp": 1612793435
    },
    {
        "content": "<p>I have a project today (updating MHD to use IG publisher) where I need to do this.. so willing to experiment if there is a theory.</p>",
        "id": 225548989,
        "sender_full_name": "John Moehrke",
        "timestamp": 1612793488
    },
    {
        "content": "<p>I don't want to turn off header numbering, but if that is the only way to work it in the short term, than I know that will work.   If I can specify the starting header level and number per markdown and  profile, that would be more easy.</p>",
        "id": 225549162,
        "sender_full_name": "John Moehrke",
        "timestamp": 1612793563
    }
]