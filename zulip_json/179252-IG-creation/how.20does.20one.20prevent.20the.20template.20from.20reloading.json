[
    {
        "content": "<p>I  thought I had a bash script that allowed me to reuse the same template file instead of reloading for each build run, but is no longer working or never worked in the first place.   Is there a switch in the command line to prevent reloading or some configuration in the ig.ini to prevent reloading of the template folder.  I can't find the documentation on this.</p>",
        "id": 185677047,
        "sender_full_name": "Eric Haas",
        "timestamp": 1579076159
    },
    {
        "content": "<p>if I set <code>template=template</code> in ig.ini it gets overwritten by the  reload and the subfolders disappear.   I think this was not an issue before but I am may be misremembering.</p>",
        "id": 185677549,
        "sender_full_name": "Eric Haas",
        "timestamp": 1579076716
    },
    {
        "content": "<p>Why would you not want to update the template?</p>",
        "id": 185690561,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1579089281
    },
    {
        "content": "<p>'template' is always a temporary directory.  If you want to mess around with your template for testing purposes, copy it to a different folder and point to it there.</p>",
        "id": 185701833,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1579098349
    },
    {
        "content": "<p>I can imagine a need once a IG has gone normative to be able to freeze all the build tools so that it can always be regenerated exactly as it once was. Yes this doesn't take advantage of improvements in the build tools, but it is important for reporduceability. And as a choice, I can always choose to build with new tools.</p>",
        "id": 185705823,
        "sender_full_name": "John Moehrke",
        "timestamp": 1579100690
    },
    {
        "content": "<p>2 more reasons why:</p>\n<ol>\n<li>it slows down the build to have to load it each time when you are iterating through your ig development process rapidly.  Which is made more painful since watch is a bit buggy. </li>\n<li>you are going offline</li>\n</ol>",
        "id": 185710161,
        "sender_full_name": "Eric Haas",
        "timestamp": 1579103250
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  in a derived template can we point to a specific version of the base template?</p>",
        "id": 185714659,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1579105634
    },
    {
        "content": "<p>That would solve some issues I think</p>",
        "id": 185714678,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1579105649
    },
    {
        "content": "<p>I think it's much better to point to s specific version than switching the update on and off</p>",
        "id": 185714884,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1579105769
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> I think the publisher already works offline</p>",
        "id": 185714977,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1579105804
    },
    {
        "content": "<p>If you are offline, it should be grabbing the templates from your cache, so shouldn't be an issue.  Grabbing the templates doesn't take long - maybe 2 seconds in the overall build process if they're cached, so certainly not worth snapshotting them.  Yes, you should be able to refer to a specific version - so long as HL7's NPM cache has a snapshot, you should get that snapshot.</p>",
        "id": 185717198,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1579107083
    },
    {
        "content": "<blockquote>\n<p>I can imagine a need once a IG has gone normative to be able to freeze all the build tools so that it can always be regenerated exactly as it once was.</p>\n</blockquote>\n<p>I imagine this is a much bigger ask than just persisting or versioning templates.  My experience has been that the publisher is tightly coupled to the current build infrastructure as well.  Trying to run a publisher from 6 months ago will almost certainly fail because of changes in the external services the publisher depends on.  I agree, however, that there is a need for repeatable builds; I just expect there's a ton of work involved to get there.</p>",
        "id": 185720357,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1579108633
    },
    {
        "content": "<p>So if we keep the Publisher jar, and if we stick to one version of the template, the publication should remain constant ... Perhaps we need to experiment and if there is any issue, we can bring it. I don't expect that big a challenge (even for cases like IHE or similar). I hope I'm not missing anything</p>",
        "id": 185731474,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1579114750
    },
    {
        "content": "<p>It's also tied to the vocabulary server, any patches made to templates or tgz files for past publications, etc.  It may be possible to regenerate an IG exactly as it was, but it's far from guaranteed</p>",
        "id": 185752854,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1579128512
    }
]