[
    {
        "content": "<p>I'm slicing on ConceptMap.group.element.target.dependsOn with 'property' as the discriminator and getting this error.  I'm not absolutely sure what it wants me to fix, as I think I have only a single type (uri).  Anyone have tips on what to look at?</p>",
        "id": 153988067,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534477398
    },
    {
        "content": "<p>that's a spreadhseet loading error - you have specified a fixed value, but the spreadsheet parser doesn't know how to parse it unless you explicitly specify the type</p>",
        "id": 153988071,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534477494
    },
    {
        "content": "<p>the spreadsheet parser doesn't have access to the underlying resource at that point</p>",
        "id": 153988072,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534477522
    },
    {
        "content": "<p>right, it's spreadsheet (since that's what LIVD is using) - so add the type for both of my slices?</p>",
        "id": 153988073,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534477577
    },
    {
        "content": "<p>yes in this case you have to, just so it can parse the fixed value</p>",
        "id": 153988076,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534477688
    },
    {
        "content": "<p>that's no problem, but it didn't work - unless I didn't do it right</p>",
        "id": 153988077,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534477731
    },
    {
        "content": "<p>what do you have for the value of Type?</p>",
        "id": 153988078,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534477795
    },
    {
        "content": "<p>uri</p>",
        "id": 153988081,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534477850
    },
    {
        "content": "<p>I'll have to debug it then. commit, and I'll look at it in a sec- just trying to figure out a DEQM issue</p>",
        "id": 153988082,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534477879
    },
    {
        "content": "<p>sure - I haven't done much with profiling with spreadsheets before so I'm probably making multiple mistakes</p>",
        "id": 153988084,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534477998
    },
    {
        "content": "<p>let me know when you've committed</p>",
        "id": 153988090,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534478185
    },
    {
        "content": "<p>ok - I was just trying something first - following a pattern that I've seen (a bit blindly), but now working yet<br>\nI'm also trying to use a required binding to a code list with the uri slices - that could be a bit off the beaten path<br>\nwill commit now</p>",
        "id": 153988097,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534478849
    },
    {
        "content": "<p>which ig?</p>",
        "id": 153988112,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534479110
    },
    {
        "content": "<p>committed - HL7/livd</p>",
        "id": 153988119,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534479235
    },
    {
        "content": "<p>k on it shortly</p>",
        "id": 153988129,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534479563
    },
    {
        "content": "<p>sure</p>",
        "id": 153988130,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534479590
    },
    {
        "content": "<p>as I said, I'm probably doing plenty of things wrong - haven't found many examples to look at and documentation is somewhat sparse</p>",
        "id": 153988131,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534479705
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> livd won't build for me because it's not getting the latest iG publisher</p>",
        "id": 153988132,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534480238
    },
    {
        "content": "<p>though it claims that it's current</p>",
        "id": 153988133,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534480251
    },
    {
        "content": "<p>I'm actually in the process of removing that from git and just handling it locally<br>\nyou can run as ./_genUpdatePublisher.sh</p>",
        "id": 153988135,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534480333
    },
    {
        "content": "<p>oh, ok - that worked for me</p>",
        "id": 153988137,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534480376
    },
    {
        "content": "<p>it's trying to run 14809 for me - really really old</p>",
        "id": 153988141,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534480484
    },
    {
        "content": "<p>hmm - I don't really get that - but it can be downloaded separately, of course</p>",
        "id": 153988144,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534480543
    },
    {
        "content": "<p>Did you commit with the new publisher after running the getnUpdatePublisher?</p>",
        "id": 153988159,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1534480946
    },
    {
        "content": "<p>who? why?</p>",
        "id": 153988161,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534481002
    },
    {
        "content": "<p>Rob</p>",
        "id": 153988162,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1534481022
    },
    {
        "content": "<p>I committed after downloading the new publisher - because I needed it to resolve the issue with the rollback (which I had, too)</p>",
        "id": 153988164,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534481051
    },
    {
        "content": "<p>And everything in src-generated was committed?</p>",
        "id": 153988165,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1534481092
    },
    {
        "content": "<p>I do not understand this spreadsheet. what are you trying to do with the target?</p>",
        "id": 153988167,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534481144
    },
    {
        "content": "<p>you've tried slicing something that doesn't repeat, and you've not specified a type for the value?</p>",
        "id": 153988168,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534481194
    },
    {
        "content": "<p>I'm on 14877</p>",
        "id": 153988170,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534481241
    },
    {
        "content": "<p>ConceptMap.group.element.target.dependsOn is 0..*</p>",
        "id": 153988172,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534481286
    },
    {
        "content": "<p>trying to slice on property</p>",
        "id": 153988174,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534481302
    },
    {
        "content": "<p>but you sliced property</p>",
        "id": 153988175,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534481309
    },
    {
        "content": "<p>what would slicing on property do?</p>",
        "id": 153988176,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534481347
    },
    {
        "content": "<p>ok - that's not what I intended - trying to get a handle on how to do it in the spreadsheet</p>",
        "id": 153988177,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534481354
    },
    {
        "content": "<p>I'm finding the xml a lot easier to understand for this</p>",
        "id": 153988179,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534481394
    },
    {
        "content": "<p>slicing on property allows you to provide exactly one each of a dependsOn value for specimen and result</p>",
        "id": 153988180,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534481427
    },
    {
        "content": "<p>so property is sliced and bound to the value set with 'specimen' and 'result'<br>\nand then dependsOn.value will be populated for those (exactly two) slices</p>",
        "id": 153988181,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534481548
    },
    {
        "content": "<p>so this is a uri element. so the values need to be full uris (not technically but it's good practive)</p>",
        "id": 153988182,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534481594
    },
    {
        "content": "<p>there's no need for a binding. just set the fixed value</p>",
        "id": 153988183,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534481606
    },
    {
        "content": "<p>and then you prohibit system.... because?</p>",
        "id": 153988184,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534481619
    },
    {
        "content": "<p>yeah - I was concerned about that, but relative urls are allowed, as well as binding to a value set<br>\nthe rationale for prohibiting system is that property is mandatory and earlier the group didn't feel it was needed (and Hans likes to get rid of things that aren't needed)<br>\nbut that doesn't really make any sense, particularly if we're using the binding  - we do have a system<br>\nand in fact I tried to populate it (forgetting for the moment that it had been constrained away)</p>",
        "id": 153988186,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534481876
    },
    {
        "content": "<p>as I said - learning from multiple mistakes trying to get comfortable with doing it this way - and I know that spreadsheets are going away, but we have them now</p>",
        "id": 153988187,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534481971
    },
    {
        "content": "<p>right. system is necessary because you're mapping from and to CodeableConcept elements</p>",
        "id": 153988188,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534481998
    },
    {
        "content": "<p>yes, it certainly is - just forgot to fix that</p>",
        "id": 153988189,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534482032
    },
    {
        "content": "<p>dependsOn isn't directly in the mapping, but we need it to enable the guidance for differentiating between multiple available LOINC mappings for some IVD codes<br>\nit's expected that value will mostly be text - it is string - but maybe could be computable at some point</p>",
        "id": 153988190,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534482225
    },
    {
        "content": "<p>then we should not constrain system out.</p>",
        "id": 153988191,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534482350
    },
    {
        "content": "<p>no, I totally agree - it was an oversight to leave it constrained - that makes no sense</p>",
        "id": 153988192,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534482380
    },
    {
        "content": "<p>where would specimen come from ?</p>",
        "id": 153988193,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534482472
    },
    {
        "content": "<p>Specimen.type?</p>",
        "id": 153988194,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534482492
    },
    {
        "content": "<p>from the local lab knowing what they want to do with it<br>\nit could be specimen type - but the group felt that for the IVD manufacturers and labs who receive it it would normally be text descriptions of the specimen(s) that would be associated with that particular mapping</p>",
        "id": 153988195,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534482638
    },
    {
        "content": "<p>but it would still conceptually be Specimen.type, just not coded</p>",
        "id": 153988196,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534482671
    },
    {
        "content": "<p>yes, I agree</p>",
        "id": 153988197,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534482682
    },
    {
        "content": "<p>ok committed what I think you want in the spreadsheet</p>",
        "id": 153988198,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534482786
    },
    {
        "content": "<p>no. I missed fixing the cardinality on system. you can do that</p>",
        "id": 153988199,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534482820
    },
    {
        "content": "<p>ok - very helpful - I'll see how close I'm thinking now to what you actually did - thanks!</p>",
        "id": 153988200,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534482899
    },
    {
        "content": "<p>I'll let you know when I'm done fighting with git</p>",
        "id": 153988201,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534482931
    },
    {
        "content": "<p>ok</p>",
        "id": 153988202,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534482943
    },
    {
        "content": "<p>looks like I win. you can pull now</p>",
        "id": 153988203,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534482959
    },
    {
        "content": "<p>excellent</p>",
        "id": 153988205,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534482972
    },
    {
        "content": "<p>the slicing pattern makes sense - I just hadn't managed to come up with it<br>\nappreciate the pointer in the right direction</p>",
        "id": 153988209,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534483891
    },
    {
        "content": "<p>a further question I have is, what's the way to set closed slicing in the spreadsheet?<br>\nI haven't found anything obvious (to me) for doing that yet</p>",
        "id": 153988210,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534483895
    },
    {
        "content": "<p>the system discussion kind of went in a circle - since there's no binding for 'value' and it's expected to be text, 'system' isn't relevant, which was the original idea - so leaving it constrained out makes sense</p>",
        "id": 153988211,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534484467
    },
    {
        "content": "<p>it</p>",
        "id": 153988226,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534486732
    },
    {
        "content": "<p>it's always going to be text? never going to be computable?</p>",
        "id": 153988227,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534486751
    },
    {
        "content": "<p>there appears to be no way to make it closed in the spreadsheet - that's odd. <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> I thought we routinely did that?</p>",
        "id": 153988229,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534486883
    },
    {
        "content": "<p>Closing slices is a very bad thing, so no we don't routinely do it.  It is <em>possible</em> though.  The hover on the heading text in the spreadsheet explains how.</p>",
        "id": 153988230,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1534486946
    },
    {
        "content": "<p>Why would we close slices?  That says no-one can send other data they want to send and if someone else needs it, you have to build a separate interface.  General guidance is leave slicing open and ignore what you don't care about.</p>",
        "id": 153988231,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1534487001
    },
    {
        "content": "<p>I read the explanation using the '|' delimited fields, but it didn't work - I tried \"property | false | closed\", which seemed to be the pattern, but maybe that's not quite it - it didn't seem to parse anything past the first bar</p>",
        "id": 153988234,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534487118
    },
    {
        "content": "<p>that's not supported in IG spreadsheets - that's what the code says</p>",
        "id": 153988235,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534487188
    },
    {
        "content": "<p>It was supported at one point...</p>",
        "id": 153988236,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1534487257
    },
    {
        "content": "<p>I don't disagree generally with you, Lloyd - but the LIVD group has felt quite strongly that they have a very specific use case and they have been rather draconian (definitely too much so, in my opinion) about wanting to remove just about everything that they don't have an immediate use for (thinking they would add it back in later <strong>if</strong> it's ever needed in the LIVD context).</p>",
        "id": 153988237,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534487275
    },
    {
        "content": "<p>In any case, why are you closing your slices?</p>",
        "id": 153988238,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1534487278
    },
    {
        "content": "<p>well that explains why it didn't work</p>",
        "id": 153988239,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534487287
    },
    {
        "content": "<p>The problem with that is they're saying \"anyone talking to LIVD must do so with a custom interface\" - which is a foolish thing to do in a standard.</p>",
        "id": 153988240,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1534487325
    },
    {
        "content": "<p>Expect negative ballots :)</p>",
        "id": 153988241,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1534487345
    },
    {
        "content": "<p>they're looking at a specific limited use right now and only want to support that at the moment<br>\nI will prepare them for that :)</p>",
        "id": 153988242,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534487389
    },
    {
        "content": "<p>maybe they will soften the stance a bit now</p>",
        "id": 153988243,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534487420
    },
    {
        "content": "<p>actually closed slicing really shouldn't even be needed to do what they are wanting<br>\nthe cardinalities should also work - with two required slices and max 2 set on the sliced element<br>\nalthough I'm noticing that the cardinality on that element (dependsOn) isn't being rendering at all in the differential and is showing incorrectly as 1..1 in the snapshot</p>",
        "id": 153988246,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534487833
    },
    {
        "content": "<p>is that <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17241\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17241\">GF#17241</a> ?</p>",
        "id": 153988247,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534488045
    },
    {
        "content": "<p>actually it's not showing up for either differential or snapshot (although I'm sure I did see it on snapshot at first)<br>\nand the cardinality renders fine for other non-sliced backbone elements</p>",
        "id": 153988248,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534488154
    },
    {
        "content": "<p>yes, that is <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17241\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17241\">GF#17241</a></p>",
        "id": 153988250,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534488237
    },
    {
        "content": "<p>also the binding shows up as required, but what's bound do doesn't show</p>",
        "id": 153988251,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534488379
    },
    {
        "content": "<p>other than the fixed value, which is shown - but not the value set</p>",
        "id": 153988252,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534488414
    },
    {
        "content": "<p>the constrained out (0..0) elements also don't show that way and have incorrect cardinalities in the snapshot, but are correct in the differential</p>",
        "id": 153988254,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534488653
    }
]