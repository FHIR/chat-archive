[
    {
        "content": "<p>With the latest publisher, I am now getting the following error that I wasn't before:<br>\nUnsupported fixed pattern type for discriminator(system) for slice xxx</p>\n<p>I have three slices on Organization.telecom on telecom.system.  Phone requires system to be #phone, Fax requires system to be #fax, and Email requires system to be #email.</p>\n<p>I have this in my example:<br>\n  \"telecom\" : [   {    \"system\" : \"email\",    \"value\" : \"<a href=\"mailto:faersedub@fda.hhs.gov\" title=\"mailto:faersedub@fda.hhs.gov\">faersedub@fda.hhs.gov</a>\"   }  ],</p>\n<p>And I get the following errors:<br>\nUnsupported fixed pattern type for discriminator(system) for slice Organization.telecom:Phone: org.hl7.fhir.r5.model.CodeType<br>\nUnsupported fixed pattern type for discriminator(system) for slice Organization.telecom:Fax: org.hl7.fhir.r5.model.CodeType<br>\nUnsupported fixed pattern type for discriminator(system) for slice Organization.telecom:Email: org.hl7.fhir.r5.model.CodeType</p>\n<p>I can't really tell from the error message what is wrong, but it seems to be saying that my slice definitions in the profile are wrong?  But it looks correct to me.</p>",
        "id": 192077630,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1585342071
    },
    {
        "content": "<p>Unsupported means that the publisher doesn't currently support handling patterns for ContactPoint.  (The number of types supported is actually pretty small so far - Coding, CodeableConcept, and maybe one or two others.). We'll have to change the IGPublisher to support this type.  I'll see if I can do it.</p>",
        "id": 192079198,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1585342685
    },
    {
        "content": "<p>right. and this is nothing to do with the new publisher.</p>",
        "id": 192079234,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585342700
    },
    {
        "content": "<p>hmm, I'm not asking for a pattern slice.  It is specified as a value slice.<br>\nthis wasn't broken before, so it might be that the new sushi created the profile differently.  i'll go look.</p>",
        "id": 192079303,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1585342747
    },
    {
        "content": "<p>Yeah, this isn't a pattern slice...</p>\n<div class=\"codehilite\"><pre><span></span>    &quot;id&quot;: &quot;Organization.telecom&quot;,\n    &quot;path&quot;: &quot;Organization.telecom&quot;,\n    &quot;slicing&quot;: {\n      &quot;discriminator&quot;: [\n        {\n          &quot;type&quot;: &quot;value&quot;,\n          &quot;path&quot;: &quot;system&quot;\n        }\n      ],\n      &quot;rules&quot;: &quot;open&quot;,\n      &quot;description&quot;: &quot;Slice based on the different telecom types (systems)&quot;\n    }\n  },\n</pre></div>",
        "id": 192079464,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1585342807
    },
    {
        "content": "<p>what version is this IG?</p>",
        "id": 192079534,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585342850
    },
    {
        "content": "<p>hmm, but the actual slice definitions use 'patternCode' instead of 'fixedCode' like I'd expect:<br>\n      {<br>\n        \"id\": \"Organization.telecom:Phone.system\",<br>\n        \"path\": \"Organization.telecom.system\",<br>\n        \"patternCode\": \"phone\"<br>\n      },</p>",
        "id": 192079746,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1585342924
    },
    {
        "content": "<p>well, that's why you're getting that message</p>",
        "id": 192079858,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585342980
    },
    {
        "content": "<p>too many moving parts :(</p>",
        "id": 192079891,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1585342996
    },
    {
        "content": "<blockquote>\n<p>Unsupported means that the publisher doesn't currently support handling patterns for ContactPoint. (The number of types supported is actually pretty small so far - Coding, CodeableConcept, and maybe one or two others.)</p>\n</blockquote>\n<p>So that's a bit of a surprise.  I thought <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> was an advocate for using patterns even on primitives, so as to allow ids and extensions on them.  Am I misunderstanding something here?</p>",
        "id": 192084005,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1585345327
    },
    {
        "content": "<p>Agreed, I would expect pattern to be well supported by now. I've been discouraging our analysts from using fixed wherever possible.</p>",
        "id": 192084179,
        "sender_full_name": "Rick Geimer",
        "timestamp": 1585345549
    },
    {
        "content": "<p>I looked in the code and pattern only works for CodeableConcept, Coding, and Identifier.  It errors out for any other type.</p>",
        "id": 192084469,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1585345718
    },
    {
        "content": "<p>I don't think there's a misunderstanding.  At present, the code for pattern is type-specific and is being added 'as needed'.  I'd been holding off on doing anything as I wasn't clear on whether Jean's issue was a publisher issue or a FSH issue.  Jean, do you need the publisher changed?  If so, seeing as you've already found the code, do you want to make the pull request yourself?</p>",
        "id": 192088209,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1585348330
    },
    {
        "content": "<p>I have a workaround in FSH to make it specify the match as fixed.  My specific issue was a code pattern (as opposed to a ContactPoint pattern) and that should be easy to fix, but that sort of seems like a bandaid.</p>",
        "id": 192091202,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1585350649
    },
    {
        "content": "<p>I may make a pull request just to fix the method name - buildPattternExpression has one two many 't's. :)</p>",
        "id": 192091328,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1585350744
    },
    {
        "content": "<p>We just introduced a feature in FSH and SUSHI that makes pattern much more prevalent, under the understanding that pattern was generally preferred since it usually accomplished what the author wanted while not being overly constraining. When we proposed this earlier, no one mentioned this limitation of the publisher. Do we need to revisit this in FSH? Should we warn users when they use patterns on apparently unsupported types? Or can the publisher easily add more robust support for patterns?</p>",
        "id": 192099616,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1585360584
    },
    {
        "content": "<p>publisher can easily add it. We just haven't got around to it yet.</p>",
        "id": 192100603,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585362270
    },
    {
        "content": "<p>it's called JIT programming ;-)</p>",
        "id": 192100605,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585362282
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> - if it doesnâ€™t require in depth knowledge of the publisher, maybe someone on my team can do it. Is it pretty straight forward?</p>",
        "id": 192197177,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1585520626
    },
    {
        "content": "<p>not particularly straight forward</p>",
        "id": 192197359,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585520885
    },
    {
        "content": "<p>Darn.</p>",
        "id": 192197440,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1585521044
    },
    {
        "content": "<p>I can do it. We just haven't had anyone using pattern on much other than CodeableConcept, Identifier and ContactPoint. It's been on the list to do when we don't have anything else to do or when someone tries to use one of them</p>",
        "id": 192197509,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585521152
    }
]