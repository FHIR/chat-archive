[
    {
        "content": "<p>Currently our IG Publisher output contains the actual dateTime:</p>\n<ul>\n<li><code>This profile was published on Fri Aug 20 07:36:59 UTC 2021</code></li>\n<li><code>Generated 2021-08-20</code></li>\n</ul>\n<p>What options exist to have this datetime set to a value of choice (eg. fix to 2021-01-01 00:00:00) ?</p>\n<p>Rationale: do not want every output file to change upon every run</p>",
        "id": 251595659,
        "sender_full_name": "David Simons",
        "timestamp": 1630516453
    },
    {
        "content": "<p>The whole point <em>is</em> for the file to change every run - so that someone looking at a given page can distinguish what they're looking at from what someone else is looking at.</p>",
        "id": 251596443,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630516777
    },
    {
        "content": "<p>What's your reason for not wanting the files to change?</p>",
        "id": 251596550,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630516809
    },
    {
        "content": "<p>We use GitPages (from version control) and it explodes (many GBytes over time) because the timestamp changes in _every_ file, every run (commit/nightly dev builds)</p>\n<p>Even if I make a small change in one resource, almost all files in the IG Publisher output change - due to the timestamp.</p>\n<p>If only we could see the date end-up showing and chaning in only a <em>few</em> files, like the cover and footer (by reference, rather than by copy)</p>",
        "id": 251600011,
        "sender_full_name": "David Simons",
        "timestamp": 1630518244
    },
    {
        "content": "<p>(why) do you want to version control the outcome of each build?</p>",
        "id": 251602307,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630519196
    },
    {
        "content": "<p>GitPages published from /docs branch in GitHub... - which is quite convenient to published developer docs (here: IG) related to the code (here: FHIR profiles) - via the build-pipeline.</p>\n<p>Do not want to operate a separate webserver.<br>\nAnd if I did, I would like the sync/update/transfer to it to be optimized, only upload concrete changes, instead of each and every file, each and every time.</p>\n<p>Also think of the use case where the output ends up on a shared drive (OneDrive, others) - it takes _ages_ every run.</p>\n<p>btw, next to date/genDate, there's also a changing bookmark <code>&lt;a name=\"fd08ffbe-485a-4f47-8983-0d9351539d28\"&gt;</code> tag injected somewhere into every file - why not keep it fixed</p>\n<p>I think there are many benefits (and ways) to minimizing the diff between IG runs - while keeping the current functionaliy. That optimization is what I am looking for :)</p>",
        "id": 251602763,
        "sender_full_name": "David Simons",
        "timestamp": 1630519336
    },
    {
        "content": "<p>/docs is a branch, or a folder?</p>",
        "id": 251604698,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630520101
    },
    {
        "content": "<p>(do you have this on a repo I can see to understand)?</p>",
        "id": 251604735,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630520113
    },
    {
        "content": "<p>Several people are using github pages (I presume that is the long name for gitpages), without a need to commit the output folder (which indeed changes every build, but that's good)</p>",
        "id": 251605242,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630520294
    },
    {
        "content": "<p>our github workflow is (or was, not sure) prepared to upload e.g. to an FTP server. It worked (although it is not used because FTP uploads should not be done on every build, but on every release)</p>",
        "id": 251605447,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630520388
    },
    {
        "content": "<p>the injected tag is only for errors in qa.html, and there's no memory of what they are. but you shouldn't have any, or many. So I don't see that there's value in figuring out how to remember what they are</p>",
        "id": 251614537,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630524185
    },
    {
        "content": "<p>otherwise, the time of creation is under your control in the template</p>",
        "id": 251614598,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630524219
    },
    {
        "content": "<p>Grahame is correct, you can override the template I guess.  But if you're going to do that, I'd strip out the timestamp entirely - don't set it to a fixed value that isn't accurate.</p>",
        "id": 251618162,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630525626
    },
    {
        "content": "<p>(And you can't override the template if you're publishing within HL7)</p>",
        "id": 251618191,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630525642
    },
    {
        "content": "<p>I've avoided this kind of git bloat issue in the past by using a separate <code>publish</code> branch specifically for the .html files to be served, and then using <code>git commit --amend</code> to avoid creating a new commit (and thus repo bloat) every time the files change. This will require force pushing the <code>publish</code> branch, but that seems ok if it's _only_ being used for seeding content to a web server.</p>\n<p>(I use <code>git worktree</code> to check both <code>master</code> and <code>publish</code> out at once in separate folders to make it easy to copy content from one to the other)</p>",
        "id": 251618254,
        "sender_full_name": "Max Masnick",
        "timestamp": 1630525673
    },
    {
        "content": "<p>I still don't understand the need to commit the output folder.</p>",
        "id": 251619510,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630526198
    },
    {
        "content": "<p>because you're not using <a href=\"http://build.fhir.org\">build.fhir.org</a> / the ci-build.</p>",
        "id": 251619556,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630526222
    },
    {
        "content": "<p>(I fixed my question).</p>",
        "id": 251619598,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630526244
    },
    {
        "content": "<p>Not using <a href=\"http://build.fhir.org\">build.fhir.org</a> does not mean one should commit the output folder</p>",
        "id": 251619669,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630526280
    },
    {
        "content": "<p>because the most common alternative is to want to use GitHub pages, and so you do</p>",
        "id": 251619826,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630526347
    },
    {
        "content": "<p>though there's no technical or policy reason not to use <a href=\"http://build.fhir.org\">build.fhir.org</a></p>",
        "id": 251619858,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630526359
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Minimize.20diff.20in.20output.20files.20of.20subsequent.20IG.20Publisher.20.2E.2E.2E/near/251619826\">said</a>:</p>\n<blockquote>\n<p>because the most common alternative is to want to use GitHub pages, and so you do</p>\n</blockquote>\n<p>we have a few things on github pages and I don't commit the output folder, which is why I'm missing the point</p>",
        "id": 251620362,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630526544
    },
    {
        "content": "<p>my personal reason for using github pages... I don't personally have access to a web server, and the IG I do this with is not to be seen by the general public (so I can't let ci-build build it).</p>",
        "id": 251622134,
        "sender_full_name": "John Moehrke",
        "timestamp": 1630527282
    },
    {
        "content": "<p>yes that's a valid reason</p>",
        "id": 251622795,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630527518
    },
    {
        "content": "<p>i use github pages for a guide with similar reasons as John and I check in the output folder because I haven't set up the hooks to build it.  so it builds locally and I check in the output into a publish folder and then \"bob's your uncle\" and the guide is served to my closed community.</p>",
        "id": 251623331,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1630527771
    },
    {
        "content": "<blockquote>\n<p>my personal reason for using github pages... I don't personally have access to a web server, and the IG I do this with is not to be seen by the general public (so I can't let ci-build build it).</p>\n</blockquote>\n<p>Aren't GitHub pages public?</p>",
        "id": 251627075,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630529408
    },
    {
        "content": "<p>they are</p>",
        "id": 251627161,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630529437
    },
    {
        "content": "<p>but they are not in that-place-where-everyone-sees-what's-happening (I guess that would be the reason)</p>",
        "id": 251627246,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630529475
    },
    {
        "content": "<p>search engines will find them, they will be public</p>",
        "id": 251627502,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630529570
    },
    {
        "content": "<p>(To be clear, I think there are plenty of good reasons for putting built IG content in version control and agree that the proposal in this thread is worthwhile -- just want to be clear about goals here.)</p>",
        "id": 251627936,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630529755
    },
    {
        "content": "<p>I wonder what those reasons are. There may be, my question above is because using github pages don't necessarily require committing the built content</p>",
        "id": 251628182,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630529864
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191315\">Josh Mandel</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Minimize.20diff.20in.20output.20files.20of.20subsequent.20IG.20Publisher.20.2E.2E.2E/near/251627075\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>my personal reason for using github pages... I don't personally have access to a web server, and the IG I do this with is not to be seen by the general public (so I can't let ci-build build it).</p>\n</blockquote>\n<p>Aren't GitHub pages public?</p>\n</blockquote>\n<p>The Git repository and github pages that my client are using don't seem to be public.  They aren't searchable and have a specialized URL, but I could be completely wrong about that. :)</p>",
        "id": 251628868,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1630530120
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"192166\">Jean Duteau</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Minimize.20diff.20in.20output.20files.20of.20subsequent.20IG.20Publisher.20.2E.2E.2E/near/251628868\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191315\">Josh Mandel</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Minimize.20diff.20in.20output.20files.20of.20subsequent.20IG.20Publisher.20.2E.2E.2E/near/251627075\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>my personal reason for using github pages... I don't personally have access to a web server, and the IG I do this with is not to be seen by the general public (so I can't let ci-build build it).</p>\n</blockquote>\n<p>Aren't GitHub pages public?</p>\n</blockquote>\n<p>The Git repository and github pages that my client are using don't seem to be public.  They aren't searchable and have a specialized URL, but I could be completely wrong about that. :)</p>\n</blockquote>\n<p>shhh... also my github is too.. but</p>",
        "id": 251628949,
        "sender_full_name": "John Moehrke",
        "timestamp": 1630530143
    },
    {
        "content": "<p>(Using GitHub pages does require commiting built content, though it may be on an orphan branch.)</p>",
        "id": 251628966,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630530149
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191832\">Jose Costa Teixeira</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Minimize.20diff.20in.20output.20files.20of.20subsequent.20IG.20Publisher.20.2E.2E.2E/near/251628182\">said</a>:</p>\n<blockquote>\n<p>I wonder what those reasons are. There may be, my question above is because using github pages don't necessarily require committing the built content</p>\n</blockquote>\n<p>I don't think anyone was saying that it <em>required</em> committing the output directory, but that if you didn't want go through with the setup of a Git hook to generate the content that was served by GitHub pages, that this was an easy way of getting them available.</p>",
        "id": 251629063,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1630530195
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191832\">Jose Costa Teixeira</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Minimize.20diff.20in.20output.20files.20of.20subsequent.20IG.20Publisher.20.2E.2E.2E/near/251628182\">said</a>:</p>\n<blockquote>\n<p>I wonder what those reasons are. There may be, my question above is because using github pages don't necessarily require committing the built content</p>\n</blockquote>\n<p>releases. Each release that IHE publishes is put into a github repo that is staging for their web site. but the incremental (ci-builds) do NOT go there.</p>",
        "id": 251629139,
        "sender_full_name": "John Moehrke",
        "timestamp": 1630530236
    },
    {
        "content": "<p>Right. My point was to check what <span class=\"user-mention\" data-user-id=\"194580\">@David Simons</span> wanted to do. Perhaps a simple github workflow would solve that</p>",
        "id": 251629189,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630530244
    },
    {
        "content": "<p>my experience with github is that it ignores changes that do not result in a hash change. so just date change does not take up space.</p>",
        "id": 251629609,
        "sender_full_name": "John Moehrke",
        "timestamp": 1630530399
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Minimize.20diff.20in.20output.20files.20of.20subsequent.20IG.20Publisher.20.2E.2E.2E/near/251629139\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191832\">Jose Costa Teixeira</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Minimize.20diff.20in.20output.20files.20of.20subsequent.20IG.20Publisher.20.2E.2E.2E/near/251628182\">said</a>:</p>\n<blockquote>\n<p>I wonder what those reasons are. There may be, my question above is because using github pages don't necessarily require committing the built content</p>\n</blockquote>\n<p>releases. Each release that IHE publishes is put into a github repo that is staging for their web site. but the incremental (ci-builds) do NOT go there.</p>\n</blockquote>\n<p>Possibly. I do think that can/should be handled by a workflow (I'm hopping to look into it soon). But David's point is about the daily/many builds, which I don' see why are being committed</p>",
        "id": 251629653,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630530418
    },
    {
        "content": "<p>well.. my private publication experience... I do put into github pages anytime I need to share iwth my private team... so, yes it results in many things I have decided \"to publish\".</p>",
        "id": 251629862,
        "sender_full_name": "John Moehrke",
        "timestamp": 1630530504
    },
    {
        "content": "<p>if you you fall into the need for private publications, (can't use ci-build), then you are taking on burden. you need to deal with that burden somehow. the more painful, the more likely you will come back and use <a href=\"http://build.fhir.org/ig\">build.fhir.org/ig</a> --- because it really is not that public.</p>",
        "id": 251630047,
        "sender_full_name": "John Moehrke",
        "timestamp": 1630530587
    },
    {
        "content": "<p>i commit anytime that I have a build that I want my client to see.</p>",
        "id": 251630438,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1630530746
    },
    {
        "content": "<p>Right. I wanted to ask <span class=\"user-mention\" data-user-id=\"194580\">@David Simons</span> what are his needs, because maybe we can solve that with a simple workflow like this one<br>\n<a href=\"https://github.com/IHE/empty-fhir-profile/blob/master/.github/workflows/main.yml\">https://github.com/IHE/empty-fhir-profile/blob/master/.github/workflows/main.yml</a></p>",
        "id": 251630709,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630530877
    },
    {
        "content": "<p>Is there a way we could put the \"publication date\" in a single JS file or something and have it just render on every page?  That way the only page that would change is that one file.  That would seem to be the best of both worlds...</p>",
        "id": 251632589,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630531833
    },
    {
        "content": "<p>I guess we could consider that, but if the purpose is to publish on github pages, aren't people better served by having a workflow that already exists?</p>",
        "id": 251633368,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630532252
    },
    {
        "content": "<blockquote>\n<p>Is there a way we could put the \"publication date\" in a single JS file</p>\n</blockquote>\n<p>not for static HTML publications, because it requires server side support, and that's not in the picture, but it doesn't matter there. For someone publishing through github pages, they have more options, and it could be done - a template thing</p>",
        "id": 251633478,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630532307
    },
    {
        "content": "<p>from David's original question I thought he could be simply missing a github workflow. <br>\nI mean, we can minimize the impact of a) manually building the IG and b) manually uploading the output to gh pages, <strong>or</strong> perhaps we can just have gh pages without any of that manual work</p>",
        "id": 251633901,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630532527
    },
    {
        "content": "<p>The point is you have to commit your  entire output (typically to  /docs directory), but even after a small edit you must commit the entire ig output since all page are updated all the time. (I don't know any git tricks to avoid this since you don't necessary know a priori which files have been  updated  based on the edit and which are changed based on the updated timestamp.) I agree with the original proposal to have an IG parameter to override the dynamic datetime with a  static datetime.</p>",
        "id": 251634552,
        "sender_full_name": "Eric Haas",
        "timestamp": 1630532872
    },
    {
        "content": "<p>I'm confused with why we need to commit the output. If we want to do manual work, yes. In the workflow I mentioned, the workflow builds and automatically copies the output folder to a separate branch (could be a separate folder), so there's no need to copy anything</p>",
        "id": 251635131,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630533130
    },
    {
        "content": "<p>I don't see why we should have an ig parameter (\"publication-date=...\"?). Perhaps I'm missing something but this seems a solution to a problem that doesn't need to exist</p>",
        "id": 251635434,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630533288
    },
    {
        "content": "<p>\"Your GitHub Pages site is currently being built from the /docs folder in the master branch. Learn more.\"</p>\n<p><a href=\"/user_uploads/10155/x50uUCMSmzoYE21oWbrUUFNS/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/x50uUCMSmzoYE21oWbrUUFNS/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/x50uUCMSmzoYE21oWbrUUFNS/image.png\"></a></div>",
        "id": 251635690,
        "sender_full_name": "Eric Haas",
        "timestamp": 1630533414
    },
    {
        "content": "<p>the docs folder contains all the static site content created by the ig-publisher.  You can try it out,  easy to set up.</p>",
        "id": 251636035,
        "sender_full_name": "Eric Haas",
        "timestamp": 1630533585
    },
    {
        "content": "<p>you could do that, but seems more complicated. Perhaps I should ask the other way around:<br>\nIf we have a <a href=\"https://github.com/IHE/empty-fhir-profile/blob/master/.github/workflows/main.yml\">workflow</a> that automatically publishes <a href=\"https://ihe.github.io/empty-fhir-profile/\">gh-pages</a>, why would we do the manual work? What would be missing?</p>",
        "id": 251636290,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630533665
    },
    {
        "content": "<p>(I don't know if there's a reason for putting the built content in the main/master branch)</p>",
        "id": 251636744,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630533890
    },
    {
        "content": "<p>don't know if there are other workflow that avoid the bloat described above.</p>",
        "id": 251637118,
        "sender_full_name": "Eric Haas",
        "timestamp": 1630534114
    },
    {
        "content": "<p>I think this one does avoid that bloat (again, assuming that the bloat is unnecessary)</p>",
        "id": 251637427,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630534315
    },
    {
        "content": "<p>as I've said a couple of times, my client is not interested in setting up a workflow.  They regularly have github pages set up with repositories and wanted the same thing for the FHIR IG.  Since we have an output directory already, this fit into their desires perfectly.  I don't have David's concern of changing every file on a commit, but saying \"we've solved your problem by making you not check in your output folder\" isn't the right answer.</p>",
        "id": 251637934,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1630534611
    },
    {
        "content": "<p>I hope David can setup a workflow and avoid the issues AND the manual labour. <br>\nI would consider that (and other alternatives) before adding an issue to the IGPublisher.</p>",
        "id": 251638618,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630535013
    },
    {
        "content": "<p>Checking the published folder is an expected source for such problems, I think most people can avoid that.</p>",
        "id": 251639042,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630535249
    },
    {
        "content": "<p>I don't understand Jose.  The issue expressed is that people who use github pages want the number of commits to be smaller.  If instead of changing every file, we'd achieve that end with a change that would work for everyone, and everyone would still have a footer at the bottom of the page that said when the release was created.</p>",
        "id": 251642047,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630537390
    },
    {
        "content": "<p>I don't read the problem as wanting the number of commits to be smaller. I read the problem as<br>\n\"we do a lot of commits to keep things up to date and we use gh pages. This means our master branch is changing too many files that wouldn't need to be changed because the content is the same\"</p>",
        "id": 251642728,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630537851
    },
    {
        "content": "<p>The request was \"let us fix the date so it doesn't change to avoid needing to commit so many files\".  If the date doesn't appear in the files, that would address the problem - but still allow the date to be rendered.</p>",
        "id": 251642984,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630538022
    },
    {
        "content": "<p>It wouldn't fix the QA issue, but the solution there is \"minimize the number of pages in your IG that have QA issues\" :)</p>",
        "id": 251643044,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630538044
    },
    {
        "content": "<p>and there's a few things that can be done to improve that. <br>\nWe could change the template to static. Or we could make it dependent on the  package.json</p>",
        "id": 251643046,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630538047
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179252-IG-creation/topic/Minimize.20diff.20in.20output.20files.20of.20subsequent.20IG.20Publisher.20.2E.2E.2E/near/251642984\">said</a>:</p>\n<blockquote>\n<p>The request was \"let us fix the date so it doesn't change to avoid needing to commit so many files\".  If the date doesn't appear in the files, that would address the problem - but still allow the date to be rendered.</p>\n</blockquote>\n<p>And I was asking \"why does the OP need that\", hoping that he can make his life better :).</p>",
        "id": 251643237,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630538165
    },
    {
        "content": "<p>I did not get a confirmation from David, so I don't know if he can be better served with a workflow. If not, or if others can't, we can change the template.<br>\nPersoanlly, I like the fact that a CI-build tells me when it has been built. I can see immediately if this is as expected. <br>\nI think static dates should be for a Release, not the CI. <br>\nI'm not saying \"we should not address that\", I'm saying \"do you think you want to try this way of having ghpages before you need to change your template?\"</p>",
        "id": 251643495,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630538397
    },
    {
        "content": "<p>We <em>want</em> the CI build to contain the date on every file.  But we <em>also</em> want most of the files to not change just because of the date.  If the footer says \"display value returned by Javascript function X\", where there's a small Javascript file that spits out the publication date, then that should satisfy both sets of requirements.</p>",
        "id": 251650480,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630543472
    },
    {
        "content": "<p>won't work when not hosted on a server. Sandbox reasons</p>",
        "id": 251655557,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630548061
    },
    {
        "content": "<p>The randomly changing bookmark value seems worth addressing, because it's pure line noise.</p>\n<p>The dates in the footers of files, as well as the generated dates that sit inside of definitional artifacts ... these serve a function. (I could imagine a flag to the publisher that would override the bill time with something user specified... like <code>-overrideBuildTime 2020--01-01T00:00:00Z</code> if we really wanted to give people a way to get stable outputs.)</p>",
        "id": 251657598,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630550062
    },
    {
        "content": "<p>Is there any other way to get content to render on a static page without it living on that page?  Would \"Github pages\" be considered a server?  If they would and it would work on the CI-build or any other officially hosted server, do we care if the script wouldn't display the timestamp when you're just looking at a downloaded copy?  For that, we'd have the dates inside the zip file or on your harddrive...</p>",
        "id": 251659751,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630552092
    },
    {
        "content": "<p>the sandbox environment is tough. I could spend some time looking that, but it's time I won't be doing other things</p>",
        "id": 251659930,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630552305
    },
    {
        "content": "<p>Ok.  So seems like short-term solution is: override the footer in your template so it doesn't include the timestamp.  (And fix as many of your QA issues as you can.)<br>\nLonger term solution: submit a Git issue against the <a href=\"https://github.com/HL7/ig-template-base/issues\">base template</a> and - at some point - we'll see if we can get the timestamp to show up with out it changing every single page each time you build.</p>",
        "id": 251660154,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630552538
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"194580\">@David Simons</span>)</p>",
        "id": 251660169,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630552560
    },
    {
        "content": "<p>well, next version of the IG publisher will not generate uuids any more. It will use serial numbers unique in each file. This will be more stable (not deterministic though)</p>",
        "id": 251662330,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630554828
    },
    {
        "content": "<p>Wow thank you all :) waking up to a lot of good responses</p>\n<p>I changed the title to describe the <em>problem</em> we have - and not per se imply a <em>solution</em>.</p>\n<p>We use GitHub Enterprise as _Innersource_ - and when folks contribute to the FHIR profiles in our Git repo, we also use IG Publisher to generate updated developer views on those profiles.<br>\nA GitAction runs the IG Publisher against the FHIR profiles on /master branch, and commits the generated output to our /docs branch.<br>\nAnd indeed GitHub Pages is configured to take a specific branch (/docs for us) and deploy it automatically on the built-in \"webserver\". Our GitPages are private, company internal, not public.</p>\n<p>Our problem is that if we run the Git Action 2x in a row - without any change of the underlying FHIR profiles - almost all of the output files have changes - leading to an overhead (on version control. on file syncs, etc.).<br>\nSo the /docs branch is exploding.</p>\n<p>From the commit diff - and hence diff between subsequent IG Publisher runs - I noticed that this is due to (primarily) 1) changed date+genDate timestamps, and (sometimes) 2) &lt;a name=\"&lt;GUID&gt;\"&gt; html bookmarks.<br>\nThe timestamps are the primary root cause.</p>\n<p>Hence my initial request to see if there is a quick turnaround to fix/strip these dates - but I'd prefer a more structural approach to optimizing the output to minimize the diff in output files of subsequent IG Publisher runs on the same input. Since it it is good to have dates includes - see below.</p>\n<p>I was able to remove the Generated from the footer, but can not readily remove the \"date\"attributes being added in the main page. Need to dig deeper in the templates.<br>\nNote that our FHIR profiles in the repo do NOT have a date attribute - since the repo does timestamping at development time. Yet, the IG output does have these .date attributes filled with the genDate it seems.</p>\n<p>Fundamentally, I think there is a difference between<br>\n1) Last modified (for us the last change to a profile in version control) - which could be inputted via the FHIR profile .date attribute.<br>\n2) Last build/generated - the timestamp of running the IG Publisher, doing validation, snapshot generation, and output rendering (genDate?)<br>\n3) Last released/packaged (e.g. as part of a program increment/formal release cycle) - a special version of 1+2 - aligning all to a fixed, but customizable timestamp.</p>",
        "id": 251676718,
        "sender_full_name": "David Simons",
        "timestamp": 1630568020
    },
    {
        "content": "<p>The <a href=\"http://profile.date\">profile.date</a> element is not reliable.  Also, even if a profile is unchanged, the snapshot can change - either because of a tooling change (now uncommon but still potential) or because the underlying resource has changed.  Same goes for value sets where the page will include a snapshot of the expansion.  The 'publication' date is thus very important to know if you're looking at the same thing or not.</p>",
        "id": 251752743,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630603575
    },
    {
        "content": "<p>I agree, the current model is the more likely correct model. I struggle with how to do the right thing most of the time and for the dominant need; while having a special case to make this specific usecase more well behaved.</p>",
        "id": 251760835,
        "sender_full_name": "John Moehrke",
        "timestamp": 1630606517
    },
    {
        "content": "<p>Thank you. Generating and sharing a regular dev build of an NPM+IG seems like a dominant need to me :) <br>\nI do agree that timestamping such a build is highly preferable.</p>\n<p>The current implementation - timestamping by copy - has become troublesome with GitHub Pages, for us at least. </p>\n<p>Example commit of one IG run on our repo:<br>\n<a href=\"/user_uploads/10155/DoGvsgBeKi76SIk43UG4Zr7e/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/DoGvsgBeKi76SIk43UG4Zr7e/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/DoGvsgBeKi76SIk43UG4Zr7e/image.png\"></a></div>",
        "id": 251768877,
        "sender_full_name": "David Simons",
        "timestamp": 1630609440
    }
]