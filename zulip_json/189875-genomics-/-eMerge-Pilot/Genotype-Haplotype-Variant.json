[
    {
        "content": "<p>Not 100% clear on how to deal with representing a diplotype like CYP2C19 <em>2/</em>3. We need to represent the actual set of variants that comprise the individual haplotypes in this case a CYP2C19 *2 haplotype and a CYP2C19 *3 haplotype.  For brevity sake, let's say that there are 3 locations along the CYP2C19 gene sequence that are actually observed and used to determine the changes with a phase of in-cis that will be used to derive the *2 and *3 haplotypes. Since there are 3 positions on each copy of the gene's allele then we would presumably need to represent 6 variant findings (3 for the *2 haplotype and 3 for the *3 haplotype).</p>\n<p>I was going to simply list the unique variants (including any that are same as reference and needed to define the haplotypes). I was going to leave out the zygosity of these variants so they would not have any phase information. However these type of variant findings are not really sensible in that you might have the same variant be referenced by both haplotypes.  In actuality these variants are different since they are on different alleles, and this may cause confusion or concern.</p>\n<p>If the variant was purely a definitional represenation of the variant and not an observation representation then when it is associated with the haplotype it can be used in an observational way and thus the reuse would make sense. But we do not have the ability to define variants only variant observations.</p>\n<p>If we share the variants with their zygosity (or the genotype form of the variant) then it becomes confusing in referencing it from the haplotype as it wouldn't be possible to directly reference the alternate variant in this heterozygous form.</p>\n<p>I realize this is tricky to communicate in this form, but the issue is that it seems difficult or not possible to accurately use the genotype-&gt;haplotype-&gt;variant structure without either referencing the same variant for both copies of a genotype. But I may be overthinking it.</p>\n<p>Anyone that has tried this please share your thoughts.</p>",
        "id": 165123727,
        "sender_full_name": "Larry Babb",
        "timestamp": 1557275569
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"209510\">@Larry Babb</span> , </p>\n<p>We haven't been using the derivedFrom link between Haplotype and Variant. We do use the SequencePhaseRelationship profile to assert CIS or TRANS relationships between variants where we have that information from the VCF file. It may be easier to just report haplotypes and variants independently, ignoring derivedFrom, especially since haplotypes are generally a best guess anyhow, based on a variety of algorithms (e.g. PharmCAT, population frequency-based). I'm not exactly sure how anyone would use the derivedFrom information, and I personally feel that Haplotype.method is more important. If haplotypes are directly observed from long reads, then they would be derivedFrom the MolecularSequence.</p>",
        "id": 165126610,
        "sender_full_name": "Bob Dolin",
        "timestamp": 1557279509
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"193751\">@Bob Dolin</span> for the quick response. And this is an interesting perspective, I'm going to verify with the two emerge sequencing centers to verify if they would find it helpful or useful to send only star allele representations without the precision to represent them more accurately. I do recognize  that it would be easier to do so, but I think the challenge is to send information that is computationally useful. I've been running under the assumption that the star allele calls by themselves may be helpful but can have a significant difference in what they really are from lab to lab.</p>\n<p>I may end up following your suggestion, but I will find out from the labs if simply stating the star allele name is good enough for CDS without the backing information to verify it or its precision. I'll let you know what they say.</p>\n<p>In any case, I still have an issue with how to use the Genotype derivedFrom Haplotype relationship.  And I think the concern would still apply if I used the SequencePhaseRelationship profile as you suggested.  </p>\n<p>The point is that each Genotype, Haplotype (and Variant) is based on the notion of an observation, so they each represent an instance of an observed Genotype, Haplotype, etc..  So if we find that a patient is <em>2/</em>2 (homozygous, 2 copies of *2) then do I create two separate Haplotype observations , one each for the two instances of *2, or do I create one and refer to it 2x from the derivedFrom attribute of the Genotype.  Both of these options seem wrong to me as it would be unclear in the first option which Haplotype observation was which and might seem like errant reporting. But the second option also seems wrong in that a homozygous genotype of <em>2/</em>2 shouldn't point to the same Haplotype more than once. </p>\n<p>If these Observations are not instances or occurrences of  variation found in the specimen/subject but more of definitional representations, then a whole bunch of other presumptions seem to break.  </p>\n<p>I do think this is a really strong argument for why I've been saying that we need a way to represent the definitional form of variation independent of the observation occurrences.  Since we don't have true coding systems and databases of all the variants that we can standardize and use (similar to diseases and phenotypes) we need an outlet to define these patient independent forms of variants so that we can then reference them in terms of how and when they are observed in the context of a sample/specimen.</p>\n<p>Anyway, any further insights would be helpful.</p>",
        "id": 165150172,
        "sender_full_name": "Larry Babb",
        "timestamp": 1557310662
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"209510\">@Larry Babb</span> , <br>\nAnother thought - If I'm running PharmCAT, I'm feeding all variants and relevant wildtypes into the algorithm, which is then computing a genotype. So in this case, haplotypes are derived from all the variants fed into the algorithm, and both haplotypes are derived from the same set of variants. From there, you'd have haplotype.method to tell you what algorithm was used. </p>\n<p>I do think that in the case of GENE <em>2/</em>2, it would be incorrect to assert two derivedFrom links from the genotype to a single haplotype.</p>",
        "id": 165187159,
        "sender_full_name": "Bob Dolin",
        "timestamp": 1557339459
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"193751\">@Bob Dolin</span>. I appreciate the feedback. <br>\nHowever, it seems like the fundamental issue remains...</p>\n<p>In order to use \"derivedFrom\" in Genotype or Haplotype, the observations that one higher order \"composite\" Observation uses to derive itself should be discrete/independent Observations in themselves.  This means that we need to represent a homozygous genotype by deriving it from two independent but identical Observations that represent the Haplotype that is homozygous.  Same goes for any Observations that are deriving themselves from ObsVariant profiles as well.  </p>\n<p>To me this is a fundamental issue that must be resolved in a manner that does not cause confusion to the producer or consumer of these Observations.  Either that or the CG might consider removing/replacing the \"derivedFrom\" guidance, significantly re-defining and providing constraints on its use to support use cases for homozygosity and use of identical but truly independent sub observations, or finding a pathway to a small set of data types/resources that can be used to \"define\" variants so they may be referenced in observations such that it separates the definitional aspect of the resource from the observational aspect.</p>\n<p>It is impressive that the CG has been able to get to this point with the DR and OBS profiles without having the data type and/or resource building blocks needed to define the incredibly complex and detailed aspects of genetics which all of these results are based on.  Observation profiling seems to be falling into the same trap as the V2 Z-segment issues whereby folks use it to capture all the stuff that doesn't have a home anywhere else. It would be really great to not repeat that in FHIR to the extent we can.</p>",
        "id": 165243459,
        "sender_full_name": "Larry Babb",
        "timestamp": 1557401028
    },
    {
        "content": "<p>We did get a list of the precise sites that were measured to arrive at the various star allele meanings and we will be using that to create these more accurate representations of star alleles. I do think the entire use of star alleles (while very standard in reporting results) has some significant concerns from a computational use standpoint and thus should be addressed.  I think it is better to clarify how the lab arrived at the star allele representation then to simply pass only the representation and let them weed through the methodology or other narratives provided to try to decipher if their patient was measured with the same accuracy and thoroughness as a competing lab's test.  These tests may have implications based on population and other testing technology capabilities that could be very helpful to aiding a system and the physician to understanding exactly how reliable the information is.</p>\n<p>In any case, we will do our best to pass this information, possibly by expressing the individual sites as variants with zygosity and bypassing the haplotype construction but instead going directly to the genotype/diplotype.  I think this is much better aligned to what the lab is actually doing to make their best guess as the phasing when it is not clear.  Actually, in some cases they will report that the combination of sites variants observed could be one of two diplotypes (since they can't be sure of the phasing). So I can make this work using this approach.</p>",
        "id": 165245569,
        "sender_full_name": "Larry Babb",
        "timestamp": 1557403239
    },
    {
        "content": "<p>It's a good point <span class=\"user-mention\" data-user-id=\"209510\">@Larry Babb</span> , that often times the star allele is ambiguous. In our work, we're just feeding the variants+zygosity+phase information to a CDS engine, so are only using the Variant profile. But perhaps there is a need to take a closer look at <span class=\"user-mention\" data-user-id=\"191916\">@ Bob Milius</span>  work on the Genotype List String, which can represent the ambiguity in HLA genotyping.</p>",
        "id": 165260671,
        "sender_full_name": "Bob Dolin",
        "timestamp": 1557414163
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191916\">@ Bob Milius</span> can you point me at this \"Genotyep List String\" concept that <span class=\"user-mention\" data-user-id=\"193751\">@Bob Dolin</span> is referring too? Is this an alternative to the Genotype/Haplotype/Variant \"derivedFrom\" approach that is described in the IG currently?</p>",
        "id": 165532684,
        "sender_full_name": "Larry Babb",
        "timestamp": 1557757148
    },
    {
        "content": "<p>whoops. I meant to include that: <a href=\"https://www.ncbi.nlm.nih.gov/pubmed/23849068\" target=\"_blank\" title=\"https://www.ncbi.nlm.nih.gov/pubmed/23849068\">https://www.ncbi.nlm.nih.gov/pubmed/23849068</a></p>",
        "id": 165536240,
        "sender_full_name": "Bob Dolin",
        "timestamp": 1557759537
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"209510\">@Larry Babb</span>  <a href=\"https://glstring.org/syntax.html\" target=\"_blank\" title=\"https://glstring.org/syntax.html\">https://glstring.org/syntax.html</a><br>\nThis was created to describe allele and genotype ambiguities for HLA &amp; KIR, but the syntax is nomenclature agnostic as long as it doesn't collide with the glstring delimiters (^|+-/). Right now the code system supports HLA &amp; KIR, but other namespaces/nomenclatures can be added. For use in HL7 FHIR, we use the code system <a href=\"http://glstring.org\" target=\"_blank\" title=\"http://glstring.org\">http://glstring.org</a> and a code of the the form namespace#version#glstring e.g., here is a glstring code for genotype for HLA-C that contains an ambiguous allele.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;valueCodeableConcept&gt;</span>\n    <span class=\"nt\">&lt;coding&gt;</span>\n        <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;https://glstring.org&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;version</span> <span class=\"na\">value=</span><span class=\"s\">&quot;1.0&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;hla#3.31.0#HLA-C*06:02:01:01/HLA-C*06:02:01:10+HLA-C*07:02:01:03&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/coding&gt;</span>\n<span class=\"nt\">&lt;/valueCodeableConcept&gt;</span>\n</pre></div>",
        "id": 165661796,
        "sender_full_name": " Bob Milius",
        "timestamp": 1557867565
    },
    {
        "content": "<p>Bob's glstrings are a very convenient shorthand for HLA. But don't be afraid to use the a more complex representation that utilizes phase. Don't want to push you in either direction. But with all the options for sending genetic data, normalization will continue to be a problem.</p>",
        "id": 173762318,
        "sender_full_name": "Bret H",
        "timestamp": 1566359316
    },
    {
        "content": "<p>GLStrings can describe alleles being in phase using the \"~\" delimiter.  The string <br>\n<code>HLA-A*02:302~HLA-B*44:02+HLA-A*23:26~HLA-B*49:08</code><br>\ndescribes a genotype containing phased HLA-A and HLA-B alleles. (made up example).</p>",
        "id": 174254453,
        "sender_full_name": " Bob Milius",
        "timestamp": 1566929424
    }
]