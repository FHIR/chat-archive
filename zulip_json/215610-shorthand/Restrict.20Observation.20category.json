[
    {
        "content": "<p>Hello,<br>\nI would like to specify that a specific category coding (system=http://terminology.hl7.org/CodeSystem/observation-category code=laboratory) is present in the array of codeable concepts of <code>Observation.category</code>. Other codings should be allowed too and other codeableconcepts should be allowed. But the one I want to check needs to be present.</p>\n<p>I tried the following:</p>\n<div class=\"codehilite\"><pre><span></span><code>Alias: ObsCategory = http://terminology.hl7.org/CodeSystem/observation-category\n\n* category 1.. MS SU\n* category = ObsCategory#laboratory\n</code></pre></div>\n<p>But this allowed category to only one codings of another system.</p>\n<p>I also tried some slicing on <code>category</code>, but wasn't able to get to what I want. Here is what I tried:</p>\n<div class=\"codehilite\"><pre><span></span><code>* category 1..\n* category ^slicing.discriminator.type = #pattern\n* category ^slicing.discriminator.path = &quot;coding&quot;\n* category ^slicing.rules = #open\n* category ^slicing.description = &quot;Slice based on category.code pattern&quot;\n* category contains labCategory  1..1 MS\n* category[labCategory] = ObsCategory#laboratory\n</code></pre></div>\n<p>When trying to validate against the profile containing this slice, I'm getting the following error:<br>\n<code>Internal error: Could not match discriminator ([coding]) for slice Observation.category:labCategory in profile https://.../lab-value - the discriminator [coding] does not have fixed value, binding or existence assertions</code></p>\n<p>Any tips on how to accomplish my task? <br>\nThank you.</p>",
        "id": 235635937,
        "sender_full_name": "Christian Nau",
        "timestamp": 1619078462
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> I saw a similar category slicing here <a href=\"https://github.com/HL7/genomics-reporting/blob/master/input/fsh/CGGeneral.fsh\">https://github.com/HL7/genomics-reporting/blob/master/input/fsh/CGGeneral.fsh</a> and was wondering how this worked for your team there?</p>",
        "id": 235643627,
        "sender_full_name": "Christian Nau",
        "timestamp": 1619082562
    },
    {
        "content": "<p>the difference is the last row:<br>\n<code>* category[labCategory].coding = ObsCat#laboratory</code><br>\nif you slice on coding, you have to set the pattern on coding as well</p>",
        "id": 235644235,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1619082901
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span>!  This shows me one mor time that men are no computers. I compared my implementation to the other one several times and could not find any differences. </p>\n<p>Anyways, the problem is still not solved. Now I get a new error when trying to validate against the profile:<br>\n<code>Failed to call access method: java.lang.Error: Error in profile  at Observation.category: Base isSummary = false, derived isSummary = true</code></p>",
        "id": 235645433,
        "sender_full_name": "Christian Nau",
        "timestamp": 1619083577
    },
    {
        "content": "<p>Are you doing something with <code>isSummary</code> or is that error coming out of the blue?</p>",
        "id": 235672614,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1619096614
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> No, I'm not setting any <code>SU</code> flag anywhere in this Profile.</p>",
        "id": 235673347,
        "sender_full_name": "Christian Nau",
        "timestamp": 1619096899
    },
    {
        "content": "<p>Then that error seems... odd.  Without seeing it, however, I can't tell if SUSHI is exporting something wrong in the SD JSON or if the IG Publisher is just doing something wacky on its own.  Is this publicly available somewhere?</p>",
        "id": 235674172,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1619097214
    },
    {
        "content": "<p>I just pushed the structuredefinition resource to my HAPI(SmileCDR) backend and then tried to validate a new instance using the <code>{baseUrl}/Observation/$validate</code> endpoint. The structure definition is created using sushi compile for this fsh code:<br>\n<a href=\"https://fshschool.org/FSHOnline/#/share/2Qnas92\">https://fshschool.org/FSHOnline/#/share/2Qnas92</a></p>",
        "id": 235676233,
        "sender_full_name": "Christian Nau",
        "timestamp": 1619097949
    },
    {
        "content": "<p>Strange, I tested it again now and validation succeeded. Maybe SmileCDR needed some time to \"see\" the updated profile? I have no clue what is going on. Thanks <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> for having a look.</p>",
        "id": 235676779,
        "sender_full_name": "Christian Nau",
        "timestamp": 1619098139
    },
    {
        "content": "<p>Ha.  OK.  I just started to look at it, but I'll stand down!</p>",
        "id": 235677030,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1619098221
    },
    {
        "content": "<p>While I'm looking, though... a few thoughts...  Re:</p>\n<div class=\"codehilite\"><pre><span></span><code>// Check category\n* category 1..\n* category ^slicing.discriminator.type = #pattern\n* category ^slicing.discriminator.path = &quot;coding&quot;\n* category ^slicing.rules = #open\n* category ^slicing.description = &quot;Slice based on category.code pattern&quot;\n* category contains labCategory  1..1 MS\n* category[labCategory].coding = ObsCat#laboratory\n</code></pre></div>\n<p>This approach is fine and works.  I think you also could have done this:</p>\n<div class=\"codehilite\"><pre><span></span><code>// Check category\n* category 1..\n* category ^slicing.discriminator.type = #pattern\n* category ^slicing.discriminator.path = &quot;$this&quot;\n* category ^slicing.rules = #open\n* category ^slicing.description = &quot;Slice based on category pattern&quot;\n* category contains labCategory  1..1 MS\n* category[labCategory] = ObsCat#laboratory\n</code></pre></div>\n<p>To me the latter feels a little more natural, but I expect it is a matter of preference.</p>",
        "id": 235677749,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1619098453
    },
    {
        "content": "<p>This is great <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> ! I just tested if my profile allowed other (additional) category codings or codeable-concept. It didn't, but using your approach it does! (And that's what I wanted) Thank you</p>",
        "id": 235678600,
        "sender_full_name": "Christian Nau",
        "timestamp": 1619098763
    },
    {
        "content": "<p>And regarding this:</p>\n<div class=\"codehilite\"><pre><span></span><code>// Check presence of LOINC code\n* code.coding ^slicing.discriminator.type = #pattern\n* code.coding ^slicing.discriminator.path = &quot;system&quot;\n* code.coding ^slicing.rules = #open\n* code.coding ^slicing.description = &quot;Slice based on coding system&quot;\n* code.coding contains loincCode 1..1 MS\n* code.coding[loincCode].system = LNC\n</code></pre></div>\n<p>If you really just want to ensure that a LOINC code is used in the <code>code</code>, then I think you could avoid the slicing and just use a value set:</p>\n<div class=\"codehilite\"><pre><span></span><code>* code from http://loinc.org/vs (required)\n</code></pre></div>\n<p><code>http://loinc.org/vs</code> represents the value set of all LOINC codes (<a href=\"http://hl7.org/fhir/R4/loinc.html#implicit\">doc</a>) and a value set binding only requires that <em>at least one</em> of the codings matches the value set (<a href=\"http://hl7.org/fhir/R4/terminologies.html#required\">doc</a>).  So I think this says the same thing without needing to slice.  But again, both work, so it's a matter of preference.</p>",
        "id": 235679130,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1619098939
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"327858\">Christian Nau</span> <a href=\"#narrow/stream/215610-shorthand/topic/Restrict.20Observation.20category/near/235678600\">said</a>:</p>\n<blockquote>\n<p>This is great <span class=\"user-mention silent\" data-user-id=\"191469\">Chris Moesel</span> ! I just tested if my profile allowed other (additional) category codings or codeable-concept. It didn't, but using your approach it does! (And that's what I wanted) Thank you</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"327858\">@Christian Nau</span> -- I'm surprised.  I really did think your original approach should work too.  But I'm glad that my suggestion seems to work better (even if I don't understand why).</p>",
        "id": 235679323,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1619099027
    },
    {
        "content": "<p>Just for my understanding: I thought that <code>^slicing.rules = #open</code> allows other values for codings. So why didn't my approach work?</p>",
        "id": 235679328,
        "sender_full_name": "Christian Nau",
        "timestamp": 1619099029
    },
    {
        "content": "<p>Ok, so I'm not the only one suprised :)</p>",
        "id": 235679442,
        "sender_full_name": "Christian Nau",
        "timestamp": 1619099066
    },
    {
        "content": "<p>I don't know.  That's why I said I was surprised.  I would have expected it to work just fine since your rules are <code>#open</code>.</p>",
        "id": 235679449,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1619099069
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191469\">Chris Moesel</span> <a href=\"#narrow/stream/215610-shorthand/topic/Restrict.20Observation.20category/near/235679130\">said</a>:</p>\n<blockquote>\n<p>If you really just want to ensure that a LOINC code is used in the <code>code</code>, then I think you could avoid the slicing and just use a value set:</p>\n</blockquote>\n<p>Another very appreciated suggestion! I already had a value-set for my lab-value-profile (containing LOINC codes) but forgot to use it here. Thanks!</p>",
        "id": 235681975,
        "sender_full_name": "Christian Nau",
        "timestamp": 1619099899
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"327858\">Christian Nau</span> <a href=\"#narrow/stream/215610-shorthand/topic/Restrict.20Observation.20category/near/235679328\">said</a>:</p>\n<blockquote>\n<p>Just for my understanding: I thought that <code>^slicing.rules = #open</code> allows other values for codings. So why didn't my approach work?</p>\n</blockquote>\n<p>your approach only checked if the system equals the LOINC System string.<br>\nVS binding tells the validator to also check if the value is a valid value</p>",
        "id": 235690064,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1619102541
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> The confusion was about the category slicing, not the one for coding.</p>",
        "id": 235690765,
        "sender_full_name": "Christian Nau",
        "timestamp": 1619102807
    },
    {
        "content": "<p>a i miss-quoted, my comment was about the difference between fixed systems and VS bindings</p>",
        "id": 235691241,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1619102981
    },
    {
        "content": "<p>open slicing allows other slices of course</p>",
        "id": 235691418,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1619103038
    },
    {
        "content": "<p>Ah ok. Yes that's a good point. I already updated the profile to use value-set binding like <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> suggested.</p>",
        "id": 235691483,
        "sender_full_name": "Christian Nau",
        "timestamp": 1619103065
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191451\">Patrick Werner</span> <a href=\"#narrow/stream/215610-shorthand/topic/Restrict.20Observation.20category/near/235691418\">said</a>:</p>\n<blockquote>\n<p>open slicing allows other slices of course</p>\n</blockquote>\n<p>Yes, but for the way I sliced category it did not allow category-codings from other systems. That's why we were suprised.</p>",
        "id": 235691703,
        "sender_full_name": "Christian Nau",
        "timestamp": 1619103147
    }
]