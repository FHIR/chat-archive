[
    {
        "content": "<p>So I've got a multi element extension - elements name (string) and value (CodeableConcept). Is it possible to 'slice' it so that the value binding is dependant on the value of name? Ie a specific ValueSet for each name...</p>",
        "id": 204598801,
        "sender_full_name": "David Hay",
        "timestamp": 1595363102
    },
    {
        "content": "<p>slice the extension with discriminator of extension.extension.valueString and within each slice give a different binding?<br>\nthat seems like it should work</p>",
        "id": 204599449,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1595363428
    },
    {
        "content": "<p>Yeah - I did try that - will have another go...</p>",
        "id": 204600074,
        "sender_full_name": "David Hay",
        "timestamp": 1595363836
    },
    {
        "content": "<p>hmm, here is what I thought the syntax would allow but it didn't work...</p>\n<div class=\"codehilite\"><pre><span></span><code>Profile: TestProcedure\nParent: Procedure\n* extension contains SlicedExtension named slicedExtension 0..*\n* extension[slicedExtension] ^slicing.discriminator.type = #pattern\n* extension[slicedExtension] ^slicing.discriminator.path = &quot;extension[namepart].valueString&quot;\n\n* extension[slicedExtension] contains test1 0..1 and test2 0..1\n* extension[slicedExtension][test1].extension[namepart].valueString = &quot;test1&quot; (exactly)\n* extension[slicedExtension][test1].extension[valuepart].valueCodeableConcept from TransfusionProcedureCodeVS (extensible)\n\nExtension: SlicedExtension\n* extension contains namepart 1..1 valuepart 1..1\n* extension[namepart].value[x] only string\n* extension[valuepart].value[x] only CodeableConcept\n</code></pre></div>",
        "id": 204600915,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1595364365
    },
    {
        "content": "<p>here were my errors...</p>\n<div class=\"codehilite\"><pre><span></span><code>error Cannot read property &#39;fixValue&#39; of undefined\n  File: /Users/jeanduteau/Documents/DDIWork/IBM-BEST/datastandards/fsh/TestSlice.fsh\n  Line: 7\nerror No element found at path extension[slicedExtension][test1] for TestProcedure, skipping rule\n  File: /Users/jeanduteau/Documents/DDIWork/IBM-BEST/datastandards/fsh/TestSlice.fsh\n  Line: 7\nerror No element found at path extension[slicedExtension][test2] for TestProcedure, skipping rule\n  File: /Users/jeanduteau/Documents/DDIWork/IBM-BEST/datastandards/fsh/TestSlice.fsh\n  Line: 7\nerror No element found at path extension[slicedExtension][test1].extension[namepart].valueString for TestProcedure, skipping rule\n  File: /Users/jeanduteau/Documents/DDIWork/IBM-BEST/datastandards/fsh/TestSlice.fsh\n  Line: 8\nerror No element found at path extension[slicedExtension][test1].extension[valuepart].valueCodeableConcept for TestProcedure, skipping rule\n  File: /Users/jeanduteau/Documents/DDIWork/IBM-BEST/datastandards/fsh/TestSlice.fsh\n  Line: 9\nerror No element found at path extension[slicedExtension][test1].value[x] for TestProcedure, skipping rule\nerror No element found at path extension[slicedExtension][test1].extension[namepart].extension for TestProcedure, skipping rule\nerror No element found at path extension[slicedExtension][test1].extension[valuepart].extension for TestProcedure, skipping rule\n</code></pre></div>",
        "id": 204600967,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1595364417
    },
    {
        "content": "<p>Maybe the extension definition needs to be sliced on url and namePart (somehow)?</p>",
        "id": 204601949,
        "sender_full_name": "David Hay",
        "timestamp": 1595365033
    },
    {
        "content": "<p>yeah, it is that \"(somehow)\" that is the kicker</p>",
        "id": 204602133,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1595365141
    },
    {
        "content": "<p>I think what <span class=\"user-mention\" data-user-id=\"192166\">@Jean Duteau</span> ran into is that SUSHI doesn't really have support for reslicing slices. I know SUSHI can work with a profile that already has resliced slices, but SUSHI can't actually correctly add reslices using the <code>contains</code> keyword. I've made a bug for this here <a href=\"https://github.com/FHIR/sushi/issues/542\">https://github.com/FHIR/sushi/issues/542</a>.</p>",
        "id": 204658545,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1595420865
    }
]