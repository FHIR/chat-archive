[
    {
        "content": "<p>I am trying to populate the <a href=\"http://CodeSystem.property\">CodeSystem.property</a> field. </p>\n<ul>\n<li>^property[0].code = #ErsterTagMitAbschlag</li>\n<li>^property[0].type = <a href=\"http://hl7.org/fhir/concept-property-type#integer\">http://hl7.org/fhir/concept-property-type#integer</a><br>\nruns without error however does not populate the Codesystem resource. Am I using a wrong syntax ? Is filling property in CodeSystem supported at all ?</li>\n</ul>\n<p>Thanks in advance.<br>\nAnup</p>",
        "id": 230676557,
        "sender_full_name": "Anup Rai",
        "timestamp": 1615981640
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"387864\">@Anup Rai</span>.  It should be possible to populate the top-level <code>property</code> in a <code>CodeSystem</code> -- and the way you are doing it is correct if you are using the FSH CodeSystem grammar.  That said, the FSH CodeSystem grammar does <em>not</em> support setting <code>property</code> values on each specific concept (although we hope to support that in FSH STU2).  So... if you also need to set <code>concept.property</code> then you must define your CodeSystem using the <code>Instance</code> grammar.</p>\n<p>This link brings you to FSH Online w/ working examples of setting the top-level property using the CodeSystem grammar and doing the same, plus <code>concept.property</code>, using the Instance grammar: <a href=\"https://fshschool.org/FSHOnline/#/share/30Oe1GU\">https://fshschool.org/FSHOnline/#/share/30Oe1GU</a></p>",
        "id": 230683786,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615985283
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> thanks a lot for a quick response. I am now resorting to the InstanceOf syntax. Thanks a lot for looking into and a quick solution for the problem.</p>",
        "id": 230727477,
        "sender_full_name": "Anup Rai",
        "timestamp": 1616000191
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> , we ran into a small issue when trying to use the <code>CodeSystem</code> that was created with <code>InstanceOf</code> (<a href=\"https://fshschool.org/FSHOnline/#/share/2Ry70sl\">https://fshschool.org/FSHOnline/#/share/2Ry70sl</a>): </p>\n<div class=\"codehilite\"><pre><span></span><code>// Authoring a CodeSystem using Instance to allow for concept.property\nInstance: AdvancedMarriageForms\nInstanceOf: CodeSystem\nUsage: #definition\n* name = &quot;AdvancedMarriageForms&quot;\n* title = &quot;Advanced Marriage Forms&quot;\n* url = AdvancedMarriageForms\n* status = #active\n* content = #complete\n* property.code = #AmicableSplit\n* property.type = #boolean\n* concept[+].code = #its-complicated\n* concept[=].display = &quot;it&#39;s complicated&quot;\n* concept[=].property.code = #AmicableSplit\n* concept[=].property.valueBoolean = false\n\nInstance: PatientTest\nInstanceOf: Patient\n* maritalStatus = AdvancedMarriageForms#half-married\n</code></pre></div>\n<p>This leads to the error: <code>Resolved value \"AdvancedMarriageForms\" is not a valid URI.</code>. As a workaround, we introduced</p>\n<div class=\"codehilite\"><pre><span></span><code>Alias: AdvancedMarriageForms = http://codesystem.com/test\n</code></pre></div>\n<p>This works, but now we have the name <code>AdvancedMarriageForms </code> occuring twice in our FSH project: Once for the <code>CodeSystem</code>, and another time for the <code>Alias</code>. Is this legal and \"safe\", or is there maybe a better workaround?</p>",
        "id": 234653796,
        "sender_full_name": "Martin Höcker",
        "timestamp": 1618483907
    },
    {
        "content": "<p>Ahh, I found an issue with our workaround: Often, <code>CodeSystem</code> and <code>ValueSet</code> share the same <code>.name</code>. When we introduce a ValueSet with the name <code>AdvancedMarriageForms</code> and use it in a profile, then SUSHI picks up the alias (that points to the CodeSystem) instead of the ValueSet:  <a href=\"https://fshschool.org/FSHOnline/#/share/3tn51VZ\">https://fshschool.org/FSHOnline/#/share/3tn51VZ</a></p>",
        "id": 234657671,
        "sender_full_name": "Martin Höcker",
        "timestamp": 1618486005
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"217988\">@Martin Höcker</span>.  Once you have an <code>Alias</code>, a <code>CodeSystem</code>, and a <code>ValueSet</code> all with the same name, then things can get a bit tricky and confusing when referring to things by that name.  Sometimes SUSHI can figure it out and sometimes it can't.  I think there are probably things we can do to make SUSHI smarter here, and <em>maybe</em> it would solve this problem, but for now, I'd suggest just giving the alias a different name (e.g., <code>AdvancedMarriageFormsCS</code>).</p>\n<p>One thing we will be implementing soon is that when you create <code>#definition</code> instances for items that can hold a canonical URL (like <code>CodeSystem</code>), SUSHI will autopopulate the <code>url</code> based on the canonical of the IG.  I'm not sure if that will 100% help you in this case, but it might.  I think that we also need to update SUSHI to look in <code>Instance</code>s when resolving the system part of <code>System#Code</code>.</p>",
        "id": 234667797,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1618490621
    }
]