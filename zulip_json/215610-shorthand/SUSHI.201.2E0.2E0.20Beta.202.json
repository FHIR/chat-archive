[
    {
        "content": "<p>Announcing <strong>SUSHI 1.0.0 Beta 2</strong> with the following enhancements and bug fixes:</p>\n<ul>\n<li>Supports setting the resource description in the generated ImplementationGuide on conformance and terminology resources only</li>\n<li>Avoids generating a duplicate resource when a resource is provided in input and defined in FSH</li>\n<li>Correctly extracts SUSHI configuration information from a provided ImplementationGuide resource</li>\n<li>Skips the processing of XML files that appear to be spreadsheets</li>\n<li>Fixes a bug where SUSHI specific comments were appended to input files</li>\n<li>Fixes a bug that allows uses the current working directory as the input directory if is not specified</li>\n<li>Resets the errors and warnings in between invocations of <code>fshToFhir</code></li>\n</ul>\n<p>For more information, check out the <a href=\"https://github.com/FHIR/sushi/releases/tag/v1.0.0-beta.2\">Release Notes on GitHub</a>.</p>",
        "id": 213588803,
        "sender_full_name": "Julia Afeltra",
        "timestamp": 1602868743
    },
    {
        "content": "<p>I get this:<br>\nSushi: warn  The FSHOnly property is set to true, so no output specific to IG creation will be generated. The following properties are unused and only relevant for IG creation: parameters, copyrightYear, releaseLabel, template, menu.</p>",
        "id": 213769617,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603105484
    },
    {
        "content": "<p>Can this be an info?</p>",
        "id": 213769634,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603105501
    },
    {
        "content": "<p>I think if this is a warning, the CI build will never be clean</p>",
        "id": 213769670,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603105526
    },
    {
        "content": "<p>I'll talk to the team about this changing that log level from warning to info.  That said, w/ FSHOnly projects using SUSHI 1.0.0, I'd recommend just letting SUSHI read in the IG JSON/XML file rather than using a <code>sushi-config.yaml</code>.  I don't know your use case, but might it be better to take that approach here?</p>",
        "id": 213783408,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1603113600
    },
    {
        "content": "<p>I didn't make a sushi.config.aml. <br>\nI think one is being created for me</p>",
        "id": 213786128,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603114730
    },
    {
        "content": "<p>could that be?</p>",
        "id": 213786155,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603114743
    },
    {
        "content": "<p>Oh... hmmm... do you have a <code>package.json</code> file?  If so, then we might be generating a config from that.  We used to use <code>package.json</code> for config, and when we switched to <code>config.yaml</code>, we put in logic that would transform the <code>package.json</code> to <code>config.yaml</code> to ease the transition.  We may want to consider removing that code at this point.  Is that maybe what is happening?</p>",
        "id": 213788884,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1603115865
    },
    {
        "content": "<p>yes, I deleted te package.json file, I think that solved it (i will confirm when my IG is actually building again)</p>",
        "id": 213800567,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603120343
    },
    {
        "content": "<p>thanks</p>",
        "id": 213800576,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603120348
    }
]