[
    {
        "content": "<p>I am trying to re-create the iso3166-1-3 valueSet in sushi (for some reason that valueset does not work today).</p>\n<p>All I need to do is include all the codes from iso3166 given a regex, but I can't get that regex to work. I have pulled the regex from the above valueset, but don't seem to be able to get sushi valueset include regex syntax right</p>\n<div class=\"codehilite\"><pre><span></span><code>* include codes from system ISO where code regex &quot;[A-Z]{3}&quot;\n</code></pre></div>",
        "id": 249358380,
        "sender_full_name": "John Moehrke",
        "timestamp": 1628860460
    },
    {
        "content": "<p>For regex codes, the FSH requires that the value <code>\"[A-Z]{3}\"</code> be specified using regex syntax, indicated by leading and trailing <code>/</code>. So in this case the value would be <code>/[A-Z]{3}/</code>. See this <a href=\"https://fshschool.org/FSHOnline/#/share/2XpExIh\">example</a>.</p>",
        "id": 249364615,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1628863692
    },
    {
        "content": "<p>thanks. I forgot to check fsh school.. I was focused on the shorthand specification that simply indicated regex and pointed at the FHIR core where what I had was fine. So this special pattern should be in the shorthand specification</p>",
        "id": 249367199,
        "sender_full_name": "John Moehrke",
        "timestamp": 1628864990
    },
    {
        "content": "<p>Yeah you're right, it isn't very well documented.</p>",
        "id": 249369838,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1628866242
    },
    {
        "content": "<p>Or rather isn't documented at all in the spec</p>",
        "id": 249369883,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1628866267
    },
    {
        "content": "<p>my position is that it is documented... and it is documented to be different than it actually is.</p>",
        "id": 249370407,
        "sender_full_name": "John Moehrke",
        "timestamp": 1628866510
    },
    {
        "content": "<p>Where are you seeing it documented? I don't see any place in the shorthand spec where we discuss the syntax for a regular expression in a <code>ValueSet</code> include statement.</p>",
        "id": 249378829,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1628870478
    },
    {
        "content": "<p><a href=\"https://build.fhir.org/ig/HL7/fhir-shorthand/reference.html#filters\">https://build.fhir.org/ig/HL7/fhir-shorthand/reference.html#filters</a></p>",
        "id": 249379389,
        "sender_full_name": "John Moehrke",
        "timestamp": 1628870753
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>A filter is a logical statement in the form {property} {operator} {value}, where operator is chosen from the FilterOperator value set. Not all operators in that value set are valid for all code systems. The property and value are dependent on the code system. For choices for the most common code systems, see the FHIR documentation on filters.\n</code></pre></div>",
        "id": 249379454,
        "sender_full_name": "John Moehrke",
        "timestamp": 1628870774
    },
    {
        "content": "<p>which I followed the link</p>",
        "id": 249379468,
        "sender_full_name": "John Moehrke",
        "timestamp": 1628870783
    },
    {
        "content": "<p>hmm, I thought that at one of those FHIR core links was something helpful.. but I don't find it..</p>",
        "id": 249379767,
        "sender_full_name": "John Moehrke",
        "timestamp": 1628870952
    },
    {
        "content": "<p>If it doesn't work, it might be that ISO is either unknown to the terminology server or that code system doesn't expose the property \"code\" in FHIR.</p>",
        "id": 249379782,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1628870959
    },
    {
        "content": "<p>what I did find, because I was focused on 3166-1-3; was to look at that and pull the regex out of that.</p>",
        "id": 249379813,
        "sender_full_name": "John Moehrke",
        "timestamp": 1628870979
    },
    {
        "content": "<p>John, you can probably get around it using an invariant</p>",
        "id": 249379899,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1628871012
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span> I got sushi to work...  <span class=\"user-mention\" data-user-id=\"239822\">@Nick Freiter</span> explained my problem</p>",
        "id": 249379914,
        "sender_full_name": "John Moehrke",
        "timestamp": 1628871019
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 249379946,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1628871039
    },
    {
        "content": "<p>I am stuck on a vocabulary support issue.. but that is down in the vocabulary stream</p>",
        "id": 249379948,
        "sender_full_name": "John Moehrke",
        "timestamp": 1628871040
    },
    {
        "content": "<p>my residual sushi problem is that it was not clear reading shorthand specification how to do regex and that I needed to use <code>/</code> rather than <code>\"</code></p>",
        "id": 249380010,
        "sender_full_name": "John Moehrke",
        "timestamp": 1628871080
    },
    {
        "content": "<p>But <span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span>, this does point to a problem in the shorthand spec. Namely that regex values are undocumented.</p>",
        "id": 249380020,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1628871088
    },
    {
        "content": "<p>We don't attempt to document property-operator-value combinations because they are specific to individual code systems. But Regex is an excellent example, it should be added.</p>",
        "id": 249380208,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1628871190
    },
    {
        "content": "<p>yup, should not need to define everything. A simple example likely would have been enough.</p>",
        "id": 249380311,
        "sender_full_name": "John Moehrke",
        "timestamp": 1628871244
    },
    {
        "content": "<p><code>* include codes from system urn:iso:std:iso:3166 where code regex /[A-Z]{3}/</code></p>",
        "id": 249380349,
        "sender_full_name": "John Moehrke",
        "timestamp": 1628871262
    }
]