[
    {
        "content": "<p>In the latest sushi, if I have two entries (e.g., us-core-practitioner identifiers) and one is a slice and the second uses relative indexing, the indexed on overwrites the slice named one.  <br>\ne.g.,</p>\n<div class=\"codehilite\"><pre><span></span><code>* identifier[NPI].value = &quot;9941339108&quot;\n* identifier[+].system = &quot;http://www.acme.org/practitioners&quot;\n* identifier[=].value = &quot;25456&quot;\n</code></pre></div>",
        "id": 264889468,
        "sender_full_name": "David Pyke",
        "timestamp": 1639501347
    },
    {
        "content": "<p>will show only the second identifier</p>",
        "id": 264889504,
        "sender_full_name": "David Pyke",
        "timestamp": 1639501357
    },
    {
        "content": "<p>if I use normal indexing, then both show up.</p>",
        "id": 264889558,
        "sender_full_name": "David Pyke",
        "timestamp": 1639501376
    },
    {
        "content": "<p>Is that intentional?</p>",
        "id": 264889615,
        "sender_full_name": "David Pyke",
        "timestamp": 1639501393
    },
    {
        "content": "<p>I hope not</p>",
        "id": 264889640,
        "sender_full_name": "John Moehrke",
        "timestamp": 1639501402
    },
    {
        "content": "<p>I think someone else will be carving the roast fish at the Who Feast</p>",
        "id": 264889911,
        "sender_full_name": "David Pyke",
        "timestamp": 1639501488
    },
    {
        "content": "<p>I think this is how it has always worked, but you said \"in the latest SUSHI\" -- so I just want to be sure: was this working differently in a prior version of SUSHI?</p>\n<p>Currently, when SUSHI sees a <code>[+]</code> without any prior <code>[+]</code> or specific index (e.g., <code>[1]</code>), it assumes <code>[0]</code>.  It doesn't take prior slice instances into account.  I'm not saying this is how it <em>should</em> work, but I think this is how it <em>does</em> work right now.</p>\n<p>The spec says this:</p>\n<blockquote>\n<p>In soft indexing, [+] is used to increment the last referenced index by 1, and [=] is used to reference the same index that was last referenced. When an array is empty, [+] refers to the first element ([0]). FSH also allows for soft and numerical indices to be mixed.</p>\n</blockquote>\n<p>In your case, there technically isn't any \"last referenced index\", and the array is not empty, so... there is some room for interpretation (which is probably not great).  I think we've recently discussed the idea that if <code>[+]</code> is used w/ no prior <code>[+]</code> or <code>[n]</code>, it appends to the end of the array.  That would probably help here.  Or we could say that <code>[+]</code> increments after the last referenced index _or slice_.  We'd need to think about the implications of each approach.</p>\n<p>For now, you would need to explicitly set the first index after the slice and then you could use <code>[+]</code> after that:</p>\n<div class=\"codehilite\"><pre><span></span><code>* identifier[NPI].value = &quot;9941339108&quot;\n* identifier[1].system = &quot;http://www.acme.org/practitioners&quot;\n* identifier[=].value = &quot;25456&quot;\n* identifier[+].system = &quot;http://www.foo.org/practitioners&quot;\n* identifier[=].value = &quot;36567&quot;\n</code></pre></div>",
        "id": 264902268,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1639506082
    },
    {
        "content": "<p>It would be good if the slices were counted as part of the indexing order and then we can use it the way that seems to make sense to me.  But at least now I know that it's failing successfully now.</p>",
        "id": 264904293,
        "sender_full_name": "David Pyke",
        "timestamp": 1639506992
    },
    {
        "content": "<p>Alternately, an error message telling me that there's no first index and sushi is wiping out my slice entry would be good.</p>",
        "id": 264908678,
        "sender_full_name": "David Pyke",
        "timestamp": 1639508438
    },
    {
        "content": "<p>im with Dave. Either these slice instances are an implied [+]; or there should be an error.</p>",
        "id": 264934095,
        "sender_full_name": "John Moehrke",
        "timestamp": 1639519905
    },
    {
        "content": "<p>I do recall this working that way at some point, but I don't recall it working that way a few months ago.</p>",
        "id": 264934187,
        "sender_full_name": "John Moehrke",
        "timestamp": 1639519926
    },
    {
        "content": "<p>Yeah, I think that being aware of (and compensating for) previous slices makes sense.  We'll just have to see how hard that is to implement!</p>",
        "id": 264934653,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1639520194
    },
    {
        "content": "<p><a href=\"https://github.com/FHIR/sushi/issues/983\">SUSHI#983</a></p>",
        "id": 264935529,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1639520729
    }
]