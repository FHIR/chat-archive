[
    {
        "content": "<p>Hello,</p>\n<p>In a profile of the Observation resource I need to use the ValueAttachment extension:  <a href=\"http://hl7.org/fhir/5.0/StructureDefinition/extension-Observation.valueAttachment\">http://hl7.org/fhir/5.0/StructureDefinition/extension-Observation.valueAttachment</a></p>\n<p>However I struggle with getting this to work. I have tried some different things</p>\n<div class=\"codehilite\"><pre><span></span><code>Alias: VALUE_ATTACHMENT_EXTENSION = http://hl7.org/fhir/5.0/StructureDefinition/extension-Observation.valueAttachment\n\n* component.value.extension[VALUE_ATTACHMENT_EXTENSION].contentType = &quot;RTF&quot;&#39;\n* component.extension[VALUE_ATTACHMENT_EXTENSION].contentType = &quot;RTF&quot; ´´´\n</code></pre></div>\n<p>Both above give this error:  No element found at path component...[VALUE_ATTACHMENT_EXTENSION].contentType for..</p>\n<div class=\"codehilite\"><pre><span></span><code>* extension contains http://hl7.org/fhir/5.0/StructureDefinition/extension-Observation.valueAttachment named ValueAttachment\n</code></pre></div>\n<p>Gives this error: Cannot create ValueAttachment extension; unable to locate extension definition for…</p>\n<p>Adding the url above as a dependency in sushi-config.yaml gives this error:</p>\n<p>Failed to add 0:h to ImplementationGuide instance because SUSHI could not find the IG URL in the dependency IG. To specify the IG URL in your sushi-config.yaml, use the dependency details format:</p>\n<p>What am I doing wrong or missing?</p>",
        "id": 226811305,
        "sender_full_name": "Barbro Vessman",
        "timestamp": 1613655962
    },
    {
        "content": "<p>where are you getting that url from? it doesn't look right to me but I'm not sure what you are trying to reference so it might be right..</p>",
        "id": 226847975,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1613669439
    },
    {
        "content": "<p>I think there are actual issues w/ those paths too.  For example, this path:</p>\n<div class=\"codehilite\"><pre><span></span><code>* component.value.extension[VALUE_ATTACHMENT_EXTENSION].contentType = &quot;RTF&quot;&#39;\n</code></pre></div>\n<ul>\n<li>There is a stray <code>'</code> at the end of the rule.  But that might just be a typo when entering it here (also the stray ``` at the end of the second rule).</li>\n<li><code>component.value</code> needs to be <code>component.value[x]</code> (only valid in a profile definition) or a specific type like <code>component.valueQuantity</code> (valid in profiles or instances).  But just <code>component.value</code> does not work (unlike in FHIRPath).</li>\n<li><code>extension[VALUE_ATTACHMENT_EXTENSION].contentType</code> is not valid because <code>extension[VALUE_ATTACHMENT_EXTENSION]</code> refers to an <code>Extension</code>, and <code>contentType</code> is not an element on <code>Extension</code>.  I think you really want <code>extension[VALUE_ATTACHMENT_EXTENSION].valueAttachment.contentType</code>.</li>\n</ul>\n<p>I noticed your <code>VALUE_ATTACHMENT_EXTENSION</code> URL actually ends with <code>.valueAttachment</code> -- is that really a part of the ID, or were you trying to reference the <code>valueAttachment</code> element in the extension?</p>\n<p>Last, as <span class=\"user-mention\" data-user-id=\"237342\">@ryan moehrke</span> noted, it would definitely help to know where that extension is defined (in what IG).  You would need to add a reference to the dependency IG itself to the <code>sushi-config.yaml</code> dependencies.  If you've supplied the right IG <code>id</code> and <code>version</code> and still get the error about not finding the IG URL, you may need to use the longer form dependency format so you can provide the <code>uri</code> (<a href=\"https://fshschool.org/docs/sushi/configuration/#recommended-configuration\">docs</a>).</p>",
        "id": 226853949,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1613671921
    },
    {
        "content": "<p>That extension isn't formally defined in an IG.  It's using the 'implied' extension inter-version format described here: <a href=\"https://build.fhir.org/versions.html#extensions\">https://build.fhir.org/versions.html#extensions</a></p>",
        "id": 226875574,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613680352
    },
    {
        "content": "<p>Essentially you can reference anything in a future (or past) FHIR version as an extension.</p>",
        "id": 226875635,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613680376
    },
    {
        "content": "<p>would Observation.valueAttachment be the correct path in that paradigm then? if it's a value[x] of type Attachment?<br>\nI'm assuming since the spec says it should be <a href=\"http://elementDefinition.id\">elementDefinition.id</a> it should be Observation.component.value[x] &lt;element id=\"Observation.component.value[x]\"&gt;<br>\nalso what is the context that the extension should be in the instance? I assume as far in the path as possible, but in this case where value[x] exists just doesn't allow the needed datatypes would you ignore the existing value[x]?<br>\nso then should it read:</p>\n<div class=\"codehilite\"><pre><span></span><code>Alias: VALUE_ATTACHMENT_EXTENSION = http://hl7.org/fhir/5.0/StructureDefinition/extension-Observation.component.value[x]\n\n* component.extension[VALUE_ATTACHMENT_EXTENSION].valueAttachment.contentType = &quot;RTF&quot;\n</code></pre></div>\n<p>And the obvious other follow-up, does Sushi support this extension at all? was the complaining just about the path not using extension.value[x] and/or is there an override for extensions you don't expect/can't tell sushi about?</p>",
        "id": 226878896,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1613681734
    },
    {
        "content": "<p>I thought you couldn't link (in an IG) to future things since they haven't been published (though would be happy to be corrected).</p>\n<p>Specifically, I thought it wasn't acceptable to try and link 'SomeNewResourceInR5', since neither the contents nor the link itself are stable until it has been published.</p>",
        "id": 226879967,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1613682109
    },
    {
        "content": "<p>Pointing to R5 things is risky - because if R5 changes, you'll break.  So it's a buyer beware thing.  (Some stuff is pretty safe to point at though.)</p>",
        "id": 226880587,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613682342
    },
    {
        "content": "<p>My understanding was that \"valueAttachment\" wasn't allowed in FHIRPath - that it was always \"value\".  But I'm not an expert.</p>",
        "id": 226880684,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613682376
    },
    {
        "content": "<p>SUSHI currently expects to be able to resolve all extension references to an actual <code>StructureDefinition</code> included in an IG package or FHIR core package.  So... it does not (yet) support \"implied\" extensions.  We'll have to put this on our list -- but until we support it, I wouldn't expect extensions like this to work in SUSHI.</p>",
        "id": 226887875,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1613685554
    },
    {
        "content": "<p>Lloyd, the wording of the spec you linked to doesn't say fhirpath it explicitly says <a href=\"http://ElementDefinition.id\">ElementDefinition.id</a> and looking further here <a href=\"https://www.hl7.org/fhir/elementdefinition.html#id\">https://www.hl7.org/fhir/elementdefinition.html#id</a><br>\nit seems your extension url would have to be \"<a href=\"http://hl7.org/fhir/5.0/StructureDefinition/extension-Observation.component.value[x]:valueAttachment\">http://hl7.org/fhir/5.0/StructureDefinition/extension-Observation.component.value[x]:valueAttachment</a>\"<br>\nwhich wow is quite verbose</p>",
        "id": 226903456,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1613693529
    },
    {
        "content": "<p>The extension URL would indeed include be the id, but I don't think it allows you to drill down into type slices.  The extension would just be to Observation.component.value.  You'd then have a valueAttachment in the extension.  I believe a URL that said \"extension-Observation.component.value[x]:valueAttachment\" wouldn't be a legal URL.</p>",
        "id": 226903707,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613693733
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>?</p>",
        "id": 226903791,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613693770
    },
    {
        "content": "<p>\"For type choice elements, the id reflects the type slice. e.g. For path = Patient.deceasedBoolean, the id is Patient.deceased[x]:deceasedBoolean\"<br>\nis what the spec on <a href=\"http://ElementDefinition.id\">ElementDefinition.id</a> says, which is where I got that from. If that means this extension is implicitly illegal that's another thing I can't speak on</p>",
        "id": 226904249,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1613694104
    },
    {
        "content": "<p>I agree, that's the id.  But I don't think we can do that in the auto-extension mechanism.</p>",
        "id": 226907340,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613696577
    },
    {
        "content": "<p>Thanks a lot for all answers. I really appreciate them all! Yes there were some typos in the example, sorry. MD issues.</p>\n<p>I found the url of the extension via Cerners documentation (<a href=\"https://fhir.cerner.com/millennium/r4/diagnostic/observation/#extensions\">https://fhir.cerner.com/millennium/r4/diagnostic/observation/#extensions</a>).  ValueAttachment is mentioned here: <a href=\"https://www.hl7.org/fhir/extensibility.html\">https://www.hl7.org/fhir/extensibility.html</a> but no url.</p>\n<p>My conclusion of your answers is that use of this extension is not recommended. And it is not supported when using sushi for creating documentation, since the extension does not exist in an IG.  </p>\n<p>The extension is already used to be able to include large content in the Observation resource. Maybe there are other ways? This is how the extension looks in the instance, if that might help:</p>\n<div class=\"codehilite\"><pre><span></span><code>          ],\n                &quot;component&quot;: [\n                    {\n                        &quot;extension&quot;: [\n                            {\n                                &quot;url&quot;: &quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-Observation.valueAttachment&quot;,\n                                &quot;valueAttachment&quot;: {\n                                    &quot;contentType&quot;: &quot;RTF&quot;,\n                                    &quot;data&quot;: &quot;e1xydGYxXGFkZWZsYW........&quot;\n</code></pre></div>\n<p>Thanks again</p>",
        "id": 226928310,
        "sender_full_name": "Barbro Vessman",
        "timestamp": 1613719665
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> - Although <code>http://hl7.org/fhir/5.0/StructureDefinition/extension-Observation.component.value[x]:valueAttachment</code> is likely invalid, might <code>http://hl7.org/fhir/5.0/StructureDefinition/extension-Observation.component.valueAttachment</code> be valid? This is the style that Cerner uses in their example, which technically is a valid <code>id</code> in a <em>differential</em> since <a href=\"https://fire.ly/2019/09/13/type-slicing-in-fhir-r4/\">choice type renaming</a> is allowed there. </p>\n<p><span class=\"user-mention\" data-user-id=\"366644\">@Barbro Vessman</span> - I don't see any existing extensions in R4 core that would allow you to put an attachment on an Observation.  If you need something that will work <em>today</em> with SUSHI, I think you have three choices:</p>\n<p>1) You can likely still get SUSHI to output something like this; you just have to do it in a more manual way.  The exact approach depends on if you're looking to use the extension in an instance or to specify the extension in a profile. It also depends on the conversation above regarding whether or not the extension can directly target the <code>valueAttachment</code>.  For now, we'll assume it can as long as it follows the Cerner approach.</p>\n<p>1a) To use the extension in an instance, you could do something like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>// Fake system because I&#39;m too lazy to find a clinically correct example\nAlias: FOO = http://foo.org/codes\n\nInstance: MyObservation\nInstanceOf: Observation\n* code = FOO#bar\n* status = #final\n* component.code = FOO#baz\n* component.extension.url = &quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-Observation.component.valueAttachment&quot;\n* component.extension.valueAttachment.contentType = #RTF\n* component.extension.valueAttachment.data = &quot;Tm90IHJlYWxseSBSVEY=&quot;\n</code></pre></div>\n<p><a href=\"https://fshschool.org/FSHOnline/#/share/3pAdfHw\">FSH Online Permalink</a></p>\n<p>1b) To explicitly specify that it can be used in a profile, you can use <code>^</code> rules to do so.  This produces the right FHIR w/ a few caveats: (a) SUSHI will complain because it thinks you're trying to define an \"inline\" extension in a profile, (b) if you try to constrain anything within the extension, it won't have the extension definition available, so it will be using the base Extension definition to create the differential elements.  So... this is probably not advised, but for educational purposes:</p>\n<div class=\"codehilite\"><pre><span></span><code>Profile: MyObservationProfile\nParent: Observation\n* component.extension contains valueAttachment 0..1\n* component.extension[valueAttachment] ^type.profile = &quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-Observation.component.valueAttachment&quot;\n</code></pre></div>\n<p><a href=\"https://fshschool.org/FSHOnline/#/share/3ayaAK4\">FSH Online Permalink</a></p>\n<p>Both of the above approaches work because you're explicitly <em>not</em> using the standard FSH approach w/ extensions.  By spelling them out property by property, you're basically using a backdoor past some of the validation and telling SUSHI, \"Don't worry, I got this!\"</p>\n<p>2) You can trick SUSHI by basically creating an imposter of that extension yourself in SUSHI -- even going so far as to give it that exact URL.  Then SUSHI will know what it is and can use it.  For example:</p>\n<div class=\"codehilite\"><pre><span></span><code>// Fake system because I&#39;m too lazy to find a clinically correct example\nAlias: FOO = http://foo.org/codes\n\n// Trick SUSHI by creating an imposter extension\nExtension: ObsComponentAttachment\nId: extension-Observation.component.valueAttachment\n* ^url = &quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-Observation.component.valueAttachment&quot;\n* value[x] only Attachment\n\n// Instance using extension\nInstance: MyObservation\nInstanceOf: Observation\n* code = FOO#bar\n* status = #final\n* component.code = FOO#baz\n* component.extension[ObsComponentAttachment].valueAttachment.contentType = #RTF\n* component.extension[ObsComponentAttachment].valueAttachment.data = &quot;Tm90IHJlYWxseSBSVEY=&quot;\n\n// Profile using extension\nProfile: MyObservationProfile\nParent: Observation\n* component.extension contains ObsComponentAttachment named valueAttachment 0..1\n</code></pre></div>\n<p><a href=\"https://fshschool.org/FSHOnline/#/share/2Zvzsff\">FSH Online Permalink</a></p>\n<p>The issue w/ this one is that if you try to run the SUSHI imposter definition through the IG Publisher, I'm not sure what will happen.</p>\n<p>3) You can just create your own extension (w/ its own name, id, url, etc).  The obvious downside here is that any system processing your instances would need to know what this extension is:</p>\n<div class=\"codehilite\"><pre><span></span><code>Extension: ObsComponentAttachment\n* value[x] only Attachment\n</code></pre></div>",
        "id": 226965081,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1613742641
    },
    {
        "content": "<p>Thank you very much <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span>  for those options! At the moment my purpose with this is to specify the extension in the profile to be able to create documentation, so I think I will try option 2 and see how that works.</p>",
        "id": 226968371,
        "sender_full_name": "Barbro Vessman",
        "timestamp": 1613744211
    },
    {
        "content": "<p>I think we need to improve the documentation in the spec.  <code>.component.valueAttachment</code> doesn't show up in the <code>id</code> anymore, so if that's the expectation, we need to make it clear.  In practice, I'd expect the \"valueAttachment\" to show up in the extension, not the path.</p>",
        "id": 226969018,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613744513
    },
    {
        "content": "<p>Can someone file a change request so we can land this?</p>",
        "id": 226969077,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613744526
    },
    {
        "content": "<p>Sure, I'll try to file something.</p>",
        "id": 226981248,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1613749393
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"372944\">@Firely Bot</span> issue show <a href=\"http://jira.hl7.org/browse/FHIR-31348\">FHIR-31348</a></p>",
        "id": 226986113,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1613751058
    },
    {
        "content": "<p><strong><a href=\"https://jira.hl7.org/browse/FHIR-31348\">FHIR-31348 Clarify allowable Extension URLs for converting between versions</a></strong><br>\nStatus: <strong>Submitted</strong>, Type: <strong>Change Request</strong></p>",
        "id": 226986133,
        "sender_full_name": "Firely Bot",
        "timestamp": 1613751070
    },
    {
        "content": "<p>The <a href=\"https://build.fhir.org/versions.html#extensions\">extensions for converting between versions documentation</a> indicates that there are packages for these special versioned extensions, but it also contains this note:</p>\n<blockquote>\n<p>Note for balloters: these packages will be created when R4 is finalized. Until then, these are broken links.</p>\n</blockquote>\n<p>R4 was finalized quite a while ago, but the links it refers to are still broken -- and I'm having trouble finding those extension packages in the registry.  Do they actually exist?  If so, are they in the package registry (and under what package ids)?  It would be much easier for me to support this in SUSHI if I can just rely on existing packages rather than having to materialize these virtual extensions myself.</p>",
        "id": 230427736,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615846174
    },
    {
        "content": "<p>If I do have to materialize them myself, then I have some follow-up questions. ;-)</p>",
        "id": 230428331,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615846352
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> -- Do you have any insight regarding the existence (or lack thereof) of these implied extension packages?</p>",
        "id": 230586647,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615926916
    },
    {
        "content": "<p>As far as I know, this is all validator magic.  No packages are defined.  (If they were defined, they'd theoretically have to be updated (for R5 anyhow) every time someone pushed a commit to the CI build, which doesn't seem super practical, though I suppose it's possible.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 230589329,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1615928009
    },
    {
        "content": "<p>OK.  If that's the way it's intended to be then I can submit a change request to remove that verbiage from the documentation. But I'll wait for Grahame's confirmation first.</p>",
        "id": 230591836,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615928999
    },
    {
        "content": "<p>To save people the click, this is what I'm referring to:<br>\n<a href=\"/user_uploads/10155/2tiGMO-Le5gUe5dmZuV7gGpu/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/2tiGMO-Le5gUe5dmZuV7gGpu/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/2tiGMO-Le5gUe5dmZuV7gGpu/image.png\"></a></div>",
        "id": 230591953,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615929048
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 232830906,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1617314305
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 232831515,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1617314613
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 232831898,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1617314839
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 232832087,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1617314963
    },
    {
        "content": "<p>The above deleted posts were all just me talking to myself and eventually figuring out that:</p>\n<ul>\n<li>For implied extensions, the cardinality of the target element should be reflected in the root element of the implied extension</li>\n<li>For implied extensions that are complex, the cardinality of the child paths should be reflected in the sub-extension elements</li>\n</ul>\n<p>It makes sense when you think about it.  But I had to think through it a few times before I figured out no other approach (e.g., putting the cardinalities on <code>value[x]</code>) could possibly work.</p>",
        "id": 232832323,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1617315098
    },
    {
        "content": "<p>OK. Here is a different question.  The spec says:</p>\n<blockquote>\n<p>Where complex data types have no equivalent in an earlier version, use a complex extension...</p>\n</blockquote>\n<p>I think that means that if I am in R4 and use an implied extension to reference an R5 element with <code>CodeableReference</code> type, the implied extension will be a complex extension with <code>concept</code> and <code>reference</code> sub-extensions.</p>\n<p>But... what if I use an implied extension to reference an R5 element that is a choice of <code>CodeableReference</code> and something else (for example, <code>CodeableReference or string</code>)?  I can't use a simple extension because <code>value[x]</code> in R4 can't hold <code>CodeableReference</code> (nor a complex extension representing <code>CodeableReference</code>). But if I represent the element w/ a complex extension, there is no obvious way to represent that choice between <code>CodeableReference</code> and <code>string</code> (without complicated invariants).  Or is this just a hypothetical problem that is unlikely to actually occur?</p>",
        "id": 232842389,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1617321887
    },
    {
        "content": "<p>And two more questions:</p>\n<ol>\n<li>\n<p>Should we also be replacing old types w/ new types where applicable?  For example, if a DSTU2 element has a type that is <code>Reference(MedicationOrder)</code> should we change that to <code>Reference(MedicationRequest)</code> in the implied extension?</p>\n</li>\n<li>\n<p>What do we do if a DSTU2 element is a reference to a resource that no longer exists in R4?  For example, how would we represent an element whose type is <code>Reference(ImagingObjectSelection)</code> using an implied extension in R4?  We can represent <code>ImagingObjectSelection</code> as a complex extension, but we can't create a <code>Reference</code> to an extension -- so we lose the \"referential\" aspect of it.</p>\n</li>\n</ol>",
        "id": 232846364,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1617324891
    },
    {
        "content": "<p>And one more question:  Should implied extensions carry over extensions in the source element from the other version of FHIR?  For example, the <a href=\"http://hl7.org/fhir/versions.html#extensions\">implied extensions documentation</a> uses <code>http://hl7.org/fhir/3.0/StructureDefinition/extension-Patient.animal.species</code> as an example.  If you look at that element in STU3, it actually contains a binding with an extension:</p>\n<div class=\"codehilite\"><pre><span></span><code>&quot;binding&quot;: {\n  &quot;extension&quot;: [\n    {\n      &quot;url&quot;: &quot;http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName&quot;,\n      &quot;valueString&quot;: &quot;AnimalSpecies&quot;\n    }\n  ],\n  &quot;strength&quot;: &quot;example&quot;,\n  &quot;description&quot;: &quot;The species of an animal.&quot;,\n  &quot;valueSetReference&quot;: {\n    &quot;reference&quot;: &quot;http://hl7.org/fhir/ValueSet/animal-species&quot;\n  }\n}\n</code></pre></div>\n<p>So... should the implied extension also specify that source extension in the binding on <code>Extension.value[x]</code>?  I'm not sure because there is a possibility that the original extension is no longer valid in the version of FHIR you're bringing it into.</p>",
        "id": 233501779,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1617807169
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> -- do you have any insight into any of the questions I've asked above?  The specification is not very thorough in its explanation regarding how all of this should work in practice.</p>",
        "id": 233501913,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1617807213
    },
    {
        "content": "<p>I don't think we've thought about polymophics that include net new data types for this mechanism.  You can submit a change request for us to come up with guidance here</p>\n<ol>\n<li>\n<p>I think so, though that can get messy if there aren't nice correlations.  A change request to clarify would be good</p>\n</li>\n<li>\n<p>I don't think you could meaningfully adopt that in R4 in that situation?  Again, clarification by change request would be good</p>\n</li>\n</ol>\n<p>I don't think there's a requirement to bring across unrecognized extensions.  This particular extension is not one that would need to be propagated, though I'm not clear it's <em>wrong</em> to propagate it.</p>",
        "id": 233512008,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1617809750
    },
    {
        "content": "<p>What is more helpful? One change request to cover <em>all</em> things needing clarification re: implied extensions?  Or specific change requests for each thing needing clarification?</p>",
        "id": 233515405,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1617810950
    },
    {
        "content": "<p>I think one for the set is fine.  The gist is \"we need more clarification here\"</p>",
        "id": 233534580,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1617818363
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"372944\">@Firely Bot</span> issue show <a href=\"http://jira.hl7.org/browse/FHIR-31721\">FHIR-31721</a></p>",
        "id": 233547610,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1617823789
    },
    {
        "content": "<p><strong><a href=\"https://jira.hl7.org/browse/FHIR-31721\">FHIR-31721 Clarify details in \"Extensions for converting between versions\" (a.k.a. implied extensions) </a></strong><br>\nStatus: <strong>Submitted</strong>, Type: <strong>Change Request</strong></p>",
        "id": 233547637,
        "sender_full_name": "Firely Bot",
        "timestamp": 1617823801
    }
]