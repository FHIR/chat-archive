[
    {
        "content": "<p>Is there a way to insert a ruleset on an &lt;element&gt; the same way the obeys keyword allows? This is the syntax that I would expect:</p>\n<ul>\n<li>insert {RuleSet name} -- this works</li>\n<li>&lt;element&gt; insert {RuleSet name} -- is there a way to do this?</li>\n</ul>\n<p>My goal is to consolidate PlanDefinition.action elements that exist in multiple PlanDefinition instances. For example: PlanDefinition1 has actions { A, B, C, D }, PlanDefinition2 has actions { A, B }, and PlanDefinition3 as actions { A, D }. Right now I'm faced with copy-pasting the action[A] into each definition, but I'd like to have a single source of truth for that action definition.</p>\n<p>RuleSet: A</p>\n<ul>\n<li>title = \"Title A\"</li>\n</ul>\n<p>RuleSet: B</p>\n<ul>\n<li>title = \"Title B\"</li>\n</ul>\n<p>RuleSet: C</p>\n<ul>\n<li>title = \"Title C\"</li>\n</ul>\n<p>RuleSet: D</p>\n<ul>\n<li>title = \"Title D\"</li>\n</ul>\n<p>Instance: PlanDefinition1<br>\nInstanceOf: PlanDefinition</p>\n<ul>\n<li>action[0] insert A</li>\n<li>action[1] insert B</li>\n<li>action[2] insert C</li>\n<li>action[3] insert D</li>\n</ul>\n<p>Instance: PlanDefinition2<br>\nInstanceOf: PlanDefinition</p>\n<ul>\n<li>action[0] insert A</li>\n<li>action[1] insert B</li>\n</ul>\n<p>Instance: PlanDefinition3<br>\nInstanceOf: PlanDefinition</p>\n<ul>\n<li>action[0] insert A</li>\n<li>action[1] insert D</li>\n</ul>",
        "id": 211796200,
        "sender_full_name": "Jason Evans",
        "timestamp": 1601487938
    },
    {
        "content": "<p>Unfortunately, the short answer to your question is \"No, that's not supported.\"  But we have some features planned for STU2 that I think would work really well for what you're wanting to do.  See the <a href=\"https://fshschool.org/downloads/sept-2020-fsh-tutorial-part-3.pptx\">Wicked FSH</a> powerpoint for a quick overview of what you might expect to see in STU2.</p>",
        "id": 211797428,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601488536
    },
    {
        "content": "<p>Thanks for responding! I had hoped there was an undocumented way to achieve this, but I'll deal with keeping the multiple sources of truth in lockstep for now.</p>",
        "id": 211797830,
        "sender_full_name": "Jason Evans",
        "timestamp": 1601488729
    },
    {
        "content": "<p>Well, in your example above, I think you could at least extract action A, right?  You said Action A is in common across all of them, and assuming Action A is always at <code>action[0]</code> you could have:</p>\n<div class=\"codehilite\"><pre><span></span><code>RuleSet: A\n* action[0].title = &quot;Title A&quot;\n// ...\n</code></pre></div>\n\n\n<p>then</p>\n<div class=\"codehilite\"><pre><span></span><code>Instance: PlanDefinition1\nInstanceOf: PlanDefinition\n* insert A\n// ...\n</code></pre></div>",
        "id": 211798292,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601488949
    },
    {
        "content": "<p>Agreed, A could be extracted (and probably B given my naive example), but D could not.</p>",
        "id": 211798403,
        "sender_full_name": "Jason Evans",
        "timestamp": 1601489003
    },
    {
        "content": "<p>I think the STU2 release would solve my issue with the soft indexing feature. I'm looking forward to that!</p>",
        "id": 211798902,
        "sender_full_name": "Jason Evans",
        "timestamp": 1601489239
    }
]