[
    {
        "content": "<p>Is there a SUSHI way to specify that a resource (defined in sushi)  is the data associated with an attachment.  For good reasons, we  want our libraries to contain everything a user needs to execute the measure, rather than links to something.</p>",
        "id": 209130801,
        "sender_full_name": "Keith Boone",
        "timestamp": 1599246672
    },
    {
        "content": "<p>Same for Binary.data</p>",
        "id": 209131247,
        "sender_full_name": "Keith Boone",
        "timestamp": 1599246914
    },
    {
        "content": "<p>As I think about this, I think instead I can do better, by making the referenced content be embedded resources, which actually makes life easier for generation (I think), and for end users referencing them.</p>",
        "id": 209145104,
        "sender_full_name": "Keith Boone",
        "timestamp": 1599257022
    },
    {
        "content": "<p>Contained?</p>",
        "id": 209145481,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599257372
    },
    {
        "content": "<p>Or... Embedded in what?</p>",
        "id": 209145488,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599257383
    },
    {
        "content": "<p>Except that definitional resources like Value Sets don't like to be contained unless defined as instances in Shorthand.<br>\nAnd then there's the whole canonical URL thing to fight.</p>",
        "id": 209151202,
        "sender_full_name": "Keith Boone",
        "timestamp": 1599263842
    },
    {
        "content": "<p>So... you need a way to contain a definitional resource -- and SUSHI gets made if you try to do it the standard way?  Sounds like something we should address in SUSHI.  I don't think we were aware of the issue (although I'm not altogether surprised).</p>",
        "id": 209381484,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1599569758
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> I think you meant \"SUSHI gets mad\"</p>",
        "id": 209538661,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1599670893
    },
    {
        "content": "<p>I did!</p>",
        "id": 209538893,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1599670987
    }
]