[
    {
        "content": "<p>I have this invariant expression:</p>\n<div class=\"codehilite\"><pre><span></span><code>Expression: &quot;(system = &#39;phone&#39; or system = &#39;fax&#39;) implies value.matches(&#39;^+d{1,3}-d{1,3}-d{3,4}-d{4}(;ext\\=d+)?$&#39;)&quot;\n</code></pre></div>\n<p>And it causes this error:</p>\n<div class=\"codehilite\"><pre><span></span><code>mismatched input &#39;&quot;(system&#39; expecting STRING\n</code></pre></div>\n<p>I'm assuming it has something to do with my regex, but this line is just fine:</p>\n<div class=\"codehilite\"><pre><span></span><code>Expression: &quot;country = &#39;USA&#39; implies postalCode.matches(&#39;^d{5}(-d{4})?$&#39;)&quot;\n</code></pre></div>\n<p>I don't see anything obvious...</p>",
        "id": 242143839,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1623281551
    },
    {
        "content": "<p>nm, solved it.  it's the '\\' character.  that needs to be escaped.</p>",
        "id": 242143917,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1623281638
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192166\">@Jean Duteau</span>, does that mean you don't allow phone numbers of the form \"tel://...\"? <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span></p>",
        "id": 242227771,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1623340044
    },
    {
        "content": "<p>yep.  we have a pretty strict telephone requirement for this project.  they actually have to look like real telephone numbers.  the work I've done to take V3 TEL and parse it to FHIR ContactPoints has been fun.</p>",
        "id": 242229561,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1623340776
    },
    {
        "content": "<p>BTW, for those who might care, here is the regexs for tel/fax and emails:</p>\n<div class=\"codehilite\"><pre><span></span><code>Expression: &quot;(system = &#39;phone&#39; or system = &#39;fax&#39;) implies value.matches(&#39;^\\\\\\\\+[0-9]{1,3}-[0-9]{1,3}-[0-9]{3,4}-[0-9]{4}(;ext=[0-9]+)?$&#39;)&quot;\nExpression: &quot;system = &#39;email&#39; implies value.matches(&#39;^[a-zA-Z0-9.!#$%&amp;â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(\\\\\\\\.[a-zA-Z0-9-]+)*$&#39;)&quot;\n</code></pre></div>",
        "id": 242229773,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1623340850
    },
    {
        "content": "<p>So, not just XTN format?</p>",
        "id": 242234626,
        "sender_full_name": "David Pyke",
        "timestamp": 1623342862
    },
    {
        "content": "<p>Do you mean to allow two digit area codes, exchange codes and station numbers? Area codes and exchange codes starting with zero or one? Exchange codes of x11? Disallow numbers outside NANP areas?</p>",
        "id": 242238769,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1623344763
    },
    {
        "content": "<p>I'll admit that it's not the most complete regex in that it allows numbers that might not be valid, but, as far as I know, all valid numbers will pass that regex.</p>",
        "id": 242244776,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1623347334
    },
    {
        "content": "<p>This is what I've used in the past : ^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$</p>",
        "id": 242244881,
        "sender_full_name": "David Pyke",
        "timestamp": 1623347395
    },
    {
        "content": "<p>That only works for NA numbers.</p>",
        "id": 242244963,
        "sender_full_name": "David Pyke",
        "timestamp": 1623347418
    }
]