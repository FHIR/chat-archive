[
    {
        "content": "<p>i can't figure out how to do type based slicing on a value[x] element: <a href=\"https://fshschool.org/FSHOnline/#/share/3ixAYHH\">https://fshschool.org/FSHOnline/#/share/3ixAYHH</a></p>",
        "id": 256192304,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1633420212
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>Profile: Test\nParent: MedicationRequest\n* medication[x] ^slicing.discriminator.type = #type\n* medication[x] ^slicing.discriminator.path = &quot;$this&quot;\n* medication[x] contains test 0..1 MS\n* medication[x][test] only Reference\n</code></pre></div>",
        "id": 256192323,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1633420224
    },
    {
        "content": "<p>results in an illegal element:    \"id\": \"MedicationRequest.test\"</p>",
        "id": 256192324,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1633420224
    },
    {
        "content": "<p>i started with: <code>* medication[test] only Reference</code>which leads to: error No element found at path medication[test] for OnlyRule in Test, skipping rule</p>",
        "id": 256192510,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1633420325
    },
    {
        "content": "<p>What are you trying to accomplish?  If you just use a path like <code>medicationReference</code> or <code>medicationCodeableConcept</code>, the type slicing will happen behind the scenes for you.  You might not see it in the differential (due to choice type renaming), but after you run it through the IG Publisher, you'll see that type slicing is, in fact, applied in the snapshot.</p>\n<p>All that said, in theory, I would expect the above to work -- but it's possible we haven't run into someone trying to manually slice a <code>[x]</code> path, since it happens automatically for you.  So it looks like there is probably a bug in SUSHI when you do it manually.</p>",
        "id": 256231989,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1633434874
    },
    {
        "content": "<p><a href=\"https://github.com/FHIR/sushi/issues/927\">SUSHI#927</a></p>",
        "id": 256232409,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1633435103
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> thanks will try the implicit slicing approach (tried it before, but failed. Will try harder and update this thread)</p>",
        "id": 256249447,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1633442192
    },
    {
        "content": "<p>May I have an related problem? Or I would need some help please.</p>\n<p>The goal of my Observation profile is to say, you can have a value, either Quantity or CodeableConcept (that worked):<br>\n<a href=\"http://build.fhir.org/ig/ahdis/ch-crl/branches/master/StructureDefinition-ch-crl-observation-msuffixofpt.html\">http://build.fhir.org/ig/ahdis/ch-crl/branches/master/StructureDefinition-ch-crl-observation-msuffixofpt.html</a><br>\n<a href=\"https://fshschool.org/FSHOnline/#/share/3iZYJZg\">https://fshschool.org/FSHOnline/#/share/3iZYJZg</a></p>\n<p>Additionally I tried to specify this (that worked, but just in the profile):<br>\nIf you have a valueQuantity, you have to have one valueQuantity.value.<br>\nIf you have a valueCodeableConcept, you have to have one valueCodeableConcept.coding.<br>\n<a href=\"https://fshschool.org/FSHOnline/#/share/3mNLnjQ\">https://fshschool.org/FSHOnline/#/share/3mNLnjQ</a></p>\n<p>But then the validation of the example doesn't work anymore:<br>\n<a href=\"https://fshschool.org/FSHOnline/#/share/3FG4zZt\">https://fshschool.org/FSHOnline/#/share/3FG4zZt</a></p>\n<div class=\"codehilite\"><pre><span></span><code>Sushi: error Element Observation.value[x]:valueQuantity.value has minimum cardinality 1 but occurs 0 time(s). (00:14.0880)\nSushi: File: C:\\Users\\micha\\Documents\\GitHub\\ch-crl\\input\\fsh\\content-until-v0.2.1\\instances\\m-SuffixOfpT-unspecified.fsh (00:14.0881)\nSushi: Line: 1 - 10                                                              (00:14.0882)\nSushi: error Element Observation.value[x]:valueCodeableConcept.coding has minimum cardinality 1 but occurs 0 time(s). (00:14.0900)\nSushi: File: C:\\Users\\micha\\Documents\\GitHub\\ch-crl\\input\\fsh\\content-until-v0.2.1\\instances\\m-SuffixOfpT.fsh (00:14.0902)\nSushi: Line: 1 - 10                                                              (00:14.0903)\n</code></pre></div>",
        "id": 257351021,
        "sender_full_name": "Michaela Ziegler",
        "timestamp": 1634125664
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"233842\">@Michaela Ziegler</span>.  This is a bug in SUSHI 2.0.1.  If you upgrade SUSHI to 2.1.1, you'll find that the errors go away.  We will be updating FSH Online to use SUSHI 2.1.1 very soon!</p>\n<p>A few other notes about your FSH:</p>\n<ul>\n<li>If you want to say that <code>value[x]</code> can only be a Quantity or CodeableConcept, then you can use this line to say that <code>* value[x] only Quantity or CodeableConcept</code></li>\n<li>You don't have to say <code>valueQuantity only Quantity</code> -- if you reference a <code>valueQuantity</code> slice, SUSHI will automatically add the appropriate type constraint for you (since, by definition, <code>valueQuantity</code> is only a Quantity).  The same applies for <code>valueCodeableConcept</code> (or any other specific type slice).</li>\n<li>You also don't have to explicitly specify the slicings for type slices.  As soon as you reference a type slice like <code>valueQuantity</code>, SUSHI will automatically apply the standard type-slicing definition for you.  Note that SUSHI applies <code>#open</code> rules, however, so if you really want it <code>#closed</code> you would have to specify that.  But... if you say <code>* value[x] only Quantity or CodeableConcept</code> then I don't think you need <code>#closed</code> rules anyway since you already said why types are allowed.</li>\n</ul>",
        "id": 257355183,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1634127609
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> <br>\nThanks a lot, it works!<br>\nAnd thanks for your helpful notes, always something to learn! (It is from an IG where I used goFSH.)</p>",
        "id": 257357000,
        "sender_full_name": "Michaela Ziegler",
        "timestamp": 1634128408
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> <br>\nThe version 2.1.1 solves also other problems with some SDC extensions! i.e. valueExpression.language has minimum cardinality 1 but occurs 0</p>",
        "id": 257357551,
        "sender_full_name": "Roeland Luykx",
        "timestamp": 1634128672
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"233842\">@Michaela Ziegler</span> - Oh... GoFSH did that?  OK.  That's good to know.  Sounds like something we should tweak in GoFSH then!</p>",
        "id": 257359382,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1634129517
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span>  A suggestion related to \"No element found at path [element] for [X]\" error message format: </p>\n<p>It would have been great if the [X] has a meaningful description. I see <code>CardRule</code>, <code>OnlyRule</code> and <code>CaretValue</code> kind of shortened form words used (guessing can sometimes be risky if we got a wrong intepretation)</p>\n<div class=\"codehilite\"><pre><span></span><code>error No element found at path valueRatio for CardRule in HnDomainVitalSignsObservationOxygenSaturation, skipping rule\n  File: D:\\_dev\\Git_Repo\\DIPS\\FhirObservation.R4\\IG\\input\\fsh\\profiles\\HnDomainVitalSignsObservationOxygenSaturation.fsh\n  Line: 78\nerror No element found at path valueRatio for OnlyRule in HnDomainVitalSignsObservationOxygenSaturation, skipping rule\n  File: D:\\_dev\\Git_Repo\\DIPS\\FhirObservation.R4\\IG\\input\\fsh\\profiles\\HnDomainVitalSignsObservationOxygenSaturation.fsh\n  Line: 79\nerror No element found at path valueRatio for CaretValueRule in HnDomainVitalSignsObservationOxygenSaturation, skipping rule\n  File: D:\\_dev\\Git_Repo\\DIPS\\FhirObservation.R4\\IG\\input\\fsh\\profiles\\HnDomainVitalSignsObservationOxygenSaturation.fsh\n  Line: 80\n</code></pre></div>",
        "id": 257557035,
        "sender_full_name": "Janaka Peiris",
        "timestamp": 1634226185
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> -- we're taking a deeper look at the issue you reported above in order to fix it, but... <span class=\"user-mention\" data-user-id=\"239822\">@Nick Freiter</span> brought up a good point: Is it even valid to use an arbitrary slice name on a type slice for a 0..1 polymorphic element? The spec for <a href=\"http://hl7.org/fhir/R4/elementdefinition.html#id\">ElementDefinition.id</a> says:</p>\n<blockquote>\n<p>For type choice elements, the id reflects the type slice. e.g. For path = Patient.deceasedBoolean, the id is Patient.deceased[x]:deceasedBoolean</p>\n</blockquote>\n<p>Does this imply that for your example of <code>medication[x]</code>, the slice for the <code>Reference</code> type <em>must</em> have slice name <code>medicationReference</code> (and thus, slice name <code>test</code> would be invalid anyway)?</p>",
        "id": 258107123,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1634594249
    },
    {
        "content": "<p>i think you are right. value[x] slicing is a special form of slicing, and the slice name for a type specific slice is fix. So the slice must be named <code>medicationReference</code> and can't be named <code>test</code></p>",
        "id": 258689939,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1634897247
    },
    {
        "content": "<p>it would be nice to throw a meaningful error in this case (and maybe point to implicite type slicing, as it is easier/ more elegant)</p>",
        "id": 258689940,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1634897247
    }
]