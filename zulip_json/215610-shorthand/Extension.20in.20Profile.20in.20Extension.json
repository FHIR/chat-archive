[
    {
        "content": "<p>I've defined a profile with an extension (ReferenceWithPeriod) </p>\n<div class=\"codehilite\"><pre><span></span><code>Extension: ReferencePeriod\nTitle: &quot;Reference Period&quot;\nId: reference-period\n* value[x] only Period\n\nProfile: ReferenceWithPeriod\nParent: Reference\nTitle: &quot;Reference with Period&quot;\nId: reference-with-period\n* extension contains ReferencePeriod named period 1..1\n</code></pre></div>\n\n\n<p>I'd like to define an extension using that profile, and set the value of the original period extension.  I'm struggling to find syntax that doesn't cause an error - any advice is appreciated.</p>\n<p>Below are some of the options that don't work... (attempted one at a time)</p>\n<div class=\"codehilite\"><pre><span></span><code>Extension: FixedStartReference\nTitle: &quot;FixedStartReference&quot;\nId: fixed-start-reference\n* value[x] only ReferenceWithPeriod\n* value[x].extension[period].start = &quot;2020-01-01&quot;\n* value[x].valuePeriod.start = &quot;2020-01-01&quot;\n* value[x].period.start = &quot;2020-01-01&quot;\n</code></pre></div>",
        "id": 198129578,
        "sender_full_name": "Jill Doty",
        "timestamp": 1589923885
    },
    {
        "content": "<p>What you are trying to do should be possible, and I explain the syntax below, but up front I want to warn you that it seems like you have found a bug specific to Reference unfortunately, so the syntax I explain <em>should</em> work, but doesn't in this case. </p>\n<p>The syntax you would want in this case looks more like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>Extension: FixedStartReference\nTitle: &quot;FixedStartReference&quot;\nId: fixed-start-reference\n* value[x] only ReferenceWithPeriod\n* valueReference.extension[period].valuePeriod.start = &quot;2020-01-01&quot;\n</code></pre></div>\n\n\n<p>Once a <code>value[x]</code> element has been constrained to only one choice, you use the syntax <code>valueDataType</code>, where DataType is the capitalized name of the data type that the choice has been constrained to. We do it this way, because this is how the data would be represented on an actual instance of a FHIR resource. Note that we do not do <code>valueReferenceWithPeriod</code>, because <code>ReferenceWithPeriod</code> is just a profile of <code>Reference</code>, the underlying datatype is still <code>Reference</code>. Then you had the right idea to next access <code>extension[period]</code>. But keep in mind that at this point we are accessing the <code>ReferencePeriod</code> extension, which does not have a <code>start</code> on it. The <code>ReferencePeriod</code> extension has a <code>value[x]</code> constrained to Period, and the Period has a start. So we access that as <code>valuePeriod.start</code>. Then the full path becomes the one shown above.</p>",
        "id": 198192760,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1589978951
    },
    {
        "content": "<p>Again though, my example will still not work. I've replicated your example with other datatypes, and it does work. It is just in the case of Reference that things break down, so this is definitely a bug, which we will work to fix soon. Thanks for the find!</p>",
        "id": 198192898,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1589979019
    },
    {
        "content": "<p>Here is the issue where we will be tracking this: <a href=\"https://github.com/FHIR/sushi/issues/451\">https://github.com/FHIR/sushi/issues/451</a></p>",
        "id": 198194170,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1589979630
    }
]