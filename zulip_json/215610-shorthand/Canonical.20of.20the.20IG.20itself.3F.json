[
    {
        "content": "<p>Is there a way to specify the Canonical of the IG itself?  I'm using this in the CapabilityStatement and would like to say:<br>\n<code>*implementationGuide = Canonical(XXX)</code> where XXX is however I would refer to the IG in general.</p>",
        "id": 262384665,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1637619056
    },
    {
        "content": "<p>Oooh.  No.  There is not.  It's an interesting idea.</p>\n<p>Maybe <code>* implementationGuide = Canonical(my.package.id)</code>?  That's at least kind of consistent since we allow ids to be used inside <code>Canonical()</code> - and it is the <code>id</code> of the IG resource we generate.  According to that logic, I supposed you should also be able to use <code>* implementationGuide = Canonical(MyNameFromSushiConfigYaml)</code> since that goes into <code>ImplementationGuide.name</code> and we also support lookups by name.</p>\n<p>As I said, we don't support that yet, but does that seem a reasonable approach, <span class=\"user-mention\" data-user-id=\"192166\">@Jean Duteau</span>?</p>",
        "id": 262385704,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1637619562
    },
    {
        "content": "<p>i already tried the id one in case you supported that, so that seems like a good option.  the name from the config would also work.</p>",
        "id": 262385816,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1637619625
    },
    {
        "content": "<p>And to be clear, that would resolve to the canonical of the IG resource itself (e.g., <code>http://my.example.org/ImplementationGuide/my.package.id</code>), right?  <em>Not</em> the canonical <em>root</em> of the IG.</p>",
        "id": 262386054,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1637619777
    },
    {
        "content": "<p>yes, to the canonical of the IG resource itself</p>",
        "id": 262386302,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1637619933
    },
    {
        "content": "<p>The issue is that the IG resource is generated from sushi.yaml, and thus there isn't an actual IG resource to specify the canonical in?</p>",
        "id": 262386495,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1637620049
    },
    {
        "content": "<p>Sort of.  The issue is that at the time SUSHI runs, there isn't an actual IG resource to lookup by id and pull the canonical URL from (which is how SUSHI generally handles <code>Canonical</code> for resources -- with a few chicken-and-egg type caveats).</p>",
        "id": 262386700,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1637620151
    },
    {
        "content": "<p><a href=\"https://github.com/FHIR/sushi/issues/963\">SUSHI#963</a></p>",
        "id": 262386972,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1637620316
    },
    {
        "content": "<p>Can you look into the sushi.yaml for a url: value and add that to the canonical lookup table early? I'm not sure I entirely like an autogenerated canonical.</p>",
        "id": 262387329,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1637620480
    },
    {
        "content": "<p>Well... you specify <code>canonical</code> in sushi-config.yaml to establish the <em>root</em> canonical.  Then, by definition, I <em>think</em> that the IG canonical <em>must be</em> <code>${rootCanonical}/ImplementationGuide/${packageId}</code>.  Or is it the case that custom IG URLs are allowed to go outside of that pattern?</p>",
        "id": 262387736,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1637620738
    },
    {
        "content": "<p>If it is fixed to that, then I'm ok. But if it isn't I'd rather not force a canonical.</p>",
        "id": 262387854,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1637620811
    },
    {
        "content": "<p>I have to sign off for the day, but I'll try to confirm.</p>",
        "id": 262387956,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1637620893
    },
    {
        "content": "<p>I've experimented a bit and found that the <code>ImplementationGuide.url</code> must <em>end with</em> <code>/ImplementationGuide/${packageId}</code>.  If it doesn't match that at the end, then the IG Publisher reports errors in QA.  The first part of the URL, however, can be anything and it seems it does not have to correlate w/ the canonical root of any other resources in the IG.  But... I think best practice is for them to line up.</p>",
        "id": 262499368,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1637694250
    },
    {
        "content": "<p>I don't think it needs to be ending with <code>ImplementationGuide/${packageId}</code> but <code>ImplementationGuide/${Ig_Id}</code></p>",
        "id": 262858735,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1637996560
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> do you want to confirm?</p>",
        "id": 262858739,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1637996571
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> - I may have used those two things interchangeably. Are there cases where the package id is not the same as the IG id? I think I assumed they are meant to match.</p>",
        "id": 262904196,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1638065691
    },
    {
        "content": "<p>But yeah, youâ€™re right - in my experimentation, it was actually the IG id that I was using.</p>",
        "id": 262904261,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1638065792
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192166\">@Jean Duteau</span> - As of the latest SUSHI 2.3.0 release, you should now be able to use <code>Canonical(package-id)</code> to refer to the IG URL.  Thanks for the idea!</p>",
        "id": 273293638,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1645828223
    }
]