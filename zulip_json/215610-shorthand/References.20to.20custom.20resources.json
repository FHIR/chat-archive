[
    {
        "content": "<p>How strict should SUSHI be with References to custom resources? The following <code>FSH</code> works on the master branch (not released on npm yet!):</p>\n<div class=\"codehilite\"><pre><span></span><code>Resource: TestResource\n* isValid 1..1 boolean &quot;this is something&quot;\n\n\nInstance: MyTestResource\nInstanceOf: TestResource\n* isValid = true\n\n\nInstance: MyPatient\nInstanceOf: Patient\n* name.given = &quot;Bob&quot;\n* extension.url = &quot;http://example.com/test&quot;\n* extension.valueReference = Reference(MyTestResource)\n</code></pre></div>\n<p>It produces the following MyPatient in json-form: </p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"nt\">\"resourceType\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Patient\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"MyPatient\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"given\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"Bob\"</span>\n      <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">\"extension\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://example.com/test\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"valueReference\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"reference\"</span><span class=\"p\">:</span> <span class=\"s2\">\"TestResource/MyTestResource\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>I realize that the usage of custom-resources <a href=\"#narrow/stream/179166-implementers/topic/Linking.20to.20custom.20resource.20types\">is strongly discouraged</a>. But if  for some reason I have to use them, I would like to do it in the minimally breaking way possible. I like the idea by <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <a href=\"#narrow/stream/179166-implementers/topic/Custom.20Resources.2C.20Basic-derived.20resources.20and.20Logical.20Models\">for handling references to custom resources</a>: Use the datatype <code>uri</code> instead of <code>Reference</code>.</p>\n<p>Would it make sense that SUSHI emits a warning when the user defines a standard resource that references a custom resource? This would inform the user that even the instance of the standard resource is no longer FHIR compliant, and could help establish best-practices for working with custom resources.</p>",
        "id": 241537215,
        "sender_full_name": "Martin Höcker",
        "timestamp": 1622814578
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"217988\">@Martin Höcker</span> - that's a great question, and kudos to you for finding and using an advanced feature only merged to master <em>yesterday</em>!  I think what you propose (issuing a warning when an instance of a standard resource references a custom resource) makes sense.  I imagine it would be the same for a profile of a standard resource that references a custom resource.  What about an extension definition that constrains <code>valueReference</code> to a custom resource type? Is the definition of that extension warnable? or only if you use that extension in a profile or instance of a standard resource?</p>",
        "id": 241545453,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1622817729
    },
    {
        "content": "<p>I would think that if you are going to support  custom resources, and if you are going to warn about them, then you need to warn on any use. An extension could be defined in an IG and, other than that, never used within the IG. That should trigger a warning because it's an issue that any user of the extension is going to need to be aware of.</p>",
        "id": 241558627,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1622823333
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> The extension-definition that constraints valueReference to a custom resource is an interesting point. I understand <span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span>'s argument that if we warn about standard resources referencing custom resources, we should also warn when the standard resource is a StructureDefinition. </p>\n<p>But I think it would be OK to omit the warning in this special case, maybe on the condition that StructureDefinition.context constaints usage to one or more custom resources.</p>",
        "id": 241685664,
        "sender_full_name": "Martin Höcker",
        "timestamp": 1622976531
    },
    {
        "content": "<p>Side question: Would it be possible to \"transpile\" definitions of custom resources to profiles of the Basic resource?</p>",
        "id": 241685700,
        "sender_full_name": "Martin Höcker",
        "timestamp": 1622976595
    },
    {
        "content": "<p>The publisher will error/warn on non-resolved content.  Why should FSH take that on?  (And why is FSH supporting custom resources at all??)</p>",
        "id": 241691000,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1622984721
    },
    {
        "content": "<p>Lloyd, we believe some work groups will migrate along a path where they eventually design, create, and maintain their base resources in FSH.</p>",
        "id": 241716339,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1623022803
    },
    {
        "content": "<p>Creating resources is non-conformant unless you're HL7.  I'm not understanding why FSH would support non-conformant behavior?</p>",
        "id": 241727890,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1623040549
    },
    {
        "content": "<p>We want to support the HL7 use case.  But in addition, FSH users <em>have</em> specifically requested support for defining custom FHIR resources. The most common reason is if they want to exhange proprietary data <em>in-house</em> using the FHIR exchange API.  If you need to design a custom API for in house use anyway, why not piggyback on the FHIR spec rather than creating something from scratch?  We specifically warn in the docs that you must not use custom resources for inter-organizational data exchange.</p>",
        "id": 241729232,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1623041696
    },
    {
        "content": "<p>I'm interested in report backs from such organizations - what challenges do they have with an approach like that?</p>",
        "id": 241731488,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623044605
    },
    {
        "content": "<p>Do you also warn that they can't use standard XML or JSON schemas, can't use public test servers or registries and can't use standard validation or publication tooling?</p>",
        "id": 241774559,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1623071885
    },
    {
        "content": "<p>And that any such systems are explicitly non-conformant?</p>",
        "id": 241774590,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1623071904
    },
    {
        "content": "<p>We note that they do not work w/ the FHIR IG Publisher.  It seems kind of obvious to me that custom resources wouldn't work with the standard FHIR schemas, public test servers, validators, or registries.  Do you really think we need to point that out?</p>",
        "id": 241775181,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1623072199
    },
    {
        "content": "<p>It should probably have a large warning with all that content and a special flag in sushi-config.yaml to shut it up</p>",
        "id": 241775652,
        "sender_full_name": "David Pyke",
        "timestamp": 1623072407
    },
    {
        "content": "<p>something like:  Non-conformant FHIR creation warning: false</p>",
        "id": 241775751,
        "sender_full_name": "David Pyke",
        "timestamp": 1623072454
    },
    {
        "content": "<p>The more red flags and warning bells we can raise when implementers pursue non-conformant solutions, the better.</p>",
        "id": 241783485,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1623075673
    },
    {
        "content": "<p>Might also be useful to nudge them towards Basic as an alternative.</p>",
        "id": 241783522,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1623075692
    },
    {
        "content": "<p>Yeah, it might be interesting to support something like <span class=\"user-mention\" data-user-id=\"217988\">@Martin Höcker</span> suggested above -- an automated solution to make <code>Basic</code> variants of the resources.  But I don't think you can define new extensions inline in a profile, right?  So that will result in a new extension for every element in the Resource, right?</p>",
        "id": 241791421,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1623078680
    },
    {
        "content": "<blockquote>\n<p>Do you really think we need to point that out?</p>\n</blockquote>\n<p>Sadly the answer is: I don't believe that you have to, and I still can't believe that you have to, in spite of years of evidence that, yes, you do have to</p>",
        "id": 241791793,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623078806
    },
    {
        "content": "<blockquote>\n<p>So that will result in a new extension for every element in the Resource, right?</p>\n</blockquote>\n<p>Yes. At least technically. I'm not sure all the tools support it but they can be contained resources but that would change the extension ids.</p>",
        "id": 241792037,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623078892
    },
    {
        "content": "<p>But.... you don't necessarily have to publish them? (I mean, there's no way not to right now but that doesn't have to be final?)</p>",
        "id": 241792104,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623078917
    }
]