[
    {
        "content": "<p>We've been waiting a while for this and are super excited to announce the availability of <strong>SUSHI 1.0.0 Beta 1</strong>!</p>\n<p>SUSHI 1.0.0 Beta 1 is the first beta release of SUSHI 1.0, with full support for FHIR Shorthand 1.0 and a new project structure to better support IG Publisher integration. We could really use some beta testers and would love your feedback.  We're particularly interested in:</p>\n<ol>\n<li>Did this break your existing project? (i.e., does your project compile different with SUSHI 1.0.0 Beta 1 than with SUSHI 0.16.0)</li>\n<li>Were you able to successfully migrate to the new project structure?</li>\n</ol>\n<p>There's a lot that has changed regarding project structure, as well as some deprecated features, and there is a different command to install the beta (since it is not an official release), so... please checkout the <a href=\"https://github.com/FHIR/sushi/releases/tag/v1.0.0-beta.1\">Release Notes</a> and <a href=\"https://fshschool.org/docs-beta/\">SUSHI 1.0.0 Beta Documentation</a>.</p>",
        "id": 212118659,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601667356
    },
    {
        "content": "<p>When do you expect to fix the issue with the auto-builder? If I read the release notes correctly, then we can't publish to the build environment via git commit... (ie the git webhook...)</p>",
        "id": 212142933,
        "sender_full_name": "David Hay",
        "timestamp": 1601683882
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 212160334,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601713389
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 212160456,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601713578
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 212160558,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601713708
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 212160569,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601713729
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 212160727,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601713982
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191321\">@David Hay</span> -- You're right -- until it's supported in Auto-Build, it won't work correctly w/ the Auto-Build process that's invoked via the webhook. <br>\n We're working out the details of how it should work, but there are some questions around what this means for publishing official versions, etc.  If you want to follow along, here's the thread: <a href=\"#narrow/stream/179252-IG-creation/topic/Selecting.20SUSHI.20Versions.20in.20AutoBuild\">https://chat.fhir.org/#narrow/stream/179252-IG-creation/topic/Selecting.20SUSHI.20Versions.20in.20AutoBuild</a></p>",
        "id": 212230328,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601829364
    },
    {
        "content": "<p>OK I am using the beta version and converted my test IG over and updated my custom scripts.  Is a simple matter of adding an ig parameter to point to the fsh-generated folder for resources and pages to add the fsh content to my custom content in the input directory.  Also a simple bash to modify adding  ig.yml to the input/data and running using the autobuild. ( without running sushi ... never thought that was a great feature anyway...)</p>",
        "id": 212364615,
        "sender_full_name": "Eric Haas",
        "timestamp": 1601937118
    },
    {
        "content": "<p>I like the new simpler structure,  everything working ok .. so far... I miss using a single YAML file for the  ig,  ini, and package -list.json but oh well.</p>",
        "id": 212364784,
        "sender_full_name": "Eric Haas",
        "timestamp": 1601937241
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span>  I took the beta version this morning and flowing the latest folder structure as per the guideline. Now I can see that all the artifacts are being generated under the folder 'fsh-generated\\resources'. where as if I'm not wrong then in earlier versions, it used to generate under specific folders: 'examples, profiles, vocabulary'-- is this by design? is there a way (any configuration) to get those artifacts specifically( profiles, examples and vocabulary) generated in specific folders?</p>",
        "id": 212372952,
        "sender_full_name": "Shovan Roy",
        "timestamp": 1601944438
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"193760\">@Shovan Roy</span> -- thanks for the feedback.  Currently there is not a way to make SUSHI distribute the files into separate folders.  We decided to put them all into <code>resources</code> for simplicity, but if you and others prefer them being split, that is good information to know.  This is something we could revisit -- but it will also require additional changes to the base template.  If you don't mind me asking, why do you like them split?  Is it just to make it easier for you to personally review them?</p>",
        "id": 212419556,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601987239
    },
    {
        "content": "<p>I'd be happy if sushi put the files to the folders defined in the base template.</p>\n<ul>\n<li>profiles (structuredefs for profiles)</li>\n<li>extensions (structuredefs for extensions)</li>\n<li>vocabulary (NamingSystem, CodeSystem, ValueSet)</li>\n<li>models (structuredefs for LogicalModels)</li>\n<li>capabilities</li>\n<li>operations</li>\n<li>maps (concept and structure)</li>\n<li>testing (testscript, testreport)</li>\n<li>history (for history provenance/bundles)</li>\n</ul>",
        "id": 212426020,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601990443
    },
    {
        "content": "<p>I'd be even happier if sushi introduces a feature that allows me to map this and filenames, e.g. <br>\ni could chose if my generated extensions go into <code>resources/StructureDefinition-xxxx</code>(as is now) or into <code>extensions/extension-xxx</code> (in case I don't need the StructureDefinition prefix)</p>",
        "id": 212426458,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601990674
    },
    {
        "content": "<p>Im with Chris on this one,  I like them in <em>one folder</em>  ...</p>\n<p>Lets not overcomplicate this this because:</p>\n<ol>\n<li>in most cases your source is the  <code>.fsh</code> file and not the generated-output  (Hell it is even recommended to add the directory to the .gitignore file)  you can use as many or as few <code>.fsh</code> files as you want and group how you like therein.  (e.g. my_awesome_proifles.fhs,   my_fabulous_examples.fsh)</li>\n<li>The IG publisher does not care, it defaults to the /resources folder and  you are stuck pointing to all the folders anyway in the the implementation guide folder parameters.</li>\n<li>Not everyone is using the templates + ig-publisher so lets not have it dictate this behaviour.  - They should be separate concerns!  Otherwise why remove the integration of the ini and  package-list from the the config.yaml file?</li>\n<li>It make lifes <em>more difficult</em> for those of us who use our own scripts to process the output.</li>\n</ol>",
        "id": 212434705,
        "sender_full_name": "Eric Haas",
        "timestamp": 1601994174
    },
    {
        "content": "<p>It's ok to like them in one folder, but it's also ok to like things separate, right?</p>",
        "id": 212437387,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601995218
    },
    {
        "content": "<p>I keep them separate for reasons of work segmentation and ownership - the team that makes logical models is not the same that makes testing artifacts</p>",
        "id": 212437466,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601995257
    },
    {
        "content": "<ol>\n<li>the fsh file is not the single source. I have logical models outside fsh, I have to manage codesystems outside fsh..I don't see the issue</li>\n</ol>",
        "id": 212437725,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601995350
    },
    {
        "content": "<ol start=\"2\">\n<li>The base template uses the folders I mentioned above</li>\n</ol>",
        "id": 212437774,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601995374
    },
    {
        "content": "<ol start=\"3\">\n<li>I don't understand- you don't use the base templates?</li>\n</ol>",
        "id": 212437894,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601995434
    },
    {
        "content": "<ol start=\"4\">\n<li>Also don't understand - the resources folder is supported, as well as the separated folders. Why would we abandon the separate folders? If you want to use one folder, you can</li>\n</ol>",
        "id": 212438155,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601995540
    },
    {
        "content": "<p>About the file names - the publisher supports different file name patterns, my suggestion is for sushi to do the same.</p>",
        "id": 212438297,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601995604
    },
    {
        "content": "<p>Those patterns are hard coded and I think that is ok</p>",
        "id": 212438384,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601995651
    },
    {
        "content": "<blockquote>\n<p>About the file names - the publisher supports different file name patterns, my suggestion is for sushi to do the same.</p>\n</blockquote>\n<p>Last time I tried using different file name patterns, it did not work at all (and that wasn't very long ago).  There were a few patterns you could select from, but they were far from arbitrary.</p>",
        "id": 212440952,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601996704
    },
    {
        "content": "<ol>\n<li>using <code>resources</code>or using the other folders (profiles, etc) - that is what we have now, I'd like sushi to be able to split the files. If not, no worries, I can move them by hand and I expect that sushi will avoid creating duplicates. So I don't see an issue.</li>\n</ol>",
        "id": 212447180,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601999265
    },
    {
        "content": "<ol start=\"2\">\n<li>the filenames pattern - would be a more advanced, later feature that should be discussed before adding. If I have a CodeSystem whose id is \"mycodes\", I can save it as <code>resources/CodeSystem-mycodes.json</code> or <code>vocabulary/CodeSystem-mycodes.json</code> and IIRC, also as  <code>vocabulary/CodeSystem/mycodes.json</code>. I like that.</li>\n</ol>",
        "id": 212447736,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601999508
    },
    {
        "content": "<p>here is my file tree,  I manage both my files and fsh files.  the fsh-generated files are separate from the ones I manage as they should be.  we are not talking about how you manage your file and they are not merged with the fsh-generated ones.</p>\n<p>and shockingly yes ...you don't have to publish an IG using the templates or ig-pub for that matter so sushi is not married to it.</p>\n<div class=\"codehilite\"><pre><span></span><code>├── FHIR-us-davinci-cdex.xml\n├── README.md\n├── SUSHI-GENERATED-FILES.md\n├── _gencontinuous.bat\n├── _gencontinuous.sh\n├── _genonce.bat\n├── _genonce.sh\n├── _updatePublisher.bat\n├── _updatePublisher.sh\n├── fsh-generated\n│   ├── includes\n│   └── resources\n├── ig.ini\n├── input\n│   ├── data\n│   ├── draft\n│   ├── examples\n│   ├── fsh\n│   ├── images\n│   ├── includes\n│   ├── pagecontent\n│   ├── resources\n│   └── yaml-resources\n</code></pre></div>",
        "id": 212457411,
        "sender_full_name": "Eric Haas",
        "timestamp": 1602004301
    },
    {
        "content": "<p>ok. is there anything that doesn't work?</p>",
        "id": 212469855,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1602010570
    },
    {
        "content": "<p>If the question is about segmenting resources in folders, it is not mandatory, but it is very much appreciated - my point on that one is that whether sushi wants to split the resources or not, it's fine  for the template.</p>",
        "id": 212470043,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1602010673
    },
    {
        "content": "<p>If sushi wants to support yet another structure of resources, that would be messy, and at that moment, I'd say it's probably good to consider a file naming pattern.</p>",
        "id": 212470167,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1602010732
    },
    {
        "content": "<p>Sushi is prepending text into markdown files in my input/includes directory each time I run it.</p>\n<div class=\"codehilite\"><pre><span></span><code>&lt;!-- example-list-generator.md {% comment %}\n*****************************************************************************************\n*                            WARNING: DO NOT EDIT THIS FILE                             *\n*                                                                                       *\n* This file is generated by SUSHI. Any edits you make to this file will be overwritten. *\n*                                                                                       *\n* To change the contents of this file, edit the original source file at:                *\n* Davinci-CDEX/input/includes/example-list-generator.md                                 *\n*****************************************************************************************\n{% endcomment %} --&gt;\n&lt;!-- example-list-generator.md {% comment %}\n*****************************************************************************************\n*                            WARNING: DO NOT EDIT THIS FILE                             *\n*                                                                                       *\n* This file is generated by SUSHI. Any edits you make to this file will be overwritten. *\n*                                                                                       *\n* To change the contents of this file, edit the original source file at:                *\n* Davinci-CDEX/input/includes/example-list-generator.md                                 *\n*****************************************************************************************\n{% endcomment %} --&gt;\n&lt;!-- example-list-generator.md {% comment %}\n*****************************************************************************************\n*                            WARNING: DO NOT EDIT THIS FILE                             *\n*                                                                                       *\n* This file is generated by SUSHI. Any edits you make to this file will be overwritten. *\n*                                                                                       *\n* To change the contents of this file, edit the original source file at:                *\n* Davinci-CDEX/input/includes/example-list-generator.md                                 *\n*****************************************************************************************\n{% endcomment %} --&gt;\n</code></pre></div>",
        "id": 212471917,
        "sender_full_name": "Eric Haas",
        "timestamp": 1602011632
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> -- yikes.  That doesn't look good.  We don't intend to modify anything in <code>input/*</code> -- but it's possible that this is somehow sneaking in because we're also trying to keep support for the \"legacy\" project structures (at least for now) -- which <em>does</em> append those when it <em>copies</em> files.  We'll look into this, because clearly it is not a good thing.</p>",
        "id": 212474193,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1602012786
    },
    {
        "content": "<p>add the all important id paremeter to the this documentation </p>\n<p><a href=\"/user_uploads/10155/0NslctqR2rOSxgbyAACqBR-Q/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/0NslctqR2rOSxgbyAACqBR-Q/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/0NslctqR2rOSxgbyAACqBR-Q/image.png\"></a></div>",
        "id": 212507028,
        "sender_full_name": "Eric Haas",
        "timestamp": 1602035371
    },
    {
        "content": "<p>so instead would be...</p>\n<div class=\"codehilite\" data-code-language=\"YAML\"><pre><span></span><code><span class=\"nt\">dependencies</span><span class=\"p\">:</span>\n  <span class=\"nt\">hl7.fhir.us.core</span><span class=\"p\">:</span>\n    <span class=\"nt\">uri</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">http://hl7.org/fhir/us/core</span>\n    <span class=\"nt\">version</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">3.1.1</span>\n    <span class=\"nt\">id</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">uscore</span>\n  <span class=\"nt\">hl7.fhir.us.davinci-hrex</span><span class=\"p\">:</span>\n    <span class=\"nt\">uri</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">http://hl7.org/fhir/us/davinci-hrex</span>\n    <span class=\"nt\">version</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">0.2.0</span>\n    <span class=\"nt\">id</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">hrex</span>\n<span class=\"nt\">parameters</span><span class=\"p\">:</span>\n</code></pre></div>",
        "id": 212507052,
        "sender_full_name": "Eric Haas",
        "timestamp": 1602035399
    },
    {
        "content": "<p>actually this is wrong as well should be the 'Identity of the IG that this depends on' so</p>\n<div class=\"codehilite\" data-code-language=\"YAML\"><pre><span></span><code><span class=\"nt\">dependencies</span><span class=\"p\">:</span>\n  <span class=\"nt\">hl7.fhir.us.core</span><span class=\"p\">:</span>\n    <span class=\"nt\">uri</span><span class=\"p\">:</span> <span class=\"s\">'http://hl7.org/fhir/us/core/ImplementationGuide/hl7.fhir.us.core'</span>\n    <span class=\"nt\">version</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">3.1.1</span>\n    <span class=\"nt\">id</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">uscore</span>\n  <span class=\"nt\">hl7.fhir.us.davinci-hrex</span><span class=\"p\">:</span>\n    <span class=\"nt\">uri</span><span class=\"p\">:</span> <span class=\"s\">'http://hl7.org/fhir/us/davinci-hrex/ImplementationGuide/hl7.fhir.us.davinci-hrex'</span>\n    <span class=\"nt\">version</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">0.2.0</span>\n    <span class=\"nt\">id</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">hrex</span>\n</code></pre></div>",
        "id": 212509947,
        "sender_full_name": "Eric Haas",
        "timestamp": 1602038825
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191469\">Chris Moesel</span> <a href=\"#narrow/stream/215610-shorthand/topic/Announcing.20SUSHI.201.2E0.2E0.20Beta.201/near/212419556\">said</a>:</p>\n<blockquote>\n<p>Hi <span class=\"user-mention silent\" data-user-id=\"193760\">Shovan Roy</span> -- thanks for the feedback.  Currently there is not a way to make SUSHI distribute the files into separate folders.  We decided to put them all into <code>resources</code> for simplicity, but if you and others prefer them being split, that is good information to know.  This is something we could revisit -- but it will also require additional changes to the base template.  If you don't mind me asking, why do you like them split?  Is it just to make it easier for you to personally review them?</p>\n</blockquote>\n<p>Thanks <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> , </p>\n<p>The earlier structure was more helpful for us for the following reasons:</p>\n<ol>\n<li>We are expecting that the number of profiles for our IG may grow up to ~250 profiles (SD) having ~400 samples and ~25 terminology artifacts. Having dedicated folder for each type of artifacts helps to manage things. </li>\n<li>We get mix of profile contributors. Some of them are more comfortable to edit profiles on a existing UI based tool and some uses sushi. and there are people who are working only on samples. So keeping everything in one folder may be bit hectic. <br>\nThus, I was wondering if introduction of flag can be wished in 'sushi-config.yaml' which can instruct the engine to generate the older structure under 'fsh-generated' if enabled.</li>\n</ol>",
        "id": 212515181,
        "sender_full_name": "Shovan Roy",
        "timestamp": 1602046494
    },
    {
        "content": "<p>My current view on this is: you do need to structure the files and folders, but what you structure is the input content, you don't need to structure files that are not authored.</p>",
        "id": 212519985,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1602052763
    },
    {
        "content": "<p>the publisher already supports this by using certain folders.</p>",
        "id": 212520002,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1602052800
    },
    {
        "content": "<p>sushi can already support several files - which is what I use: I have a few files e.g. vaccination-profiles.fsh, vaccination-examples-fsh, vaccination-vocabulary.fsh.</p>",
        "id": 212520085,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1602052877
    },
    {
        "content": "<p>in a later step, it would be more convenient for me to control more the file names, but as I think of it, the advantage would be only to simplify my copy-paste, because I won't commit the fsh-generated folder, only the input/... folders, including input/fsh</p>",
        "id": 212520172,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1602052991
    },
    {
        "content": "<p>IIRC, you can add folders under input/fsh</p>",
        "id": 212520186,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1602053013
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> -- thanks for reporting on the issue in the documentation.  Regarding <code>id</code>, we'll add that to the doc.  Re: <code>url</code>, we've got it right in our code and in our tests, but we got it wrong in the FSH School documentation.  We'll fix that.  One thing to note, however, is that in most cases you don't need to put dependency URLs in the config.  If you don't include it, SUSHI will look up the package by packageId and version then extract the url from the IG resource in the package (if it exists).</p>",
        "id": 212549138,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1602073128
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193760\">@Shovan Roy</span> -- thanks for providing more detail.  We will consider adding a control parameter in the config to affect how/where the files are output.  We do, however, recognize that while there's value in choice there is also value in consistency -- so I can't promise we'll actually do it, but I can promise we'll revisit it.  If others feel strongly about this, we'd love to hear from them.</p>\n<p>As for your current situation, as others have noted, in typical SUSHI use cases, you should not be managing anything in the output <code>fsh-generated</code> folder, because it is not the source.  The <code>.fsh</code> files are the source -- and SUSHI allows you to arrange those in very flexible ways.  In fact, directly managing files in <code>fsh-generated</code> will not work because SUSHI <em>clears</em> all files in <code>fsh-generated</code> before it runs.  Any changes you make will be deleted every time SUSHI runs.</p>\n<p>For people who build and edit the resources using other tools (not FSH/SUSHI), they should be managing those files in the standard locations under <code>input</code> (which allow for multiple predefined subfolders).  SUSHI will never overwrite those files, but it will read them so that <code>.fsh</code> files can reference them.  If you want to <em>create</em> resources using FSH but then <em>edit</em> them in other tools, you'll need to copy them from <code>fsh-generated/resources</code> to <code>input/*</code> and then remove or comment out the FSH definition in your source.  It's not advised to have multiple concurrent \"gold source\"s for the same resource.</p>\n<p>I hope that helps, but if I've misunderstood your workflow, feel free to correct me!</p>",
        "id": 212550881,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1602073937
    },
    {
        "content": "<p>thanks,    I Know but the ids are helpful for managing links in Jekyll.    they shorten site variables considerably</p>",
        "id": 212554098,
        "sender_full_name": "Eric Haas",
        "timestamp": 1602075594
    },
    {
        "content": "<p>so its worth it to spend a little more effort in the configuration</p>",
        "id": 212554234,
        "sender_full_name": "Eric Haas",
        "timestamp": 1602075648
    },
    {
        "content": "<p>Please join our discussion tomorrow, Thursday October 8 at 9-10 am Eastern US time.  We will be focusing on the SUSHI 1.0 release. <br>\n<a href=\"https://teams.microsoft.com/l/meetup-join/19%3ameeting_OGJmYmVlM2UtYzVkZi00YWJjLWJlNzMtN2ZkYTVkYTA1Mzlk%40thread.v2/0?context=%7b%22Tid%22%3a%22c620dc48-1d50-4952-8b39-df4d54d74d82%22%2c%22Oid%22%3a%22f9a60b6f-fbcc-48d0-bc8e-d6d742b4b339%22%7d\">Join Microsoft Teams Meeting</a><br>\n+1 540-492-5664   United States, Roanoke (Toll) <br>\nConference ID: 889 990 654#</p>",
        "id": 212560586,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1602078497
    }
]