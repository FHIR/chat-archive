[
    {
        "content": "<p>Hi all!<br>\nWe are investigating the use of shorthand for the creation of (many) TestScript instances. Every TestScript has specific information and a lot of duplicate info such as a set of asserts. Instead of copying this into every TestScript we want to inherit this information.</p>\n<p>Our current approach based on <a href=\"http://build.fhir.org/ig/HL7/fhir-shorthand/reference.html#defining-instances\" title=\"http://build.fhir.org/ig/HL7/fhir-shorthand/reference.html#defining-instances\">paragraph 3.4.5. of the IG</a>, is to create StructureDefinitions that specify a batch of asserts using fixed values. (see the Forge PrinstScrint below for our test profile)</p>\n<p>Creating an instance using shorthand based on this profile, as shown in this <a href=\"https://simplifier.net/snippet/wardweistra/8\" title=\"https://simplifier.net/snippet/wardweistra/8\">snippet</a>, doesn’t result in adding the asserts to the instance. It adds the fixed values of the .url, .name ect., but it doesn’t go into the .test.action. Nor does it when we specify .test.name in shorthand. </p>\n<p>Are we doing something wrong? Would this be a good approach? Any suggestions? <a href=\"user_uploads/10155/HEuq4KY--RUZhBXJx7MH5Mxp/Testscript-profile.png\" title=\"user_uploads/10155/HEuq4KY--RUZhBXJx7MH5Mxp/Testscript-profile.png\">Testscript-profile.png</a></p>\n<div class=\"message_inline_image\"><a href=\"user_uploads/10155/HEuq4KY--RUZhBXJx7MH5Mxp/Testscript-profile.png\" title=\"Testscript-profile.png\"><img src=\"user_uploads/10155/HEuq4KY--RUZhBXJx7MH5Mxp/Testscript-profile.png\"></a></div>",
        "id": 191865176,
        "sender_full_name": "Ardon Toonstra",
        "timestamp": 1585219002
    },
    {
        "content": "<p>I am guessing what is happening here is that SUSHI is not being aggressive enough in which values are getting fixed. When you specify .test.name SUSHI should won't dig down into a fixed value like .test.action.assert.description, because .test.action is an array and we don't necessarily know how many elements are in that array. Now, I think SUSHI should be smart enough to recognize that the array is sliced with <code>1..1</code> elements, and automatically add those elements, but that is not something that has yet been implemented.  I've made an issue on our GitHub to track this feature: <a href=\"https://github.com/FHIR/sushi/issues/300\" title=\"https://github.com/FHIR/sushi/issues/300\">https://github.com/FHIR/sushi/issues/300</a>.</p>\n<p>We are adding a new feature in our next release called <code>RuleSet</code>(<a href=\"http://build.fhir.org/ig/HL7/fhir-shorthand/reference.html#defining-rule-sets\" title=\"http://build.fhir.org/ig/HL7/fhir-shorthand/reference.html#defining-rule-sets\">http://build.fhir.org/ig/HL7/fhir-shorthand/reference.html#defining-rule-sets</a>) which could provide a more quickly available solution to your problem. A <code>RuleSet</code> acts as a reusable chunk of rules, so if all your instances needed a certain set of rules applied, it may be easier to define that set of rules once using a <code>RuleSet</code>, and apply that <code>RuleSet</code> to each <code>Instance</code>.</p>",
        "id": 191874850,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1585224881
    },
    {
        "content": "<p>Thanks for your comprehensive answer! <br>\nI believe you are right, the RuleSet is more in the direction of our use case. I will certainly try that one out once it is released. Do you have an estimated date for the next release?</p>",
        "id": 191877174,
        "sender_full_name": "Ardon Toonstra",
        "timestamp": 1585226234
    },
    {
        "content": "<p>Just a check: mixins of two RuleSet that both say something about Testscripts.test.action.asserts be added next to each other? So they don't overwrite each other?</p>",
        "id": 191877384,
        "sender_full_name": "Ardon Toonstra",
        "timestamp": 1585226390
    },
    {
        "content": "<p>We hope to have the release by the end of this week, but it would be early next week at the latest.</p>\n<p>Well if two <code>RuleSet</code>s both changed the exact same value, like if they both specified the value of <code>.test[0].action[0].assert.description</code>, then the whichever <code>RuleSet</code> was applied second would overwrite whichever <code>RuleSet</code> was applied first. But assuming the <code>RuleSet</code>s are touching different values within an element, then yes two <code>RuleSet</code>s can touch the same element alongside each other.</p>",
        "id": 191881321,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1585228282
    }
]