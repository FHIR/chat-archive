[
    {
        "content": "<p>I'm trying to set up Sushi/IGpublisher on a new laptop and when I run _updatePublisher, it is telling me that \"Access is Denied\". I never saw this error on my old laptop so I'm wondering if I need to do something special I need to do about directory permissions. Any ideas about what is causing access to be denied? If it matters, on the old machine the JAR file is in input-cache but on this new machine, I've put it in the parent folder.</p>\n<p>C:\\Users\\cnewman\\Documents\\FHIRShorthand\\fhir-birthdefectsreporting-ig&gt;_updatePublisher</p>\n<p>Checking internet connection...<br>\nReply from 104.196.166.17: bytes=32 time=63ms TTL=116<br>\nWe're online</p>\n<p>IG Publisher FOUND in parent folder<br>\nOverwrite \"C:\\Users\\cnewman\\Documents\\FHIRShorthand\\publisher.jar\"? (Y/N) y<br>\nDownloading most recent publisher to Parent folder - it's ~100 MB, so this may take a bit<br>\nAccess is denied.</p>\n<p>Updating scripts<br>\nUpdate scripts? (Y/N) y<br>\nUpdating <a href=\"http://_updatePublisher.sh\">_updatePublisher.sh</a><br>\nAccess is denied.<br>\n\"Errors encountered during download: 1\"<br>\nUpdating _genonce.bat<br>\nAccess is denied.</p>",
        "id": 208240166,
        "sender_full_name": "Craig Newman",
        "timestamp": 1598544966
    },
    {
        "content": "<p>SUSHI uses the _updatePublisher script provided by the Sample IG.  <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> -- is this something you can help with?</p>",
        "id": 208240992,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1598545375
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192758\">@Craig Newman</span> windows or mac/linux?</p>",
        "id": 208243001,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1598546323
    },
    {
        "content": "<p>seem like the current user does not have permissions to write to the local folder. Can you test it? just do a \"md test\" or \"mkdir test\" on your folder, see if that works</p>",
        "id": 208243163,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1598546406
    },
    {
        "content": "<blockquote>\n<p>windows or mac/linux?</p>\n</blockquote>\n<p>Looks like windows from the path.</p>",
        "id": 208244517,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1598547056
    },
    {
        "content": "<p>Windows. In the CMD window, I entered mkdir test and it created a \"test\" folder.</p>",
        "id": 208244737,
        "sender_full_name": "Craig Newman",
        "timestamp": 1598547147
    },
    {
        "content": "<p>I've had that problem with checked out git repos.  Something locks the directory.  Logging out and in fixes it (as does rebooting)</p>",
        "id": 208245965,
        "sender_full_name": "David Pyke",
        "timestamp": 1598547690
    },
    {
        "content": "<p>(should have seen the c:\\ thing there). <br>\nI think indeed reboot is your friend. <span class=\"user-mention\" data-user-id=\"192758\">@Craig Newman</span> want to do it and let me know? If you don't want to reboot, co to task manager, find the explorer process and restart it</p>",
        "id": 208246256,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1598547814
    },
    {
        "content": "<p>i did test the script a few hours ago and worked well</p>",
        "id": 208246295,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1598547836
    },
    {
        "content": "<p>I'll reboot when I get off the current meeting and let you know. Thanks</p>",
        "id": 208251025,
        "sender_full_name": "Craig Newman",
        "timestamp": 1598550129
    },
    {
        "content": "<p>Sadly, access is still denied, even after a reboot. I've cloned a different github repo and tried running  _updatePublisher from there and get the same outcome. And I've tried moving the contents out of Documents and putting it elsewhere on my C drive and no luck. I've tried both the parent directory and input-cache and it's still the same.  I'll follow up with our IT folks and see if they do anything funky in terms of permissions when they configure the laptops.</p>",
        "id": 208258000,
        "sender_full_name": "Craig Newman",
        "timestamp": 1598553358
    },
    {
        "content": "<p>Have you tried running the script from a command prompt with admin rights?</p>",
        "id": 208258403,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1598553559
    },
    {
        "content": "<p>I am running it from the command prompt and I believe I have admin rights (is there a way to confirm this though?)</p>",
        "id": 208258622,
        "sender_full_name": "Craig Newman",
        "timestamp": 1598553676
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192758\">@Craig Newman</span> yes, try to run as admin, and just make sure you can download this from a browser:<br>\n<a href=\"https://github.com/HL7/fhir-ig-publisher/releases/download/1.1.16/publisher.jar\">https://github.com/HL7/fhir-ig-publisher/releases/download/1.1.16/publisher.jar</a></p>",
        "id": 208258672,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1598553701
    },
    {
        "content": "<p>you should not need admin rights. Only the ability to write to the folder</p>",
        "id": 208259016,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1598553857
    },
    {
        "content": "<p>oops sorry, just realized one thing</p>",
        "id": 208259078,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1598553889
    },
    {
        "content": "<p>you are using the super neat feature of putting the publisher in the parent folder. so make sure you can do a mkdir test on the parent folder (i.e. C:\\Users\\cnewman\\Documents\\FHIRShorthand</p>",
        "id": 208259178,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1598553952
    },
    {
        "content": "<p>I right clicked on the .bat and ran it as the administrator and it still gives the same error. I was able to make a folder using mkdir in the command prompt. Is the latest and greatest updatePublisher.bat file available somewhere? I think I have the latest one, but I'm not sure.</p>",
        "id": 208263144,
        "sender_full_name": "Craig Newman",
        "timestamp": 1598555750
    },
    {
        "content": "<p><a href=\"https://raw.githubusercontent.com/FHIR/sample-ig/master/_updatePublisher.bat\">https://raw.githubusercontent.com/FHIR/sample-ig/master/_updatePublisher.bat</a></p>",
        "id": 208264068,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1598556205
    },
    {
        "content": "<p>Is it possible to set up the sushi release process to ensure that each time a new sushi-fsh release is published, the latest files are copied into <a href=\"https://github.com/FHIR/sushi/blob/master/src/ig/files\">https://github.com/FHIR/sushi/blob/master/src/ig/files</a>? (I just spent a little while debugging why the <code>--yes</code> flag wasn't working in my publisher download, and I realized it's just that I'm using a version of <code>_updatePublisher.sh</code> bundled in fsh, which lags the <a href=\"https://raw.githubusercontent.com/FHIR/sample-ig/master/_updatePublisher.sh\">latest</a>.)</p>",
        "id": 208987449,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599147976
    },
    {
        "content": "<p>(For anyone interested in running build checks directly in github actions, <a href=\"https://github.com/HL7/smart-app-launch/tree-save/master/.github/workflows/sushi-and-publisher.yml\">https://github.com/HL7/smart-app-launch/tree-save/master/.github/workflows/sushi-and-publisher.yml</a> is an example of a workflow to do this. It just generates a success (or failure) build status and throws away the resulting outputs, but Elliot Silver's <a href=\"https://www.argentixinfo.com/archives/156\">example here</a> shows how to take the result and publish to GH pages.)</p>",
        "id": 208988096,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599148215
    },
    {
        "content": "<p>Why does sushi generate the scripts anyhow?</p>",
        "id": 208988784,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1599148481
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> , is there an advantage to doing the build in a single step as in your workflow, over the multiple steps in mine? Do you still get enough details in the logs to be able to tell where an error occurs?</p>",
        "id": 208989276,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1599148646
    },
    {
        "content": "<p>sushi does not generate the .bat /.sh scripts</p>",
        "id": 208995731,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1599151150
    },
    {
        "content": "<p>it gets them from the repo (i guess it packs them and produces them if needed)</p>",
        "id": 208995762,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1599151171
    },
    {
        "content": "<p>I did not study the guide from <span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span> yet (but I look forward to) and I don't know if this helps, but I do see some difference between \"(re)generating the entire thing, with ig, menus, etc\" and \"just do the FSH thing\" . I expect the latter to be the most common, the other one is a \"setup\"</p>",
        "id": 208996185,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1599151349
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> , well, that's confusing; from <a href=\"http://_updatePublisher.sh\">_updatePublisher.sh</a>:</p>\n<div class=\"codehilite\"><pre><span></span><code># *************************************************************************************************\n# *                               WARNING: DO NOT EDIT THIS FILE                                  *\n# *                                                                                               *\n# * This file is generated by SUSHI. Any edits you make to this file will be overwritten.         *\n# *************************************************************************************************\n</code></pre></div>\n\n\n<p>I just tried, and it doesn't actually create the scripts when you do a regular sushi run; maybe it happens only on -init.</p>",
        "id": 208999837,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1599152993
    },
    {
        "content": "<p>I may be outdated..</p>",
        "id": 208999962,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1599153035
    },
    {
        "content": "<p>I run sushi and have the latest _updatepublisher, it doesn't get overwritten on a sushi run.</p>",
        "id": 209000292,
        "sender_full_name": "David Pyke",
        "timestamp": 1599153160
    },
    {
        "content": "<p>Yes, that's what I'm seeing too. It must have generated it at some point though.</p>",
        "id": 209000593,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1599153294
    },
    {
        "content": "<p>The mechanics for when SUSHI does and does not generate the scripts has a storied past.  But the basic data points as of now are:</p>\n<ul>\n<li>If your project is setup for IG integration (e.g., your FSH files are in a <code>fsh</code> subfolder) then SUSHI will _not_ generate scripts, as it assumes you already have them (and again, that assumption has a bit of a backstory)</li>\n<li>Otherwise (i.e., <em>no</em> <code>fsh</code> folder), SUSHI will generate the scripts.</li>\n<li>By generate, I mean \"copy the scripts from its own package\" -- which <em>should</em> reflect what the scripts were in the sample IG at the time this version of SUSHI was released.</li>\n<li>When we copy, we put that disclaimer at the top because if you run SUSHI again in the same configuration, it <em>will</em> overwrite the scripts.</li>\n</ul>",
        "id": 209006858,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1599156108
    },
    {
        "content": "<p>I don't love the way it is.  We could automate the copying of the scripts on release of <code>fsh-sushi</code>, but that still can result in SUSHI being behind (unless it releases in lock-step with the sample-ig scripts).  Or SUSHI could attempt to download the scripts from the sample-ig GH repo when you run SUSHI (but that requires a network connection on every run).  Or we could just have SUSHI output a log w/ the URLs to download the scripts and y'all can download them yourselves. ;-). Open to suggestions.</p>",
        "id": 209007319,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1599156328
    },
    {
        "content": "<p>it seems to me that sushi shouldn't generate/download those scripts at all.  If it was going to, I would suggest that only on a 'sushi --init' would it do that.  Otherwise, I can definitely see the wisdom of letting the user be on the hook for getting the scripts.</p>",
        "id": 209007806,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1599156559
    },
    {
        "content": "<p>Oh yeah.  I forgot about <code>sushi --init</code> - that is one more place we generate them for the user.  Thanks, <span class=\"user-mention\" data-user-id=\"192166\">@Jean Duteau</span>.</p>",
        "id": 209007981,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1599156625
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"192166\">Jean Duteau</span> <a href=\"#narrow/stream/215610-shorthand/topic/_updatePublisher/near/209007806\">said</a>:</p>\n<blockquote>\n<p>it seems to me that sushi shouldn't generate/download those scripts at all.  If it was going to, I would suggest that only on a 'sushi --init' would it do that.  Otherwise, I can definitely see the wisdom of letting the user be on the hook for getting the scripts.</p>\n</blockquote>\n<p>I can see sense to creating them on <code>sushi --init</code>. Ideally, it should fetch them from the sample IG, or better, the ones in the sample IG should be self-updating. As for question of IG integration, I think that with more sushi-based IGs, there will be no need to look at the sample IG at all, and the presence of a fsh subfolder shouldn't be seen as an indication that you have the scripts.</p>",
        "id": 209011198,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1599158171
    },
    {
        "content": "<p>I think it would be an improvement to make sure that each time a new release of sushi is published it includes the latest and greatest update scripts baked in. This does not solve every possible case but I think it's strictly better than the current situation.</p>",
        "id": 209014878,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599159915
    },
    {
        "content": "<p>In the longer term, I wouldn't mind if sushi was the authoritative source for these scripts, rather than a \"Sample IG\"</p>",
        "id": 209015011,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599159977
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191315\">Josh Mandel</span> , is there an advantage to doing the build in a single step as in your workflow, over the multiple steps in mine? Do you still get enough details in the logs to be able to tell where an error occurs?</p>\n</blockquote>\n<p>No real advantage but I like to be able to run one command locally as well, and this is a little easier to copy and paste. The error logs show me full output either way.</p>",
        "id": 209015141,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599160045
    },
    {
        "content": "<p>I think that the scripts should be part of the publisher package, not rely on someone using any particular method to get the current scripts.  once you have the publisher, it extracts the scripts it knows about and then you can run _updatepublisher to get later ones.</p>",
        "id": 209016468,
        "sender_full_name": "David Pyke",
        "timestamp": 1599160576
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191315\">Josh Mandel</span> <a href=\"#narrow/stream/215610-shorthand/topic/_updatePublisher/near/209015141\">said</a>:</p>\n<blockquote>\n<p>No real advantage but I like to be able to run one command locally as well, and this is a little easier to copy and paste. The error logs show me full output either way.</p>\n</blockquote>\n<p>One advantage I see is not having to create new Docker instances for each step.</p>",
        "id": 209017821,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1599161229
    },
    {
        "content": "<blockquote>\n<p>once you have the publisher, it extracts the scripts it knows about</p>\n</blockquote>\n<p>I don't understand this because updatepublisher runs the IG publisher, not the other way around. So no good getting the thing to run the the jar from the jar</p>",
        "id": 209024898,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599164663
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> going back to earlier in this thread:</p>\n<blockquote>\n<p>(For anyone interested in running build checks directly in github actions, <a href=\"https://github.com/HL7/smart-app-launch/tree-save/master/.github/workflows/sushi-and-publisher.yml\">https://github.com/HL7/smart-app-launch/tree-save/master/.github/workflows/sushi-and-publisher.yml</a> is an example of a workflow to do this. It just generates a success (or failure) build status and throws away the resulting outputs</p>\n</blockquote>\n<p>What I don't understand is why this is something you'd be interested in - what does it achieve?</p>",
        "id": 209029530,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599167160
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  To start with, making sure we have the docker images to support this is just a step in making sure our infrastructure is decomposable and reusable in different contexts. Having more reusable building blocks is going to make life easier when we inevitably try to refactor the CI build system :-)</p>",
        "id": 209033790,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599169885
    },
    {
        "content": "<p>Practically here, I'm getting two things, neither which is super critical: I get a nice check mark in my GitHub repository showing me that the last build succeeded, and similarly I can make sure that I don't merge in any pull requests that are failing (this is something that we could have the FHIR Build CI infrastructure take care of, but would involve more / deeper integration);   also I get nice logging in history showing me where things have broken over time.</p>",
        "id": 209033972,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599170015
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span> on Linux the overhead of \"docker run\" is quite low. Across all the invocations required for a build it should be  less than a second, which is a fraction of a percentage point of the total GitHub Action runtime.</p>",
        "id": 209034247,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599170222
    },
    {
        "content": "<blockquote>\n<p>I get a nice check mark in my GitHub repository showing me that the last build succeeded, and similarly I can make sure that I don't merge in any pull requests that are failing</p>\n</blockquote>\n<p>ok I understand this. But unless I misunderstand this is (a) at the price that the output isn't published on <a href=\"http://build.fhir.org\">build.fhir.org</a>, and (b) the state is not in <a href=\"https://fhir.github.io/auto-ig-builder/builds.html\">https://fhir.github.io/auto-ig-builder/builds.html</a> (I use that page a lot)</p>",
        "id": 209035298,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599170951
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/215610-shorthand/topic/_updatePublisher/near/209024898\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>once you have the publisher, it extracts the scripts it knows about</p>\n</blockquote>\n<p>I don't understand this because updatepublisher runs the IG publisher, not the other way around. So no good getting the thing to run the the jar from the jar</p>\n</blockquote>\n<p>Umm no.  _updatepublisher doesn't run the IG publisher.  It just goes out and fetches the latest JAR file and updates it.  It's _genonce or _gencontinuous that runs the IG publisher.</p>",
        "id": 209038401,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1599173409
    },
    {
        "content": "<p>still, you have to get the publisher and then run it. As I understood it, these batch files were for people for whom doing the download was too onerous</p>",
        "id": 209038954,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599173971
    },
    {
        "content": "<p>To be clear this is not an either/or situation! I am using the auto build and also running checks in GitHub actions.</p>",
        "id": 209039784,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599174705
    },
    {
        "content": "<p>I love having my pull requests visible in a rendered format automatically on <a href=\"http://build.fhir.org\">build.fhir.org</a>, which is delightful behavior I get from the fhir CI pipeline</p>",
        "id": 209039847,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599174742
    },
    {
        "content": "<p>The smart app launch IG should continue to show up in your dashboard</p>",
        "id": 209039872,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599174766
    },
    {
        "content": "<p>Actually though this raises one interesting point. the rust language team has a really excellent practice where they scrape GitHub for every rust language project that exists and when they think about adding breaking changes to the language they build all of the projects to see what breaks.  we could do something similar with fhir and build a dashboard that people never even had to opt into -- in other words where every public fhir implementation guide on GitHub was automatically cataloged and built without any explicit additional behavior required. I don't actually know how to scrape the GitHub in this way but I assume it's possible.</p>",
        "id": 209040271,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599175141
    },
    {
        "content": "<p>come to think of it though, probably the rust language team just uses their existing package management system instead of scraping github (<a href=\"http://crates.io\">crates.io</a>).</p>",
        "id": 209040307,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599175185
    },
    {
        "content": "<p>but even so that suggests an interesting model where implementation guide authors could submit their draft implementation guide in a lightweight process to the registry.</p>",
        "id": 209040367,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599175219
    },
    {
        "content": "<p>Just thinking aloud here; there are obvious trade-offs with latency that probably make us a bad idea for us</p>",
        "id": 209040381,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599175247
    },
    {
        "content": "<blockquote>\n<p>we could do something similar with fhir and build a dashboard that people never even had to opt into -- in other words where every public fhir implementation guide on GitHub was automatically cataloged and built without any explicit additional behavior required</p>\n</blockquote>\n<p>Unfortunately, it's not so simple. I already build 8-10 IGs on a regular basis, but they almost always build, it's just that sometimes the errors in qa.html tell me I got something wrong</p>",
        "id": 209049379,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599185942
    },
    {
        "content": "<blockquote>\n<p>where implementation guide authors could submit their draft implementation guide in a lightweight process to the registry</p>\n</blockquote>\n<p>don't think that buys as anything; I'm just building all the checks into the build process as much as I can</p>",
        "id": 209049423,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599185990
    },
    {
        "content": "<p>This makes sense. One potential benefit would be: if you're going to make a change to the publisher, can you  tell how many existing IGs will will/would it break.</p>",
        "id": 209050763,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599188402
    },
    {
        "content": "<p>I'd love to know but 'break' is subjective. as I said, I routinely run 8-10 IGs before release, but I have to inspect the output manually to decide what 'broken' means.</p>",
        "id": 209054813,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599195094
    },
    {
        "content": "<p>I don't know how to automate that</p>",
        "id": 209054820,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599195105
    },
    {
        "content": "<p>Yes I think the best you could automate would be appearance of new errors or warnings in guides that previously did not have errors. I appreciate the interpretation there still requires review.</p>",
        "id": 209094629,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599226877
    },
    {
        "content": "<p>the problem for me is that there's some network issue where an intermediary between me and the terminology server seems to impose rate limiting protection on the server when I really run high levels of terminology service usage. And running 10 IGs really does hammer the terminology server. It's not the server - I manage that. And it's not my client. But the upshot is that error counts are all over the place, and so the counts aren't that useful. I have to compare manually. </p>\n<p>Of course, what I'd really like is for the network to be reliable, but I haven't managed to figure out where the problem is</p>",
        "id": 209137717,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599251382
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192758\">@Craig Newman</span>, did you ever figure out a way around the \"Access is denied\" error. We are still seeing it pop up when trying to use the <code>_updatePublisher.bat</code> script.</p>",
        "id": 211152758,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1600963369
    },
    {
        "content": "<p>It's not you, it's me...<br>\nThe company issued laptop has some restrictions on what it can do. They're still looking into it. In general the tools work, we just have to manually update the publisher and scripts.</p>",
        "id": 211165118,
        "sender_full_name": "Craig Newman",
        "timestamp": 1600969146
    },
    {
        "content": "<p>Hm, it seems it is also me, because when I run <code>_updatePublisher</code>, I get the same \"Access is denied\" error. I've heard reports from several other users that this has started to happen to them recently. <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span>, have there been any recent changes to the <code>updatePublsiher.bat</code> script that could have caused this? I'm a little bit at a loss for how to get around this, and have just had to revert to downloading the publisher manually.</p>",
        "id": 211920481,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1601563220
    },
    {
        "content": "<p>I don't recall any significant change (the last relevant change was from IPV4 to V6 or vice-versa, don't remember, but that was a few months ago)</p>",
        "id": 211931015,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601567231
    },
    {
        "content": "<ol>\n<li>Windows, linux, macos? </li>\n<li>What is the last thing you see on screen before the Access Denied?</li>\n</ol>",
        "id": 211931089,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601567261
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239822\">@Nick Freiter</span> <span class=\"user-mention\" data-user-id=\"192758\">@Craig Newman</span></p>",
        "id": 211931135,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601567276
    },
    {
        "content": "<p>It may be nice to add in checks for <code>curl</code> and/or <code>wget</code> instead of scripting around powershell (curl is available on Windows 10 &gt; 17063 by default, and it gives an escape hatch for anyone having issues).</p>\n<p>As a test, I added:</p>\n<div class=\"codehilite\" data-code-language=\"Batchfile\"><pre><span></span><code>WHERE /q curl\n<span class=\"k\">IF</span> <span class=\"nv\">%ERRORLEVEL%</span> <span class=\"o\">==</span> 0 <span class=\"k\">GOTO</span> <span class=\"nl\">dlWithCurl</span>\n</code></pre></div>\n\n<p>at line 95 and:</p>\n<div class=\"codehilite\" data-code-language=\"Batchfile\"><pre><span></span><code><span class=\"p\">:</span><span class=\"nl\">dlWithCurl</span>\n\ncurl -L <span class=\"s2\">\"</span><span class=\"nv\">%dlurl%</span><span class=\"s2\">\"</span> -o <span class=\"s2\">\"</span><span class=\"nv\">%jarlocation%</span><span class=\"s2\">\"</span> --create-dirs\n<span class=\"k\">GOTO</span> <span class=\"nl\">done</span>\n</code></pre></div>\n\n<p>at 108 (after adding the first, 105 otherwise).  Appears to work fine on my box (famous last words, I know =).</p>\n<p>If the option should be pulled into all of the script updates too, I'd probably change the first check to set a var to make life simpler later in the file.</p>\n<p>Thoughts?</p>",
        "id": 211934536,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1601568647
    },
    {
        "content": "<p>I think that is the same as it is there: <br>\n<code>CALL POWERSHELL -command if ('System.Net.WebClient' -as [type]) {(new-object System.Net.WebClient).DownloadFile(\\\"%dlurl%\\\",\\\"%jarlocation%\\\") } else { Invoke-WebRequest -Uri \"%dlurl%\" -Outfile \"%jarlocation%\" }\n</code> (but reversed)</p>",
        "id": 211944543,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601573013
    },
    {
        "content": "<p>from what I read, this line means \"try this powershell thing, if not, try curl.</p>",
        "id": 211944711,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601573085
    },
    {
        "content": "<p>(in win10, curl is just an alias to that last bit after the else)</p>",
        "id": 211944738,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601573102
    },
    {
        "content": "<p>so we could reverse the logic and try curl first, not sure what is the gain.</p>",
        "id": 211944790,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601573131
    },
    {
        "content": "<p>could that be the access deniedissue?</p>",
        "id": 211944811,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601573140
    },
    {
        "content": "<p>from what I see, in Windows, the Access Denied could be the failure to create the input-cache folder.</p>",
        "id": 211945137,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601573294
    },
    {
        "content": "<p>I've run into this problem with WIn10 and git repositories.  It clears up if you reboot</p>",
        "id": 211946915,
        "sender_full_name": "David Pyke",
        "timestamp": 1601574059
    },
    {
        "content": "<p>I won't speak for <span class=\"user-mention\" data-user-id=\"239822\">@Nick Freiter</span> -- but to answer <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span>'s question about platform -- my understanding is that we have only seen this with Windows users.  And to follow on to <span class=\"user-mention\" data-user-id=\"192587\">@David Pyke</span>'s note, I know that Nick has tried rebooting and it did not fix it.</p>",
        "id": 211947011,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601574106
    },
    {
        "content": "<p>for windows: <br>\nyou can help debug by simply commenting the first line (add a <code>REM </code> before <code>@echo off</code>) and then tell what is the last thing you see  before the Access Denied</p>",
        "id": 211947366,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601574273
    },
    {
        "content": "<p>My thought was around bypassing the call to powershell at all - in case that is what's locked down.</p>",
        "id": 211947576,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1601574381
    },
    {
        "content": "<p>Here is the last command before disaster strikes:<br>\n<a href=\"/user_uploads/10155/_VSdB12faj3C7oYctlgvId2e/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/_VSdB12faj3C7oYctlgvId2e/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/_VSdB12faj3C7oYctlgvId2e/image.png\"></a></div><p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> is correct, this happens on Windows, reboot has not helped for me and several others.</p>",
        "id": 211948720,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1601574928
    },
    {
        "content": "<p>A few questions:</p>",
        "id": 211958771,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601579171
    },
    {
        "content": "<ol>\n<li>Is there a input-cache folder?</li>\n</ol>",
        "id": 211958787,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601579183
    },
    {
        "content": "<ol start=\"2\">\n<li>If you open a command line and run the _updatePublisher.bat, does it still fail?</li>\n</ol>",
        "id": 211959160,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601579344
    },
    {
        "content": "<ol start=\"3\">\n<li>In that command line, is it possible to create a file in the input-cache folder? (E.g <code>copy *.bat  .\\input-cache</code>)</li>\n</ol>",
        "id": 211959450,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601579469
    },
    {
        "content": "<ol>\n<li>There is an <code>input-cache</code> folder, the <code>updatePublisher</code> script does successfully create it, it just cannot put the publisher in it.</li>\n<li>I am running from a command line, I've tried running from command line as admin as well, with no luck.</li>\n<li>Yes I can copy to the <code>input-cache</code> folder.</li>\n</ol>",
        "id": 211960219,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1601579786
    },
    {
        "content": "<p>thanks. So, a few more:</p>\n<ol>\n<li>the command line you are running - is it cmd or powershell?</li>\n</ol>",
        "id": 211968427,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601583559
    },
    {
        "content": "<ol start=\"2\">\n<li>try this to see if it works<br>\n<code>CALL POWERSHELL -command (new-object System.Net.WebClient).DownloadFile(\\\"https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar\\\",\\\"input-cache\\publisher.jar\\\")</code></li>\n</ol>",
        "id": 211969497,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601584064
    },
    {
        "content": "<p>Or this <br>\n<code>CALL POWERSHELL -command  Invoke-WebRequest -Uri \"https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar\" -Outfile \"input-cache\\publisher.jar\" </code></p>",
        "id": 211969595,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601584098
    },
    {
        "content": "<p>(sorry for this, I can't reproduce, and I just want to see what is access denied. Could be a powershell permission thing, or something more bizarre</p>",
        "id": 211969677,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601584137
    },
    {
        "content": "<p>I've tried running <code>_updatePublisher</code> with both cmd and powershell. Both of those commands you gave <em>do</em> succeed when I run them on their own, and the publisher is downloaded to <code>input-cache</code>.</p>",
        "id": 212317572,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1601912527
    },
    {
        "content": "<p>So what I've found is that on line 106: <a href=\"https://github.com/FHIR/sample-ig/blob/master/_updatePublisher.bat#L106\">https://github.com/FHIR/sample-ig/blob/master/_updatePublisher.bat#L106</a> of <code>_updatePublisher.bat</code>, if I get rid of the <code>if...else</code> logic, then I am able to download the publisher using either branch of the conditional logic. So:</p>\n<div class=\"codehilite\"><pre><span></span><code>CALL POWERSHELL -command if (&#39;System.Net.WebClient&#39; -as [type]) {(new-object System.Net.WebClient).DownloadFile(\\&quot;%dlurl%\\&quot;,\\&quot;%jarlocation%\\&quot;) } else { Invoke-WebRequest -Uri &quot;%dlurl%&quot; -Outfile &quot;%jarlocation%&quot; }\n</code></pre></div>\n\n\n<p>fails for me with the \"Access is denied\" error indicated above.</p>\n<div class=\"codehilite\"><pre><span></span><code>CALL POWERSHELL -command Invoke-WebRequest -Uri &quot;%dlurl%&quot; -Outfile &quot;%jarlocation%&quot;\n</code></pre></div>\n\n\n<p>successfully downloads the publisher and</p>\n<div class=\"codehilite\"><pre><span></span><code>CALL POWERSHELL -command (new-object System.Net.WebClient).DownloadFile(\\&quot;%dlurl%\\&quot;,\\&quot;%jarlocation%\\&quot;)\n</code></pre></div>\n\n\n<p>also successfully downloads the publisher</p>",
        "id": 212319326,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1601913297
    },
    {
        "content": "<p>oh I need to use a lifeline for this. <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> ideas?</p>",
        "id": 212342984,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601924652
    },
    {
        "content": "<p>Unfortunately Powershell is outside my wheelhouse too.  I forget who provided that language originally...</p>",
        "id": 212354753,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1601930933
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239822\">@Nick Freiter</span>  Can you see if this works please?</p>\n<div class=\"codehilite\"><pre><span></span><code>POWERSHELL -command try {(new-object System.Net.WebClient).DownloadFile(\\&quot;https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar\\&quot;,\\&quot;.\\jar.jar\\&quot;) } catch { Invoke-WebRequest -Uri &quot;https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar&quot; -Outfile &quot;.\\jar.jar&quot; }\n</code></pre></div>",
        "id": 212357249,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601932187
    },
    {
        "content": "<p>Unfortunately still \"Access is denied\"</p>",
        "id": 212357681,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1601932431
    },
    {
        "content": "<p>if you don't mind (and it really sucks that I can't reproduce any of that) <br>\nwhat do you get with this?</p>\n<div class=\"codehilite\"><pre><span></span><code>CALL POWERSHELL -command try {ECHO HELLO } catch { Invoke-WebRequest -Uri &quot;https://github.com/HL7/fhir-ig-publisher/releases/latest/download/publisher.jar&quot; -Outfile &quot;.\\jar.jar&quot; }\n</code></pre></div>",
        "id": 212359284,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601933347
    },
    {
        "content": "<p>(sorry, but the fact tha both commands work OK but the IF doesn't... now the TRY also does not work, that is confusing..)</p>",
        "id": 212359465,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601933440
    },
    {
        "content": "<p>other things to try - i will look at this tomorrow:</p>\n<ol>\n<li>check if it's your antivirus that is blocking this</li>\n<li>if not, run <code>get-acl</code> and see what is the response</li>\n</ol>",
        "id": 212359878,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1601933740
    },
    {
        "content": "<p>No worries, thanks for all the help. In that case I do correctly get \"HELLO\" printed to the terminal. I'll continue to look at this tomorrow and see if I can find any less confusing  conditions that cause \"Access is denied\" to happen.</p>",
        "id": 212360412,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1601934111
    },
    {
        "content": "<p>As an FYI: I got security flagged for that Powershell call.  The system is able to detect that it is downloading and running a script in a single call.  That may be what was causing issues for others as well (in my case, the call was allowed but I had to go through a security justification process).</p>",
        "id": 215781369,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1604614519
    },
    {
        "content": "<p>That's good to know. <br>\nThe script actually downloads itself, so I think it's not the same as downloading and running a script, but it's close enough</p>",
        "id": 215782169,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1604615076
    }
]