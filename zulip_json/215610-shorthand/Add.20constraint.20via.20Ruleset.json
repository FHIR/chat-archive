[
    {
        "content": "<p>We have a situation where we need to add Constraints that do length checks to a lot of fields. The length varies, so we'd need to create a lot of different invariants for a lot of different length. <br>\nSo the idea was to just use a RuleSet instead an let it create inline invariants with dynamic length like this:</p>\n<div class=\"codehilite\" data-code-language=\"BBCode\"><pre><span></span><code>RuleSet: assertLength (length)\n* ^constraint.human = \"Value must be shorter than {length}\"\n* ^constraint.expression = \"length({length})\"\n* ^constraint.severity = #error\n\nProfile: Test\nParent: Patient\nId: Test\nTitle: \"Test\"\nDescription: \"\"\n* name.family\n  * insert assertLength(10)\n</code></pre></div>\n<p>However, this gives an error: <br>\n<code>A rule that does not use a path cannot be indented to indicate context. The rule will be processed as if it is not indented.</code><br>\nAdding the indentation to the RuleSet instead returns<br>\n<code>Errors parsing insert rule with parameterized RuleSet assertLength</code><br>\n<code>- The first rule of a definition cannot be indented. The rule will be processed as if it is not indented.</code></p>\n<p>I'm at a loss. How can I create a RuleSet that adds lines relative to the current path of where the RuleSet is inserted...?</p>",
        "id": 244728337,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1625244180
    },
    {
        "content": "<p>Support for creating a RuleSet that adds rules relative to the path of an <code>insert</code> rule was only added in the most recent release of SUSHI, <a href=\"https://github.com/FHIR/sushi/releases/tag/v2.0.0-beta.2\">SUSHI 2.0.0-beta.2</a>. In that version, you can indent an <code>insert</code> rule to give it context. </p>\n<p>However, there is actually a bug we've just learned of today in this <a href=\"#narrow/stream/215610-shorthand/topic/Caret.20paths.20in.20.22deeply.20inserted.22.20rulesets\">thread</a> which prevents application of an <code>insert</code> rules path when the rules that path is being applied to are <code>^</code> rules without a path (as is the case in your example). So unfortunately SUSHI 2.0.0-beta.2 won't quite work in that case just yet. We have a fix for it in progress <a href=\"https://github.com/FHIR/sushi/pull/866\">here</a>, but it likely won't be until next week that we can release a new version of SUSHI that fixes this bug. </p>\n<p>There is a workaround you can use that <span class=\"user-mention\" data-user-id=\"217988\">@Martin HÃ¶cker</span> displays in this <a href=\"#narrow/stream/215610-shorthand/topic/Caret.20paths.20in.20.22deeply.20inserted.22.20rulesets\">thread</a>, and that is to treat the path as another input to the <code>RuleSet</code>. So here is how that looks for the example you gave:</p>\n<div class=\"codehilite\"><pre><span></span><code>RuleSet: assertLength (path, length)\n* {path} ^constraint.human = &quot;Value must be shorter than {length}&quot;\n* {path} ^constraint.expression = &quot;length({length})&quot;\n* {path} ^constraint.severity = #error\n\nProfile: Test\nParent: Patient\nId: Test\nTitle: &quot;Test&quot;\nDescription: &quot;&quot;\n* insert assertLength(name.family, 10)\n</code></pre></div>",
        "id": 244733597,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1625246817
    }
]