[
    {
        "content": "<p>I posted a question in the IG Creation stream about constraining a Observation.valueCodeableConcept.coding.code to a regular expression. <span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span> showed an example using shorthand which will be available with sushi soon. Would I be able to do something like this?</p>\n<div class=\"codehilite\"><pre><span></span>* valueCodeableConcept.coding ^slicing.discriminator.type = #value\n* valueCodeableConcept.coding ^slicing.discriminator.path = &quot;system&quot;\n* valueCodeableConcept.coding ^slicing.rules = #open\n* valueCodeableConcept.coding ^slicing.description = &quot;slicing on valueCodeableConcept&quot;\n\n* valueCodeableConcept.coding contains GL 1..1 MS\n* valueCodeableConcept.coding[GL].system = &quot;https://glstring.org&quot;\n* valueCodeableConcept.coding[GL].code obeys GLSC\n\nInvariant:  GLSC\nSeverity:   #warning\nDescription: &quot;Use GL String Code to report HLA genotype&quot;\nExpression: &quot;matches(&#39;^hla#&#39;)&quot;\n</pre></div>",
        "id": 191128958,
        "sender_full_name": " Bob Milius",
        "timestamp": 1584631452
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191916\">@ Bob Milius</span>  <code>Invariant</code>s are actually available and released in SUSHI <code>v0.10.0</code>. Sorry for the confusion on that. The FSH that you have posted above looks valid to my eye, so I'd try running it through SUSHI. If you have an older version of SUSHI and need to update, <code>npm install -g fsh-sushi</code> should do that for you.</p>",
        "id": 191133392,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1584633298
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239822\">@Nick Freiter</span>  thanks! <br>\nSushi ran without errors. I'll see if some of my examples validate against the IG.</p>",
        "id": 191138735,
        "sender_full_name": " Bob Milius",
        "timestamp": 1584635437
    }
]