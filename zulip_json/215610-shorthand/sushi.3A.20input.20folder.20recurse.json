[
    {
        "content": "<p>i just played with sushi and trying to include preexisting resources into input/resources<br>\nIf i tested sushi correctly only the first level of this folder is read-in. Could this be switched to a recurse behaviour? This would enable a better overview of the input/ressources folder, as you can just c&amp;p projects with existing subfolders into the input folder.</p>",
        "id": 224730239,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1612188551
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> -- We've usually seen folders split up directly under <code>input/</code> rather than having nested sub-folders under <code>input/resources</code>, but as long as this is supported by the IG Publisher, then this seems like a reasonable ask.  The fact that SUSHI doesn't do it now is probably more of an oversight (or not knowing it was a valid configuration) than an intentional decision.</p>",
        "id": 224732989,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1612189778
    },
    {
        "content": "<p>This is configured in the template. There are \"standard\" folders next to resources, not under it</p>",
        "id": 224868469,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1612271520
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191832\">Jose Costa Teixeira</span> <a href=\"#narrow/stream/215610-shorthand/topic/sushi.3A.20input.20folder.20recurse/near/224868469\">said</a>:</p>\n<blockquote>\n<p>This is configured in the template. There are \"standard\" folders next to resources, not under it</p>\n</blockquote>\n<p>i know. But what if these defined folders contain nested subfolders?</p>",
        "id": 224878467,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1612276352
    },
    {
        "content": "<p>IIRC, subfolders are not included by default. <br>\nUNLESS (there's a thing in the publisher) the folder is called &lt;ResourceName&gt; and the files are called &lt;id&gt;.json</p>",
        "id": 224884343,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1612278821
    },
    {
        "content": "<p>so, you can have <br>\n<code>resources\\Patient-patient1.json</code><br>\nOR <br>\n<code>resources\\Patient\\patient1.json</code></p>",
        "id": 224884464,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1612278864
    },
    {
        "content": "<p>This is just because the publisher looks in alternative paths</p>",
        "id": 224884487,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1612278876
    }
]