[
    {
        "content": "<p>In my code, i have</p>\n<div class=\"codehilite\"><pre><span></span>* code ^patternCodeableConcept.text = &quot;Days on Ventilator&quot;\n* code ^patternCodeableConcept.coding = LOINC#74201-5 &quot;Days on Ventilator&quot;\n</pre></div>\n\n\n<p>which is translated to </p>\n<div class=\"codehilite\"><pre><span></span>&quot;patternCodeableConcept&quot;: {\n          &quot;text&quot;: &quot;Days on Ventilator&quot;,\n          &quot;coding&quot;: [\n            {\n              &quot;code&quot;: &quot;74201-5&quot;,\n              &quot;system&quot;: &quot;http://loinc.org&quot;\n            }\n          ]\n        },\n</pre></div>\n\n\n<p>So, the display value for the coding is not generated?</p>",
        "id": 187091479,
        "sender_full_name": "Noemi Deppenwiese",
        "timestamp": 1580483354
    },
    {
        "content": "<p>So this is one of the <em>opinionated</em> aspects of FHIR Shorthand / SUSHI.  If we include the display in the pattern, then we are saying that in order for an instance to conform (and validate successfully) against a profile, then it <em>must</em> include that exact \"display\" value as well.  Usually, the intent w/ codes is the require a match on <code>system</code> and <code>code</code>, but not to require a match on <code>display</code>.  This is why we leave it out of the pattern.</p>",
        "id": 187094015,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1580485138
    },
    {
        "content": "<p>Ok, thanks for the explaination!</p>",
        "id": 187094049,
        "sender_full_name": "Noemi Deppenwiese",
        "timestamp": 1580485171
    },
    {
        "content": "<p>That said, it is <em>opinionated</em> and I think you're not the first person to ask about it.  This brings up a few points we should probably discuss as a community:</p>\n<ol>\n<li>\n<p>Should Shorthand make the author be explicit about whether you want to fix using <code>fixed[x]</code> or <code>pattern[x]</code>?  Currently, we use <code>pattern[x]</code> for fixing things like <code>CodeableConcept</code>, <code>Coding</code>, and <code>Quantity</code> and <code>fixed[x]</code> for fixing primitives (e.g., <code>code</code>, <code>string</code>, <code>integer</code>, etc).  But perhaps we should be putting that in the hands of authors.  Perhaps <code>=</code> could mean <code>fixed</code> and <code>~</code> or <code>=~</code> could mean <code>patterned</code>.</p>\n</li>\n<li>\n<p>Is it right for us to assume you <em>don't</em> want display in the pattern (for the reasons above)?  Or should the author be in total control and if they don't want a display, they just don't put a display in the fixed value?</p>\n</li>\n</ol>",
        "id": 187094402,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1580485411
    },
    {
        "content": "<blockquote>\n<ol start=\"2\">\n<li>Is it right for us to assume you <em>don't</em> want display in the pattern (for the reasons above)?  Or should the author be in total control and if they don't want a display, they just don't put a display in the fixed value?</li>\n</ol>\n</blockquote>\n<p>I would argue that there are cases when a profile might reasonable want a fixed display value. E.g. the FHIR resources are to be processed by another program that does not have access to a terminology service but requires a \"text\" to go with codings. Setting the cardinality to 1..1 might not suffice since there could be several display values for a code, e.g. translations.</p>",
        "id": 187095030,
        "sender_full_name": "Noemi Deppenwiese",
        "timestamp": 1580485834
    },
    {
        "content": "<p>I think that's a fair argument.  <span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span> -- perhaps the questions I pose above are something you can discuss w/ others at the Connectathon as well?  It would be nice to get some community consensus on this.</p>",
        "id": 187095416,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1580486121
    },
    {
        "content": "<p>I too noticed the display was absent in the instance I created.  I don't think its related to patterns.</p>",
        "id": 187224545,
        "sender_full_name": "Eric Haas",
        "timestamp": 1580685960
    },
    {
        "content": "<p>Oh -- in the <em>instance</em>?  Yeah, that's a problem then.  It's probably because we have a lot of shared code between fixing values in profiles and setting values in instances.  Skipping display in instances is not by-design.</p>",
        "id": 187225837,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1580688427
    }
]