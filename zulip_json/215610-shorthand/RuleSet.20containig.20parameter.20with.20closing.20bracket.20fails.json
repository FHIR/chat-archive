[
    {
        "content": "<p>Hello,<br>\nI'm using RuleSets for simplifying Questionnaire-Definitions, so I can remove repetitive code from the item definitions.</p>\n<p>I found a bug where <code>RuleSet</code>-paramaters cannot have values containing closing brackets <code>)</code>.</p>\n<div class=\"codehilite\"><pre><span></span><code>RuleSet: Question(linkId, title)\n* item[+].linkId = &quot;{linkId}&quot;\n* item[=].type = #string\n* item[=].text = {title}\n\nInstance: MyQuestionnaire\nInstanceOf: Questionnaire\nTitle: &quot;My Questionnaire&quot;\nUsage: #definition\nDescription: &quot;An example for bug report.&quot;\n* status = #active\n* date = 2021-04-27\n* publisher = &quot;Me&quot;\n* id = &quot;my-questionnaire&quot;\n* subjectType = #Patient\n* title = &quot;My Questionnaire&quot;\n* name = &quot;MyQuestionnaire&quot;\n* purpose = &quot;An example for bug report.&quot;\n\n// this works:\n* insert Question(link1, &quot;Some text (without closing bracket?&quot;)\n// this fails:\n* insert Question(link2, &quot;Some text (with closing bracket)?&quot;)\n\n// use this for a workaround of above issue:\n/*\n* insert Question(link2, &quot;overwriteme&quot;)\n* item[=].text = &quot;Some text (with closing bracket)?&quot;\n*/\n</code></pre></div>\n<p>This will lead to sushi output with error <code>error extraneous input '?\")' expecting {&lt;EOF&gt;, KW_ALIAS, KW_PROFILE, KW_EXTENSION, KW_INSTANCE, KW_INVARIANT, KW_VALUESET, KW_CODESYSTEM, KW_RULESET, KW_MAPPING, KW_LOGICAL, KW_RESOURCE}</code></p>\n<p>See my example here: <a href=\"https://fshschool.org/FSHOnline/#/share/2R6t7pK\">https://fshschool.org/FSHOnline/#/share/2R6t7pK</a></p>",
        "id": 236457619,
        "sender_full_name": "Christian Nau",
        "timestamp": 1619591956
    },
    {
        "content": "<p>What is strange for me, that this only fails when using rulesets. If I set any text field directly to a value containing a closing bracket, everything is fine.</p>",
        "id": 236457788,
        "sender_full_name": "Christian Nau",
        "timestamp": 1619592082
    },
    {
        "content": "<p>In this case, I believe SUSHI treats <code>)</code> like a special character, so if you want to include it in a parameter, escaping it with <code>\\</code> should do the trick. Here is a very slightly modified version of the example you set: <a href=\"https://fshschool.org/FSHOnline/#/share/3nrI5CA\">https://fshschool.org/FSHOnline/#/share/3nrI5CA</a>. Note that there I've escaped the <code>)</code>, and it runs without error.</p>",
        "id": 236503119,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1619615164
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"239822\">@Nick Freiter</span> ! Worked for me.<br>\nI'm wondering why one needs to escape <code>)</code>  in strings when using in rule sets but when I try escaping them without using rulesets, it will fail. Strange. <br>\nBut thanks for your solution!</p>",
        "id": 236504586,
        "sender_full_name": "Christian Nau",
        "timestamp": 1619615809
    },
    {
        "content": "<p>I believe it is because SUSHI is very permissive in what it accepts as params to a RuleSet. It basically accepts any and all characters in any order. So the characters that split apart and contain those parameters <code>,</code> and <code>()</code> need special treatment.</p>",
        "id": 236505097,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1619616021
    }
]