[
    {
        "content": "<p>Does any of you know how to insert multiple EnableWhen elements in a questionnaire in FSH?</p>\n<p>In a questionnaire I want to add 2 enablewhen elements. But when I insert two constrains by using EnableWhen, only the last one is set as a constraint. To make it clearer, here’s a simplified example of what I try  to do:</p>\n<p>I have 2 attributes:<br>\nSeasonality: In season, not in season<br>\nFruit type: Apple, Pear, Lemon, Strawberry, Pineapple</p>\n<p>Some questions need to be enabled based on both attributes. E.g. :<br>\nQuestion 1:<br>\nEnable when \"in season\" and \"apple, pear or lime\"</p>\n<p>I have tried the following type of code:</p>\n<div class=\"codehilite\"><pre><span></span><code>* enableWhen\n  * question = &quot;Seasonality&quot;\n  * operator = #=\n  * answerCoding = SeasonalityCodeSystem#0       // SeasonalityCodeSystem#0 = “in season” \n* enableWhen\n  * question = &quot;Fruit-Type&quot;\n  * operator = #=\n  * answerCoding = FruittypeCodeSystem#3             // FruittypeCodeSystem#3 = “apple”\n* enableBehavior = #all\n</code></pre></div>\n\n<p>In this case I only used the FruitTypecode for apple but I want to use a list of codes (so with the codes for pear and lime), but I don’t know how. This also doesn't work since it only uses the fruittype = apple as a constraints.</p>",
        "id": 272702998,
        "sender_full_name": "Marieke Span",
        "timestamp": 1645457541
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"479768\">@Marieke Span</span>.  Since <code>enableWhen</code> is multi-cardinality (e.g., <code>0..*</code> or an <em>array</em>), then you need to specify <em>indices</em> for each item.  In FHIR Shorthand, lists start at index <code>0</code> (an approach familiar to computer scientists, but perhaps less familiar to others).  So... you could do what you want like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>* enableWhen[0]\n  * question = &quot;Seasonality&quot;\n  * operator = #=\n  * answerCoding = SeasonalityCodeSystem#0       // SeasonalityCodeSystem#0 = “in season”\n* enableWhen[1]\n  * question = &quot;Fruit-Type&quot;\n  * operator = #=\n  * answerCoding = FruittypeCodeSystem#3             // FruittypeCodeSystem#3 = “apple”\n* enableBehavior = #all\n</code></pre></div>\n<p>The reason for the behavior you were seeing is that FSH defaults the index to <code>0</code> if no index is provided.  So the first rule with <code>enableWhen</code> was interpreted as <code>enableWhen[0]</code>, but then when you wrote another rule with <code>enableWhen</code>, it was also interpreted as <code>enableWhen[0]</code> (overwriting the same element in the list).</p>",
        "id": 272712660,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1645462422
    },
    {
        "content": "<p>BUT... FSH also provides a simpler syntax for working with arrays so that you don't need to keep track of the numbers.  In this syntax, you use <code>[+]</code> to indicate you want to increment to the next index in the list.  If you use <code>[=]</code>, then that means you want to stay at the current index in the list.  The first time you use <code>[+]</code>, it will be interpreted as <code>[0]</code> (if you didn't add any items to the list before that).</p>\n<p>So you also could have written your FSH like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>* enableWhen[+]\n  * question = &quot;Seasonality&quot;\n  * operator = #=\n  * answerCoding = SeasonalityCodeSystem#0       // SeasonalityCodeSystem#0 = “in season”\n* enableWhen[+]\n  * question = &quot;Fruit-Type&quot;\n  * operator = #=\n  * answerCoding = FruittypeCodeSystem#3             // FruittypeCodeSystem#3 = “apple”\n* enableBehavior = #all\n</code></pre></div>\n<p>This is all documented in the FSH spec starting here: <a href=\"http://hl7.org/fhir/uv/shorthand/reference.html#array-paths-using-numerical-indices\">http://hl7.org/fhir/uv/shorthand/reference.html#array-paths-using-numerical-indices</a></p>",
        "id": 272713030,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1645462595
    },
    {
        "content": "<p>Thank you so much, that was very helpful and it makes total sense! I can now fin-fish my questionnaires!</p>",
        "id": 272774988,
        "sender_full_name": "Marieke Span",
        "timestamp": 1645520146
    }
]