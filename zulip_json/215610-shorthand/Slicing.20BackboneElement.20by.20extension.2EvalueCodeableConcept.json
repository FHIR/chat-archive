[
    {
        "content": "<p>I'm trying to slice a BackboneElement element (Practitioner.qualification) by extension.valueCodeableConcept (the extension is defined on \"qualification\" in my profile).</p>\n<p>I define slicing:</p>\n<ul>\n<li>qualification ^slicing.discriminator.type = #pattern</li>\n<li>qualification ^slicing.discriminator.path = \"$this\"</li>\n</ul>\n<p>and define slices:</p>\n<ul>\n<li>qualification[SLICE1] ^patternBackboneElement.extension.url = MyURL</li>\n<li>qualification[SLICE1] ^patternBackboneElement.extension.valueCodeableConcept.coding.code = #mycode</li>\n</ul>\n<p>However, when I run sushi, I get an error \"Cannot resolve element from path: patternBackboneElement.extension.url\".</p>\n<p>This approach seems to work for slicing of Identifier and CodeableConcept elements, but I'm wondering whether this is valid for slicing of a BackboneElement element and whether Sushi is supposed to support this.</p>",
        "id": 199707289,
        "sender_full_name": "Igor Sirkovich",
        "timestamp": 1591249560
    },
    {
        "content": "<p>The <code>pattern[x]</code> element <a href=\"https://www.hl7.org/fhir/elementdefinition-definitions.html#ElementDefinition.pattern_x_\">https://www.hl7.org/fhir/elementdefinition-definitions.html#ElementDefinition.pattern_x_</a>  has a <code>*</code> datatype. Following the link on the <code>*</code> leads you to this description of <a href=\"https://www.hl7.org/fhir/datatypes.html#open\">open type elements</a>, which are described as such:<br>\n\"Some elements do not have a specified type. The type is represented by the wildcard symbol \"*\". In these cases, the element type may be one of the following\"</p>\n<p>If you look through the big long lists of types below, you will see CodeableConcept and Identifier, but you will not see BackboneElement, so I don't think you are allowed to create a field <code>patternBackboneElement</code>. Since this approach is not valid in FHIR, SUSHI is stopping you from doing it.</p>",
        "id": 199736728,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1591272460
    },
    {
        "content": "<p>Thank you so much <span class=\"user-mention\" data-user-id=\"239822\">@Nick Freiter</span> ! I remembered seeing this list in the past but couldn't locate it. I will try a different approach then.</p>",
        "id": 199761768,
        "sender_full_name": "Igor Sirkovich",
        "timestamp": 1591283647
    }
]