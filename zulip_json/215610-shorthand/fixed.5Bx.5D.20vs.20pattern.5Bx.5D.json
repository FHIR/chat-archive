[
    {
        "content": "<p>Currently, FSH supports only one symbol for \"fixing\" values: <code>=</code>.  SUSHI determines whether to use <code>fixed[x]</code> or <code>pattern[x]</code> based on the type that is being fixed.  In short, complex types use <code>pattern[x]</code> and simple types use <code>fixed[x]</code>.  For example (within a Patient profile):</p>\n<div class=\"codehilite\"><pre><span></span>* active = true // uses fixedCode since active is a simple type\n* maritalStatus = V3MARITALSTATUS#M // uses patternCodeableConcept since maritalStatus is a complex type\n</pre></div>\n\n\n<p>We assume that perhaps authors may want more control over whether <code>fixed[x]</code> or <code>pattern[x]</code> is used.  Should FSH consider using different symbols to specify the author's intent?  If so, consider this proposal:</p>\n<ul>\n<li><code>=</code> indicates to use <code>pattern[x]</code></li>\n<li><code>:=</code> indicates to use <code>fixed[x]</code></li>\n</ul>\n<p>We chose to keep <code>=</code> for <code>pattern[x]</code> as it is the most backward compatible for common use cases -- and is often the preferred choice.  Even for simple types, many people prefer pattern since it allows for extensions (whereas <code>fixed[x]</code> does not).</p>\n<p>This means that the way the previous example is output to StructureDefinition would change.  Now it would be:</p>\n<div class=\"codehilite\"><pre><span></span>* active = true // uses patternCode since = was used\n* maritalStatus = V3MARITALSTATUS#M // uses patternCodeableConcept since = was used\n</pre></div>\n\n\n<p>To get the same behavior as SUSHI does today, you would need to do:</p>\n<div class=\"codehilite\"><pre><span></span>* active := true // uses fixedCode since := was used\n* maritalStatus = V3MARITALSTATUS#M // uses patternCodeableConcept since = was used\n</pre></div>\n\n\n<p>Thoughts?</p>",
        "id": 189695102,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1583331822
    },
    {
        "content": "<blockquote>\n<p>We assume that perhaps authors may want more control over whether fixed[x] or pattern[x] is used.</p>\n</blockquote>\n<p>yes definitely</p>",
        "id": 189725326,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583349729
    },
    {
        "content": "<p>Well, no one has said they hate the idea or the syntax, so... for now, we'll plan on the approach above.</p>",
        "id": 189831736,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1583439395
    },
    {
        "content": "<p>+1</p>",
        "id": 189846185,
        "sender_full_name": "Keith Boone",
        "timestamp": 1583448857
    },
    {
        "content": "<p>After kicking this around some more, we decided that <code>=</code> vs <code>:=</code> was a little too nuanced (in the syntax) -- and didn't carry over well to instance rules (since pattern doesn't really make sense there).  Instead, we're going to go with an <code>(exactly)</code> qualifier to indicate when something should use <code>fixed[x]</code> rather than <code>pattern[x]</code>.  E.g.:</p>\n<div class=\"codehilite\"><pre><span></span>* active = true (exactly) // use fixedBoolean\n* maritalStatus = V3MARITALSTATUS#M (exactly) // use fixedCodeableConcept\n</pre></div>\n\n\n<p>This follows a syntax similar to how binding strengths are defined.</p>",
        "id": 190289341,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1583938133
    },
    {
        "content": "<p>instead of (exactly) how about (fixed) ?</p>",
        "id": 190322697,
        "sender_full_name": "David Hay",
        "timestamp": 1583955604
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191321\">@David Hay</span> -- we considered that, but so far we have used the term \"fixed\" a bit more loosely than the strict FHIR definition of <code>fixed[x]</code>.  E.g., we talk about \"fixing\" a code, but we really mean by applying a <code>pattern[x]</code> to it.  If we use keyword <code>(fixed)</code> we might need to come up w/ another way of talking about the general situation of specifying a value that must match.  Perhaps we should do that anyway -- I don't know.  I think we were also thinking that while <code>fixed</code> might mean something very specific to the StructureDefinition experts, <code>exactly</code> might capture the intended meaning better for non-SD-experts authoring or reviewing FSH definitions.</p>",
        "id": 190326102,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1583957645
    },
    {
        "content": "<p>But we're certainly open to more discussion about it -- and if we go to ballot w/ <code>(exactly)</code> you can of course submit a comment to make sure it gets discussed!</p>",
        "id": 190326182,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1583957715
    }
]