[
    {
        "content": "<p>We've previously discussed the idea of supporting path-based context for rules via keywords such as <code>with</code> and modified rule markers such as <code>**</code>, <code>***</code>, etc. But... we never quite felt we had landed on the right solution. Over the past few weeks, we've continued to iterate over different syntaxes trying to find the best solution -- and <em>now</em> have something to propose. We think that those of you who enjoy YAML (ahem, <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span>) will probably like this proposal. We're interested in what the rest of you think (and you too, Eric).</p>\n<p>In short, the proposal is to indicate path context and structure via indented blocks of rules.  As an example, these FSH STU1 rules:</p>\n<div class=\"codehilite\"><pre><span></span><code>* name 1..*\n* name.given 1..*\n* name.family 1..1\n* active 1..1\n</code></pre></div>\n<p>could be written using \"indent blocks\" like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>* name 1..*\n  * given 1..*\n  * family 1..1\n* active 1..1\n</code></pre></div>\n<p>This means whitespace before <code>*</code> becomes <em>significant</em>, but we like it because it reminds us of markdown lists (with nested items) and, as previously noted, YAML.</p>",
        "id": 229783720,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615430507
    },
    {
        "content": "<p>We also propose using this syntax to expand the <code>CodeSystem</code> grammar to allow access to other concept properties (<code>e.g., designation</code>) and to author hierarchical code systems.  Using a <em>very abbreviated</em> version of US Core's <a href=\"http://www.hl7.org/fhir/us/core/CodeSystem-cdcrec.html\">Race &amp; Ethnicity CDC</a> code system, for example:</p>\n<div class=\"codehilite\"><pre><span></span><code>CodeSystem: RaceAndEthnicityCDC\n* ^property.code = #abstract\n* ^property.description = &quot;True if an element is considered &#39;abstract&#39;&quot;\n* ^property.type = #boolean\n* #1000-9 &quot;Race&quot; &quot;Race, Note that this is an abstract &#39;grouping&#39; concept and not for use as a real concept&quot;\n  * ^property.code = #abstract\n  * ^property.valueBoolean = true\n  * #1002-5 &quot;American Indian or Alaska Native&quot; &quot;American Indian or Alaska Native&quot;\n    * #1004-1 &quot;American Indian&quot; &quot;American Indian&quot;\n    * #1735-0 &quot;Alaska Native&quot; &quot;Alaska Native&quot;\n  * #2028-9 &quot;Asian&quot; &quot;Asian&quot;\n    * #2029-7 &quot;Asian Indian&quot; &quot;Asian Indian&quot;\n    * #2030-5 &quot;Bangladeshi&quot; &quot;Bandgladeshi&quot;\n* #2133-7 &quot;Ethnicity&quot; &quot;Ethnicity Note that this is an abstract &#39;grouping&#39; concept and not for use as a real concept&quot;\n  * ^property.code = #abstract\n  * ^property.valueBoolean = true\n  * #2135-2 &quot;Hispanic or Latino&quot; &quot;Hispanic or Latino&quot;\n    * #2137-8 &quot;Spaniard&quot; &quot;Spaniard&quot;\n    * #2148-5 &quot;Mexican&quot; &quot;Mexican&quot;\n  * #2186-5 &quot;Not Hispanic or Latino&quot; &quot;&quot;&quot;\n      Note that this term remains in the table for completeness, even though within HL7, the notion of\n      &quot;not otherwise coded&quot; term is deprecated.\n      &quot;&quot;&quot;\n</code></pre></div>",
        "id": 229783910,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615430647
    },
    {
        "content": "<p>For a more complete description and further examples, see our <a href=\"https://github.com/HL7/fhir-shorthand/wiki/Proposed-STU2-Feature:-Indent-Blocks\">Proposed STU2 Feature: Indent Blocks</a> wiki page.</p>",
        "id": 229783982,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615430710
    },
    {
        "content": "<p>Can we change to 4spaces/1 tab (despite Eric's love for YAML)?  That's a convention far beyond YAML and makes life easier for users.</p>",
        "id": 229856143,
        "sender_full_name": "David Pyke",
        "timestamp": 1615472732
    },
    {
        "content": "<p>In general, like this proposal.  It makes things easier on everyone.</p>",
        "id": 229856313,
        "sender_full_name": "David Pyke",
        "timestamp": 1615472779
    },
    {
        "content": "<p>YAML actually is not prescriptive about the number of spaces (it's up to the author and YAML interpreters just adjust to what they see) -- so in that way, variable spaces would be more like YAML.  OTOH, YAML specifically forbids tabs.</p>\n<p>I think 2 spaces vs 4 spaces is definitely a personal preference.  I exclusively use 2 spaces for all markup style languages (and many non-markup languages) -- and I know I'm not alone.  So I'd personally lean more toward making it flexible (so authors can use their preference) rather than changing the requirement from 2 to 4 spaces outright.  Thanks for the feedback!</p>",
        "id": 229857500,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615473195
    },
    {
        "content": "<p>+1 on 2</p>",
        "id": 229858682,
        "sender_full_name": "John Moehrke",
        "timestamp": 1615473607
    },
    {
        "content": "<p>I'm not a fan of languages like YAML that depend on spaces to infer meaning.   In many editors it's hard to see spaces (vs tabs) and it seems somewhat 'obscure' to depend on spacing/indentation to imply meaning.  Is there something that could be used that is more obvious?</p>",
        "id": 229874648,
        "sender_full_name": "John Silva",
        "timestamp": 1615478721
    },
    {
        "content": "<p>obviously not a Python programmer! :)</p>",
        "id": 229874874,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1615478763
    },
    {
        "content": "<p>Yeh, did one of those online \"Learn Python\" classes and felt the spacing stuff made learning the language more painful that it should be! ;-).  (Yes, a good language-sensitive editor can help but WHY depend on white space that's 'invisible'?)</p>",
        "id": 229875394,
        "sender_full_name": "John Silva",
        "timestamp": 1615478882
    },
    {
        "content": "<p>I think it makes sense and it more Markdown like than YAML like and who doesn't embrace markdown.  It makes is a bit more readable too IMO</p>",
        "id": 229876374,
        "sender_full_name": "Eric Haas",
        "timestamp": 1615479097
    },
    {
        "content": "<p>indentation or <code>** </code>are fine for me. I'll get used to either (would prefer **)</p>",
        "id": 229892288,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1615484133
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> in your analysis you mention ambiguous or nonsensical indexing - did you find a case for ambiguity?</p>",
        "id": 229892373,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1615484165
    },
    {
        "content": "<p>(that was the reason for the<code>with</code> - to avoid ambiguity.)</p>",
        "id": 229892632,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1615484197
    },
    {
        "content": "<p>Here's an example: If I have a questionnaire,</p>\n<div class=\"codehilite\"><pre><span></span><code>* item[+].id = &quot;question1&quot;\n* item[+].id = &quot;question2&quot;\n* item[+].item[+].id = &quot;question2-1&quot;\n* item[+].item[+].item[+].id = &quot;question2-1-1&quot;\n* item[+].item[+].item[+].item[+].id = &quot;question2-1-1-1&quot;\n* item[+].item[+].id = &quot;question2-2&quot;\n</code></pre></div>\n<p>How would this look like?</p>\n<div class=\"codehilite\"><pre><span></span><code>* item[+]\n  *id = &quot;question1&quot;\n  * item[+]\n    * id = &quot;question2&quot;\n    * item[+]\n      * id = &quot;question2-1&quot;\n      * item[+]\n        * id = &quot;question2-1-1&quot;\n        * item[+]\n          * id = &quot;question2-1-1-1&quot;\n  * item[+]\n    * id = &quot;question2-2&quot;\n</code></pre></div>",
        "id": 229899726,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1615486795
    },
    {
        "content": "<p>I like the proposal and find it interesting (or telling, depending on your point of view) that most of the discussion so far is about whitespace, rather than the meat of the change. I also like the related insert rules change.</p>",
        "id": 229902210,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1615487704
    },
    {
        "content": "<p>The one thing I note is that you introduce the situation of having an element name without saying anything further about it. Is there a requirement that if you have</p>\n<div class=\"codehilite\"><pre><span></span><code>* item\n</code></pre></div>\n<p>that there must be an indent block after it?</p>",
        "id": 229902654,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1615487853
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> -- Since question 1 and question 2 are siblings, they should be at the same indent level (i.e., question 2 is not a child of question 1).  So if I were to write your original FSH using the new indent block syntax, I would write it as:</p>",
        "id": 229902783,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615487891
    },
    {
        "content": "<p>Wait, <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> .  Actually, I'm not sure your original FSH is really what you want, I think you have a few too many <code>[+]</code> in there.  I think you want some of those to be<code>[=]</code>.  So, if the original FSH is:</p>\n<div class=\"codehilite\"><pre><span></span><code>* item[+].id = &quot;question1&quot;\n* item[+].id = &quot;question2&quot;\n* item[=].item[+].id = &quot;question2-1&quot;\n* item[=].item[=].item[+].id = &quot;question2-1-1&quot;\n* item[=].item[=].item[=].item[+].id = &quot;question2-1-1-1&quot;\n* item[=].item[+].id = &quot;question2-2&quot;\n</code></pre></div>\n<p>then the indented version is:</p>\n<div class=\"codehilite\"><pre><span></span><code>* item[+].id = &quot;question1&quot;\n* item[+]\n  * id = &quot;question2&quot;\n  * item[+]\n    * id = &quot;question2-1&quot;\n    * item[+]\n      * id = &quot;question2-1-1&quot;\n      * item[+].id = &quot;question2-1-1-1&quot;\n  * item[+].id = &quot;question2-2&quot;\n</code></pre></div>\n<p>or if you choose to just use indenting even where there is only one child (which is technically not necessary but maybe you like the consistency) then:</p>\n<div class=\"codehilite\"><pre><span></span><code>* item[+]\n  * id = &quot;question1&quot;\n* item[+]\n  * id = &quot;question2&quot;\n  * item[+]\n    * id = &quot;question2-1&quot;\n    * item[+]\n      * id = &quot;question2-1-1&quot;\n      * item[+]\n        * id = &quot;question2-1-1-1&quot;\n  * item[+]\n    * id = &quot;question2-2&quot;\n</code></pre></div>",
        "id": 229903656,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615488231
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191380\">Elliot Silver</span> <a href=\"#narrow/stream/215610-shorthand/topic/Proposal.3A.20Indent.20Blocks/near/229902654\">said</a>:</p>\n<blockquote>\n<p>The one thing I note is that you introduce the situation of having an element name without saying anything further about it. Is there a requirement that if you have</p>\n<div class=\"codehilite\"><pre><span></span><code>* item\n</code></pre></div>\n<p>that there must be an indent block after it?</p>\n</blockquote>\n<p>Without a following indent block, that rule would essentially be a no-op.  I'm not sure if we would <em>disallow</em> it, but it's probably worthy of a warning since it adds no value.</p>",
        "id": 229903975,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615488353
    },
    {
        "content": "<p>Makes sense. What about:</p>\n<div class=\"codehilite\"><pre><span></span><code>* item[+]\n</code></pre></div>",
        "id": 229905341,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1615488876
    },
    {
        "content": "<p>Ha.  Yeah, I guess that is <em>not</em> a no-op, and perhaps some authors might prefer to use a rule <em>only</em> to increment an index (and then use <code>item[=]</code> in rules after).   I hadn't thought of that, but it seems valid.</p>",
        "id": 229906063,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615489153
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"298707\">John Silva</span> <a href=\"#narrow/stream/215610-shorthand/topic/Proposal.3A.20Indent.20Blocks/near/229874648\">said</a>:</p>\n<blockquote>\n<p>I'm not a fan of languages like YAML that depend on spaces to infer meaning.   In many editors it's hard to see spaces (vs tabs) and it seems somewhat 'obscure' to depend on spacing/indentation to imply meaning.  Is there something that could be used that is more obvious?</p>\n</blockquote>\n<p>Yeah, I get that -- meaningful whitespace can be a controversial topic.  I'm also not a fan in many contexts, but in some cases it feels more natural than others.  This seems like a tangent, but... In last week's HL7 CDS Workgroup meeting, someone shared a Word document with a draft of the MetadataResource in it.  We were already narrowing in on proposing indents for structure -- but looking at this document confirmed that it is a <em>natural</em> way that people think about and sketch out these things.  In fact, I was very surprised to realize that the structure looked <em>almost exactly</em> like it would in FSH if we combined the logical model and indent block proposals.  I just had to take a screenshot: <br>\n<a href=\"/user_uploads/10155/T1se-0-OJcO-MKBbGXD_osgy/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/T1se-0-OJcO-MKBbGXD_osgy/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/T1se-0-OJcO-MKBbGXD_osgy/image.png\"></a></div>",
        "id": 229907243,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615489571
    },
    {
        "content": "<p>Ultimately we want FSH to feel natural.  We tried lots of things (multiple <code>*</code>, various <em>placeholders</em>, path aliases, etc) -- and in the end, this is what felt most natural to us.  But this is why we bring it to the community -- to see if it's <em>just us</em> or if others feel the same way.</p>",
        "id": 229907547,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615489701
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> You are right, I had too many [+], some of them were [=].</p>",
        "id": 229907959,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1615489861
    },
    {
        "content": "<p>From a practical standpoint, many editors can be configured to show whitespace characters (in a <em>fairly</em> unobtrusive way).  But I'd also note that what we are proposing is an <em>optional</em> syntax.  Authors can still choose to use the long-form syntax.  (With one exception -- we didn't propose a long-form syntax for the new <code>CodeSystem</code> features yet, but I was actually just tossing around some ideas for that this morning).</p>",
        "id": 229907993,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615489872
    },
    {
        "content": "<p>About the no-op, should we do the yaml thing and add a <code>:</code>?</p>",
        "id": 229908042,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1615489889
    },
    {
        "content": "<p>or it's the indentation that will work?</p>",
        "id": 229908076,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1615489905
    },
    {
        "content": "<p>The indentation is <em>enough</em> for us to correctly process it, but if we felt we wanted to require a <code>:</code> to make the author's intent clear (\"I <em>meant</em> to do this\") then I think that's a possibility.</p>",
        "id": 229908186,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615489963
    },
    {
        "content": "<p>danger with indentation is that IDEs sometimes think they know the indentation we want. And Python suffers a bit with that.</p>",
        "id": 229908204,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1615489973
    },
    {
        "content": "<p>Ok the <code>: </code> is more to give a sense of what we are going to do next, so that when copy-pasting lines the whole thing still makes sense.</p>",
        "id": 229908324,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1615490025
    },
    {
        "content": "<p>i mean it as a suggestion</p>",
        "id": 229908348,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1615490038
    },
    {
        "content": "<p>Re: IDEs.  Yeah, that's a blessing and a curse.  Editor-assist for indentation can be really useful!  Sometimes it's nice to hit enter and have it already be indented for me.  But yeah, that also means the editor is guessing what you want -- and sometimes you really want to outdent.</p>",
        "id": 229908473,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615490059
    },
    {
        "content": "<p>The good (?) thing about indents in this context (vs python) is that most incorrect indents would be caught by SUSHI because they often result in invalid paths.  My issue w/ space-sensitive programming languages is that I always ended up messing up the scope of my for-loops, and those errors were never apparent until runtime (if at all).  Luckily FSH wouldn't suffer from that as much (although <code>item</code> is arguably one place where you could run into that).</p>",
        "id": 229909803,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615490584
    },
    {
        "content": "<p>Just bumping this up one more time to see if there is any more feedback.  If not, this is a Standard for <em>Trial</em> Use after all, so perhaps we will just <em>try</em> it to see how it works out (possibly adjusting for the feedback we've received so far).  As with any HL7 standard, it will need to go through ballot before it is official anyway.  But still, we like to get things right the first time since we have active users who <em>will</em> integrate these features into their IGs <em>before</em> ballot.  So... anyone else have thoughts?</p>",
        "id": 230588531,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615927697
    },
    {
        "content": "<p>\"So... anyone else have thoughts?\" or \"So... anyone have more thoughts?\" ? <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 230589786,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1615928171
    },
    {
        "content": "<p>I'd make sure there's no chance for ambiguity to be a problem in the future (on nested elements in questionnaires,  plandefinitions, etc)</p>",
        "id": 230589967,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1615928236
    },
    {
        "content": "<p>Ha.  <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> -- I'm interested in further thoughts if you have them too -- but so far only 7 people have weighed in at all and I'd love to get some additional data points and perspectives.</p>",
        "id": 230591619,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1615928891
    },
    {
        "content": "<p>:) For me it's fine, and I think it's good to have insight from more people.</p>",
        "id": 230592608,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1615929302
    },
    {
        "content": "<p>personally I'm not sure if I'll actually use it because I'm not a huge fan of indentation levels as code rather than ease-of-eyes formatting, but I see the draw so I have no reason to stop this from happening. Regardless of that I had a couple questions I've been stewing on</p>\n<p>if how much whitespace means one indent is dependent on how the author uses said whitespace, does this run into any issues with rulesets injecting in code? can one ruleset be used in different indentation levels? how would that look if yes? if no could you pass in the amount of whitespace to use as a base in a parameter? could that be inherited based on how much whitespace is before an \"insert\" rule?<br>\nhow do multi-line strings work with these indentations? does the opening stay indented and the rest just sit weirdly left-aligned? (now looking at the spec thus-far you should be able to indent as much as you want and just have the shared indent removed during processing so it shouldn't be an issue)<br>\nAnd also I feel like this got answered but I can't find it anymore, is space the only whitespace character allowed for these indents? or would tab work too? (and if so what happens if you have mixed space+tab indents? an error? an assumed conversion rate?)</p>",
        "id": 230597178,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1615931589
    },
    {
        "content": "<p>Good point <span class=\"user-mention\" data-user-id=\"237342\">@ryan moehrke</span> <br>\nI think the impact on rules and multiline strings should be clarified. <br>\nFor tabs / spaces, I would follow the yaml rule - no tabs</p>",
        "id": 230599472,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1615932326
    },
    {
        "content": "<p>I think the behavior presented for rules was that the rule invocation inherits the indent level of where it is inserted. </p>\n<p>I would hypothesize that It isn't possible for rule contents to be less indented than where it was invoked. And, that It is possible to indent further within a rule, but it is never (irrespective of use of rule) permissible to skip indent levels.</p>\n<p>I have a certain reluctance around whitespace-sensitive languages too, but I recognize that FSH is already in that category, so am willing to embrace it.</p>",
        "id": 230633679,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1615952799
    },
    {
        "content": "<p>Just to bring this thread to a satisfying close, this feature has been added to SUSHI 2.0 and is now available, with description <a href=\"http://build.fhir.org/ig/HL7/fhir-shorthand/reference.html#indented-rules\">located here</a>. Thank you all for the very vigorous and helpful discussion.</p>",
        "id": 241642691,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1622908175
    },
    {
        "content": "<p>I can't make indentation work with rules.</p>",
        "id": 242514854,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623596146
    },
    {
        "content": "<p>has this been considered as part of the previous discussion?</p>",
        "id": 242514896,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623596180
    },
    {
        "content": "<p>here's one example which tries too hard to get indentation and rule working:<br>\n<a href=\"https://fshschool.org/FSHOnline/#/share/35hnIQk\">https://fshschool.org/FSHOnline/#/share/35hnIQk</a></p>",
        "id": 242514926,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623596212
    },
    {
        "content": "<p>I may be missing something. If not, I think this language feature should include these cases. As a language, FSH should be consistent, right?</p>",
        "id": 242514979,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623596276
    },
    {
        "content": "<p>Perhaps it is just the parser that does not do anything yet, but what are the FHIR Shorthand rules around this?</p>",
        "id": 242515021,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623596311
    },
    {
        "content": "<p>Indentation is not supposed to work in that context. From the <a href=\"http://build.fhir.org/ig/HL7/fhir-shorthand/branches/master/reference.html#indented-rules\">spec</a>:</p>\n<blockquote>\n<p>The full path of all rules is resolved from the context specified by indentation before any rules are applied.</p>\n</blockquote>\n<p>This means that indentation is resolved <em>before</em> an <code>insert</code> rule is applied.</p>",
        "id": 242591193,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1623675074
    },
    {
        "content": "<p>We felt it would be too confusing to have RuleSets with rules that <em>start</em> indented -- because they're so far from the context in which they are used.  That said, we have discussed the possibility of allowing the <code>insert</code> rule itself to be indented to indicate that's the context in which the RuleSet rules should be applied.  I see you tried to do that at the end of your example; so that's something that we might (probably will) address.</p>",
        "id": 242593918,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1623676250
    },
    {
        "content": "<p>Something to consider though is that in the example <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span>  linked it looks like he wanted to use the rules from one <code>insert</code> rule to set the context in the second <code>insert</code> rule. I'm not sure exactly how that fits into the possibility <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span>  mentioned. And I'm interested to hear what you think about that case Chris.</p>",
        "id": 242597400,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1623677724
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"239822\">@Nick Freiter</span> - Ah, I don't think I realized that was what he was going for.  I think that RuleSets should not \"leak\" context; i.e., any context in the RuleSet ends at the end of the RuleSet.  That way when you're looking at a set of rules with <code>insert</code> rules, it's still easy to see the overall structure without needing to know the details of the RuleSet being applied.  I think it would be confusing otherwise.  So... I think the part of the spec you quoted above still applies.</p>",
        "id": 242613042,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1623683861
    },
    {
        "content": "<p>But maybe we need to call that out even more explicitly in the spec so it is crystal clear.  Since we sometimes refer to <code>insert</code> like <em>copy-pasting</em> the RuleSet right in place, I can see why there might be confusion.</p>",
        "id": 242613284,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1623683955
    },
    {
        "content": "<p>this may be a better example:<br>\n<a href=\"https://fshschool.org/FSHOnline/#/share/3zowzxv\">https://fshschool.org/FSHOnline/#/share/3zowzxv</a></p>",
        "id": 242653236,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623701629
    },
    {
        "content": "<p>I should not have indented things inside the ruleset</p>",
        "id": 242653252,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623701638
    },
    {
        "content": "<p>but my purpose is to add an insert inside another insert</p>",
        "id": 242653343,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623701679
    },
    {
        "content": "<p>so indent the calling of rulesets</p>",
        "id": 242653359,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623701689
    },
    {
        "content": "<p>Yes, <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span>, if I understand your example correctly, this is something we hope to support as part of STU2; we just have not got there yet.  But I think in real use, we would simplify your example even further to something like this, right? <a href=\"https://fshschool.org/FSHOnline/#/share/3xkbaDR\">https://fshschool.org/FSHOnline/#/share/3xkbaDR</a></p>",
        "id": 242655379,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1623702751
    },
    {
        "content": "<p>yes, that's it. In my original idea I had 2 attempts at doing that. The simpler one is the one that would work best.</p>",
        "id": 242658648,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623704565
    },
    {
        "content": "<p>Is that compatible with the syntax defined?</p>",
        "id": 242658658,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623704575
    },
    {
        "content": "<p>Right now, the spec on <a href=\"http://build.fhir.org\">build.fhir.org</a> says that you cannot indent <code>insert</code> rules, because thus far, insert rules have not been allowed to be applied to specific paths (e.g., right now <code>insert</code> rules are always \"path-less\").  The indent syntax <em>would</em> allow for what I showed in the example linked above, but first we need to introduce a form of <code>insert</code> that allows for insertion at a path, and then we can extend the specification of the indent syntax to leverage that.</p>",
        "id": 242662151,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1623706509
    },
    {
        "content": "<p><strong>No.  Wait.  I take that back.</strong> Sorry, I was a bit distracted and hadn't fully thought through that.  My example above is not quite right because it still leverages paths introduced by the insert rule above it.  We don't (and likely won't) allow that.  Let me draft a better example for you.</p>",
        "id": 242662377,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1623706640
    },
    {
        "content": "<p>Since <code>item</code> is actually the thing that is variable (could be any level deep), it's best to actually not include that in the RuleSet definition, but rather specify it as part of the path to which the RuleSet is applied.  E.g.: <a href=\"https://fshschool.org/FSHOnline/#/share/35jTe03\">https://fshschool.org/FSHOnline/#/share/35jTe03</a></p>",
        "id": 242662916,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1623706941
    },
    {
        "content": "<p>looks almost like a \"with\" statement but on the other end :)</p>",
        "id": 242666778,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623709724
    },
    {
        "content": "<p>so instead of putting the context in the beginning as I was thinking for the with, you pass the context when calling the rule?</p>",
        "id": 242666877,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623709803
    },
    {
        "content": "<p>i.e. the logic for this is:</p>",
        "id": 242666922,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623709836
    },
    {
        "content": "<p>the insert rule takes its context from where it is called, if there is an explicit declaration of context.<br>\n<code>* insert Rule(a,b,c)</code> - there's no context, so this is top level<br>\n<code>* context insert Rule(a,b,c)</code> there is a context here, so the parser will determine that context and then apply the rule<br>\n<code>   * context insert Rule(a,b,c)</code> there is a context and indentation here, so the parser will determine where that context applies and then apply the rule</p>",
        "id": 242667181,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623710019
    },
    {
        "content": "<p>is that what you mean?</p>",
        "id": 242667186,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623710026
    },
    {
        "content": "<p>I think there may still a problem with this: won't the insert of a ruleset create a context itself? What happens?<br>\n<a href=\"https://fshschool.org/FSHOnline/#/share/2TptEEh\">https://fshschool.org/FSHOnline/#/share/2TptEEh</a></p>",
        "id": 242667960,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623710590
    },
    {
        "content": "<p>If we do add support for paths in an <code>insert</code> rule, the context for subsequent rules indented below an <code>insert</code> rule will take their context from the explicit path on that <code>insert</code> rule, <em>not</em> from the implicit paths being inserted. So in this example:</p>\n<div class=\"codehilite\"><pre><span></span><code>* item[0] insert Question(patient,Patient,group,false)\n  * item[0] insert Question(status,IndentedStatus,group,false)\n</code></pre></div>\n<p>It is equivalent to saying:</p>\n<div class=\"codehilite\"><pre><span></span><code>* item[0] insert Question(patient,Patient,group,false)\n* item[0].item[0] insert Question(status,IndentedStatus,group,false)\n</code></pre></div>\n<p>The paths are resolved <em>before</em> applying the <code>insert</code> rule, so the insert of the <code>RuleSet</code> does not create any context.</p>",
        "id": 242731168,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1623763404
    },
    {
        "content": "<p>I think that rule makes sense</p>",
        "id": 242791593,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623787529
    },
    {
        "content": "<p>as for the syntax, wouldn't it be better to delimit the context?</p>",
        "id": 242791745,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623787589
    },
    {
        "content": "<p>in the example, <code>item[0]</code> is not a keyword, so perhaps isolate that? as in </p>\n<div class=\"codehilite\"><pre><span></span><code>* item[0]: insert Question(patient,Patient,group,false)\n  * item[0]: insert Question(status,IndentedStatus,group,false)\n</code></pre></div>",
        "id": 242791869,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623787651
    },
    {
        "content": "<p>that would also help in those rare cases where the attribute has the same name as a fsh keyword</p>",
        "id": 242792066,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1623787736
    },
    {
        "content": "<p>Thanks, <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span>.  TBH, I'm not sure if the trailing <code>:</code> adds much.  Other rules w/ infix keywords don't use it (e.g., <code>identifier obey inv-2</code>, <code>component contains systolic 1..1</code>). I also don't think we need the <code>:</code> to disambiguate anything in the grammar (even in the rare case of a path named <code>insert</code>).  So... I feel like it would be easier for users to remember if it just did the same as other rules: <code>path keyword value(s)</code>.  E.g.:</p>\n<div class=\"codehilite\"><pre><span></span><code>* item[0] insert Question(patient,Patient,group,false)\n  * item[0] insert Question(status,IndentedStatus,group,false)\n</code></pre></div>",
        "id": 242952252,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1623883109
    },
    {
        "content": "<p>For anyone who wants to track this, this capability is (more or less) covered by <a href=\"https://github.com/FHIR/sushi/issues/828\">SUSHI#828</a>.</p>",
        "id": 242952661,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1623883364
    },
    {
        "content": "<p>How do I use indentation here?<br>\n<a href=\"https://fshschool.org/FSHOnline/#/share/3k3gjeD\">https://fshschool.org/FSHOnline/#/share/3k3gjeD</a></p>",
        "id": 249825613,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1629278982
    },
    {
        "content": "<p>I am trying to indent a process.step inside  another process.step, not inside the process.step.operation</p>",
        "id": 249826187,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1629279360
    },
    {
        "content": "<p>Here is an <a href=\"https://fshschool.org/FSHOnline/#/share/37QUMjF\">example</a> that matches yours, but used indentation to nest a <code>process.step</code> inside <code>process.step</code>. A similar pattern could be followed with the rest of the file. The indented part starts on line 65</p>",
        "id": 249847025,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1629292550
    },
    {
        "content": "<p>great. I thought that every line would need to assign a value to a property. if not, that solves the issue. <br>\nThanks!</p>",
        "id": 249901492,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1629315532
    }
]