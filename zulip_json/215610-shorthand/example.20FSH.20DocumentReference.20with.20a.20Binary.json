[
    {
        "content": "<p>DocumentReference.content.attachment.url can point at a Binary.. but I can't figure out how to get Sushi to like that. It seems to think that because the element is url datatype that it can't contain a Reference. but it can.</p>",
        "id": 222611155,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610557024
    },
    {
        "content": "<p>SUSHI does require <code>url</code> datatypes to be set to a URL (e.g., a <em>string</em> URL).  Are you trying to set it using something like <code>Reference(MyBinary)</code> -- and expecting it to resolve to relative path <code>Binary/MyBinaryId</code>?  I can see why you would <em>want</em> that to work, but the trouble is that the only hint we have that it might be a valid approach is in the narrative content about <code>Attachment.url</code>. To support this in FSH/SUSHI, we'd need to make it valid to use <code>Reference(...)</code> for <em>all</em> <code>url</code> types.  Maybe that's fine -- and something we should consider -- but for now it's not supported; so you'll need to just put <code>\"Binary/MyBinaryId\"</code>.</p>",
        "id": 222635798,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1610567440
    },
    {
        "content": "<p>I feared that would happen... yes the intention was that sometimes .url would be manipulated like a Reference.reference, but sometimes it would be a natural url.</p>",
        "id": 222636141,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610567606
    },
    {
        "content": "<p>It would be great to have a Url() function just like the Canonical() function. And also to be able to compose urls, so I can do siteurl + resourceId.</p>",
        "id": 222647508,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1610572971
    },
    {
        "content": "<p>so.,.. is it possible to get this fix into the this release of sushi too?</p>",
        "id": 222661422,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610580092
    },
    {
        "content": "<p>it is especially important for examples of the MHD Provide Document Bundle transaction which is a Transaction Bundle with a List(submissionset) + some DocumentReference(s) with their Binary(s)... thus in the bundle it needs to be appropriate bundle references, that the server fixes up to server side url references...</p>",
        "id": 222661577,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610580199
    },
    {
        "content": "<p>No, I don't think this will make it into the release.  For one, it's actually a change to the FSH spec itself (or at least a looser interpretation of it).  So we probably need to think on it a bit more.</p>\n<p>Is there a reason you can't just put in the relative URLs as strings?  You should know the <code>type</code> and <code>id</code> at authoring time, so isn't it just setting the <code>url</code> to <code>{Type}/{id}</code> (for whatever type/id you're referring to)?</p>",
        "id": 222661846,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1610580373
    },
    {
        "content": "<p>I will try that. but I think they are expecting the fullUrl value is used... not sure, will need to try some stuff</p>",
        "id": 222661937,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610580470
    },
    {
        "content": "<p>this is where we need the reference servers to speak up on how they implemented it.  There was discussion with them long time ago.</p>",
        "id": 222662001,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610580504
    },
    {
        "content": "<p>I don't think I understand how one would arrive at the full URL value from a simple <code>Reference</code> anyway (using SUSHI).  I don't think there is anyway for SUSHI to know what the base URL should be for an instance (unless the author specifically provides it).</p>",
        "id": 222663109,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1610581310
    },
    {
        "content": "<p>no, in the bundle the DocumentReference.content.attachment.url would contain the same value that Bundle.entry[x].fullUrl for the entry the Binary is in.</p>",
        "id": 222663305,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610581448
    },
    {
        "content": "<p>see this xml example  <a href=\"https://github.com/usnistgov/asbestos/blob/master/asbestos-mhd/src/test/resources/gov/nist/asbestos/mhd/translation/shared/bundle.xml\">https://github.com/usnistgov/asbestos/blob/master/asbestos-mhd/src/test/resources/gov/nist/asbestos/mhd/translation/shared/bundle.xml</a></p>",
        "id": 222663795,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610581843
    },
    {
        "content": "<p>OK, right.  But we can't translate that into a general behavior that FSH/SUSHI should follow.  That's some very specific behavior there (needing to know to search for the entry that contains the matching Binary and then take the URL from the entry's fullUrl field).  That's not like anything that FSH currently supports.</p>",
        "id": 222665541,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1610583038
    }
]