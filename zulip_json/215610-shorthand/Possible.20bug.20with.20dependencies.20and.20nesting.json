[
    {
        "content": "<p>Nesting after creating an instance from a dependency results in the following error:</p>\n<div class=\"codehilite\"><pre><span></span><code>Cannot read property &#39;length&#39; of undefined\n</code></pre></div>\n<p>Repro:</p>\n<ul>\n<li>create a tank with a Profile (let's call it the \"profile\" tank)</li>\n<li>run the publisher on the \"profile\" tank (to get a local package)</li>\n<li>create another tank (let's call it the \"instance\" tank) and add a dependency to the \"profile\" tank (using dev to get the local \"profile\" package)</li>\n<li>add an Instance to the \"instance\" tank with an InstanceOf the Profile from the \"profile\" tank</li>\n<li>build the \"instance\" tank with sushi</li>\n</ul>\n<p>The result is the above error.  Using sushi v0.16.0.</p>\n<p>Code for a Repro:<br>\n\"profile\" tank:</p>\n<div class=\"codehilite\"><pre><span></span><code>Profile: ReproPlanDefinition\nParent: PlanDefinition\n</code></pre></div>\n<p>\"instance\" tank:</p>\n<div class=\"codehilite\"><pre><span></span><code>Instance: ReproPlanDefinitionInstance\nInstanceOf: ReproPlanDefinition\n* status = #draft\n* action.title = &quot;Repro Title&quot;\n* action.action[0].title = &quot;Repro SubTitle One&quot;\n* action.action[1].title = &quot;Repro SubTitle Two&quot;\n//explicit index on the action doesn&#39;t fix\n* action[1].title = &quot;Repro Title&quot;\n* action[1].action[0].title = &quot;Repro SubTitle One&quot;\n* action[1].action[1].title = &quot;Repro SubTitle Two&quot;\n</code></pre></div>\n<p>result:</p>\n<div class=\"codehilite\"><pre><span></span><code>error Cannot read property &#39;length&#39; of undefined\n  File: C:\\src\\fsh-sandbox\\SandboxContentIG\\fsh\\ReproPlanDefinitionInstance.fsh\n  Line: 5\nerror Cannot read property &#39;length&#39; of undefined\n  File: C:\\src\\fsh-sandbox\\SandboxContentIG\\fsh\\ReproPlanDefinitionInstance.fsh\n  Line: 6\nerror Cannot read property &#39;length&#39; of undefined\n  File: C:\\src\\fsh-sandbox\\SandboxContentIG\\fsh\\ReproPlanDefinitionInstance.fsh\n  Line: 9\nerror Cannot read property &#39;length&#39; of undefined\n  File: C:\\src\\fsh-sandbox\\SandboxContentIG\\fsh\\ReproPlanDefinitionInstance.fsh\n  Line: 10\nerror Cannot read property &#39;length&#39; of undefined\n</code></pre></div>\n<p>Also, when you do the same thing in a single tank, it doesn't error.<br>\nadd to the \"instance\" tank:</p>\n<div class=\"codehilite\"><pre><span></span><code>Profile: WorkaroundPlanDefinition\nParent: PlanDefinition\n\nInstance: WorkaroundPlanDefinitionInstance\nInstanceOf: WorkaroundPlanDefinition\n* status = #draft\n* action.title = &quot;Workaround Title&quot;\n* action.action[0].title = &quot;Workaround SubTitle One&quot;\n* action.action[1].title = &quot;Workaround SubTitle Two&quot;\n* action[1].title = &quot;Workaround Title&quot;\n* action[1].action[0].title = &quot;Workaround SubTitle One&quot;\n* action[1].action[1].title = &quot;Workaround SubTitle Two&quot;\n</code></pre></div>\n<p>result: no errors</p>",
        "id": 216789359,
        "sender_full_name": "Rob Reynolds",
        "timestamp": 1605442955
    },
    {
        "content": "<p>The dependencies rely on npm packages. I don't know that FSH has a way to specify a dependency to a local directory.</p>",
        "id": 216903592,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1605547636
    },
    {
        "content": "<p>If you've built the project using the IG Publisher locally, it should put the <code>dev</code> version into the local FHIR cache and SUSHI <em>should</em> be able to pick it up if the dependency version is specified as <code>dev</code>.  Tagging <span class=\"user-mention\" data-user-id=\"239822\">@Nick Freiter</span> to confirm (and see if he has any ideas what might be going on here).</p>",
        "id": 216905934,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1605548683
    },
    {
        "content": "<blockquote>\n<p>I don't know that FSH has a way to specify a dependency to a local directory</p>\n</blockquote>\n<p>if you do, you should do it the same way as the java tools - the version is a file name. See <a href=\"https://docs.npmjs.com/cli/v6/configuring-npm/package-json#local-paths\">https://docs.npmjs.com/cli/v6/configuring-npm/package-json#local-paths</a></p>",
        "id": 216932952,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1605561180
    },
    {
        "content": "<p>Looked into this, and it seems like it wasn't a problem with dependencies, but rather an issue with how we handled <code>contentReference</code> elements (<code>PlanDefinition.action.action</code> in this case). The definition generated by the Publisher was using a slightly different format for a <code>contentReference</code> than the format we have been assuming in SUSHI. I've added a fix <a href=\"https://github.com/FHIR/sushi/pull/671\">here</a>, so once that is merged and released this should no longer be an issue. Thanks for the report!</p>",
        "id": 217061054,
        "sender_full_name": "Nick Freiter",
        "timestamp": 1605646344
    },
    {
        "content": "<p>That fixed it!  Thank you!</p>",
        "id": 217515583,
        "sender_full_name": "Rob Reynolds",
        "timestamp": 1605987645
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"217210\">@Rob Reynolds</span> -- this fix was just released in SUSHI version 1.0.2.</p>",
        "id": 217936700,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1606336873
    }
]