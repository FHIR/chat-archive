[
    {
        "content": "<p>Is there a FSH way to add the <code>special-url</code> parameters in the <code>build/input/ImplementationGuide-foo.json</code> file?</p>",
        "id": 196055820,
        "sender_full_name": " Bob Milius",
        "timestamp": 1588432216
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191916\">@ Bob Milius</span> -- we're working on a much more robust approach to configuration, due to be released in the next few weeks.  This will give you control over all the parameters in the IG JSON file.  Until then, SUSHI doesn't provide a suitable way to do what you're asking.  You would need to edit the IG JSON after SUSHI generates it.  If you're skilled at writing scripts, you could probably write a quick script to do this for you.</p>",
        "id": 196213520,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1588613434
    },
    {
        "content": "<p>I had a related question - possibly related to the approach you may take:<br>\nwill sushi a) merge or b) overwrite the IG?</p>",
        "id": 196214592,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1588613964
    },
    {
        "content": "<p>I think merge is better, because in some cases we cannot edit the ig after sushi is done with it and before the publisher picks it up</p>",
        "id": 196214730,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1588614014
    },
    {
        "content": "<p>(sorry for slightly deviating from the topic but my question is similar, only a bit more generic - IGs will have several other parameters besides special urls)</p>",
        "id": 196214980,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1588614159
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> -- initial implementation will overwrite, but the new approach should give you control over pretty much everything in ImplementationGuide, so there shouldn't be too many reasons you'd <em>want</em> to maintain another instance of ImplementationGuide separate from the SUSHI configuration that defines all the IG values.  Basically, what I'm trying to say is that the new config should have 100% coverage of the whole IG resource.</p>\n<p>There may be use cases (or preferences) for another approach (like merging), but given the inherent complexity in such a thing, we prefer to wait until people have tried the new approach to see if there is demand for a merging strategy.</p>",
        "id": 196215334,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1588614353
    },
    {
        "content": "<p>i don't want to make my IG in sushi - is that allowed?</p>",
        "id": 196215404,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1588614385
    },
    {
        "content": "<p>If you just want SUSHI to generate profiles, extensions, value sets, etc but <em>not</em> generate the ImplementationGuide JSON or do any of the other IG magic, then yes, that is allowed.  If you're asking for SUSHI to generate all those things <em>and</em> merge them into an existing IG JSON then that's not something we've considered, but it is something we could consider as some sort of hybrid strategy.</p>",
        "id": 196215661,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1588614518
    },
    {
        "content": "<p>E.g., generate definitional and instance files and update IG JSON w/ references to them, but <em>don't</em> do anything else IG related (pages, menus, etc).</p>",
        "id": 196215781,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1588614590
    },
    {
        "content": "<blockquote>\n<p>If you just want SUSHI to generate profiles, extensions, value sets, etc but <em>not</em> generate the ImplementationGuide JSON or do any of the other IG magic, then yes, that is allowed.  If you're asking for SUSHI to generate all those things <em>and</em> merge them into an existing IG JSON then that's not something we've considered, but it is something we could consider as some sort of hybrid strategy.</p>\n</blockquote>\n<p>No,  I just want sushi to run when being called by the publisher with the genonce.bat, without changing the content I already have there - resources, pages, menu, templates, etc.</p>",
        "id": 196216057,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1588614740
    },
    {
        "content": "<p>is that how it works when it is being called by the publisher? It just generates sushi artefacts and does not do the rest?</p>",
        "id": 196216176,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1588614801
    },
    {
        "content": "<p>If so, I think it works</p>",
        "id": 196216196,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1588614811
    },
    {
        "content": "<blockquote>\n<p>is that how it works when it is being called by the publisher? It just generates sushi artefacts and does not do the rest?</p>\n</blockquote>\n<p>I'll have to check, but I think the answer is \"no\".  Right now, it assumes that if it is being called by the IG publisher then you <em>want</em> the IG features.  But that's just what it does right now and is not necessarily how it must be.  Part of this is also because SUSHI was initially built assuming that you were building into a clean (empty) folder, so workflows where you purposefully build into existing folders with existing files can cause some issues since it breaks that original assumption.</p>",
        "id": 196217164,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1588615250
    },
    {
        "content": "<p>Yes, that would be critical because it dictates whether or not my IG should run sushi... I will give it a try to see what it does and the impact - I will post the result in the other stream (integration) - thanks!</p>",
        "id": 196217506,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1588615397
    }
]