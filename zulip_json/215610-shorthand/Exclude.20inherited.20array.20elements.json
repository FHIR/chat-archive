[
    {
        "content": "<p><strong>Background: </strong><br>\nI am defining a Patient profile in FSH having the parent =  USCorePatientProfile. I'm defining a slice on the <code>identifier</code> attribute. The slice is working just fine. </p>\n<p>The parent <code>identifier</code> defines an example for <code>identifier.value</code> in its array of examples. Within the slice definition, I want to replace the parent's <code>example</code> array element with my slice-specific <code>example</code>. In my slice definition, I have:</p>\n<div class=\"codehilite\"><pre><span></span><code>* identifier[mrn].value ^example[0].label = &quot;My example Label&quot;\n* identifier[mrn].value ^example[0].valueString = &quot;My example content&quot;\n</code></pre></div>\n<p>This successfully adds my example to the array of examples, but the parent's <code>example</code> element still exists. From the identifier slice element:</p>\n<div class=\"codehilite\"><pre><span></span><code>&quot;example&quot; : [\n  {\n    &quot;label&quot; : &quot;General&quot;,\n    &quot;valueString&quot; : &quot;123456&quot;\n  },\n  {\n    &quot;label&quot; : &quot;My example Label&quot;,\n    &quot;valueString&quot; : &quot;My example content&quot;\n  }\n],\n</code></pre></div>\n<p><strong>Question:</strong><br>\nWithin the FSH definition, how can I \"remove\" the unwanted inherited example?<br>\nIn fact, how can I \"removed\" any inherited non-array ElementDefinition attributes such as <code>comment</code>, <code>requirements</code>, etc. I could override them with my own content, but in some cases, I just don't need or want some of those elements.</p>",
        "id": 228432919,
        "sender_full_name": "Joe Paquette",
        "timestamp": 1614700364
    },
    {
        "content": "<p>That is an excellent question, <span class=\"user-mention\" data-user-id=\"211704\">@Joe Paquette</span>.  I've reproduced the situation locally in order to ensure I understand it.  From what I can see, SUSHI properly creates the sliced <code>identifier</code> and the differential contains <em>only</em> the <code>example</code> you provided in the FSH.  So that is good.</p>\n<p>But... when the IG Publisher builds the snapshot for the slice, it \"inherits\" the US Core <code>example</code> from the base <code>identifier</code> element and <em>appends</em> your <code>example</code> (from the <code>mrn</code> slice element in the differential) to it.  So, the IG Publisher interprets an <code>example</code> array in a slice as being <em>additive</em> to the example array in the base (sliced) element.</p>\n<p>I think this actually leads to three relevant questions:</p>\n<ol>\n<li>\n<p>Is it proper and expected behavior for the IG Publisher to copy examples from a sliced element to each of its slices?  I would propose that it is <em>not</em> proper because there is no guarantee that an example in a sliced element conforms to every defined slice of it. <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>? <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>?  Would you agree?</p>\n</li>\n<li>\n<p>Is there a way in <code>StructureDefinition.differential.element</code> to say \"delete this property\"?  Omission of a property in a differential element indicates \"no change\" (i.e., keep the property the same).  Can you simply set it to <code>null</code> to effectively <em>delete</em> it from the snapshot (e.g. <code>\"example\": null</code>)?  Is that the proper approach?</p>\n</li>\n<li>\n<p>Is there a way in FHIR Shorthand to delete a property (i.e., the corresponding FSH for whatever the solution is in 2 above)?  Currently there is not, but it actually depends on the answer to # 2 above.</p>\n</li>\n</ol>",
        "id": 228503020,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1614726172
    },
    {
        "content": "<ol>\n<li>It is proper.  In the snapshot for a slice, it inherits everything from the slicing base, plus changes from the slice differential.  (And the slicing base inherits from the ancestor models.)  It might be noisy, but it's correct.</li>\n<li>There isn't right now, but we could possibly look at a new extension we could put in a differential that allows the removal of certain things.  We'd need to limit it those that are truly safe to remove.  Comments, aliases, mappings, rationale, examples are fair game.  Something like description or binding would not be (though maybe we could do that for example and preferred bindings?)</li>\n<li>FSH could certainly come up with a light-weight way of invoking the extension if we define one.</li>\n</ol>\n<p>Next step would be for someone to write up a change proposal to define the extension I guess and then FHIR-I can take it up.  We'd have to evaluate whether that's a kosher thing from a backward compability/normative perspective, but given that the elements we'd be looking at suppressing are not things that would impact validation or meaning, I think its ok.</p>",
        "id": 228508108,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1614728845
    },
    {
        "content": "<p>Thanks, <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>.  Regarding #1 (properness) -- there is still some gray area as it pertains to arrays in differentials.  Sometimes an array in a differential is meant to <em>fully replace</em> the original array in the snapshot (as in <code>ElementDefinition.type</code>), but sometimes it is meant to be <em>additive</em> (as in <code>ElementDefinition.constraint</code>). So it seems to me it is fair to question how the <code>example</code> array should operate -- should it be a replacement or an appendix?</p>\n<p>Even if the spec is clear that differential <code>example</code> entries should be appended to the inherited array, I guess I question if that is the <em>right</em> thing to do.  For example, does it make sense for a slice element representing a MRN (with a specific system) to have an example of a SSN (with a different system) -- just because the slicing base had that example?  I don't think so.  In my opinion, having a SSN example on a MRN element violates the definition of <code>example</code>:</p>\n<blockquote>\n<p>A sample value for this element demonstrating the type of information that would typically be found in the element.</p>\n</blockquote>\n<p>So, I guess I'm changing my question from \"is it proper?\" (for which the answer is apparently \"yes\") to \"<em>should</em> it be proper?\" (which I would suggest the answer is \"no\"). I think we need to do a better job defining the rules for how differentials work anyway (per a different thread) -- so do you think this is something that could be clarified to work in a more semantically correct way?</p>",
        "id": 228613574,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1614786234
    },
    {
        "content": "<p>ElementDefinition.constraint is a sparse override.  If you were to specify the same constraint key, then it would replace the parent.  If you specify something with a new key, it would add.  Constraints can't ever be removed, so \"replace\" for the whole collection is nonsensical.  On the other hand, examples and aliases can absolutely be removed, so replacement makes sense.  I accept that documentation should be clearer around expected behavior of each element in differential.  It sounds like we need to do two things:</p>\n<ul>\n<li>are differential values replacements, supplements, or 'matched' updates + supplements?</li>\n<li>when doing 'matched' updates, are the updates 'sparse' (only include child elements that change + the key) or 'complete' (any child elements not included in the 'update' differential element are considered removed)</li>\n</ul>\n<p>Care to submit a change request?</p>",
        "id": 228618528,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1614787807
    },
    {
        "content": "<p>Sure thing.  Thanks, Lloyd!</p>",
        "id": 228629467,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1614791567
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span>  <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  Thanks! Very educational for me! I agree completely that the list of \"removal\" candidates in a slice is small. From my perspective, the following ElementDefinition attributes are likely candidates:</p>\n<ul>\n<li>comment</li>\n<li>requirements</li>\n<li>alias</li>\n<li>example<br>\nThere could/might be others, but I leave that to those who know a lot more than I do!</li>\n</ul>\n<p>Thanks again!</p>",
        "id": 228676212,
        "sender_full_name": "Joe Paquette",
        "timestamp": 1614808807
    },
    {
        "content": "<p>OK.  I have created two change requests to cover these topics.</p>",
        "id": 228680323,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1614810530
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"372944\">@Firely Bot</span> issue show <a href=\"http://jira.hl7.org/browse/FHIR-31405\">FHIR-31405</a></p>",
        "id": 228680410,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1614810576
    },
    {
        "content": "<p><strong><a href=\"https://jira.hl7.org/browse/FHIR-31405\">FHIR-31405 Clarify expected behavior of ElementDefinition properties in differential</a></strong><br>\nStatus: <strong>Submitted</strong>, Type: <strong>Change Request</strong></p>",
        "id": 228680434,
        "sender_full_name": "Firely Bot",
        "timestamp": 1614810586
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"372944\">@Firely Bot</span> issue show <a href=\"http://jira.hl7.org/browse/FHIR-31406\">FHIR-31406</a></p>",
        "id": 228680462,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1614810602
    },
    {
        "content": "<p><strong><a href=\"https://jira.hl7.org/browse/FHIR-31406\">FHIR-31406 Support \"deleting\" unwanted inherited properties in profiles</a></strong><br>\nStatus: <strong>Submitted</strong>, Type: <strong>Change Request</strong></p>",
        "id": 228680496,
        "sender_full_name": "Firely Bot",
        "timestamp": 1614810605
    }
]