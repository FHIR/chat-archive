[
    {
        "content": "<p>Is there an example of how to define a FSH instance with contained resources?</p>",
        "id": 217698306,
        "sender_full_name": "John Moehrke",
        "timestamp": 1606174923
    },
    {
        "content": "<p>We call this capability \"inlined\" instances.  There is an example or two in the spec, but not specific to how it is used with contained.  So here is one:</p>\n<div class=\"codehilite\"><pre><span></span><code>Instance: EveAnyperson\nInstanceOf: Patient\nUsage: #inline // #inline means this instance should not be exported as a separate example\n* name.given[0] = &quot;Eve&quot;\n* name.family = &quot;Anyperson&quot;\n\nInstance: EvesCondition\nInstanceOf: Condition\nUsage: #example\nDescription: &quot;An example that uses contained&quot;\n* contained[0] = EveAnyperson // this inlines EveAnyperson definition here\n* code = http://foo.org#bar\n* subject = Reference(EveAnyperson) // this automatically creates the relative reference correctly\n</code></pre></div>\n<p>That produces:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"nt\">\"resourceType\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Condition\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"EvesCondition\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"contained\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"resourceType\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Patient\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"EveAnyperson\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">\"given\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"s2\">\"Eve\"</span>\n          <span class=\"p\">],</span>\n          <span class=\"nt\">\"family\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Anyperson\"</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"coding\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bar\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://foo.org\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"subject\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"reference\"</span><span class=\"p\">:</span> <span class=\"s2\">\"#EveAnyperson\"</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>\n</code></pre></div>",
        "id": 217701268,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1606177313
    },
    {
        "content": "<p>thanks. Would be good to have a sentence in the shorthand spec that states that inline means contained... inline is a good word, but not when one is thinking they need to figure out how to do a contained resource.</p>",
        "id": 217748620,
        "sender_full_name": "John Moehrke",
        "timestamp": 1606222212
    },
    {
        "content": "<p>I now see a sentence, but it is a sentence in the middle of a paragraph.</p>",
        "id": 217748862,
        "sender_full_name": "John Moehrke",
        "timestamp": 1606222363
    },
    {
        "content": "<p>An example in the docs would be very helpful</p>",
        "id": 217749943,
        "sender_full_name": "David Pyke",
        "timestamp": 1606222957
    },
    {
        "content": "<p>or just link the examples already in the spec... given that DrDavidAnydoc is defined as #inline... using it somewhere would show how to use it.</p>",
        "id": 217754536,
        "sender_full_name": "John Moehrke",
        "timestamp": 1606225304
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span> -- John and David suggest that we provide clarification and more complete examples in the spec for using <code>#inline</code> instances with <code>contained</code>.</p>",
        "id": 217808839,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1606249476
    },
    {
        "content": "<p>Good suggestion. I will add an example of this sort. It will appear on the continuous integration version of the docs</p>",
        "id": 217898082,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1606317782
    },
    {
        "content": "<p>Thanks John, Chris and Mark, was just looking for this!</p>",
        "id": 217902707,
        "sender_full_name": "Petter Wolff",
        "timestamp": 1606319895
    },
    {
        "content": "<p>Inline seems to work nicely with standard resources, but how do you do a contained ValueSet? I can't specify usage, can I?</p>\n<p>My use case is that I have a questionnaire. I want question Q.n to be: \"select all values that apply or other\", and Q.n.1 to be a text field for the other text, enabled only when \"other\" is selected from the first question. When the response is filled out, I don't want \"other\" to be an accepted value, so I don't want to \"publicly\" define the valueset to contain other, I'd like a contained valueset within the questionnaire defined as standard valueset + \"other\".</p>",
        "id": 218040808,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1606427508
    },
    {
        "content": "<p>So... you want to use the FSH syntax to create a ValueSet that includes \"other\", but you want that ValueSet <em>only</em> to be used as a contained resource in a Questionnaire, and <em>not</em> to be published as an official ValueSet of the IG?  Do I have that right?  As you noted, you can't mark a FSH ValueSet as inline, so you'd probably need to define it using the <code>Instance:</code> syntax instead (it would be an <code>InstanceOf: ValueSet</code>.  In truth, <code>ValueSet</code>s aren't terribly complicated, so it might not be too bad?</p>",
        "id": 218055906,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1606450966
    },
    {
        "content": "<p>Yes, that was what I was trying to do, and how I was thinking I’d have to do it.</p>",
        "id": 218055952,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1606451071
    },
    {
        "content": "<p>Actually, there is another thing you could try -- if you're letting SUSHI generate your IG JSON.  There is a little known feature in the config to have SUSHI <em>omit</em> a FSH resource from the IG.  I nearly forgot about it myself.  Look at the <a href=\"https://fshschool.org/docs/sushi/configuration/\">SUSHI Configuration</a> documentation and search the page for \"omit\".  You'll find info for how to do this.  But basically, in your <code>sushi-config.yaml</code>, you'll want to add something like this:</p>\n<div class=\"codehilite\" data-code-language=\"YAML\"><pre><span></span><code><span class=\"nt\">resources</span><span class=\"p\">:</span>\n  <span class=\"nt\">ValueSet/id-of-vs-to-omit</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">omit</span>\n</code></pre></div>",
        "id": 218056028,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1606451199
    },
    {
        "content": "<p>So, put it in Questionnaire.contained, but omit it from being generated as an independent resource? Hmm, sounds interesting.</p>",
        "id": 218056098,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1606451317
    },
    {
        "content": "<p>Yeah.  I've never tried this exact use case, but I think that, in theory, it should work.  The only thing I can't remember for sure is if it</p>\n<ul>\n<li>still generates the omitted file but just doesn't put it in the IG JSON, or</li>\n<li>doesn't generate the file at all</li>\n</ul>\n<p>I'd check the code, but I'm not even supposed to be working right now. ;-)</p>",
        "id": 218056176,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1606451463
    },
    {
        "content": "<p>I can check it out tomorrow too, don’t bother—enjoy your holiday.</p>",
        "id": 218056195,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1606451505
    },
    {
        "content": "<p>Alright, you too (that is, if you're U.S.-based).  Have a great rest of your day/night!</p>",
        "id": 218056243,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1606451558
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span>, over the weekend, I tried creating just a regular FSH ValueSet, containing it, and omitting the resource. This doesn't seem to work. I'm going to have to look at it again in the next day or two to see if I can come up with a solution.</p>",
        "id": 218489882,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1606860858
    },
    {
        "content": "<p>I am struggling with understanding any possible use-case for a contained valueSet... What is wrong with an IG defined valueSet?</p>",
        "id": 218490372,
        "sender_full_name": "John Moehrke",
        "timestamp": 1606861116
    },
    {
        "content": "<p>I have a published Flavours value set with values Vanilla, Chocolate, Strawberry. I want a questionnaire with:</p>\n<blockquote>\n<p>What is your favourite ice cream flavour:\n* Vanilla\n* Chocolate\n* Strawberry\n* Other<br>\nIf Other, please specify: [                 ]<br>\nThe response goes into a codeableConcept.</p>\n</blockquote>\n<p>I don't want to hard-code 4 answerOption, I'd like to use answerValueSet. But I'd also prefer not to have \"Other\" as a published value in the ValueSet. So, my plan is to create a contained ValueSet with all of the Flavours plus \"Other\" that I can reference from within the Questionnaire, but not use anywhere else.</p>\n<p>(I'm open to a better approach. This is tied to the fact that the Questionnaire \"open-choice\" question type doesn't actually have the \"other text\", only  Vanilla, Chocolate, Strawberry [   ], which is a poor UI in my mind. Maybe <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> has a better idea.)</p>",
        "id": 218491425,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1606861724
    },
    {
        "content": "<p>Your approach seems viable to me</p>",
        "id": 218492587,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1606862479
    },
    {
        "content": "<p>Great -- thanks everyone!</p>",
        "id": 218492889,
        "sender_full_name": "John Keyes",
        "timestamp": 1606862697
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> </p>\n<p>Ideally, it would be nice to not have to do this, but instead to have an element/extension for open-choice questions to be able to specify the \"other\" text.</p>",
        "id": 218493117,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1606862859
    },
    {
        "content": "<p>You can submit a change request if you wish :)</p>",
        "id": 218494587,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1606863834
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span> -- after you look at it again, if it's still not working, let us know some more details about _how_ it's not working.  If it's a bug in SUSHI, we'd like to know!</p>",
        "id": 218494927,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1606863994
    },
    {
        "content": "<p>if the valueset is contained in the questionnaire, then it is effectively static values.... distinction without a difference.... I am unclear as to the down side of an IG based valueset.</p>",
        "id": 218502161,
        "sender_full_name": "John Moehrke",
        "timestamp": 1606869657
    },
    {
        "content": "<p>Is it static? even if it is build using compose?</p>",
        "id": 218502214,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1606869720
    },
    {
        "content": "<p>The contained value set is important a non-contained value set - so it's not static.</p>",
        "id": 218508147,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1606875575
    },
    {
        "content": "<p>If this is a common pattern, I think I'd like to see it specified in a different way.  E.g., an extension on the question to enable an <code>Other</code> (or specified text value prompt), show a text field to input the data, and (I assume) stuff the text into a <code>CodeableConcept.text</code> field.</p>\n<p>Creating/maintaining a separate custom ValueSet for every question with this behavior feels error-prone.</p>",
        "id": 218576825,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1606924713
    },
    {
        "content": "<p>Hmm, so Questionnaire.item.answerValueSet needs a canonical url to the value set. What does a canonical url for a contained resource look like? Do I need to specify ValueSet.url, or is it something inherited from the enclosing Questionnaire?</p>",
        "id": 218773957,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1607041562
    },
    {
        "content": "<p>Nevermind -- there is an example in the spec (<a href=\"https://www.hl7.org/fhir/references.html#canonical-fragments\">https://www.hl7.org/fhir/references.html#canonical-fragments</a>) of exactly this issue.</p>",
        "id": 218774920,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1607042404
    },
    {
        "content": "<p>(Relevant to FSH, there doesn't appear to be an automated way to reference the contained resource as a canonical fragment. I have to explicitly put in <code>#my-instance-name</code>.)</p>",
        "id": 218775121,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1607042568
    },
    {
        "content": "<p>Thanks for letting us know, <span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span>.  I've logged a bug: <a href=\"https://github.com/FHIR/sushi/issues/688\">SUSHI #688</a></p>",
        "id": 218832756,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1607088879
    },
    {
        "content": "<p>I also needed to contain a valueset in a questionnaire, though for a different reason - the rendering tool I'm looking at only supports valueset inclusion this way. This doesn't mean that the valueset should be published separately in the IG, I'd like that to be as-is.</p>\n<p>The challenge with doing this out of the box is that you can't point to an instance of a valueset in the contained field, it needs to be an instance of a non-terminology resource. Trying to represent the valueset as an instance instead, like Chris suggested earlier, raised quite a few errors and looked a bit like a rabbithole - due to time pressure I decided not to go that way, but thought I'd raise the usecase here just so we're across it.</p>",
        "id": 263420965,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1638443008
    },
    {
        "content": "<p>I think this conversation took a few turns (ending in discussion about canonicals) and perhaps we lost sight of one of the original issues -- which was containing a non-instance definition.  So <span class=\"user-mention\" data-user-id=\"191363\">@Vadim Peretokin</span> -- are you saying that if you define a value set (using <code>ValueSet:</code>), that you can't assign it as a contained resource in something else?  I just want to be sure I understand the issue.</p>",
        "id": 263512688,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1638486485
    },
    {
        "content": "<p>OK.  I see now.  I was able to reproduce.  What's interesting is that we <em>do</em> support this when you're assigning a VS to <code>^contained</code> in a profile -- but we <em>don't</em> when assigning it to <code>contained</code> on an instance.  This seems like an oversight to me and hopefully something that is easy to remedy.  I've reproduced it here: <a href=\"https://fshschool.org/FSHOnline/#/share/3rLqOJ5\">https://fshschool.org/FSHOnline/#/share/3rLqOJ5</a></p>\n<p>I've logged it as <a href=\"https://github.com/FHIR/sushi/issues/971\">SUSHI#971</a></p>",
        "id": 263513583,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1638487033
    },
    {
        "content": "<p>That's exactly it. Thanks, <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span></p>",
        "id": 263551819,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1638522578
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191363\">@Vadim Peretokin</span> -- this has been fixed in <a href=\"#narrow/stream/215610-shorthand/topic/SUSHI.202.2E2.2E6/near/267013186\">SUSHI 2.2.6</a>.</p>",
        "id": 267013392,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1641430019
    }
]