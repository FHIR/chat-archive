[
    {
        "content": "<p>Any thoughts about when sushi will implement instance generation - per <a href=\"https://github.com/HL7/fhir-shorthand/wiki/3.7-Instances\" target=\"_blank\" title=\"https://github.com/HL7/fhir-shorthand/wiki/3.7-Instances\">https://github.com/HL7/fhir-shorthand/wiki/3.7-Instances</a></p>",
        "id": 183586873,
        "sender_full_name": "David Hay",
        "timestamp": 1576527907
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191321\">@David Hay</span> -- we're currently working on that.  We're <em>hoping</em> to have something by the end of the week.  It will not be 100% complete, in that it won't support the shortcut for extensions (e.g., you'll have to say <code>extension[my-extension].valueBoolean = true</code> instead of just <code>my-extension.valueBoolean = true</code>).  It also won't automatically add fixed values from parent structure definitions (but it will add fixed values from parent FSH definitions).</p>",
        "id": 183589714,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1576529859
    },
    {
        "content": "<p>Oh cool! Any resource type?</p>",
        "id": 183589828,
        "sender_full_name": "David Hay",
        "timestamp": 1576529925
    },
    {
        "content": "<p>Yes, as long as it is a valid R4 resource, you should be able to create an instance of it.</p>",
        "id": 183590380,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1576530302
    },
    {
        "content": "<p>I look forward to the release! (part of my interest is in using this facility as a 'back end' when generating instances in the clinFHIR Graph builder - I'm having fun getting it to create complex resources, so this might help...)</p>",
        "id": 183590542,
        "sender_full_name": "David Hay",
        "timestamp": 1576530429
    },
    {
        "content": "<p>Great! Once it is released, we welcome your feedback!  As you know, the FHIR Shorthand syntax is still very new -- as is any tooling around it -- so we'd be glad to have you participate in defining how it all should work!</p>",
        "id": 183590888,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1576530543
    },
    {
        "content": "<p>Will do :) . Will also be thinking about 'on line' execution of this could work - so that I can execute from a browser...</p>",
        "id": 183591136,
        "sender_full_name": "David Hay",
        "timestamp": 1576530715
    },
    {
        "content": "<p>I'm going to spend some time with Shorthand next week... but I have a number of areas where I think that the decisions are problematic.  I</p>",
        "id": 183744081,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576670879
    },
    {
        "content": "<p>I'm particularly concerned about documentation</p>",
        "id": 183744127,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576670894
    },
    {
        "content": "<p>What kind of documentation concerns, if you don't mind me asking?</p>",
        "id": 183761565,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1576684021
    },
    {
        "content": "<p>a good implementation guide has ample documentation on the elements. None of your examples have much documentation at all. Instead they're focused on readability... but that seems like a wrong focus to me - it needs to be readable in actual use, not a falsely simplified view. </p>\n<p>I do not find the ^short documentation at all pleasing, but what happens to as the documentation becomes more intrusive? And lots of markdown.... and translations, too, which will be a big focus next year.</p>",
        "id": 183780868,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576696559
    },
    {
        "content": "<p>It's a work in progress, and open to examples, suggestions, and contributions.</p>",
        "id": 183797926,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1576708922
    },
    {
        "content": "<p>well, my first suggestion is: provide more documentation as part of the examples</p>",
        "id": 183798377,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576709256
    },
    {
        "content": "<p>I don't find the way must-support works very nice syntactically. Listing all the fields, and then saying MS at the end.... it feels very post-fix-y</p>",
        "id": 183798438,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576709296
    },
    {
        "content": "<p>there's not a way to put that at the start:</p>\n<ul>\n<li>MS [list]</li>\n</ul>\n<p>?</p>",
        "id": 183798462,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576709323
    },
    {
        "content": "<p>Currently, every \"rule\" in FSH starts with a path -- so in that way, there is consistency no matter what you are doing.  Part of the inspiration came from trying to draw from a familiar view -- the snapshot view, which lists path all the way to the left, then has flags, card, types to the right of the path.</p>",
        "id": 183804994,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1576715417
    },
    {
        "content": "<p>well, I follow that, but it only has one path. So... I'm not sure that's the right driver for the must-support way of doing things. The ideal should be the most natural way of expressing things for the author, right?</p>",
        "id": 183805063,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576715507
    },
    {
        "content": "<p>As for the flags, we originally had one rule per line, e.g.:</p>\n<div class=\"codehilite\"><pre><span></span>* foo MS\n* bar MS\n* baz MS\n</pre></div>\n\n\n<p>but after trying to mirror existing profiles that had tons of MS, we realized that approach was cumbersome, hence the multiple paths.</p>",
        "id": 183805125,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1576715544
    },
    {
        "content": "<p>And yes -- the ideal should be what's most natural for the author.  So... I'm not arguing that our current approach is \"right\" -- I'm just trying to provide the background for how we got there. ;-)</p>",
        "id": 183805169,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1576715600
    },
    {
        "content": "<p>So... I think this is one of those things where we have to figure out if overall consistency (path always on the left) is what's easiest for the author, or if optimizing expressibility individually for every individual rule is what's best -- even if it means less consistency.  Or something between.</p>",
        "id": 183805312,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1576715755
    },
    {
        "content": "<p>right. there's a clear rationale for doing something different in the case of multiple paths  (or at least treating the presence of multiple paths as a rationale for having a different syntax if we want)</p>",
        "id": 183805655,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576716138
    },
    {
        "content": "<p>are there other cases for multiple paths?</p>",
        "id": 183805675,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576716166
    },
    {
        "content": "<p>So far I think flags are the only multi-path constraint, but we were thinking maybe cardinality too.  After Mark wrote up a profile that zeroed out a bunch of elements, we wondered if maybe it would make sense as a group too.  Still up in the air (glad to hear your opinion on it).  And yes, I guess it does make sense that the differentness of multi-path constraints could justify a different approach.  Definitely something to consider.  Is your concern that when there is a long list, the flag at the end kind of gets lost in the noise?</p>",
        "id": 183809975,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1576721516
    },
    {
        "content": "<p>yeah pretty much. I'm seeing all these paths... MS is lost in the end...</p>",
        "id": 183810978,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576723174
    },
    {
        "content": "<p>I guess probition could be the same - mark all as 0..0</p>",
        "id": 183810989,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576723193
    },
    {
        "content": "<p>Would it be a crazy idea to put all the documentation in a separate file? Perhaps same name with a different extension. Then - have header and  path based markers for the different documentation supported...</p>",
        "id": 183811409,
        "sender_full_name": "David Hay",
        "timestamp": 1576723846
    },
    {
        "content": "<p>it has real benefits but a big down side - how the linking is done</p>",
        "id": 183811561,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576724072
    },
    {
        "content": "<p>MS can be set to true implicitly by default?!</p>",
        "id": 183819336,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1576735560
    },
    {
        "content": "<p>if element is in a profile,  doesn't it mean MS?</p>",
        "id": 183819398,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1576735664
    },
    {
        "content": "<p>not necessarily. You might make constraints etc on an element that only some implementers will choose to support</p>",
        "id": 183820064,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576736804
    },
    {
        "content": "<p>At least looking into us-core it is 20/80?</p>",
        "id": 183853596,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1576768070
    },
    {
        "content": "<blockquote>\n<p>Would it be a crazy idea to put all the documentation in a separate file?</p>\n</blockquote>\n<p>I don't think that would be crazy, and in fact, we considered that as an approach for internationalization as well.  This would allow you to have \"translation\" files for each language you want to support.  If FSH did support something like this, I expect that maybe it should allow the author to choose whether or not they want their <em>primary</em> language descriptions inline w/ the constraints or if they want them outboarded to a separate file (or a mix -- such as <code>short</code>s with the constraints but <code>definitions</code> in a separate file).</p>",
        "id": 183861738,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1576773043
    },
    {
        "content": "<p>Documentation = FSH documentation vs. class (profile, element, extension, example) documentation. Just want to make sure each stays in separate swim lane (pun intended).  Since _class_ documentation and localization is an area of concern, I think we should determine the grammar sooner rather than later. Let's flesh this out on the wiki.</p>",
        "id": 183937454,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1576850511
    },
    {
        "content": "<p>See if you like this: <a href=\"https://github.com/HL7/fhir-shorthand/wiki/2.6-Localization\" target=\"_blank\" title=\"https://github.com/HL7/fhir-shorthand/wiki/2.6-Localization\">https://github.com/HL7/fhir-shorthand/wiki/2.6-Localization</a></p>",
        "id": 183941945,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1576853684
    },
    {
        "content": "<p>Could the external documentation be markdown? And perhaps a separate file for each language (with a convention for the name perhaps -<br>\n<strong> {profile name }_{language code} </strong>- eg  NZPatient_en-nz or NZPatient_en-au for our Australian brethren?  </p>\n<p>Within the file we  could either snaffle one of the existing delimiters for the path or use a made up one =  <strong>%%{path}^element</strong> - eg %%Patient.name^short</p>",
        "id": 183953094,
        "sender_full_name": "David Hay",
        "timestamp": 1576861223
    },
    {
        "content": "<p>Yes, you can use markdown. Thus far, we have tried to stay away from dictating either file names or file contents, under the theory that different users may have individual preferences. I am kind of tilting toward extending the path grammar to include a language for strings and markdowns. It's very modular that way.</p>",
        "id": 184231138,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1577307597
    },
    {
        "content": "<blockquote>\n<p>or file contents</p>\n</blockquote>\n<p>isn't fixing file contents the point?</p>",
        "id": 184231672,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1577308633
    },
    {
        "content": "<p>Yes, contents in terms of the language, sure. But we don't say what items go into which files. For example, you could put all profiles in one file, each profile in separate files, or mix examples with profiles, etc.</p>",
        "id": 184926836,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1578331700
    },
    {
        "content": "<p>Hi, <span class=\"user-mention\" data-user-id=\"340930\">@Fred Marsh</span> and I are trying to generate an example instance from the following FSH file, but our only getting our final result reference instead of all 4 in the generated file. Any idea why? </p>\n<div class=\"codehilite\"><pre><span></span><code>Alias: LNC = http://loinc.org\nInstance: eCCDiagnosticReport\nInstanceOf: http://hl7.org/fhir/us/core/StructureDefinition/us-core-diagnosticreport-note\nTitle: &quot;eCC Diagnostic Report&quot;\nDescription: &quot;Example eCC Diagnostic report using US Core&quot;\nUsage: #example\n* id = &quot;eCCDiagnosticReport0&quot;\n* identifier.use = #usual\n* identifier.type = http://terminology.hl7.org/CodeSystem/v2-0203#MR &quot;Medical Record Number&quot;\n* identifier.system = &quot;http://hospital.example.org&quot;\n* identifier.value = &quot;eCCDiagnosticReport0&quot;\n* status = #final\n* category = LNC#LP7839-6 &quot;Pathology&quot;\n* code = LNC#60568-3 &quot;Pathology Synoptic report&quot;\n* subject = Reference(q201)\n* effectiveDateTime = &quot;2021-01-14&quot;\n* performer = Reference(pathpract1)\n* result = Reference(Adrenal.Bx.Res.129_3.002.011.RC1_sdcFDF1.FormInstanceVersionURI.2157)\n* result = Reference(Adrenal.Bx.Res.129_3.002.011.RC1_sdcFDF.f96d3fea-62b3-47e9-8443-f199c2f946f0.ver1.49275.100004300)\n* result = Reference(Adrenal.Bx.Res.129_3.002.011.RC1_sdcFDF1.FormInstanceVersionURI.43324)\n* result = Reference(Adrenal.Bx.Res.129_3.002.011.RC1_sdcFDF1.FormInstanceVersionURI.56271)\n</code></pre></div>\n<p>Generated file: </p>\n<div class=\"codehilite\"><pre><span></span><code>{\n  &quot;resourceType&quot;: &quot;DiagnosticReport&quot;,\n  &quot;id&quot;: &quot;eCCDiagnosticReport0&quot;,\n  &quot;meta&quot;: {\n    &quot;profile&quot;: [\n      &quot;http://hl7.org/fhir/us/core/StructureDefinition/us-core-diagnosticreport-note&quot;\n    ]\n  },\n  &quot;identifier&quot;: [\n    {\n      &quot;use&quot;: &quot;usual&quot;,\n      &quot;type&quot;: {\n        &quot;coding&quot;: [\n          {\n            &quot;code&quot;: &quot;MR&quot;,\n            &quot;system&quot;: &quot;http://terminology.hl7.org/CodeSystem/v2-0203&quot;,\n            &quot;display&quot;: &quot;Medical Record Number&quot;\n          }\n        ]\n      },\n      &quot;system&quot;: &quot;http://hospital.example.org&quot;,\n      &quot;value&quot;: &quot;eCCDiagnosticReport0&quot;\n    }\n  ],\n  &quot;status&quot;: &quot;final&quot;,\n  &quot;category&quot;: [\n    {\n      &quot;coding&quot;: [\n        {\n          &quot;code&quot;: &quot;LP7839-6&quot;,\n          &quot;system&quot;: &quot;http://loinc.org&quot;,\n          &quot;display&quot;: &quot;Pathology&quot;\n        }\n      ]\n    }\n  ],\n  &quot;code&quot;: {\n    &quot;coding&quot;: [\n      {\n        &quot;code&quot;: &quot;60568-3&quot;,\n        &quot;system&quot;: &quot;http://loinc.org&quot;,\n        &quot;display&quot;: &quot;Pathology Synoptic report&quot;\n      }\n    ]\n  },\n  &quot;subject&quot;: {\n    &quot;reference&quot;: &quot;q201&quot;\n  },\n  &quot;effectiveDateTime&quot;: &quot;2021-01-14&quot;,\n  &quot;performer&quot;: [\n    {\n      &quot;reference&quot;: &quot;pathpract1&quot;\n    }\n  ],\n  &quot;result&quot;: [\n    {\n      &quot;reference&quot;: &quot;Adrenal.Bx.Res.129_3.002.011.RC1_sdcFDF1.FormInstanceVersionURI.56271&quot;\n    }\n  ]\n}\n</code></pre></div>",
        "id": 222782686,
        "sender_full_name": "Alex Goel",
        "timestamp": 1610657758
    },
    {
        "content": "<p>We confirmed SUSHI is reading whatever * result is last</p>",
        "id": 222782833,
        "sender_full_name": "Alex Goel",
        "timestamp": 1610657828
    },
    {
        "content": "<p>you need to create an array result[0], result[1], etc.</p>",
        "id": 222783151,
        "sender_full_name": "David Pyke",
        "timestamp": 1610657975
    },
    {
        "content": "<p>or result[+], result[+], result[+], etc.  :p</p>",
        "id": 222784925,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1610658785
    },
    {
        "content": "<p>IF they upgraded :p</p>",
        "id": 222785060,
        "sender_full_name": "David Pyke",
        "timestamp": 1610658847
    },
    {
        "content": "<p>but who wouldn't upgrade when there's all these <em>features</em></p>",
        "id": 222785668,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1610659110
    },
    {
        "content": "<p>Thanks! That worked!</p>",
        "id": 222866312,
        "sender_full_name": "Alex Goel",
        "timestamp": 1610722063
    }
]