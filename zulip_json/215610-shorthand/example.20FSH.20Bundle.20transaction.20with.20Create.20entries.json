[
    {
        "content": "<p>I am struggling with the MHD provide transaction, which is a Bundle transaction with 1 or more create entries. I am sure I am just doing something stupid, so first ask for others examples of FSH specifications of Bundle transactions with creates.</p>",
        "id": 222582476,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610546313
    },
    {
        "content": "<p>I have one Bundle working. but another one keeps throwing the dreaded </p>\n<div class=\"codehilite\"><pre><span></span><code>error Cannot read property &#39;0&#39; of undefined\n</code></pre></div>",
        "id": 222612052,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610557334
    },
    {
        "content": "<p>I'm afraid that doesn't really give us enough to go on to really debug the issue.  The good news, however, is that we hope to release a new version of SUSHI with \"soft indexing\" <em>today</em> (tomorrow at latest) -- which should make working w/ Bundle instances a lot easier and less error prone.</p>",
        "id": 222636027,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1610567552
    },
    {
        "content": "<p>I wish I could give you more to go on.   I fully expect that it is my own fat-fingers that are to blame.. but I have tried and have had others look... many eyes might find the problem.  Here is the total FSH that causes failure</p>\n<div class=\"codehilite\"><pre><span></span><code>Instance:   ex-dummyProvideDocumentBundle\nInstanceOf: Bundle\nTitle:      &quot;Dummy Provide Document Bundle with Minimal metadata&quot;\nDescription: &quot;Example of a minimal Provide Document Bundle. &quot;\n* meta.security = http://terminology.hl7.org/CodeSystem/v3-ActReason#HTEST\n* type = #transaction\n* timestamp = 2020-11-24T23:50:50-05:00\n* entry[0].fullUrl = &quot;http://www.example.org/fhir/List/593cd04e-b696-45c1-bc32-39e55a340a48&quot;\n* entry[0].resource = ex-b-list\n* entry[0].request.url = &quot;List&quot;\n* entry[0].request.method = #POST\n* entry[1].fullUrl = &quot;http://www.example.org/fhir/DocumentReference/593cd04e-b696-45c1-bc32-39e55a340a47&quot;\n* entry[1].resource = ex-b-documentreference\n* entry[1].request.url = &quot;DocumentReference&quot;\n* entry[1].request.method = #POST\n\nInstance: ex-b-list\nInstanceOf: List\nTitle: &quot;Dummy List example&quot;\nDescription: &quot;Dummy List example for completeness sake. No actual use of this resource other than an example target&quot;\n* meta.security = http://terminology.hl7.org/CodeSystem/v3-ActReason#HTEST\n* status = #current\n* mode = #working\n* entry.item = Reference(ex-b-documentreference)\n\nInstance: ex-b-documentreference\nInstanceOf: DocumentReference\nTitle: &quot;Dummy DocumentReference example&quot;\nDescription: &quot;Dummy DocumentReference example for completeness sake. No actual use of this resource other than an example target&quot;\n* meta.security = http://terminology.hl7.org/CodeSystem/v3-ActReason#HTEST\n* status = #current\n* content.attachment.title = &quot;Hello World&quot;\n</code></pre></div>",
        "id": 222636416,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610567727
    },
    {
        "content": "<p>is there a problem with that I indicate the Bundle may contain 0..* DocumentReference?</p>",
        "id": 222649054,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610573698
    },
    {
        "content": "<p>is there a problem if I slice on #profile type and use FHIR core Resource as the profile?  Overall I have a need to allow unprofiled Binary and Patient, while also requiring specific profiles of List and DocumentReference</p>",
        "id": 222649338,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610573846
    },
    {
        "content": "<p>I have even a more simple one that fails.</p>\n<div class=\"codehilite\"><pre><span></span><code>Instance:   ex-patient2\nInstanceOf: Patient\nTitle:      &quot;Dummy Patient example&quot;\nDescription: &quot;Dummy patient example for completeness sake. No actual use of this resource other than an example target&quot;\n* meta.security = http://terminology.hl7.org/CodeSystem/v3-ActReason#HTEST\n\nInstance:   ex-dummyPatientBundle\nInstanceOf: Bundle\nTitle:      &quot;Dummy Patient feed&quot;\nDescription: &quot;Example of a patient feed transaction Bundle.&quot;\n* meta.security = http://terminology.hl7.org/CodeSystem/v3-ActReason#HTEST\n* type = #transaction\n* timestamp = 2020-11-24T23:50:50-05:00\n* entry[0].resource = ex-patient2\n* entry[0].fullUrl = &quot;http://www.example.org/fhir/Patient/593cd04e-b696-45c1-bc32-39e55a340a99&quot;\n* entry[0].request.url = &quot;Patient&quot;\n* entry[0].request.method = #POST\n</code></pre></div>",
        "id": 222650562,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610574489
    },
    {
        "content": "<p>surely someone can find where I did something stupid</p>",
        "id": 222650608,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610574516
    },
    {
        "content": "<p>it has nothing to do with the indexing because I removed the indexes and still get the error</p>",
        "id": 222651034,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1610574722
    },
    {
        "content": "<p>so... sushi bug? hope the new one comes along and has this fixed</p>",
        "id": 222651129,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610574766
    },
    {
        "content": "<p>yep, sushi bug.  if you remove the entry[0].resource line or remove the ex-patient2 * <a href=\"http://meta.security\">meta.security</a> line, it works.</p>",
        "id": 222651831,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1610575099
    },
    {
        "content": "<p>Hmmm... It has <em>something</em> to do with the <code>meta.security</code> assignment in the <code>ex-patient2</code> assignment.  If I comment out that line, all is well.  So, yes, a SUSHI bug.  Fixed in the next release?  Not sure.</p>",
        "id": 222651917,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1610575144
    },
    {
        "content": "<p>what??? hmm.</p>",
        "id": 222651972,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610575170
    },
    {
        "content": "<p>wow.. that is odd</p>",
        "id": 222652165,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610575224
    },
    {
        "content": "<p>meta tags can't be in contained resources, are you expecting every inline resource to be contained?</p>",
        "id": 222652193,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1610575234
    },
    {
        "content": "<p>bundle entry is not contained</p>",
        "id": 222652234,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610575247
    },
    {
        "content": "<p>well, it is inside, but not contained</p>",
        "id": 222652254,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610575255
    },
    {
        "content": "<p>ah... but that is a key to sushi bug root</p>",
        "id": 222652316,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610575273
    },
    {
        "content": "<p>It looks to me like there is probably some code in SUSHI that is assuming that if <code>meta</code> exists then <code>meta.profile</code> also exists -- which is obviously not the case.</p>",
        "id": 222652691,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1610575450
    },
    {
        "content": "<p>OK.  It's still broken in the SUSHI version we're about to release, but I suspect this may be a very simple fix.  I'll take a quick look to see if I can find the issue and fix it before we release.</p>",
        "id": 222652814,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1610575524
    },
    {
        "content": "<p>Yep.  Found it and fixed it.</p>",
        "id": 222653160,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1610575732
    },
    {
        "content": "<p>was it related to the <a href=\"http://meta.security\">meta.security</a>?</p>",
        "id": 222664710,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610582496
    },
    {
        "content": "<p>is the new sushi available?</p>",
        "id": 222664844,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610582581
    },
    {
        "content": "<p>note that resources that are assembled into a Bundle should be marked with \"Usage: #inline\" so that references within those resources are fixedup to the fullUrl in the Bundle... I did not know this. I did not see mention of this in the sushi documentation. I only understood #inline as for contained, I did  not understand it also for Bundle.</p>",
        "id": 222754301,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610646376
    },
    {
        "content": "<p>thanks again to <span class=\"user-mention\" data-user-id=\"237342\">@ryan moehrke</span>  -- of MoehrkeResearch</p>",
        "id": 222754342,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610646393
    },
    {
        "content": "<p>wait what?  will SUSHI auto-create the fullUrl if I set each resource to be Usage: #inline and then add it to the Bundle?  that would be great and useful if it did that.</p>",
        "id": 222756135,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1610647073
    },
    {
        "content": "<p>I am confirming right now... but it did stop the IG builder from crashing</p>",
        "id": 222756409,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610647177
    },
    {
        "content": "<p>nope, it didn't</p>",
        "id": 222756642,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610647257
    },
    {
        "content": "<p>but it did stop the IG build from crashing</p>",
        "id": 222756670,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610647266
    },
    {
        "content": "<p>so, <span class=\"user-mention\" data-user-id=\"192166\">@Jean Duteau</span> how do you handle this problem. I have many resources in the bundle that have interrelationships</p>",
        "id": 222756726,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610647292
    },
    {
        "content": "<p>if you look at my fhir-spl guide, I just put in references to the various example instances</p>\n<div class=\"codehilite\"><pre><span></span><code>Instance: NationalPharmaIndia\nInstanceOf: LabelerOrganization\nDescription: &quot;An example of a Labeler Organization.&quot;\n* id = &quot;a30accef-f437-4136-808c-9ed4ada5fcf8&quot;\n* identifier[DUNSNumber].value = &quot;999999999&quot;\n* identifier[NDCCode].value = &quot;55555&quot;\n* name = &quot;National Pharma of India Inc.&quot;\n* address.line = &quot;Plot 102 Village Ave&quot;\n* address.city = &quot;RangareddyDistrict&quot;\n* address.state = &quot;Telangana&quot;\n* address.postalCode = &quot;500002&quot;\n* address.country = &quot;IND&quot;\n* contact.name.text = &quot;Mr. John Doe_1&quot;\n* contact.telecom[Phone].value = &quot;+9-140-11112222;ext=3333&quot;\n* contact.telecom[Email].value = &quot;jdoe_1@npoiinc.net&quot;\n* contact.address.line = &quot;Plot 101 First Street&quot;\n* contact.address.city = &quot;RangareddyDistrict&quot;\n* contact.address.state = &quot;Telangana&quot;\n* contact.address.postalCode = &quot;500001&quot;\n* contact.address.country = &quot;IND&quot;\n\nInstance: NationalPharmaIndiaUSAgent\nInstanceOf: USAgentOrganization\nDescription: &quot;An example of a US Agent Organization.&quot;\n* identifier[DUNSNumber].value = &quot;888888888&quot;\n* name = &quot;National Pharma of India Inc. US Agent&quot;\n* telecom[Phone].value = &quot;+1-908-999-1212;ext=444&quot;\n* telecom[Email].value = &quot;jdoe_2@npoiinc.net&quot;\n\nInstance: NationalPharmaIndiaAffiliation\nInstanceOf: USAgentAffiliation\nDescription: &quot;An example of the linkage between a Labeler and a US Agent&quot;\n* organization = Reference(NationalPharmaIndia)\n* participatingOrganization = Reference(NationalPharmaIndiaUSAgent)\n\nInstance: NationalPharmaIndiaOperation\nInstanceOf: LabelerBusinessOperation\nDescription: &quot;An example of a Labeler&#39;s business operations.&quot;\n* providedBy = Reference(NationalPharmaIndia)\n* type = $NCI-T#C43360 &quot;manufacture&quot;\n* serviceProvisionCode = $NCI-T#C106643 &quot;Manufactures human prescription drug products&quot;\n\nInstance: NationalPharmaIndiaRequest\nInstanceOf: LabelerCodeRequestBundle\nDescription: &quot;An example of a Bundle containing a set of Labeler Code Request resources.&quot;\n* identifier.system = &quot;urn:ietf:rfc:3986&quot;\n* identifier.value = &quot;urn:uuid:50606941-3e5d-465c-b4e0-0f5a19eb41d4&quot;\n* timestamp = &quot;2002-08-11T01:01:01.111+06:00&quot;\n* entry[Labeler].resource = NationalPharmaIndia\n* entry[Labeler].fullUrl = &quot;http://example.org/a30accef-f437-4136-808c-9ed4ada5fcf8&quot;\n* entry[USAgent].resource = NationalPharmaIndiaUSAgent\n* entry[USAgent].fullUrl = &quot;http://example.org/NationalPharmaIndiaUSAgent&quot;\n* entry[USAgentAffiliation].resource = NationalPharmaIndiaAffiliation\n* entry[USAgentAffiliation].fullUrl = &quot;http://example.org/NationalPharmaIndiaAffiliation&quot;\n* entry[BusinessOperation].resource = NationalPharmaIndiaOperation\n* entry[BusinessOperation].fullUrl = &quot;http://example.org/NationalPharmaIndiaOperation&quot;\n</code></pre></div>",
        "id": 222757386,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1610647515
    },
    {
        "content": "<p>that gets turned into:  <a href=\"https://build.fhir.org/ig/HL7/fhir-spl/branches/main/Bundle-NationalPharmaIndiaRequest.json.html\">https://build.fhir.org/ig/HL7/fhir-spl/branches/main/Bundle-NationalPharmaIndiaRequest.json.html</a></p>",
        "id": 222757449,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1610647545
    },
    {
        "content": "<p>in my case my bundle is a transaction to CREATE the resources. so I need to use UUID... but I don't think that matters.</p>",
        "id": 222758152,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610647815
    },
    {
        "content": "<p>but, when I do essentially what you have, I get a NPE in the IG build</p>",
        "id": 222758185,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610647833
    },
    {
        "content": "<p>and isn't your example wrong? meaning the references to your Organization should be using the value of  fullUrl of that entry in the bundle?</p>",
        "id": 222759084,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610648217
    },
    {
        "content": "<p>i don't think so.  when I read the Resolving references in Bundles section (<a href=\"http://hl7.org/fhir/bundle.html#references\">http://hl7.org/fhir/bundle.html#references</a>), it says that the reference doesn't have to be an absolute reference , but it gets converted into a URL using the fullURL for that bundle entry</p>",
        "id": 222765036,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1610650663
    },
    {
        "content": "<p>If the reference is not an absolute reference, convert it to an absolute URL:<br>\nif the reference has the format [type]/[id], and<br>\nif the fullUrl for the bundle entry containing the resource is a RESTful one (see the RESTful URL regex)<br>\nextract the [root] from the fullUrl, and append the reference (type/id) to it<br>\nthen try to resolve within the bundle as for a RESTful URL reference.</p>",
        "id": 222765119,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1610650685
    },
    {
        "content": "<p>so in my case (a CREATE) i need to use urn:uuid in my fullUrl...    I thus had to covert all of my bundle destine instances to use the UUID as their name, and references to the urn:uuid: of that name. (#inline had no effect on the examples output). But this version makes it thru the IG builder without NPE.</p>\n<div class=\"codehilite\"><pre><span></span><code>Instance:   593cd04e-b696-45c1-bc32-39e55a340a44\nInstanceOf: IHE.MHD.Minimal.SubmissionSet\nTitle:      &quot;SubmissionSet for Minimal metadata in a bundle&quot;\nDescription: &quot;Example of a minimal submissionSet in List resource used in a bundle.&quot;\n//Usage: #inline\n* meta.security = http://terminology.hl7.org/CodeSystem/v3-ActReason#HTEST\n* identifier[0].system = &quot;urn:ietf:rfc:3986&quot;\n* identifier[0].value = &quot;urn:oid:1.2.129.6.58.92.88337.5&quot;\n* identifier[0].use = #official\n* identifier[1].system = &quot;http://example.org/documents&quot;\n* identifier[1].value = &quot;23425234-23470-5&quot;\n* identifier[1].use = #usual\n* status = #current\n* mode = #working\n* code = MHDlistTypes#submissionset\n* date = 2004-12-25T23:50:50-05:00\n* entry[0].item = Reference(urn:uuid:593cd04e-b696-45c1-bc32-39e55a340a45)\n* entry[1].item = Reference(urn:uuid:593cd04e-b696-45c1-bc32-39e55a340a46)\n* extension[sourceId].valueIdentifier.value = &quot;urn:oid:1.2.3.4&quot;\n\n\nInstance:   593cd04e-b696-45c1-bc32-39e55a340a46\nInstanceOf: IHE.MHD.Minimal.DocumentReference\nTitle:      &quot;DocumentReference for Minimal metadata&quot;\nDescription: &quot;Example of a minimal DocumentReference resource. This is very unlikely to be acceptable anywhere, but it is the minimum required.&quot;\n//Usage: #inline\n* meta.security = http://terminology.hl7.org/CodeSystem/v3-ActReason#HTEST\n* masterIdentifier.system = &quot;urn:ietf:rfc:3986&quot;\n* masterIdentifier.value = &quot;urn:oid:1.2.840.113556.1.8000.2554.53432.348.12973.17740.34205.4355.50220.62012&quot;\n* identifier.system = &quot;urn:ietf:rfc:3986&quot;\n* identifier.value = &quot;urn:uuid:7d5bb8ac-68ee-4926-85e7-b8aac8e1f09d&quot;\n* status = #current\n* content.attachment.contentType = #text/plain\n* content.attachment.url = &quot;http://example.com/nowhere.txt&quot;\n</code></pre></div>",
        "id": 222772214,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610653383
    },
    {
        "content": "<p>I would like to ask that sushi notice when a instance is being put into a Bundle and handle these fullUrl fixups for us. managing my examples with UUIDs is really not fun.</p>",
        "id": 222772696,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610653554
    },
    {
        "content": "<p>so.. here is my resulting bundle<br>\n<a href=\"http://build.fhir.org/ig/IHE/ITI.MHD/branches/master/Bundle-ex-minimalProvideDocumentBundle.json.html\">http://build.fhir.org/ig/IHE/ITI.MHD/branches/master/Bundle-ex-minimalProvideDocumentBundle.json.html</a><br>\ngiven this FSH input<br>\n<a href=\"https://github.com/IHE/ITI.MHD/blob/master/input/fsh/ex-ProvideBundles.fsh\">https://github.com/IHE/ITI.MHD/blob/master/input/fsh/ex-ProvideBundles.fsh</a></p>",
        "id": 222773694,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610653936
    },
    {
        "content": "<p>Yes, I'm struggling hard with a document Bundle right now. I ended up creating Aliases for both the UUID and the urn:uuid:UUID for each example and replaced all the IDs and references in the Bundle manually (because I wanted the individual examples to have \"proper\" URLs/IDs and only use UUIDs in the Bundle example.) </p>\n<ul>\n<li>entry[+].resource = CompositionExample</li>\n<li>entry[=].fullUrl = $COMPURL</li>\n<li>entry[=].resource.id = $COMPUUID</li>\n<li>entry[=].resource.subject.reference = $PATURL</li>\n<li>entry[=].resource.author.reference = $DEVURL</li>\n<li>entry[=].resource.section[0].entry[0].reference = $OBS1URL</li>\n<li>entry[=].resource.section[0].entry[1].reference = $OBS2URL</li>\n</ul>\n<p>But hell, this is painfull!</p>\n<p>What's also not helping is that you can't concat Aliases and do something like </p>\n<ul>\n<li>entry[=].fullUrl = urn:uuid:$MyUUID</li>\n</ul>\n<p>Does anyone have an idea how to make this smoother...?</p>",
        "id": 230837151,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1616061381
    },
    {
        "content": "<p>OK.  Let me restate the use case to ensure I understand.  You have Instances that you want to use as standalone examples <em>and</em> in example Bundles (e.g., <code>entry.resource</code>).  Given these instances:</p>\n<ul>\n<li>standalone example representations should have meaningful ids and standard reference URLs</li>\n<li>bundled representations should have UUID ids and urn:uuid reference URLs (so the bundle is self-contained)</li>\n</ul>\n<p>Do I have that right?  I think the difficulty here is that a truly efficient solution likely requires a Bundle-specific feature in FSH, but we try our best to keep FSH features/syntaxes more generalizable -- because if we get into too many resource-specific syntaxes, FSH becomes a lot harder to learn and master.  But... this specific issue truly is \"painful\" (as you stated), so it would be nice if we could figure <em>something</em> out.</p>",
        "id": 230859482,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1616072961
    },
    {
        "content": "<p>Yes, the additional challenge is, that all the Bundle.entry.fullUrls need to be populated.<br>\nI'm not sure if I'm the only one who would like the individual Resource examples to have \"standard\" URLs, and only use the uuids when everything comes together in the Bundle. I just feel that looking at an individual Resource with a uuid reference poiting nowhere would be weird...</p>",
        "id": 230860170,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1616073218
    },
    {
        "content": "<p>do aliases work the same way internally that ruleset parameters do? because I figured out that ^url = \"prefix{param}\" and Ruleset(abc) works<br>\n(vs ^url = \"prefix\" + {param} and Ruleset(\"abc\") or whatever else you might think to try)</p>",
        "id": 230879477,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1616080134
    },
    {
        "content": "<p>Aliases are a lot more rigid than parameters in RuleSets, partly because we don't have the nice <code>{</code> <code>}</code> mechanism w/ aliases to signal their use.  Part of the issue is that aliases are used in places that arbitrary tokens can also be valid (and passed through as-is).  With <code>$</code>-prefixed aliases, we know that if we run into a place where a URL is expected, and the first character is <code>$</code>, that must be an alias, because <code>$</code> isn't a valid first character for a URL.  But if the alias starts in the middle of a URL, it's harder to determine if that <em>should</em> be an alias or a literal <code>$</code> in the middle of the URL -- and if it is an alias in the middle, how do we know where the alias ends and the rest of the literal URL begins?  Anyway... that's why we only allow aliases as a full expression of a URL (instead of a partial one).</p>",
        "id": 230886210,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1616082191
    },
    {
        "content": "<p>My two asks in this area are:</p>\n<ul>\n<li>the ability to reference id and/or Canonical of arbitrary resources, not just the limited, special syntax ones that are currently supported</li>\n<li>being able to compose urls. I'd really like to be able to define a \"base\" url for my project and have all the Canonical urls hang off that.</li>\n</ul>",
        "id": 230901491,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1616086978
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191380\">Elliot Silver</span> <a href=\"#narrow/stream/215610-shorthand/topic/example.20FSH.20Bundle.20transaction.20with.20Create.20entries/near/230901491\">said</a>:</p>\n<blockquote>\n<p>My two asks in this area are:</p>\n<ul>\n<li>the ability to reference id and/or Canonical of arbitrary resources, not just the limited, special syntax ones that are currently supported</li>\n</ul>\n</blockquote>\n<p>The <code>Canonical(SomeResource)</code> mechanism <em>should</em> work for any arbitrary resource as long as its findable in the scope of the IG (which includes IG-defined resources, FHIR core resources, and dependency IG resources).  Here's a <a href=\"https://fshschool.org/FSHOnline/#/share/30Wnr3m\">FSH Online Snippet</a> that demonstrates that.  Or am I misunderstanding?</p>\n<p>As for <code>id</code>, we don't currently have a comparable feature to be able to say <code>Id(SomeResource)</code>.  Is that what you're looking for?</p>\n<blockquote>\n<ul>\n<li>being able to compose urls. I'd really like to be able to define a \"base\" url for my project and have all the Canonical urls hang off that.</li>\n</ul>\n</blockquote>\n<p>For most FSH definitions, the URL is automatically constructed based on the canonical URL of the IG.  Are you talking specifically about <code>Instance</code>s where you need to set the <code>url</code> explicitly?</p>",
        "id": 230906468,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1616088755
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191469\">Chris Moesel</span> <a href=\"#narrow/stream/215610-shorthand/topic/example.20FSH.20Bundle.20transaction.20with.20Create.20entries/near/230906468\">said</a>:</p>\n<blockquote>\n<p>The <code>Canonical(SomeResource)</code> mechanism <em>should</em> work for any arbitrary resource as long as its findable in the scope of the IG (which includes IG-defined resources, FHIR core resources, and dependency IG resources).  Here's a <a href=\"https://fshschool.org/FSHOnline/#/share/30Wnr3m\">FSH Online Snippet</a> that demonstrates that.  Or am I misunderstanding?</p>\n</blockquote>\n<p>Is that new? yes, line 6 is what I'm looking for.</p>\n<blockquote>\n<p>As for <code>id</code>, we don't currently have a comparable feature to be able to say <code>Id(SomeResource)</code>.  Is that what you're looking for?</p>\n</blockquote>\n<p>Yes, allowing you to wire up more complex examples, cross-referencing, etc.</p>\n<blockquote>\n<p>For most FSH definitions, the URL is automatically constructed based on the canonical URL of the IG.  Are you talking specifically about <code>Instance</code>s where you need to set the <code>url</code> explicitly?</p>\n</blockquote>\n<p>Yes, or constructing the URL of fragments (StructureDefinition elements and Questionnaire items).</p>",
        "id": 230908571,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1616089520
    },
    {
        "content": "<blockquote>\n<p>Is that new? yes, line 6 is what I'm looking for.</p>\n</blockquote>\n<p>Yup.  New in <a href=\"https://github.com/FHIR/sushi/releases/tag/v1.3.0\">SUSHI 1.3.0</a>, released about two weeks ago:</p>\n<blockquote>\n<p>Support targeting an <code>Instance</code> with the <code>Canonical</code> keyword (<a href=\"https://github.com/FHIR/sushi/issues/743\">#743</a>)</p>\n</blockquote>",
        "id": 230910499,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1616090217
    },
    {
        "content": "<p>OK.  I've just filed three issues related to these conversations:</p>\n<ul>\n<li><a href=\"https://github.com/FHIR/sushi/issues/781\">Consider new Id(...) mechanism to retrieve the id of a resource</a></li>\n<li><a href=\"https://github.com/FHIR/sushi/issues/782\">Investigate approaches to more flexible construction of URLs</a></li>\n<li><a href=\"https://github.com/FHIR/sushi/issues/783\">Investigate approaches to more natural (less frustrating) Bundle authoring</a></li>\n</ul>",
        "id": 230912233,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1616090808
    }
]