[
    {
        "content": "<p>Hi,</p>\n<p>I have tried to do slicing with shorthand. Here is the content of the .fsh file which I used for testing slicing:</p>\n<div class=\"codehilite\"><pre><span></span><code>Profile:        FSHTestObsDeeperSlicev1\nParent:         Observation\nId:             fhstestobsdeeperslicev1\nTitle:          &quot;FSHTestObsDeeperSlicev1&quot;\nDescription:    &quot;Test observation version 1, slicing deeper structure Observation.code.coding, done with Shorthand&quot;\n* ^status = #draft\n\n* code.coding ^slicing.discriminator.type = #value\n* code.coding ^slicing.discriminator.path = &quot;code&quot;\n* code.coding ^slicing.rules = #open\n\n* code.coding contains generalCode 1..1 and oralCode 0..1\n* code.coding[generalCode].code = #8310-5\n* code.coding[oralCode].code = #8331-1\n</code></pre></div>\n\n\n<p>I am trying to make generalCode and oralCode as fixedCode(s). But when I compile this with Sushi, I got StructureDefinition (SD) which shows that they are as patternCode(s). Am I doing something wrong in FSH grammar? The SD looks like this with those slices:</p>\n<div class=\"codehilite\"><pre><span></span><code>&quot;differential&quot;: {\n    &quot;element&quot;: [\n      {\n        &quot;id&quot;: &quot;Observation.code.coding&quot;,\n        &quot;path&quot;: &quot;Observation.code.coding&quot;,\n        &quot;slicing&quot;: {\n          &quot;discriminator&quot;: [\n            {\n              &quot;type&quot;: &quot;value&quot;,\n              &quot;path&quot;: &quot;code&quot;\n            }\n          ],\n          &quot;rules&quot;: &quot;open&quot;\n        },\n        &quot;min&quot;: 1\n      },\n      {\n        &quot;id&quot;: &quot;Observation.code.coding:generalCode&quot;,\n        &quot;path&quot;: &quot;Observation.code.coding&quot;,\n        &quot;sliceName&quot;: &quot;generalCode&quot;,\n        &quot;min&quot;: 1,\n        &quot;max&quot;: &quot;1&quot;\n      },\n      {\n        &quot;id&quot;: &quot;Observation.code.coding:generalCode.code&quot;,\n        &quot;path&quot;: &quot;Observation.code.coding.code&quot;,\n        &quot;min&quot;: 1,\n        &quot;patternCode&quot;: &quot;8310-5&quot;\n      },\n      {\n        &quot;id&quot;: &quot;Observation.code.coding:oralCode&quot;,\n        &quot;path&quot;: &quot;Observation.code.coding&quot;,\n        &quot;sliceName&quot;: &quot;oralCode&quot;,\n        &quot;min&quot;: 0,\n        &quot;max&quot;: &quot;1&quot;\n      },\n      {\n        &quot;id&quot;: &quot;Observation.code.coding:oralCode.code&quot;,\n        &quot;path&quot;: &quot;Observation.code.coding.code&quot;,\n        &quot;min&quot;: 1,\n        &quot;patternCode&quot;: &quot;8331-1&quot;\n      }\n    ]\n  }\n</code></pre></div>",
        "id": 207787264,
        "sender_full_name": "Mika Tuomainen",
        "timestamp": 1598210346
    },
    {
        "content": "<p>Yes, you need to add the \"(exactly)\" after your code.coding... = ... lines.  FSH assumes you want patterns by default so you have to tell it that you want an exact match.</p>",
        "id": 207788746,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1598212762
    },
    {
        "content": "<p>having said that, i think you actually want patternCode as that says that one of the codings must match this pattern but that others can be translations of that.  Which is generally what we as IG authors want.</p>",
        "id": 207788813,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1598212820
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"192166\">@Jean Duteau</span> ! \"(exactly)\" makes the trick I wanted. </p>\n<p>My example is just a testing case. I was trying to produce something like this: <a href=\"https://www.hl7.org/fhir/bodyheight.profile.json.html\">https://www.hl7.org/fhir/bodyheight.profile.json.html</a>, there \"Observation.code.coding:BodyHeightCode.code\" is fixedCode.</p>",
        "id": 207811911,
        "sender_full_name": "Mika Tuomainen",
        "timestamp": 1598251713
    }
]