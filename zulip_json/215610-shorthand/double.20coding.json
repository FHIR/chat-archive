[
    {
        "content": "<p>I have run across a problem with sushi. I say problem, you might say I am using the tool wrong.<br>\nGiven a Profile on Observation includes this constraint</p>\n<div class=\"codehilite\"><pre><span></span><code>* category 1..1\n* category = http://terminology.hl7.org/CodeSystem/observation-category#vital-signs\n</code></pre></div>\n<p>And an example using that Profile includes this</p>\n<div class=\"codehilite\"><pre><span></span><code>* category = http://terminology.hl7.org/CodeSystem/observation-category#vital-signs\n</code></pre></div>\n<p>When I run sushi<br>\nThen I get an example json object with</p>\n<div class=\"codehilite\"><pre><span></span><code>  &quot;category&quot; : [\n    {\n      &quot;coding&quot; : [\n        {\n          &quot;system&quot; : &quot;http://terminology.hl7.org/CodeSystem/observation-category&quot;,\n          &quot;code&quot; : &quot;vital-signs&quot;\n        }\n      ]\n    },\n    {\n      &quot;coding&quot; : [\n        {\n          &quot;system&quot; : &quot;http://terminology.hl7.org/CodeSystem/observation-category&quot;,\n          &quot;code&quot; : &quot;vital-signs&quot;\n        }\n      ]\n    }\n  ],\n</code></pre></div>",
        "id": 241544946,
        "sender_full_name": "John Moehrke",
        "timestamp": 1622817508
    },
    {
        "content": "<p>I get that I should not need to put the category in my examples, but it feels like the right thing to do for explicitness.  Why would sushi presume this -second- category should be automatically promoted to category[+]?</p>",
        "id": 241545548,
        "sender_full_name": "John Moehrke",
        "timestamp": 1622817781
    },
    {
        "content": "<p>I agree, that doesn't seem right.  In fact, I'm surprised, because I thought SUSHI did something different here.  We recently fixed a bug in some code tangentially related to this -- I might try this with our not-yet-released version to see if it is still an issue.</p>",
        "id": 241545808,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1622817883
    },
    {
        "content": "<p>Actually, when I run that with the latest released version of SUSHI (1.3.2) on FSH Online, I'm not seeing the duplicate category: <a href=\"https://fshschool.org/FSHOnline/#/share/3gfr23M\">https://fshschool.org/FSHOnline/#/share/3gfr23M</a></p>",
        "id": 241546341,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1622818103
    },
    {
        "content": "<p>scary... I just checked... whew.. I have fresh sushi...</p>",
        "id": 241547076,
        "sender_full_name": "John Moehrke",
        "timestamp": 1622818392
    },
    {
        "content": "<p>the profile in my above is also a profile off of core vitalsigns</p>\n<div class=\"codehilite\"><pre><span></span><code>Parent:         http://hl7.org/fhir/StructureDefinition/vitalsigns\n</code></pre></div>",
        "id": 241547306,
        "sender_full_name": "John Moehrke",
        "timestamp": 1622818467
    },
    {
        "content": "<p>Ah, yes.  That is the difference.</p>\n<p>I think this is because the parent profile fixes the category by slicing <code>code.coding</code> and then specifying a <code>coding</code> slice with the <code>system</code> and <code>code</code> each independently fixed to separate values.  Your profile, however, takes an entirely different approach by using a patternCodeableConcept at the <code>code</code> level to specify a single pattern to apply (that holds the coding system and code in it).</p>\n<p>Those two are basically trying to accomplish the same thing, but doing it in <em>very</em> different ways.  SUSHI knows how to handle both ways, but doesn't recognize them as equivalent -- so it applies the required slice and its child fixed values from the parent and <em>also</em> applies the pattern from your profile.  TBH, this would probably be fairly tricky to detect and resolve in a robust way.</p>\n<p>The intent of profiling is usually to describe what is <em>different</em> from the thing you are profiling.  In this case, I think you will be better off and cause less confusion for our tool (and probably others) if you don't double-define that fixed category in the profile.  If your approach to it was the same as the parent's approach to it, it might just work out -- but trouble comes in because your duplicated constraint is constraining using an entirely different mechanism than the parent.</p>",
        "id": 241551314,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1622820126
    },
    {
        "content": "<p>that is what I feared</p>",
        "id": 241551803,
        "sender_full_name": "John Moehrke",
        "timestamp": 1622820362
    },
    {
        "content": "<p>My profile is specifically mandating 1..1</p>",
        "id": 241551901,
        "sender_full_name": "John Moehrke",
        "timestamp": 1622820390
    },
    {
        "content": "<p>I can remove the second line mandating the code.. with precognition by human (not computable) that it is the same.</p>",
        "id": 241551994,
        "sender_full_name": "John Moehrke",
        "timestamp": 1622820437
    },
    {
        "content": "<p>so much for 'profiles are great because they are computable'</p>",
        "id": 241552010,
        "sender_full_name": "John Moehrke",
        "timestamp": 1622820450
    },
    {
        "content": "<p>this means my profiles need to be different pattern when they are based on core vitalsigns, vs when they are deviating for some business reason.</p>",
        "id": 241552234,
        "sender_full_name": "John Moehrke",
        "timestamp": 1622820545
    },
    {
        "content": "<p>I can confirm that removing that from my profile did fix the problem.</p>",
        "id": 241553296,
        "sender_full_name": "John Moehrke",
        "timestamp": 1622821004
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> <a href=\"#narrow/stream/215610-shorthand/topic/double.20coding/near/241552234\">said</a>:</p>\n<blockquote>\n<p>this means my profiles need to be different pattern when they are based on core vitalsigns, vs when they are deviating for some business reason.</p>\n</blockquote>\n<p>Well, by declaring another profile (outside of your control) as a parent, you are already introducing approaches that may not be consistent w/ your own approaches.  You can't remove the inherited slicing logic from the parent, so you're kind of stuck with it.  IMO, it's better to let it be than to layer on another constraint using a different approach that says the same thing.</p>\n<p>Your other option would be to declare your own vital-signs profile with similar constraints such that any instance that conforms to your profile also conforms to the official vital-signs profile (even though there is not a <em>formal</em> relationship). But creating duplicate profiles that are semantically the same is also generally discouraged... :-/</p>",
        "id": 241555059,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1622821767
    },
    {
        "content": "<p>agreed. and I understand why vitalsigns core is that way. They don't want to forbid other category codes in addtion to vitalsigns</p>",
        "id": 241555640,
        "sender_full_name": "John Moehrke",
        "timestamp": 1622822016
    },
    {
        "content": "<p>my profile simply needs to say 1..1... so, i have</p>",
        "id": 241555673,
        "sender_full_name": "John Moehrke",
        "timestamp": 1622822033
    },
    {
        "content": "<p>note that the other places where I did this... a few months ago.. I learned thru the build errors that it was a bad idea.. so those already had this line commented out with a reason for the comment. But clearly I am too old to remember this lesson, so I learned it again.</p>",
        "id": 241555843,
        "sender_full_name": "John Moehrke",
        "timestamp": 1622822102
    },
    {
        "content": "<p>I like to add counters to comments like that, so that I can see how many times it takes for me to actually learn it  =)</p>",
        "id": 241556047,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1622822195
    },
    {
        "content": "<p>it is 4 for me</p>",
        "id": 241557336,
        "sender_full_name": "John Moehrke",
        "timestamp": 1622822756
    },
    {
        "content": "<p>It is 4 for you... so far  :-P</p>",
        "id": 241557712,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1622822900
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> <a href=\"#narrow/stream/215610-shorthand/topic/double.20coding/near/241555640\">said</a>:</p>\n<blockquote>\n<p>agreed. and I understand why vitalsigns core is that way. They don't want to forbid other category codes in addtion to vitalsigns</p>\n</blockquote>\n<p>This is true of their approach, but it is also true of patterns.  If a pattern contains an array, it allows for other values in the array as well.  The pattern just indicates the minumum requirements for the array.  But I don't think patterns were used or understood much back when the vital-signs profiles were created.</p>",
        "id": 241558078,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1622823058
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> <a href=\"#narrow/stream/215610-shorthand/topic/double.20coding/near/241547076\">said</a>:</p>\n<blockquote>\n<p>scary... I just checked... whew.. I have fresh sushi...</p>\n</blockquote>\n<p>Thank goodness. That three-day old, mall sushi is scary.</p>",
        "id": 241558853,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1622823433
    },
    {
        "content": "<p>especially in the midwest... vs Vancouver.</p>",
        "id": 241561809,
        "sender_full_name": "John Moehrke",
        "timestamp": 1622824733
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191380\">Elliot Silver</span> <a href=\"#narrow/stream/215610-shorthand/topic/double.20coding/near/241558853\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> <a href=\"#narrow/stream/215610-shorthand/topic/double.20coding/near/241547076\">said</a>:</p>\n<blockquote>\n<p>scary... I just checked... whew.. I have fresh sushi...</p>\n</blockquote>\n<p>Thank goodness. That three-day old, mall sushi is scary.</p>\n</blockquote>\n<p>Yumm...stale dry rice with shrimp that has shrivelled up a bit.  That's really the most adventurous sushi!</p>",
        "id": 241563105,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1622825347
    },
    {
        "content": "<p>I avoid that by only buying from the gas station on the corner.  That's fresh every day or two.</p>",
        "id": 241563178,
        "sender_full_name": "David Pyke",
        "timestamp": 1622825388
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"192587\">David Pyke</span> <a href=\"#narrow/stream/215610-shorthand/topic/double.20coding/near/241563178\">said</a>:</p>\n<blockquote>\n<p>I avoid that by only buying from the gas station on the corner.  That's fresh every day or two.</p>\n</blockquote>\n<p>Sorry, no gas station sushi for me. If I'm looking to be killed by my sushi, I'm going with nothing less than fugu.</p>",
        "id": 241571349,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1622829174
    }
]