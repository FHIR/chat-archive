[
    {
        "content": "<p>Before opening an issue on Github, I'd just like to check whether this is intended behaviour. Suppose the slice name equals a resource type, like this: </p>\n<div class=\"codehilite\"><pre><span></span><code>* subject 1.. MS\n  * ^slicing.discriminator.type = #type\n  * ^slicing.discriminator.path = &quot;resolve()&quot;\n  * ^slicing.rules = #open\n* subject contains Patient 1..1 MS\n* subject[Patient] only Reference(Patient)\n</code></pre></div>\n<p>SUSHI will not actually generate a <code>type</code> element in the StructureDefinition, so the type is not restricted to Patient in this slice. I am wondering whether this is not supposed to work in the first place (i.e. slice name == resource type) or if this is indeed a bug?</p>",
        "id": 273253855,
        "sender_full_name": "Yannick Börner",
        "timestamp": 1645808148
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"260054\">@Yannick Börner</span>.  Can you provide a little more information about what you are trying to do?  If this is for <code>Observation.subject</code>, then <code>Observation.subject</code> is not a list.  Since it seems like you are saying that the Patient reference is <code>1..1 MS</code>, then isn't that basically the same as this?</p>\n<div class=\"codehilite\"><pre><span></span><code>* subject 1..1 MS\n* subject only Reference(Patient)\n</code></pre></div>\n<p>Or is there some other nuance I am missing?</p>",
        "id": 273258783,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1645810186
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> , certainly! The profile in question is <a href=\"https://simplifier.net/isik-basis-2/isikabrechnungsfall\">this profile on Account</a>. What I am trying to achieve is the following: </p>\n<ul>\n<li>Allow several subject references</li>\n<li>However, a minimum of one Patient reference must exist </li>\n</ul>\n<p>In my understanding, the FSH above should cover these requirements. That's where I stumbled upon the above error, where the <code>type</code> element is not generated if the slice is called 'Patient'. If I rename it to something other than a resource type, everything works.</p>",
        "id": 273510251,
        "sender_full_name": "Yannick Börner",
        "timestamp": 1646063685
    },
    {
        "content": "<p>Thanks, <span class=\"user-mention\" data-user-id=\"260054\">@Yannick Börner</span>.  Now that I think of it, I bet you're running into an unintended consequence of our <a href=\"http://hl7.org/fhir/uv/shorthand/reference.html#reference-paths\">reference path syntax</a>.  When you say <code>subject[Patient]</code> it thinks you are referring to the <code>Patient</code> <em>reference</em> in the <code>subject</code> element, not the <code>Patient</code> <em>slice</em>.  That's unfortunate (especially since reference paths actually have very limited use) -- but I don't see any way around it.  So I guess we <em>do</em> have a limitation that you can't name a slice something that is also the name of a resource when that element also has a reference to the same resource.  Sorry about that!</p>",
        "id": 273690709,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1646160471
    },
    {
        "content": "<p>All fine and dandy, this is why I wanted to ask before opening an issue :-) Thank you for looking into it! Should we improve the error message though?</p>",
        "id": 273973114,
        "sender_full_name": "Yannick Börner",
        "timestamp": 1646314706
    },
    {
        "content": "<p>Yeah, I'll have to see if we can easily detect that situation and warn on it.</p>",
        "id": 273979826,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1646317566
    }
]