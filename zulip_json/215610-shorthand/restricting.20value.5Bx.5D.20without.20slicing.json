[
    {
        "content": "<p>I just tried to fix value[x] to valueCodeableConcept (inside of a component)</p>",
        "id": 213174298,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1602603477
    },
    {
        "content": "<p>I used: <code>* component[dna-chg].value[x] only CodeableConcept</code></p>",
        "id": 213174383,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1602603499
    },
    {
        "content": "<p>which creates a type based slicing, which we don't want. Is there an alternative syntax to just fix the type of value[x] ?</p>",
        "id": 213174556,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1602603556
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span>.  If I recall correctly, the rule you noted above (an <code>only</code> rule) should not create a type slice.  What typically creates a type slice is if you access <code>value[x]</code> using the type-based path, e.g. <code>* component[dna-chg].valueCodeableConcept from MyValueSet</code>.  Are you doing that?  If so, you can change those rules to use <code>value[x]</code> instead of <code>valueCodeableConcept</code> -- and that <em>should</em> avoid the type slicing.</p>",
        "id": 213177412,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1602604686
    },
    {
        "content": "<p>BTW -- we're considering changing how SUSHI exports this so that even if you say <code>valueCodeableConcept</code>, SUSHI would not use a type slice if <code>value[x]</code> has already been narrowed to only <code>CodeableConcept</code> anyway.  This is something that would change current output (for current IGs), however, so we're considering it carefully.  Until then, avoiding the type-specific property names in the paths should do the trick.</p>",
        "id": 213177826,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1602604837
    },
    {
        "content": "<p>it worked! Thanks <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> !!</p>",
        "id": 213268685,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1602670515
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191469\">Chris Moesel</span> <a href=\"#narrow/stream/215610-shorthand/topic/restricting.20value.5Bx.5D.20without.20slicing/near/213177826\">said</a>:</p>\n<blockquote>\n<p>BTW -- we're considering changing how SUSHI exports this so that even if you say <code>valueCodeableConcept</code>, SUSHI would not use a type slice if <code>value[x]</code> has already been narrowed to only <code>CodeableConcept</code> anyway.  This is something that would change current output (for current IGs), however, so we're considering it carefully.  Until then, avoiding the type-specific property names in the paths should do the trick.</p>\n</blockquote>\n<p>I think that would be a great change, seems to be much more intuitive (at least to me)</p>",
        "id": 213268789,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1602670578
    },
    {
        "content": "<p>btw: if i do this <code>* valueCodeableConcept from http://loinc.org/vs/LL1971-2 (required)</code> (on Observation.value)  doesn't introduce a slice. <br>\nI expected that i have to change this also to: <code>* value[x] from http://loinc.org/vs/LL1971-2 (required)</code></p>",
        "id": 213269590,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1602671175
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191451\">Patrick Werner</span> <a href=\"#narrow/stream/215610-shorthand/topic/restricting.20value.5Bx.5D.20without.20slicing/near/213269590\">said</a>:</p>\n<blockquote>\n<p>btw: if i do this <code>* valueCodeableConcept from http://loinc.org/vs/LL1971-2 (required)</code> (on Observation.value)  doesn't introduce a slice. <br>\nI expected that i have to change this also to: <code>* value[x] from http://loinc.org/vs/LL1971-2 (required)</code></p>\n</blockquote>\n<p>Honestly, I find that surprising too.  I'm not sure why you didn't have to do it there too...  Thanks for the confirmation on the other and the feedback regarding our potential approach.</p>",
        "id": 213278781,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1602677467
    }
]