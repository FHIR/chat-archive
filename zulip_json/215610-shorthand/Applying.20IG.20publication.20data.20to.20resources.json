[
    {
        "content": "<p>My search skills are failing me, but I seem to recall a discussion about applying the IG's publisher, version, copyright, etc. settings to resources within the IG. Is this something Sushi (or the publisher) does by default? I've got an IG where these seem to be propagated. I've found the <a href=\"https://confluence.hl7.org/display/FHIR/Implementation+Guide+Parameters\">documentation</a> on apply-version, apply-copyright, apply-contact, etc. for the publisher, and from my read, the default value for all is false (don't propagate), so I'm trying to recall if this is something sushi does.</p>",
        "id": 250785642,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1629989790
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span> - SUSHI defaults profiles' <code>status</code> to <code>active</code> and <code>version</code> to the version specified in your <code>sushi-config.yaml</code>.  SUSHI does not apply the publisher, copyright, etc. to profiles.  That is something that the IG Publisher does (and as you suggested, I thought it was based on specific parameters in your IG file).  You can easily see what SUSHI did or did not set by looking at the SUSHI output in <code>fsh-generated</code>.</p>",
        "id": 250805010,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1629997106
    },
    {
        "content": "<p>First \"Sushi defaults ... version to the version specified\": Is that changable? If so where? </p>\n<p>Would there be anything odd about how Sushi handles a project containing no fsh files? (It has sushi-config, and xml vocabulary, but no fsh files.)</p>",
        "id": 250848431,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1630015864
    },
    {
        "content": "<blockquote>\n<p>First \"Sushi defaults ... version to the version specified\": Is that changable? If so where?</p>\n</blockquote>\n<p>You can override the version for any profile via a caret rule:</p>\n<div class=\"codehilite\"><pre><span></span><code>* ^version = &quot;1.2.3&quot;\n</code></pre></div>",
        "id": 250874983,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1630032744
    },
    {
        "content": "<blockquote>\n<p>Would there be anything odd about how Sushi handles a project containing no fsh files? (It has sushi-config, and xml vocabulary, but no fsh files.)</p>\n</blockquote>\n<p>SUSHI itself should be just fine without FSH files.  It should still create the IG JSON (and menu.xml, if appropriate).  BUT -- the IG Publisher only runs SUSHI if it sees an <code>input/fsh</code> folder.  So if you don't have an <code>input/fsh</code> folder, then IG Publisher will not launch SUSHI.  Git won't let you check in a truly empty folder, so you'd have to put an empty FSH file or text file or something in there in order for the folder to exist in Git (and then be seen by the IG Publisher in CI).</p>",
        "id": 250875325,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1630033133
    },
    {
        "content": "<p>we put empty .gitignore files to keep empty folders on github</p>",
        "id": 250895999,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1630050646
    },
    {
        "content": "<p>Interesting -- yeah, I came across the issue with publisher not running sushi because of the missing directory. I guess that would really be the only thing that differs; once the execution of sushi is done, I assume publisher behavior is identical regardless of whether the IG is a sushi project or not.</p>",
        "id": 250955722,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1630081110
    },
    {
        "content": "<blockquote>\n<p>once the execution of sushi is done, I assume publisher behavior is identical regardless of whether the IG is a sushi project or not.</p>\n</blockquote>\n<p>Correct.  The only real difference between a SUSHI project and non-SUSHI project at that point is that the SUSHI project stores some of the sources in <code>input/fsh-generated</code>.  But the all those sources in <code>input</code> basically end up getting aggregated together for the IG Publisher anyway, so it doesn't matter.</p>",
        "id": 250959406,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1630082689
    },
    {
        "content": "<p>OK, I need to look at publisher behavior then. Thanks.</p>",
        "id": 250980933,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1630091582
    }
]