[
    {
        "content": "<p>If you live in an area where time \"falls back\" an hour in November, what should be the result of:<br>\n@2019-06-25T10:26 + 6 months?</p>",
        "id": 168943603,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1561472949
    },
    {
        "content": "<p>Personally I would suggest same time of day.</p>",
        "id": 168978667,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1561497709
    },
    {
        "content": "<p>(or at least that's what I would expect)</p>",
        "id": 168978732,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1561497747
    },
    {
        "content": "<p>The specification says \"To support comparison of DateTime values, either both values have no timezone offset specified, or both values are converted to a common timezone offset. The timezone offset to use is an implementation decision. In the simplest case, itâ€™s the timezone offset of the local server.\"</p>",
        "id": 168986883,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1561505035
    },
    {
        "content": "<p>But that's for comparison. For arithmetic, it defers to 8601, which says \"the same time of day at the same calendar day\"</p>",
        "id": 168987056,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1561505217
    },
    {
        "content": "<p>So yes, that's the expected behavior.</p>",
        "id": 168987149,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1561505316
    },
    {
        "content": "<p>And I just confirmed that what the Java-based engine does.</p>",
        "id": 168987156,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1561505326
    }
]