[
    {
        "content": "<p>There is test in tests-fhir-r4.xml which says that \"name.given1\", when run on patent-example.xml, should be an invalid expression.  Why would that not return the empty set (indicating that there is no given1 field on that name structure)?</p>",
        "id": 154010301,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1539902551
    },
    {
        "content": "<p>Is that in the tests that understand type information?</p>",
        "id": 154010326,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1539915546
    },
    {
        "content": "<p>that test is specifically testing that the engine knows that given1 is not a valid property name for the class</p>",
        "id": 154010352,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539925967
    },
    {
        "content": "<p>Would that be test of the FHIRPath specification (<a href=\"http://hl7.org/fhirpath/2018Sep/\" target=\"_blank\" title=\"http://hl7.org/fhirpath/2018Sep/\">http://hl7.org/fhirpath/2018Sep/</a>) or of the FHIR extensions (<a href=\"http://hl7.org/fhir/2018Sep/fhirpath.html\" target=\"_blank\" title=\"http://hl7.org/fhir/2018Sep/fhirpath.html\">http://hl7.org/fhir/2018Sep/fhirpath.html</a>)?  (I am having trouble seeing in either place that raising an error is the right behavior, but I am quite possibly just missing it.)</p>",
        "id": 154011441,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1540311069
    },
    {
        "content": "<p>I use that knowledge when validating constraints in a structure definition to be sure that it is valid on the instance it is expected to run on (and similarly on questionnaire definition validation, that when defining links in the fhirpath that they actually exist in the questionnaire. Kinda fun)</p>",
        "id": 154011604,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1540328553
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span> , I would have expected to find it <a href=\"http://hl7.org/fhirpath/2018Sep/#type-safety-and-strict-evaluation\" target=\"_blank\" title=\"http://hl7.org/fhirpath/2018Sep/#type-safety-and-strict-evaluation\">here</a>, but I think you're right, the spec does not explicitly state that an invalid property name is an error condition. It should be in the base FHIRPath spec, not in the FHIR extensions, and given that the behavior is verified with a test, I think this is a case of the implementations being ahead of the spec.</p>",
        "id": 154011695,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1540347207
    },
    {
        "content": "<p>That's fine.  It would be very helpful for it to be in the spec, because I was not expecting that behavior.</p>",
        "id": 154011847,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1540391225
    },
    {
        "content": "<p>I think it's a behaviour of the models that its applied against, not the core fhirpath spec.</p>",
        "id": 154012327,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1540537177
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> Are you suggesting that some models would raise an error if an invalid property name was requested, but that other models would not?</p>",
        "id": 154012642,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1540571746
    },
    {
        "content": "<p>Yeah, that's not my understanding. Brian, is that a feature of your engine?</p>",
        "id": 154012693,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1540578254
    },
    {
        "content": "<p>Yup. I add more validation rules for the various uses i have.<br>\nI dont suspect others are checking linkids for questionnaires.<br>\nHave been thinking about checking codes too, as with a known binding, can check that the value in the expression exists in the set.<br>\nNot expecting that to be documented in the spec though.</p>",
        "id": 154012746,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1540589516
    },
    {
        "content": "<p>I think that maybe we should categorise the tests so you can ignore tests that depend on validation against the underlying model, if you're not intersted in that</p>",
        "id": 154012836,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540627153
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> That would help, but also along those lines (and as I thought I suggested somewhere, but I can't find it) I think it would be good for FHIRPath to have its own file of tests, separate from the tests that are for the FHIR-specific features.</p>",
        "id": 154012924,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1540668062
    },
    {
        "content": "<p>well, you're welcome to define them...</p>",
        "id": 154012929,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540668298
    },
    {
        "content": "<p>I didn't necessarily mean <em>new</em> tests, but that the core FHIRPath tests in tests-fhir-r4.xml could be separated into its own file.</p>",
        "id": 154012930,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1540668379
    },
    {
        "content": "<p>there's a lot that wouldn't be tested that way</p>",
        "id": 154012931,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540668428
    },
    {
        "content": "<p>I'm not sure why.  FHIRPath engines would be tested with (at least) the core FHIRPath tests, and R4 FHIRPath engines would be tested with those plus whatever was left in tests-fhir-r4.xml</p>",
        "id": 154012932,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1540668542
    },
    {
        "content": "<p>because anything to do with objects (as opposed to primitives) needs some objects to test with.</p>",
        "id": 154012933,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540668568
    },
    {
        "content": "<p>Objects are not a problem.  The fhirpath.js engine has no knowledge of FHIR types, but is still using the FHIR resources as the data against which test expressions (in tests-fhir-r4.xml) are run.</p>",
        "id": 154012935,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1540668674
    },
    {
        "content": "<p>It just doesn't know (or care) that those resources are FHIR resources.</p>",
        "id": 154012936,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1540668715
    },
    {
        "content": "<p>I don't understand what you're trying to do then</p>",
        "id": 154012937,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540668733
    },
    {
        "content": "<p>what's the point of separating out the dependencies that you need anyway?</p>",
        "id": 154012938,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540668780
    },
    {
        "content": "<p>To separate the tests like name.given1 (which require validation against a known FHIR model) from other tests that don't require knowledge of FHIR types.</p>",
        "id": 154012939,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1540668809
    },
    {
        "content": "<p>oh well that's what I suggested, so I thought you must mean something else</p>",
        "id": 154012940,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540668835
    },
    {
        "content": "<p>Okay good.  I thought you were talking about adding a flag to certain tests that would allow them to be skipped over.  That would still mean that a FHIRPath engine (which might I suppose not be used for FHIR itself) would still need to be pulling in tests-fhir-r4.xml (or r5.xml....) which if FHIRPath is its own thing, does not seem ideal.</p>",
        "id": 154012942,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1540668991
    },
    {
        "content": "<p>so my confusion remain. I was talking about adding a flag. But your separated tests will still need to pull in the source that supports tests-fhir-r4.xml... so I don't know what the point is</p>",
        "id": 154012943,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540669089
    },
    {
        "content": "<p>The separated test file for core FHIRPath would start out with copies of the resources the tests referenced, and would be available as a download from the FHIRPath page, not a FHIR page.  The resources would not need to be (or  remain) valid FHIR resources, and could be changed as necessary to support new FHIRPath tests (possibly invalidating those resources, but it wouldn't matter).</p>",
        "id": 154012944,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1540669241
    },
    {
        "content": "<p>well, I think it would matter since now the tests could not be used for engines that used FHIR</p>",
        "id": 154012949,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540669419
    },
    {
        "content": "<p>Perhaps it would depend on how those engines are implemented.  I was thinking that if eventually fhirpath.js has knowledge of FHIR types, that knowledge would be passed into it as an optional argument, so that it could be checking against R3, R4, or something non-FHIR.  If nothing was provided, it would not do anything with types.</p>\n<p>I can see how this separation might be disruptive for existing FHIRPath engines, but I think the case for it will become stronger over time now that FHIRPath is its own spec.</p>",
        "id": 154012952,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1540669695
    },
    {
        "content": "<p>In any case, a flag as you suggest would be an improvement.</p>",
        "id": 154012954,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1540669827
    },
    {
        "content": "<p>The .net engine is fully separated, and does have both styles of tests in it. As well as running the core tests.</p>",
        "id": 154012981,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1540678217
    },
    {
        "content": "<p>Having the flag sounds like it would achieve your result.<br>\nLike grahame said, you need models to test with.</p>",
        "id": 154012982,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1540678270
    }
]