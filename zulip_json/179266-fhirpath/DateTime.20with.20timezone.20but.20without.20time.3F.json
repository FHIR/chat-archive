[
    {
        "content": "<p>The <a href=\"http://hl7.org/fhirpath/2019May/grammar.html\" target=\"_blank\" title=\"http://hl7.org/fhirpath/2019May/grammar.html\">grammar</a> for the May ballot permits DateTimes like \"@2019T-04:00\".  Is that desirable?  What would that mean?</p>",
        "id": 167954207,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1560351056
    },
    {
        "content": "<p>I don't think it's meaningful</p>",
        "id": 167959294,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560353983
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span>  Should I file a tracker item to remove that possibility?</p>",
        "id": 167980133,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1560368213
    },
    {
        "content": "<p>I think the intention was to support full dates with timezones - because sometimes that is relevant.  Might be reasonable to prohibit for just yyyy or yyyy-mm.  It would be a breaking change though, so we'd need to check that prohibiting it wouldn't negatively impact anyone.</p>",
        "id": 167988510,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560373834
    },
    {
        "content": "<p>The <a href=\"http://hl7.org/fhirpath/grammar.html\" target=\"_blank\" title=\"http://hl7.org/fhirpath/grammar.html\">published STU1 fhirpath grammar</a> does allow you to stick a Z at the end of a partial date, but if you want any other time offset, you have to specify a full date and include at least an hour.    So, the breaking change would be to not allow Z, specifically, at the end of a DateTime without at time.</p>",
        "id": 168047457,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1560434404
    },
    {
        "content": "<p>The intent was to only allow timezone as part of a DateTime that included a time, but yes, the way that it was defined it allowed timezones. <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>, <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span>, <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span>, do your implementations accept the date time literal <code>@2019T-04:00</code>?</p>",
        "id": 168339296,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1560798957
    },
    {
        "content": "<p>Has someone come up with an example of a fhirpath expression where you want to use the value.</p>",
        "id": 168353543,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1560810774
    },
    {
        "content": "<p>I'm not suggesting it's a valid literal, I'm just surveying current implementations for behavior.</p>",
        "id": 168361224,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1560820453
    },
    {
        "content": "<p>I am sure I don't accept that.</p>",
        "id": 169850239,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1562574694
    },
    {
        "content": "<p>I created <a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22818\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22818\">GF#22818</a> for this issue.</p>",
        "id": 170472171,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1562692753
    },
    {
        "content": "<p>I've proposed a resolution for this (<a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22818\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22818\">GF#22818</a>) and (<a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22989\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22989\">GF#22989</a>). Please poke holes in it, I'm adding it to a block vote for consideration on the 8/20 ITS call. <span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span> , <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> , <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span></p>",
        "id": 173077093,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1565659937
    },
    {
        "content": "<p>Looks fine to me!</p>",
        "id": 173099972,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1565689913
    },
    {
        "content": "<p>In general the resolution looks good, but the timezoneoffset pattern differs from the <a href=\"https://www.hl7.org/fhir/datatypes.html#dateTime\" target=\"_blank\" title=\"https://www.hl7.org/fhir/datatypes.html#dateTime\">FHIR pattern</a>:  (Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)).  The proposed FHIRPath pattern, ('Z' | ('+' | '-') [0-9][0-9]':'[0-9][0-9]), allows timezone offset values like +99:99 that FHIR does not.  Is it possible to just copy the FHIR pattern?</p>",
        "id": 173117604,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1565706159
    },
    {
        "content": "<p>In the parser for a language though, putting validation like that in the lexer makes parsing much more difficult, because what it ends up meaning is that +99:99 is not _tokenizable_. We've purposely defined the regexes here to be more broad, leaving semantic validation to the parser.</p>",
        "id": 173133149,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1565717166
    },
    {
        "content": "<p>I think I would rather have the lexer handle as much as possible than have to write code to further validate its output.  But, I guess the intent is to avoid the ugly ANTLR error messages in favor of custom ones written for the parser?</p>",
        "id": 173135172,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1565718644
    },
    {
        "content": "<p>Yes, that certainly helps, not just in ANTLR but any framework where lexing, tokenizing and grammars are separated.  I had to get used to it, but it does get you better error messages.  Also, you can never get to the bottom of it anyway (think leap years), so why have part of the validation in the lexer and part in the higher-level parser?  And in a \"term\" rule, it's really useful that a parser would at least grasp that you are trying to specify a date - rather than saying \"it's none of the rules in term, so you're totally off\".  Even in smart hand-written parsers you'd need something to recognize \"almost correct dates\" to give sensible error messages?</p>",
        "id": 173528335,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1566206192
    }
]