[
    {
        "content": "<p>I'm updating the .net fhirpath engine to handle variables for the Questionnaire pre-population code and was wondering if others have already tackled this problem in the java/js implementations?<br>\nI'm expecting that these are to be passed into the evaluation engine and referenced in the same way that environment variables are, using the %varname syntax.<br>\nMy question is around the behaviour if a variable is referneced that doesn't exist in the engine?<br>\nShould that throw an Argument exception, or do null propagation.</p>",
        "id": 170506484,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1562724838
    },
    {
        "content": "<p>My test example is a simple Pythagoras calculation (which could be an invariant) where the variables haven't been defined.</p>\n<div class=\"codehilite\"><pre><span></span>%x * %x + %y * %y = %z * %z\n</pre></div>",
        "id": 170506604,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1562724973
    },
    {
        "content": "<p>And while I'm on the topic, can the variables be collections rather than just single values (the current .net env vars are only single values)</p>",
        "id": 170509107,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1562729249
    },
    {
        "content": "<p>FYI The %ucum variable is one that is set for all environments/contexts</p>",
        "id": 170509588,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1562729969
    },
    {
        "content": "<p>For <a href=\"https://lhcforms.nlm.nih.gov/\" target=\"_blank\" title=\"https://lhcforms.nlm.nih.gov/\">LHC-Forms</a>, there is an example with \"weight\" and \"height\" variables in the <a href=\"https://lhcforms.nlm.nih.gov/sdc\" target=\"_blank\" title=\"https://lhcforms.nlm.nih.gov/sdc\">SDC app</a>.  Click on \"Weight &amp; Height tracking panel\", and then in the  \"show as\" menu, choose \"FHIR Questionnaire from server\".   Or, if you just want to see the definition, that is <a href=\"https://github.com/lhncbc/lforms-fhir-app/blob/master/e2e-tests/data/R4/weight-height-questionnaire.json\" target=\"_blank\" title=\"https://github.com/lhncbc/lforms-fhir-app/blob/master/e2e-tests/data/R4/weight-height-questionnaire.json\">here</a>.</p>\n<p>In our implementation, \"variable\" can hold the result of any FHIRPath expression.  If it is a structure, then you would need other FHIRPath expressions to pick out the pieces you wanted.</p>\n<p>LHC-Forms relies on <a href=\"https://github.com/HL7/fhirpath.js/\" target=\"_blank\" title=\"https://github.com/HL7/fhirpath.js/\">fhirpath.js</a> for FHIRPath expressions.  I just checked the source, and I implemented undefined variable names as resolving to the empty value, [ ].</p>",
        "id": 170550279,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1562771799
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span> , that BMI calculation is pretty neat. I'll use it for my testing.</p>",
        "id": 170579443,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1562792499
    },
    {
        "content": "<p>I pass in an interface that provides services to the engine. variables that are not defined are compile time failures</p>",
        "id": 170583236,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1562796144
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I think your approach is correct.  The FHIRPath spec (May ballot) says, \"Attempting to access an undefined environment variable will result in an error, but accessing a defined environment variable that does not have a value specified results in empty ({ }).\"</p>",
        "id": 170584690,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1562797440
    },
    {
        "content": "<p>The discussion we are having in the .NET team is: is the name/type/value of the variables supposed to be known at compile time, or just their name and type, so you can vary their value for each call to a compiled statement?</p>",
        "id": 170619853,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1562840021
    },
    {
        "content": "<p>I think we're talking about the second of these two?</p>",
        "id": 170619951,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1562840094
    },
    {
        "content": "<p>Yes, that's true.</p>",
        "id": 170622618,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1562842641
    },
    {
        "content": "<p>Since I'm working in JavaScript, I am not quite sure what it would mean to compile a FHIRPath expression, or at what point that would be done.  An author of a Questionnaire could set up a Questionnaire variable based on a FHIRPath expression that could return more than one type:</p>\n<div class=\"codehilite\"><pre><span></span>iif(today() &gt; @2020,  3,  &#39;why not?&#39;)\n</pre></div>\n\n\n<p>The questionnaire author has the responsibility make sure that what they are writing makes sense.  Whatever used that variable (e.g. other FHIRPath expressions) would need to handle the different types.<br>\nOther the other hand, at the the time that multi-type variable was used in a subsequent FHIRPath expression, its type could be checked by the FHIRPath engine and known prior to evaluation (compile time?).  Maybe that is what you meant.  Certainly its value and type would not change during the evaluation (run time).  But, at each run, the type could be different.</p>",
        "id": 170638432,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1562855495
    },
    {
        "content": "<p>In theory, checking that the FHIRPath expressions make sense could be part of validation, and that would be the \"compile-time\". For questions that may have different types, at least the set of possible types is known, and that is handled with a choice type. Since the CQFramework's FHIRPath engine is part of the CQL Engine, there is a separate compile-time step, and that is where that checking would occur.</p>",
        "id": 170652370,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1562865051
    },
    {
        "content": "<p>I was not referring to a question having multiple types, but to Questionnaire <a href=\"https://www.hl7.org/fhir/extension-variable.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/extension-variable.html\">variables</a>.</p>",
        "id": 170676645,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1562882473
    }
]