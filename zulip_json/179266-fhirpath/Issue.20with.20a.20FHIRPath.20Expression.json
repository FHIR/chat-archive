[
    {
        "content": "<p>I have created a Patient profile and I am trying to implement a constraint --&gt; Must have [identifier of type JHN] or [address and phone]</p>\n<p>I initially wrote the FHIRPath expression as:<br>\n(identifier.type.coding.code=\"JHN\") or (address.exists() and telecom.exists()) --- the two test cases that should trigger the error (no JHN and no address, no JHN and no telecom) come back with success instead of fail.</p>\n<p>I tried changing it to:<br>\n(identifier.type.coding.code=\"JHN\") or ((address.exists()) and (telecom.exists())) --- I got the same result</p>\n<p>If a resource is missing JHN, or address, or phone, the validation succeeds as expected.<br>\nIf a resource is missing JHN and address, or JHN and phone, the validation succeeds when it should fail.</p>\n<p>Does anyone have any idea what is wrong with this FHIRPath expression?</p>\n<p>Appreciate any help.<br>\nJoanie</p>",
        "id": 222785443,
        "sender_full_name": "Joan Harper",
        "timestamp": 1610659037
    },
    {
        "content": "<p>(identifier.type.coding.code='JHN') or ((address.exists()) and (telecom.exists()))  seems to work as expected here <a href=\"https://hl7.github.io/fhirpath.js/\">https://hl7.github.io/fhirpath.js/</a><br>\n(note i had to change your double quotes to single quotes which may have been the underlying issue)</p>",
        "id": 222786085,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1610659316
    },
    {
        "content": "<p>Thanks Ryan.<br>\nI changed the double quotes to single quote and now the tests that were missing both JHN and address, or JHN and telecom work.</p>\n<p>Now the test where telecom is missing fails and the test where address is missing fails.  These tests should both succeed.</p>\n<p>The new expression is (identifier.type.coding.code='JHN') or ((address.exists()) and (telecom.exists())) </p>\n<p>I'm so confused by this expression.  This should be pretty straightforward.</p>",
        "id": 222787108,
        "sender_full_name": "Joan Harper",
        "timestamp": 1610659795
    },
    {
        "content": "<p>so what are you cases where you want to pass vs fail?<br>\nbecause how I read your expression it worked as I expected with varying inclusion of your code, an address, or a telecom</p>",
        "id": 222788261,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1610660335
    },
    {
        "content": "<p>if it is missing address but has JHN, it should pass  - this is now failing<br>\nif it is missing telecom but has JHN, it should pass  - this is now failing<br>\nif it missing a JHN identifier but has address and telecom, it should pass</p>\n<p>if it is missing a JHN identifier and address, it should fail<br>\nit it is missing a JHN identifier and telecom, it should fail</p>",
        "id": 222788693,
        "sender_full_name": "Joan Harper",
        "timestamp": 1610660595
    },
    {
        "content": "<p>can you send over what patient resource you are working off of? Maybe the JHN identifier is not being recognized correctly in the fhirpath</p>",
        "id": 222790526,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1610661521
    },
    {
        "content": "<p>After a bit of back and forth with Ryan, he helped me fix my issue, which was occurring because there was slicing of the identifier.<br>\n(identifier.where(type.coding.code='JHN').exists()) or ((address.exists()) and (telecom.exists()))</p>\n<p>Ryan, thank you very very much :)</p>\n<p>Joanie</p>",
        "id": 222792600,
        "sender_full_name": "Joan Harper",
        "timestamp": 1610662506
    },
    {
        "content": "<p>yup, because there were multiple identifiers in your examples with different identifier types etc. the previous expression of identifier.type.coding.code='JHN' needed to be modified to make sure <em>at least one</em> identifier has a type of JHN so we used where() for that and then an exists() to make the existence/absence of a matching element into a boolean true/false for the rest of the expression</p>",
        "id": 222793319,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1610662675
    }
]