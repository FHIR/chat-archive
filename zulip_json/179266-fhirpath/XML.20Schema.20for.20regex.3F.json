[
    {
        "content": "<p>This comment (<a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19891\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19891\">GF#19891</a>) suggests that FHIRPath standardize on the regex schema (SHALL, instead of SHOULD). We intentionally made it a recommendation to reduce implementer burden, any thoughts on whether we should go ahead and rqeuire XML Schema regex?</p>",
        "id": 157328592,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1548993891
    },
    {
        "content": "<p>is there a way to find out what libraries are compliant? a test set?</p>",
        "id": 157328667,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1548994075
    },
    {
        "content": "<p>The operation is pretty useless if it's not implemented consistently across platforms...</p>",
        "id": 157328914,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1548994504
    },
    {
        "content": "<p><a href=\"https://stackoverflow.com/questions/15819919/where-can-i-find-unit-tests-for-regular-expressions-in-multiple-languages\" target=\"_blank\" title=\"https://stackoverflow.com/questions/15819919/where-can-i-find-unit-tests-for-regular-expressions-in-multiple-languages\">https://stackoverflow.com/questions/15819919/where-can-i-find-unit-tests-for-regular-expressions-in-multiple-languages</a></p>",
        "id": 157328977,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1548994614
    },
    {
        "content": "<p>And there's RegexBuddy, we can have it just translate flavors for us: <a href=\"https://www.regular-expressions.info/refflavors.html\" target=\"_blank\" title=\"https://www.regular-expressions.info/refflavors.html\">https://www.regular-expressions.info/refflavors.html</a></p>",
        "id": 157328993,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1548994670
    },
    {
        "content": "<p>245 flavors!</p>",
        "id": 157329040,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1548994692
    },
    {
        "content": "<p>the stack overflow reference is nice, but which is the schema one(s)?</p>",
        "id": 157329059,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1548994785
    },
    {
        "content": "<p><a href=\"https://www.regular-expressions.info/xml.html\" target=\"_blank\" title=\"https://www.regular-expressions.info/xml.html\">https://www.regular-expressions.info/xml.html</a></p>",
        "id": 157329109,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1548994854
    },
    {
        "content": "<p>Reading up on the XML Schema one there is interesting.</p>",
        "id": 157329117,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1548994867
    },
    {
        "content": "<p>Based on that writeup, my guess is that all of those test suites would fail on an XML Schema regex engine.</p>",
        "id": 157329167,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1548994931
    },
    {
        "content": "<p>(Because they would test features the XML Schema regex doesn't support)</p>",
        "id": 157329169,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1548994956
    },
    {
        "content": "<blockquote>\n<p>XML regular expressions don't have any tokens like \\xFF or \\uFFFF to match particular (non-printable) characters. You have to add them as literal characters to your regex. If you are entering the regex into an XML file using a plain text editor, then you can use the &#xFFFF; XML syntax. Otherwise, you'll need to paste in the characters from a character map.</p>\n</blockquote>",
        "id": 157329279,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1548995180
    },
    {
        "content": "<p>this is fatal. Very very fatal. We cannot recommend let alone require schema regex</p>",
        "id": 157329284,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1548995199
    },
    {
        "content": "<p>Yeah, it seems very specific to supporting XML.</p>",
        "id": 157329285,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1548995221
    },
    {
        "content": "<p>I think it depends on your platform and requiring support for a particular flavor would be onerous.</p>",
        "id": 157329453,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1548995495
    },
    {
        "content": "<p>We should change the recommended one to PCRE</p>",
        "id": 157329499,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1548995530
    },
    {
        "content": "<p>Or the ECMAScript one that's part of JavaScript.</p>",
        "id": 157329502,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1548995549
    },
    {
        "content": "<p>PCRE works for me</p>",
        "id": 157329573,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1548995697
    },
    {
        "content": "<p>It looks like PCRE is not what web browsers use.  Browsers may eventually catch up, and there are some packages to translate PCRE (<a href=\"https://github.com/TooTallNate/pcre-to-regexp\" target=\"_blank\" title=\"https://github.com/TooTallNate/pcre-to-regexp\">https://github.com/TooTallNate/pcre-to-regexp</a>, <a href=\"https://medium.com/@DmitrySoshnikov/using-modern-regexes-in-javascript-30322af557c5\" target=\"_blank\" title=\"https://medium.com/@DmitrySoshnikov/using-modern-regexes-in-javascript-30322af557c5\">https://medium.com/@DmitrySoshnikov/using-modern-regexes-in-javascript-30322af557c5</a>) but they are not complete solutions.</p>",
        "id": 157363245,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1549036937
    }
]