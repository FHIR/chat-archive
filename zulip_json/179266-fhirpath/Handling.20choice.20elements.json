[
    {
        "content": "<p>We recently discovered a bug in our .NET implementation where some parts of our infrastructure accept <code>Condition.onsetPeriod = ....</code> where other parts don't.   The spec is very clear about this (<a href=\"https://hl7.org/fhir/fhirpath.html#polymorphism\">https://hl7.org/fhir/fhirpath.html#polymorphism</a>): it should be <code>Condition.onset</code>.   While we were planning to fix this, we noticed the Java implementation <em>also</em> accepts <code>Condition.onsetPeriod</code>, so now we are torn:  stick to the normative spec (and become incompatible with the Java implementation and thus quite some FP statements in the wild) or submit a tracker item to document this in the FP spec (or FHIR appendix) to allow this as some kind of backwards compat behaviour?</p>",
        "id": 245937098,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1626255009
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 245962310,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1626270816
    },
    {
        "content": "<p>And would also be interested in the results from the fhirpathjs implementation too</p>",
        "id": 246014494,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1626293987
    },
    {
        "content": "<p>(and Grahame's Delphi version)</p>",
        "id": 246014520,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1626294000
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191367\">Brian Postlethwaite</span> <a href=\"#narrow/stream/179266-fhirpath/topic/Handling.20choice.20elements/near/246014494\">said</a>:</p>\n<blockquote>\n<p>And would also be interested in the results from the fhirpathjs implementation too</p>\n</blockquote>\n<p>fhirpath.js would accept onsetPeriod or just onset.   There are some cases when fhirpath.js cannot figure out that the field is a choice type, in which case only the name with the type would work.</p>\n<p>I have never seen the advantage of removing the type from the field name (though I concede that is per spec).</p>",
        "id": 247353748,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1627401713
    },
    {
        "content": "<blockquote>\n<p>I have never seen the advantage of removing the type from the field name (though I concede that is per spec).</p>\n</blockquote>\n<p>Because the name of the element in the datamodel (and thus for many, the property name of classes in generated code in C#, Java, Delphi...) is different than the specific serialization of such FHIR choice elements in json and xml.  If FhirPath was going to be used for FHIR only, we could argue they are practically the same, but FhirPath can be (and is) used for other models too, where there is no such mapping to a serialization.  Hence it made more sense to us to keep this \"clean\" (early version of FhirPath did use the suffixed names, before we had ofType()).</p>",
        "id": 247426683,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1627454355
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span>  condition.onsetPeriod should not be supported. That's a bug and surely there's a test case for that?</p>",
        "id": 249678097,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629175400
    },
    {
        "content": "<p>You would think so... What we'll do is that we will fix our engine to be completely strict here, and when we are fixing that bug, we'll make sure there is a testcase for it in the suite.</p>",
        "id": 249820529,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1629275220
    },
    {
        "content": "<p>Late to this party, but I recently noticed that the spec has a few search parameter expression that get this wrong as well.<br>\n<a href=\"/user_uploads/10155/oFf154gy9QpFDfBiud_9fyhK/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/oFf154gy9QpFDfBiud_9fyhK/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/oFf154gy9QpFDfBiud_9fyhK/image.png\"></a></div><p>Will open a jira ticket to request those to be <code>instantiates as Canonical</code> and <code>instantiates as Uri</code>.</p>",
        "id": 250029364,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1629398608
    },
    {
        "content": "<p><a href=\"http://jira.hl7.org/browse/FHIR-33214\">FHIR#33214</a></p>",
        "id": 250030849,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1629399267
    },
    {
        "content": "<p>those are separate elements in CarePlan</p>",
        "id": 250042844,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629403898
    },
    {
        "content": "<p>wow, you are totally right. i'm not sure why I was thinking this was a choice type.  i will retract that tracker</p>",
        "id": 250572789,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1629856962
    },
    {
        "content": "<p>Related, this is particularly nasty: <a href=\"http://hl7.org/fhir/2021May/ingredient.html\">http://hl7.org/fhir/2021May/ingredient.html</a></p>\n<p>There is both <code>concentration[x]</code> and <code>concentrationHighLimit[x]</code> - I wonder how many \"naive\" implementations for parsers this will break....</p>",
        "id": 250585803,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1629874848
    },
    {
        "content": "<p>I'm surprised that's OK with the tools. i don't think it's OK and it won't make R5</p>",
        "id": 250585851,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629874914
    },
    {
        "content": "<p>just had a quick peak and R4B has concentration[x] and concentrationText... is that one ok?</p>",
        "id": 250631009,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1629903068
    },
    {
        "content": "<p>In R4B Ingredient, I see \"concentration\", but not \"concentration[x]\", so these 3 elements starting with \"concentration\" should be OK.</p>",
        "id": 250642628,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1629908325
    },
    {
        "content": "<p>am I in the wrong spot?  <a href=\"https://build.fhir.org/branches/R4B/ingredient.html\">https://build.fhir.org/branches/R4B/ingredient.html</a></p>\n<p><a href=\"/user_uploads/10155/Pgh_q-ayhMbmouaQMoi962Vi/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/Pgh_q-ayhMbmouaQMoi962Vi/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/Pgh_q-ayhMbmouaQMoi962Vi/image.png\"></a></div>",
        "id": 250669353,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1629919751
    },
    {
        "content": "<p>I suspect that <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> was looking at the official R4B ballot: <a href=\"http://hl7.org/fhir/2021Mar/ingredient.html\">http://hl7.org/fhir/2021Mar/ingredient.html</a></p>\n<p><a href=\"/user_uploads/10155/ul_nTV_yyJ-fNXuy98bzJBBy/Ingredient-FHIR-v4.1.0-20210825160217.png\">Ingredient-FHIR-v4.1.0-20210825160217.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/ul_nTV_yyJ-fNXuy98bzJBBy/Ingredient-FHIR-v4.1.0-20210825160217.png\" title=\"Ingredient-FHIR-v4.1.0-20210825160217.png\"><img src=\"/user_uploads/10155/ul_nTV_yyJ-fNXuy98bzJBBy/Ingredient-FHIR-v4.1.0-20210825160217.png\"></a></div>",
        "id": 250674563,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1629921783
    },
    {
        "content": "<p>Looks like there was a ballot comment complaining about the separate low/high properties and the resolution was to add a choice between Range and RatioRange -- resulting in the current build that <span class=\"user-mention\" data-user-id=\"191676\">@Lee Surprenant</span> noticed.  (JIRA issue w/ resolution to add the choice: <a href=\"https://jira.hl7.org/browse/FHIR-31821\">https://jira.hl7.org/browse/FHIR-31821</a>).</p>",
        "id": 250675365,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1629922119
    },
    {
        "content": "<p>clearly, the name detection clash is failing. <span class=\"user-mention\" data-user-id=\"191651\">@Rik Smithies</span> this is a big deal; the names must be different, and I'll have to figure out why, but please start changing them now.</p>",
        "id": 250711383,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629945474
    },
    {
        "content": "<p>you cannot have an element name nnn[x] and then any other element that starts with nnn</p>",
        "id": 250711427,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629945500
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179266-fhirpath/topic/Handling.20choice.20elements/near/249678097\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191328\">Ewout Kramer</span>  condition.onsetPeriod should not be supported. That's a bug and surely there's a test case for that?</p>\n</blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191328\">Ewout Kramer</span> <a href=\"#narrow/stream/179266-fhirpath/topic/Handling.20choice.20elements/near/249820529\">said</a>:</p>\n<blockquote>\n<p>You would think so... What we'll do is that we will fix our engine to be completely strict here, and when we are fixing that bug, we'll make sure there is a testcase for it in the suite.</p>\n</blockquote>\n<p>Which effects could i expect in hl7-Validator and Simplifier-Validator at existing constraints with e.g. condition.onsetPeriod in it? The constraints won't fire or will always fire?</p>",
        "id": 250735799,
        "sender_full_name": "Maximilian Reith",
        "timestamp": 1629963979
    },
    {
        "content": "<p>It depends on how you write them. onsertPeriod will be null, and that will propagate according to the rules here <a href=\"http://hl7.org/fhirpath/N1/#null-and-empty\">http://hl7.org/fhirpath/N1/#null-and-empty</a>. A constraint that returns null is a constraint that is not known to be true, and so is considered to have failed</p>",
        "id": 250736589,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1629964625
    },
    {
        "content": "<p>I got around to looking at the tests, and I don't think that this can be true:</p>\n<blockquote>\n<p>While we were planning to fix this, we noticed the Java implementation also accepts Condition.onsetPeriod</p>\n</blockquote>",
        "id": 250843226,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630013403
    },
    {
        "content": "<p>because there is a test case for that</p>",
        "id": 250843308,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630013426
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"XML\"><pre><span></span><code> <span class=\"nt\">&lt;group</span> <span class=\"na\">name=</span><span class=\"s\">\"polymorphics\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"c\">&lt;!--</span>\n<span class=\"c\">      The way FHIRpath works, it treats polymorphic values e.g. Observation.value[x] as</span>\n<span class=\"c\">      Observation.value. This catches people out - they often write Observation.valueString.</span>\n\n<span class=\"c\">      For this reason, some engines have a non-strict mode where this is allowed, but it's not</span>\n<span class=\"c\">      technical conformant. While this might change in the future, it's not legal in strict mode.</span>\n<span class=\"c\">      these tests test this out.</span>\n<span class=\"c\">    --&gt;</span>\n        <span class=\"nt\">&lt;test</span> <span class=\"na\">name=</span><span class=\"s\">\"testPolymorphicsA\"</span> <span class=\"na\">inputfile=</span><span class=\"s\">\"observation-example.xml\"</span><span class=\"nt\">&gt;&lt;expression&gt;</span>Observation.value.exists()<span class=\"nt\">&lt;/expression&gt;&lt;output</span> <span class=\"na\">type=</span><span class=\"s\">\"boolean\"</span><span class=\"nt\">&gt;</span>true<span class=\"nt\">&lt;/output&gt;&lt;/test&gt;</span>\n        <span class=\"nt\">&lt;test</span> <span class=\"na\">name=</span><span class=\"s\">\"testPolymorphicsB\"</span> <span class=\"na\">inputfile=</span><span class=\"s\">\"observation-example.xml\"</span><span class=\"nt\">&gt;&lt;expression</span> <span class=\"na\">invalid=</span><span class=\"s\">\"semantic\"</span><span class=\"nt\">&gt;</span>Observation.valueQuantity.exists()<span class=\"nt\">&lt;/expression&gt;&lt;output</span> <span class=\"na\">type=</span><span class=\"s\">\"boolean\"</span><span class=\"nt\">&gt;</span>false<span class=\"nt\">&lt;/output&gt;&lt;/test&gt;</span>\n        <span class=\"nt\">&lt;modeTest</span> <span class=\"na\">mode=</span><span class=\"s\">\"lenient/polymorphics\"</span> <span class=\"na\">name=</span><span class=\"s\">\"testPolymorphicsC\"</span> <span class=\"na\">inputfile=</span><span class=\"s\">\"observation-example.xml\"</span><span class=\"nt\">&gt;&lt;expression&gt;</span>Observation.valueQuantity.exists()<span class=\"nt\">&lt;/expression&gt;&lt;output</span> <span class=\"na\">type=</span><span class=\"s\">\"boolean\"</span><span class=\"nt\">&gt;</span>true<span class=\"nt\">&lt;/output&gt;&lt;/modeTest&gt;</span>\n        <span class=\"nt\">&lt;modeTest</span> <span class=\"na\">mode=</span><span class=\"s\">\"lenient/polymorphics\"</span> <span class=\"na\">name=</span><span class=\"s\">\"testPolymorphicsD\"</span> <span class=\"na\">inputfile=</span><span class=\"s\">\"observation-example.xml\"</span><span class=\"nt\">&gt;&lt;expression&gt;</span>Observation.valueString.exists()<span class=\"nt\">&lt;/expression&gt;&lt;output</span> <span class=\"na\">type=</span><span class=\"s\">\"boolean\"</span><span class=\"nt\">&gt;</span>false<span class=\"nt\">&lt;/output&gt;&lt;/modeTest&gt;</span>\n  <span class=\"nt\">&lt;/group&gt;</span>\n</code></pre></div>",
        "id": 250843344,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630013440
    },
    {
        "content": "<p>the java FHIRPath implementation acccepts onsetPeriod only if set to lenient mode, and this is only set for the second pair of tests here.</p>",
        "id": 250843410,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630013480
    },
    {
        "content": "<p>So I don't think that the java implementation should accept onsetPeriod <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span></p>",
        "id": 250843445,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630013502
    },
    {
        "content": "<p>Ah - that's good news. I know we accepted in one of the very first drafts of FhirPath, but that must be years ago.</p>",
        "id": 250906272,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1630056864
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179266-fhirpath/topic/Handling.20choice.20elements/near/250736589\">said</a>:</p>\n<blockquote>\n<p>It depends on how you write them. onsertPeriod will be null, and that will propagate according to the rules here <a href=\"http://hl7.org/fhirpath/N1/#null-and-empty\">http://hl7.org/fhirpath/N1/#null-and-empty</a>. A constraint that returns null is a constraint that is not known to be true, and so is considered to have failed</p>\n</blockquote>\n<p>Hmm that's bad for IGs which have relied on the output of the validator. There are a lot of profils which can not be changed in a short time and that change immediately will make them faulty . What about a transition phase in which both approaches will work?</p>",
        "id": 251341592,
        "sender_full_name": "Maximilian Reith",
        "timestamp": 1630393784
    },
    {
        "content": "<p>what's an example?</p>",
        "id": 251341777,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1630393897
    },
    {
        "content": "<p>I will ask them if i could use there example...guess i can reply today</p>",
        "id": 251342348,
        "sender_full_name": "Maximilian Reith",
        "timestamp": 1630394306
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179266-fhirpath/topic/Handling.20choice.20elements/near/251341777\">said</a>:</p>\n<blockquote>\n<p>what's an example?</p>\n</blockquote>\n<p>okay we have serveral interfaces in which this problem takes place. All of these interfaces are wide spread and cannot be  updated shortly. </p>\n<p>e.g. An interface for a certificate of incapacity for work<br>\n<a href=\"https://simplifier.net/eau/kbvpreaubundle\">https://simplifier.net/eau/kbvpreaubundle</a></p>\n<div class=\"codehilite\"><pre><span></span><code>      &lt;constraint&gt;\n        &lt;key value=&quot;angabeAUseitErstbescheinigung&quot; /&gt;\n...\n        &lt;expression value=&quot;.........**onsetPeriod**.start.exists()        )&quot; /&gt;\n        &lt;source value=&quot;https://fhir.kbv.de/StructureDefinition/KBV_PR_EAU_Bundle&quot; /&gt;\n      &lt;/constraint&gt;\n</code></pre></div>\n<p>e.g. An interface for prescriptons<br>\n<a href=\"https://simplifier.net/erezept/kbvprerpprescription\">https://simplifier.net/erezept/kbvprerpprescription</a></p>\n<div class=\"codehilite\"><pre><span></span><code>      &lt;constraint&gt;\n        &lt;key value=&quot;-erp-angabeUnfallbetrieb&quot; /&gt;\n...\n        &lt;expression value=&quot;extension(&#39;unfallkennzeichen&#39;).**valueCoding**.code = &#39;2&#39; implies extension(&#39;unfallbetrieb&#39;).exists()&quot; /&gt;\n        &lt;source value=&quot;https://fhir.kbv.de/StructureDefinition/KBV_PR_ERP_Prescription&quot; /&gt;\n      &lt;/constraint&gt;\n</code></pre></div>\n<p>e.g. An interface for vaccinations<br>\n<a href=\"https://simplifier.net/im1x0/kbvprmiovaccinationrecordprime\">https://simplifier.net/im1x0/kbvprmiovaccinationrecordprime</a></p>\n<div class=\"codehilite\"><pre><span></span><code>       &lt;constraint&gt;\n        &lt;key value=&quot;Occurrence&quot; /&gt;\n....\n        &lt;expression value=&quot;**occurrenceDateTime**.toString().length()&amp;gt;=10&quot; /&gt;\n        &lt;source value=&quot;https://fhir.kbv.de/StructureDefinition/KBV_PR_MIO_Vaccination_Record_Prime&quot; /&gt;\n      &lt;/constraint&gt;\n</code></pre></div>\n<p>e.g. An interface for medical records for children<br>\n<a href=\"https://simplifier.net/uh1x0/kbvprmiocmrobservationu1u3datetimeofbirth\">https://simplifier.net/uh1x0/kbvprmiocmrobservationu1u3datetimeofbirth</a></p>\n<div class=\"codehilite\"><pre><span></span><code>      &lt;constraint&gt;\n        &lt;key value=&quot;date-1&quot; /&gt;\n...\n        &lt;expression value=&quot;***valueDateTime***.toString().length()&amp;gt;=16&quot; /&gt;\n        &lt;source value=&quot;https://fhir.kbv.de/StructureDefinition/KBV_PR_MIO_CMR_Observation_U1_U3_Date_Time_of_Birth|1.0.1&quot; /&gt;\n      &lt;/constraint&gt;\n</code></pre></div>\n<p>a lot more examples are available....And a lot more interfaces will probably face such problems.</p>\n<p>In this case a transition phase up to 01.07.2022 is necessary</p>",
        "id": 251373843,
        "sender_full_name": "Maximilian Reith",
        "timestamp": 1630411794
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <br>\ni added your reference afterwards, so it may not have worked. This is an important topic for us.</p>",
        "id": 251543038,
        "sender_full_name": "Maximilian Reith",
        "timestamp": 1630496112
    },
    {
        "content": "<p>By the way: The first bracket looks a bit weird or not?<br>\nis <a href=\"https://www.hl7.org/fhir/fhirpath.html#polymorphism\">https://www.hl7.org/fhir/fhirpath.html#polymorphism</a> :<br>\n(Observation.value as Quantity).unit</p>\n<p>should be?<br>\nObservation.(value as Quantity).unit</p>",
        "id": 251833914,
        "sender_full_name": "Maximilian Reith",
        "timestamp": 1630654237
    },
    {
        "content": "<blockquote>\n<p>Observation.(value as Quantity).unit</p>\n</blockquote>\n<p>I think not.  <code>as</code> (and <code>in</code>) are both functions <em>and</em> operators in fhirpath.  you could do <code>(Observation.value as Quantity).unit</code> or <code>Observation.value.as(Quantity).unit</code> but <code>Observation.(value as Quantity).unit</code> doesn't look right to me</p>",
        "id": 251864490,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1630668097
    },
    {
        "content": "<p>okay thanks</p>",
        "id": 252133538,
        "sender_full_name": "Maximilian Reith",
        "timestamp": 1630910918
    },
    {
        "content": "<p>the validator might not work properly in context of an extension</p>\n<p>We have a chance to update one of our interfaces, so i tried to correct this constraint:</p>\n<p>FHIR-Profile_V1.0.2\\KBV_PR_ERP_Prescription_ConstraintsNeu.xml (in attached zip)</p>\n<p>In line 599 to 612 two variants of this constraint are available:  </p>\n<p>This part is working properly, but this my be outdated in future: <br>\n(extension('https://fhir.kbv.de/StructureDefinition/KBV_EX_ERP_DosageFlag').empty() or <strong>extension('https://fhir.kbv.de/StructureDefinition/KBV_EX_ERP_DosageFlag').value.as(Boolean)</strong>=false) implies text.empty()</p>\n<p>The second is not working: <br>\n(extension('https://fhir.kbv.de/StructureDefinition/KBV_EX_ERP_DosageFlag').empty() or <strong>(extension('https://fhir.kbv.de/StructureDefinition/KBV_EX_ERP_DosageFlag').value as Boolean)=false</strong>) implies text.empty()</p>\n<p>Version 5.5.1<br>\njava -jar validator_cli.jar -ig FHIR-Profile_V1.0.2 -recurse -version 4.0.1 tset1.xml <br>\n<a href=\"/user_uploads/10155/auDhM3V8nfrqt40n5DNH8uIF/FHIR-Profile_V1.0.2.zip\">FHIR-Profile_V1.0.2.zip</a></p>",
        "id": 252257434,
        "sender_full_name": "Maximilian Reith",
        "timestamp": 1630996101
    },
    {
        "content": "<p>Could somebody confirm this?</p>",
        "id": 252493641,
        "sender_full_name": "Maximilian Reith",
        "timestamp": 1631119522
    },
    {
        "content": "<p>can you provide a whole test case - an instance and a profile?</p>",
        "id": 253230789,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631617030
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195854\">@Maximilian Reith</span></p>",
        "id": 253230795,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631617035
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <br>\nyes of course. it is already in the attached zip (3 posts up). tset1.xml is the instance and the profile is in the zip too in directory FHIR-Profile_V1.0.2\\KBV_PR_ERP_Prescription_ConstraintsNeu.</p>",
        "id": 253367353,
        "sender_full_name": "Maximilian Reith",
        "timestamp": 1631686286
    },
    {
        "content": "<p>just use the mentioned command: java -jar validator_cli.jar -ig FHIR-Profile_V1.0.2 -recurse -version 4.0.1 tset1.xml</p>",
        "id": 253367429,
        "sender_full_name": "Maximilian Reith",
        "timestamp": 1631686344
    },
    {
        "content": "<p>i will provide a test case here: <a href=\"https://github.com/FHIR/fhir-test-cases/tree/master/validator\">https://github.com/FHIR/fhir-test-cases/tree/master/validator</a></p>",
        "id": 253528934,
        "sender_full_name": "Maximilian Reith",
        "timestamp": 1631768086
    },
    {
        "content": "<p>I talked to <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> and <span class=\"user-mention\" data-user-id=\"193430\">@Alexander Zautke</span> . They told me a \"lenient\"-mode is available in HAPI. That would be a solution for us if it supports all type[x] (e.g. value[x], effected[x]) elements. But the lenient-mode needs to be integrated into the cli-validator, before the \"hard\" type[x]-check is implemented. Even HL7-Germany is affected by this issue.</p>",
        "id": 255060132,
        "sender_full_name": "Maximilian Reith",
        "timestamp": 1632753923
    },
    {
        "content": "<p>(and this one too @Lloyd)<br>\n<a href=\"/user_uploads/10155/lP2gtwjINLzDEXnRPdlsIukN/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/lP2gtwjINLzDEXnRPdlsIukN/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/lP2gtwjINLzDEXnRPdlsIukN/image.png\"></a></div>",
        "id": 274594777,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1646768236
    }
]