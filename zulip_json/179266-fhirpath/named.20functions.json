[
    {
        "content": "<p>I've been wondering whether we need to create the facility to define named functions to allow for query re-use...?</p>",
        "id": 153951756,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1523427201
    },
    {
        "content": "<p>Yes, I have been thinking about that - and the .NET fhirpath engine internally could handle custom functions. We don't have a syntax for it though.  Would we want to parameterize the queries?</p>",
        "id": 153952246,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1523631569
    },
    {
        "content": "<p>don't know, probably</p>",
        "id": 153952315,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1523652299
    },
    {
        "content": "<p>The dotnet one does handle custom functions, I've added a few for my own use in my server.</p>",
        "id": 153952770,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1524004188
    },
    {
        "content": "<p>(and the fhirpath tester)<br>\nWithout needing to change the actual engine too... thanks Ewout!</p>",
        "id": 153952771,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1524004215
    },
    {
        "content": "<p>so have I. But there needs to be a fhirpath syntax to do it</p>",
        "id": 153952775,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524004826
    },
    {
        "content": "<p>really?<br>\nIn the dotnet one it behaves as though its a native part of the grammar.</p>",
        "id": 153952779,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1524005005
    },
    {
        "content": "<p>We have access to add the function into the symbol table.</p>",
        "id": 153952781,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1524005025
    },
    {
        "content": "<p>but can you define a function without access to the code?</p>",
        "id": 153952782,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524005065
    },
    {
        "content": "<p>(pseudocode) SymbolTable.Add(\"LuhnTest\", (a) =&gt; { return StaticFunctons.LuhnTest(a);});</p>",
        "id": 153952783,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1524005120
    },
    {
        "content": "<p>Yes, have access to the symbol table to add the functionname, and callback for execution</p>",
        "id": 153952785,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1524005153
    },
    {
        "content": "<p>but you can only do that in code - that's my point. There should be a way to do in fhirpath syntax when defining invariants etc</p>",
        "id": 153952788,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524005219
    },
    {
        "content": "<p>The actual code looks like this</p>\n<div class=\"codehilite\"><pre><span></span>// Custom LUHN Checksum algorithm\n// https://rosettacode.org/wiki/Luhn_test_of_credit_card_numbers#C.23\nHl7.FhirPath.FhirPathCompiler.DefaultSymbolTable.Add(&quot;LuhnTest&quot;, (string str) =&gt;\n{\n        return str.LuhnCheck();\n});\n</pre></div>",
        "id": 153952789,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1524005254
    },
    {
        "content": "<p>Yeah, in code, just not the fhirpath engine code.</p>",
        "id": 153952790,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1524005267
    },
    {
        "content": "<p>Do you mean define a custom function using fhirpath as its definition?</p>",
        "id": 153952793,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1524005312
    },
    {
        "content": "<p>(or similar)</p>",
        "id": 153952794,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1524005318
    },
    {
        "content": "<p>To define functions, you need libraries, right?</p>",
        "id": 153953496,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1524423050
    },
    {
        "content": "<p>CQL supports this already, would it work to use CQL as the container for FHIRPath function definitions?</p>",
        "id": 153953497,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1524423112
    },
    {
        "content": "<p>smells too heavy weight to me</p>",
        "id": 153953501,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524443457
    }
]