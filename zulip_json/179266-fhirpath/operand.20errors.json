[
    {
        "content": "<p>I am getting an error message like:<br>\n<code>Problem processing expression (derivation = 'constraint') or (kind = 'logical') or (url = 'http://hl7.org/fhir/StructureDefinition/'+id) in profile http://hl7.org/fhir/StructureDefinition/StructureDefinition path StructureDefinition: Error performing +: right operand has no value</code><br>\nfrom the validation engine because there's no value for <code>id</code>. But this is coming as an exception rather than a validation error. Is it valid to treat any <code>PathEngineException</code> as a validation error, or should the constraint check that <code>id</code> has a value before using it?</p>",
        "id": 153965999,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1527729781
    },
    {
        "content": "<p>In general, an operator in FHIRPath will return empty (<code>{ }</code>) if any of its arguments are empty, so I would think the concatenate there ought to return an empty, rather than throw an exception like that.</p>",
        "id": 153966002,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1527730517
    },
    {
        "content": "<p>That's certainly not the behaviour of FHIRPathEngine.java</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">private</span> <span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">Base</span><span class=\"o\">&gt;</span> <span class=\"nf\">opPlus</span><span class=\"o\">(</span><span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">Base</span><span class=\"o\">&gt;</span> <span class=\"n\">left</span><span class=\"o\">,</span> <span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">Base</span><span class=\"o\">&gt;</span> <span class=\"n\">right</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"n\">PathEngineException</span> <span class=\"o\">{</span>\n  <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">left</span><span class=\"o\">.</span><span class=\"na\">size</span><span class=\"o\">()</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"o\">)</span>\n    <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"n\">PathEngineException</span><span class=\"o\">(</span><span class=\"s\">&quot;Error performing +: left operand has no value&quot;</span><span class=\"o\">);</span>\n  <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">left</span><span class=\"o\">.</span><span class=\"na\">size</span><span class=\"o\">()</span> <span class=\"o\">&gt;</span> <span class=\"mi\">1</span><span class=\"o\">)</span>\n    <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"n\">PathEngineException</span><span class=\"o\">(</span><span class=\"s\">&quot;Error performing +: left operand has more than one value&quot;</span><span class=\"o\">);</span>\n  <span class=\"c1\">// ...</span>\n</pre></div>",
        "id": 153966004,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1527731012
    },
    {
        "content": "<p>I believe that this is the correct implementation of + as defined in the fhirpath specificatino</p>",
        "id": 153966042,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527754249
    },
    {
        "content": "<p>I believe we argued about this</p>",
        "id": 153966043,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527754257
    },
    {
        "content": "<p>In that case the constraint needs re-writing as:<br>\n<code>(derivation = 'constraint') or (kind = 'logical') or (exists(id) and url = 'http://hl7.org/fhir/StructureDefinition/'+id)</code><br>\n?</p>",
        "id": 153966049,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1527754855
    },
    {
        "content": "<p>But 4.4.1 of fhirpath says</p>\n<blockquote>\n<p>For functions or operators that take a single values as input, this means in general if the input is empty, then the result will be empty as well.</p>\n</blockquote>",
        "id": 153966050,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1527754988
    },
    {
        "content": "<ul>\n<li>has a different definition, I think</li>\n</ul>",
        "id": 153966051,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527755080
    },
    {
        "content": "<blockquote>\n<p>6.6.7. &amp; (string concatenation)<br>\nFor strings, will concatenate the strings, where an empty operand is taken to be the empty string. This differs from + on two strings, which will result in an empty collection when one of the operands is empty.<br>\n<a href=\"http://hl7.org/fhirpath/#math\" target=\"_blank\" title=\"http://hl7.org/fhirpath/#math\">http://hl7.org/fhirpath/#math</a></p>\n</blockquote>",
        "id": 153966052,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1527755141
    },
    {
        "content": "<p>guess I should change that to &amp; not + then</p>",
        "id": 153966053,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527755368
    },
    {
        "content": "<p>which will create a different bug, no?  It would result in <code>url</code> being compared with <code>\"http://hl7.org/fhir/StructureDefinition/\"</code>when there's no <code>id</code></p>",
        "id": 153966054,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1527755536
    },
    {
        "content": "<p>My take on the code above is that the second test is correct - more than one value is an error, but that the first case should result in the empty list.</p>",
        "id": 153966167,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1527805864
    }
]