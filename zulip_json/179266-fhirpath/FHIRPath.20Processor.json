[
    {
        "content": "<p>I'm giving serious thought to writing an open source JavaScript FHIRPath processor (engine?).  I am aware of the one <a href=\"https://github.com/jmandel/fhirpath.js\" target=\"_blank\" title=\"https://github.com/jmandel/fhirpath.js\">https://github.com/jmandel/fhirpath.js</a>, but was informed by Josh that that one is neither complete nor a good starting point.  I was able to generate a working JavaScript parser from the ANTLR grammar, but before I get too far into what seems to be a big task that I probably don't fully understand, I would like to ask whether anyone else has worked on or is working on an open source JavaScript FHIRPath processor.  If so, perhaps we could collaborate?</p>",
        "id": 153976184,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1531954105
    },
    {
        "content": "<p>I hope, i will have time to help you with it - i promised David Hay sometimes to finish it :)</p>",
        "id": 153976185,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1531954210
    },
    {
        "content": "<p>Year ago i did one in clojure</p>",
        "id": 153976186,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1531954257
    },
    {
        "content": "<p>Given that fhirpath is a subset (of sorts) of CQL, it might be possible to leverage the <a href=\"https://github.com/cqframework/cql-execution/\" target=\"_blank\" title=\"https://github.com/cqframework/cql-execution/\">cql-execution</a> project, which is currently in CoffeeScript but published to npm as transpiled javascript.  (We're also working on a port to ES6, but that's a little stalled right now.)</p>",
        "id": 153976188,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1531954503
    },
    {
        "content": "<p>i would prefer to make it standalone</p>",
        "id": 153976189,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1531954593
    },
    {
        "content": "<p>That said, there would be some effort involved there.  Some things you'd want to be aware of:<br>\n1. It actually operates on the ELM JSON, so you'd still need the Java CQL-to-ELM translator -- which I <em>think</em> supports fhirpath?  <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span>?<br>\n2. We don't have a FHIR STU3 (or R4) data binding yet -- although it would be fairly easy to update <a href=\"https://github.com/cqframework/cql-exec-fhir/\" target=\"_blank\" title=\"https://github.com/cqframework/cql-exec-fhir/\">cql-exec-fhir</a> to support it.<br>\n3. There might be some fhirpath operators that aren't implemented yet, as it's mainly been used w/ CQM and CDS use cases.</p>",
        "id": 153976190,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1531954680
    },
    {
        "content": "<p>Ha.  Yeah, with all of those caveats, I can understand if you'd like a smaller more focused implementation.  But I thought I'd put it out there just in case.</p>",
        "id": 153976191,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1531954724
    },
    {
        "content": "<p>FHIRpath implementation requires also some FHIR metadata, so i think we can provide this metadata not thro the code-generation, but directly as a data - so implementation will be version agnostic - less efforts to support.</p>",
        "id": 153976192,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1531955216
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> , yes, the translator supports FHIRPath, and there are unit tests on the engine that flex that aspect.</p>",
        "id": 153976197,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1531955543
    },
    {
        "content": "<p>Just to clarify: Regarding the unit tests, you're talking about the Java CQL engine.  The CoffeeScript engine doesn't have unit tests for any fhirpath specific stuff.  These guys are looking for a JavaScript implementation of fhirpath.</p>",
        "id": 153976199,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1531955972
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span>  do we have good test cases for FHIRpath in JSON, covering most of specification?</p>",
        "id": 153976205,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1531959577
    },
    {
        "content": "<p>Last time i was looking for test cases - they were only in XML :(</p>",
        "id": 153976206,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1531959626
    },
    {
        "content": "<p>Ideally it can be just data like <code> {resource: {....}, fhirpath: 'expression', result: value}</code></p>",
        "id": 153976207,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1531959692
    },
    {
        "content": "<p>good test data here:</p>",
        "id": 153976213,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531960368
    },
    {
        "content": "<p>build\\tests\\resources\\tests-fhir-r4.xml  (in FHIR svn)</p>",
        "id": 153976214,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531960406
    },
    {
        "content": "<p>tests themselves are in XML, but can be run on the json resources</p>",
        "id": 153976215,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531960420
    },
    {
        "content": "<p>it's not that hard to read xml ;-)</p>",
        "id": 153976216,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531960441
    },
    {
        "content": "<p><a href=\"https://www.w3schools.com/xml/dom_intro.asp\" target=\"_blank\" title=\"https://www.w3schools.com/xml/dom_intro.asp\">https://www.w3schools.com/xml/dom_intro.asp</a><br>\nif you really must do it from the JavaScript side.</p>",
        "id": 153976217,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1531960445
    },
    {
        "content": "<p>Its is only for testing afterall... :)</p>",
        "id": 153976218,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1531960495
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> why do not provide both xml &amp; json versions like for other resources?</p>",
        "id": 153976219,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1531960503
    },
    {
        "content": "<p>because the tests are not a resource.</p>",
        "id": 153976220,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531960532
    },
    {
        "content": "<p>they do nominate an xml file as input, but in no case is the outcome dependent on using the xml not the json as input</p>",
        "id": 153976221,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531960579
    },
    {
        "content": "<p>may be adopt <a href=\"https://www.hl7.org/fhir/testscript.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/testscript.html\">https://www.hl7.org/fhir/testscript.html</a> for that?</p>",
        "id": 153976222,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1531960711
    },
    {
        "content": "<p>maybe but it would be way overkill for what's a simple thing at the moment.</p>",
        "id": 153976223,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531960745
    },
    {
        "content": "<p>just use an xml--&gt; json translator on the fly ...</p>",
        "id": 153976224,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531960761
    },
    {
        "content": "<p>ok - but this is again JSON discrimination :)</p>",
        "id": 153976225,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1531960797
    },
    {
        "content": "<p>it's really simple: json doesn't have comments.</p>",
        "id": 153976226,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531960815
    },
    {
        "content": "<p>like a car without doors</p>",
        "id": 153976227,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531960846
    },
    {
        "content": "<p>XML harassment: let's switch to yaml :)</p>",
        "id": 153976228,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1531960873
    },
    {
        "content": "<p>it has comments</p>",
        "id": 153976229,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1531960880
    },
    {
        "content": "<p>Go plain text with pipe delimiters?<br>\n(kidding of course)</p>",
        "id": 153976230,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1531960906
    },
    {
        "content": "<p><a href=\"https://plus.google.com/+DouglasCrockfordEsq/posts/RK8qyGVaGSr\" target=\"_blank\" title=\"https://plus.google.com/+DouglasCrockfordEsq/posts/RK8qyGVaGSr\">https://plus.google.com/+DouglasCrockfordEsq/posts/RK8qyGVaGSr</a></p>",
        "id": 153976232,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1531961039
    },
    {
        "content": "<p>yes he was wrong then and he's still wrong now. And JSMin is a javascript thing.</p>",
        "id": 153976233,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531961120
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span>  no - next step is binary formats like protobuf, which go father then just pipe delimiters. And the whole IT industry is on JSON side - XML is dead.</p>",
        "id": 153976234,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1531961163
    },
    {
        "content": "<p>if we started using // for comments in JSON.... everyone not using javascript will need a new parser</p>",
        "id": 153976237,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531961332
    },
    {
        "content": "<p><a href=\"https://github.com/FasterXML/jackson-core/wiki/JsonParser-Features#support-for-non-standard-data-format-constructs\" target=\"_blank\" title=\"https://github.com/FasterXML/jackson-core/wiki/JsonParser-Features#support-for-non-standard-data-format-constructs\">https://github.com/FasterXML/jackson-core/wiki/JsonParser-Features#support-for-non-standard-data-format-constructs</a></p>",
        "id": 153976240,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1531961434
    },
    {
        "content": "<p><a href=\"https://stackoverflow.com/questions/10316997/how-can-i-read-json-with-comment-with-json-net\" target=\"_blank\" title=\"https://stackoverflow.com/questions/10316997/how-can-i-read-json-with-comment-with-json-net\">https://stackoverflow.com/questions/10316997/how-can-i-read-json-with-comment-with-json-net</a></p>",
        "id": 153976242,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1531961512
    },
    {
        "content": "<p>I would also have to read the file with 2 other parsers</p>",
        "id": 153976243,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531961624
    },
    {
        "content": "<p>It should be easy enough to convert XML test cases to JSON,--or for that matter to parse the XML in JavaScript.  I see the XML version at <a href=\"https://github.com/hl7-fhir/fhir-svn/blob/master/tests/resources/tests-fhir-r4.xml\" target=\"_blank\" title=\"https://github.com/hl7-fhir/fhir-svn/blob/master/tests/resources/tests-fhir-r4.xml\">https://github.com/hl7-fhir/fhir-svn/blob/master/tests/resources/tests-fhir-r4.xml</a>.  It references a \"patient-example.xml\" which I don't see under tests/resources/.  Where is that?</p>",
        "id": 153976465,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1532031675
    },
    {
        "content": "<p>They are included <a href=\"https://github.com/FHIR/fluentpath/blob/master/spec/tests.zip\" target=\"_blank\" title=\"https://github.com/FHIR/fluentpath/blob/master/spec/tests.zip\">here</a> (at least for the STU2, looks like there ought to be STU3 and R4 versions included as well).</p>",
        "id": 153976467,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532031912
    },
    {
        "content": "<p>those files are part of the FHIR Spec</p>",
        "id": 153976472,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532032033
    },
    {
        "content": "<p>(therefore are available as both xml and json :)  )</p>",
        "id": 153976532,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1532037504
    }
]