[
    {
        "content": "<p>In Composition.section (where(code.coding.system='<a href=\"http://loinc.org\" target=\"_blank\" title=\"http://loinc.org\">http://loinc.org</a>' and code.coding.code='48765-2')) I want to ensure that if there are any instances of Composition.section.entry at least one of them is an AlleryIntolerance.<br>\nI have not been able to test FHIRpath statements with resolve().<br>\nShould this invariant work?</p>\n<blockquote>\n<p>Composition.section.where(code.coding.system='<a href=\"http://loinc.org\" target=\"_blank\" title=\"http://loinc.org\">http://loinc.org</a>' and code.coding.code='48765-2').entry.exists() implies Composition.section.where(code.coding.system='<a href=\"http://loinc.org\" target=\"_blank\" title=\"http://loinc.org\">http://loinc.org</a>' and code.coding.code='48765-2').entry.where(resolve().is(AllergyIntolerance)).exists()</p>\n</blockquote>\n<p>How could I test it?</p>",
        "id": 157165666,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1548829075
    },
    {
        "content": "<p>Anyone working on this? i have a similar question on how to test resolve() and conformTo() in Fhirpath.  I am trying to create a invariant which enforces the <em>reference</em> of a <em>entry</em> in a Composition to be an Observation(a profile sitting elsewhere) and this Observation has a <em>valuecodableconcept</em>in it  with '1200661000168109' as a <em>code</em>. I have written a Fhirpath which looks like this : <br>\n<em>entry.resolve().conformsTo(‘http://some.observation.profile’) and entry.resolve().all($this is valueCodeableConcept implies code = 1200661000168109)</em><br>\ncan anyone please help / direct me to a way we can test resolve() and conformsTo()?</p>",
        "id": 159125529,
        "sender_full_name": "Satya Yelisetti",
        "timestamp": 1550804814
    },
    {
        "content": "<p>the \"code = \" bit needs work. You can test by validating examples</p>",
        "id": 159126129,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1550805544
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191682\">@Richard Townley-O'Neill</span> , that should work, but you don't really need the first exists() implies bit, if a section with that code exists and the the entry for the section resolves to an instance of AllergyIntolerance, the exists() would return true.</p>",
        "id": 159391911,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1551147505
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192201\">@Satya Yelisetti</span> , <code>entry.where(resolve() is Observation and resolve().conformsTo('http://some.observation.profile') and resolve().where(code.coding.system = 'http://snomed.info/sct' and code.coding.code = '1200661000168109').exists())</code></p>",
        "id": 159392185,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1551147808
    }
]