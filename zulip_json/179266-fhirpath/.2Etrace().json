[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> I have a FHIRPath problem I'm trying to think my way through</p>",
        "id": 153973616,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530752458
    },
    {
        "content": "<p>take this FHIRPath:</p>",
        "id": 153973618,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530752515
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>contained.where(criteria).trace(&#39;unmatched&#39;).empty()\n</pre></div>",
        "id": 153973619,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530752533
    },
    {
        "content": "<p>I actually want, from the trace, a list of resource ids, not a list of resources</p>",
        "id": 153973620,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530752559
    },
    {
        "content": "<p>but I can't do this:</p>",
        "id": 153973621,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530752569
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>contained.where(criteria).id.trace(&#39;unmatched&#39;).empty()\n</pre></div>",
        "id": 153973622,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530752583
    },
    {
        "content": "<p>because then the empty() applies to the id collection, which mightn't be the same as the resource collection</p>",
        "id": 153973623,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530752609
    },
    {
        "content": "<p>we don't have syntax tricks for side branches, do we?</p>",
        "id": 153973624,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530752624
    },
    {
        "content": "<p>).select($this|id.trace().first().empty()</p>",
        "id": 153973625,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1530752827
    },
    {
        "content": "<p>I don't follow that</p>",
        "id": 153973628,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530753378
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>&lt;Patient xmlns=&quot;http://hl7.org/fhir&quot;&gt;\n&lt;name&gt;&lt;family value=&quot;Pos&quot;/&gt;\n&lt;given value=&quot;brian&quot;/&gt;\n&lt;/name&gt;\n&lt;birthDate value=&quot;1980&quot;/&gt;\n&lt;/Patient&gt;\n</pre></div>\n\n\n<p>With the above example resource, the below expression will trace Brian, but return the family as the selected node at the end,</p>\n<div class=\"codehilite\"><pre><span></span>name.select($this | given.trace(&#39;f&#39;)).first().family\n</pre></div>",
        "id": 153973636,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1530765579
    },
    {
        "content": "<p>ok I understand that, but I don't really see how this applies to the question I asked</p>",
        "id": 153973678,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530792560
    },
    {
        "content": "<p>Maybe this:</p>\n<div class=\"codehilite\"><pre><span></span>contained.where(criteria).select(iff($this.id.trace().empty(), $this, $this)).empty()\n</pre></div>",
        "id": 153973755,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1530801958
    },
    {
        "content": "<p>clever</p>",
        "id": 153973846,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530817318
    },
    {
        "content": "<p>but is this a language problem?</p>",
        "id": 153973847,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530817327
    },
    {
        "content": "<p>I think it's more a problem with trace, in that it's not flexible enough to describe what you want to output. A fix for trace would be to just add an optional parameter that allows you to shape the output. You could potentially build up a result that had both what you wanted and what you wanted to trace, but that would be forcing you to change the structure of an invariant just to add debugging information.</p>",
        "id": 153973851,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1530817527
    },
    {
        "content": "<p>that's certainly true about trace. I guess we can fix that... it's only in FHIR isn't it (surely you need it elsewhere...)</p>",
        "id": 153973872,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530818199
    },
    {
        "content": "<p>Trace is in the base FHIRPath spec: <a href=\"http://hl7.org/fhirpath/2018May/index.html#utility-functions\" target=\"_blank\" title=\"http://hl7.org/fhirpath/2018May/index.html#utility-functions\">http://hl7.org/fhirpath/2018May/index.html#utility-functions</a></p>",
        "id": 153973892,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1530820919
    },
    {
        "content": "<p>oh. yes. so are able to change it to add a selector?</p>",
        "id": 153973893,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530821249
    },
    {
        "content": "<p>(that's a process question)</p>",
        "id": 153973894,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530821297
    },
    {
        "content": "<p>Not seeing any comments that would support it</p>",
        "id": 153973905,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1530823386
    },
    {
        "content": "<p>no. it's a discovered issue</p>",
        "id": 153973907,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530823759
    },
    {
        "content": "<p>I guess we could add it to <a href=\"http://build.fhir.org/fhirpath.html\" target=\"_blank\" title=\"http://build.fhir.org/fhirpath.html\">http://build.fhir.org/fhirpath.html</a> as a FHIR specific extension and roll it up to the main FHIRPath spec next time round</p>",
        "id": 153973908,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530823808
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17455\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17455\">GF#17455</a></p>",
        "id": 153973913,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1530825945
    },
    {
        "content": "<p>Yeah, Bryn's answer is much better.</p>",
        "id": 153973916,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1530826429
    },
    {
        "content": "<p>ok, I added a selector for trace() to the FHIRPath spec</p>",
        "id": 153974257,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531091719
    },
    {
        "content": "<p>I also added a terminology service API (to <a href=\"http://build.fhir.org/fhirpath.html\" target=\"_blank\" title=\"http://build.fhir.org/fhirpath.html\">http://build.fhir.org/fhirpath.html</a>)</p>",
        "id": 153974258,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531091736
    }
]