[
    {
        "content": "<p>I am covering FHIRPath implementation with tests and in the FHIRPath test suite there is a test which says 1.2 / 1.8 = 0.66666667. Using my implementation I am getting a couple of sixes more. Is there any expectation that = has some sort of built-in tolerance? The fhirpath.js implementation passes this one, but I have searched the specifications on any kind of tolerance rules and haven't found anything so far.</p>",
        "id": 267085445,
        "sender_full_name": "Tilo Christ",
        "timestamp": 1641488478
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span></p>",
        "id": 267095955,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1641493589
    },
    {
        "content": "<p>We say in the description of the <a href=\"https://hl7.org/fhirpath/#decimal\">Decimal type</a> that implementations must support at least 8 digits of precision. They can support more, but are not required to. We also say in the <a href=\"https://hl7.org/fhirpath/#equivalent\">Equivalent (<code>~</code>) operator</a> for decimals that there is tolerance based on the least-precise operand, but for <a href=\"https://hl7.org/fhirpath/#equality\">Equal (<code>=</code>)</a> is it strictly value-based, so that test really ought to have a <code>.round(8)</code> on the left-hand side.</p>",
        "id": 267111423,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1641501657
    }
]