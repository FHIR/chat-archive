[
    {
        "content": "<p>I'm trying to decide how best to structure a complex path expression to do a calculation. Specifically, I'm using it in a Measure to create a MeasureReport. The input resource is a Bundle with multiple QuestionnaireResponses as entries, and some of my calculations require me to pull specific questions from each of the questionnaires. My issue is that sometimes the questions may be answered and other times they won't be. If they're not, then I need to not count them in my calculation. As an example, assume I'm working with 4 questions. They each can have values from 1-5, or you can choose not to answer (in this case, it is not associated with a numerical value). If either of the first two questions are 2-5, you get 3 points, if either of the 2nd questions are 3-5, you get 2 points. So my expression looks something like</p>\n<div class=\"codehilite\"><pre><span></span><code>(entry.resource.ofType(QuestionnaireResponse).item.where(linkId.contains(&#39;/question1&#39;)).answer.valueCoding.extension.valueDecimal.select(iif($this &gt; 1, 1, 0)) + entry.resource.ofType(QuestionnaireResponse).item.where(linkId.contains(&#39;/question2&#39;)).answer.valueCoding.extension.valueDecimal.select(iif($this &gt; 1, 1, 0))).select(iif($this &gt; 0, 3, 0)) + (entry.resource.ofType(QuestionnaireResponse).item.where(linkId.contains(&#39;/question3&#39;)).answer.valueCoding.extension.valueDecimal.select(iif($this &gt; 2, 1, 0)) + entry.resource.ofType(QuestionnaireResponse).item.where(linkId.contains(&#39;/question4&#39;)).answer.valueCoding.extension.valueDecimal.select(iif($this &gt; 2, 1, 0))).select(iif($this &gt; 0, 2, 0))\n</code></pre></div>\n<p>It's verbose, but it does the job. Except when something is missing. If there is no answer for question 2 (or the answer is, \"I select not to answer\", which shows up as a valueString), then the value for the second item is [], which causes the entire expression to return []. I need to somehow check if it's an empty set, and if so, turn it into 0. Is there a suggested method for doing this? I thought about something like:</p>\n<div class=\"codehilite\"><pre><span></span><code>entry.resource.ofType(QuestionnaireResponse).item.where(linkId.contains(&#39;/question2&#39;)).answer.valueCoding.extension.valueDecimal.select(iif($this &gt; 1, 1, 0))).select(iif($this &gt; 0, 3, 0)).select(iif($this.exists(), $this, 0))\n</code></pre></div>\n<p>But it didn't look like this was allowed in the FHIRPath spec. Does anyone have a suggestion on how this should be done?</p>",
        "id": 270863254,
        "sender_full_name": "Grey Faulkenberry",
        "timestamp": 1644114994
    },
    {
        "content": "<p>Are all those questions from the same questionnaire?</p>",
        "id": 270916276,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1644187667
    },
    {
        "content": "<p>For how you've described the clause, I'd be using count() or exists() along with a where clause instead of the iif right at the end.<br>\nSomething more like this<br>\niif(entry.resource.ofType(QuestionnaireResponse).item.where(linkId.contains('/question3')).answer.valueCoding.extension.where(valueDecimal &gt; 2).exists(), 1, 0)</p>",
        "id": 270916753,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1644188317
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> , no, they're not from the same Questionnaire. So if I'm trying to get the value from the question, I would be using something like</p>\n<div class=\"codehilite\"><pre><span></span><code>iif(entry.resource.ofType(QuestionnaireResponse).item.where(linkId.contains(&#39;/question3&#39;)).answer.valueCoding.extension.where(valueDecimal &gt; 2).exists(), entry.resource.ofType(QuestionnaireResponse).item.where(linkId.contains(&#39;/question3&#39;)).answer.valueCoding.extension.valueDecimal, 0)\n</code></pre></div>",
        "id": 270922739,
        "sender_full_name": "Grey Faulkenberry",
        "timestamp": 1644196980
    },
    {
        "content": "<p>That should work.</p>",
        "id": 270922885,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1644197227
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 270923205,
        "sender_full_name": "Grey Faulkenberry",
        "timestamp": 1644197660
    }
]