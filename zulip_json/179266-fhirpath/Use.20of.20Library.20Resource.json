[
    {
        "content": "<p>Anyone used the library resource to contain fhirpath expressions?<br>\n<span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> I've seen the examples that show including <code>.cql</code> files encoded in there, what I'm looking for is including an <code>expression</code> datatype used as an extension property in there.<br>\nAs the expression itself is the content...<br>\n(Happy for the name and description to come out into the real props)</p>\n<div class=\"codehilite\"><pre><span></span><code>          &lt;valueExpression&gt;\n            &lt;description value=&quot;Practitioner from Context&#39;s Medicare Provider number&quot; /&gt;\n            &lt;name value=&quot;ContextPractitionerProviderNumber&quot; /&gt;\n            &lt;language value=&quot;text/fhirpath&quot; /&gt;\n            &lt;expression value=&quot;%LaunchPractitioner.identifier.where(system=&#39;http://ns.electronichealth.net.au/id/hi/prn&#39;).first().value&quot; /&gt;\n          &lt;/valueExpression&gt;\n</code></pre></div>\n\n\n<p>Or does this text need to be base64 encoded into the attachment content data?</p>",
        "id": 196696012,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1588798622
    },
    {
        "content": "<p>I've seen suggestions for using multiple content elements in this way, but that would still require base64 encoding of the expressions. If I understand what you're suggesting, it is to actually use extensions to add the expressions using the Expression data type, and then be able to reference those by name. I like that approach, and it would be a straightforward profile to define, then it would be referenced with a canonical, something like: <code>http://fhir.org/guides/example/Library/FHIRPathCollection#ContextPractitionerProviderNumber</code>, yes?</p>",
        "id": 196700508,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1588800638
    },
    {
        "content": "<p>The only thing that feels a little off about that is how would a system know to interpret the anchor part of that URL as a reference to an extension by the name.</p>",
        "id": 196700581,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1588800675
    },
    {
        "content": "<p>Other than that that's the behavior we would prescribe, of course :)</p>",
        "id": 196700614,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1588800696
    },
    {
        "content": "<p>I'll try it out just base64 ing the expression into some resources and see how it goes.</p>",
        "id": 196710289,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1588807435
    }
]