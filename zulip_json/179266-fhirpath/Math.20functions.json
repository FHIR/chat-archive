[
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=18501\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=18501\">GF#18501</a>, <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17842\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17842\">GF#17842</a>, <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17507\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17507\">GF#17507</a> suggest adding round(), sqrt(), log(), exp(), and pow(). For completeness we would also need floor(), ceiling(), truncate(), abs(), and ln(). Thoughts?</p>",
        "id": 157333470,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1549002767
    },
    {
        "content": "<ul>\n<li>max min</li>\n</ul>",
        "id": 157337543,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1549009461
    },
    {
        "content": "<p>It's a never ending list, it seems like it would be better in the core FHIRPath spec to say that libraries can be included for this kind of thing.</p>",
        "id": 157359473,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1549033936
    },
    {
        "content": "<p>Note that we can express max and min already with the aggregate function, so really I'm talking about the Math library functions here.</p>",
        "id": 157360703,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1549034788
    },
    {
        "content": "<p>I don't know that we need to include everything all at once, but at least for fhirpath.js, it would be trivial to support any of the functions in the browser's Math library (<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math\" target=\"_blank\" title=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math\">https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math</a>).  I have heard Clem McDonald ask about things like sin(x), cos(x), but I don't know offhand what would use those.</p>\n<p>To another point, saying \"libraries can be included\" makes me wonder how a Questionnaire author would include the libraries needed, or if that was not something the Questionnaire could control, whether there would be a point in writing a Questionnaire whose correct functioning depending on the choice by the system to include libraries.</p>",
        "id": 157365952,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1549039304
    },
    {
        "content": "<p>libraries are problematic because of what Paul says</p>",
        "id": 157381313,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1549051333
    },
    {
        "content": "<p>I agree the implementation is straightforward, and I'm not even concerned about specifying the semantics for this limited set, CQL already specifies exactly that set of operators. I'd just like to see some answer for how libraries are included because there will be requests for other operators. It'd be nice to be able to support that without having to change the spec.</p>",
        "id": 157383231,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1549052963
    },
    {
        "content": "<p>specifying how libraries are included will be an even bigger change...</p>",
        "id": 157384418,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1549053963
    },
    {
        "content": "<p>agree that's worth doing but think it's a bigger problem than we should handle at this point in the cycle</p>",
        "id": 157384441,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1549053988
    },
    {
        "content": "<p>Okay, so I'm hearing persuasive as the proposed disposition here. One more consideration though, should we add a \"Math\" section and mark it STU? I'm concerned that adding this many completely new functions to a spec going normative would be a challenge. Is there room to say, yes, but next cycle?</p>",
        "id": 157393408,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1549062060
    },
    {
        "content": "<p>right. add it as STU for fll stnadardization next time</p>",
        "id": 157438800,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1549142145
    },
    {
        "content": "<p>I'd like to include as many examples as I can of the use of the Math functions. Any examples involving the Math functions? .round(), .sqrt(), .exp(), .pow(), .log(), .ln(), etc.</p>",
        "id": 177435807,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1570318399
    },
    {
        "content": "<p>BMI, with height &amp; weight variables, rounded to 1 decimal place:  </p>\n<div class=\"codehilite\"><pre><span></span>(%weight/(%height.power(2))).round(1)\n</pre></div>",
        "id": 177544678,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1570471682
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span> !</p>",
        "id": 177544803,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1570471785
    }
]