[
    {
        "content": "<p>Hi all,<br>\nFHIRPath-newbee-question:<br>\n I have a definition for billing code 30110 in a ChargeItem resource that may not be billed in combination with the code 13250. So I need to make sure, the code 13250 does not appear in the current ChargeItem's Account. %context is supposed to be replaced with the instance of the  ChargeItem I want to validate at runtime.</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">&lt;applicability&gt;</span>\n        <span class=\"nt\">&lt;description</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Exclude: 13250&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;language</span> <span class=\"na\">value=</span><span class=\"s\">&quot;text/fhirpath&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;expression</span> <span class=\"na\">value=</span><span class=\"s\">&quot;ChargeItem.where(code=&#39;http://fhir.de/CodingSystem/kbv/ebm|13250&#39; and account=%context.account).count() = 0&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/applicability&gt;</span>\n</pre></div>\n\n\n<p>My syntax may be way off, but before dive deeper into the FHIRPath spec to I refine it: is this generally something you could do using FHIRPath without breaking it? Or am I too far gone here...?</p>",
        "id": 153956675,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1525720899
    },
    {
        "content": "<p>The difficulty will be accessing other ChargeItems from the FHIRPath. If there's a reference in the current element, you could resolve it. Where will this expression be defined?</p>",
        "id": 153956740,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1525723824
    },
    {
        "content": "<p>Seeing the context for this question over on the conformance thread, yes, FHIRPath accesses through a specific resource provided to the evaluation as context. So you could express this with a CQL expression, but you'd have to use a retrieve:</p>",
        "id": 153956746,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1525724641
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>not exists ([ChargeItem: &quot;13250&quot;])\n</pre></div>",
        "id": 153956748,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1525724749
    },
    {
        "content": "<blockquote>\n<p>The difficulty will be accessing other ChargeItems from the FHIRPath. If there's a reference in the current element, you could resolve it. Where will this expression be defined?</p>\n</blockquote>\n<p>That's where I'm unsure too. There are going to be multiple ChargeItems referencing one Account. The context for the FHIRpath expression is one of these ChargeItems. It does have a direct reference to the Account, but not to any of the other ChargeItems. So I basically need to do a search for all ChargeItems which reference the same account as the one I'm evaluating from.<br>\nSo I'm not sure if this: <br>\nChargeItem.where(code='<a href=\"http://fhir.de/CodingSystem/kbv/ebm|13250\" target=\"_blank\" title=\"http://fhir.de/CodingSystem/kbv/ebm|13250\">http://fhir.de/CodingSystem/kbv/ebm|13250</a>' and account=%context.account)<br>\nis legitimate.</p>\n<p>I'm currently building the ChargeItemDefinition resource, that's where the rules will live...</p>",
        "id": 153956826,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1525730023
    },
    {
        "content": "<p>so there's a reason why invariants don't include language support for searching other resources - there's all sorts of reasons why you wouldn't have access to them</p>",
        "id": 153956876,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525755939
    },
    {
        "content": "<p>if you really want to make rules like this, the nearest we have to it is a graph definition</p>",
        "id": 153956877,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525755959
    },
    {
        "content": "<p>Could CQL handle this <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> ?</p>",
        "id": 153956891,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1525761360
    },
    {
        "content": "<p>So, following your suggestion, <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> , I'd establish the context  by creating a Bundle of all resources the fhirpath expression needs, using a graphQL expression.<br>\nLike this...?</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">&lt;applicability&gt;</span>\n        <span class=\"nt\">&lt;description</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Exclude: 13250&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"c\">&lt;!-- create a Bundle of all ChargeItems in the same Account as the current ChargeItem--&gt;</span>\n        <span class=\"nt\">&lt;context</span> <span class=\"na\">value=</span><span class=\"s\">&quot;ChargeItem {account:Account { search ChargeItem?account={ref}}&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;language</span> <span class=\"na\">value=</span><span class=\"s\">&quot;text/fhirpath&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"c\">&lt;!--evaluate expression in context of the Bundle--&gt;</span>\n        <span class=\"nt\">&lt;expression</span> <span class=\"na\">value=</span><span class=\"s\">&quot;%context.entry.resource.where(code=&#39;http://fhir.de/CodingSystem/kbv/ebm|13250&#39;).count() = 0&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/applicability&gt;</span>\n</pre></div>",
        "id": 153956898,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1525764624
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> , yes, CQL allows access to resources, either server-wide or filtered to a particular patient.</p>",
        "id": 153956932,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1525785256
    },
    {
        "content": "<p>Thanks, <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> ! I guess I really ned to start reading the CQL spec ;-)<br>\nWhat I'm still having issues understanding: How do you e.g. pass context (patient, encounter...) that is given as parameters to the $apply-operation into the CQL expressions in PlanDefinition? Is there a syntax for that?</p>",
        "id": 153956951,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1525789994
    },
    {
        "content": "<p>CQL defines a Patient context that is expected to be supplied by the evaluation environment. You can access that context within CQL using \"Patient\" as an identifier, and when you're in Patient context, all resources returned are filtered to that Patient.</p>",
        "id": 153956961,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1525790999
    },
    {
        "content": "<p>The implementation of the $apply-operation then uses the value of the patient parameter to provide that context to the evaluation.</p>",
        "id": 153956963,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1525791032
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> perhaps you can define for me what you're trying to do - CQL doesn't have the entry point it sounds like you want. and I suggested to use  GraphDefinition, not GraphQL. They're very different things. But I think that the real problem you have is that you are trying to say is not sensible.</p>",
        "id": 153957096,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525839609
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <br>\nok, so in a ChargeItemDefinition, we're basically keeping stuff like prices or point values for billing codes or products.<br>\nThere may be surcharges/discounts that apply in certain conditions or the price may vary over time.<br>\nSome billing codes may not be applicable at all in a certain scenario.</p>\n<p>So, what I'm trying to do is to create an operation \"$apply\" consitent with the other definitional resources, that checks if an instance of a ChargeItem is applicable and returns the calculated price based with all applicable surcharges/discounts.</p>\n<p>I believe in terms of logic involved this is pretty much the same thing as what PlanDefinition is doing. So I try to model ChargeItemDefinition consistently.</p>\n<p>FHIRPath will work perfectly fine for conditions like:<br>\n- code only applicable for inpatient encounter<br>\n- discount only applicable for minors<br>\n- surcharge applies for certain coverage types ...<br>\nbecause all of these informations are directly or indirectly linked from the ChargeItem resource.</p>\n<p>Problem is if I need to evaluate conditions that apply to stuff that's <em>not</em> linked from ChargeItem, like collisions with other ChargeItems in the same Account, or existence of certain diagnosis for the patient...</p>\n<p>BTW, I meant to use \"a text short hand form for GraphDefinition, loosely based on the graphQL language.\" rather than \"graphQL\" ;-)</p>",
        "id": 153957122,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1525854970
    },
    {
        "content": "<blockquote>\n<p>The implementation of the $apply-operation then uses the value of the patient parameter to provide that context to the evaluation.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span>  ...but this isn't stated explicitly. The implementation \"just knows\" that it needs to do that. Because it isn't really <em>that</em> obvious to me since the $apply operation has many more parameters like encounter, practitioner etc. I would assume that many CQL expressions need the ecounter context as well, since it can't be inferred from the Patient resource. :thinking_face:</p>",
        "id": 153957127,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1525857747
    },
    {
        "content": "<p>This to me is feeling like its getting closer to server internal business rules, that might be better just described in narrative.</p>",
        "id": 153957156,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1525868039
    },
    {
        "content": "<p>Hm. Isn't this the same kind of rules the Clinical Reasoning Module is tackling right now?<br>\nAlso, I think there is a real world need for being able to distribute these kind of rules from those who make them (Payers) to those who implement them (EHR vendors) in a machine readable, standardized way. <br>\nI don't assume that this is going to happen any time soon, but being able to show that this is something you <em>could</em> do with FHIR is an important sales pitch if we want vendors to adopt the FM module.</p>",
        "id": 153957158,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1525868961
    },
    {
        "content": "<p>you're certainly outside the scope of FHIRPath, which is a query language. It's a logical part of what you're doing, just like it's a part of all sorts of things we do, including CQL.</p>",
        "id": 153957440,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525901935
    },
    {
        "content": "<p>I'm also not sure it's CQL either</p>",
        "id": 153957441,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525901943
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> I think you're right that this is an area that is not clear. We do say in the documentation of the $apply operation that CQL parameters defined in libraries referenced by the PlanDefinition are bound by name to the parameters of the operation, but we don't explicitly define how that relates to CQL context. I suggest that you could rely on that parameter-name binding behavior and use the name of the operation parameters in your condition expression. If you wanted to submit a tracker to clarify, that would be fantastic too.</p>",
        "id": 153957447,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1525914511
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> following a discussion in PA/FM joint meeting today, I added a tracker item to suggest the introduction of a MetaDataType to harmonize the usage of machine readable expressions across resources: <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17227\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17227\">GF#17227</a><br>\nThis also contains a request for making the mechanisms of establishing the context more expressive.</p>",
        "id": 153963203,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1526558961
    },
    {
        "content": "<p>I think that's a great idea, it would keep representation consistent across the spec. I'd also like to see it as a type that can be used in an extension, though I understand that represents additional work for implementations.</p>",
        "id": 153963236,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1526562656
    }
]