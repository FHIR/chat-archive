[
    {
        "content": "<p>Hello, I am trying to construct a result set from a fhirpath query on data that looks like this:<br>\n<a href=\"/user_uploads/10155/NRgTKpeHhv37wmoSnbQzEPKh/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/NRgTKpeHhv37wmoSnbQzEPKh/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/NRgTKpeHhv37wmoSnbQzEPKh/image.png\"></a></div><p>Optimally, I want a JSON structure back that looks like</p>\n<div class=\"codehilite\"><pre><span></span><code>[\n    {\n        &#39;provider&#39;: &#39;HAPI Public Server - Public HAPI Server&#39;\n        &#39;resource&#39;:   record_body.entry.resource\n    },\n    {...}\n]\n</code></pre></div>\n\n\n<p>The closest I've gotten is this query:<br>\nprovider.union(record_body.entry.resource.where(resourceType = 'Observation'))</p>\n<p>I'm expecting it might return the provider and the resource object, e.g.:<br>\n[<br>\n'HAPI Public Server - Public HAPI Server',<br>\nrecord_body.entry.resource,<br>\n'HAPI Public Server - Public HAPI Server',<br>\nrecord_body.entry.resource,<br>\n...<br>\n]</p>\n<p>In fhirpath,js this yields<br>\nError: Not implemented: union</p>\n<div class=\"codehilite\"><pre><span></span><code>at doInvoke (/Users/harsch/git/patient-portal/patient-web/node_modules/fhirpath/src/fhirpath.js:459:11)\nat Object.&lt;anonymous&gt;.engine.FunctionInvocation (/Users/harsch/git/patient-portal/patient-web/node_modules/fhirpath/src/fhirpath.js:501:10)\nat Object.&lt;anonymous&gt;.engine.doEval (/Users/harsch/git/patient-portal/patient-web/node_modules/fhirpath/src/fhirpath.js:585:22)\nat /Users/harsch/git/patient-portal/patient-web/node_modules/fhirpath/src/fhirpath.js:157:19\n</code></pre></div>\n\n\n<p>So, I guess the crux of my question is: How do you construct arbitrary array or objects with Fhirpath?</p>",
        "id": 202392051,
        "sender_full_name": "Tim Harsch",
        "timestamp": 1593488227
    },
    {
        "content": "<p>might be a question for <a class=\"stream\" data-stream-id=\"179169\" href=\"/#narrow/stream/179169-javascript\">#javascript</a> but if you're running in HAPI why are you using the js FHIRPath engine not the java one?</p>",
        "id": 202394133,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1593490613
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"310838\">Tim Harsch</span> <a href=\"#narrow/stream/179266-fhirpath/topic/constructing.20arrays.20or.20objects/near/202392051\">said</a>:</p>\n<blockquote>\n<p>In fhirpath,js this yields<br>\nError: Not implemented: union</p>\n</blockquote>\n<p>In fhirpath.js, the \"union\" function is not yet implemented, but the union operator \"|\" is, so you should be able to write:<br>\nprovider | record_body.entry.resource.where(resourceType = 'Observation')</p>",
        "id": 202442481,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1593527160
    },
    {
        "content": "<p>You can use the <code>.select()</code> function to shape the results, but there is no generic object construction syntax in FHIRPath, and the array construction syntax is limited to the use of union.</p>",
        "id": 202446444,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1593528785
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179266-fhirpath/topic/constructing.20arrays.20or.20objects/near/202394133\">said</a>:</p>\n<blockquote>\n<p>might be a question for <a class=\"stream\" data-stream-id=\"179169\" href=\"/#narrow/stream/179169-javascript\">#javascript</a> but if you're running in HAPI why are you using the js FHIRPath engine not the java one?</p>\n</blockquote>\n<p>Thanks for the response.  I posted here because I'm only concerned with query syntax  at the moment.  I suspect the <code>not implemented</code> error will not be an issue if I find the proper query.<br>\n HAPI is just one provider I'm fetching data from.  My code is intended for a client processing the data from the provider.</p>",
        "id": 202454243,
        "sender_full_name": "Tim Harsch",
        "timestamp": 1593531762
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191359\">Bryn Rhodes</span> <a href=\"#narrow/stream/179266-fhirpath/topic/constructing.20arrays.20or.20objects/near/202446444\">said</a>:</p>\n<blockquote>\n<p>You can use the <code>.select()</code> function to shape the results, but there is no generic object construction syntax in FHIRPath, and the array construction syntax is limited to the use of union.</p>\n</blockquote>\n<p>Hmm...  my original query that served me well for some time was this:  <code>provider | record_body.entry.resource.where(resourceType = '${type}')</code>  (an ecmascript template string, $type is a JS var).   which yields an array with providername and N resource objects.  When I had a second provider in my data I would get 2 providers, followed by N resources from the first, and M resources from the second (screenshot below).  So I'm unable to tie the providers back to resources.   Can you think of a way to handle this without object construction?</p>\n<p><a href=\"/user_uploads/10155/rqNx_37vbPO6twz8ojDyCLRn/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/rqNx_37vbPO6twz8ojDyCLRn/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/rqNx_37vbPO6twz8ojDyCLRn/image.png\"></a></div>",
        "id": 202455340,
        "sender_full_name": "Tim Harsch",
        "timestamp": 1593532193
    },
    {
        "content": "<p>I haven't tested it, but what about something using .select as Bryn suggested, like: select( provider | $this.entry.....)</p>",
        "id": 202472890,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1593540050
    },
    {
        "content": "<p>I tried something like this: <code>select( $this.provider | $this.record_body.entry.resource.where(resourceType = 'Observation'))</code> but an issue I see is that providers show up for records that are not Observations as in:<br>\n<a href=\"/user_uploads/10155/QRGgeEFWWUzb4JgyBSqyqzr2/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/QRGgeEFWWUzb4JgyBSqyqzr2/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/QRGgeEFWWUzb4JgyBSqyqzr2/image.png\"></a></div><p>The data file is here:  <a href=\"https://gist.github.com/timharsch/05d5db2d690e486c38f476fa424a1f98\">https://gist.github.com/timharsch/05d5db2d690e486c38f476fa424a1f98</a></p>",
        "id": 202485831,
        "sender_full_name": "Tim Harsch",
        "timestamp": 1593546566
    },
    {
        "content": "<p>It's almost like <a href=\"http://hl7.org/fhirpath/N1/#string-concatenation\">http://hl7.org/fhirpath/N1/#string-concatenation</a>   if there were an &amp; operator I could use in place of pipe.</p>",
        "id": 202486304,
        "sender_full_name": "Tim Harsch",
        "timestamp": 1593546804
    },
    {
        "content": "<p>I guess you are wanting to filter out the bundles that don't have Observations.  Before you do the select, you could do a where:  where(record_body.entry.resource.resourceType.first() = 'Observation').select(...).  I am assuming each bundle only has resources of one type.</p>",
        "id": 202500373,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1593554187
    }
]