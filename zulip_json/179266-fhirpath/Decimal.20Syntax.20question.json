[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> while I'm noodling about decimals.... there's a problem in FHIRPath. FHIR allows the exponent representation, but FHIRPath doesn't. So what should convertsToDecimal() / toDecimal() do? In my implementation, they accept exponents, since that might come from the resource....</p>",
        "id": 172000658,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564454950
    },
    {
        "content": "<p>but that is not conformant.</p>",
        "id": 172000664,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564454962
    },
    {
        "content": "<p>Yeah, that's a good question. There's an implication that not all systems will return the same result for the same values already (given variable support for decimal precision), and it would be a backwards compatible change to say that in some future version, sytems could support exponent representation.</p>",
        "id": 172000987,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1564455508
    },
    {
        "content": "<p>What do other implementations do? <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> , <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> ?</p>",
        "id": 172000991,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1564455523
    },
    {
        "content": "<p>note that I still only accept non-exponent form in the FHIRPath expressions themselves</p>",
        "id": 172001067,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564455609
    },
    {
        "content": "<p>Funny enough, the Java-based CQL engine behaves exactly the same way :)</p>",
        "id": 172001082,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1564455641
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> , what does the JavaScript CQL engine do with <code>define Test: ToDecimal('1.00E+00')</code>?</p>",
        "id": 172001096,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1564455664
    },
    {
        "content": "<p>Yes, the literal still doesn't support exponents.</p>",
        "id": 172001113,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1564455719
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> -- the JavaScript CQL engine returns back the <code>Number</code> <code>1</code> for that.  We pass the string directly into JavaScript's <code>parseFloat</code> function then intentionally limit precision to 8 decimal places.</p>",
        "id": 172001580,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1564456387
    },
    {
        "content": "<p>Yes, I noticed this too. The FhirPath spec says there are so many issues around exponential notation that it's forbidden.  This is only one of the subtle differences between these languages (and CQL).  I recently discussed the subtle differences between time/date/dateTime too (allow timezone on time?).  So, just like Grahame I have now decided to accept everything \"internally\" in the part of the API that is model independent, and then there can be language-specific rules. E.g.  I can forbid exponential notation in the lexer for FP, even though the engine internally could perfectly well handle it, and so is able to work with decimals WITH exponentials coming in from the FHIR model. On the other hand, the parsers for FHIR forbid timezones on times, which I can still allow in parsers for CQL.  (though Bryn told me work is underway to unify this).</p>",
        "id": 172220540,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1564666621
    },
    {
        "content": "<p>Many of these questions have surfaced while working on the mapping engine.  We've fully integrated FP into the mapping language engine, but if FHIR and FP have subtle different rules for say literals, you run the risk of allowing exponential notation in, say, the arguments to function calls in the mapping language, while 10 characters to the left, in a 'where' statement you are not allowed to use it.  Not very user-friendly.</p>",
        "id": 172220850,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1564666836
    },
    {
        "content": "<p>I checked my implementation.  It will accept exponential notation while parsing FHIR, but now allow exponential notation when using convertsToDecimal().</p>",
        "id": 172221178,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1564667076
    },
    {
        "content": "<p>While we're on the subject, is the 'T' part of the DateTime part of the literal, or part of the actual value?   Is  @2013-04TZ.toString() = '2013-04Z' or '2013-04TZ' ?</p>",
        "id": 172221730,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1564667382
    },
    {
        "content": "<p>(we know the '@' is just a part of the literal notation in the lexer, is the same the case with 'T'.   E.g. compare to Java/C#:  (1.2f).ToString() = '1.2', not '1.2f'.)</p>",
        "id": 172222087,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1564667595
    },
    {
        "content": "<blockquote>\n<p>While we're on the subject, is the 'T' part of the DateTime part of the literal, or part of the actual value?   Is  @2013-04TZ.toString() = '2013-04Z' or '2013-04TZ' ?</p>\n</blockquote>\n<p>T is a part of the ISO-8601 <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/ISO_8601\">format</a> e.g. , \"2019-08-01T11:33:42Z\".  I don't know what ISO-8601 would do with a timezone that didn't have a time.  (Does FHIRPath allow that?)</p>",
        "id": 172222440,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1564667813
    },
    {
        "content": "<p>Does toDateTime() require the 'T'?  So is '2013-04'.toDateTime() valid?</p>",
        "id": 172222448,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1564667819
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span> I don&#39;t know what ISO-8601 would do with a timezone that didn&#39;t have a time.  (Does FHIRPath allow that?)\n</pre></div>\n\n\n<p>Yes, the grammar allows it, but must admit that's probably not the final word on it - the spec is a bit unclear about it.</p>",
        "id": 172222783,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1564667983
    },
    {
        "content": "<hr>",
        "id": 172222864,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1564668014
    },
    {
        "content": "<p>It's actually pretty explicit in the grammar:</p>\n<div class=\"codehilite\"><pre><span></span>DATETIME\n        : &#39;@&#39;\n            [0-9][0-9][0-9][0-9] // year\n            (\n                (\n                    &#39;-&#39;[0-9][0-9] // month\n                    (\n                        (\n                            &#39;-&#39;[0-9][0-9] // day\n                            (&#39;T&#39; TIMEFORMAT?)?\n                        )\n                        | &#39;T&#39;\n                    )?\n                )\n                | &#39;T&#39;\n            )?\n            (&#39;Z&#39; | (&#39;+&#39; | &#39;-&#39;) [0-9][0-9]&#39;:&#39;[0-9][0-9])? // timezone offset\n        ;\n</pre></div>\n\n\n<p>The Z + timezone part could have been placed explicitly after the TIMEFORMAT pattern, but instead, it is at the bottom, allowing it after every form.</p>",
        "id": 172223244,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1564668236
    },
    {
        "content": "<p>See <a href=\"#narrow/stream/179266-fhirpath/topic/DateTime.20with.20timezone.20but.20without.20time.3F\" title=\"#narrow/stream/179266-fhirpath/topic/DateTime.20with.20timezone.20but.20without.20time.3F\">https://chat.fhir.org/#narrow/stream/179266-fhirpath/topic/DateTime.20with.20timezone.20but.20without.20time.3F</a> .  (I had forgotten about that thread.) I think the consensus was (at least in that thread) that even though the grammar allowed it, it was not intended to be allowed in the spec.</p>",
        "id": 172223508,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1564668388
    },
    {
        "content": "<p>Well, I could accept that if it made the grammar too complex (like trying to specify a date regex that does not allow month 13), but here in this grammar it is so explicitly <em>allowed</em>....</p>",
        "id": 172224628,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1564669119
    },
    {
        "content": "<p>Yeah, I did not allow it back then, but I am busy refreshing my implementation, and just took the ANTLR grammar in the latest normative for granted, so I do support it now.</p>",
        "id": 172224703,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1564669200
    },
    {
        "content": "<p>Well, it's easy to disable again - let's see what the consensus is...</p>",
        "id": 172224796,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1564669241
    },
    {
        "content": "<p>Yes, the fact that the grammar allows it is unintentional. The change to the spec was to remove the ability to represent Timezone offset on Date and Time values, on the grounds that specifying a Timezone offset only makes sense for a full DateTime value (which is what FHIR does).</p>",
        "id": 172259537,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1564692086
    },
    {
        "content": "<p>So the consensus on that thread was that a tracker should be submitted to correct the FHIRPath grammar to disallow the T for Date and Time (it should only be allowed for DateTime). And we asked for a survey of implementations to try to determine if this was a misalignment between the spec and what implementations were actually doing (so we could apply it as a clarification on the spec).</p>",
        "id": 172259710,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1564692202
    },
    {
        "content": "<p>Does <a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22818\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22818\">GF#22818</a> meet that purpose?</p>",
        "id": 172260142,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1564692543
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span>, I think so, I put a comment on there that we should align the grammar with implementations and the intent of the change, to allow a Timezone only on DateTime literals, not on a Date or a Time.</p>",
        "id": 172261015,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1564693194
    },
    {
        "content": "<p>I have found another slight difference between decimals in FP and FHIR:  the grammar for FhirPath allows leading zeroes, while FHIR does not.  More indirectly, in FhirPath there is a unary sign operation, so you can say both -4 and +5, but the last is not allowed in the serialization for FHIR.</p>",
        "id": 173550755,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1566226962
    },
    {
        "content": "<p>In FHIRPath though, the unary sign is part of the parser, not the decimal literal, right?</p>",
        "id": 173565662,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1566238326
    },
    {
        "content": "<p>So there are two differences, FHIR allows a minus sign but not leading zeroes, FHIRPath allows leading zeros, but not a minus sign.</p>",
        "id": 173565697,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1566238354
    },
    {
        "content": "<p>But that's really only a difference in the representation, the actual values allowed are the same, yes?</p>",
        "id": 173565740,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1566238393
    },
    {
        "content": "<p>Yes! It's just very confusing if you're a user of both fhir and fhirpath (which a lot of people are).  And for parser writers like me that like to reuse code to get this stuff consistent, it's also not optimal, potentially having separate but almost identical code paths for fhirpath, fhir, mapping language and CQL for parsing basic stuff like integers.</p>",
        "id": 173570969,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1566242365
    },
    {
        "content": "<p>there's only 2 possibilites, right?</p>",
        "id": 173571658,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566242886
    },
    {
        "content": "<p>If you're only parsing then can't you just support the superset?  E.g., supporting <em>optional</em> leading zeros isn't going to negatively impact parsing FHIR decimals (without leading zeros) or FHIRPath (with leading zeros).  That said, if you're wanting to validate or serialize values then it's not as simple (since FP requires a leading zero for values &gt;= 0.0 and &lt; 1.0).</p>",
        "id": 173573522,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1566244373
    },
    {
        "content": "<p>if you're like me and Ewout, writing a validator</p>",
        "id": 173573683,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566244473
    },
    {
        "content": "<p>otherwise you're correct</p>",
        "id": 173573688,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566244478
    },
    {
        "content": "<p>but it's ok if writing a validator is a sucky job</p>",
        "id": 173573739,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566244516
    },
    {
        "content": "<p>Yeah - I actually did that until now where the dialects differ.  I accept the superset, and then have additional specific validation in the FHIR parsers.  It's not that it cannot be done, but we're going to keep things simple, right?</p>",
        "id": 173673662,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1566319086
    },
    {
        "content": "<p>It's also confusing for fhirpath authors that are also creating FHIR instance examples, they need to be aware of these subtle differences.</p>",
        "id": 173673741,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1566319170
    },
    {
        "content": "<p>that small population will depend on a validator anyway</p>",
        "id": 173696114,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566335115
    }
]