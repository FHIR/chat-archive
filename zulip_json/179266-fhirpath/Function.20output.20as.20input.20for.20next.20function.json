[
    {
        "content": "<p>In the case where I have a resource with name <code>LogicalModel-Person</code>:</p>\n<ul>\n<li><code>name.indexOf('-'))</code> gives me the outcome <code>12</code>.</li>\n<li><code>name.substring(0, 12)</code> gives me the desired outcome <code>LogicalModel</code>.</li>\n<li>However, <code>name.substring(0, name.indexOf('-'))</code> just gives back an empty string in FHIRPath Tester and the full name in <a href=\"https://hl7.github.io/fhirpath.js/\">https://hl7.github.io/fhirpath.js/</a>.</li>\n</ul>\n<p>Is there a way for this to work instead?</p>",
        "id": 243407278,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1624292629
    },
    {
        "content": "<p>Using quotes around the name</p>",
        "id": 243450560,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1624313990
    },
    {
        "content": "<p>(think its the back tic char)</p>",
        "id": 243450616,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1624314011
    },
    {
        "content": "<p>See that I incorrectly reported what which FHIRPath tool gave back in my first post, updated that above. Sorry.</p>",
        "id": 243539833,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1624378261
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> I'm not sure if I understand. Using:</p>\n<div class=\"codehilite\"><pre><span></span><code>`name`.substring(0, `name`.indexOf(&#39;-&#39;))\n</code></pre></div>\n<p>gives me again the full name in fhirpath.js and an error in your FHIRPath Tester:</p>\n<div class=\"codehilite\"><pre><span></span><code>Expression compilation error:\nCompilation failed: Parsing failure: unexpected &#39;`&#39;; expected Term (Line 1, Column 1); recently consumed:\n</code></pre></div>",
        "id": 243539970,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1624378332
    },
    {
        "content": "<p>This should be working - but I don't get why not...<br>\n<a href=\"/user_uploads/10155/aYQOTXg23CyOa2SFyszr91lW/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/aYQOTXg23CyOa2SFyszr91lW/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/aYQOTXg23CyOa2SFyszr91lW/image.png\"></a></div>",
        "id": 243606117,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1624422667
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> Thought maybe I had an old version of FHIRPath Tester, so uninstalled it and wanted to reinstall.<br>\nBut now the Microsoft Store 'Install' or 'Get' button doesn't do anything. And the version from <a href=\"https://github.com/brianpos/FhirPathTester/releases/tag/v1.0.4\">https://github.com/brianpos/FhirPathTester/releases/tag/v1.0.4</a> feels quite a bit older.</p>",
        "id": 243660259,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1624458664
    },
    {
        "content": "<p>Yes, it looks like i've not updated with a new tag when I released it last. <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span> <br>\nI should do another release with the 1.9.0 version of the libs - but need to have a local build of the libs due to minor change to remove the emit code in the setters (if that's still in there, as it doesn't work in the App store based code).</p>",
        "id": 243705942,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1624479109
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> So the Microsoft Store install/get works again now (I guess a few reboots later).<br>\nWith the same resource as you're using:</p>\n<div class=\"codehilite\" data-code-language=\"XML\"><pre><span></span><code><span class=\"nt\">&lt;Organization</span> <span class=\"na\">xmlns=</span><span class=\"s\">\"http://hl7.org/fhir\"</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;name</span> <span class=\"na\">value=</span><span class=\"s\">\"postlethwaite-kordic\"</span> <span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/Organization&gt;</span>\n</code></pre></div>\n<p>The query </p>\n<div class=\"codehilite\"><pre><span></span><code>name.substring(0, name.indexOf(&#39;-&#39;))\n</code></pre></div>\n<p>gives an empty string:<br>\n<a href=\"/user_uploads/10155/WuE4ikKMUk8jhbsbMIlxKB8S/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/WuE4ikKMUk8jhbsbMIlxKB8S/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/WuE4ikKMUk8jhbsbMIlxKB8S/image.png\"></a></div><p>The query</p>\n<div class=\"codehilite\"><pre><span></span><code>`name`.substring(0, `name`.indexOf(&#39;-&#39;))\n</code></pre></div>\n<p>gives </p>\n<div class=\"codehilite\"><pre><span></span><code>Expression compilation error:\nCompilation failed: Parsing failure: unexpected &#39;`&#39;; expected Term (Line 1, Column 1); recently consumed:\n</code></pre></div>\n<p><a href=\"/user_uploads/10155/R2wyA7CYnk5Lpro5QwDhCvBG/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/R2wyA7CYnk5Lpro5QwDhCvBG/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/R2wyA7CYnk5Lpro5QwDhCvBG/image.png\"></a></div><p>About section says 'New Features in v1.0.8', so I guess that's the version I'm using.</p>",
        "id": 244698583,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1625230918
    },
    {
        "content": "<p>On <a href=\"https://hl7.github.io/fhirpath.js/\">https://hl7.github.io/fhirpath.js/</a> both queries just give the full name value...<br>\n<a href=\"/user_uploads/10155/wN8-Iuvo81LwwkrxM5P4Yq6l/image.png\">image.png</a><br>\n<a href=\"/user_uploads/10155/EHTSjEIXXsJcgMkewKnuj-gq/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/wN8-Iuvo81LwwkrxM5P4Yq6l/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/wN8-Iuvo81LwwkrxM5P4Yq6l/image.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/10155/EHTSjEIXXsJcgMkewKnuj-gq/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/EHTSjEIXXsJcgMkewKnuj-gq/image.png\"></a></div>",
        "id": 244699043,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1625231132
    },
    {
        "content": "<p>Both tools correctly give back <code>postlethwaite</code> for:</p>\n<div class=\"codehilite\"><pre><span></span><code>&#39;postlethwaite-kordic&#39;.substring(0, &#39;postlethwaite-kordic&#39;.indexOf(&#39;-&#39;))\n</code></pre></div>",
        "id": 244699301,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1625231243
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> Part of the mystery: Backticks are the escape character for the normative FHIRPath, before that it seems to have been double quotes. (As I understand from <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span>)<br>\nBut still also:</p>\n<div class=\"codehilite\"><pre><span></span><code>&quot;name&quot;.substring(0, &quot;name&quot;.indexOf(&#39;-&#39;))\n</code></pre></div>\n<p>Gives an empty string in the 1.0.8 of FHIRPath tester. Looking forward to test it with the newer release.</p>",
        "id": 244723329,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1625241614
    },
    {
        "content": "<p>Issue there is the context isn't the parent of name, it's the string. So that name property doesn't exist in the string.</p>",
        "id": 244762012,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1625263289
    },
    {
        "content": "<p>I've actually come across this issue in the last week too!</p>",
        "id": 244762061,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1625263323
    },
    {
        "content": "<p>name.substring(0, %resource.name.indexOf('-')) should work.</p>",
        "id": 244762169,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1625263384
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span>. That indeed works in FHIRPath tester. Not on fhirpath.js though.<br>\nShould <code>%resource</code> always be expected to be available when evaluating FHIRPath anywhere?<br>\nIs this expected behavior (that the scope there is on the string) for FHIRPath or more a bug in the SDK?</p>",
        "id": 244923811,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1625484197
    },
    {
        "content": "<p>Fhirpath.js is able to handle environment variables, but the host has to provide those to it.<br>\nI haven't had a chance to try that out withfhirpath.js yet, but was planning to in the next few weeks.</p>",
        "id": 244924058,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1625484357
    },
    {
        "content": "<p>(after my current project is released)</p>",
        "id": 244924107,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1625484371
    },
    {
        "content": "<p>I think the simple answer is  <code>name.substring(0, indexOf('-'))</code>.</p>",
        "id": 244924176,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1625484419
    },
    {
        "content": "<p>(backquote)name(backquote).substring(0, (backquote)name(backquote).indexOf('-'))<br>\n(sorry, no idea how to produce a backquote in markdown)</p>\n<p>should be exactly the same as <code>name.substring(0,name.indexOf('-'))</code> and probably return nothing of null.</p>",
        "id": 244924312,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1625484515
    },
    {
        "content": "<p>This is because  <code>%resource.name.substring(0,name.indexOf('-'))</code> evaluates to <code>%resource.name.substring(0,%resource.name.name.indexOf('-'))</code></p>",
        "id": 244924567,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1625484702
    },
    {
        "content": "<p>This double <code>name</code> returns nothing, so doing <code>indexOf()</code> on it will return nothing, etc.</p>",
        "id": 244924649,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1625484735
    },
    {
        "content": "<p>The question going on here is what is the $this or %context within the parameters and the string.substring function parameters.<br>\nIt appears that currently that is the string, and not the parent of the string.</p>",
        "id": 244924674,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1625484757
    },
    {
        "content": "<p>Ewout, that's how I understand it too.</p>",
        "id": 244924742,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1625484820
    },
    {
        "content": "<p>And since their is no parent for the node, you have to go from the top again right?</p>",
        "id": 244924823,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1625484846
    },
    {
        "content": "<blockquote>\n<p>Issue there is the context isn't the parent of name, it's the string. So that name property doesn't exist in the string.</p>\n</blockquote>",
        "id": 244925013,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1625484965
    },
    {
        "content": "<p>Yes, that's correct!</p>",
        "id": 244925028,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1625484972
    },
    {
        "content": "<p>But that's not an issue - right, this is the intended behaviour.</p>",
        "id": 244925043,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1625484984
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span> where are you testing the fhirpath.js code?</p>",
        "id": 244925047,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1625484985
    },
    {
        "content": "<p>But $this is different</p>",
        "id": 244925067,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1625485001
    },
    {
        "content": "<p>$this is only set by specific functions like <code>where</code></p>",
        "id": 244925087,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1625485015
    },
    {
        "content": "<p>So not in this example?</p>",
        "id": 244925111,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1625485032
    },
    {
        "content": "<p>That's right. Only functions that take an expression as a parameter will (re)introduce the $this.</p>",
        "id": 244925278,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1625485153
    },
    {
        "content": "<p>Take <code>bla.where(x.indexOf(0, $this.length())</code>  ---   after the <code>where</code>, $this is pointing to each repeating <code>bla</code>.  Within <code>indexOf()</code> the $this is still referring to a <code>bla</code> introduced by the <code>where</code> - not the <code>x</code>.   In <code>x.indexOf(0, length())</code>, the <code>length()</code> would use the <code>x</code>, not the <code>$this</code>.</p>",
        "id": 244925482,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1625485281
    },
    {
        "content": "<p><a href=\"http://hl7.org/fhirpath/#functions\">http://hl7.org/fhirpath/#functions</a> - last bullet (for $this).</p>",
        "id": 244925568,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1625485332
    },
    {
        "content": "<p>Arguments are evaluated with respect to the <em>input collection</em>, and functions taking an expression as an argument introduce a special $this in their scope.</p>",
        "id": 244925786,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1625485512
    },
    {
        "content": "<p>So looking up at the examples above, I think all these are equivalent (assuming that there aren't more then 1 name):<br>\n<code>name.text.substring(0, indexOf(','))</code><br>\n<code>name.text.substring(0, %resource.name.text.indexOf(','))</code><br>\nAnd where the other examples above included the name also, that should not have worked in fhirpath.js, but it does<br>\n<code>name.text.substring(0, text.indexOf(','))</code><br>\n<a href=\"/user_uploads/10155/n2eoQldkoppqgdVnfg5dJQBj/image.png\">image.png</a> <br>\n<a href=\"/user_uploads/10155/zEX0WrKqgY04XQqfqBKaLh_t/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/n2eoQldkoppqgdVnfg5dJQBj/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/n2eoQldkoppqgdVnfg5dJQBj/image.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/10155/zEX0WrKqgY04XQqfqBKaLh_t/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/zEX0WrKqgY04XQqfqBKaLh_t/image.png\"></a></div>",
        "id": 244927025,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1625486330
    },
    {
        "content": "<p>And note that if you're doing your own fhirpath.js host example content, this is how you're meant to pass in the environment variables (which I just put into my test host page)</p>\n<div class=\"codehilite\"><pre><span></span><code>                    var fhirObject = JSON.parse($(&#39;#fhirResource&#39;).val());\n                    var expression = $(&#39;#path&#39;).val();\n                    var envVars = [];\n                    envVars[&quot;resource&quot;] = fhirObject;\n                    var returnedValue = fhirpath.evaluate(fhirObject, expression, envVars, fhirpath_r4_model);\n                    $(&#39;#fhirpathOutput&#39;).text(JSON.stringify(returnedValue));\n</code></pre></div>",
        "id": 244927177,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1625486421
    },
    {
        "content": "<p>Just deployed it here too <br>\n<a href=\"https://smartqedit4.azurewebsites.net/ts/Questionnaire/FhirPath\">https://smartqedit4.azurewebsites.net/ts/Questionnaire/FhirPath</a></p>",
        "id": 244928254,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1625487076
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> Thanks both!</p>",
        "id": 244953544,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1625501794
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191367\">Brian Postlethwaite</span> <a href=\"#narrow/stream/179266-fhirpath/topic/Function.20output.20as.20input.20for.20next.20function/near/244925047\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"203235\">Ward Weistra</span> where are you testing the fhirpath.js code?</p>\n</blockquote>\n<p>Via <a href=\"https://hl7.github.io/fhirpath.js/\">https://hl7.github.io/fhirpath.js/</a>. Not sure who manages that deployment.</p>",
        "id": 244953593,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1625501842
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span> is that you?</p>",
        "id": 244978236,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1625523353
    },
    {
        "content": "<p>Yes, or actually currently <span class=\"user-mention\" data-user-id=\"273812\">@Yury Sedinkin</span>, but I am the right POC.</p>",
        "id": 245336837,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1625761330
    },
    {
        "content": "<p>If there is a bug with fhirpath.js, please report it at <a href=\"https://github.com/HL7/fhirpath.js/issues\">https://github.com/HL7/fhirpath.js/issues</a></p>",
        "id": 245337614,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1625761734
    }
]