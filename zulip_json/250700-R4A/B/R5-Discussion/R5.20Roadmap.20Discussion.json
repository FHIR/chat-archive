[
    {
        "content": "<p>Placeholder for discussion about <a href=\"https://onfhir.hl7.org/2022/02/28/soliciting-feedback-concerning-the-roadmap-for-fhir-r5/\">https://onfhir.hl7.org/2022/02/28/soliciting-feedback-concerning-the-roadmap-for-fhir-r5/</a></p>",
        "id": 273476351,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646047983
    },
    {
        "content": "<p>Some perspective from Germany: We're currently both \"well into the implementation phase based on R4\" <strong>and</strong> very keen for specific changes in R5\". Realistically however, most of the implementation projects will not allow an R5 migration within the next 2 years, hence most will probably skip it entirely and move straight to R6(+). Our current apporach is mainly to \"preadopt\" any additions made in R5 we find useful as R4 extensions.<br>\nSo we're eager to see it released, but only as a stable bucket of international extensions, rather than a normative spec.<br>\nOption #3 it is.</p>",
        "id": 273516511,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1646065999
    },
    {
        "content": "<p>Can you expand on \"it’s the normative parts of the specification that present the most procedural work and risk with the R5 ballot\"? Is there an estimate of the work needed to polish off R5?</p>\n<p>Will creating an R4C (which, in terms of effort and HL7 process, won't likely be able to go to ballot until September or even January) be more effort than holding off R5 for a ballot cycle or two to finish off the outstanding work?</p>",
        "id": 273516770,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1646066103
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> I don't really understand the \"we'll wait for R6\" philosophy. I can understand \"we don't want to change too often, so we'll standardize on one version for 5 years, and ignore releases in the mean time\", but if R5 is two or four or ten years out, are you still going to wait for R6?</p>",
        "id": 273517270,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1646066300
    },
    {
        "content": "<p>Please read „R6(+)“ as shorthand for „whichever Version is current or just around the corner at the time when projects will begin to consider moving to a newer version of FHIR“</p>",
        "id": 273517630,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1646066459
    },
    {
        "content": "<p>Keep in mind, that timelines around R6 are totally up in the air - so whether that's 1.5 years after R5 or 4 years after R5, we don't yet know...</p>",
        "id": 273520673,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646067628
    },
    {
        "content": "<blockquote>\n<p>Can you expand on \"it’s the normative parts of the specification that present the most procedural work and risk with the R5 ballot\"? Is there an estimate of the work needed to polish off R5?</p>\n</blockquote>\n<p>What I understand from this is that \"promoting\" most (all?) of the intended resources to normative needs a lot of careful work. If my understanding is correct, I think that balloting and publishing R5 with only few \"promotions\" will serve implementers best.</p>",
        "id": 273523832,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1646069037
    },
    {
        "content": "<p>My biggest concern is that, whether we 'promote' resources to normative or not, by the time we get to \"R6\", those resources will be treated as de facto normative - i.e. the community will not tolerate breaking change.  (We might argue that some of them are in that state already).  Doing the work to move the resources to normative essentially means doing alignment, clean-up and polishing that will allow us to be comfortable with them being locked down.  If we defer, then we risk them being locked down in a messy state.</p>",
        "id": 273525398,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646069689
    },
    {
        "content": "<p>those that don't follow the advice given on FMM numbers are at their own risk.</p>",
        "id": 273534164,
        "sender_full_name": "John Moehrke",
        "timestamp": 1646073371
    },
    {
        "content": "<p>No, they're not.  Because if the community says \"don't break this, it's too widely used\", then the fact we've asserted FMM2 doesn't matter.</p>",
        "id": 273543096,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646077432
    },
    {
        "content": "<p>I completely agree with Lloyd's last comment and it illustrates why we are 'between a rock and a hard place' here. One thing that is clear to me is that maintaining two publication streams (R4x and Rx) isn't feasible (or even desirable) beyond R4B. The big question is whether the section of the community pressing for R5, including breaking changes to widely-used resources, is comfortable with where that will place them, from an interoperability standpoint, within their eco-systems.  This, and the fact that we don't seem to be ready to make all the clinical resources normative, leads me to believe that Grahame's Option #3 is the best solution.</p>",
        "id": 273553856,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1646082326
    },
    {
        "content": "<p>so then why do we waste our time with FMM, or standards lifecycle at all?</p>",
        "id": 273555161,
        "sender_full_name": "John Moehrke",
        "timestamp": 1646082961
    },
    {
        "content": "<p>My understanding of the FMM and Trial-Use are signals to the using community, a signal that they should see as a warning and see as an invite to approach HL7 to actively engage and help mature the specification. Those that don't engage, should not be given priority over those of us that do engage.</p>",
        "id": 273555463,
        "sender_full_name": "John Moehrke",
        "timestamp": 1646083087
    },
    {
        "content": "<p>... well the logical conclusion of that argument would be to only include normative resources in IGs.</p>",
        "id": 273556041,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1646083380
    },
    {
        "content": "<p>I feel like we have had a flavor of this discussion several times...  There are groups that want stability and fewer releases and there are groups that want more rapid iteration.</p>\n<p>Generally, the people touching 'normative stuff' are in the former, people adding new content are the latter, and most people fall in-between depending on what they are working on at the moment.</p>\n<p>I have a todo on my list to write up a retrospective on topic-based subscriptions - which are currently not substantially different from the versions we ended with in 2019, but still do not have a publication that people can build a production system against.  If we had a road to publication in 2019, there would be production implementations today.  Since there was not, there are 'custom' implementations in production, with talk of how they will 'add' support for the standard when it is available.  Publication/process should not be such a barrier.</p>\n<p>On the other hand, a fixed target provides implementers confidence to actually build things.</p>\n<p>Looking at the publication history, FHIR started with rapid iteration.  I think that is a competitive advantage that allowed for good feedback and design.  Now that FHIR is mature enough to have large implementers of normative content, I think the publication/release/whatever process should be adjusted to account for it.  The alternative of 'slow releases' means that newer content cannot benefit from the rapid iterations that made FHIR successful.</p>",
        "id": 273558204,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1646084482
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> If the community votes down breaking change because it's too painful, FMM becomes moot.  As SDO, we don't have the luxury of changing stuff just because we want to once implementation gets far enough along - at least not if we want the community to adhere to our specs.</p>",
        "id": 273558612,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646084745
    },
    {
        "content": "<p>I like option 3. We are in a similar situation to <span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span>. We will be working with R4 quite a while more, but some of the new R5 features will be useful.</p>",
        "id": 273566565,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1646089043
    },
    {
        "content": "<p>Within option 3 some resources could have their FMM level raised to 4 or 5 without the admin overhead of making them normative. Resources that don't make it to FMM 5 can be seen as more risky than those that do.</p>",
        "id": 273566577,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1646089054
    },
    {
        "content": "<p>Maybe the candidates for normative in R5 can be triaged and the \"cheap enough\" ones can be made normative.</p>",
        "id": 273566581,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1646089057
    },
    {
        "content": "<p>Cheap is only in terms of number of ballot cycles.  And that cost is driven by comments that result in substantive change - which is always hard to predict.  So, if we take anything normative, we should expect an extra quarter or so to publishing timeline.</p>",
        "id": 273572034,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646092743
    },
    {
        "content": "<p>I wonder: if we go with option #3, what does it mean to call content normative for the first time?</p>",
        "id": 273595999,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646115222
    },
    {
        "content": "<p>I think that the answer is: it's an indication of how we feel</p>",
        "id": 273596005,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646115236
    },
    {
        "content": "<p>Surely option 3 would preclude making new things normative, and the issue is more about the status of changes to existing normative resources?</p>",
        "id": 273597710,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1646117153
    },
    {
        "content": "<p>My reading of Option 3 is that, as a 'Trial Use' release, it precludes making anything normative for the first time, or changing any content marked as normative in R4.</p>",
        "id": 273598746,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1646118208
    },
    {
        "content": "<p>I would have thought additive / non-breaking changes to R4-normative content would be acceptable as long as the additional elements were tagged as trial-use.</p>",
        "id": 273601208,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1646120973
    },
    {
        "content": "<p>From my assessment, there are many still working on getting R4 resources built into the ecosystem. I'm sure there was also a rush to get things into R5 which some may have and others did not. Therefore, should R5 be published and have minimal broad implementation? Otherwise, should R5 remain as a step to further mature content and implementation practicality towards an R6? As we know, the industry is mostly cautious, incremental, and has its own checks and balances (e.g., ROV/I, regulatory requirements, strategic roadmaps, so forth). Therefore, I would suggest to appease both sides of spectrum is to release R5 as journey to flesh things out for a much broader implementation solution in R6. At the end, there's a reason why versions exist. Some get used and others do not, but it should not preclude the need to innovate and mature its purpose. Now, the logistical nature of managing multiple versions is another factor onto its own, which I'll leave to others to evaluate.</p>",
        "id": 273649104,
        "sender_full_name": "Mike Hamidi",
        "timestamp": 1646145063
    },
    {
        "content": "<p>For option 3, we'll absolutely change normative content (though in a way that maintains compatibility with R4).  It's just that all of the changes would be flagged as STU.</p>",
        "id": 273650714,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646145824
    },
    {
        "content": "<p>Question for Option 3 (Trial Use): would this be FULLY supported by IG creation, SUSHI, servers, etc.?  if it's just an \"orphan child\" that is only partially supported for something like PQ/CMC, I don't know how much better it is than nothing at all.</p>",
        "id": 273653478,
        "sender_full_name": "Scott Gordon",
        "timestamp": 1646146847
    },
    {
        "content": "<p>I'd expect it to be supported by the HL7-published tools and Firely-supported tools as well as all reference implementations.  Support by EHRs and other tools would be driven by the market.  (That's true regardless of which option we choose.)</p>",
        "id": 273654276,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646147165
    },
    {
        "content": "<p>For #3, I think the following applies:</p>\n<ol>\n<li>No changes of FMM to normative (or only few?)</li>\n<li>Changes to current normative content will be present, but called out as STU</li>\n</ol>\n<p>What is not obvious, but I think is entirely possible, is that shortly after R5, we can have R5.1 with more normative content, as long as it is not substantially changed from R5. At least I hope that the publishing tools for the release are being improved to make that possible.</p>",
        "id": 273660025,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1646149386
    },
    {
        "content": "<p>I don't think there'd be any plan to follow a 5.0 STU release with a 5.1 normative release.  After we put out a release, the intention is to give the community time to adopt it.  Interim releases like R4B are quite restricted in what they can change - to maintain full compatibility outside specific domains.  (Not sure if we'll see similar circumstances to what drove the most recent R4B again before R6.)</p>",
        "id": 273665092,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646151083
    },
    {
        "content": "<p>Putting out a plethora of non-fully-compatible releases divides the interoperability community and increases the number of versions systems are being asked to support in parallel.  I don't think we'll be able to move to a regular semi-frequent set of updates until most content is normative and we're thus able to make changes in a way that systems can pick them up or not and still interoperate with everyone else.</p>",
        "id": 273665693,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646151315
    },
    {
        "content": "<blockquote>\n<p>Putting out a plethora of non-fully-compatible releases divides the interoperability community and increases the number of versions systems are being asked to support in parallel.  I don't think we'll be able to move to a regular semi-frequent set of updates until most content is normative and we're thus able to make changes in a way that systems can pick them up or not and still interoperate with everyone else.</p>\n</blockquote>\n<p>Completely agree. My suggestion is to have a fully compatible R5.1 release that is nothing like R4B - no new resources, no new datatypes, just the promotion of a few artifacts to normative status if necessary, so that we don't have to  rush any to R5, or wait to R6 for any that are ready.</p>",
        "id": 273668536,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1646152287
    },
    {
        "content": "<p>So a branch that would contain only technical corrections to R5 and those changes needed to move resources to normative (which could include some breaking changes).  If we were to do that, what would be the value of the R5 release?</p>",
        "id": 273670308,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646152972
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"192685\">Vassil Peytchev</span> <a href=\"#narrow/stream/250700-R4A.2FB.2FR5-Discussion/topic/R5.20Roadmap.20Discussion/near/273668536\">said</a>:</p>\n<blockquote>\n<p>... a fully compatible R5.1 release ... no new resources, no new datatypes ...</p>\n</blockquote>\n<p>A lot of WGs are working on things that involve breaking changes: new resources, changes to other resources, etc..  Getting that published is already an issue today - adding a release cycle that specifically prohibits it feels like the wrong direction.</p>\n<p>I would prefer something like* breaking the spec releases into two parts: one for mature portions (released every 1-2 years?) and one for 'fast moving' stuff (released every quarter?).  It means a bit of extra work in negotiation (e.g., I support R4 Core + 2021-Q1), but it would let the mature parts move slowly and not prevent the rest being worked on.  Assuming the actually interoperable parts are normative (or FMM4+ or whatever), it is reasonable to have slow release cycles of that content and pursue broad adoption.  The rest is content that is being worked on, but needs a publication process to move to the 'next step'.</p>\n<p>*This is one approach of many - I am not particularly invested into any single one.  Pros and cons need to be weighed carefully, but I think this process serves well-enough as an example.</p>",
        "id": 273673948,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1646154244
    },
    {
        "content": "<p>Putting out <em>any</em> release that isn't actually taken up by toolsmiths and EHRs is counter-productive.  My impression has been that every 1-2 years is about the max speed for toolsmiths and too fast for EHRs.  My impression of what the community can reasonably support would be a major release every 3-4 years and an interim release half-way-through for fast-moving stuff that will be supported by tools but will likely not be taken up by much of the community.  (Note that the major release won't actually see significant production implementation until about the time that the interim release comes out.</p>\n<p>If we were to put out R5 in Q1 2023, it'll be Q4 2024 before apps or other tools can start to take advantage of it.  R6 would be 2027 or 2028.</p>",
        "id": 273679994,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646156353
    },
    {
        "content": "<p>I don't think your assessment (7 quarters of lag between release and availability) takes the full breadth of the community into account, Lloyd. Some of the native FHIR services are entirely metadata driven and can deploy support for new releases immediately, when customer organizations have a reason (e.g., new resources or capabilities) to adopt.</p>",
        "id": 273680962,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1646156707
    },
    {
        "content": "<p>Maybe if we make <em>zero</em> changes to the infrastructure resources and data types.  But even then, there's a difference between 'theoretical capacity' and 'how quickly do they want to move?'.  The more time the tools spend chasing support for new releases (which to this point at least, have always required tool changes), the less energy there is for net new features.</p>",
        "id": 273681620,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646156949
    },
    {
        "content": "<p>Lloyd, you make it sound like EHRs implement 100% of a published spec and that is a barrier towards publication.  FHIR publication is monolithic, but implementations are not - and they are not only released every 3-4 years.  Implementations are incremental based on use-cases, market, etc.</p>\n<p>Related, if the publication window works that way the penalty for missing it is <em>extraordinarily</em> high.  This causes people to both push things out before they are ready, and to try and squeeze as much as possible into a release (issues which I think we are seeing a lot of right now).</p>",
        "id": 273681729,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1646156997
    },
    {
        "content": "<blockquote>\n<p>Maybe if we make zero changes to the infrastructure resources and data types.</p>\n</blockquote>\n<p>I mean, sure there's value in stabilizing the infrastructure resources. But with normative status achieved for all of the following, we are theoretically there.</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>Binary N<br>\nBundle N<br>\nCapabilityStatement N<br>\nCodeSystem N<br>\nDomainResource N<br>\nObservation N<br>\nOperationDefinition N<br>\nOperationOutcome N<br>\nParameters N<br>\nPatient N<br>\nResource N<br>\nStructureDefinition N<br>\nValueSet N</p>\n</div></div>",
        "id": 273682058,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1646157121
    },
    {
        "content": "<p>Implementations are released more frequently, but there's a huge incentive to ensure that all of the different implementations are on the same release.  Mixing and matching DSTU2, STU3 and R4 for different use-cases doesn't work well.  (If this is happening at all in production, it's either super rare or whoever's doing it is being very quiet.)  Where there are multiple versions in use, it tends to be via parallel interfaces.</p>",
        "id": 273682202,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646157161
    },
    {
        "content": "<p>R5 includes changes to the type hierarchy that most metadata-driven implementers consider 'breaking'.  Even now we're talking about refactoring how inheritance and interfaces are exposed.  That will also drive change.  And for most EHR implementers, I don't think metadata-driven works.</p>",
        "id": 273682544,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646157270
    },
    {
        "content": "<blockquote>\n<p>A lot of WGs are working on things that involve breaking changes: new resources, changes to other resources, etc.. Getting that published is already an issue today - adding a release cycle that specifically prohibits it feels like the wrong direction.</p>\n</blockquote>\n<p>I think there was a wide agreement that if the major releases take 2-3 years, there is a need for faster iteration in some cases. R4B is an anomaly because it was not planned, and a lot of new things were added. I think breaking changes need to be done only in major releases, non-breaking changes can go in point releases for faster iteration. Specifically for the current discussion I ma arguing that the first point release for R5 should be both non-breaking, and non-substantive, with the specific purpose to get almost ready resources to normative status.</p>\n<p>Some of the prerequisites for all this is to have the tooling support it, and agree that each major release (up to tow releases back)  will have a long-lived branch.</p>",
        "id": 273682588,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1646157290
    },
    {
        "content": "<blockquote>\n<p>I think breaking changes need to be done only in major releases,</p>\n</blockquote>\n<p>Can you clarify whether you mean <em>only in new publication versions</em> (\"4.0\" -&gt; \"4.3\" is -- confusingly -- already a <em>major release</em>, per our <a href=\"http://build.fhir.org/versions.html#versions\">versioning conventions</a>)?</p>",
        "id": 273682903,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1646157410
    },
    {
        "content": "<p>Frequent releases that don't break things doesn't really fix anything or add new capability - so what's the point?</p>",
        "id": 273682994,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646157453
    },
    {
        "content": "<p>If I hear Vassil's perspective correctly, the \"point\" is locking in consensus on things that turn out to be working well.</p>",
        "id": 273683103,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1646157491
    },
    {
        "content": "<blockquote>\n<p>But with normative status achieved for all of the following, we are theoretically there.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> well, there's some obvious exceptions that I sweat over: ConceptMap, and List. Vocab has made breaking changes to ConceptMap which are going to hurt for quite a while.</p>",
        "id": 273683671,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646157652
    },
    {
        "content": "<p>This is fair, but I suspect many servers offer metadata-driven FHIR APIs for R2/R3/R4 without any special built-in treatment of ConceptMap.</p>",
        "id": 273684100,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1646157825
    },
    {
        "content": "<p>Again Lloyd, the compatibility issue only exists for low-maturity resources, which are not widely adopted (by definition?).</p>\n<p>Since <code>Patient</code> is normative, an R4 and R5 version are compatible.  Perhaps R6 would introduce something breaking (who knows), but that is my point - as long as the \"mature\" resources do not change, the compatibility story is different.  I expect trivial effort for a vendor supporting a version of US Core in R4 to support the same version in R4B or even R5.  The effort comes when the next version of US Core needs something that was not a stable candidate in R4 and thus is new effort.  That will be true regardless of which FHIR release is current at the time.</p>\n<p>Similarly, I do not expect large EHR vendors have implemented many resources at FMM0.  So, a release that breaks something at that level doesn't affect them because they have not implemented it.</p>\n<p>But with that in mind, there are use-cases that need specific things that are low maturity.  E.g., vendors are implementing custom subscription solutions <em>because</em> of the delay in publication.  I imagine the same happens for almost any resource - it is being added because somebody needs it.  The sooner those items get published, the sooner adoption can pick up, revisions can happen, and maturity can progress.</p>\n<p>For a relevant reference - DICOM is published 4-5 times per year.  With so much of the spec stable, it is a non-issue.  People update to the latest when they have a use case that needs it, but long-term compatibility is the expectation.*</p>\n<p>*In fairness, the DICOM model uses UIDs for 'resources' and can just retire old ones - so an old profile of an MR does not prevent a new profile for MR.  I think an equivalent would be pinning Patient to its normative release (e.g., <code>Patient_R4</code>), and then even when R5 was published you would still use <code>Patient_R4</code> until there was a definition that superseded it.</p>",
        "id": 273685607,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1646158423
    },
    {
        "content": "<p>There are only two 'clinical' resources that are normative - Patient &amp; Observation.  Changes to things like AllergyIntolerance, Procedure, Practitioner, etc. are where the interesting thing is happening.  </p>\n<p>Supporting R4B should indeed be trivial.  Supporting R5 will be a significant lift because lots of resources in US Core have breaking and/or substantive changes in R5</p>",
        "id": 273686920,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646158978
    },
    {
        "content": "<p>Group, List, ImplementationGuide and lots of other widely implemented resources are at maturity level 1.  I don't think maturity drives implementation so much as utility.</p>",
        "id": 273687342,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646159112
    },
    {
        "content": "<p>I agree that once we get to a state where most resources are normative, we can update regularly.  We're just not there yet.</p>",
        "id": 273687423,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646159142
    },
    {
        "content": "<p>Fair enough, but without updating those things regularly we won't get there (or at least, it will take decades instead of years).</p>\n<p>If resources are in production use, lock them down.  Additional use cases can add to or create new resources.</p>",
        "id": 273688821,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1646159641
    },
    {
        "content": "<p>If things hit FMM 1, we expect them to be in production use - and there are loads of resources that are FMM 0 that are in production use.  So essentially everything will be 'locked down' in that breaking changes will hurt someone.</p>",
        "id": 273689660,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646159995
    },
    {
        "content": "<p>And we certainly don't want new resources created where existing ones can meet the use-case (but breaking changes are required to do so)</p>",
        "id": 273689763,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646160021
    },
    {
        "content": "<p>That feels like a rule of thumb, but it's not a situation we've had to grapple with yet, and analysis would have to take the particulars into account.</p>",
        "id": 273690101,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1646160173
    },
    {
        "content": "<blockquote>\n<p>If things hit FMM 1, we expect them to be in production use ...</p>\n</blockquote>\n<p>In <a href=\"https://hl7.org/fhir/versions.html#maturity\">Maturity Levels</a>, the first one that mentions production is FMM 5, so I think there is a disconnect there...  But it actually doesn't matter for my point of view.</p>\n<p>I am not trying to argue <em>where</em> a maturity line should exist, simply that there is a difference between mature resources where widespread adoption and interop is realistic and immature resources where rapid publication/feedback/modification is necessary.</p>\n<p>Those two perspectives are in conflict, and processes that do not address that are going to make somewhere between many and every person unhappy.</p>\n<p>When and how items could flow between parts is irrelevant if we do not agree that such a distinction exists and is important enough to address.</p>",
        "id": 273691950,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1646160887
    },
    {
        "content": "<p>(relevant too, I think, is the expectation of an implementer - e.g., an early adopter of FMM 0 resources should <em>expect</em> change, whereas someone implementing a normative resource should <em>expect</em> stability)</p>\n<p>edit: <code>The FMM level can be used by implementers to judge how advanced - and therefore stable - an artifact is.</code> (from versions.html)</p>",
        "id": 273692620,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1646161135
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>I think breaking changes need to be done only in major releases,</p>\n</blockquote>\n<p>Can you clarify whether you mean <em>only in new publication versions</em> (\"4.0\" -&gt; \"4.3\" is -- confusingly -- already a <em>major release</em>, per our <a href=\"http://build.fhir.org/versions.html#versions\">versioning conventions</a>)?</p>\n</blockquote>\n<p>Yes, \"only in publication versions\"</p>",
        "id": 273694622,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1646161882
    },
    {
        "content": "<p>We're not in disagreement around expectations for stability.  The question is what implementers will tolerate in terms of the frequency of breaking changes.  With a standard, for it to be useful, <em>everyone</em> in a community needs to be using a compatible version of the standard.  Which means that if you introduce a release with breaking changes that at least some portion of the community is using, then everyone needs to migrate or everyone ignores the release.  Even if you only include the resources in US Core/IPA, there's a lot that, while widely implemented, are <em>not</em> stable from the perspective of the maturity levels or the work groups.  If Practitioner underwent breaking changes in one release, Encounter the next, MedicationUsage the next, you're going to find EHRs (and all of the apps and services that sit on top of them) struggling mightily to deal with change every year, let alone every 6 months.</p>\n<p>For practical reasons, it's pretty much impossible to get out more than one release every 6 months from HL7.  The publication cycle takes that long at a minimum - and that's assuming you're not touching anything that's normative.  For something like FHIR Core, it's also a degree of intensity the organization couldn't easily sustain - at least not until we get to the point where we're primarily making technical corrections and tiny tweaks.</p>",
        "id": 273694699,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646161922
    },
    {
        "content": "<p>I think Option 3 is the most practical choice moving forward, supporting newer use cases while reducing the burden of backward compatibility.  I also think it would be useful to point to R6 as the next planned release with new normative content.</p>",
        "id": 273850843,
        "sender_full_name": "Wayne Kubick",
        "timestamp": 1646244270
    },
    {
        "content": "<p>I'm also for Option 3 perspective. One thing to note though (my own personal experience): The business requirements that my customers have are not fixed to any given FHIR version. Their requirements and needs are there independent of whatever FHIR version their range of systems run. If they have a need and their particular system was recently implemented, they won't spend a dime on updating it to support a more recent standard of FHIR if the new standard doesn't solve any of their requirements. IMHO, the maturity level on the particular resources plays a role, but it aint that big - at least not when reality enters the game. If there is a resource type that fits my customers needs within the specific version of FHIR my client has already chosen/bound to, I will use that resource to solve the needs, more or less regardless of the maturity level.</p>",
        "id": 273861159,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1646248282
    },
    {
        "content": "<p>Under option 3, would IGs be able to update to point at the \"Trial Use\" changes?</p>\n<p>I can see opinion leaning toward option 3, but I would like to put in a contrary vote for option 2.  For our SDC IG software, although there are changes in R5 I would like to see finally arrive, of those changes there is nothing for which I can't wait an extra few months, and I prefer implementing less frequent and more stable releases.  I don't feel strongly about it, though.</p>",
        "id": 273879826,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1646256555
    },
    {
        "content": "<p>CDS WG discussed this today and we took a straw poll, adding that feedback here:<br>\nStraw poll: Option #1: 1, Option #2: 0, Option #3: 12</p>",
        "id": 273893974,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1646263056
    },
    {
        "content": "<p>(I was the 1 vote for Option 1)</p>",
        "id": 273894011,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1646263073
    },
    {
        "content": "<p>IGs will be able to point at R5, regardless of what it is.  However, the ability for IGs to progress to normative will be based on what portion of their profiles can go normative - and generally only profiles on normative artifacts can go normative.</p>",
        "id": 273903546,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646268144
    },
    {
        "content": "<p>For clarity, when we talk about option 3 as R5 being \"trial use\", do we mean:</p>\n<ul>\n<li>the entire publication is trial use, or</li>\n<li>we don't progress things to normative beyond what is already normative in R4, and we don't change anything that was normative in R4</li>\n<li>or ...?</li>\n</ul>",
        "id": 273905044,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1646269109
    },
    {
        "content": "<p>Since no one corrected my question/definition earlier, I will repeat it here:</p>\n<ol>\n<li>No new normative content.</li>\n<li>All new content, including changes to currently normative content, will be marked as STU.</li>\n</ol>",
        "id": 273909519,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1646272150
    },
    {
        "content": "<p>Option 3 means:<br>\na) nothing that isn't normative in R4 becomes normative<br>\nb) all changes to R4 normative resources and pages are treated as 'STU'</p>\n<p>I don't know that we'll mark all page changes as STU - that'd be difficult and overwhelming to the reader.</p>",
        "id": 273917758,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646278802
    },
    {
        "content": "<p>This idea may be too far off to work (and I don't know the intricacies of the underlying technical requirements to support it) but what if the 'standard version' selected for use could be applied at a Resource level rather than a whole-system version.   If FHIR servers could support Resources as defined by their version, then systems could make incremental change as needed for desired implementations instead of whole-scale change for parts of the specification that are not as immediately relevant.   Problems move to how to track and account for Resource versions.</p>",
        "id": 273958574,
        "sender_full_name": "Brian Alper",
        "timestamp": 1646306814
    },
    {
        "content": "<p>One of the core tenets of FHIR is that there's one schema for a FHIR instance that works the same way across the world.  Mixing and matching versions breaks that and would seriously damage interoperability.  It would also break all reference implementations.  Finally, it would require us to bake 'version' into the instances, which we know increases long-term industry costs.</p>",
        "id": 273980651,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646317901
    },
    {
        "content": "<p>We, Cerner, suggest to go option #3.  Rationale:</p>\n<p>Option #1 is too big a rush and the normative additions would not necessarily be complete/mature enough given the rush while most national initiatives are FHIR R4 based.</p>\n<p>Option #2 would push out various updates being available for which there are projects that have an interest, but no need to be normative per se.  Additional, there are some changes necessary to normative materials that could be managed as STU updates that would help.  Also, there are pre-adoptions from R5 being considered that would then remain uncertain and subject to change.</p>\n<p>Option #3  would provide a balance of making available many of the enhancements of interest that do not need normative status, pre-adopt R5 in select areas using extensions that are more likely to provide continuity, and demonstrate progress.</p>",
        "id": 274012994,
        "sender_full_name": "Hans Buitendijk",
        "timestamp": 1646330506
    },
    {
        "content": "<p>Building upon the answers about what #3 means (some of this me just not understanding stuff):</p>\n<ol>\n<li>\n<p>Will all the new CI content (changes to R4 or just new) be in the R5 ballot or just parts?<br>\n1.1 If just parts, how are the parts determined?<br>\n1.2 If all the CI content, then is all under ballot or just parts. If just parts, how are those parts identified?</p>\n</li>\n<li>\n<p>Will it be possible to identify which content was intended to go Normative and what was not?</p>\n</li>\n</ol>",
        "id": 274029545,
        "sender_full_name": "Robert McClure",
        "timestamp": 1646337232
    },
    {
        "content": "<ol>\n<li>All content will be there and all content will be up for ballot regardless of option</li>\n<li>If we go option #3, then nothing will 'go' normative.  For existing pages that are normative, how we'll distinguish normative content from changes that remain STU is up in the air.  For resource elements that are net new, we can flag them.  For normative elements that have changed or normative pages with substantive changes, we might just include blurb at the top that says something like \"While this artifact/page is normative as of FHIR R4, changes introduced in this release are NOT yet considered normative.  Click [here] to see differences for this page with the equivalent in R4.\"</li>\n</ol>",
        "id": 274033924,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646338995
    },
    {
        "content": "<p>(That last bit hasn't been discussed, but it's my take on how to implement option 3 with the minimum of overhead.</p>",
        "id": 274033972,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646339024
    },
    {
        "content": "<p>Vocabulary WG discussed this today and we took a straw poll, adding that feedback here:</p>\n<p>Option #1: 5<br>\nOption #2: 0<br>\nOption #3: 2<br>\nAbstentions: 3</p>",
        "id": 274047255,
        "sender_full_name": "Reuben Daniels",
        "timestamp": 1646345118
    },
    {
        "content": "<p>OO voted today unanimously to support Option 3 mainly because we have 2 IGs that are built on R5 content, that have finished ballot reconciliation, but cannot be published until R5 is published.<br>\nOther thoughts to consider: <br>\nOption 3 should include a firm date for R6 release, so we can work backwards from that<br>\nOption 3 gives us more runway to get our resources into better shape for being normative<br>\nOO does NOT like Option 2, as it will stop our ability to publish 2 IGs we have ready for publication. </p>\n<ul>\n<li>here is a link to the minutes: <a href=\"https://confluence.hl7.org/display/OO/2022-03-03+Main\">https://confluence.hl7.org/display/OO/2022-03-03+Main</a><br>\nRiki</li>\n</ul>",
        "id": 274048783,
        "sender_full_name": "Riki Merrick",
        "timestamp": 1646345958
    },
    {
        "content": "<p>Patient Care didn't take a formal vote, but general discussion was leaning towards Option 3.</p>\n<ul>\n<li>PC appreciates having extra time to get AllergyIntolerance and Condition normative (though we did vote to proceed with those resources going normative if Option 1 comes to fruition)</li>\n<li>PC believes there is value in publishing R5 changes to AdverseEvent especially since we've received positive feedback on the build/R5 changes in that resource to date</li>\n</ul>",
        "id": 274057562,
        "sender_full_name": "Michelle (Moseman) Miller",
        "timestamp": 1646350860
    },
    {
        "content": "<p>Have the affiliates been asked?</p>",
        "id": 274164460,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1646416127
    },
    {
        "content": "<p>/ notified?</p>",
        "id": 274164889,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1646416334
    },
    {
        "content": "<p>Affiliate reps are generally responsible for sending out solicitations to their own members.  I know Canada has done that.  I can't speak for the others.</p>",
        "id": 274165470,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646416591
    },
    {
        "content": "<p>Who notified affiliate reps?</p>",
        "id": 274168004,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1646417737
    },
    {
        "content": "<p>It was sent to co-chairs, which went to the co-chairs of the international council.  They should have sent it out to the affiliate reps.  <span class=\"user-mention\" data-user-id=\"197016\">@Ron G Parker</span>?</p>",
        "id": 274178585,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646422671
    },
    {
        "content": "<p>AFAIA, HL7 on FHIR Posts are distributed to all HL7 International Members and Affiliate Members with HL7 International voting rights (which includes Chairs). The next IC meeting is scheduled for March 16th and this topic will almost certainly be on the Agenda.</p>",
        "id": 274182387,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1646424585
    },
    {
        "content": "<p>If that is the case, it must have ended up in my spam folder / blocked (because I can't find any mails mentioning this anywhere). I just wan't to make sure all affiliates are informed about this and that they are given a chance to be heard.</p>",
        "id": 274243714,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1646487244
    },
    {
        "content": "<p>I've circulated the HL7 on FHIR Post to the Affiliate Chairs List server.</p>",
        "id": 274268535,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1646518945
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192085\">@Brian Alper</span> We have been doing something like this with Ontoserver - we implement R4, but have \"pre-adopted\" some R5 features using the version Extensions. It's working for us because we're in a limited domain (terminology resources) and two of the core resources are normative.  It may not work for all, and does rely on the expected changes being stable.</p>",
        "id": 274341192,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1646618274
    },
    {
        "content": "<p>Security WG discussed this today. There was not strong sentiment the alternatives, but there is an interest to get a release of R5 available to enable IG work using the newer flavors of AuditEvent and Provenance. --&gt; Option 3.</p>",
        "id": 274433313,
        "sender_full_name": "John Moehrke",
        "timestamp": 1646676568
    },
    {
        "content": "<p>Clinical Genomics discussed on our call today and took a straw poll. </p>\n<p>Feedback:<br>\nCG is not really affected but does appreciate the extra time to clean up our MolecularSequence resource.<br>\nWe would like to learn more about specific dates for any of the options, especially freeze dates for changes.<br>\nMuch opposition to Option 1.</p>\n<p>Poll:<br>\nAbstain: 6<br>\nOption 1: 0<br>\nOption 2: 5<br>\nOption 3: 5</p>\n<p>Notes here: <br>\n<a href=\"https://confluence.hl7.org/display/CGW/CG-2022-03-08#CG20220308-Topic1:R5DeadlineUpdate\">https://confluence.hl7.org/display/CGW/CG-2022-03-08#CG20220308-Topic1:R5DeadlineUpdate</a></p>",
        "id": 274613339,
        "sender_full_name": "Kevin Power",
        "timestamp": 1646776650
    },
    {
        "content": "<p>THanks all for the feedback. Opinion has been strongly in favour of option #3 but not unanimous. </p>\n<p>now we have to figure out whether is a procedurally correct way to do option #3</p>",
        "id": 274646599,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646805476
    },
    {
        "content": "<p>Option #1.. I think in Software Engineering it's common sense: software has validity! Adaptation of a specification will never be immediate. However, the requirements are the main responsible for the depreciation of a software. A pandemic is a very strong reason for new requirements. The R4 version may still be supported, but we need to evolve... Clouds deprecate non-LTS language versions and we adapt to the new version. I think open source also has to follow the needs and be the engine of change. This is just my opinion. Thanks.</p>",
        "id": 276151797,
        "sender_full_name": "Felipe Soriano",
        "timestamp": 1647934681
    },
    {
        "content": "<p>However, I think Semantic Versioning is very important to avoid impacts. I believe that a feature should come out of an R5 release only after being marked as Deprecated in an R4 release. And those that have undergone changes enter as Trial Use. I don't think I'd see it be that extreme in the changes. Change major version only when there is something that breaks the previous API.</p>",
        "id": 276153087,
        "sender_full_name": "Felipe Soriano",
        "timestamp": 1647935864
    },
    {
        "content": "<p>Any update on Option #3, <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ? FWIW, I favor it.</p>",
        "id": 277164073,
        "sender_full_name": "Peter Bernhardt",
        "timestamp": 1648654943
    },
    {
        "content": "<p>see <a class=\"stream\" data-stream-id=\"179240\" href=\"/#narrow/stream/179240-Announcements\">#Announcements</a> - <a href=\"#narrow/stream/179240-Announcements/topic/R5.20Roadmap\">https://chat.fhir.org/#narrow/stream/179240-Announcements/topic/R5.20Roadmap</a></p>",
        "id": 277166675,
        "sender_full_name": "John Moehrke",
        "timestamp": 1648656108
    }
]