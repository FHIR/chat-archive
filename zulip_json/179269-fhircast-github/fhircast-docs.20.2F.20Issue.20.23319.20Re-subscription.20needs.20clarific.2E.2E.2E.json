[
    {
        "content": "<p>matthiaswilder opened <a href=\"https://github.com/HL7/fhircast-docs/issues/319\">Issue #319</a>:</p>\n<blockquote>\n<p>Currently the spec suggests that re-subscription is supported by including the <code>hub.channel.endpoint</code> parameter in a subscription request. However, it makes no mention of re-subscription in the Subscription Denial/Confirmation sections. In those sections the language is written as if the subscriber will _always_ need to connect to a websocket before receiving a confirmation/denial, but in re-subscription the subscriber has presumably already connected. </p>\n<p>The obvious solution here is that the confirmation/denial is sent automatically, since the connection is already open. But I have had one person suggest that this implies another behavior where the subscriber reconnects to the websocket on every re-subscription.</p>\n<p>I think that language calling out permutations of the subscription for re-subscription should probably be more explicit and less inferred.</p>\n</blockquote>",
        "id": 202626970,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1593639360
    },
    {
        "content": "<p>matthiaswilder edited <a href=\"https://github.com/HL7/fhircast-docs/issues/319\">Issue #319</a>:</p>\n<blockquote>\n<p>Currently the spec suggests that re-subscription is supported by including the <code>hub.channel.endpoint</code> parameter in a subscription request. However, it makes no mention of re-subscription in the Subscription Denial/Confirmation sections. In those sections the language is written as if the subscriber will _always_ need to connect to a websocket before receiving a confirmation/denial, but in re-subscription the subscriber has presumably already connected. </p>\n<p>The obvious solution here is that the confirmation/denial is sent automatically, since the connection is already open. But I have had at least one person suggest that this implies another behavior where the subscriber reconnects to the websocket on every re-subscription.</p>\n<p>I think that language calling out permutations of the subscription for re-subscription should probably be more explicit and less inferred.</p>\n</blockquote>",
        "id": 202627023,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1593639372
    },
    {
        "content": "<p>matthiaswilder edited <a href=\"https://github.com/HL7/fhircast-docs/issues/319\">Issue #319</a>:</p>\n<blockquote>\n<p>Currently the spec suggests that re-subscription is supported by including the <code>hub.channel.endpoint</code> parameter in a subscription request. However, it makes no mention of re-subscription in the Subscription Denial/Confirmation sections. In those sections the language is written as if the subscriber will _always_ need to connect to a websocket before receiving a confirmation/denial, but in re-subscription the subscriber has presumably already connected. </p>\n<p>The obvious solution to me here is that the confirmation/denial is sent automatically, since the connection is already open. But I have had at least one person suggest that this implies another behavior where the subscriber reconnects to the websocket on every re-subscription.</p>\n<p>I think that language calling out permutations of the subscription for re-subscription should probably be more explicit and less inferred.</p>\n</blockquote>",
        "id": 202627057,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1593639395
    }
]