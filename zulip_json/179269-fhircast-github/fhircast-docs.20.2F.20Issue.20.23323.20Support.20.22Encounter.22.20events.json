[
    {
        "content": "<p>wmaethner opened <a href=\"https://github.com/HL7/fhircast-docs/issues/323\">Issue #323</a>:</p>\n<blockquote>\n<p><strong>What</strong><br>\nAlong with Patient syncing, many applications want or need to know the encounter context as well. FHIRcast currently \"supports\" that within the Patient events as an extra contextual resource, but I think it should be its own explicit set of events.</p>\n<p>FHIRcast already supports the creation of new events that follow the specified format shown below. So \"Encounter-open/close\" are technically allowed based on the current spec, but if we move in that direction then we should do two things:</p>\n<ol>\n<li>Include those events in the event catalog. That isn't part of the official spec so maybe that is just getting agreement here in Github or on a call.</li>\n<li>Remove the Encounter context from the Patient events. </li>\n</ol>\n<p>![image](<a href=\"https://user-images.githubusercontent.com/32457351/88719886-9856bc80-d0e9-11ea-9b3a-4aef13496a33.png\">https://user-images.githubusercontent.com/32457351/88719886-9856bc80-d0e9-11ea-9b3a-4aef13496a33.png</a>)</p>\n<p><strong>Why</strong><br>\nEncounter is enough of a major concept that it deserves its own events rather than being tied into the Patient events.</p>\n<p>Also the current method doesn't have a great way of supporting switching between encounters for the same patient. Consider the scenario that you open up Patient A and Encounter A. We would currently send a Patient-open event that includes the Encounter resource as well. The user then switches from Encounter A to Encounter B. Depending on the how the application works this could mean closing Encounter A, but the important point here is that the Patient is the same and is never closed. There isn't a good way of handling this currently. </p>\n<ul>\n<li>Do we send a Patient-close event with Encounter A then a Patient-open with Encounter B? Since the patient never closed, this feels wrong.</li>\n<li>Do we just send a Patient-open with Encounter B? What happened to Encounter A? Is it closed or still open? </li>\n</ul>\n</blockquote>",
        "id": 205290746,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1595970278
    },
    {
        "content": "<p>bvdh <a href=\"https://github.com/HL7/fhircast-docs/issues/323#issuecomment-666236297\">commented</a> on <a href=\"https://github.com/HL7/fhircast-docs/issues/323\">Issue #323</a>:</p>\n<blockquote>\n<p>Will,</p>\n<p>Good idea – we should also do the same for DiagnosticReport (fields patient and imaginstudy).<br>\nRegarding the event sending approach – that sounds similar to the discussion on ImagingStudy. My proposal would be to not to send the patient-close. As the patient in context does not change.</p>\n<p>Bas</p>\n<p>From: Will Maethner &lt;<a href=\"mailto:notifications@github.com\">notifications@github.com</a>&gt;<br>\nSent: Tuesday, July 28, 2020 11:05 PM<br>\nTo: HL7/fhircast-docs &lt;<a href=\"mailto:fhircast-docs@noreply.github.com\">fhircast-docs@noreply.github.com</a>&gt;<br>\nCc: Subscribed &lt;<a href=\"mailto:subscribed@noreply.github.com\">subscribed@noreply.github.com</a>&gt;<br>\nSubject: [HL7/fhircast-docs] Support \"Encounter\" events (#323)</p>\n<p>What<br>\nAlong with Patient syncing, many applications want or need to know the encounter context as well. FHIRcast currently \"supports\" that within the Patient events as an extra contextual resource, but I think it should be its own explicit set of events.</p>\n<p>FHIRcast already supports the creation of new events that follow the specified format shown below. So \"Encounter-open/close\" are technically allowed based on the current spec, but if we move in that direction then we should do two things:</p>\n<p>1.  Include those events in the event catalog. That isn't part of the official spec so maybe that is just getting agreement here in Github or on a call.<br>\n  2.  Remove the Encounter context from the Patient events.</p>\n<p>[Image removed by sender. image]&lt;<a href=\"https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fuser-images.githubusercontent.com%2F32457351%2F88719886-9856bc80-d0e9-11ea-9b3a-4aef13496a33.png&amp;data=02%7C01%7C%7C157856ed6a7f484dd9f108d83339e04a%7C1a407a2d76754d178692b3ac285306e4%7C0%7C0%7C637315670953576973&amp;sdata=sXzUi4Yyy8U5JaBQ66%2FJVrYnK3DQUabCHAdCY8xb1cQ%3D&amp;reserved=0\">https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fuser-images.githubusercontent.com%2F32457351%2F88719886-9856bc80-d0e9-11ea-9b3a-4aef13496a33.png&amp;data=02%7C01%7C%7C157856ed6a7f484dd9f108d83339e04a%7C1a407a2d76754d178692b3ac285306e4%7C0%7C0%7C637315670953576973&amp;sdata=sXzUi4Yyy8U5JaBQ66%2FJVrYnK3DQUabCHAdCY8xb1cQ%3D&amp;reserved=0</a>&gt;</p>\n<p>Why<br>\nEncounter is enough of a major concept that it deserves its own events rather than being tied into the Patient events.</p>\n<p>Also the current method doesn't have a great way of supporting switching between encounters for the same patient. Consider the scenario that you open up Patient A and Encounter A. We would currently send a Patient-open event that includes the Encounter resource as well. The user then switches from Encounter A to Encounter B. Depending on the how the application works this could mean closing Encounter A, but the important point here is that the Patient is the same and is never closed. There isn't a good way of handling this currently.</p>\n<p>*   Do we send a Patient-close event with Encounter A then a Patient-open with Encounter B? Since the patient never closed, this feels wrong.<br>\n  *   Do we just send a Patient-open with Encounter B? What happened to Encounter A? Is it closed or still open?</p>\n<p>—<br>\nYou are receiving this because you are subscribed to this thread.<br>\nReply to this email directly, view it on GitHub&lt;<a href=\"https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FHL7%2Ffhircast-docs%2Fissues%2F323&amp;data=02%7C01%7C%7C157856ed6a7f484dd9f108d83339e04a%7C1a407a2d76754d178692b3ac285306e4%7C0%7C0%7C637315670953581969&amp;sdata=kIrfyIgGxN5TCRWwCN27VO0ixrNif4YVSyi2vIikK4Q%3D&amp;reserved=0\">https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2FHL7%2Ffhircast-docs%2Fissues%2F323&amp;data=02%7C01%7C%7C157856ed6a7f484dd9f108d83339e04a%7C1a407a2d76754d178692b3ac285306e4%7C0%7C0%7C637315670953581969&amp;sdata=kIrfyIgGxN5TCRWwCN27VO0ixrNif4YVSyi2vIikK4Q%3D&amp;reserved=0</a>&gt;, or unsubscribe&lt;<a href=\"https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FACX4WIRI54RB47NYFMCOBRLR544PJANCNFSM4PK5OEDQ&amp;data=02%7C01%7C%7C157856ed6a7f484dd9f108d83339e04a%7C1a407a2d76754d178692b3ac285306e4%7C0%7C0%7C637315670953586965&amp;sdata=H%2BxOhSnpvt8tL0RL8%2FJSBJx9JyckV7ACGLAMkZJwbG0%3D&amp;reserved=0\">https://eur01.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FACX4WIRI54RB47NYFMCOBRLR544PJANCNFSM4PK5OEDQ&amp;data=02%7C01%7C%7C157856ed6a7f484dd9f108d83339e04a%7C1a407a2d76754d178692b3ac285306e4%7C0%7C0%7C637315670953586965&amp;sdata=H%2BxOhSnpvt8tL0RL8%2FJSBJx9JyckV7ACGLAMkZJwbG0%3D&amp;reserved=0</a>&gt;.</p>\n<hr>\n<p>The information contained in this message may be confidential and legally protected under applicable law. The message is intended solely for the addressee(s). If you are not the intended recipient, you are hereby notified that any use, forwarding, dissemination, or reproduction of this message is strictly prohibited and may be unlawful. If you are not the intended recipient, please contact the sender by return e-mail and destroy all copies of the original message.</p>\n</blockquote>",
        "id": 205454936,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1596098969
    },
    {
        "content": "<p>mbellehumeur <a href=\"https://github.com/HL7/fhircast-docs/issues/323#issuecomment-667908508\">commented</a> on <a href=\"https://github.com/HL7/fhircast-docs/issues/323\">Issue #323</a>:</p>\n<blockquote>\n<p>Hi,</p>\n<p>I agree with separate encounter events and taking encounter out of  patient.<br>\nI would like to configure my PACS client to consume the encounter events generated by an EMR as in the IHE encounter-based imaging workflow (IHE-EBIW) scenarios.  Just get it touch with me if you would like to setup a test.</p>\n<p>Regarding “switching” events:  I think these events should not be tied to FHIR resources.  It’s really a UI message for multi-tab applications that manage 0 to N tab-context in parallel.  Maybe it should be call “tab-switch”, for example.  </p>\n<p>We could address multi-tab applications by adding an optional “tabIndex” parameter to each context; tabIndex zero being the left-most tab.<br>\nA “tab-switch” event would be generated when a user changes tab in any application.  This would not change any context or FHIR resource. It just informs the other multi-tab applications to quickly switch to the specified tab and not reload anything.<br>\nApplications that are not multi-tab could participate in the workflow by keeping track of each tab context or by doing a get-context to the hub after receiving a “tab-switch” event. </p>\n<p>Thanks,<br>\nMartin Bellehumeur</p>\n</blockquote>",
        "id": 205773595,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1596446047
    },
    {
        "content": "<p>wmaethner <a href=\"https://github.com/HL7/fhircast-docs/issues/323#issuecomment-669618465\">commented</a> on <a href=\"https://github.com/HL7/fhircast-docs/issues/323\">Issue #323</a>:</p>\n<blockquote>\n<p>Hey @mbellehumeur </p>\n<p>We aren't actively implementing Encounter events ourselves yet, but once we get something up and running then definitely we can test something out. Maybe even at one of the upcoming connectathons. </p>\n<p>As for switching, unfortunately I think it may be more complicated than that (maybe why we still have yet to figure out a great solution). A \"tab-switch\" event may work if the application was like below:<br>\n![image](<a href=\"https://user-images.githubusercontent.com/32457351/89477199-41d52800-d752-11ea-83d9-54b119bae890.png\">https://user-images.githubusercontent.com/32457351/89477199-41d52800-d752-11ea-83d9-54b119bae890.png</a>)</p>\n<p>For us though (and maybe for other multi-tab applications), we can have multiple levels of tabs. We can have multiple patient tabs, and those patients could each have multiple encounter tabs, making the \"tab-switch\" event way more complicated. Hopefully the diagram below is helpful, but I don't if we could make a \"tab-switch\" event work in that scenario.<br>\n![image](<a href=\"https://user-images.githubusercontent.com/32457351/89477726-a2b13000-d753-11ea-9174-7a5c50cf3aa5.png\">https://user-images.githubusercontent.com/32457351/89477726-a2b13000-d753-11ea-9174-7a5c50cf3aa5.png</a>)</p>\n<p>I think the \"switching\" and \"multi-tab\" problems are issues whether we add Encounter or not. Definitely something we need to figure out, but if there isn't an issue open for that discussion already (which would surprise me) then I will open one so that we can try and come up with some solutions.</p>\n<p>-Will</p>\n</blockquote>",
        "id": 206094373,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1596674834
    },
    {
        "content": "<p>mbellehumeur <a href=\"https://github.com/HL7/fhircast-docs/issues/323#issuecomment-671812686\">commented</a> on <a href=\"https://github.com/HL7/fhircast-docs/issues/323\">Issue #323</a>:</p>\n<blockquote>\n<p>I see your point; the flow and geometry often won’t match between applications.  <br>\nAlso, the feedback from my colleagues is that a tabIndex concept was tried in the past but no one wants to keep track of that.  So there are automatism to manage that.  <br>\nI think it would be a good connectathon activity to test multi-tab functionality with FHIRcast messages the same way that it does now and then see if we can propose some improvement.<br>\nI’ll send you and Isaac a Doodle to have a connectathon prep meeting.  We could review the current multi-tab integration and discuss encounter events/ IHE-EBIW.</p>\n</blockquote>",
        "id": 206551917,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1597135066
    },
    {
        "content": "<p>bvdh <a href=\"https://github.com/HL7/fhircast-docs/issues/323#issuecomment-682631765\">commented</a> on <a href=\"https://github.com/HL7/fhircast-docs/issues/323\">Issue #323</a>:</p>\n<blockquote>\n<p>At any point in time, it is very clear what the selected and background resources are:</p>\n<p>Scenario 1:</p>\n<ul>\n<li>step1:  <ul>\n<li>Selected =Patient &amp; Encounter1</li>\n<li>Background = -</li>\n</ul>\n</li>\n<li>step 2: <ul>\n<li>Selected =Patient &amp; Encounter2</li>\n<li>Background = Encounter 1</li>\n</ul>\n</li>\n</ul>\n<p>Scenario 2:</p>\n<ul>\n<li>step1:  <ul>\n<li>Selected =Patient1 &amp; Encounter1</li>\n<li>Background = -</li>\n</ul>\n</li>\n<li>step 2: <ul>\n<li>Selected =Patient1 &amp; Encounter2</li>\n<li>Background = Encounter 1</li>\n</ul>\n</li>\n<li>step 3: <ul>\n<li>Selected =Patient2 &amp; Encounter3</li>\n<li>Background = Patient1, Encounter 1, Encounter 2</li>\n</ul>\n</li>\n<li>step 4: <ul>\n<li>Selected =Patient2 &amp; Encounter4</li>\n<li>Background = Patient1, Encounter 1, Encounter 2, Encounter3</li>\n</ul>\n</li>\n</ul>\n<p>Maybe we should recognize this and at this concept to the FHIRcast events.<br>\nAn open and/or close event would than hold the selected resource of its type along with a list of background resources. </p>\n<p>So each event would have the following fields:<br>\n   &lt;resource&gt;-selected   0..1  the currently selected resource of the type<br>\n   &lt;resource&gt;-background 0..*  the currently open resources of the type that are not selected.<br>\n   &lt;resource&gt;-closed 0..1  the resource that has just been closed (when a resource is closed).<br>\nWhere resource is the name of the resource as used in the current event definitions. In the case of ImagingStudy this is patient and (imaging)study.</p>\n<p>This would make it very clear what the current status is and also resolve some of the unclear in between fields. A single tab application can ignore the background fields and would treat a change as an implicit close.</p>\n<p>This also allows us to reduce the number of events to one per Resource  as there is no clear difference between open and close events. This might makes processing of the events easier.</p>\n</blockquote>",
        "id": 208350546,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1598625426
    },
    {
        "content": "<p>isaacvetter closed <a href=\"https://github.com/HL7/fhircast-docs/issues/323\">Issue #323</a>:</p>\n<blockquote>\n<p><strong>What</strong><br>\nAlong with Patient syncing, many applications want or need to know the encounter context as well. FHIRcast currently \"supports\" that within the Patient events as an extra contextual resource, but I think it should be its own explicit set of events.</p>\n<p>FHIRcast already supports the creation of new events that follow the specified format shown below. So \"Encounter-open/close\" are technically allowed based on the current spec, but if we move in that direction then we should do two things:</p>\n<ol>\n<li>Include those events in the event catalog. That isn't part of the official spec so maybe that is just getting agreement here in Github or on a call.</li>\n<li>Remove the Encounter context from the Patient events. </li>\n</ol>\n<p>![image](<a href=\"https://user-images.githubusercontent.com/32457351/88719886-9856bc80-d0e9-11ea-9b3a-4aef13496a33.png\">https://user-images.githubusercontent.com/32457351/88719886-9856bc80-d0e9-11ea-9b3a-4aef13496a33.png</a>)</p>\n<p><strong>Why</strong><br>\nEncounter is enough of a major concept that it deserves its own events rather than being tied into the Patient events.</p>\n<p>Also the current method doesn't have a great way of supporting switching between encounters for the same patient. Consider the scenario that you open up Patient A and Encounter A. We would currently send a Patient-open event that includes the Encounter resource as well. The user then switches from Encounter A to Encounter B. Depending on the how the application works this could mean closing Encounter A, but the important point here is that the Patient is the same and is never closed. There isn't a good way of handling this currently. </p>\n<ul>\n<li>Do we send a Patient-close event with Encounter A then a Patient-open with Encounter B? Since the patient never closed, this feels wrong.</li>\n<li>Do we just send a Patient-open with Encounter B? What happened to Encounter A? Is it closed or still open? </li>\n</ul>\n</blockquote>",
        "id": 231833092,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1616689845
    }
]