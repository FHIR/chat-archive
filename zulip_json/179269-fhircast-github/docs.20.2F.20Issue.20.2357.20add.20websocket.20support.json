[
    {
        "content": "<p>isaacvetter <a href=\"https://github.com/fhircast/docs/pull/57#issuecomment-452560683\" target=\"_blank\" title=\"https://github.com/fhircast/docs/pull/57#issuecomment-452560683\">commented</a> on <a href=\"https://github.com/fhircast/docs/pull/57\" target=\"_blank\" title=\"https://github.com/fhircast/docs/pull/57\">Issue #57</a></p>\n<blockquote>\n<p>@gkustas, @mbellehumeur, will you guys look at this?</p>\n</blockquote>",
        "id": 154696905,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1547004946
    },
    {
        "content": "<p>isaacvetter edited a <a href=\"https://github.com/fhircast/docs/pull/57#issuecomment-452560683\" target=\"_blank\" title=\"https://github.com/fhircast/docs/pull/57#issuecomment-452560683\">comment</a> on <a href=\"https://github.com/fhircast/docs/pull/57\" target=\"_blank\" title=\"https://github.com/fhircast/docs/pull/57\">Issue #57</a></p>\n<blockquote>\n<p>@gkustas, @mbellehumeur, will you guys look at this?</p>\n<p>Following along with @gkustas's excellent take on including websocket support in FHIRcast in issue #45, this pr proposes that the subscriber uses all existing RESTful interactions where it is the client, including subscription creation. This scopes our websocket changes to just what's needed (not requiring a subscriber to have a webserver/SSL cert). </p>\n<p>Note that one of the problems with websockets is the inability to cleanly provide a bearer token in the javascript API. The proposed approach in this pr treats the <code>hub.topic</code> as an authentication \"ticket\" (which would require additional entropy in the <code>hub.topic</code> uri).</p>\n</blockquote>",
        "id": 154697538,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1547005910
    }
]