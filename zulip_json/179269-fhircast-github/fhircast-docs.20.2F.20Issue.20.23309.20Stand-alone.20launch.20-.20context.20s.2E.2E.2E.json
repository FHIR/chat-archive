[
    {
        "content": "<p>mbellehumeur opened <a href=\"https://github.com/HL7/fhircast-docs/issues/309\" title=\"https://github.com/HL7/fhircast-docs/issues/309\">Issue #309</a>:</p>\n<blockquote>\n<p>To facilitate applications joining an on-going workflow independently, we propose to have the subscription process provide the last event.<br>\nThere are two opportunities in the current protocol to provide that information: in the body of the subscription response itself which is currently empty or as an additional field in the subscription confirmation message.</p>\n<p>This would also mitigate the need for a get-context query which was pushed out in the last ballot:<br>\n<a href=\"https://github.com/HL7/fhircast-docs/issues/143\" title=\"https://github.com/HL7/fhircast-docs/issues/143\">https://github.com/HL7/fhircast-docs/issues/143</a></p>\n</blockquote>",
        "id": 196624404,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1588766945
    },
    {
        "content": "<p>isaacvetter <a href=\"https://github.com/HL7/fhircast-docs/issues/309#issuecomment-627348225\">commented</a> on <a href=\"https://github.com/HL7/fhircast-docs/issues/309\">Issue #309</a>:</p>\n<blockquote>\n<p>Hey @mbellehumeur ,</p>\n<p>Wouldn't it make more sense for the hub to follow up a successful subscription with a normal event notification, sent to the new subscriber?</p>\n<p>The selection of what events to send, to different subscribers with different subscriptions is tricky. We wouldn't want to send a -close event, for example. Nor an -open for which a -close had occurred. </p>\n<p>It does seem that capabilities of Hubs will differ, the amount of time which a Hub caches/remembers these events will naturally vary, therefore this should be an optional feature of a Hub. </p>\n<p>What do you think, Martin?</p>\n<p>Isaac</p>\n<p>Related: <a href=\"https://jira.hl7.org/browse/FHIR-25877\">https://jira.hl7.org/browse/FHIR-25877</a></p>\n</blockquote>",
        "id": 197275661,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1589290394
    },
    {
        "content": "<p>mbellehumeur <a href=\"https://github.com/HL7/fhircast-docs/issues/309#issuecomment-627378340\">commented</a> on <a href=\"https://github.com/HL7/fhircast-docs/issues/309\">Issue #309</a>:</p>\n<blockquote>\n<p>Thanks @isaacvetter !<br>\nI’m fine with the mechanism but it needs to be in the standard.  <br>\nI think just sending the last event will cover &gt;80% use cases.  <br>\nAn app should know that if the last event was a “close” then it should do nothing.<br>\nIt should be an additional  parameter of the subscription so that only client that want to receive this “last event” do.  Can we have this added?</p>\n</blockquote>",
        "id": 197283369,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1589293443
    },
    {
        "content": "<p>isaacvetter <a href=\"https://github.com/HL7/fhircast-docs/issues/309#issuecomment-627522519\">commented</a> on <a href=\"https://github.com/HL7/fhircast-docs/issues/309\">Issue #309</a>:</p>\n<blockquote>\n<p>Eric Martin made the point during our II call this afternoon, that an event notification communicating current context following a successful subscription also persists the problem of potentially stale information. There's will also be timing issues unless the subscription is atomic.</p>\n</blockquote>",
        "id": 197319957,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1589308937
    },
    {
        "content": "<p>gkustas <a href=\"https://github.com/HL7/fhircast-docs/issues/309#issuecomment-635385712\">commented</a> on <a href=\"https://github.com/HL7/fhircast-docs/issues/309\">Issue #309</a>:</p>\n<blockquote>\n<p>This question of \"how to replace get context\" doesn't want to go away. My take on it, FWIW, is that we really shouldn't create a Hub standard for getting current context, until we standardize events/workflows and clearly define just \"what context is\" for any event/workflow. I don't know if that is possible or not, but consider the following:</p>\n<ol>\n<li>A Hub can optionally choose to provide context and versioning (standard FHIR version numbers for resources).</li>\n<li>The context is defined as the FHIR resource(s) identified by the event(s) sent in the topic session. Events would have to follow the spec definition [FHIR Resource]-[open|close|...|...|...]. Question: do we need to support multiple resources in a single session (ie. DiagnosticReport, ImagingStudy, etc.)?</li>\n<li>Whenever a [FHIR Resource]-open event is received, the Hub stores the resource and versions it. Likewise, when a [FHIR Resource]-update is received, the Hub applies the changes and increments the version number prior to broadcasting the update message. THIS IS THE IMPORTANT PART: Nuance currently uses a Bundle of transactions for the DiagnosticReport-update. We, as in FHIRCast, would have to define this or some other message structure as a standard for ALL EVENTS if we want to implement a \"smart Hub\" that can provide the current context. </li>\n<li>When a [FHIR Resource-close is received, the Hub can clear the context. There are probably other implementation details to consider here to ensure that old, unused topic sessions are cleaned up before a new session is started again.</li>\n<li>When a client determines it needs to get the current context, it could hit an endpoint on the Hub which would return a context array of every open FHIR Resource, complete with a version number. </li>\n</ol>\n<p>There are probably other issues to consider, but by far the biggest would be standardizing the event message structure, especially for updates.</p>\n</blockquote>",
        "id": 199029657,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1590676247
    },
    {
        "content": "<p>gkustas edited a <a href=\"https://github.com/HL7/fhircast-docs/issues/309#issuecomment-635385712\">comment</a> on <a href=\"https://github.com/HL7/fhircast-docs/issues/309\">Issue #309</a>:</p>\n<blockquote>\n<p>This question of \"how to replace get context\" doesn't want to go away. My take on it, FWIW, is that we really shouldn't create a Hub standard for getting current context, until we standardize events/workflows and clearly define just \"what context is\" for any event/workflow. I don't know if that is possible or not, but consider the following:</p>\n<ol>\n<li>A Hub can optionally choose to provide context and versioning (standard FHIR version numbers for resources).</li>\n<li>The context is defined as the FHIR resource(s) identified by the event(s) sent in the topic session. Events would have to follow the spec definition [FHIR Resource]-[open|close|...|...|...]. Question: do we need to support multiple resources in a single session (ie. DiagnosticReport, ImagingStudy, etc.)?</li>\n<li>Whenever a [FHIR Resource]-open event is received, the Hub stores the resource and versions it. Likewise, when a [FHIR Resource]-update is received, the Hub applies the changes and increments the version number prior to broadcasting the update message. THIS IS THE IMPORTANT PART: Nuance currently uses a Bundle of transactions for the DiagnosticReport-update. We, as in FHIRCast, would have to define this or some other message structure as a standard for ALL EVENTS if we want to implement a \"smart Hub\" that can provide the current context. </li>\n<li>When a [FHIR Resource-close is received, the Hub can clear the context. There are probably other implementation details to consider here to ensure that old, unused topic sessions are cleaned up before a new session is started again.</li>\n<li>When a client determines it needs to get the current context, it could hit an endpoint on the Hub which would return a context array of every open FHIR Resource, complete with a version number. </li>\n</ol>\n<p>There are probably other issues to consider, but by far the biggest would be standardizing the event message structure, especially for updates.</p>\n<p>@isaacvetter @mbellehumeur ???</p>\n</blockquote>",
        "id": 199029901,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1590676351
    },
    {
        "content": "<p>gkustas edited a <a href=\"https://github.com/HL7/fhircast-docs/issues/309#issuecomment-635385712\">comment</a> on <a href=\"https://github.com/HL7/fhircast-docs/issues/309\">Issue #309</a>:</p>\n<blockquote>\n<p>This question of \"how to replace get context\" doesn't want to go away. My take on it, FWIW, is that we really shouldn't create a Hub standard for getting current context, until we standardize events/workflows and clearly define just \"what context is\" for any event/workflow. I don't know if that is possible or not, but consider the following:</p>\n<ol>\n<li>A Hub can optionally choose to provide context and versioning (standard FHIR version numbers for resources).</li>\n<li>The context is defined as the FHIR resource(s) identified by the event(s) sent in the topic session. Events would have to follow the spec definition [FHIR Resource]-[open|close|...|...|...]. NOTE: a FHIR Resource may <strong>contain</strong> one or more other FHIR  Resources. In our implementation, a DiagnosticReport is the \"context\" and it contains ImagingStudy resource(s) and optionally Observation resources.  Question: do we need to support multiple top-level resources in a single session (for example ImagingStudy-open and DiagnosticReport-open)?</li>\n<li>Whenever a [FHIR Resource]-open event is received, the Hub stores the resource and versions it. Likewise, when a [FHIR Resource]-update is received, the Hub applies the changes and increments the version number prior to broadcasting the update message. THIS IS THE IMPORTANT PART: Nuance currently uses a Bundle of transactions for the DiagnosticReport-update. We, as in FHIRCast, would have to define this or some other message structure as a standard for ALL EVENTS if we want to implement a \"smart Hub\" that can provide the current context. </li>\n<li>When a [FHIR Resource-close is received, the Hub can clear the context. There are probably other implementation details to consider here to ensure that old, unused topic sessions are cleaned up before a new session is started again.</li>\n<li>When a client determines it needs to get the current context, it could hit an endpoint on the Hub which would return a context array of every open FHIR Resource, complete with a version number. </li>\n</ol>\n<p>There are probably other issues to consider, but by far the biggest would be standardizing the event message structure, especially for updates.</p>\n<p>@isaacvetter @mbellehumeur ???</p>\n</blockquote>",
        "id": 199034025,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1590678019
    }
]