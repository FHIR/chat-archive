[
    {
        "content": "<p>isaacvetter opened <a href=\"https://github.com/HL7/fhircast-docs/issues/381\">issue #381</a>:</p>\n<blockquote>\n<p>The language here: <a href=\"http://fhircast.org/specification/STU2/#request-context-change\">http://fhircast.org/specification/STU2/#request-context-change</a> describes how the hub can asynchronously reject  a context change before distributing it to the other applications:</p>\n<div class=\"codehilite\"><pre><span></span><code>Similar to the Hub&#39;s notifications to the subscriber, the subscriber MAY request context changes with an HTTP POST to the hub.url. The Hub SHALL either accept this context change by responding with any successful HTTP status or reject it by responding with any 4xx or 5xx HTTP status. Similar to event notifications, described above, the Hub MAY also respond with a 202 (Accepted) status, process the request, and then later**, instead of broadcasting the context change,** respond with a syncerror event in order to reject the request.  **In this specific case in which the context change is rejected by the Hub and not broadcasted,** the syncerror would only be sent to the requestor. The **requestor** SHALL be capable of gracefully handling a rejected context request.\n\nOnce a requested context change is accepted, the Hub SHALL broadcast the context notification to all subscribers, including the original requestor. The requestor can use the broadcasted notification as confirmation of their request. The Hub reusing the request&#39;s id is further confirmation that the event is a result of their request.\n</code></pre></div>\n</blockquote>",
        "id": 272963442,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1645629973
    },
    {
        "content": "<p>isaacvetter edited <a href=\"https://github.com/HL7/fhircast-docs/issues/381\">issue #381</a>:</p>\n<blockquote>\n<p>The language here: <a href=\"http://fhircast.org/specification/STU2/#request-context-change\">http://fhircast.org/specification/STU2/#request-context-change</a> describes how the hub can asynchronously reject a context change before distributing it to the other applications. This caused confusion/questions during the FHIRcast Hackathon today, because it wasn't clear that this was describing a special case of the Hub rejecting the context change and therefore generating a syncerror, vs the typical use of syncerror, in which the context event is broadcasted and one of the subscribing applications generates a syncerror and it's distributed.</p>\n<p>New or changed text in bold. This should be a nonfunctional clarification.</p>\n<blockquote>\n<p>Similar to the Hub's notifications to the subscriber, the subscriber MAY request context changes with an HTTP POST to the hub.url. The Hub SHALL either accept this context change by responding with any successful HTTP status or reject it by responding with any 4xx or 5xx HTTP status. Similar to event notifications, described above, the Hub MAY also respond with a 202 (Accepted) status, process the request, and then later<strong>, instead of broadcasting the context change,</strong> respond with a syncerror event in order to reject the request.  <strong>In this specific case in which the context change is rejected by the Hub and not broadcasted,</strong> the syncerror would only be sent to the requestor. The <strong>requestor</strong> SHALL be capable of gracefully handling a rejected context request.</p>\n<p>Once a requested context change is accepted, the Hub SHALL broadcast the context notification to all subscribers, including the original requestor. The requestor can use the broadcasted notification as confirmation of their request. The Hub reusing the request's id is further confirmation that the event is a result of their request.</p>\n</blockquote>\n</blockquote>",
        "id": 272963880,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1645630128
    },
    {
        "content": "<p>isaacvetter edited <a href=\"https://github.com/HL7/fhircast-docs/issues/381\">issue #381</a>:</p>\n<blockquote>\n<p>The language here: <a href=\"http://fhircast.org/specification/STU2/#request-context-change\">http://fhircast.org/specification/STU2/#request-context-change</a> describes how the hub can asynchronously reject a context change before distributing it to the other applications. This caused confusion/questions during the FHIRcast Hackathon today, because it wasn't clear that this was describing a special case of the Hub rejecting the context change and therefore generating a syncerror, vs the typical use of syncerror, in which the context event is broadcasted and one of the subscribing applications generates a syncerror and it's distributed.</p>\n<p>New or changed text in bold. This should be a nonfunctional clarification.</p>\n<blockquote>\n<p>Similar to the Hub's notifications to the subscriber, the subscriber MAY request context changes with an HTTP POST to the hub.url. The Hub SHALL either accept this context change by responding with any successful HTTP status or reject it by responding with any 4xx or 5xx HTTP status. Similar to event notifications, described above, the Hub MAY also respond with a 202 (Accepted) status, process the request, and then later, <strong>instead of broadcasting the context change</strong>, responds with a syncerror event in order to reject the request.  <strong>In this specific case in which the context change is rejected by the Hub and not broadcasted,</strong> the syncerror would only be sent to the requestor. The <strong>requestor</strong> SHALL be capable of gracefully handling a rejected context request.</p>\n<p>Once a requested context change is accepted, the Hub SHALL broadcast the context notification to all subscribers, including the original requestor. The requestor can use the broadcasted notification as confirmation of their request. The Hub reusing the request's id is further confirmation that the event is a result of their request.</p>\n</blockquote>\n</blockquote>",
        "id": 272964103,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1645630209
    }
]