[
    {
        "content": "<p>bvdh opened <a href=\"https://github.com/HL7/fhircast-docs/issues/79\" target=\"_blank\" title=\"https://github.com/HL7/fhircast-docs/issues/79\">Issue #79</a></p>\n<blockquote>\n<p>Maybe we should allow him to query the supported event using a GET on the cast-url.</p>\n</blockquote>",
        "id": 159919591,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1551711415
    },
    {
        "content": "<p>isaacvetter <a href=\"https://github.com/HL7/fhircast-docs/issues/79#issuecomment-469734842\" target=\"_blank\" title=\"https://github.com/HL7/fhircast-docs/issues/79#issuecomment-469734842\">commented</a> on <a href=\"https://github.com/HL7/fhircast-docs/issues/79\" target=\"_blank\" title=\"https://github.com/HL7/fhircast-docs/issues/79\">Issue #79</a></p>\n<blockquote>\n<p>Hey Bas,</p>\n<p>Great point.</p>\n<p>As we move events into OAuth2 scopes (per #64), a client would need to know the supported events before it learned the <code>cast-url</code>. </p>\n<p>If we look to SMART for inspiration, the choices are:<br>\n1. An <a href=\"http://www.hl7.org/fhir/smart-app-launch/conformance/index.html#using-cs\" target=\"_blank\" title=\"http://www.hl7.org/fhir/smart-app-launch/conformance/index.html#using-cs\">extension</a> on the FHIR server's CapabilityStatement<br>\n2. A url on the FHIR server, such as <a href=\"http://www.hl7.org/fhir/smart-app-launch/conformance/index.html#using-well-known\" target=\"_blank\" title=\"http://www.hl7.org/fhir/smart-app-launch/conformance/index.html#using-well-known\">.well-known/smart-configuration</a></p>\n<p>Actually, SMART's existing <code>smart-configuration</code> <a href=\"http://www.hl7.org/fhir/smart-app-launch/conformance/index.html#sample-response\" target=\"_blank\" title=\"http://www.hl7.org/fhir/smart-app-launch/conformance/index.html#sample-response\">json object</a> already defines the list of supported scopes. If we address #64, we get event discovery as part of this smart-configuration thing for free. The real question is, should we consider adding an additional \"capability\" to the smart-configuration file?</p>\n<p>Isaac</p>\n<div class=\"codehilite\"><pre><span></span>GET /apis/fhir/.well-known/smart-configuration HTTP/1.1\nHost: www.ehr.example.com\n</pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span>HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  &quot;authorization_endpoint&quot;: &quot;https://ehr.example.com/auth/authorize&quot;,\n  &quot;token_endpoint&quot;: &quot;https://ehr.example.com/auth/token&quot;,\n  &quot;token_endpoint_auth_methods_supported&quot;: [&quot;client_secret_basic&quot;],\n  &quot;scopes_supported&quot;: [&quot;openid&quot;, &quot;profile&quot;, &quot;launch&quot;, &quot;launch/patient&quot;, &quot;patient/*.*&quot;, &quot;user/*.*&quot;, &quot;offline_access&quot;, &quot;fhircast/open-patient-chart.*&quot;, &quot;fhircast/close-patient-chart.*&quot;],\n  &quot;response_types_supported&quot;: [&quot;code&quot;, &quot;code id_token&quot;, &quot;id_token&quot;, &quot;refresh_token&quot;],\n  &quot;capabilities&quot;: [&quot;launch-ehr&quot;, &quot;client-public&quot;, &quot;client-confidential-symmetric&quot;, &quot;context-ehr-patient&quot;, &quot;sso-openid-connect&quot;]\n}\n</pre></div>\n\n\n</blockquote>",
        "id": 160014417,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1551801428
    },
    {
        "content": "<p>bvdh <a href=\"https://github.com/HL7/fhircast-docs/issues/79#issuecomment-489449039\" target=\"_blank\" title=\"https://github.com/HL7/fhircast-docs/issues/79#issuecomment-489449039\">commented</a> on <a href=\"https://github.com/HL7/fhircast-docs/issues/79\" target=\"_blank\" title=\"https://github.com/HL7/fhircast-docs/issues/79\">Issue #79</a></p>\n<blockquote>\n<p>That would tie the event discovery to FHIR and to the authorization mechanism.<br>\nPrevious discussions indicated the need for deployments that do not require authorization. FHIRcast will also be used on more DICOM oriented deployments. <br>\nA FHIRcast specific endpoint that allows discovery would make this a FHIR Cast specific element that is independent of FHIR and authorization. <br>\nWe could use a subdirectory beneath the topic URI for this. E.g. &lt;topic&gt;/events .</p>\n</blockquote>",
        "id": 164929548,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1557079382
    }
]