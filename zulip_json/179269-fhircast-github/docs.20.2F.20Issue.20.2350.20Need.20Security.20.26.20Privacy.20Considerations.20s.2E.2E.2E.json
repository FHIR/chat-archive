[
    {
        "content": "<p>JohnMoehrke opened <a href=\"https://github.com/fhircast/docs/issues/50\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/50\">Issue #50</a></p>\n<blockquote>\n<p>During presentation of fhircast to the FHIR Sec it became clear that there should be a Security &amp; Privacy Considerations section in FHIRcast. It would indicate the security decisions made, both positive to security and negative to security. </p>\n<p>When leveraging the security of websub, identify those sections. When elevating the security consideration from websub to a higher standard, that should be mentioned. For example, websub uses SHOULD relative to https use, where FHIRcast elevates that to a SHALL. </p>\n<p>I think that FHIRcast should also recommend use of BCP195 which are IETF recommendations on proper use of TLS. This likely is just a SHOULD, but I would not discourage a SHALL.</p>\n<p>This section should also address security/privacy auditing.  I will put in a dedicated issue for this.</p>\n</blockquote>",
        "id": 154024586,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1544561013
    },
    {
        "content": "<p>isaacvetter <a href=\"https://github.com/fhircast/docs/issues/50#issuecomment-446773859\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/50#issuecomment-446773859\">commented</a> on <a href=\"https://github.com/fhircast/docs/issues/50\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/50\">Issue #50</a></p>\n<blockquote>\n<p>Create a Security Considerations page<br>\n* link to WebSub's <a href=\"https://www.w3.org/TR/websub/#security-considerations\" target=\"_blank\" title=\"https://www.w3.org/TR/websub/#security-considerations\">Security Considerations</a>, and as @JohnMoehrke suggests explain differences. <br>\n* link to <a href=\"http://www.hl7.org/fhir/smart-app-launch/\" target=\"_blank\" title=\"http://www.hl7.org/fhir/smart-app-launch/\">SMART</a> <br>\n* Describe potential auditing scenarios to address #51 </p>\n</blockquote>",
        "id": 154025028,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1544654957
    },
    {
        "content": "<p>isaacvetter <a href=\"https://github.com/fhircast/docs/issues/50#issuecomment-452904735\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/50#issuecomment-452904735\">commented</a> on <a href=\"https://github.com/fhircast/docs/issues/50\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/50\">Issue #50</a></p>\n<blockquote>\n<p>Hey @JohnMoehrke ,</p>\n<p>Here's my first, rough pass at a FHIRcast Security Considerations page. Any feedback (besides my flow charts not appearing inline) before a create a PR and ask others for review as well?</p>\n<p>Isaac</p>\n<hr>\n<p># Security Considerations</p>\n<p>FHIRcast enables the synchronization of healthcare applications user interfaces in real-time through the exchange of a workflow event to a small number of disparate applications. The notification message which describes the workflow event is a simple json wrapper around one or more FHIR resources. These FHIR resources can contain PHI. </p>\n<p>## Actors </p>\n<ul>\n<li>Subscribing app</li>\n<li>Hub</li>\n<li>Authorization Server</li>\n<li>Resource server</li>\n</ul>\n<p>FHIRcast ties SMART as the authnz layer together with WebSub for subscription and event notification.</p>\n<p>## SMART on FHIR<br>\n<a href=\"http://www.hl7.org/fhir/smart-app-launch/\" target=\"_blank\" title=\"http://www.hl7.org/fhir/smart-app-launch/\">SMART on FHIR</a> profiles <a href=\"https://tools.ietf.org/html/rfc6749#section-1.3.1\" target=\"_blank\" title=\"https://tools.ietf.org/html/rfc6749#section-1.3.1\">OAuth 2.0's authorization code grant type</a> and extends it by introducing an \"<a href=\"http://www.hl7.org/fhir/smart-app-launch/#ehr-launch-sequence\" target=\"_blank\" title=\"http://www.hl7.org/fhir/smart-app-launch/#ehr-launch-sequence\">EHR Launch Sequence</a>\". The Argonaut Project performed a formal security review of SMART on FHIR, resulting in a <a href=\"http://argonautwiki.hl7.org/images/e/ed/%282015May26%29RiskAssessment_ReportV1.pdf\" target=\"_blank\" title=\"http://argonautwiki.hl7.org/images/e/ed/%282015May26%29RiskAssessment_ReportV1.pdf\">Risk Assessment report</a>.</p>\n<p>FHIRcast builds on SMART by introducing a new, standard OAuth 2.0 scope of <code>fhircast</code>, as well as two new SMART launch parameters of <code>cast-hub</code> and <code>cast-session</code>. </p>\n<ul>\n<li><a href=\"http://www.hl7.org/fhir/smart-app-launch/\" target=\"_blank\" title=\"http://www.hl7.org/fhir/smart-app-launch/\">HL7 SMART on FHIR specification</a></li>\n<li><a href=\"http://argonautwiki.hl7.org/images/e/ed/%282015May26%29RiskAssessment_ReportV1.pdf\" target=\"_blank\" title=\"http://argonautwiki.hl7.org/images/e/ed/%282015May26%29RiskAssessment_ReportV1.pdf\">Argonaut Risk Assessment report</a>.</li>\n<li><a href=\"https://tools.ietf.org/html/rfc6819\" target=\"_blank\" title=\"https://tools.ietf.org/html/rfc6819\">OAuth 2.0 Threat Model and Security Considerations</a></li>\n</ul>\n<p>## HTTP Web Hooks using WebSub</p>\n<p><a href=\"https://www.w3.org/TR/websub/\" target=\"_blank\" title=\"https://www.w3.org/TR/websub/\">WebSub</a> is a W3C RFC designed for the distribution of web content through a standardized web hooks architecture. FHIRcast uses WebSub to allow clients to subscribe and unsubscribe to the Hub and, for the Hub to notify subscribers of events. </p>\n<p>Unlike WebSub, FHIRcast requires that both the Hub and the subscribing apps endpoints are exposed over https.</p>\n<p>The below <a href=\"https://drive.google.com/file/d/16pdG6Kw4pAG53J9d7_rK98DSvm_GMiCC/view?usp=sharing\" target=\"_blank\" title=\"https://drive.google.com/file/d/16pdG6Kw4pAG53J9d7_rK98DSvm_GMiCC/view?usp=sharing\">flow diagram</a> illustrates each of the interactions. </p>\n<p>![FHIRcast flow diagram](<a href=\"https://drive.google.com/file/d/16pdG6Kw4pAG53J9d7_rK98DSvm_GMiCC/preview\" target=\"_blank\" title=\"https://drive.google.com/file/d/16pdG6Kw4pAG53J9d7_rK98DSvm_GMiCC/preview\">https://drive.google.com/file/d/16pdG6Kw4pAG53J9d7_rK98DSvm_GMiCC/preview</a>)</p>\n<p>### How does the subscriber authenticate to the Hub?<br>\nThe subscribing app can make four distinct API calls to the Hub. For each of these calls, the subscribing app authenticates to the Hub with the Hub's authorization server issued SMART access_token. Per SMART on FHIR, this access_token is presented to the Hub in the HTTP Authorization header.</p>\n<p>1. App subscribes to Hub<br>\n2. App requests change to shared context<br>\n3. App requests current context<br>\n4. App unsubscribes from session</p>\n<div class=\"codehilite\"><pre><span></span>POST https://hub.example.com\nHost: hub.example.com\nAuthorization: Bearer i8hweunweunweofiwweoijewiwe\n</pre></div>\n\n\n<p>### How does the Hub validate the subscriber?<br>\nThe Hub can make three distinct API calls to the subscribing app's <code>hub.callback</code> url. </p>\n<p>1. Hub verifies callback url with app<br>\n2. Hub notifies app of event<br>\n3. Hub denies subscription</p>\n<p>This <a href=\"https://drive.google.com/file/d/1sqh3Jghd2QGzq_EhRR-uv6axgIkVW1EE/view?usp=sharing\" target=\"_blank\" title=\"https://drive.google.com/file/d/1sqh3Jghd2QGzq_EhRR-uv6axgIkVW1EE/view?usp=sharing\">flow diagram</a> describes the actors and actions. <br>\n![WebSub security flow](<a href=\"https://www.draw.io/?lightbox=1&amp;highlight=FFFFFF&amp;layers=1&amp;nav=1&amp;title=WebSub%20security%20sequence%20flow.html#Uhttps%3A%2F%2Fdrive.google.com%2Fuc%3Fid%3D1sqh3Jghd2QGzq_EhRR-uv6axgIkVW1EE%26export%3Ddownload\" target=\"_blank\" title=\"https://www.draw.io/?lightbox=1&amp;highlight=FFFFFF&amp;layers=1&amp;nav=1&amp;title=WebSub%20security%20sequence%20flow.html#Uhttps%3A%2F%2Fdrive.google.com%2Fuc%3Fid%3D1sqh3Jghd2QGzq_EhRR-uv6axgIkVW1EE%26export%3Ddownload\">https://www.draw.io/?lightbox=1&amp;highlight=FFFFFF&amp;layers=1&amp;nav=1&amp;title=WebSub%20security%20sequence%20flow.html#Uhttps%3A%2F%2Fdrive.google.com%2Fuc%3Fid%3D1sqh3Jghd2QGzq_EhRR-uv6axgIkVW1EE%26export%3Ddownload</a>)</p>\n<p>The <a href=\"http://fhircast.org/#app-subscribes-to-session\" target=\"_blank\" title=\"http://fhircast.org/#app-subscribes-to-session\">subscribing app initiates</a> the FHIRcast subscription, authenticating to the Hub with its bearer token, and providing the <code>hub.secret</code> and <code>hub.callback</code> url. The Hub verifies intent and ownership by performing an HTTP GET to the <code>hub.callback</code> url, with a <code>hub.challenge</code>. The subscribing app must echo the <code>hub.challenge</code> in the body of an HTTP 202 response. Once a workflow event occurs, the Hub notifies the app of the event by POSTing to the subscribing app's <code>hub.callback</code> url. The Hub provides an <a href=\"https://www.w3.org/TR/websub/#bib-RFC6151\" target=\"_blank\" title=\"https://www.w3.org/TR/websub/#bib-RFC6151\">HMAC signature</a> of the previously provided <code>hub.secret</code> in the <code>X-Hub-Signature</code> HTTP header.</p>\n<div class=\"codehilite\"><pre><span></span>POST https://app.example.com/session/callback/v7tfwuk17a HTTP/1.1\nHost: subscriber\nX-Hub-Signature: sha256=dce85dc8dfde2426079063ad413268ac72dcf845f9f923193285e693be6ff3ae\n</pre></div>\n\n\n<p>### WebSub Security Considerations<br>\nThe WebSub RFC defines <a href=\"https://www.w3.org/TR/websub/#security-considerations\" target=\"_blank\" title=\"https://www.w3.org/TR/websub/#security-considerations\">specific security considerations</a>, including the below, which are listed here for emphasis or elevation from optional to mandatory.<br>\n* Subscribers must communicate with a Hub over https.<br>\n* Hub must reject unsecured http callback urls. <br>\n* The subscribing app's <code>hub.callback</code> url should be unique and unguessable. <br>\n* Subscribing apps must provide a hub.secret and validate the <code>X-Hub-Signature</code> in the notification message.<br>\n* Hubs must reject subscriptions if the callback url does not echo the <code>hub.challenge</code> as part of the intent verification GET.</p>\n<ul>\n<li><a href=\"https://www.w3.org/TR/websub/\" target=\"_blank\" title=\"https://www.w3.org/TR/websub/\">W3C WebSub RFC</a></li>\n<li><a href=\"https://www.w3.org/TR/websub/#security-considerations\" target=\"_blank\" title=\"https://www.w3.org/TR/websub/#security-considerations\">W3C WebSub RFC's Security Considerations</a></li>\n<li>[HMAC RFC 6151[(<a href=\"https://www.w3.org/TR/websub/#bib-RFC6151\" target=\"_blank\" title=\"https://www.w3.org/TR/websub/#bib-RFC6151\">https://www.w3.org/TR/websub/#bib-RFC6151</a>)</li>\n</ul>\n<p>## Experimental Websockets support</p>\n<p>In addition to the web hooks communication pattern, the FHIRcast community is experimenting with the use of websockets for event notification. Below are some incomplete considerations for a potential websockets implementation.</p>\n<p>Subscribers SHOULD only use and Hub's SHOULD only accept connections made over the secure _wss://_ websocket protocol and not the unsecured _ws://_ websocket protocol.</p>\n<p>The WebSockets standard defines an <code>Origin</code> header, sent from the client to the server and intended to contain the url of the client. Subscribers using websockets may be running in a browser, in which case the browser enforces origin reporting to the Hub, or native apps in which the origin reported to the Hub can not be trusted. Therefore, a Hub exposing a websocket connection MUST not rely upon the origin sent by the subscriber. </p>\n<p>While native app subscribers can send any standard HTTP headers, notably including _Authorization: Bearer_, browser-based subscribers are limited to only HTTP Basic Auth or cookies. Therefore, the typical use of the OAuth2.0 access_token for bearer authentication does not consistently work with websockets. FHIRcast describes a \"ticket\"-based authentication system, in which the <code>cast-session</code> url provided to the subscriber as part of the secured SMART app launch serves not only as a unique session identifier, but also as an \"authorization ticket\". This authorization ticket effectively acts as a bearer token. The Hub should therefore take care to generate opaque and unique <code>cast-session</code> values. </p>\n<ul>\n<li><a href=\"https://tools.ietf.org/html/rfc6455\" target=\"_blank\" title=\"https://tools.ietf.org/html/rfc6455\">The WebSocket Protocol RFC 6455</a></li>\n<li><a href=\"https://devcenter.heroku.com/articles/websocket-security\" target=\"_blank\" title=\"https://devcenter.heroku.com/articles/websocket-security\">Heroku's excellent explanation of websocket security</a></li>\n</ul>\n</blockquote>",
        "id": 154765518,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1547075521
    },
    {
        "content": "<p>isaacvetter edited a <a href=\"https://github.com/fhircast/docs/issues/50#issuecomment-452904735\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/50#issuecomment-452904735\">comment</a> on <a href=\"https://github.com/fhircast/docs/issues/50\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/50\">Issue #50</a></p>\n<blockquote>\n<p>Hey @JohnMoehrke ,</p>\n<p>Here's my first, rough pass at a FHIRcast Security Considerations page. Any feedback (besides my flow charts not appearing inline) before a create a PR and ask others for review as well?</p>\n<p>Isaac</p>\n<hr>\n<p># Security Considerations</p>\n<p>FHIRcast enables the synchronization of healthcare applications user interfaces in real-time through the exchange of a workflow event to a small number of disparate applications. The notification message which describes the workflow event is a simple json wrapper around one or more FHIR resources. These FHIR resources can contain PHI. </p>\n<p>## Actors </p>\n<ul>\n<li>Subscribing app</li>\n<li>Hub</li>\n<li>Authorization Server</li>\n<li>Resource server</li>\n</ul>\n<p>FHIRcast ties SMART as the authnz layer together with WebSub for subscription and event notification.</p>\n<p>## Sources of Risk<br>\n1. The FHIRcast Hub pushes PII to a dynamic url specified by the authenticated app. <br>\n2. An app's credentials or a Hub's lack of authentication could be used by a malicious system to control the user's session.</p>\n<p>## SMART on FHIR<br>\n<a href=\"http://www.hl7.org/fhir/smart-app-launch/\" target=\"_blank\" title=\"http://www.hl7.org/fhir/smart-app-launch/\">SMART on FHIR</a> profiles <a href=\"https://tools.ietf.org/html/rfc6749#section-1.3.1\" target=\"_blank\" title=\"https://tools.ietf.org/html/rfc6749#section-1.3.1\">OAuth 2.0's authorization code grant type</a> and extends it by introducing an \"<a href=\"http://www.hl7.org/fhir/smart-app-launch/#ehr-launch-sequence\" target=\"_blank\" title=\"http://www.hl7.org/fhir/smart-app-launch/#ehr-launch-sequence\">EHR Launch Sequence</a>\". The Argonaut Project performed a formal security review of SMART on FHIR, resulting in a <a href=\"http://argonautwiki.hl7.org/images/e/ed/%282015May26%29RiskAssessment_ReportV1.pdf\" target=\"_blank\" title=\"http://argonautwiki.hl7.org/images/e/ed/%282015May26%29RiskAssessment_ReportV1.pdf\">Risk Assessment report</a>.</p>\n<p>FHIRcast builds on SMART by introducing a new, standard OAuth 2.0 scope of <code>fhircast</code>, as well as two new SMART launch parameters of <code>cast-hub</code> and <code>cast-session</code>. </p>\n<ul>\n<li><a href=\"http://www.hl7.org/fhir/smart-app-launch/\" target=\"_blank\" title=\"http://www.hl7.org/fhir/smart-app-launch/\">HL7 SMART on FHIR specification</a></li>\n<li><a href=\"http://argonautwiki.hl7.org/images/e/ed/%282015May26%29RiskAssessment_ReportV1.pdf\" target=\"_blank\" title=\"http://argonautwiki.hl7.org/images/e/ed/%282015May26%29RiskAssessment_ReportV1.pdf\">Argonaut Risk Assessment report</a>.</li>\n<li><a href=\"https://tools.ietf.org/html/rfc6819\" target=\"_blank\" title=\"https://tools.ietf.org/html/rfc6819\">OAuth 2.0 Threat Model and Security Considerations</a></li>\n</ul>\n<p>## HTTP Web Hooks using WebSub</p>\n<p><a href=\"https://www.w3.org/TR/websub/\" target=\"_blank\" title=\"https://www.w3.org/TR/websub/\">WebSub</a> is a W3C RFC designed for the distribution of web content through a standardized web hooks architecture. FHIRcast uses WebSub to allow clients to subscribe and unsubscribe to the Hub and, for the Hub to notify subscribers of events. </p>\n<p>Unlike WebSub, FHIRcast requires that both the Hub and the subscribing apps endpoints are exposed over https.</p>\n<p>The below <a href=\"https://drive.google.com/file/d/16pdG6Kw4pAG53J9d7_rK98DSvm_GMiCC/view?usp=sharing\" target=\"_blank\" title=\"https://drive.google.com/file/d/16pdG6Kw4pAG53J9d7_rK98DSvm_GMiCC/view?usp=sharing\">flow diagram</a> illustrates each of the interactions. </p>\n<p>![FHIRcast flow diagram](<a href=\"https://drive.google.com/file/d/16pdG6Kw4pAG53J9d7_rK98DSvm_GMiCC/preview\" target=\"_blank\" title=\"https://drive.google.com/file/d/16pdG6Kw4pAG53J9d7_rK98DSvm_GMiCC/preview\">https://drive.google.com/file/d/16pdG6Kw4pAG53J9d7_rK98DSvm_GMiCC/preview</a>)</p>\n<p>### How does the subscriber authenticate to the Hub?<br>\nThe subscribing app can make four distinct API calls to the Hub. For each of these calls, the subscribing app authenticates to the Hub with the Hub's authorization server issued SMART access_token. Per SMART on FHIR, this access_token is presented to the Hub in the HTTP Authorization header.</p>\n<p>1. App subscribes to Hub<br>\n2. App requests change to shared context<br>\n3. App requests current context<br>\n4. App unsubscribes from session</p>\n<div class=\"codehilite\"><pre><span></span>POST https://hub.example.com\nHost: hub.example.com\nAuthorization: Bearer i8hweunweunweofiwweoijewiwe\n</pre></div>\n\n\n<p>### How does the Hub validate the subscriber?<br>\nThe Hub can make three distinct API calls to the subscribing app's <code>hub.callback</code> url. </p>\n<p>1. Hub verifies callback url with app<br>\n2. Hub notifies app of event<br>\n3. Hub denies subscription</p>\n<p>This <a href=\"https://drive.google.com/file/d/1sqh3Jghd2QGzq_EhRR-uv6axgIkVW1EE/view?usp=sharing\" target=\"_blank\" title=\"https://drive.google.com/file/d/1sqh3Jghd2QGzq_EhRR-uv6axgIkVW1EE/view?usp=sharing\">flow diagram</a> describes the actors and actions. <br>\n![WebSub security flow](<a href=\"https://www.draw.io/?lightbox=1&amp;highlight=FFFFFF&amp;layers=1&amp;nav=1&amp;title=WebSub%20security%20sequence%20flow.html#Uhttps%3A%2F%2Fdrive.google.com%2Fuc%3Fid%3D1sqh3Jghd2QGzq_EhRR-uv6axgIkVW1EE%26export%3Ddownload\" target=\"_blank\" title=\"https://www.draw.io/?lightbox=1&amp;highlight=FFFFFF&amp;layers=1&amp;nav=1&amp;title=WebSub%20security%20sequence%20flow.html#Uhttps%3A%2F%2Fdrive.google.com%2Fuc%3Fid%3D1sqh3Jghd2QGzq_EhRR-uv6axgIkVW1EE%26export%3Ddownload\">https://www.draw.io/?lightbox=1&amp;highlight=FFFFFF&amp;layers=1&amp;nav=1&amp;title=WebSub%20security%20sequence%20flow.html#Uhttps%3A%2F%2Fdrive.google.com%2Fuc%3Fid%3D1sqh3Jghd2QGzq_EhRR-uv6axgIkVW1EE%26export%3Ddownload</a>)</p>\n<p>The <a href=\"http://fhircast.org/#app-subscribes-to-session\" target=\"_blank\" title=\"http://fhircast.org/#app-subscribes-to-session\">subscribing app initiates</a> the FHIRcast subscription, authenticating to the Hub with its bearer token, and providing the <code>hub.secret</code> and <code>hub.callback</code> url. The Hub verifies intent and ownership by performing an HTTP GET to the <code>hub.callback</code> url, with a <code>hub.challenge</code>. The subscribing app must echo the <code>hub.challenge</code> in the body of an HTTP 202 response. Once a workflow event occurs, the Hub notifies the app of the event by POSTing to the subscribing app's <code>hub.callback</code> url. The Hub provides an <a href=\"https://www.w3.org/TR/websub/#bib-RFC6151\" target=\"_blank\" title=\"https://www.w3.org/TR/websub/#bib-RFC6151\">HMAC signature</a> of the previously provided <code>hub.secret</code> in the <code>X-Hub-Signature</code> HTTP header.</p>\n<div class=\"codehilite\"><pre><span></span>POST https://app.example.com/session/callback/v7tfwuk17a HTTP/1.1\nHost: subscriber\nX-Hub-Signature: sha256=dce85dc8dfde2426079063ad413268ac72dcf845f9f923193285e693be6ff3ae\n</pre></div>\n\n\n<p>### WebSub Security Considerations<br>\nThe WebSub RFC defines <a href=\"https://www.w3.org/TR/websub/#security-considerations\" target=\"_blank\" title=\"https://www.w3.org/TR/websub/#security-considerations\">specific security considerations</a>, including the below, which are listed here for emphasis or elevation from optional to mandatory.<br>\n* Subscribers must communicate with a Hub over https.<br>\n* Hub must reject unsecured http callback urls. <br>\n* The subscribing app's <code>hub.callback</code> url should be unique and unguessable. <br>\n* Subscribing apps must provide a hub.secret and validate the <code>X-Hub-Signature</code> in the notification message.<br>\n* Hubs must reject subscriptions if the callback url does not echo the <code>hub.challenge</code> as part of the intent verification GET.</p>\n<ul>\n<li><a href=\"https://www.w3.org/TR/websub/\" target=\"_blank\" title=\"https://www.w3.org/TR/websub/\">W3C WebSub RFC</a></li>\n<li><a href=\"https://www.w3.org/TR/websub/#security-considerations\" target=\"_blank\" title=\"https://www.w3.org/TR/websub/#security-considerations\">W3C WebSub RFC's Security Considerations</a></li>\n<li>[HMAC RFC 6151[(<a href=\"https://www.w3.org/TR/websub/#bib-RFC6151\" target=\"_blank\" title=\"https://www.w3.org/TR/websub/#bib-RFC6151\">https://www.w3.org/TR/websub/#bib-RFC6151</a>)</li>\n</ul>\n<p>## Experimental Websockets support</p>\n<p>In addition to the web hooks communication pattern, the FHIRcast community is experimenting with the use of websockets for event notification. Below are some incomplete considerations for a potential websockets implementation.</p>\n<p>Subscribers SHOULD only use and Hub's SHOULD only accept connections made over the secure _wss://_ websocket protocol and not the unsecured _ws://_ websocket protocol.</p>\n<p>The WebSockets standard defines an <code>Origin</code> header, sent from the client to the server and intended to contain the url of the client. Subscribers using websockets may be running in a browser, in which case the browser enforces origin reporting to the Hub, or native apps in which the origin reported to the Hub can not be trusted. Therefore, a Hub exposing a websocket connection MUST not rely upon the origin sent by the subscriber. </p>\n<p>While native app subscribers can send any standard HTTP headers, notably including _Authorization: Bearer_, browser-based subscribers are limited to only HTTP Basic Auth or cookies. Therefore, the typical use of the OAuth2.0 access_token for bearer authentication does not consistently work with websockets. FHIRcast describes a \"ticket\"-based authentication system, in which the <code>cast-session</code> url provided to the subscriber as part of the secured SMART app launch serves not only as a unique session identifier, but also as an \"authorization ticket\". This authorization ticket effectively acts as a bearer token. The Hub should therefore take care to generate opaque and unique <code>cast-session</code> values. </p>\n<ul>\n<li><a href=\"https://tools.ietf.org/html/rfc6455\" target=\"_blank\" title=\"https://tools.ietf.org/html/rfc6455\">The WebSocket Protocol RFC 6455</a></li>\n<li><a href=\"https://devcenter.heroku.com/articles/websocket-security\" target=\"_blank\" title=\"https://devcenter.heroku.com/articles/websocket-security\">Heroku's excellent explanation of websocket security</a></li>\n</ul>\n</blockquote>",
        "id": 155031807,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1547388494
    },
    {
        "content": "<p>isaacvetter closed <a href=\"https://github.com/fhircast/docs/issues/50\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/50\">Issue #50</a></p>\n<blockquote>\n<p>During presentation of fhircast to the FHIR Sec it became clear that there should be a Security &amp; Privacy Considerations section in FHIRcast. It would indicate the security decisions made, both positive to security and negative to security. </p>\n<p>When leveraging the security of websub, identify those sections. When elevating the security consideration from websub to a higher standard, that should be mentioned. For example, websub uses SHOULD relative to https use, where FHIRcast elevates that to a SHALL. </p>\n<p>I think that FHIRcast should also recommend use of BCP195 which are IETF recommendations on proper use of TLS. This likely is just a SHOULD, but I would not discourage a SHALL.</p>\n<p>This section should also address security/privacy auditing.  I will put in a dedicated issue for this.</p>\n</blockquote>",
        "id": 156621222,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1548177149
    }
]