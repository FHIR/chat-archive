[
    {
        "content": "<p>JohnMoehrke opened <a href=\"https://github.com/fhircast/docs/issues/51\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/51\">Issue #51</a></p>\n<blockquote>\n<p>as part of a security&amp;privacy considerations section the specification should address security/privacy audit logging. A definitive specification would be nice, but this might be too hard. Thus some approaches could be discussed. </p>\n<p>We discussed today two approaches:<br>\na) The hub is responsible for recording all session create, and all session changes.<br>\nb) An authorized participant that is there simply to record session changes. This might be more modular, but might also be harder to manage from an OAuth authorizing app workflow.</p>\n<p>use of AuditEvent would be recommended... A pattern of how to fill out the AuditEvent when a context change is made would be good to define. (much like IHE does)</p>\n</blockquote>",
        "id": 154024591,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1544561419
    },
    {
        "content": "<p>isaacvetter <a href=\"https://github.com/fhircast/docs/issues/51#issuecomment-460717260\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/51#issuecomment-460717260\">commented</a> on <a href=\"https://github.com/fhircast/docs/issues/51\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/51\">Issue #51</a></p>\n<blockquote>\n<p>Hey @JohnMoehrke , </p>\n<p>I see the use of FHIRcast for audit logging as a potential, secondary use-case for the specification. </p>\n<p>I don't think that it makes sense to explicitly call out this secondary usecase until/unless it has seen some experimentation, prototyping and validation. </p>\n<p>Additionally, qudit logging notably differs from the primary usecase of context synchronization in the importance of old, failed event notifications. I don't know if this difference will prove critical or not. <br>\n (Related: PR #53).</p>\n<p>Since we've already published the related Security Considerations guidance in PR #60, I'm going to close this issue until there are more implementors looking to use FHIRcast for audit logging. </p>\n<p>Respond/re-open if you disagree.</p>\n<p>Isaac</p>\n</blockquote>",
        "id": 157621059,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1549386013
    },
    {
        "content": "<p>isaacvetter closed <a href=\"https://github.com/fhircast/docs/issues/51\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/51\">Issue #51</a></p>\n<blockquote>\n<p>as part of a security&amp;privacy considerations section the specification should address security/privacy audit logging. A definitive specification would be nice, but this might be too hard. Thus some approaches could be discussed. </p>\n<p>We discussed today two approaches:<br>\na) The hub is responsible for recording all session create, and all session changes.<br>\nb) An authorized participant that is there simply to record session changes. This might be more modular, but might also be harder to manage from an OAuth authorizing app workflow.</p>\n<p>use of AuditEvent would be recommended... A pattern of how to fill out the AuditEvent when a context change is made would be good to define. (much like IHE does)</p>\n</blockquote>",
        "id": 157621060,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1549386013
    },
    {
        "content": "<p>isaacvetter assigned <a href=\"https://github.com/fhircast/docs/issues/51\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/51\">Issue #51</a>(assigned to isaacvetter)</p>\n<blockquote>\n<p>as part of a security&amp;privacy considerations section the specification should address security/privacy audit logging. A definitive specification would be nice, but this might be too hard. Thus some approaches could be discussed. </p>\n<p>We discussed today two approaches:<br>\na) The hub is responsible for recording all session create, and all session changes.<br>\nb) An authorized participant that is there simply to record session changes. This might be more modular, but might also be harder to manage from an OAuth authorizing app workflow.</p>\n<p>use of AuditEvent would be recommended... A pattern of how to fill out the AuditEvent when a context change is made would be good to define. (much like IHE does)</p>\n</blockquote>",
        "id": 157621065,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1549386016
    }
]