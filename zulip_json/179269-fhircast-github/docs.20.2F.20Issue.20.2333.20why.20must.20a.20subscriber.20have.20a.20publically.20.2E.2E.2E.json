[
    {
        "content": "<p>isaacvetter opened <a href=\"https://github.com/fhircast/docs/issues/33\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/33\">Issue #33</a></p>\n<blockquote>\n<p>During the HL7 working group meeting in May in KÃ¶ln, there was strong feedback from @bvhd and @joshmandel a subscriber ought not to be required to host an accessible url. WebSub requires that the subscriber host an accessible url which receives notifications. </p>\n<p>This requirement can dictate a subscriber's use of a client/server architecture. Alternatives could include using a long-running server/client communication method such as HTTP Long-Polling/Comet, HTML Server Sent Events (SSE) or websockets, thereby allowing the subscriber to not host a url accessible to the Hub. </p>\n<p>The downside to these approaches is that the use of proxies (proxy or reverse proxy servers, firewalls, load-balancing routers and so on) between the browser and the Hub which are often designed for short-lived HTTP requests and multiple network hops increase the expense of keeping sockets.</p>\n<p>Generally, long-polling is the most primitive and expensive method. Server-Sent Events are uni-directional (server-&gt;client) and further, are not supported by IE 10 or 11. Websockets is the server &lt;-&gt;client contender.</p>\n<p>Is the use of websockets viable? Hosting FHIRcast applications within the same network as the Hub would help address common problems experienced due to proxies. What about a hub or client hosted within a multi-application/user app server, such as Citrix? -- a common deployment method for fat clients in healthcare. </p>\n</blockquote>",
        "id": 153963362,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1526598067
    },
    {
        "content": "<p>jeremysrichardson <a href=\"https://github.com/fhircast/docs/issues/33#issuecomment-390198902\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/33#issuecomment-390198902\">commented</a> on <a href=\"https://github.com/fhircast/docs/issues/33\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/33\">Issue #33</a></p>\n<blockquote>\n<p>Now we're getting somewhere.</p>\n<p>As a physician, I would like to have a local application, behind a firewall, share patient context with an application on the internet because (See all reasons for FHIRCast)</p>\n</blockquote>",
        "id": 153963690,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1526648313
    },
    {
        "content": "<p>jeremysrichardson <a href=\"https://github.com/fhircast/docs/issues/33#issuecomment-390200860\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/33#issuecomment-390200860\">commented</a> on <a href=\"https://github.com/fhircast/docs/issues/33\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/33\">Issue #33</a></p>\n<blockquote>\n<p>@NiklasSvenzen at Sectra was using SignalR (<a href=\"https://github.com/aspnet/SignalR\" target=\"_blank\" title=\"https://github.com/aspnet/SignalR\">https://github.com/aspnet/SignalR</a>)<br>\nWe use SignalR in some of our products at MModal.</p>\n<p>The advantage we found is that the library is easy to implement in web clients and .Net apps.</p>\n<p>I'm pretty sure we would have no problem contributing code if we wanted to go this direction and might be able to help setup a reference implementation.</p>\n<p>I could see this approach being useful for server and client based hubs -- a client based hub would allow you to avoid having a server, which I found super useful in early CCOW development many years ago.</p>\n</blockquote>",
        "id": 153963695,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1526648776
    },
    {
        "content": "<p>jeremysrichardson {} a <a href=\"https://github.com/fhircast/docs/issues/33#issuecomment-390200860\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/33#issuecomment-390200860\">comment</a> on <a href=\"https://github.com/fhircast/docs/issues/33\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/33\">Issue #33</a></p>\n<blockquote>\n<p>@NiklasSvenzen at Sectra was using SignalR (<a href=\"https://github.com/aspnet/SignalR\" target=\"_blank\" title=\"https://github.com/aspnet/SignalR\">https://github.com/aspnet/SignalR</a>)<br>\nWe use SignalR in some of our products at MModal.</p>\n<p>The advantage we found is that the library is easy to implement in web clients and .Net apps.</p>\n<p>I'm pretty sure we would have no problem contributing code if we wanted to go this direction and -might be able to- will commit to help setup a reference implementation.</p>\n<p>I could see this approach being useful for server and client based hubs -- a client based hub would allow you to avoid having a server, which I found super useful in early CCOW development many years ago.</p>\n</blockquote>",
        "id": 153963701,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1526649162
    },
    {
        "content": "<p>jeremysrichardson {} a <a href=\"https://github.com/fhircast/docs/issues/33#issuecomment-390200860\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/33#issuecomment-390200860\">comment</a> on <a href=\"https://github.com/fhircast/docs/issues/33\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/33\">Issue #33</a></p>\n<blockquote>\n<p>@NiklasSvenzen at Sectra was using SignalR (<a href=\"https://github.com/aspnet/SignalR\" target=\"_blank\" title=\"https://github.com/aspnet/SignalR\">https://github.com/aspnet/SignalR</a>)<br>\nWe use SignalR in some of our products at MModal.</p>\n<p>The advantage we found is that the library is easy to implement in web clients and .Net apps.</p>\n<p>I'm pretty sure we would have no problem contributing code if we wanted to go this direction and will commit to help setup a reference implementation.</p>\n<p>I could see this approach being useful for server and client based hubs -- a client based hub would allow you to avoid having a server, which I found super useful in early CCOW development many years ago.</p>\n</blockquote>",
        "id": 153963702,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1526649191
    },
    {
        "content": "<p>jeremysrichardson {} a <a href=\"https://github.com/fhircast/docs/issues/33#issuecomment-390200860\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/33#issuecomment-390200860\">comment</a> on <a href=\"https://github.com/fhircast/docs/issues/33\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/33\">Issue #33</a></p>\n<blockquote>\n<p>@NiklasSvenzen at Sectra was using SignalR (<a href=\"https://github.com/aspnet/SignalR\" target=\"_blank\" title=\"https://github.com/aspnet/SignalR\">https://github.com/aspnet/SignalR</a>)<br>\nWe use SignalR in some of our products at MModal.</p>\n<p>The advantage we found is that the library is easy to implement in web clients and .Net apps.</p>\n<p>We would contribute code if we wanted to go this direction and will commit to help setup a reference implementation.</p>\n<p>I could see this approach being useful for server and client based hubs -- a client based hub would allow you to avoid having a server, which I found super useful in early CCOW development many years ago.</p>\n</blockquote>",
        "id": 153963703,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1526649208
    },
    {
        "content": "<p>isaacvetter <a href=\"https://github.com/fhircast/docs/issues/33#issuecomment-391844353\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/33#issuecomment-391844353\">commented</a> on <a href=\"https://github.com/fhircast/docs/issues/33\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/33\">Issue #33</a></p>\n<blockquote>\n<p>Hey @jeremysrichardson !</p>\n<p>If you're able and interested, code contributions definitely accepted for the <a href=\"https://github.com/fhircast/sandbox\" target=\"_blank\" title=\"https://github.com/fhircast/sandbox\">sandbox</a>, we've even got a <a href=\"https://github.com/fhircast/sandbox/issues\" target=\"_blank\" title=\"https://github.com/fhircast/sandbox/issues\">few open issues</a> following the connectathon last week.</p>\n<p>SignalR is great, in large part because it <a href=\"https://kevgriffin.com/signalr-transports-explained/\" target=\"_blank\" title=\"https://kevgriffin.com/signalr-transports-explained/\">handles the selection</a> of the actual over the wire transport protocol.  SignalR actually supports 3-4 different communication mechanisms and degrades gracefully through them. My take is that for bidirectional communication, websockets is the clear winner.</p>\n<p>I'd suggest that a reason SignalR does this is because of the lack of support across clients and environments for websockets. </p>\n<p>In your products that use SignalR, how often do they fall back to long-polling? Do you own the client and the server? Are both the client and the server within the intranet?</p>\n<p>Isaac</p>\n</blockquote>",
        "id": 153964694,
        "sender_full_name": "Github Notifications (FHIRcast)",
        "timestamp": 1527192785
    }
]