[
    {
        "content": "<p>I'm struggling with Ingredient resource. It seems like sort of a \"link\" resource, but why is it a resource type?<br>\nI'd expect a Product to have an ingredient element (backbone) which contains </p>\n<ul>\n<li>the role</li>\n<li>strength</li>\n<li>pointer to  an ingredient (another product, or a substance<br>\nBut we have an Ingredient resource which contains the role, strenght and a couple of other attributes.  <br>\nThis means that the number of ingredient instances in a server would be between huge and just silly.<br>\nWhy is this a dedicated resource, one that redefines parts of the substance?<br>\nWhy not a simpler construct like Medication.ingredient?</li>\n</ul>",
        "id": 214370708,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603490479
    },
    {
        "content": "<p>And why does \"Ingredient\" resource has an \"allergenicIndicator\" element?</p>",
        "id": 214370788,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603490526
    },
    {
        "content": "<p>Am I missing something in the analysis?</p>",
        "id": 214370911,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603490631
    },
    {
        "content": "<p>there would probably be no instances of Ingredient in a server.  I would expect that Ingredient instances would all be contained in their parent resource.  NOTE: MedicationKnowledge is probably going to remove their ingredient backbone and replace it with the link to Ingredient.</p>",
        "id": 214370974,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1603490662
    },
    {
        "content": "<p>Because ingredients can be shared.</p>",
        "id": 214370986,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603490674
    },
    {
        "content": "<p>Why do we have a resource type that would not be to persist in a server? What is the need behind that?</p>",
        "id": 214371037,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603490711
    },
    {
        "content": "<p>It's no different than Medication.  There will probably not be any Medication instances other than compounds on servers but rather just contained.</p>",
        "id": 214371062,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1603490746
    },
    {
        "content": "<p>Between different aspects of the same product, such as the manufactured form and the administrable form, and between similar products.</p>",
        "id": 214371066,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603490754
    },
    {
        "content": "<p>If ingredients can be shared - with the same role, same strenght, same substance? That would mean that the server will keep all possible combinations of these attributes</p>",
        "id": 214371126,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603490783
    },
    {
        "content": "<p>So, it will be persisted in some use cases.</p>",
        "id": 214371128,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603490784
    },
    {
        "content": "<p>All ingredient combinations that are needed, can be resources yes.</p>",
        "id": 214371150,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603490813
    },
    {
        "content": "<p>And re-used where appropriate.</p>",
        "id": 214371172,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603490841
    },
    {
        "content": "<p>that is my point - Why such an incredibly big number of resources on a server? What is the reason that it is not a backbone element?</p>",
        "id": 214371177,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603490855
    },
    {
        "content": "<p>If it was a backbone it would be a larger amount.</p>",
        "id": 214371195,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603490881
    },
    {
        "content": "<p>And a lot of redundant, repeated data.</p>",
        "id": 214371253,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603490909
    },
    {
        "content": "<p>I really don't see why a backbone element would mean more resources.</p>",
        "id": 214371267,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603490926
    },
    {
        "content": "<p>because the same ingredient is used in multiple places, in multiple products. A backbone element cannot be shared between multiple resources.</p>",
        "id": 214371307,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603490985
    },
    {
        "content": "<p>Take Paracetamol which is used in 3 products: <br>\nP1. tablet 500 mg, <br>\nP2. tablet 1000 mg, <br>\nP3. tablet 600 mg mixed with caffeine 150mg. </p>\n<p>Total # resources if this were products with a backbone element: 5: P1, P2, P3, Paracetamol, Caffeine.<br>\nTotal # resources with this as a separate resource: P1, P2, P3, Paracetamol, Caffeine, + (paracetamol 500mg) + (paracetamol 1000 mg) + (paracetamol 600 mg)</p>",
        "id": 214371590,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603491194
    },
    {
        "content": "<p>Ingredients can also be related to the manufacturing process. You can can list the ingredients used in the steps of manufacturing. The same ingredient that is also found in the finished product, and in other similar products (e.g. all the brands).</p>",
        "id": 214371608,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603491215
    },
    {
        "content": "<p>is the above missing something obvious?</p>",
        "id": 214371611,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603491217
    },
    {
        "content": "<p>Yes.</p>",
        "id": 214371689,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603491279
    },
    {
        "content": "<p>You are missing the point that there can be multiple brands/types of P1. And as many P1s as exist would have the same Ingredients. And the (various) manufacturing processes of P1 would have the same ingredients. And the manufactured and administrable forms of P1 would have the same ingredients.</p>",
        "id": 214378743,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603491410
    },
    {
        "content": "<p>And if your main goal is to have the least possible resources, then you can contain Ingredient in all those, and the counts are the same as the backbone case.</p>",
        "id": 214385768,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603491519
    },
    {
        "content": "<p>I mentioned P1, did not say it is a brand or generic.</p>",
        "id": 214385840,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603491602
    },
    {
        "content": "<p>If that makes a difference, then this is really difficult.</p>",
        "id": 214385882,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603491610
    },
    {
        "content": "<p>difficult = complex.</p>",
        "id": 214385895,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603491625
    },
    {
        "content": "<p>I think this is a consequence of the base model having one resource for each IDMP level. And because of that, we have to repeat attributes like ingredient. And because of that, we have Ingredients as a link resource.</p>",
        "id": 214386090,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603491779
    },
    {
        "content": "<p>Whoever mentions them, they do exist. Multiple variants of the same product have the same ingredients. But I am repeating myself. Those are the reasons. Ingredients are shared, and backbone elements cannot be.</p>",
        "id": 214386103,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603491788
    },
    {
        "content": "<p>I get the point, and I am giving feedback. This is complicated and I've never seen in prior discussions Ingredient being considered like that. I don't know but I think this makes search more complicated.</p>",
        "id": 214393267,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603491996
    },
    {
        "content": "<p>This is a whole new area, and I hope this can be hammered a bit better if we want these resources to be used by people around the world and outside regulatory submission.</p>",
        "id": 214393270,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603492002
    },
    {
        "content": "<p>Sorry if I cause noise, I just want to say that something feels strange the way this is working, and I do hope that we're in the phase of collecting fundamental feedback.</p>",
        "id": 214393372,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603492085
    },
    {
        "content": "<p>Thanks for the feedback Jose. We have the resources and hopefully we can agree to let implementers use them and see if they work well. Are you happy for these to be used  at connectathons etc, and to find out if they are fit for purpose?</p>",
        "id": 214393556,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603492277
    },
    {
        "content": "<p>Not as they are, no, sorry. <br>\nBut I do look forward to the discussion we started, because I think we can get them in shape with a few surgical changes. (if I though all is lost, I wouldn't give feedback)</p>",
        "id": 214393652,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603492357
    },
    {
        "content": "<p>So you don't want implementers to try these?</p>",
        "id": 214393706,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603492422
    },
    {
        "content": "<p>I think they could try an improved version of these.</p>",
        "id": 214393824,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603492542
    },
    {
        "content": "<p>Implementers will be the main source of the improvements. That is the FHIR way. All the pontification counts for little. Implementation experience is what counts.</p>",
        "id": 214393928,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603492672
    },
    {
        "content": "<p>Sounds like you're considering al HL7 discussions on this to be over, and you are looking now for external feedback.<br>\nIteration is good, but the first iteration sould be viable.<br>\nHence my opinion: without some internal ironing, I think this is a not a good starting point. I get my opinion may not matter that much, but we could be doing much better.</p>",
        "id": 214394480,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603493171
    },
    {
        "content": "<p>Jose, you can bring forward any suggestions you want. We welcome any and all specific actionable suggestions, and the benefits. We also want implementers to try these, since they have been around for a while now. They need a release, based on the resources proposed, that they can work with. Implementation work is already happening and we want to get that feedback and use it to change course if necessary.</p>",
        "id": 214394728,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603493410
    },
    {
        "content": "<p>Why bring suggestions if they are not considered?<br>\nI try to make it simple: I am trying to promote IDMP and Medicinal Product Catalogs. I think we have a few things to change before we go live. I am available for discussing, and I think we can do much better, and we need. I would not present these resources to implementers as they are.</p>",
        "id": 214394973,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603493674
    },
    {
        "content": "<p>Jose, this is a discussion. We are considering your points right now and giving our views on them. We cannot action sentiments. We can only action suggestions for change that have clear benefits and are agreed by all the workgroup participants. I don't yet know what the changes you want are. Please detail them so we understand.</p>",
        "id": 214395187,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603493921
    },
    {
        "content": "<p>My first message plus the Jira I created some time ago.</p>",
        "id": 214395705,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603494434
    },
    {
        "content": "<p>There is discussion on your Jira I believe. And I am not sure what your first message is. You opened here with a question, which we have tried to answer.</p>",
        "id": 214395919,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603494619
    },
    {
        "content": "<p>I'm looking at Ingredient and I'm confused.  Why is 'substance' 0..1 and strength is 0..*?  I would expect you'd have multiple substances in the ingredient, each with a strength, not a single ingredient with multiple strengths?</p>",
        "id": 214396157,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603494927
    },
    {
        "content": "<p>It's one strength, but the strength can be expressed in multiple ways</p>",
        "id": 214396182,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603494962
    },
    {
        "content": "<p>Each ingredient is a single substance in an amount (expressed possibly in several ways). So there is only 1 substance per ingredient.</p>",
        "id": 214396258,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603495025
    },
    {
        "content": "<p>A product has multiple ingredients, each is just one substance.</p>",
        "id": 214396277,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603495053
    },
    {
        "content": "<p>Can you give an example of how an ingredient, on its own, can have a strength?</p>",
        "id": 214396438,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603495216
    },
    {
        "content": "<p>The strength is the amount of a substance, in the whole thing, that it is an ingredient of.</p>",
        "id": 214396467,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603495263
    },
    {
        "content": "<p>That can't be an independent resource</p>",
        "id": 214396481,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603495289
    },
    {
        "content": "<p>Because that's not stand-alone</p>",
        "id": 214396488,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603495302
    },
    {
        "content": "<p>I knew you would say that :-)</p>",
        "id": 214396491,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603495309
    },
    {
        "content": "<p>It could be a data type, but it can't be a resource</p>",
        "id": 214396493,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603495310
    },
    {
        "content": "<p>But it is a shared thing and datatypes cannot be shared</p>",
        "id": 214396539,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603495330
    },
    {
        "content": "<p>How can it be shared if it's identifying the amount of a substance in a specific thing - by definition it must be tied to that one specific thing</p>",
        "id": 214396554,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603495363
    },
    {
        "content": "<p>We don't have the right machinery. Data types don't work here.</p>",
        "id": 214396559,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603495373
    },
    {
        "content": "<p>No.</p>",
        "id": 214396562,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603495378
    },
    {
        "content": "<p>Not sure what the 'no' is referring to...</p>",
        "id": 214396584,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603495408
    },
    {
        "content": "<p>Because several products, that are different, can have the same ingredient/strength. Also, as mentioned earlier in the thread...</p>",
        "id": 214396591,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603495419
    },
    {
        "content": "<p>Resources must be useful an meaningful completely independently</p>",
        "id": 214396597,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603495427
    },
    {
        "content": "<p>give me a chance to type :-)</p>",
        "id": 214396604,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603495435
    },
    {
        "content": "<p>Well, several Medications can have the same ingredients too - but the ingredients are still listed for each Medication instance.  If you change the ingredient in one medication, that wouldn't automatically change the ingredients in all of the others</p>",
        "id": 214396669,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603495491
    },
    {
        "content": "<p>different aspects of the same product express the same ingredients. And things like manufacturing, express the exact same ingredients in protocols etc</p>",
        "id": 214396673,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603495499
    },
    {
        "content": "<p>We have more sharing than medication. It is true that we could repeat it all. Over and over again. But that is not ideal for implementation.</p>",
        "id": 214396710,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603495538
    },
    {
        "content": "<p>You can reference the one thing that has the ingredients.  The manufacturing aspect, the regulatory aspect, etc. would all point to that one resource that indicates the ingredients</p>",
        "id": 214396779,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603495576
    },
    {
        "content": "<p>Ingredients for Medication are mainly for special case preparations, so are relatively rare, and not widely shared.</p>",
        "id": 214396785,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603495585
    },
    {
        "content": "<p>If you've got multiple medications, they <em>can't</em> be shared</p>",
        "id": 214396802,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603495617
    },
    {
        "content": "<p>If you're talking about the same medication, then define the ingredients in one place.</p>",
        "id": 214396814,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603495630
    },
    {
        "content": "<p>I meant in the real world they are not shared, so there is no need to share in FHIR</p>",
        "id": 214396818,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603495641
    },
    {
        "content": "<p>I'm talking in the modeling world.  You <em>can't</em> share ingredients across multiple medications</p>",
        "id": 214396850,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603495675
    },
    {
        "content": "<p>yes I know. For the Medication resource you cannot share. I know that. That is a limitation, but not a severe one for that simpler use case.</p>",
        "id": 214396907,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603495724
    },
    {
        "content": "<p>well you can share ingredients across medications,  because there are lots of medications that have the exact same ingredients yet are different medications.</p>",
        "id": 214396943,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603495782
    },
    {
        "content": "<p>No - I'm saying for the abstract concept of medication - including in the definitional space - it's inappropriate to share an Ingredient resource across multiple distinct medications just because, right now, multiple medications happen to have the same amount of a given product in them.</p>",
        "id": 214396944,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603495785
    },
    {
        "content": "<p>Why is it inappropriate? Its a reasonable way to model it. The same data definitely is needed in different places.</p>",
        "id": 214397030,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603495851
    },
    {
        "content": "<p>You can share substances - which have independent identity.  But Ingredient is saying \"product X contains Y of Z\" - it can't be independent of product X.  Because if you say \"product X1, X2 and X3 contain Y of Z\" and then change the amount of Z in Z1, you're screwed</p>",
        "id": 214397046,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603495870
    },
    {
        "content": "<p>We don't have a \"shared datatype\" construct. If we did that would may have been used here.</p>",
        "id": 214397058,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603495888
    },
    {
        "content": "<p>I'm saying you can't share across meds - you <em>have</em> to repeat</p>",
        "id": 214397074,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603495911
    },
    {
        "content": "<p>You are missing some points. You don't have to repeat and duplicate.</p>",
        "id": 214397121,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603495933
    },
    {
        "content": "<p>Just as you can't have an Observation that says \"John Doe and Henry Doe both had hemoglobins of X on Jan 1\"</p>",
        "id": 214397126,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603495939
    },
    {
        "content": "<p>How can I update ingredient safely if it's shared by multiple products?</p>",
        "id": 214397174,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603496023
    },
    {
        "content": "<p>All resources must be designed such that they can function in a purely RESTful world - even if there is no short-term expectations they'll be used that way.</p>",
        "id": 214397264,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603496107
    },
    {
        "content": "<p>The same product type can have different actual medications, by different manufacturers. They have the same  ingredients, by definition. They are all Acetaminophen 200mg. But they have different brands, packaging, contacts, etc. All the same basic formulation however. The excipients may vary. The data is shared.</p>",
        "id": 214397268,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603496116
    },
    {
        "content": "<p>There is nothing non-RESTful here.</p>",
        "id": 214397289,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603496151
    },
    {
        "content": "<p>So if you update the ingredient, they all change?</p>",
        "id": 214397331,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603496170
    },
    {
        "content": "<p>Then why do they need to share?  Why aren't the ingredients defined at a single level?</p>",
        "id": 214397343,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603496191
    },
    {
        "content": "<p>Well you dont generally update the ingredient, unless you change the formulation of all acetaminphen tablets in the world. Which doesnt happen.</p>",
        "id": 214397357,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603496212
    },
    {
        "content": "<p>Because there are 100s of types of it. And you could copy and paste the ingredients 100 times, but that is redundant.</p>",
        "id": 214397378,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603496251
    },
    {
        "content": "<p>If something is going to be a resource, it must be independently updateable.  It seems like there's a missing level of abstractions - ingredients should be defined at one layer and the specific products should point to the abstract.  Then, if you need to correct something about the abstract, you do that.</p>",
        "id": 214397455,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603496300
    },
    {
        "content": "<p>The same ingredients are referenced in the product formulation and in the steps of the manufacturing. You cannot do that with a data type.</p>",
        "id": 214397466,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603496315
    },
    {
        "content": "<p>Why?</p>",
        "id": 214397510,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603496391
    },
    {
        "content": "<p>If there is a better way to model this that fulfils the need then so be it, but data types don't seem to meet the need.</p>",
        "id": 214397515,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603496397
    },
    {
        "content": "<p>Well I suppose you could express any ingredient as a substance and the amount per other entity. But that is what ingredient is aiming to do.</p>",
        "id": 214397599,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603496462
    },
    {
        "content": "<p>In a reusable way (which data type would do) and in a sharable way, which data types cannot.</p>",
        "id": 214397617,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603496491
    },
    {
        "content": "<p>There is a requirement to express the product in a manufactured form and an administrable form. They have the same ingredients.  If they are stated as a data type, you would have to repeat them. The list of ingredients can be very long. It includes many inactive substances, coatings, ink, all sorts of things. You don't want to repeat it all. And there is no easy way to \"un-fork\" the model, so two different resources, or backbone elements, converge on one set of ingredients unless it is a resource.</p>",
        "id": 214397908,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603496801
    },
    {
        "content": "<p>Audit events are RESTful and they are not updated. So being commonly updated is not a requirement for REST as far as I know.</p>",
        "id": 214398158,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603497119
    },
    {
        "content": "<p>~ingredients should be defined at one layer and the specific products should point to the abstract.<br>\nThat is how it is now. This enables that. If there is a another way to achieve it then that might also work.</p>",
        "id": 214398262,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1603497218
    },
    {
        "content": "<p>Why does the administrable form not point to the manufactured form? - specify the ingredients in one place.</p>",
        "id": 214402128,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603502346
    },
    {
        "content": "<p>ooh, i know the answer to this one!  because the ingredients in the administrable form might be different - you might have mixed ingredients in the manufactured item to make a new ingredient</p>",
        "id": 214402191,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1603502421
    },
    {
        "content": "<p>Ok - so if they're <em>not</em> the same, why are we using the same instances to represent them?</p>",
        "id": 214404431,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603505858
    },
    {
        "content": "<p>they might be the same and they might not be.  that's why you can't have one product refer to the other</p>",
        "id": 214404476,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1603505885
    },
    {
        "content": "<p>Right - but you're maintaining separate lists for each - so why the need to create a resource for something that is not independent and that, if it's going to be repeated, is repeated at most twice, and is managed separately besides?</p>",
        "id": 214404805,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603506544
    }
]