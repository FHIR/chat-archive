[
    {
        "content": "<p>I'm trying to use MedicinalProductDefinition to define the marketing, authorization and ingredients of a product.  It is a single part product.  It appears that I have to specify the following attributes and use the following chain of resources to express this:<br>\nMedicinalProductDefinition<br>\n-combinedPharmaceuticalDoseForm (put the form here?)<br>\n-packagedMedicinalProduct =&gt; PackagedProductDefinition</p>\n<p>PackagedProductDefinition<br>\n-packageItem<br>\n--type (mandatory)<br>\n--quantity (mandatory) (put 1 because this is a 'top-level' packaging?)<br>\n--manufacturedItem =&gt; ManufacturedItemDefinition</p>\n<p>ManufacturedItemDefinition<br>\n-manufacturedDoseForm (mandatory, so put the form here as well?)<br>\n-quantity (mandatory)<br>\n-ingredient =&gt; Ingredient</p>\n<p>That seems slightly convoluted, but I can work with that except for the mandatory elements I can default the quantities to 1, but I don't have a packaging type.  Maybe we want to reduce the cardinalities of these attributes?</p>",
        "id": 175084746,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1567790502
    },
    {
        "content": "<p>This is really good feedback Jean. </p>\n<p>A current idea is to collapse ManufacturedItemDefinition into PackagedProductDefinition, so that will simplify a little. There are cases where the same manufactured item is in different packages, which would no longer be possible, but its a trade off - some redundancy for a simpler model. </p>\n<p>Yes the form goes there. </p>\n<p>But I wonder if we might want to allow an Ingredient ref direct from Medicinal Product Def, for cases where you don't care about packaging? That might be more convenient for simpler cases.</p>",
        "id": 175092807,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1567795834
    },
    {
        "content": "<blockquote>\n<p>A current idea is to collapse ManufacturedItemDefinition into PackagedProductDefinition, so that will simplify a little. There are cases where the same manufactured item is in different packages, which would no longer be possible, but its a trade off - some redundancy for a simpler model. </p>\n</blockquote>\n<p>Strangely enough, I just made another tracker item because I had another product where I wanted to express that very same thing - four different package configurations of the same manufactured item.</p>",
        "id": 175093199,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1567796076
    },
    {
        "content": "<p>But you can do that now cant you? They are different resources so different packages can reference the same manufactured item</p>",
        "id": 175094325,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1567796828
    },
    {
        "content": "<p>Yep, you can do that now.  But the quantity is in the wrong spot.  The quantity on ManufacturedItem should be up in the PackagedItem.</p>",
        "id": 175094356,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1567796867
    },
    {
        "content": "<p>Right. I've always found IDMP a bit strange there. There should be no need for things to count themselves, and no need for 3 different items. But you do need two resources (not collapsed) to represent this I think.</p>",
        "id": 175094961,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1567797345
    },
    {
        "content": "<p>Yes, I got it to work for now by using an extension, i.e. effectively moving the quantity up a level.  It looks like this:<br>\nMedicinalProductDefinition<br>\nPackagedProductDefinition_1<br>\n -packageItem<br>\n--manufacturedItem<br>\n---quantity 100<br>\n---ManufacturedItem_1<br>\nPackagedProductDefinition_2<br>\n -packageItem<br>\n--manufacturedItem<br>\n---quantity 30<br>\n---ManufacturedItem_1<br>\nPackagedProductDefinition_3<br>\n -packageItem<br>\n--manufacturedItem<br>\n---quantity 60<br>\n---ManufacturedItem_1<br>\nManufacturedItem<br>\n-ingredient_1<br>\n-ingredient_2<br>\n...</p>",
        "id": 175095172,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1567797488
    },
    {
        "content": "<p>The packs will differ more than just in the number of tablets (as your view shows). So you cant just have one pack with several collections of items. Bottles may be physically different, or one pack may be a carton. And you may need an overall product to group them. So this does call for the 3 levels we have now I guess. Also this I'd the other end of the scale from your other use case? (Where you want to skip levels).</p>",
        "id": 175095236,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1567797569
    },
    {
        "content": "<p>Prob  needs a backbone element adding to pack, of item reference and item count.</p>",
        "id": 175095470,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1567797743
    },
    {
        "content": "<p>I'm okay with having to include the levels, but it's just we need to be careful about making things mandatory.</p>",
        "id": 175095509,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1567797790
    },
    {
        "content": "<p>lets get our use cases separate - you seem to have 2. #1 is a product with just ingredients. #2 is packs with items</p>",
        "id": 175096392,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1567798428
    },
    {
        "content": "<p>#2 needs the levels. #1 could have the levels for consistency. But some will only have #1, so dont want to worry about levels. That could work by jumping straight to Ingredient. Then we also don't need to make the mandatory pack type optional, we just bypass it.</p>",
        "id": 175096551,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1567798556
    },
    {
        "content": "<p>Sure.</p>",
        "id": 175096610,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1567798577
    },
    {
        "content": "<p>I think you could keep #1 for consistency.  After I did #2, I saw how #1 made sense.</p>",
        "id": 175096664,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1567798617
    },
    {
        "content": "<p>are you against providing a short circuit to ingredient for cases when no one cares about packs or items? It's not ideal to have 2 ways, but systems do differ in levels of representation.</p>",
        "id": 175096959,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1567798824
    },
    {
        "content": "<p>i'm not against it.  I do like the consistency, but it is a lot of indirection when you don't care about packs or items.  Maybe #1 should have been represented with an AdministrableProductDefinition?  That has the ingredients without the packs or items.</p>",
        "id": 175097108,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1567798945
    },
    {
        "content": "<p>yes I also thought that. But then you have a mix of top level resources, for different levels of detail, which I don't like. And people won't figure that out. It doesn't seem too bad to have 3 levels but make 2 of them optional.</p>",
        "id": 175097199,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1567799030
    },
    {
        "content": "<p>we probably need to create some examples to show all of this and get some idea of how it might look.</p>",
        "id": 175097477,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1567799225
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/d9RHuT0I_HOalzTATYKcVVXV/product-ingredient.png\" target=\"_blank\" title=\"product-ingredient.png\">product-ingredient.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/d9RHuT0I_HOalzTATYKcVVXV/product-ingredient.png\" target=\"_blank\" title=\"product-ingredient.png\"><img src=\"/user_uploads/10155/d9RHuT0I_HOalzTATYKcVVXV/product-ingredient.png\"></a></div>",
        "id": 175097947,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1567799626
    },
    {
        "content": "<p>I meant FHIR Bundle XML/JSON examples. :)</p>",
        "id": 175098137,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1567799757
    },
    {
        "content": "<p>yeah, I knew that</p>",
        "id": 175098205,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1567799789
    }
]