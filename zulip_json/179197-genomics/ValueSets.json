[
    {
        "content": "<p>I'm wondering whether FHIR ValueSets have been defined somewhere for Clinical Genomics yet.  If so, where should I be looking?</p>",
        "id": 153962087,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1526495225
    },
    {
        "content": "<p>Not in FHIR terms yet, no.  I figured we'd get agreement on the structure first</p>",
        "id": 153962092,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1526495797
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191649\">@Andrew Patterson</span> <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> <span class=\"user-mention\" data-user-id=\"191926\">@Joel Schneider</span> <span class=\"user-mention\" data-user-id=\"191913\">@Kevin Power</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> The conversation on <a href=\"#narrow/stream/43-genomics/subject/CodeSystem.20URIs.20for.20genomics\" title=\"#narrow/stream/43-genomics/subject/CodeSystem.20URIs.20for.20genomics\">genomic codesystem uri</a> reminded me of something I have run into a bunch but we really don't have a good way to do: Reference a service that can do code validation on essentially expression-based code systems. I think about this when the need for a value set is solely a dependent on making sure the code is a valid code and there is no subset of the codes that are desired. I ask because I wonder how often in the initial set of genomic resources will the coded elements simply need this type of validator on \"codes\" that there really is not a code system you can enumerate to do a $lookup against. Is this going to be a problem in genomics? </p>\n<p>Second question: Do you all have an approach for the datatype you plan to use to exchange \"string codes\" like that defined in <a href=\"https://glstring.org/syntax.html\" target=\"_blank\" title=\"https://glstring.org/syntax.html\">GLSC</a> or the component subparts that are also expression-based code systems? I have some thoughts but wonder if you've noodled this out already.</p>",
        "id": 154007728,
        "sender_full_name": "Robert McClure",
        "timestamp": 1539204422
    },
    {
        "content": "<p>Overall answer to your questions - For the expression based code systems, we still plan to use CodeableConcept.  Have we noodled through all the possible downsides to that?  I would say we have not.  I would welcome any thoughts you have to share.<br>\nOne of the primary expression based code systems (HGVS) does have a few different 'validators' - <a href=\"https://mutalyzer.nl\" target=\"_blank\" title=\"https://mutalyzer.nl\">https://mutalyzer.nl</a> is one of the more popular ones.<br>\nAnother one is a Karyotype ISCN string.  I have seen this website <a href=\"http://www.cydas.org/OnlineAnalysis/WebExample1.aspx\" target=\"_blank\" title=\"http://www.cydas.org/OnlineAnalysis/WebExample1.aspx\">http://www.cydas.org/OnlineAnalysis/WebExample1.aspx</a> for validation, but it is quite old and out of date.</p>",
        "id": 154007757,
        "sender_full_name": "Kevin Power",
        "timestamp": 1539208453
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> <span class=\"user-mention\" data-user-id=\"191376\">@Jim Steel</span> where did the terminology folk come down on decisions around CodeSystems that are governed by a regular expression (at best) set of rules.. but where the codes are not themselves enumerable. Can custom validator logic be plugged into the backend of ontoserver to support validation of these type of code systems?</p>",
        "id": 154007788,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1539210405
    },
    {
        "content": "<p>So long as the code system defines:<br>\na) what strings are legal strings<br>\nb) what meaning is associated with a given string<br>\nc) the answer to (b) doesn't change over time<br>\nthen it's a valid CodeSystem and Coding is perfectly fine for transmitting it.</p>",
        "id": 154007793,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539210800
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191649\">@Andrew Patterson</span> in terms of what is do-able today with Ontoserver to support these things, we don't yet have a plugin model for these sorts of infinite CodeSystems, however you can create an explicit CodeSystem that enumerates as many as you might need and mark it as a fragment.</p>",
        "id": 154007812,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1539212593
    },
    {
        "content": "<p>Thanks. Is there a backlog item for some sort of plugin model to handle these? they seem to be the norm rather than the exception in genomic space</p>",
        "id": 154007815,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1539212767
    },
    {
        "content": "<p>There is, but it has so far been very low priority due to lack of demand and the high complexity of architecting the solution</p>",
        "id": 154007817,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1539213017
    },
    {
        "content": "<p>I have a plug-in model for this sort of thing. <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> this is probably one of those cases where the lack of an architectural feature means that people don't ask you for it... and so you think that it's not needed. Instead potential customers go elsewhere</p>",
        "id": 154007818,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539213185
    },
    {
        "content": "<p>I agree with <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> that I think this is not a frequently requested capability because people don't understand what it could do and don't know how to ask. I posed this question here because I suspected, as <span class=\"user-mention\" data-user-id=\"191649\">@Andrew Patterson</span> confirmed - it will happen a lot in genomics. </p>\n<p>I do agree that placing these expressions in coding.code makes sense (as it already has for UCUM and SCT), but we've dealt with the consequence of this by essentially ignoring SCT expressions (due deference to <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> ) and by using a UCUM code system fragment. I do not have a specific suggestion for how to \"make this work\" in a global exchange environment, but I'd love for you all to debate suggestions while I chime in ;-)</p>",
        "id": 154008170,
        "sender_full_name": "Robert McClure",
        "timestamp": 1539281085
    },
    {
        "content": "<p>I deal with UCUM expressions natively, in my server, as I also do for languages and mime types. I only partially deal with SNOMED CT expressions - I have to work further on property validation and subsumption testing</p>",
        "id": 154008181,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539281513
    },
    {
        "content": "<p>genomics code systems will be more of the same</p>",
        "id": 154008182,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539281539
    }
]