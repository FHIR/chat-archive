[
    {
        "content": "<p>I don't know if anyone wants to help me out here... I'd like to compile openSSL stable branch OpenSSL_1_1_1-stable. It's trivially easy on linux and osx, but bafflingly hard on windows. Is there a c guru who'd like to reduce it down to 'run this batch file', if that's even possible. I'd really like win32 and win64 outputs (I want the .a files the compile produces)</p>",
        "id": 264428996,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639132939
    },
    {
        "content": "<p>compile with what? Microsoft VC++? gcc? I assume you have seen <a href=\"https://wiki.openssl.org/index.php/Compilation_and_Installation#Windows\">this</a>?</p>",
        "id": 264455375,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1639146915
    },
    {
        "content": "<p>I have indeed read that several times. It refers to things I don't have and don't know how to have (e.g. \"Visual Studio tool x64 Cross Tools Command prompt\") because maybe they've been renamed, but then things don't work, and I don't know why, and is it because I have the wrong tool? or the wrong path? These things come with multiple copies of everything...</p>",
        "id": 264507606,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639170105
    },
    {
        "content": "<p>I'd rather compile with an open source compiler, but I don't feel strongly about that.</p>",
        "id": 264508091,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639170332
    },
    {
        "content": "<p>I vaguely recall that I could get it to build, but clearly remember that it was enough of a hassle that I ended up using someone else's binaries*.</p>\n<p>I'd recommend pre-builts from <a href=\"https://wiki.openssl.org/index.php/Binaries\">https://wiki.openssl.org/index.php/Binaries</a> based on the chain you need.</p>\n<p>*edit: many years ago</p>",
        "id": 264509823,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1639171171
    },
    {
        "content": "<p>I've been doing this with the dlls for many years, but now I want the .a files, and these (rightly) don't get distributed</p>",
        "id": 264510404,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639171452
    },
    {
        "content": "<p>AFAIK gcc can create .a files (essentially static libraries to be linked into an executable), but is that what you need? I thought .a output from gcc is useful only in a Unix-based environment. Are Windows static libraries different?</p>",
        "id": 264518196,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1639175602
    },
    {
        "content": "<p>there isn't 'a windows static library' - it's compiler specific. The compiler I'm using is based on the gcc toolchain. I know that some compilers don't produce gcc compatible artifacts. I don't know about microsofts VSC</p>",
        "id": 264519121,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639176213
    },
    {
        "content": "<p>Is the gcc-based toolchain that you are using in Windows based on MinGW or on Cygwin?</p>",
        "id": 264522120,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1639178059
    },
    {
        "content": "<p>I'm not sure. it's free pascal, so native</p>",
        "id": 264522160,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639178093
    },
    {
        "content": "<p>Sounds like free pascal is using the MinGW flavor on gcc - have you tried just providing the Linux .a files to FPC?</p>",
        "id": 264524813,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1639179626
    },
    {
        "content": "<p>no I haven't, not for windows</p>",
        "id": 264533217,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639186731
    },
    {
        "content": "<p>I found this: <a href=\"https://gist.github.com/udnaan/80c5ad125fc4702309b9\">https://gist.github.com/udnaan/80c5ad125fc4702309b9</a> on how to use mingw-w64 on Linux to produce windows binaries.<br>\nAdding <code>no-shared </code> to the configuration command produces .a files. Link to the result in PM</p>",
        "id": 264542495,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1639199882
    }
]