[
    {
        "content": "<p>last night several of us were discussing the way we use streams here at <a href=\"http://chat.fhir.org\" target=\"_blank\" title=\"http://chat.fhir.org\">chat.fhir.org</a></p>",
        "id": 153888075,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494211901
    },
    {
        "content": "<p>we think that the implementers stream needs a little work, and here's a candidate idea:<br>\n- add a new stream \"asking questions\" (or similar) and encourage 'how do I' questions to go there. <br>\n- if there's no a simple answer, and discussion ensues, refer the discussion to the implementers channel</p>\n<p>In addition, we (a number of high volume contributers such myself, Lloyd, Ewout, etc) will be more vigilent to refer topics from those 2 streams to their proper stream (usually committers, conformance, hapi, dotnet, and terminology</p>",
        "id": 153888076,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494212118
    },
    {
        "content": "<p>comments about this?</p>",
        "id": 153888077,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494212137
    },
    {
        "content": "<p>The objective of this is to create a 'shallow' end of the pool so that newcomers don't get overwhelmed when discussion drops down into the deep bowels of the spec and/or HL7 process.  I'm not sure that \"asking questions\" is going to create the clear distinction between \"introductory/newbie\" content and \"deep/complex\" content.  My preference would be something like \"newcomers\".  If the conversation started to get too deep, it would be redirected to the appropriate stream.</p>",
        "id": 153888101,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1494224917
    },
    {
        "content": "<p>\"newcomers\" may be a bit irritating. Actually I see most of the discussion currently taking place in \"implementers\" would better fit into something like \"specifiers\", so why not rename \"implementers\" to \"specifiers\" and introduce a new \"implementers\" stream - that one might be called \"FHIR users\" or similar, to avoid confusion with the current \"implementers\"</p>",
        "id": 153888107,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1494227516
    },
    {
        "content": "<p>I like this a lot, <span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span>. </p>",
        "id": 153888114,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1494228680
    },
    {
        "content": "<p>There's nothing intrinisic about \"FHIR users\" that would nudge people to keeping things \"simple\".  Whatever name we choose should be something that helps those who are new to the community to feel comfortable asking \"dumb\" questions (i.e. questions they wory might be seen as dumb) and that also discourages deep technical discussions.</p>",
        "id": 153888118,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1494228850
    },
    {
        "content": "<p>It might be clearer to have a few streams by topic rather than \"level of expertise\".  If we imagined breaking \"implementers\" into a few topic areas (REST API, clinical data, infrastructure ...) this could help.</p>",
        "id": 153888120,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1494229116
    },
    {
        "content": "<p>does renaming a stream break all external links? I bet it does... and we have a lot of them in tasks...</p>",
        "id": 153888125,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494229580
    },
    {
        "content": "<p>Yeah, I did a quick experiment and renaming a stream currently does break links (which I agree rules it out). We could add a feature (or feature request ;-)) for making sure links are preserved when a stream is renamed  (<span class=\"user-mention\" data-user-id=\"192151\">@Tim Abbott</span> I wonder whether this has come up before?)</p>",
        "id": 153888135,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1494230568
    },
    {
        "content": "<p>thx for checking</p>",
        "id": 153888139,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494230697
    },
    {
        "content": "<p>How about something like \"Getting Started\" (which avoids the newbie stigma) or \"How Do I?\" which hopefully would be self evident</p>",
        "id": 153888505,
        "sender_full_name": "Jeffrey Danford",
        "timestamp": 1494258617
    },
    {
        "content": "<p>I like both of those. </p>",
        "id": 153888508,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1494258698
    },
    {
        "content": "<p>Re: that feature request, we recently changed group PM thread links to not break on rename, basically by changing the URL to be of the form <code>/#narrow/stream/15-social</code> where <code>15</code> is the stream's numeric ID.</p>",
        "id": 153888523,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1494263282
    },
    {
        "content": "<p>I imagine we would do the same for streams</p>",
        "id": 153888524,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1494263329
    },
    {
        "content": "<p>opening an issue is definitely encouraged</p>",
        "id": 153888525,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1494263343
    },
    {
        "content": "<p>Will that break old links?</p>",
        "id": 153888531,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1494265588
    },
    {
        "content": "<p>When old links will supposedly be broken in case of renaming, no matter what any new Zulip version delivers, maybe it's possible to set \"implementers\" to a state where no new thread can be opened while the existing ones can still continue?<br>\nThen add two new streams with appropriate names and eventually auto-subscribe everyone in implementers to both of them.<br>\nThat would result in two distinctive streams without breaking any links and also without breaking up any ongoing discussion.</p>",
        "id": 153888541,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1494272049
    },
    {
        "content": "<p>how is project crucible different from Aegis Touchstone conformance testing platform?</p>",
        "id": 153888542,
        "sender_full_name": "Mahnoor Ahmed",
        "timestamp": 1494272486
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192151\">@Tim Abbott</span> A related organization to the FHIR community is talking about setting up their own Zulip. I'd have to be connected to both. Is there a way to run 2 copies of the desktop app, one logged into each? Another alternative way?</p>",
        "id": 153888588,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494314827
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> the easiest thing to do is is use pinned tabs in a browser, but we're working on support for a realm switcher in the electron app here: <a href=\"https://github.com/zulip/zulip-electron/pull/140\" target=\"_blank\" title=\"https://github.com/zulip/zulip-electron/pull/140\">https://github.com/zulip/zulip-electron/pull/140</a>.  I expect it to be merged soon, but for someone willing to deal with a bit of annoyance, one can actually just run that branch :).</p>",
        "id": 153888735,
        "sender_full_name": "Tim Abbott",
        "timestamp": 1494345915
    },
    {
        "content": "<p>thanks. but I can't run more than one desktop at a time?</p>",
        "id": 153888736,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494346057
    },
    {
        "content": "<p>ah I looked at the task - that will be cool - hanging out for it to be released</p>",
        "id": 153888846,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494391948
    }
]