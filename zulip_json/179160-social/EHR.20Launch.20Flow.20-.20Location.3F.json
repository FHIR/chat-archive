[
    {
        "content": "<p>Hi there! TLDR: <strong>I need to identify the clinical site that is launching the app</strong></p>\n<p>Currently working on a SMART on FHIR app that is launched embedded in an EHR, using the EHR Launch Flow. We have been mostly trying to integrate with EPIC and Cerner EHRs so far.<br>\n<strong>I need to identify the clinical site that is launching the app</strong>, but I am struggling to find the right way of doing it.<br>\nAny thoughts? Below is the initial investigation performed:</p>\n<p>The access-token I get as a result of the OAuth2 authentication process gets me the Location and the Encounter, which I thought could be the way to identify the hospital launching the app.<br>\n<strong>Encounter</strong></p>\n<ul>\n<li>After going through the documentation I am realizing that Encounter.Location is a list and can be empty, so I can't rely on it.</li>\n</ul>\n<p><strong>Location</strong></p>\n<ul>\n<li>I get the location identifier (which allows me to search then for the location resource) only for EPIC EHR, not for Cerner, which is only providing me the Encounter (I assume it can be some kind of lack of permissions, idk).</li>\n</ul>\n<p><strong>PractitionerRole</strong></p>\n<ul>\n<li>I saw that PratictionerRole resource could also be a possibility since it has PractitionerRole.Location - <em>\"The location(s) at which this practitioner provides care\"</em> but this is a list and can be nullable.</li>\n</ul>",
        "id": 278030868,
        "sender_full_name": "Angelo Ferreira",
        "timestamp": 1649255046
    },
    {
        "content": "<p>When you say clinical site, are you referring to identifying the hospital system e.g. Yale or Stanford or at a more granular level such as department?</p>",
        "id": 278031919,
        "sender_full_name": "Dan Wallack",
        "timestamp": 1649255466
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"492014\">@Dan Wallack</span> Hospital system yes, not specific departments.</p>",
        "id": 278032764,
        "sender_full_name": "Angelo Ferreira",
        "timestamp": 1649255783
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"486084\">@Angelo Ferreira</span> On launch, the iss parameter contains the FHIR base URL of the organization. This is the main way I have seen it done.  You could also add a query string parameter to add something like hospid=1234 but that is more of a static method and you would need to have different launch URL's for each organization you go to implement with.</p>",
        "id": 278033603,
        "sender_full_name": "Dan Wallack",
        "timestamp": 1649256144
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"492014\">@Dan Wallack</span> thanks for your suggestion. Despite the <em>iss</em> param not identifying the hospital but the FHIR server the hospital uses, it's ok to use it assuming that it's always the same FHIR server within the same hospital.<br>\nI think it might work, but I am not happy with going with this approach. I was expecting to have a proper Location Id or something I could query the FHIR server against and get more data.<br>\nAny other thoughts?</p>",
        "id": 278040013,
        "sender_full_name": "Angelo Ferreira",
        "timestamp": 1649258482
    },
    {
        "content": "<p>You might get more detail if you ask this in <a class=\"stream\" data-stream-id=\"179170\" href=\"/#narrow/stream/179170-smart\">#smart</a></p>",
        "id": 278042753,
        "sender_full_name": "David Pyke",
        "timestamp": 1649259490
    },
    {
        "content": "<p>If you're referring to what you get in the sandbox dev environments of Epic and Cerner, it may not reflect what you get in a production environment.</p>",
        "id": 278043972,
        "sender_full_name": "Mikael Rinnetmäki",
        "timestamp": 1649259941
    },
    {
        "content": "<p>You can also get practitioner info through the fhirUser object, and try to query for information based on that.</p>",
        "id": 278044113,
        "sender_full_name": "Mikael Rinnetmäki",
        "timestamp": 1649259986
    },
    {
        "content": "<p>But if you don't like something perhaps missing in some environment, I'd go with <span class=\"user-mention\" data-user-id=\"492014\">@Dan Wallack</span>'s proposal. You can convert the iss parameter into an organization based on endpoint lists. See <a href=\"https://open.epic.com/MyApps/Endpoints\">https://open.epic.com/MyApps/Endpoints</a>. I think Cerner has a similar list. I remember also seeing computational access to these being discussed.</p>",
        "id": 278044369,
        "sender_full_name": "Mikael Rinnetmäki",
        "timestamp": 1649260107
    },
    {
        "content": "<p>Thank you all for your tips. Even though they have not 100% answered my question, I learned from them.<br>\nWill carry on with this discussion in <a class=\"stream\" data-stream-id=\"179170\" href=\"/#narrow/stream/179170-smart\">#smart</a> as suggested by David.</p>",
        "id": 278057077,
        "sender_full_name": "Angelo Ferreira",
        "timestamp": 1649265587
    }
]