[
    {
        "content": "<p>Hello people, Totally new here. I'm at BostonChildren's Hospital. Working on a lot fo FHIR. <br>\nI had a question regarding efficient resource retrieval through search.  I read the docs on search params but didn't quite understand. Would really appreciate some guidance.</p>\n<p>I'm trying to search for a <strong>resource (QuestionnaireResponse)</strong> for a <strong>patient</strong> (with a known ID) that is <strong>based-on</strong> <strong>multiple ProcedureRequests</strong>.<br>\nSomething like: QuestionnaireResponse?patient={id}&amp;based-on={procedureRequestID-1},{procedureRequest-ID-2}...</p>\n<p>I know that  using comma separated values work. Not sure if thats a good/efficient way to fetch resources.</p>",
        "id": 153923017,
        "sender_full_name": "Raheel Sayeed",
        "timestamp": 1512494853
    },
    {
        "content": "<p>Comma would give you \"or\".  &amp; would give you \"and\".  Whether a query is \"efficient\" or not will depend somewhat on the architecture of the server.  Certainly it's a \"correct\" way to query.</p>",
        "id": 153923027,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1512498303
    },
    {
        "content": "<blockquote>\n<p>Comma would give you \"or\".  &amp; would give you \"and\".  Whether a query is \"efficient\" or not will depend somewhat on the architecture of the server.  Certainly it's a \"correct\" way to query.</p>\n</blockquote>\n<p>Thanks for the fast response. It really does work well!</p>",
        "id": 153923035,
        "sender_full_name": "Raheel Sayeed",
        "timestamp": 1512500587
    },
    {
        "content": "<p>Hi all, I'm also new to FHIR. I'm reading up on the search query, and the specs do not seem to contain information on the precedence of order. For example, AllergyIntolernace?_include=AllergyIntolerance:patient&amp;_count=3&amp;_sort=birthday,age .. should this return the same results as if the search result paramters were in different order (i.e. sort .. count.. include) ?</p>",
        "id": 168091732,
        "sender_full_name": "Glory Kim",
        "timestamp": 1560466282
    },
    {
        "content": "<p>yes</p>",
        "id": 168091751,
        "sender_full_name": "Jim Steel",
        "timestamp": 1560466309
    },
    {
        "content": "<p>Thanks for the reply! Do you know which would be the recommended order? It makes sense that it would be sort =&gt; count =&gt; include. But I'm not able to find any documentation/resource supporting this. <span class=\"user-mention\" data-user-id=\"191376\">@Jim Steel</span></p>",
        "id": 168091836,
        "sender_full_name": "Glory Kim",
        "timestamp": 1560466373
    },
    {
        "content": "<p>It shouldn't matter</p>",
        "id": 168091858,
        "sender_full_name": "Jim Steel",
        "timestamp": 1560466396
    },
    {
        "content": "<p>I'm wondering how the backend of FHIR processes this information, if it's in sequence of if the search result parameters have their own hierarchy order</p>",
        "id": 168091960,
        "sender_full_name": "Glory Kim",
        "timestamp": 1560466479
    },
    {
        "content": "<p>I imagine it could well be different in different servers</p>",
        "id": 168092019,
        "sender_full_name": "Jim Steel",
        "timestamp": 1560466559
    },
    {
        "content": "<p>But regardless of how it's implemented, the order in which the parameters are stated shouldn't affect the result</p>",
        "id": 168092087,
        "sender_full_name": "Jim Steel",
        "timestamp": 1560466591
    },
    {
        "content": "<p>Great! I guess, I should rephrase my next question as \"Knowing that the order of parameters does not matter, how is the hierarchy of result parameters set?\"</p>\n<p>Thanks so much Jim.</p>",
        "id": 168092226,
        "sender_full_name": "Glory Kim",
        "timestamp": 1560466728
    },
    {
        "content": "<p>If its a question for implementers, you might also have more luck asking in <a class=\"stream\" data-stream-id=\"179166\" href=\"/#narrow/stream/179166-implementers\">#implementers</a> than in <a class=\"stream\" data-stream-id=\"179160\" href=\"/#narrow/stream/179160-social\">#social</a></p>",
        "id": 168092256,
        "sender_full_name": "Jim Steel",
        "timestamp": 1560466774
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 168095576,
        "sender_full_name": "Glory Kim",
        "timestamp": 1560470597
    },
    {
        "content": "<p>I have a  use case where I want to get latest Observation(after particular date) for a  particular Patient. What will be the best way to do it ?      <br>\n 1.Based on _history (not sure whether it is applicable with Patient search)                                                                                                         2.Perform Search based on observation.effective</p>",
        "id": 175038840,
        "sender_full_name": "Liam",
        "timestamp": 1567750975
    },
    {
        "content": "<p>get [url]/Observation?patient=X&amp;code=Y&amp;_count=1&amp;_sort=-date</p>",
        "id": 175038962,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1567751137
    },
    {
        "content": "<p>@Grahame Grieve I have edited the question based on Use-Case. Can you answer now.</p>",
        "id": 175047133,
        "sender_full_name": "Liam",
        "timestamp": 1567760491
    },
    {
        "content": "<p>depends on the server. Search is a lot easier and less work for the client and less data moved around, but the server has to support that combination</p>",
        "id": 175057187,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1567771133
    }
]