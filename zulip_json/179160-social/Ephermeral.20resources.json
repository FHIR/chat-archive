[
    {
        "content": "<p>How bad is it to generate ephemeral resources in a search result? we're searching a system that aggregates underlying data into a fhir model, but there's no actual ID to associate with all of that information, except the query string</p>",
        "id": 157152826,
        "sender_full_name": "Andy",
        "timestamp": 1548809366
    },
    {
        "content": "<p>what do you need to do with the id?</p>",
        "id": 157154156,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1548811016
    },
    {
        "content": "<p>In this case the it's because i'm returning a resource that has a Patient, with _include=Patient, and need a way to link them up</p>",
        "id": 157154249,
        "sender_full_name": "Andy",
        "timestamp": 1548811102
    },
    {
        "content": "<p>just within the request?</p>",
        "id": 157154262,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1548811132
    },
    {
        "content": "<p>In the future, this sort of question is best raised on <a class=\"stream\" data-stream-id=\"179166\" href=\"/#narrow/stream/179166-implementers\">#implementers</a>.  Social is non-implementation related stuff.</p>",
        "id": 157154348,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1548811217
    },
    {
        "content": "<p>the response has <code>[{ resourceType: \"other\", patient: { reference: \"Patient/Ephemeral_ID\"} }, { resourceType: \"Patient\", id: \"Ephemeral_ID\" }]</code></p>",
        "id": 157154351,
        "sender_full_name": "Andy",
        "timestamp": 1548811220
    },
    {
        "content": "<p>and it's so the client can link them up. is this ok in fhir? (noted <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> )</p>",
        "id": 157154361,
        "sender_full_name": "Andy",
        "timestamp": 1548811246
    },
    {
        "content": "<p>There's no resource named \"other\", so regardless of whether the ids exist or not, it's not legal FHIR.  And providing a list of ephemeral ids that can't actually be queried doesn't seem like it's going to provide much value...</p>",
        "id": 157154546,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1548811504
    },
    {
        "content": "<p>edit: what the heck is this chat client</p>",
        "id": 157205872,
        "sender_full_name": "Andy",
        "timestamp": 1548870364
    },
    {
        "content": "<p>sorry, \"other\" was an example of any other resource, say Coverage, that has a patient reference. since they're both coming back in a bundle, with _include=Patient, the client needs a way to follow the reference in a search result</p>",
        "id": 157205890,
        "sender_full_name": "Andy",
        "timestamp": 1548870390
    },
    {
        "content": "<p>Would the Coverage resources be ephemeral or just the Patients?  If so, have you considered a \"contained\" Patient?</p>",
        "id": 157206135,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1548870673
    },
    {
        "content": "<p>in this case they are both ephemeral, in the sense that if we gave them a real ID, we wouldn't be able to link that ID back to anything in our underlying data store</p>",
        "id": 157206505,
        "sender_full_name": "Andy",
        "timestamp": 1548871011
    },
    {
        "content": "<p>the business case is an API that returns information about a patient and coverage from an API in the same response</p>",
        "id": 157206521,
        "sender_full_name": "Andy",
        "timestamp": 1548871039
    },
    {
        "content": "<p>That sounds like you're doing more of an operation than a query.  How are you searching?</p>",
        "id": 157208270,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1548872383
    },
    {
        "content": "<p>With query parameters like first name. it doesn't have side effects</p>",
        "id": 157210172,
        "sender_full_name": "Andy",
        "timestamp": 1548873689
    },
    {
        "content": "<p>If your objective is to let people query as they wish, you can't count on specific search parameters being used and you can't count on data being retrieved using _include.  If your objective is to create a defined set of behavior that clients will customize their solutions to talk to, then you're effectively defining a custom operation - so you may as well expose your capability that way.</p>",
        "id": 157211078,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1548874342
    }
]