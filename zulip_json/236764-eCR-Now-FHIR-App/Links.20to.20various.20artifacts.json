[
    {
        "content": "<p>The source code repository is at <a href=\"https://github.com/drajer-health/eCRNow\" title=\"https://github.com/drajer-health/eCRNow\">https://github.com/drajer-health/eCRNow</a> </p>\n<p>The ERSD file can be downloaded by registering for an account at : <a href=\"http://ersd.aimsplatform.org\" title=\"http://ersd.aimsplatform.org\">http://ersd.aimsplatform.org</a> Currently this link only works state-side and if you are out of country, please contact us to figure out how we can get you a copy of it through the right means.</p>\n<p>The schematron file can be downloaded from <a href=\"https://gforge.hl7.org/gf/project/pher/scmsvn/?action=browse&amp;path=%2Ftrunk%2FPHCASERPT_eICR%2Fschematron%2F\" title=\"https://gforge.hl7.org/gf/project/pher/scmsvn/?action=browse&amp;path=%2Ftrunk%2FPHCASERPT_eICR%2Fschematron%2F\">https://gforge.hl7.org/gf/project/pher/scmsvn/?action=browse&amp;path=%2Ftrunk%2FPHCASERPT_eICR%2Fschematron%2F</a> with the appropriate HL7 authorization.</p>",
        "id": 196234853,
        "sender_full_name": "Nagesh Bashyam",
        "timestamp": 1588623532
    },
    {
        "content": "<p>Is there a way to download the ERSD file as json instead of XML?</p>",
        "id": 196346955,
        "sender_full_name": "Eric Marriott",
        "timestamp": 1588703468
    },
    {
        "content": "<p>Retrieving JSON eRSD bundle.</p>\n<p>The only format available for download from the eRSD application main page currently is XML.  However, there are two mechanisms for getting JSON (not option 1 is not relevant if you need the distribution between release notifications):</p>\n<div class=\"codehilite\"><pre><span></span><code>1. On the subscription page you can select to receive JSON format and make sure to check &quot;include changed artifacts&quot;.  When new versions are released, you will receive an email with the bundle.\n\n2. On the main page click on polling management, on this page you can create an API key to use in the GET on the REST api.\nURL for GET:  https://ersd.aimsplatform.org/api/fhir/Bundle?_sort=-_lastUpdated&amp;_count=1&amp;api-key=&lt;api key from ersd site&gt;\n</code></pre></div>",
        "id": 196365929,
        "sender_full_name": "Tim Morris",
        "timestamp": 1588711964
    },
    {
        "content": "<p>Hi Nagesh,<br>\nCan you explain a few common scenarios for invoking the SMART on FHIR component of the eCR Now app?  For example, do some  EHR vendors invoke the eCR Now app without direct user involvement?  For example, a patient encounter record is generated within their system and they automatically invoke wthe eCR Now app?  Or, do all of the use cases involve a user accessing a patient record in the EHR portal and invoking eCR Now when they create an encounter within the portal?<br>\nThanks,<br>\nMike</p>",
        "id": 196687982,
        "sender_full_name": "Michael McCune",
        "timestamp": 1588794754
    },
    {
        "content": "<p>Nagesh,<br>\nAs I am involved with the eHealth Exchange, I'm wondering if we could scan documents transmitted over the exchange (CCDAs) and invoke eCR Now when a recent encounter record is detected?  eCR Now would make FHIR calls back to the document sender to gather the data for an eCR and send it on to AIMS (assuming that there is enough to \"trigger\" an eCR).  We would need additional code so that we don't duplicate requests back to the provider (document sender) by verifying  whether the encounter has been acted on already or not.  Of course, we would also need \"buy in\" from the eHealth Exchange community.<br>\nThanks,<br>\nMike</p>",
        "id": 196689408,
        "sender_full_name": "Michael McCune",
        "timestamp": 1588795462
    },
    {
        "content": "<p>Michael<br>\nWe are exploring the app invocation without user involvement and that would be the desired outcome and the preferred method.  The big challenge has been obtaining the patient and encounter context information to query the EHR for data subsequently.  Some methods that have been discussed previously is the use of ADTs to build the patient/encounter list and work from there. There also have been discussions about creating an API to pass the context and take it from there. So this is an area that will have to be addressed more deeply and may require customization by the vendors based on their preferences. I have to think about the eHealth Exchange scenario that you outlined, maybe we can discuss during our connectathon sessions.</p>",
        "id": 196694295,
        "sender_full_name": "Nagesh Bashyam",
        "timestamp": 1588797756
    },
    {
        "content": "<p>Hi Nagesh,<br>\nThanks for the feedback.  The approach that I proposed within the eHealth Exchange is a long-term consideration.  We cannot move forward quickly on that approach.<br>\nThanks,<br>\nMike</p>",
        "id": 196716660,
        "sender_full_name": "Michael McCune",
        "timestamp": 1588813153
    }
]