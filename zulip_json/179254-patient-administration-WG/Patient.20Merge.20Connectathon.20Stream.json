[
    {
        "content": "<p>I spoke about patient merging at DevDays. At the end, I asked if anyone was interested in a stream around patient merging, and there was quite some interest (50+ hands up). Is anyone interested in planning and running a stream around patient merge? </p>\n<p>For me, there's 2 parts of interest:</p>\n<ul>\n<li>how does the API deal with a patient merge that happened internally</li>\n<li>how does the API allow for a patient merge process</li>\n</ul>\n<p>I think the 1st is more pressing than the second</p>",
        "id": 168764192,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1561235395
    },
    {
        "content": "<p>btw, during the presentation, I described 3 options for dealing with a request accessing a patient that has been been merged into another patient (eg. patient A merged into Patient B, and now <code>GET [base]/Patient/A</code>:</p>\n<ul>\n<li>return 200 ok with a patient record stating actice=false + link to B</li>\n<li>return 304 redirect to [base]/Patient/B (handled in HTTP client transparently to client)</li>\n<li>return 404 not found</li>\n</ul>\n<p>I asked for a show of hands for which was safest - and got an even spread across options</p>",
        "id": 168764345,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1561235651
    },
    {
        "content": "<p>note I think the 304 redirect is mist unsafe since it's transparent to the client. btw, I asked how many implementations check that that the patient id in the returned resource matches the patient that was requested, and got only 1 implementation saying that they do that (Pascal)</p>",
        "id": 168764350,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1561235700
    },
    {
        "content": "<p>we also have interest in this from IHE perspective related to the PRIM profile. The management of Patient is not as hard as the management of all data (FHIR Resources) that reference the 'old' Patient. especially related to when those historic Resources are signed...</p>",
        "id": 169402896,
        "sender_full_name": "John Moehrke",
        "timestamp": 1561993328
    },
    {
        "content": "<p>it would be good to itemize the use-cases that distinguish Merge from a perfect world where no duplicates ever happen and identity provisioning is perfect the first time.</p>",
        "id": 169487859,
        "sender_full_name": "John Moehrke",
        "timestamp": 1562079314
    },
    {
        "content": "<p>what happens to Patient resource? What happens to other Resources that reference the Patient resource? Queries, Creates, Updates?</p>",
        "id": 169488020,
        "sender_full_name": "John Moehrke",
        "timestamp": 1562079420
    },
    {
        "content": "<p>Yes, those are all considerations for the connectathon.</p>",
        "id": 169526511,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1562108870
    },
    {
        "content": "<p>Did IHE try and test anything for what they wrote up, or just an initial strawman?</p>",
        "id": 169526564,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1562108901
    },
    {
        "content": "<p>Here is a webex we can use for screen sharing at the connectathon: <a href=\"https://epic.webex.com/epic/j.php?MTID=mdf6fe02c3cc03a5503d8d8e5a9e70636\" target=\"_blank\" title=\"https://epic.webex.com/epic/j.php?MTID=mdf6fe02c3cc03a5503d8d8e5a9e70636\">https://epic.webex.com/epic/j.php?MTID=mdf6fe02c3cc03a5503d8d8e5a9e70636</a></p>",
        "id": 175701617,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568467905
    },
    {
        "content": "<p>Hey all, this is the topic to follow for connectathon related Patient Merge functionality</p>",
        "id": 175701662,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1568467944
    },
    {
        "content": "<p><a href=\"https://confluence.hl7.org/display/PA/Connectathon+Sept+2019+at+WGM+%28Atlanta%29+Patient+%24Merge\" target=\"_blank\" title=\"https://confluence.hl7.org/display/PA/Connectathon+Sept+2019+at+WGM+%28Atlanta%29+Patient+%24Merge\">https://confluence.hl7.org/display/PA/Connectathon+Sept+2019+at+WGM+%28Atlanta%29+Patient+%24Merge</a></p>",
        "id": 175701664,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1568467944
    },
    {
        "content": "<p>Here is a webex we can use for the merge connectathon: <a href=\"https://epic.webex.com/epic/j.php?MTID=mdf6fe02c3cc03a5503d8d8e5a9e70636\" target=\"_blank\" title=\"https://epic.webex.com/epic/j.php?MTID=mdf6fe02c3cc03a5503d8d8e5a9e70636\">https://epic.webex.com/epic/j.php?MTID=mdf6fe02c3cc03a5503d8d8e5a9e70636</a></p>",
        "id": 175701742,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568468055
    },
    {
        "content": "<p>I have a very draft version up on here:<br>\n<a href=\"http://sqlonfhir-r4.azurewebsites.net/fhir/\" target=\"_blank\" title=\"http://sqlonfhir-r4.azurewebsites.net/fhir/\">http://sqlonfhir-r4.azurewebsites.net/fhir/</a><br>\nCurrently is only performing the changes to the Patient resources (and validating all the parameters)<br>\nnext for me will be processing all the referenced content.</p>",
        "id": 175717936,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1568494690
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> got a tic to talk turkey, I mean provenance for the Patient Merge?<br>\nWe're trying to decide what is in it.</p>",
        "id": 175750111,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1568555838
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span>  looking at the Merge Operation - how does the server know who to send messages to about the merge? The subscription approach is nice because apps that care (or servers that care) can formally request notification</p>",
        "id": 175753288,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568560618
    },
    {
        "content": "<p>IE: we have some apps that don't care about merges because they don't store data (actually the majority right now)</p>",
        "id": 175753301,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568560645
    },
    {
        "content": "<p>But we have a few that do have separate stores and need to get the data updated</p>",
        "id": 175753305,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568560656
    },
    {
        "content": "<p>on that topic... have you seen the subscription for patient updates including merge that are in the IHE PRIM profile?</p>",
        "id": 175753357,
        "sender_full_name": "John Moehrke",
        "timestamp": 1568560719
    },
    {
        "content": "<p>The operation is the explicit  action to kick off the whole thing, how that ripples onto other systems isn't specifically covered at this stage, but have covered a little on what could occur from a messaging standpoint - but really drafty.<br>\n<a href=\"https://confluence.hl7.org/pages/viewpage.action?pageId=58657695#MergeOperation-NotificationMechanisms\" target=\"_blank\" title=\"https://confluence.hl7.org/pages/viewpage.action?pageId=58657695#MergeOperation-NotificationMechanisms\">https://confluence.hl7.org/pages/viewpage.action?pageId=58657695#MergeOperation-NotificationMechanisms</a></p>",
        "id": 175753419,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1568560804
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>   No,  but we've had some issues with Subscriptions in pre-R5 draft as well (the Topic breakout work is helping resolve some problems). Link?</p>",
        "id": 175753433,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568560839
    },
    {
        "content": "<p>I get the impression that this is going to be a place where the subscription profile will need to be able to handle many different scenarios, so long as an app or server will get notified</p>",
        "id": 175754203,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568562099
    },
    {
        "content": "<p>IE: it will point to a topic definition that allows for many scenarios, but the end result is the same</p>",
        "id": 175754210,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568562120
    },
    {
        "content": "<p>unfortunately the work is still open.. and awaiting the merge work here at HL7. It is in this github <a href=\"https://github.com/IHE/IT-Infrastructure/tree/master/PRIM\" target=\"_blank\" title=\"https://github.com/IHE/IT-Infrastructure/tree/master/PRIM\">https://github.com/IHE/IT-Infrastructure/tree/master/PRIM</a></p>",
        "id": 175754781,
        "sender_full_name": "John Moehrke",
        "timestamp": 1568563015
    },
    {
        "content": "<p>Provenance.activity could be drawn from the EHR lifecycle events where there is a merge activity <a href=\"http://build.fhir.org/valueset-object-lifecycle-events.html\" target=\"_blank\" title=\"http://build.fhir.org/valueset-object-lifecycle-events.html\">http://build.fhir.org/valueset-object-lifecycle-events.html</a></p>",
        "id": 175756429,
        "sender_full_name": "John Moehrke",
        "timestamp": 1568565839
    },
    {
        "content": "<p>I have a CP to fix the existing Provenance.actiity valueset that is not complete</p>",
        "id": 175756481,
        "sender_full_name": "John Moehrke",
        "timestamp": 1568565863
    },
    {
        "content": "<p><a href=\"https://1drv.ms/p/s!ApkGK_oT9urNvYVm4A3KnKVlnAnxaA\" target=\"_blank\" title=\"https://1drv.ms/p/s!ApkGK_oT9urNvYVm4A3KnKVlnAnxaA\">https://1drv.ms/p/s!ApkGK_oT9urNvYVm4A3KnKVlnAnxaA</a></p>",
        "id": 175765119,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1568579961
    },
    {
        "content": "<p>Question to the group on References to Patient with a version on them, such as those found in AuditEvents.<br>\nWhat do we do with those?<br>\nI think they have to remain untouched right?<br>\nCan't exactly move them over, as that version number is specific to the old value.<br>\nThink might be worth including them in a log though.<br>\n<span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>  thoughts?</p>",
        "id": 176431681,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1569299737
    },
    {
        "content": "<p>Also, anyone have any comments on what should happen if the reference exists in an extension somewhere? should that be updated too?<br>\n(Assuming the answer yes) My server would have no idea what to do with this.<br>\nInternally I'm iterating over all the resource types, and search parameters that target the source patient , and then updating them as they are found.<br>\nThis means that as long as there is a search parameter on Patient for all the usage, then they will be all covered.<br>\n<span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span>  <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  thoughts?</p>",
        "id": 176432099,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1569300470
    },
    {
        "content": "<p>Those questions are a challenge for me. I’d search for resources by the search parameters, but I’d scan them by element, not search parameter. But... I don’t have time to scan every resource on file. So search parameters are the thing. But... what about DocumentReference where one of the references shouldn’t be fixed?</p>",
        "id": 176457691,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1569327607
    },
    {
        "content": "<p>Good question that I am not sure how much thought has gone into it. These hard questions are the bit I expect to keep popping up. I would expect that the historic versions of any resource would be not-touched, thus historic linkages are still historically correct. It is just the current and future versions that have the identity updated because of the merge operation. Right?<br>\nThus, when a query is done on non-version id; it will get the current and thus correct value. Where as pulling a version specific will get that specific. right?</p>",
        "id": 176461517,
        "sender_full_name": "John Moehrke",
        "timestamp": 1569330514
    },
    {
        "content": "<p>as to extensions that are of type Reference... this might be detectable even if the extension is not understoood?  This seems dangerous.  Might be best for us to identify that extensions that are (or have within) References are an open issue.</p>",
        "id": 176461584,
        "sender_full_name": "John Moehrke",
        "timestamp": 1569330582
    },
    {
        "content": "<p>Are we looking for general guidance that an element of type Reference that holds a version specific reference would NOT be changed by a merge operation? That seems on the face to be safe, so what are the cases when it is not?  If not that kind of a behaviour of the merge, what kind of damage can a  more aggressive merge cause? Seems aggressive merge could do quite a bit of unintended damage. I think it is best that we itemize these so that we can come to a conclusion.   seems to me that if a version specific reference was used, it was used for good reason; however might there be egregious use of version specific references when unversioned should be used?</p>",
        "id": 176461859,
        "sender_full_name": "John Moehrke",
        "timestamp": 1569330785
    },
    {
        "content": "<blockquote>\n<p>Those questions are a challenge for me. I’d search for resources by the search parameters, but I’d scan them by element, not search parameter. But... I don’t have time to scan every resource on file. So search parameters are the thing. But... what about DocumentReference where one of the references shouldn’t be fixed?</p>\n</blockquote>\n<p>This is a good example. Even in XDS when merge is done in a XDS Registry, only the active Patient ID is updated in the Registry. Any \"sourcePatientInfo\" is left exactly as it was initially published. This concept of sourcePatientInfo is specifically intended to be exactly what the patient was at the time of publication. In the binding of XDS to FHIR in MHD; the concept of sourcePatientInfo is mandated as a contained Patient. This is how this behavior is maintained in FHIR.</p>",
        "id": 176474182,
        "sender_full_name": "John Moehrke",
        "timestamp": 1569338438
    },
    {
        "content": "<p>which brings up the question about merge on if it is expected that the merge will update any <a href=\"http://Patient.id\" target=\"_blank\" title=\"http://Patient.id\">Patient.id</a> found in contained? I would think it should not expect a merge operation to affect contained Patient. But should it? What about all other resource types that are in contained? might those also be behind the visitiblity of the merge action?</p>",
        "id": 176474395,
        "sender_full_name": "John Moehrke",
        "timestamp": 1569338532
    },
    {
        "content": "<p>The 2 that really get me are provenance and verificationresult.<br>\nI kinda think a new verificationresult would be in order, however all the other provenances that contributed to the patient record are now no longer locatable for the patient. This seems wrong.<br>\nMy merge provenance resource records a warning for each versioned reference it encounters. And doesn't touch the merge provenance records.<br>\nI still need to process the patient resource more carefully to catch other patient resources that link to the source that aren't involved in the merge.</p>",
        "id": 176507427,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1569359970
    },
    {
        "content": "<p>The older Provenance would be findable if you noticed the one Provenance indicating the merge...   In theory the deprecated Patient no-longer exists,  and thus all the old versions of that deprecated Patient would too no-longer exist. Where the definition of no-longer exist is dependent on the policy. If that policy is to truly purge, then both the Patient and Provenance (all versions) would also get purged. So, I am not clear what the problem is.  Similar for VerificationResult, why would these matter anymore for the deprecated Patient; they clearly were improper Verification Results... as they were verifying the thing that ultimately was deemed to be duplicate and to be deprecated...</p>",
        "id": 176537425,
        "sender_full_name": "John Moehrke",
        "timestamp": 1569393221
    },
    {
        "content": "<p>You're right. My new provenance needs to point to it, so concern alleviated (of sorts)</p>",
        "id": 176538095,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1569393986
    },
    {
        "content": "<p>The VerificationResult however I would think that would want to initiate a new verification process on the freshly merged record, as the previous verification is now stale/irrelevant.<br>\nThink I'll add it to my info messages.</p>",
        "id": 176538187,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1569394101
    },
    {
        "content": "<p>New twist brought up in IHE discussions on Patient Merge and affect in an HIE... Given that the patient can be an author, and other kinds of participants... When merging one must look everywhere the deprecated Patient exists and fix them up too. So the actions of a merge is not limited to .subject and .patient elements.</p>",
        "id": 177235584,
        "sender_full_name": "John Moehrke",
        "timestamp": 1570103157
    },
    {
        "content": "<p>no. and any real system will have patient information outside the scope of FHIR too. Even minimally, there's potentially multiple user accounts</p>",
        "id": 177279502,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1570131691
    },
    {
        "content": "<p>Correct. My POC reads every resource and any search parameter to patient it resolves. But this misses any extensions that aren't in search parameters.<br>\nOnly way around it is to scan everything in the way in and tag a special search parameter <code>patient-for-merge</code><br>\n<code>descendants.ofType(ResourceReference).resolve().ofType(Patient)</code><br>\nI know probably wrong and expensive but that gives the idea.</p>",
        "id": 177286736,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1570135686
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> I thought we'd already mentioned it. We will be more explicit though.</p>",
        "id": 177286825,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1570135761
    },
    {
        "content": "<p>So what happened to the idea of support a HTTP redirect? This would at least help if one should fail to update some of the references..</p>",
        "id": 178023069,
        "sender_full_name": "René Spronk",
        "timestamp": 1570946721
    },
    {
        "content": "<p>Not sure what happened... but there was concern that an http redirect might not be noticed as \"you have something wrong that needs to be fixed\". But I don't think we forbid it, I think we just thought that it was more dangerous than helpful.</p>",
        "id": 178055970,
        "sender_full_name": "John Moehrke",
        "timestamp": 1571002415
    },
    {
        "content": "<p>And also consistency in approach, that only works when you are directly requesting that specific resource, so it doesn't work with searching, or includes. I thought we added those notes into the discussion in the page. Will ensure it's documented in there.</p>",
        "id": 178056914,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1571004004
    },
    {
        "content": "<p>Conference call on now for the Merge if folks want join!</p>",
        "id": 178319068,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1571252660
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> ,<br>\nIs there going to be a Patient Merge track again at the Connectathon in Sydney? <br>\nIf yes, I would be interested to participate.</p>",
        "id": 185315956,
        "sender_full_name": "Reinhard Egelkraut",
        "timestamp": 1578667685
    },
    {
        "content": "<p>Wasn't planning on doing it, though could present some progress to others might be an idea.</p>",
        "id": 185359242,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1578696742
    }
]