[
    {
        "content": "<p>How does one perform a search using demographic data ONLY across both Person AND Patient resources simultaneously when one does not necessarily know if a person is or is not a patient? <br>\nIs it implicit that if some Persons are NOT patients then ALL Patients must also have associated Person resources so that the search function will run against the Persons rather than Patients?</p>\n<p>Scenario: Mother is NOT receiving care in our system but her child is receiving care.<br>\nInitially, the mother is represented by a Person resource and the child is a Patient resource.<br>\nMother then presents herself at our urgent care clinic. What search do we perform to make sure we locate the mother's record not knowing if she's an existing Patient or a known Person?</p>",
        "id": 275667970,
        "sender_full_name": "Yuval Romm",
        "timestamp": 1647529931
    },
    {
        "content": "<p>You can't assume that Patients will have an associated person resource, nor the other way around. Your search would require complex server side logic, using _query (a stored/named query) or some other non-search-url based search mechanism.</p>",
        "id": 275671374,
        "sender_full_name": "Ren√© Spronk",
        "timestamp": 1647531107
    },
    {
        "content": "<p>If the server supports base searching, the <code>_type</code> parameter, and all the demographics you want to search on are supported, it should be possible via something like <code>http://example.org/fhir?_type=Patient,Person&amp;name=someName...</code>.</p>\n<p>Your milage will vary on whether a server supports all of those things - make sure to check the returned <code>self</code> link to verify that all of your conditions were met.</p>",
        "id": 275672881,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1647531625
    },
    {
        "content": "<p>With that mother case, you also be interested in the RelatedPerson resource too.<br>\nAs things have been, not many do Person at all. Doing Patient and RelatedPerson would be more reliable.<br>\nAnd doing a batch search including the 2 (or 3) queries at once can make it a single call (from a rest perspective)</p>",
        "id": 275725680,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1647550695
    }
]