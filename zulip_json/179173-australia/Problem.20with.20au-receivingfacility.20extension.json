[
    {
        "content": "<p>On the AUPD working group call last week, I raised a problem related to our use of the au-rec-fac extension and was asked to write that up for further discussion... here's that writeup. May I have your thoughts please <span class=\"user-mention\" data-user-id=\"191368\">@Brett Esler</span> , <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> , and others interested.</p>\n<p>In the AUPD SecureMessagingEndpoint profile, there's an extension called au-receivingfacility that points to an AU base structure here: <a href=\"http://hl7.org.au/fhir/pd2018Mar/StructureDefinition-au-receivingfacility.html\" target=\"_blank\" title=\"http://hl7.org.au/fhir/pd2018Mar/StructureDefinition-au-receivingfacility.html\">http://hl7.org.au/fhir/pd2018Mar/StructureDefinition-au-receivingfacility.html</a>. in the Endpoint, the au-recfac has a cardinality of 0..1.</p>\n<p>The description of that thing says : \"Values for routing HLV2 message payloads associated with an endpoint. Suitable for MSH-6.\" It takes three chunks of data, corresponding to the three parts of the MSH-6 segment. All well and good.</p>\n<p>In our initial implementation, we populated that structure with our vendor-specific addressing info. However, for federation with other messaging vendors as part of the Secure Message Delivery interoperability pilot we're participating in, we are expected to populate that block with the HPI-O addressing information.</p>\n<p>I think both are valid use cases... we transmit tens of millions of messages using our internal ID scheme, so that's an important thing to cover off. And of course, HPI-O addressing for interoperation is a useful thing as well.</p>\n<p>As a straw man proposal to solve this problem, I'd like your feedback on a 2-part change to the AUPD Endpoint profile. First, change the au-receivingfacility cardinality to 0..*. Second, add some sort of \"type\" to the au-receivingfacility structure, which might be as simple as a coded value bound to <a href=\"http://hl7.org.au/fhir/base2018Mar/ValueSet-au-hl7v2-0203.html\" target=\"_blank\" title=\"http://hl7.org.au/fhir/base2018Mar/ValueSet-au-hl7v2-0203.html\">http://hl7.org.au/fhir/base2018Mar/ValueSet-au-hl7v2-0203.html</a> or might have to be more complex similar to an instance of Identifier.</p>",
        "id": 153991378,
        "sender_full_name": "John Carter",
        "timestamp": 1535496708
    },
    {
        "content": "<p>Hi John, the cardinality of 0..1 was intentional, it was intended that if more ids are required then additional Endpoint resources be allocated.</p>",
        "id": 153991386,
        "sender_full_name": "Jared Davison",
        "timestamp": 1535501935
    },
    {
        "content": "<p>The problem with introducing multiple cardinality is that it would result in ambiguity, because as a user how would you know which one to use. The design was that you identify search either the HealthcareService or PractitionerRole resource of interest, and that indicates the Endpoint resource which explicitly tells you what to put into the HL7 message MSH-6 fields because there is only 1 possibility. Also if you have a HL7 message with a correct MSH-6 value you can query the Endpoint resource which tells you how to route/encrypt it etc using the MSH-6 field values. This works, it was done at the connectathon last year.</p>",
        "id": 153991389,
        "sender_full_name": "Jared Davison",
        "timestamp": 1535502494
    },
    {
        "content": "<p>I believe this is not a matter requiring change of the specifications, but just a matter of understanding how to use them.</p>",
        "id": 153991391,
        "sender_full_name": "Jared Davison",
        "timestamp": 1535502627
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191397\">@Jared Davison</span> , Thanks for sharing your thoughts on this. In my original posting I did try to tackle the ambiguity that would result from having multiple au-recfac blocks by introducing a \"type\" to each one. In the approach you outlined, it seems that the same ambiguity could now reside in the multiple Endpoint resources... how does a sender know which one to pick? I do see the connectionType attribute, which binds (required) to a value set here: <a href=\"http://hl7.org.au/fhir/pd2018Mar/ValueSet-valueset-au-serviceinterface.html\" target=\"_blank\" title=\"http://hl7.org.au/fhir/pd2018Mar/ValueSet-valueset-au-serviceinterface.html\">http://hl7.org.au/fhir/pd2018Mar/ValueSet-valueset-au-serviceinterface.html</a>. I can see the right value to indicate SMD messaging in that list, and in the AUPD example resources. What value would I use to indicate that (the other) endpoint is intended to be used only for HealthLink-to-HealthLink messaging? I'd suggest adding a new value to that value set, but probably one of the existing codes was used at the Connectathon to solve the problem?</p>",
        "id": 153991442,
        "sender_full_name": "John Carter",
        "timestamp": 1535521726
    },
    {
        "content": "<p>The value set is defined to support interoperability. If you you want to define endpoint resources that are not going to be interoperable I do not see an issue with defining your own healthlink connectionType uri and putting it in connectionType. It won't be compliant, but that's exactly what you want as I understand it? Consumers should only be looking for things that work for them, ie Endpoints containing known values others such as your uri will be invalid. Really I don't think you should be publishing such records for viewing externally on a compliant interface, but for internal use within your system I see no problem.</p>",
        "id": 153991459,
        "sender_full_name": "Jared Davison",
        "timestamp": 1535527411
    },
    {
        "content": "<p>I agree with Jared in the main part - different connectionType is different Endpoint instance - I would suggest we make AU PD Endpoint.connectionType and Endpoint.payloadType extensible rather than required bindings to the valuesets; that would mean could extend the valueset for domain restricted use in another profile derived from AU PD spec</p>",
        "id": 153991529,
        "sender_full_name": "Brett Esler",
        "timestamp": 1535549694
    },
    {
        "content": "<p>is Healthlink to Health link HL7 on MLLP that is direct HL7 V2 over TCP/IP? there is code for that in connection type valueset <strong>hl7v2-mllp</strong></p>",
        "id": 153991530,
        "sender_full_name": "Brett Esler",
        "timestamp": 1535549919
    },
    {
        "content": "<p>Separating out the endpoints and making those value sets extensible solves the problem I currently have to solve. We'll move ahead on the hope/assumption that is how things proceed.</p>",
        "id": 153991707,
        "sender_full_name": "John Carter",
        "timestamp": 1535577400
    },
    {
        "content": "<p>Regarding the use of MLLP or not, that code would probably achieve the goal, but it's not semantically great... I'm not trying to describe a wire protocol... rather, I'm trying to say \"this endpoint conforms (or doesn't) to the current agreement/limitations in place on the SMD network (allowable certificates, allowable addresses, federation contracts, ...)\".</p>",
        "id": 153991709,
        "sender_full_name": "John Carter",
        "timestamp": 1535577700
    }
]