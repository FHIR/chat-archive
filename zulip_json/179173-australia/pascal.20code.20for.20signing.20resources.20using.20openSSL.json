[
    {
        "content": "<div class=\"codehilite\" data-code-language=\"Delphi\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"k\">function</span> <span class=\"nc\">TJWTUtils</span><span class=\"o\">.</span><span class=\"nf\">Sign_ES256</span><span class=\"p\">(</span><span class=\"n\">input</span><span class=\"o\">:</span> <span class=\"n\">TBytes</span><span class=\"o\">;</span> <span class=\"n\">key</span><span class=\"o\">:</span> <span class=\"n\">TJWK</span><span class=\"p\">)</span><span class=\"o\">:</span> <span class=\"n\">TBytes</span><span class=\"o\">;</span>\n<span class=\"k\">var</span>\n  <span class=\"n\">ctx</span> <span class=\"o\">:</span> <span class=\"n\">PEVP_MD_CTX</span><span class=\"o\">;</span>\n  <span class=\"n\">keysize</span> <span class=\"o\">:</span> <span class=\"kt\">integer</span><span class=\"o\">;</span>\n  <span class=\"n\">len</span><span class=\"o\">,</span> <span class=\"n\">l</span> <span class=\"o\">:</span> <span class=\"kt\">Cardinal</span><span class=\"o\">;</span>\n  <span class=\"n\">p</span> <span class=\"o\">:</span> <span class=\"n\">System</span><span class=\"o\">.</span><span class=\"kt\">PByte</span><span class=\"o\">;</span>\n  <span class=\"n\">pkey</span><span class=\"o\">:</span> <span class=\"n\">PEVP_PKEY</span><span class=\"o\">;</span>\n  <span class=\"n\">PkeyCtx</span><span class=\"o\">:</span> <span class=\"n\">PEVP_PKEY_CTX</span><span class=\"o\">;</span>\n  <span class=\"n\">rkey</span><span class=\"o\">:</span> <span class=\"n\">PEC_KEY</span><span class=\"o\">;</span>\n  <span class=\"n\">keys</span> <span class=\"o\">:</span> <span class=\"n\">TJWKList</span><span class=\"o\">;</span>\n  <span class=\"n\">keytype</span> <span class=\"o\">:</span> <span class=\"kt\">integer</span><span class=\"o\">;</span>\n  <span class=\"cm\">{$IFDEF ALT}</span>\n  <span class=\"n\">Signature</span><span class=\"o\">:</span> <span class=\"k\">array</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"o\">..</span><span class=\"mi\">8000</span><span class=\"p\">]</span> <span class=\"k\">of</span> <span class=\"kt\">byte</span><span class=\"o\">;</span>\n  <span class=\"cm\">{$ENDIF}</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">check</span><span class=\"p\">(</span><span class=\"n\">key</span> <span class=\"o\">&lt;&gt;</span> <span class=\"k\">nil</span><span class=\"o\">,</span> <span class=\"s\">'A key must be provided for ES256'</span><span class=\"p\">)</span><span class=\"o\">;</span>\n  <span class=\"n\">len</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span><span class=\"o\">;</span>\n  <span class=\"n\">p</span> <span class=\"o\">:=</span> <span class=\"o\">@</span><span class=\"n\">input</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">;</span>\n  <span class=\"n\">l</span> <span class=\"o\">:=</span> <span class=\"nb\">length</span><span class=\"p\">(</span><span class=\"n\">input</span><span class=\"p\">)</span><span class=\"o\">;</span>\n  <span class=\"cm\">{$IFDEF ALT}</span>\n  <span class=\"k\">for</span> <span class=\"n\">keysize</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span> <span class=\"k\">to</span> <span class=\"mi\">8000</span> <span class=\"k\">do</span>\n    <span class=\"n\">Signature</span><span class=\"p\">[</span><span class=\"n\">keysize</span><span class=\"p\">]</span> <span class=\"o\">:=</span> <span class=\"mi\">0</span><span class=\"o\">;</span>\n  <span class=\"cm\">{$ENDIF}</span>\n\n  <span class=\"c1\">// 1. Load the RSA private Key from FKey</span>\n  <span class=\"n\">rkey</span> <span class=\"o\">:=</span> <span class=\"n\">key</span><span class=\"o\">.</span><span class=\"n\">LoadEC</span><span class=\"p\">(</span><span class=\"k\">true</span><span class=\"p\">)</span><span class=\"o\">;</span>\n  <span class=\"k\">try</span>\n    <span class=\"n\">pkey</span> <span class=\"o\">:=</span> <span class=\"n\">EVP_PKEY_new</span><span class=\"o\">;</span>\n    <span class=\"k\">try</span>\n      <span class=\"n\">check</span><span class=\"p\">(</span><span class=\"n\">EVP_PKEY_set1_EC_KEY</span><span class=\"p\">(</span><span class=\"n\">pkey</span><span class=\"o\">,</span> <span class=\"n\">rkey</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"s\">'openSSL EVP_PKEY_set1_RSA failed'</span><span class=\"p\">)</span><span class=\"o\">;</span>\n\n      <span class=\"c1\">// 2. do the signing</span>\n      <span class=\"n\">keysize</span> <span class=\"o\">:=</span> <span class=\"n\">EVP_PKEY_size</span><span class=\"p\">(</span><span class=\"n\">pkey</span><span class=\"p\">)</span><span class=\"o\">;</span>\n      <span class=\"nb\">SetLength</span><span class=\"p\">(</span><span class=\"bp\">result</span><span class=\"o\">,</span> <span class=\"n\">keysize</span><span class=\"p\">)</span><span class=\"o\">;</span>\n      <span class=\"n\">ctx</span> <span class=\"o\">:=</span> <span class=\"n\">EVP_MD_CTX_new</span><span class=\"o\">;</span>\n      <span class=\"k\">try</span>\n        <span class=\"n\">check</span><span class=\"p\">(</span><span class=\"n\">EVP_DigestSignInit</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"o\">,</span> <span class=\"o\">@</span><span class=\"n\">PkeyCtx</span><span class=\"o\">,</span> <span class=\"n\">EVP_sha256</span><span class=\"o\">,</span> <span class=\"k\">nil</span><span class=\"o\">,</span> <span class=\"n\">pKey</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"s\">'openSSL EVP_DigestInit_ex failed'</span><span class=\"p\">)</span><span class=\"o\">;</span>\n  <span class=\"cm\">{$IFNDEF ALT}</span>\n        <span class=\"n\">check</span><span class=\"p\">(</span><span class=\"n\">EVP_DigestUpdate</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"o\">,</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">l</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"s\">'openSSL EVP_DigestUpdate failed'</span><span class=\"p\">)</span><span class=\"o\">;</span>\n        <span class=\"n\">check</span><span class=\"p\">(</span><span class=\"n\">EVP_DigestSignFinal</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"o\">,</span> <span class=\"o\">@</span><span class=\"bp\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">,</span> <span class=\"o\">@</span><span class=\"n\">len</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"s\">'openSSL EVP_DigestSignFinal failed'</span><span class=\"p\">)</span><span class=\"o\">;</span>\n  <span class=\"cm\">{$ELSE}</span>\n        <span class=\"n\">check</span><span class=\"p\">(</span><span class=\"n\">EVP_DigestSign</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"o\">,</span> <span class=\"o\">@</span><span class=\"bp\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">,</span> <span class=\"o\">@</span><span class=\"n\">len</span><span class=\"o\">,</span> <span class=\"n\">p</span><span class=\"o\">,</span> <span class=\"n\">l</span><span class=\"p\">)</span> <span class=\"o\">=</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"s\">'openSSL EVP_DigestSign failed'</span><span class=\"p\">)</span><span class=\"o\">;</span>\n  <span class=\"cm\">{$ENDIF}</span>\n        <span class=\"nb\">SetLength</span><span class=\"p\">(</span><span class=\"bp\">result</span><span class=\"o\">,</span> <span class=\"n\">len</span><span class=\"p\">)</span><span class=\"o\">;</span>\n      <span class=\"k\">finally</span>\n        <span class=\"n\">EVP_MD_CTX_free</span><span class=\"p\">(</span><span class=\"n\">ctx</span><span class=\"p\">)</span><span class=\"o\">;</span>\n      <span class=\"k\">end</span><span class=\"o\">;</span>\n      <span class=\"bp\">result</span> <span class=\"o\">:=</span> <span class=\"n\">DERTobase</span><span class=\"p\">(</span><span class=\"bp\">result</span><span class=\"p\">)</span><span class=\"o\">;</span>\n    <span class=\"k\">finally</span>\n      <span class=\"n\">EVP_PKEY_free</span><span class=\"p\">(</span><span class=\"n\">pKey</span><span class=\"p\">)</span><span class=\"o\">;</span>\n    <span class=\"k\">end</span><span class=\"o\">;</span>\n  <span class=\"k\">finally</span>\n    <span class=\"n\">EC_KEY_free</span><span class=\"p\">(</span><span class=\"n\">rkey</span><span class=\"p\">)</span><span class=\"o\">;</span>\n  <span class=\"k\">end</span><span class=\"o\">;</span>\n<span class=\"k\">end</span><span class=\"o\">;</span>\n</code></pre></div>",
        "id": 262526218,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637708324
    }
]