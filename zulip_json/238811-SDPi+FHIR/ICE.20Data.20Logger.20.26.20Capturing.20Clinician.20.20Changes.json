[
    {
        "content": "<p>When implementing an ICE forensics DataLogger component, it would be good to capture not only changes to settings but how they came about:  Clinician input, automatically updated (e.g., per internal algorithm derivations, or even external control service invocations).  One approach would be to monitor a Metric object's derivation value (AbstractMetricDescriptor/@DerivationMethod) method (AUTO / MAN), but is that the best approach?  And does it allow differentiation between all three of the change sources mentioned above?</p>",
        "id": 199788254,
        "sender_full_name": "Todd Cooper",
        "timestamp": 1591294997
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"303041\">@Stefan Schlichting</span>  thoughts on how to best address this?</p>",
        "id": 199869636,
        "sender_full_name": "Todd Cooper",
        "timestamp": 1591360734
    },
    {
        "content": "<p>You can send an OperationInvokedReport if the device represents the operations that are locally invoked. Just set the accesslevel=Other and use the extension that we have defined for \"LocaleOnly\" and optionally disable the operations if they should not be invoked externally.<br>\nYou can use InvocationSource to identify the object/person/SDC participant that invoked the operation.</p>",
        "id": 199922369,
        "sender_full_name": "Stefan Schlichting",
        "timestamp": 1591384797
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"303041\">@Stefan Schlichting</span>  good point re. InvocationSource; <span class=\"user-mention\" data-user-id=\"307157\">@Scott Gearhart</span>  <span class=\"user-mention\" data-user-id=\"304542\">@Jan Rizzuto</span>  this could be useful for this component of the MDIRA/ICE ref implementation;</p>",
        "id": 200090048,
        "sender_full_name": "Todd Cooper",
        "timestamp": 1591619351
    }
]