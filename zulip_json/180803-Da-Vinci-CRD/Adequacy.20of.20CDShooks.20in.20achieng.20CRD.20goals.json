[
    {
        "content": "<p>Based on a long discussion in the burden reduction track today got me thinking about the purpose of CRD. If we roll back to 2018 when we started on this, the primary purpose of having  CRD is to solve the following problems from a provider point of view( I am purposefully not using specific terms to keep the discussion more at the problem level and not pondering into the existing specification and the solutions provided there.)</p>\n<ol>\n<li>Is prior authorization necessary for the treatment option that I am committing to? </li>\n<li>Even if prior authorization is not needed, is there any payer mandated documentation requirement that I need to comply with so that when there is a pre-payment or a post-payment review from the payer, I can use this documentation.</li>\n<li>If I am an ordering provider, how do I know what documentation may be needed by the payer which only I can answer even in the case when a rendering provider is making a prior auth request.</li>\n<li>How does the payer transmit the documentation requirements in such a way that the burden is reduced on the provider side.</li>\n<li>Different providers and payers have different ways of solving these problems currently and there is a need to come up with a single standard to maintain consistency.</li>\n</ol>\n<p>We came up with CDShooks as a means to achieve the above. While it solves the problem of reducing the provider burden by integrating the prior auth process in the provider's workflow, the current IG based on CDSHooks adds additional restrictions and defeats the purpose of interoperability across payers and providers. </p>\n<ol>\n<li>CDShooks is a EHR-specific thing and is currently not a part of any practice management system and not a part of the EHR certification requirements. Some of the specialty-specific EHRs also do not support this.</li>\n<li>The CDShooks mandates the use of the smart app link if there are prior auth requirements thereby preventing the possibility of the EHRs implementing their own methodology to collect documentation based on the payer specified document templates and rules.</li>\n<li>Payer or their designated entity is now mandated to supply a smart app to interpret their rules increasing the possibility of non-compliance when running DTR.</li>\n</ol>\n<p>So what is the way forward? I have the following ideas that we need to ponder upon.</p>\n<ol>\n<li>Abandon CDShooks and come up with a different strategy. But with so many implementations going on, this may be a weak suggestion.</li>\n<li>Modify the IG in such a way that we are not associating too much with CDShooks. We can still use the CDSHooks format for exchanging data so that we can integrate CRD into the EHR workflows. However, we modify the response format by mandating the use of either suggestions or system actions to pass on the payer-specific template and rule information and leave it to the caller to determine how they want to process the templates and rules.</li>\n</ol>\n<p>Since It is already on the agenda for the next versions of CRD and DTR specs to plan for the standardization of app context, I would recommend thinking beyond app context and smart app link to figure out the methodology to pass on payer-specific documentation requirements to down stream processes like DTR. <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <span class=\"user-mention\" data-user-id=\"198783\">@Larry Decelles</span> <span class=\"user-mention\" data-user-id=\"196359\">@Robert Dieterle</span></p>",
        "id": 253525399,
        "sender_full_name": "Sreekanth Puram",
        "timestamp": 1631764752
    },
    {
        "content": "<p>I don't understand the assertion that the current design defeats the purpose of interoperability.  </p>\n<p>CDShooks is in no way EHR-specific.  It's implementable by any system that has a user interface with workflow points that could be used for hook invocation and where CDS would be supported.  The fact that some EHRs don't support it isn't a reason not to use it as a foundational technology.  The reality, is that the EHRs that don't support CDS Hooks also don't support anything else we could piggyback off, so they're faced with needing to implement <em>something</em>.  If they implement CDS Hooks, at least it's not a one-off solution, but instead something they can use for lots of other purposes too.</p>\n<p>It's not true that CRD mandates the use of a SMART app if there are auth requirements.  Use of DTR is always optional.  However, it <em>is</em> true that CDSHooks doesn't yet offer a mechanism for a card to allow invocation of an internal EHR function.  The ability to even describe, reference and launch internal EHR functions is only now being defined as part of SMART-web-messaging.  As well, the desire by EHRs to be able to do that is a new requirement - it wasn't expressed during the original design of CRD.  We can potentially accommodate that using the CDS Hooks extension mechanism, or perhaps it is something that should be rolled into the base CDS Hooks specification.  In either case, it's not a fatal flaw in the architectural decision to use CDS Hooks.</p>\n<p>Each payer doesn't need to define their own SMART app.  In fact, that's not even desirable.  In theory, there only needs to be a single SMART app that could generically support the needs of all payers.  The standard isn't about having custom SMART apps, it's about providing a consistent way of launching the SMART app (if both payer &amp; provider support DTR), and providing a consistent way of passing the rules to a generic SMART app.</p>\n<p>Obviously we need to explore further with those EHRs that want to be able to manage the rules process internally about what the best way to extend CRD to enable that.  (When we embarked on this process, the objective was to minimize the amount of work EHRs would need to undertake, as most were already over capacity with other requests.)  However, there's no reason why we can't find a way to do that.</p>\n<p>It's <em>not</em> true that CDS</p>",
        "id": 253669218,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1631836889
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> It may not directly defeat the purpose of interoperability. However, the payers can make their DTR templates work only with their smart app. This may not be intentional but eventually may end up that way as they don't find a reason why it should work else where.  I am not talking about the EHRs which don't support  CDSHooks but am more talking about practice management systems and other applications which may not really follow any of the CDSHook work flows. The CRD server even though it is a CDSHooks endpoint, should support simple API request and response. The response that the current spec sends back is a link to the smart app and some cryptic data in the app context which can be read by the smart app only. Instead if the response is made in such a way that it can be processed by any downstream systems, it would serve the purpose of everyone. The EHR/Practice management system should take the responsibility of how they want to process the repose of the CRD instead of the payer dictating what to do.</p>\n<p>The idea of having a single app for all payers makes it anti competitive. It would be difficult to maintain this single app and less \"popular\" payers, EHRs and providers don't get their specific requirements taken care of,  I would prefer the payer send the information in the standardized format Questionnaire, CQL etc and leave it to the EHR/Provider to work in the way they want. CDSHooks should be a means to achieve what we are trying for, it should not be the limiting factor for what we can't do. </p>\n<p>It is okay for the payer to send a smart app in addition to providing details about the templates and rules but the smart app should not be the only way for payers to communicate this information.</p>",
        "id": 254057044,
        "sender_full_name": "Sreekanth Puram",
        "timestamp": 1632147553
    },
    {
        "content": "<p>The original interoperability objective was to easily connect provider and payer.  There was no expectation that templates would be shareable across SMART apps, as both would be payer sourced.  If a group of payers wanted to share a single app, they could.  There was also no intention (or expressed desire) to have the DTR functionality performed internally within the EHR.  In the next release of DTR, we've agreed to standardize the 'context' passed to the DTR smart app, such that the information shared by the CRD app will be the same regardless of the DTR app being launched.  However, the card will still indicate <em>which</em> DTR app to launch, as CDS Hooks does not have an ability to provide a list of possible apps, nor would the CDS Server have access to a list of candidate apps.  The ability to launch functionality within an EHR will require an enhancement of or an extension to the existing CDS Hooks platform to allow the CDS Service to<br>\na) be aware that the EHR has the necessary functionality to invoke<br>\nb) pass back a card that allows invocation of that functionality<br>\nWe'll need to work with the EHRs who want this capability to figure out how best to enable it.</p>",
        "id": 254059400,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1632148397
    },
    {
        "content": "<blockquote>\n<p>CDS Hooks does not have an ability to provide a list of possible apps, </p>\n</blockquote>\n<p>A service can return a set of cards to accomplish this today.</p>",
        "id": 254204826,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1632230171
    },
    {
        "content": "<p>As I said earlier, we should not be limited by the capability of CDSHooks. If we are okay with the providers opening different apps for prior authorization, I think the current model is ok. However, I don't see it much different from the portal world except for the prefilling of the data. Also, the EHR vendors like Cerner and Eclinicalworks etc have a very long process in approving a smart app that can work in their system. They don't allow the launch of a smart app based on a link provided as a response CDS Hook call. Instead, if we leave it to the app vendors to work out the logistics with the EHR vendors the payers can focus more on the creation of standardized CQLs and questionnaires. If the norm for DTR is that it is opened through a payer-specific app, the payer does not have any motivation to maintain standardized CQL.</p>",
        "id": 254228347,
        "sender_full_name": "Sreekanth Puram",
        "timestamp": 1632238795
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> , CRD needs to be able to tag a particular App in the CDS Hooks response as the DTR App (vs. other apps being not relevant in that sense). This is so the EHR can save this App onto the referral, and launch it multiple times. </p>\n<p>So the App is not a step in the interaction like CDS Hooks envisions, but really is DATA returned by the CRD Service that the EHR needs to record. See the second bullet point in this JIRA issue: <a href=\"https://jira.hl7.org/browse/FHIR-33961\">https://jira.hl7.org/browse/FHIR-33961</a></p>",
        "id": 254259298,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1632250620
    },
    {
        "content": "<p>Also <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> , I am curious about your thoughts on this thread as well: <a href=\"#narrow/stream/179159-cds-hooks/topic/Can.20AppContext.20of.20one.20App.20be.20used.20to.20launch.20a.20different.20App.3F\">https://chat.fhir.org/#narrow/stream/179159-cds-hooks/topic/Can.20AppContext.20of.20one.20App.20be.20used.20to.20launch.20a.20different.20App.3F</a></p>",
        "id": 254259519,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1632250718
    },
    {
        "content": "<p>The requirement to launch an app multiple times is <em>not</em> CRD-specific.  And - as already pointed out - EHRs require manual configuration of each supported app.  It makes much more sense for the determination that \"This is a CRD app and persistence would be a good thing\" to be made at this configuration time than every time a link to the app is provided.</p>",
        "id": 254290853,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1632265273
    },
    {
        "content": "<p>The CRD proposal cannot actually be reused by another use-case. In fact, if another use-case does the same thing, then both of them fall apart, since now we don't know if it's a CRD App or the other use-case app.</p>",
        "id": 254368571,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1632318070
    },
    {
        "content": "<p>Not to mention, even now one of my concerns is that if there is a CRD App Link and a  regular CDS Hooks app link in the same CDS Hook (even on different cards), the EHR cannot know without resorting to inspecting AppContext, which should actually be a black box to the EHR.</p>",
        "id": 254368911,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1632318191
    },
    {
        "content": "<p>Just define a <code>.extension.contextForCrdv1.2.2</code> structure?</p>",
        "id": 254369132,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1632318270
    },
    {
        "content": "<p>(Or, whatever strategy of being explicit with the modeling.)</p>",
        "id": 254369160,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1632318282
    },
    {
        "content": "<p>Almost everything in CRD really needs extensions. At that point, I ask this question: <a href=\"https://jira.hl7.org/browse/FHIR-33963\">https://jira.hl7.org/browse/FHIR-33963</a></p>",
        "id": 254369339,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1632318348
    },
    {
        "content": "<p>(I'm not up to speed on the CRD use case, so I don't have an opinion one way or the other on that -- I've just chimed in here on CDS Hooks design.)</p>",
        "id": 254369534,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1632318414
    },
    {
        "content": "<p>Can I request that the CDS Hooks group take a closer look at the CRD IG?</p>",
        "id": 254369887,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1632318529
    },
    {
        "content": "<p>The EHR <em>does not</em> need to know that an app is a CRD app.  It's just an app, like any other.  There is a <em>generic</em> requirement that when a user is presented with an app during their workflow, they might want to be able to launch that app later - or have someone else do so.  <em>IF</em> EHRs choose to support that and/or CDS Hooks is updated to support that, then CDS Hooks would take advantage of that capability.  But it's not required for CDS Hooks to work.</p>\n<p>It's absolutely not true that everything in CRD needs extensions.  CRD developed a number of extensions, but none are CRD-specific and some have already been incorporated into the base spec:</p>\n<ul>\n<li>added support for R4 resources</li>\n<li>added support for some request resources that weren't covered by some of the defined Hooks.  I believe these have now been added in the base hook definitions</li>\n<li>defined an optional configuration mechanism to give EHRs the ability to tune what kinds of advice they want from a service that can provide multiple kinds.  I'm not sure if anyone has implemented this.  If it turns out no one wants it in practice, we'll yank it</li>\n<li>added support for if-none-exist and rules for linkage between multiple created resources in cards.  The first avoids race conditions and the second plugs a hole in the CDS Hook specification.  Neither are specific to CRD and both have been proposed as enhancements/clarifications to the CDS Hook specification</li>\n</ul>\n<p>The core of how CRD works - clinician starts ordering something and a card comes back either telling them information (service covered, service nor covered, prior authorization required, prior authorization required if filled out of network, etc.), giving them an option of changing what they're ordering,  or giving them the option of launching a SMART app are <em>all</em> things that are standard CDS Hooks functionality.  There is zero requirement to indicate that a launched SMART app happens to be a CRD SMART app.  We have not proposed any such thing and are not in favor of that being the solution to \"some users might want to deal with a card later rather than immediately\".</p>",
        "id": 254398517,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1632329006
    },
    {
        "content": "<p>I know <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> went through CRD with a fine-tooth comb when it was first balloted and was generally quite happy with it.</p>",
        "id": 254398653,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1632329048
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>, it is reasonable to expect that the EHR may be able to retrieve the CDS Hooks card again either to the same user or to an administrator. However, with DTR, the card needs to be moved from the provider's workflow to a different non-admin staff person's workflow, not at provider behest, but by system knowing who to forward to - usually a pool. And the card needs to be kept along with the order that it is relevant to. These two are <strong>not</strong> generic CDS Hooks requirements. CDS Hooks (1) doesn't expect to go to a different user other than the user who saw it transferring explicitly and (2) CDS Hooks doesn't deal at the order level, but at the ordering session level.</p>",
        "id": 254444373,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1632347250
    },
    {
        "content": "<p>It may be true <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> tried to find all issues back then. However, back then we were not trying to implement this yet, and so our perspectives were not as informed as now?. These are issues we actually ran into now that we are trying to implement this.</p>",
        "id": 254444465,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1632347299
    },
    {
        "content": "<p>First, there will be some information that generally should be captured in DTR by the clinician.  Auto-routing the card to an admin person without giving the clinician the option of launching DTR defeats the purpose of CRD and DTR.  We <em>want</em> the clinician to be aware of the additional clinical information and actions that need to happen at the time they're ordering when the patient is in the room.  Auto-punting it to a staff person defeats this purpose.  </p>\n<p>If you want to know what apps are DTR apps, you can know that - Epic or any other EHR can capture metadata about any app they register, so if you want to implement special workflows for certain apps, you certainly can.  The card deferral mechanism we're currently proposing (if it's initiated by the CDS service instead of the EHR) would leverage Task - and it's certainly possible for the Task to be owned by a Group or a 'type' of performer rather than an individual.  That's also something that's potentially relevant for other types of delegation.  E.g. Delegating to whoever the next attending happens to be rather than a specific individual.</p>\n<p>It's true that CRD doesn't allow distinguishing which request a particular card is associated with.  The text of the card can convey that to a human being, but it's not designed or intended to support this being done by an automated process.  If there's a need to do this, then I guess we could look at putting an extension on the card.  Again, it's essential that the card be presented to the clinician ordering and that they have the opportunity to act on it, not have it auto-routed elsewhere.</p>",
        "id": 254469675,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1632363294
    }
]