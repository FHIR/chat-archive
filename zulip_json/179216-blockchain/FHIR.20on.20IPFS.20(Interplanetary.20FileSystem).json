[
    {
        "content": "<p>Anybody else researching FHIR over IPFS?  </p>",
        "id": 153889942,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1494873803
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191678\">@Abigail Watson</span>  IPFS is often used with Ethereum. Do you see FHIR over IPFS using Ethereum as a use case?</p>",
        "id": 153891115,
        "sender_full_name": "Sunanda Veeraganti",
        "timestamp": 1495631112
    },
    {
        "content": "<p>I see FHIR over IPFS using Hyperledger as a use case, sure.  And even FHIR over plain IPFS with no security.  While the Ethereum community is having a big rally right now, culturally I find them very immature and unready for the healthcare sector.  They're up-and-coming fintech players simply trying to displace existing fintech players.  They don't have a fundamental interest in the complexities of the healthcare market.  It will require a dedicated blockchain that is devoted 100% to healthcare usecases for it to succeed in the healthcare industry.  So, Hyperledger, DokChain, etc.</p>",
        "id": 153891116,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1495631400
    },
    {
        "content": "<p>Abigail, while I don't have as much insight into the Ethereum community as you, I agree with your overall assertion. Conversely, it goes both ways--i.e., I find it remarkable how little interest and insight many within the EHR community (members of this board of course excluded;-) have into blockchains, IAM, IRM, UMA, etc [as well as vice versa].  Anyway, FWIW at least within the FHIRBlocks Project, we don't see much need of IPFS. FHIR Resources, in our architecture at least, remain within the orthodox EHR (and/or transiently within FHIR certified App's).  The FHIRBlockChain is used merely as a permissioned repository of assertions, attestations, permissions, etc. `knid of like the out-of band Signalling System in a pubic telecom network and or, more specifically, a distributed DLS/DNS server.</p>",
        "id": 153891429,
        "sender_full_name": "Doug Bulleit",
        "timestamp": 1495903600
    },
    {
        "content": "<p>Fair that.  <br>\nAs for IPFS usecases, I'm not sure that IPFS lends itself particularly well for PII.  But everything else?  You bet.  Example:  the ProviderDirectory Argonaut sprint.  It includes the Patient, Organization, and Location resources.  Those are exactly the kinds of things that putting on a swarm filesystem like bit-torrent would be great for.   It gets autoreplicated to all the watchers, and no worries about things getting out of sync.  As long as you're subscribed to the correct ProviderDirectory, it will always be up to date with the latest contact info, the latest list of providers, etc.  It would also be great for synchronizing quality control measures, device configuration files, data dictionaries, careplan templates, financial resources, etc. etc.  It also has a much lower barrier to entry than blockchain; and is significantly easier to implement.</p>",
        "id": 153891430,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1495922968
    },
    {
        "content": "<p>Makes sense<br>\nBut why do these kinds of resources need to be in a distributed/replicated-state system in the first place?  I suspect there's a good reason (I just don't know what it is;-)</p>",
        "id": 153891431,
        "sender_full_name": "Doug Bulleit",
        "timestamp": 1495925941
    },
    {
        "content": "<p>Because they get out of sync!  :)</p>\n<p>Why would yellowpage phonebooks get distributed to millions of people each year?  So everybody would have a roughly synchronized copy of important contact info, business info, etc.   Same exact use case.  Only, with distributed/swarm system, the yellowpages are always auto-synchronized and up-to-date.  </p>\n<p>Even with digital technologies, people wind up with config files that are out of date. Changing networks, misconfigured systems,  lack of funding, lack of staff knowledge, and legal constraints can all conspire to leave an organization with billing codes or diagnostic codes that are years out of date.  So it's mostly a matter of making sure that people aren't using last year's billing codes, phone addresses, provider directories, etc.  </p>\n<p>It may not seem like a huge issue, but it's on the order of billions of dollars of waste and friction that occur because of these things being out of sync.  IPFS doesn't solve all healthcare problems; but it can solve that part of the problem.  </p>",
        "id": 153891439,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1495995519
    },
    {
        "content": "<p>Got it; though it's still not obvious to me why, in this case, a central registry (or just a community wiki, github, etc) wouldn't work.  All that said, IMHO there's still a natural use case for a permissioned blockchain at the root of self-sovereign identities and App's.  `more on that shortly...</p>",
        "id": 153891779,
        "sender_full_name": "Doug Bulleit",
        "timestamp": 1496229826
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191678\">@Abigail Watson</span> I think the most compelling use case for IPFS for myself is References no longer require an internal/external distinction and resolving references becomes much simpler and more robust, especially with the concept of FHIR (API) versions.</p>",
        "id": 153915013,
        "sender_full_name": "Adrian Lanzafame",
        "timestamp": 1508470524
    },
    {
        "content": "<p>Happy to say that we got a FHIR on IPFS network up and running.  We're only just now loading up hospitals from the Chicagoland area; but so far its working great.  We're tentatively announcing that Symptomatic is now providing a subscription service via IPFS for teams who are using Meteor on FHIR to get data dictionaries, datasets, and other configuration data for their apps and websites.  </p>\n<p>We're going to try to get any JSON data we can from <a href=\"https://data.cityofchicago.org/\" target=\"_blank\" title=\"https://data.cityofchicago.org/\">https://data.cityofchicago.org/</a> and Medicare/Medicaid, convert them to FHIR and then put them on IPFS.  The Meteor on FHIR server has a configuration file that points to an IPFS endpoint; which will let us manage and do synchronized upgrades across the entire mesh network.</p>",
        "id": 153929843,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1516505394
    },
    {
        "content": "<p>what does FHIR on IPFS mean?</p>",
        "id": 153929844,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516505589
    },
    {
        "content": "<p>It's sort of like FHIR on BitTorrent.  Swarm filesystem.  It uses JSON as it's native exchange and storage format; so we just used FHIR schemas, and et voila.  Works great.</p>",
        "id": 153929845,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1516505679
    },
    {
        "content": "<p>well, I have some feeling for what that is, but not complete. what services do you get? a file system gives you a heirarchical storage container system, with the ability to create, read, and write files or directories. is that what IPFS does? or is FHIR on IPFS different to FHIR-on-a-filesystem?</p>",
        "id": 153929846,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516505829
    },
    {
        "content": "<p>Basically, yes.  Since it's a swarm filesystem, it's not so hierarchical.  Flatter; most like an object store, with good support for metadata.   And, yes... similar to FHIR-on-a-filesystem, except that everything is accessed via REST endpoints.</p>",
        "id": 153929847,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1516505996
    },
    {
        "content": "<p>so you must have some patterns of use.... indexing...?</p>",
        "id": 153929848,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516506038
    },
    {
        "content": "<p>It has a pretty rich metadata which people can search.  Patterns of use are basically data-dictionary publications.  We'd like to see RxNorm, ICD-10, DSM, and any other sort of annually released national data dictionary eventually wind up on something like IPFS in FHIR format.  RxNorm available as a big file of Medication resources; ICD-10 as a giant file of Conditions; etc.   Synchronize your local app with the IPFS network to load up your data-dictionary; then select a record as a record and mutate it into an actual record.  Yup, yup, yup.  That's the ticket.</p>",
        "id": 153929849,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1516506350
    },
    {
        "content": "<p>Conditions are patient-specific.  We could look into a ConditionDefinition resource, but (unlike medications), that's not something I've commonly seen coming from knowledge-bases.</p>",
        "id": 153929954,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1516636772
    },
    {
        "content": "<p>Within the Meteor ecosystem, we have a more lax interpretation of R! fields.  We interpret R! fields as being required when served up on outbound REST interfaces to external systems, but not required for forms, database schemas, templates, and other internal usages.</p>",
        "id": 153929966,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1516639716
    },
    {
        "content": "<p>ConditionDefinition could work, but seems a bit of overkill.  The Condition works fine as-is for plenty of epidemiology, public-health, and chronic care management use-cases.  Why require that it be patient-specific?</p>",
        "id": 153929976,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1516640053
    },
    {
        "content": "<p>Because the systems that deal with definitions of conditions and the systems that deal with patient-specific conditions are different and even if a system supports both, it's not typically going to put both in the same place or have the same rules around access, etc.</p>",
        "id": 153929985,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1516641179
    },
    {
        "content": "<p>Condition does support the subject being a Group for epidemiologic/public health, etc.  But it still has a subject.  If you're talking about a definition of what a condition is, a lot of the data elements you'd capture would be different.</p>",
        "id": 153929986,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1516641270
    },
    {
        "content": "<p>Hmmm....  well, it sounds like Symptomatic is going to be a case-study of having them in the same place with same rules.  :)</p>\n<p>We've certainly thought about having an extension for Condition to handle the extra data elements.  But the way our data pipelining works, it makes sense to use a decorator pattern:  start with a small base resource (with extension fields; sans patient), which gets copied into a resource with patient (and extensions removed), and then extra fields decorated on as it passes through the system(s).</p>",
        "id": 153930123,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1516654177
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191678\">@Abigail Watson</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Just a heads up that I left Genie Solutions earlier this year and am now working for Protocol Labs the company behind IPFS as such I would love to hear any feedback or ideas about how to take IPFS forward in a way that caters for the FHIR use. Grahame not sure if you remember but Hacking Health last year in Brisbane, I pitched a distributed data layer for the healthcare industry, I was basing that project on the technology provided by IPFS and a few associated projects.</p>",
        "id": 153953312,
        "sender_full_name": "Adrian Lanzafame",
        "timestamp": 1524190177
    },
    {
        "content": "<p>Congrats on the new job, Adrian!</p>\n<p>We have a half dozen developers at our weekly Chicago hacknight/connectathon, who have all gotten Meteor on FHIR up and running, and are now settin up an IPFS swarm. It makes sense to exchange configuration info, so we'll probably start by loading up Chicago area hospitals and medical homes on IPFS as a Bundle of Organizations.    </p>\n<p>Based on my prototypes, the big questions I have right now about using IPFS have to do with endpoint discovery and record expiration.    We load up the IPFS endpoint via a configuration file that's ran at application startup.    Which works well, but requires us emailing around the file /record/object pointers.  My hunch s that IPFS needs something akin to a /metadata route.</p>\n<p>Do you know if IPFS records have expiry options?  Or pointers to other files?  The issue is when record A1 gets outdated, and record A2 becomes authoritative.  A /metadata route on an account basis tracking the pointers to each file is one way to solve the problem.  Or having the noption of a folder (I.e. tag), and looking for the most recently created record in that folder.</p>\n<p>Not an IPFS expert, and only did the one dive, so this functionality may already exist.  $0.02</p>",
        "id": 153954098,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1524604084
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 153954224,
        "sender_full_name": "Adrian Lanzafame",
        "timestamp": 1524615733
    },
    {
        "content": "<p>Thanks :D</p>\n<blockquote>\n<p>Based on my prototypes, the big questions I have right now about using IPFS have to do with endpoint discovery and record expiration. </p>\n</blockquote>\n<p>So, if I understand correctly, what you are looking for is IPNS for endpoint discovery and a new experimental feature IPNS pubsub, which would allow you to receive updates of new records that have been published to IPFS. IPNS records can have expiry options. For the moment, using something like dns to point to the new authoritative record (<a href=\"https://gkbrk.com/2017/10/putting-my-blog-on-ipfs/\" target=\"_blank\" title=\"https://gkbrk.com/2017/10/putting-my-blog-on-ipfs/\">https://gkbrk.com/2017/10/putting-my-blog-on-ipfs/</a>) is the best option but once the IPNS pubsub system becomes more stable it will be far better.  Regarding the dns option, there is this tool to make it simpler: <a href=\"https://github.com/ipfs/dnslink-deploy\" target=\"_blank\" title=\"https://github.com/ipfs/dnslink-deploy\">https://github.com/ipfs/dnslink-deploy</a>. </p>\n<p>Don't worry, I am also not an IPFS expert but I am hope that helps. Also feel free to drop into the #ipfs irc channel on freenode or <a href=\"https://discuss.ipfs.io/\" target=\"_blank\" title=\"https://discuss.ipfs.io/\">https://discuss.ipfs.io/</a>.</p>",
        "id": 153954225,
        "sender_full_name": "Adrian Lanzafame",
        "timestamp": 1524618606
    },
    {
        "content": "<p>An example that I just whipped together is at ipfs.skapa.xyz. It is using a dns record to point to /ipfs/QmPWrBwCLW7X6CLN8hS4mfSuYuMoQtmyXtDFpCo9wHE3wM, which if you go to <a href=\"http://ipfs.io/ipfs/QmPWrBwCLW7X6CLN8hS4mfSuYuMoQtmyXtDFpCo9wHE3wM\" target=\"_blank\" title=\"http://ipfs.io/ipfs/QmPWrBwCLW7X6CLN8hS4mfSuYuMoQtmyXtDFpCo9wHE3wM\">ipfs.io/ipfs/QmPWrBwCLW7X6CLN8hS4mfSuYuMoQtmyXtDFpCo9wHE3wM</a> you will get the same page. But if I want to update the authoritative page, i.e. ipfs.skapa.xyz, I would publish the new page to IPFS and put the returned hash in the dns record.</p>",
        "id": 153954228,
        "sender_full_name": "Adrian Lanzafame",
        "timestamp": 1524619252
    },
    {
        "content": "<p>Please forgive my inexperience. What does IPFS give you that blockchain doesn't? Impermanence? Capacity?<br>\nIn my elementary thinking on the matter, if you're passing (presumably encrypted) PHI over IPFS, you have to assume that encryption will one day be broken. And thus any data that have been publicly exposed using that encryption is now publicly known, or at least exposed.<br>\nAm I thinking about that correctly?</p>",
        "id": 153989583,
        "sender_full_name": "Cory Martin",
        "timestamp": 1534786924
    },
    {
        "content": "<blockquote>\n<p>Please forgive my inexperience. What does IPFS give you that blockchain doesn't? Impermanence? Capacity?<br>\nIn my elementary thinking on the matter, if you're passing (presumably encrypted) PHI over IPFS, you have to assume that encryption will one day be broken. And thus any data that have been publicly exposed using that encryption is now publicly known, or at least exposed.<br>\nAm I thinking about that correctly?</p>\n</blockquote>\n<p>FHIR encompasses many data types that aren't strictly PHI, or which are only PHI in certain contexts.  A Medication might be part of a Patient's CarePlan, but a Medication might also be simply a part of the Pharmacy's inventory.   Knowing that a Patient goes to a particular clinic will make that Organization PHI in context, but that Organization listed in a Bundle of Health Service Areas wouldn't be PHI.  </p>\n<p>So, we see IPFS as having a role in synchronizing non-PHI datasets and data dictionaries.  Think in terms of updating CPT and ICD-X annual supplements.  What is the authoritative list of Hospitals in the United States?  There were 5174 hospitals last year.  Is there the same number, or did any of them close; and were any new ones built?  What list of Medications does the AMA recommend belong in a crash cart?  And so on and so on.  </p>\n<p>tl;dr - Without smart contracts and all the other advanced functionalities, IPFS's primary use case is in configuration management.  Which... is a totally huge problem unto itself, that has all sorts of downstream ramifications.</p>",
        "id": 153989725,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1534820039
    },
    {
        "content": "<p>Thanks for the explanation, <span class=\"user-mention\" data-user-id=\"191678\">@Abigail Watson</span></p>",
        "id": 153989820,
        "sender_full_name": "Cory Martin",
        "timestamp": 1534867239
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"196640\">@Cory Martin</span> This article goes through the aspects of IPFS that make it different to a blockchain and how they are useful for healthcare: <a href=\"https://medium.com/@PeterBNichol/an-ipfs-addressable-storage-model-for-healthcare-with-blockchain-740fabc1a062\" target=\"_blank\" title=\"https://medium.com/@PeterBNichol/an-ipfs-addressable-storage-model-for-healthcare-with-blockchain-740fabc1a062\">https://medium.com/@PeterBNichol/an-ipfs-addressable-storage-model-for-healthcare-with-blockchain-740fabc1a062</a></p>",
        "id": 153997504,
        "sender_full_name": "Adrian Lanzafame",
        "timestamp": 1537240760
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"193471\">@Adrian Lanzafame</span> ! I will check it out</p>",
        "id": 153997598,
        "sender_full_name": "Cory Martin",
        "timestamp": 1537277661
    },
    {
        "content": "<p>On  <a href=\"https://medium.com/@PeterBNichol/an-ipfs-addressable-storage-model-for-healthcare-with-blockchain-740fabc1a062\" target=\"_blank\" title=\"https://medium.com/@PeterBNichol/an-ipfs-addressable-storage-model-for-healthcare-with-blockchain-740fabc1a062\">https://medium.com/@PeterBNichol/an-ipfs-addressable-storage-model-for-healthcare-with-blockchain-740fabc1a062</a></p>\n<blockquote>\n<p>Versioning of your medical records</p>\n</blockquote>\n<p>Note: while the protocol uses merkle DAG, in which versioning can be built on top of, it doesn't have a versioning in itself yet. There is another content-addressed p2p system, Dat, which also has versioning.</p>\n<p>The 2 protocols might converge via IPLD though.</p>",
        "id": 154023863,
        "sender_full_name": "Rein Zustand",
        "timestamp": 1544293688
    },
    {
        "content": "<p>that all looked like word salad to me</p>",
        "id": 154023872,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1544311291
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194277\">@Rein Zustand</span> technically IPFS is versioned but doesn't have versioning. For example, you make a change to a file it will get a new hash which can be thought of as a new version, but there is automatic linking of that new version to previous versions. Though as you say it can be built on top.</p>",
        "id": 154025918,
        "sender_full_name": "Adrian Lanzafame",
        "timestamp": 1545052475
    },
    {
        "content": "<p>Also, IPFS already uses IPLD and bringing Dat on to IPFS is possible already, I doubt they will converge.</p>",
        "id": 154025920,
        "sender_full_name": "Adrian Lanzafame",
        "timestamp": 1545052749
    },
    {
        "content": "<p>An interesting paper on the use of Ethereum and IPFS to host EHRs: <a href=\"https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8717579\" target=\"_blank\" title=\"https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8717579\">https://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=8717579</a></p>",
        "id": 167453323,
        "sender_full_name": "Adrian Lanzafame",
        "timestamp": 1559798759
    },
    {
        "content": "<p>hah from the Data61 blockhain everywhere guys</p>",
        "id": 167453587,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559799193
    },
    {
        "content": "<p>data61? the seL4 guys?</p>",
        "id": 167990594,
        "sender_full_name": "Dan Connolly",
        "timestamp": 1560375317
    },
    {
        "content": "<p>color me interested: \"Traditional access control approaches [14]–[16] for EHRs<br>\nsharing assume that cloud servers are fully trusted by data<br>\nowners and enable the servers to perform all access control and authentication rights on data usage.  ... To improve security of EHRs sharing,<br>\nwe develop a trustworthy access control mechanism<br>\nusing smart contracts.\"</p>",
        "id": 167990839,
        "sender_full_name": "Dan Connolly",
        "timestamp": 1560375521
    },
    {
        "content": "<p>Eh, I find IPFS far more interesting than Ethereum.</p>\n<p>Was talking with the AMA regarding the Integrated Health Model Initiative (IHMI) regarding remote blood pressure monitoring, and they're publishing a Validated Device List (VDL) of 501k validated blood pressure devices.  I suggested that they make the VDL available via FHIR, and they expressed interest.  </p>\n<p>What I'd be interested in doing is publishing the VDL on IPFS.  Then, anybody who subscribes to the IPFS channel gets the latest copy to configure their application with.</p>",
        "id": 175777225,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1568599681
    },
    {
        "content": "<p>how would they be represented? just plain Device? Or is that data more complicated than that ?</p>",
        "id": 175796610,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568625979
    },
    {
        "content": "<p>and you should talk to the devices work group about this</p>",
        "id": 175797972,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568627334
    },
    {
        "content": "<p>Yeah, I think that just putting the Devices in a Bundle (or List) would suffice.  There are no required fields for attaching an Organization, Patient, or any patient/context specific info.  Devices can sort of be contextless.  Might want to round it out with a Provenance record and Organization to represent the AMA though.</p>",
        "id": 175836454,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1568657017
    },
    {
        "content": "<p>Hey guys, any updates on this project? We are doing some similar stuff for a project from the NIH, but using the Factom blockchain to track the sharing/modification of FHIR resources for population health data exchange. Originally we were thinking data housed within health systems own servers/cloud but I think the idea of using IPFS or something like that for file storage could be pretty powerful</p>",
        "id": 200420371,
        "sender_full_name": "Connor Smith",
        "timestamp": 1591798006
    },
    {
        "content": "<p>I've been piecing together the user interface for an administrative node and client nodes for a web-torrent like system.  We have UI for CRUD operations for Endpoint, Bundle, and ValueSet, as well as data import/export UI, as well as a chord diagram for all the participating nodes.  That's almost enough to put together something similar to WebTorrent.  </p>\n<p>Blocker is that we need 3 or more interested parties to run independent nodes to launch the IPFS network.  </p>\n<p>If anybody else feels comfortable with the protocol and wants to experiment with FHIR on IPFS, let me know and we can do an impromptu connectathon.  Or better yet, petition for an official FHIR on IPFS connectathon track.</p>",
        "id": 200439908,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1591806100
    },
    {
        "content": "<p>We haven't done anything with IPFS yet, but we have a lot of experience running nodes for different blockchain networks. We have commercially supported 12 different networks over the last year in addition to building out this product.  Would love to set up a call/chat to learn more about the project and see if there are ways we can help out or integrate the work we have done with the NIH</p>",
        "id": 200449607,
        "sender_full_name": "Connor Smith",
        "timestamp": 1591810471
    },
    {
        "content": "<p>Oh, you're in South Bend.  I'm in Chicago and Evansville, IN.  Cool.   Yeah, let's do a call.</p>",
        "id": 200450440,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1591810839
    },
    {
        "content": "<p>+add me for a FHIR on IPFS experiment!</p>",
        "id": 201086961,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1592350647
    },
    {
        "content": "<p>I'd like to follow along too. (Would also encourage folks to have a look at <a href=\"https://github.com/decentralized-identity/secure-data-store/\">https://github.com/decentralized-identity/secure-data-store/</a> -- an emerging standards effort between W3C and the decentralized identity foundation. Not a blockchain thing, but neither is ipfs... and in any case, will appeal for many of the same reasons; basically the standards path for the ideas in Timbl's Solid.)</p>",
        "id": 201091379,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1592355097
    },
    {
        "content": "<p>Just a quick update:  it appears we're moving forward and beginning to provision servers for a public IPFS network.  Big thank you and shout out to Conner and team.</p>\n<p>I have some ValueSets and other data dictionaries that I'm going to seed it with.... Covid19 ValueSets with LOINC and SNOMED codes, maybe some SANER reports, Gravity questionnaires, etc.  All non-PHI stuff.  </p>\n<p>Could be available as early as next week, as it seems this may be shaping up into a sort of impromptu 4th of July hackathon/connectathon.</p>",
        "id": 202732386,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1593716991
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>  - Thanks for the link share, and yes, +1 for Solid as being worth its own thread and discussion.</p>",
        "id": 202736100,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1593718873
    },
    {
        "content": "<p>I would like to participate with a node, where can I find information on how to set it up?</p>",
        "id": 202991720,
        "sender_full_name": "Kenneth Myhra",
        "timestamp": 1594043253
    },
    {
        "content": "<p>We'll be publishing that config info as soon as we can.  We'll be starting with a public network, that much I know.  So, once we generate the URL and a few public keys, that should be enough to get people started.  Hopefully will have something later this week or next week, and will post here.</p>",
        "id": 203012153,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1594053420
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"308117\">@Connor Smith</span>  - Any updates on the IPFS servers?</p>",
        "id": 205404002,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1596051742
    },
    {
        "content": "<p>On this general subject: has anyone hit issues creating FHIR Bundles where resources have ipfs:// fullUrls (and with inter-resource references between entries in the same bundle)? There's some open question about whether FHIR allows this (<a href=\"http://jira.hl7.org/browse/FHIR-31422\">FHIR-31422</a>).</p>",
        "id": 231894035,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1616716300
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191678\">@Abigail Watson</span> ?</p>",
        "id": 231952773,
        "sender_full_name": "John Moehrke",
        "timestamp": 1616760264
    },
    {
        "content": "<p>Not during our initial prototype.  IPFS allows storing raw JSON files.  So from an App perspective, it behaves like most any other readable data source, and the driver spits out a JSON payload just like a REST interface or reading it from normal file system.  We were never working at scale enough to test name collisions and such.</p>\n<p>FYI, once I submit this Vaccine Wallet to the App Store, I'll probably be turning my attention to both IPFS and BigChain again (Hyperledger also, but meh).  I feel like we should be running an IPFS or BigChain track at the connectathons.</p>\n<p>Re: <a href=\"http://jira.hl7.org/browse/FHIR-31422\">FHIR-31422</a> - My initial reaction is very much in favor of making the proposed clarification.</p>",
        "id": 231970042,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1616767595
    },
    {
        "content": "<p>This is worth a read when thinking about access control on IPFS: <a href=\"https://blog.textile.io/the-5-steps-to-end-to-end-encrypted-photo-storage-and-sharing/\">https://blog.textile.io/the-5-steps-to-end-to-end-encrypted-photo-storage-and-sharing/</a> and <a href=\"https://blog.textile.io/introducing-textiles-threads-protocol/\">https://blog.textile.io/introducing-textiles-threads-protocol/</a></p>",
        "id": 233130864,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1617590919
    },
    {
        "content": "<p>Reminder that today 3pET is the FHIR Infrastructure call where we'll bring up <a href=\"http://jira.hl7.org/browse/FHIR-31422\">FHIR-31422</a>. Telecon: <a href=\"https://hl7-org.zoom.us/j/8583747934?pwd=VnZiWFZsNm1TSk5QWmZlbVJyQVZGdz09\">https://hl7-org.zoom.us/j/8583747934?pwd=VnZiWFZsNm1TSk5QWmZlbVJyQVZGdz09</a></p>",
        "id": 233175504,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1617631432
    },
    {
        "content": "<p>Curious where this thread is at today. Do folks have any public prototypes? </p>\n<p>I have experience writing APIs against the IPFS daemon, and deploying orchestrated clusters + pinsets (<a href=\"https://cluster.ipfs.io/\">https://cluster.ipfs.io/</a>), which IMO is an ideal use case for public Bundles. I could obtain sponsored infrastructure for further prototype development. </p>\n<p>Does <a href=\"http://jira.hl7.org/browse/FHIR-31422\">FHIR-31422</a> need a different resolution beyond the last comment in the thread, which argues the spec already would permit use of IPFS in Bundle.fullUrls? Would some example implementations help progress that?</p>",
        "id": 246995053,
        "sender_full_name": "Joshua Kelly",
        "timestamp": 1627055437
    },
    {
        "content": "<p>The comments on <a href=\"http://jira.hl7.org/browse/FHIR-31422\">FHIR-31422</a> are just comments; the <em>resolution</em> is</p>\n<ul>\n<li>Bundle.entry.fullUrl: Add \"e.g.,\" in the short definition to clarify that these are examples</li>\n<li>Bundle.entry.fullUrl: Update the full definition to clarify that Bundle.entry.fullUrl can be an arbitrary URI (is not limited to urn:uuid, urn:oid, http, and https, as suggested by the short definition) – per <a href=\"https://jira.hl7.org/browse/FHIR-29271\">https://jira.hl7.org/browse/FHIR-29271</a></li>\n<li>Reference.value could use any URI scheme (in addition to using relative values like \"Patient/123\")</li>\n</ul>",
        "id": 246995253,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1627055529
    },
    {
        "content": "<p>This should be sufficient to support IPFS URLs, etc.</p>",
        "id": 246995286,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1627055550
    }
]