[
    {
        "content": "<p>For those of you who use or have used the CDS Authoring Tool, what additional CQL logic features would you like to see supported?</p>\n<p>For example, something as simple as support for <code>First</code> and <code>Last</code> expressions on lists... or better support for timing relationships... or a more complex query builder... etc.</p>",
        "id": 201870932,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1593016189
    },
    {
        "content": "<p>I am working on a CDS artifact and came across a requirement where if the patient does not meet the inclusion criteria, then check if the patient is willing to take a specific medication and if the answer is YES, then provide a recommendation.  When looking at what being provided in the CDS Authoring Tool, I cannot really find a suited element for this check.  Can you please let me know which element is going to be used for this criteria.<br>\nYour help is appreciated.</p>\n<p>Best,<br>\nTien Thai</p>",
        "id": 207165908,
        "sender_full_name": "Tien Thai",
        "timestamp": 1597682072
    },
    {
        "content": "<p>Hi Tien, typically this sort of interaction is handled with a Questionnaire to describe the question, a QuestionnaireResponse for the response from the patient with the answer, and an Observation generated from that QuestionnaireResponse. The CDS Logic can then be written to look for the Observation, recognizing that using a Questionnaire/QuestionnaireResponse is just one way that that Observation might be gathered.</p>",
        "id": 207348726,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1597788970
    },
    {
        "content": "<p>Hi Bryn,<br>\nThank you very much for your quick response. </p>\n<p>TT</p>",
        "id": 207537249,
        "sender_full_name": "Tien Thai",
        "timestamp": 1597938011
    },
    {
        "content": "<p>To further clarify on Bryn's response, it's not possible to create a workflow to present a questionnaire in the CDS Authoring Tool.  You'll need additional tools (and/or manual authoring) to represent something like that.  That said, as Bryn suggested, you<em>can</em> use the CDS Authoring Tool to add inclusion logic that checks for the Observation indicating the patient consented to the medication.</p>",
        "id": 207553144,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1597945945
    },
    {
        "content": "<p>Hi Chris,<br>\nThank you very much for your comment.<br>\nAre you saying that after  downloading the exported zip file, I can unzip and edit the CQL file?   Can you please elaborate a little bit more about \"manual authoring\"?  Many thanks for your help.</p>\n<p>TT</p>",
        "id": 207554855,
        "sender_full_name": "Tien Thai",
        "timestamp": 1597946821
    },
    {
        "content": "<p>If you want a standards based way to indicate that a Questionnaire should be provided, I think you need more than just CQL (which represents only logic).  You'll probably need to author some CPG-on-FHIR resources to formally describe that process and workflow.  The CDS Authoring Tool does not currently support authoring things like ActivityDefinitions and PlanDefinitions.</p>\n<p>That said, if you do run into issues where you need to add CQL logic that the CDS Authoring Tool does not support, then yes --you can download the exported CQL and modify it by hand.</p>",
        "id": 207556972,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1597948016
    },
    {
        "content": "<p>Thanks Chris.<br>\nInstead of manually adding the CQL logic directly to the exported CQL file, can create a separate CQL file which contains the additional logic and then drag it into the CDS Authoring Tool as External CQL? Many thanks.</p>\n<p>Best,<br>\nTien Thai</p>",
        "id": 207560902,
        "sender_full_name": "Tien Thai",
        "timestamp": 1597950030
    },
    {
        "content": "<p>Yes, you can do that as well, as long as the extra logic can be defined using a normal <code>define</code> statement (<em>not</em> a <code>function</code>).  The AT doesn't yet support calling <em>functions</em> from external CQL.</p>",
        "id": 207561183,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1597950177
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span>  Have you tried using Atom with the language-cql plugin?    <a href=\"https://atom.io/packages/language-cql\">https://atom.io/packages/language-cql</a><br>\n[I just installed it today, just tried it but not sure how to feed input data to it.   The plugin adds a CQL -&gt; Execute menu to directly execute the CQL code.]</p>",
        "id": 207589920,
        "sender_full_name": "John Silva",
        "timestamp": 1597969539
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"298707\">@John Silva</span> , yeah, there's not great documentation on that yet, but there are examples, here's one: <a href=\"https://github.com/cqframework/opioid-mme-r4\">https://github.com/cqframework/opioid-mme-r4</a></p>",
        "id": 207593735,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1597974234
    },
    {
        "content": "<p>See the \"tests\" folder, basically, the execution expects a folder under tests named the same as the library, and each folder in that is the id of a Patient representing a test case.</p>",
        "id": 207593777,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1597974271
    },
    {
        "content": "<p>If you open the Atom editor on the root of the ig, then when you're editing the CQL and you click execute, it will use the data from the tests folder.</p>",
        "id": 207593802,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1597974332
    },
    {
        "content": "<p>It will also load vocabulary from the vocabulary folder.</p>",
        "id": 207593808,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1597974342
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"298707\">@John Silva</span> -- Yes, I've tried it (with varying success).  As you can see, <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> is the expert on that capability.  <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> -- I think most of my issues have been that I don't have my CQL files named (or located?) exactly the way the plugin wants them.  Usually it fails for me just trying to convert the CQL to ELM.  Is the required file naming and placement convention documented anywhere?  If not, you might want to consider it.</p>",
        "id": 207624475,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1598010013
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span>  - OK, when I run 'npx sushi -o build' (sushi 0.12.7) I get the following directory structure:</p>\n<p><code>\nbuild\nbuild/input\nbuild/input/resources\nbuild/input/extensions\nbuild/input/examples\nbuild/input/profiles\nbuild/input/vocabulary\n</code></p>\n<p>But this isn't the same directory from where the CQL and FSH files are located; I have them in a parallel directory <code>.fsh</code></p>\n<p>I just noticed that Atom (and the plugin) automatically created a <code>./input/tests/results' folder</code> I suppose because of when I tried to run 'CQL -&gt; Execute' in Atom.    I wonder if I have this directory structure with the CQL and FSH files in these directories if it will work (of course once I add ./tests/&lt;patientId&gt; subdirs</p>\n<p><code>\nbuild\nbuild/input\nbuild/input/resources\nbuild/input/extensions\nbuild/input/examples\nbuild/input/profiles\nbuild/input/vocabulary\nbuild/cql\nbuild/elm</code></p>",
        "id": 207635775,
        "sender_full_name": "John Silva",
        "timestamp": 1598017678
    },
    {
        "content": "<p>Yes <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span>  -- I'm trying to setup the directory structure and I'm making incremental progress.   First it was looking for a directory under .../tests with the name of the Library so I created one, but I wasn't sure to use the id value of the library of the name of the file, e.g. <br>\n     \"id\": \"MyLibrary\".  and filename =. \"Library-MyLibrary.json\". (because that's what SUSHI generates from my .fsh file).    It also seemed to want a ../input/vocabulary/valueset folder so I created one and it stopped complaining about t but I'm not sure what's supposed to be in there, if anything.   The .../input/vocabulary folder already has the SUSHI generated vocab resources,  e.g. ConceptMap-<em>.json and ValueSet-</em>.json in them?   I guess I'll keep trying things to see if I can get this to work.</p>\n<p>UPDATE: found a (maybe not only) problem.    In the *.cql file I had the wrong name for the library entry, e.g.</p>\n<p>library MyFooLibrary version '0.0.1'.    </p>\n<p>but my fsh file (and generated library) were name (and id)</p>\n<p>MyLibrary</p>\n<p>Once I fixed the library entry in the .cql file the CQL-&gt;Execute ran and showed the results.    Now I just have to figure out the CQL logic.   (time for a separate question -- I'm trying to figure out how to code for patient greater than a certain age. - ah, use AgeInYears() -- quite straight-forward.    Just need to get it to read the patient.json file for the test)</p>",
        "id": 207638456,
        "sender_full_name": "John Silva",
        "timestamp": 1598019113
    },
    {
        "content": "<p>Got a lot further along from yesterday.   Still having problems with running the tests.   The CQL -&gt; Execute CQL is running the tests but its not finding my test patient.   Here's the simple CQL:</p>\n<p>`<br>\nlibrary MyTest version '0.0.1'<br>\nusing FHIR version '4.0.1'<br>\ninclude FHIRHelpers version '4.0.1' called FHIRHelpers<br>\ncontext Patient<br>\n// Region: Initial Population</p>\n<p>define \"Is Older than 50\":<br>\n   AgeInYears() &gt; 50<br>\n`</p>\n<p>And when the tests run, here's what it shows:</p>\n<p><code>\nRunning tests.\nData path: /Users/.../input/tests/MyTest\nTerminology path: /Users/.../input/vocabulary/valueset\nTest h16754\nFri Aug 21 2020 15:10:23 GMT-0400 (Eastern Daylight Time)\nPatient=null\nIs Older than 50=null\nelapsed: 3.494 seconds\n</code></p>",
        "id": 207673008,
        "sender_full_name": "John Silva",
        "timestamp": 1598037247
    },
    {
        "content": "<p>And here's how I have the directory structure setup (I tried to mimic what's in the opiod-mme example)</p>\n<p><code>\ninput/tests/MyTest\ninput/tests/MyTest/h16754\ninput/tests/MyTest/h16754/Patient\ninput/tests/MyTest/h16754/Patient/patient-h16754.json\n</code></p>",
        "id": 207673450,
        "sender_full_name": "John Silva",
        "timestamp": 1598037486
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"298707\">@John Silva</span> , is this somewhere I can reproduce it?</p>",
        "id": 207677563,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1598039810
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> , yes, we definitely need better documentation on this, but in general, the cql is expected to be in \"input/cql\" relative to the IG root.</p>",
        "id": 207677616,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1598039843
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> -- so you can only execute CQL that is part of an IG?  I can't have a CQL-only project?</p>",
        "id": 207678086,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1598040095
    },
    {
        "content": "<p>No, you can, we just chose a directory structure layout that it expects that is consistent with the way the IGs are laid out so that you _can_ use it to execute CQL in an IG.</p>",
        "id": 207678562,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1598040370
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> I'm working with John on this.  I'm not sure that he's checked this in, but I can try to check.</p>",
        "id": 207678710,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1598040472
    },
    {
        "content": "<p>input/cql<br>\ninput/tests<br>\ninput/tests/&lt;cql-library-name&gt;<br>\ninput/tests/&lt;cql-library-name&gt;/&lt;patient-id&gt;<br>\ninput/tests/&lt;cql-library-name&gt;/&lt;patient-id&gt;/&lt;resource-type-name&gt;/&lt;resource files&gt;<br>\ninput/vocabulary/codesystem<br>\ninput/vocabulary/valueset</p>",
        "id": 207678813,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1598040506
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span>  - I've created a minimal CQL (with NO valueset and only 1 define) but it still gives same error -- it doesn't find the patient.</p>\n<p>Ah, I found the problem; it goes back to a question (we) asked here before.  Does/will FSH support a date relative mechanism.   I had :</p>\n<p><code> \"birthDate\": \"referenceDate - 20206 days\",</code></p>\n<p>(we have a pre-processor that converts that to an ISO date --- I forgot it was in there.   Once I put in a real data the CQL test ran!! :-) )</p>",
        "id": 207680394,
        "sender_full_name": "John Silva",
        "timestamp": 1598041412
    },
    {
        "content": "<p>Hooray! Did the error get displayed in the log? (We try to pipe all error output to the console in Atom to help figure things like that out)</p>",
        "id": 207680531,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1598041490
    },
    {
        "content": "<p>It doesn't show up when I use the CQL -&gt; Execute CQL (verbose) option, at least not in the .txt window that shows up.   Is there another location where there's a 'full log'?</p>",
        "id": 207680801,
        "sender_full_name": "John Silva",
        "timestamp": 1598041647
    },
    {
        "content": "<p>No, the verbose option is the full log, and if it was a parsing error, I'm surprised that didn't show up.</p>",
        "id": 207680952,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1598041737
    },
    {
        "content": "<p>For a possible answer to the \"date relative\" question, we use a cqf-expression extension to specify dynamic values. We have logic that runs that in the CQF Ruler, and are refactoring that so that we can use it in the Atom plugin as well.</p>",
        "id": 207681101,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1598041815
    },
    {
        "content": "<p>OK, thanks!   I'm about to finish for today.  At least now I know what I need to do. <br>\nMaybe you could try creating your own test with a 'bad resource' file and see why or if the log shows it or not.</p>",
        "id": 207681368,
        "sender_full_name": "John Silva",
        "timestamp": 1598041985
    },
    {
        "content": "<p>Yep, for sure, should be easy to reproduce.</p>",
        "id": 207681453,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1598042041
    },
    {
        "content": "<p>And BTW, this prompted me to update the documentation on the Atom Plugin Readme:</p>",
        "id": 207681515,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1598042057
    },
    {
        "content": "<p><a href=\"https://github.com/cqframework/atom_cql_support/blob/master/README.md#using-the-cql-support-in-atom\">https://github.com/cqframework/atom_cql_support/blob/master/README.md#using-the-cql-support-in-atom</a></p>",
        "id": 207681517,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1598042057
    },
    {
        "content": "<p>Thanks, Bryn.  Aren't there also assumptions about how the CQL files are named?  IIRC, the file name needs to be of a certain format for the engine (and/or translator) to find it (particularly for included CQL libraries).  Is that still the case?</p>",
        "id": 207682555,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1598042640
    },
    {
        "content": "<p>Yes, the translator expects files to be named &lt;library-name&gt;[-&lt;version&gt;].cql</p>",
        "id": 207683134,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1598042942
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span>  - thank you for updating the documentation and taking the time to help me (us) through these problems!   Hopefully this will benefit many other people who use this very useful tool/package!  </p>\n<p>One other comment/suggestion:  it's hard to tell which version or the executable path that this uses to find the Java JRE (or does it need the Java SDK).  It would be helpful if there was a setting on the package that allowed the user to choose the path to the JRE (or SDK).    I end up having multiple versions because of using a package manager on the Mac (asdf) and it doesn't seem to find the JRE. </p>\n<p>BTW, I didn't name the &lt;library-name&gt; nor the Library json file with the version number in it yet it still seems to work.  Is there a default such that it finds it based only on the name (or id) of the Library without the version?   (e.g. I had version '0.0.1' in my CQL file.</p>",
        "id": 207722202,
        "sender_full_name": "John Silva",
        "timestamp": 1598099185
    },
    {
        "content": "<p>While testing my CDS artifact using CDS authoring tool, I noticed something that does not work right.  In fact, I have 2 testing patients and if I test them individually, I get back the correct recommendation but if test them both, one of them is showing incorrect recommendation.  The CDS artifact I am working on named as \"Vitamin D Supplement Use\".  I am not sure if this is a bug with the tool or my logic is incorrect.  Can you please help me clear this out.  Thank you very much.<br>\nTien Thai</p>",
        "id": 210512397,
        "sender_full_name": "Tien Thai",
        "timestamp": 1600432828
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"249396\">@Tien Thai</span>.  That is certainly odd and not expected to happen.  We'll try to take a look at this and see if we can figure out what is going on.</p>",
        "id": 210514100,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1600433947
    },
    {
        "content": "<p>Chris,<br>\nI think I have figured out the cause of the issue.  It was because these 2 testing patients have the same ID.  Thank you very much for your attention.</p>\n<p>Best,<br>\nTien Thai</p>",
        "id": 210535329,
        "sender_full_name": "Tien Thai",
        "timestamp": 1600442789
    },
    {
        "content": "<p>Ah!  Thank you for letting us know.  That <em>would</em> affect things.  I think we should consider how the CDS Authoring Tool should handle this situation.  If a user attempts to upload a patient w/ an already existing ID, we should do one of the following:</p>\n<ul>\n<li>reject the upload, OR</li>\n<li>replace the existing test patient w/ the new one, OR</li>\n<li>modify the id so it is no longer the same as the existing one, OR</li>\n<li>present a choice to the user so they can choose which of the above options they want to happen.</li>\n</ul>\n<p>Thanks again for bringing up this issue.</p>",
        "id": 210536224,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1600443144
    },
    {
        "content": "<p>I have been trying to setup AHRQ--CDS-CONNECT-CQL-SERVICE project but kept getting the following error upon starting the service (See log below).  Can you please give me any suggestion you might have to resolve this error?  Thank you very much for your help.</p>\n<p>Best,<br>\nTien Thai</p>\n<hr>\n<p>PS C:\\CQL_Proj\\AHRQ-CDS-Connect-CQL-SERVICES-1.6.1&gt; yarn start<br>\nyarn run v1.22.5<br>\n$ node ./bin/www<br>\ninternal/modules/cjs/loader.js:968<br>\n  throw err;<br>\n  ^</p>\n<p>Error: Cannot find module 'express'<br>\nRequire stack:</p>\n<ul>\n<li>C:\\CQL_Proj\\AHRQ-CDS-Connect-CQL-SERVICES-1.6.1\\app.js</li>\n<li>C:\\CQL_Proj\\AHRQ-CDS-Connect-CQL-SERVICES-1.6.1\\bin\\www<br>\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:965:15)<br>\n    at Function.Module._load (internal/modules/cjs/loader.js:841:27)<br>\n    at Module.require (internal/modules/cjs/loader.js:1025:19)<br>\n    at require (internal/modules/cjs/helpers.js:72:18)<br>\n    at Object.&lt;anonymous&gt; (C:\\CQL_Proj\\AHRQ-CDS-Connect-CQL-SERVICES-1.6.1\\app.js:3:17)<br>\n    at Module._compile (internal/modules/cjs/loader.js:1137:30)<br>\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1157:10)<br>\n    at Module.load (internal/modules/cjs/loader.js:985:32)<br>\n    at Function.Module._load (internal/modules/cjs/loader.js:878:14)<br>\n    at Module.require (internal/modules/cjs/loader.js:1025:19) {<br>\n  code: 'MODULE_NOT_FOUND',<br>\n  requireStack: [<br>\n    'C:\\\\CQL_Proj\\\\AHRQ-CDS-Connect-CQL-SERVICES-1.6.1\\\\app.js',<br>\n    'C:\\\\CQL_Proj\\\\AHRQ-CDS-Connect-CQL-SERVICES-1.6.1\\\\bin\\\\www'<br>\n  ]<br>\n}<br>\nerror Command failed with exit code 1.<br>\ninfo Visit <a href=\"https://yarnpkg.com/en/docs/cli/run\">https://yarnpkg.com/en/docs/cli/run</a> for documentation about this command.<br>\nPS C:\\CQL_Proj\\AHRQ-CDS-Connect-CQL-SERVICES-1.6.1&gt;</li>\n</ul>",
        "id": 210548185,
        "sender_full_name": "Tien Thai",
        "timestamp": 1600448701
    },
    {
        "content": "<p>It looks to me like you haven't installed the dependencies.  First you need to run <code>yarn install</code> (or just <code>yarn</code> will actually do it as well).  After you do this once, you won't need to do it again unless you update the code.</p>",
        "id": 210555125,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1600452234
    },
    {
        "content": "<p>Hi Chris,<br>\nThank you very much for your suggestion.  I was able to get the CDS service project up and running.    However, when testing my service against default patient (i.e. Daniel Adams)  in the CDS Sandbox, I am getting an error in the response section saying that \"Could not get a response from the CDS Service. See developer tools for me details.\"   Is it because this patient Daniel does not meet the inclusion criteria?  Additionally, how would you add your own patients to this Sandbox so you can test your service against them?  Many thanks for your help.<br>\nBest,<br>\nTien Thai</p>",
        "id": 210795625,
        "sender_full_name": "Tien Thai",
        "timestamp": 1600720199
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"249396\">@Tien Thai</span>.  Sorry for the late response... \"Could not get a response from the CDS Service. See developer tools for me details\" could be caused by nearly anything.  Did you look in your browsers developer tools (and more specifically, the console) to see if it provided any additional detail?  You could also look to see if CQL Services emitted any logs in the window you're running it in.</p>\n<p>One common thing that could potentially cause this is if you have not configured the UMLS username and password for CQL Services to use.  You need to do this by setting <code>UMLS_USER_NAME</code> and <code>UMLS_PASSWORD</code> environment variables and ensuring that CQL Services can access those variables when it starts.  See: <a href=\"https://github.com/AHRQ-CDS/AHRQ-CDS-Connect-CQL-SERVICES#setting-nlm-credentials-for-vsac-downloads\">https://github.com/AHRQ-CDS/AHRQ-CDS-Connect-CQL-SERVICES#setting-nlm-credentials-for-vsac-downloads</a>.</p>\n<p>If the patient doesn't meet the inclusion criteria then you just don't get a card in the response.  An error like you received indicates that something is actually not working correctly.</p>",
        "id": 211015202,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1600873026
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> ! before executing the \"yarn start\" command, I did execute those 4 environment variables as instructed.   The server started OK with no error.  The Statin-Use along with other services are working as well.  However, my service is still giving the same error.  Looking into the console, I am seeing the following error.  Any suggestion on this error?  Many thanks.</p>\n<p>Best,<br>\nTien Thai</p>\n<p>Could not POST data to CDS Service <a href=\"http://localhost:3000/cds-services/vitaminD-use\">http://localhost:3000/cds-services/vitaminD-use</a> Error: Request failed with status code 412<br>\n    at e.exports (app.bundle.js:22)<br>\n    at e.exports (app.bundle.js:111)<br>\n    at XMLHttpRequest.p.onreadystatechange (app.bundle.js:22)</p>",
        "id": 211046186,
        "sender_full_name": "Tien Thai",
        "timestamp": 1600886945
    },
    {
        "content": "<p>CQL Services requires all data to be sent in the  <code>prefetch</code>.  It will respond with HTTP 412 (Precondition Failed) if the service request does not contain the necessary prefetch data.  In my experience, the CDS Hooks Sandbox will do it's best to send the prefetch data.  Are you using the public sandbox?  Did you make any config changes that would cause the prefetch data not to be sent?</p>",
        "id": 211050747,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1600889011
    },
    {
        "content": "<p>Yes, I am using the public sandbox @ <a href=\"http://sandbox.cds-hooks.org\">http://sandbox.cds-hooks.org</a>.  I basically added the service (<a href=\"http://localhost:300/cds-service\">http://localhost:300/cds-service</a>) and then selected the service from the list of services provided by the service.  Below is the hook configuration for my service:<br>\n{<br>\n  \"id\": \"vitaminD-use\",<br>\n  \"hook\": \"patient-view\",<br>\n  \"title\": \"Vitamin D Use for Falls Prevention\",<br>\n  \"description\": \"Presents Vitamin D recommendation for adults aged 65 years and older.\",<br>\n  \"_config\": {<br>\n    \"cards\": [{<br>\n      \"conditionExpression\": \"InPopulation\",<br>\n      \"card\": {<br>\n        \"summary\": \"Vitamin D Use for Falls Prevention in adults 65 years of age and older\",<br>\n        \"indicator\": \"info\",<br>\n        \"detail\": \"${Recommendation}\",<br>\n        \"source\": {<br>\n          \"label\": \"CDS Connect: Vitamin D Use for Falls Prevention in Adults\",<br>\n          \"url\": \"<a href=\"https://cds.ahrq.gov/cdsconnect/artifact/Vitamin-D-Supplement-Use\">https://cds.ahrq.gov/cdsconnect/artifact/Vitamin-D-Supplement-Use</a>\"<br>\n        },<br>\n        \"extension\": {<br>\n          \"grade\": \"${Errors}\"<br>\n        }<br>\n      }<br>\n    }],<br>\n    \"cql\": {<br>\n      \"library\": {<br>\n        \"id\": \"Vitamin-D-Supplement-Use\",<br>\n        \"version\": \"1.0.0\"<br>\n      }<br>\n    }<br>\n  }<br>\n}</p>\n<p>Thanks.<br>\nTT</p>",
        "id": 211053306,
        "sender_full_name": "Tien Thai",
        "timestamp": 1600890398
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"249396\">@Tien Thai</span>.  I've been trying to reproduce your experience.  I think I may know what is going on.  I suspect that your CDS uses one version of FHIR (e.g., R4) and the CDS Hooks Sandbox is using a server that supports a <em>different</em> version of FHIR (e.g., DSTU2).  Some resources changed names -- most notably <code>MedicationOrder</code> in DSTU2 is <code>MedicationRequest</code> in R4 -- so when your service prefetch asks for <code>MedicationRequest</code> resources, the server cannot fulfill that request.</p>\n<p>By default, the CDS Hooks Sandbox uses DSTU2, so I'm guessing that your CQL is using FHIR R4?  If that's correct, try changing the FHIR server in the CDS Hooks Sandbox so it is: <a href=\"http://launch.smarthealthit.org/v/r4/fhir\">http://launch.smarthealthit.org/v/r4/fhir</a> and then change the patient to 46d3785e-865b-46a5-8ea9-86a72a183de3 (a randomly selected R4 patient).  You might not get a card from your service (e.g. its response may be <code>{ \"cards\": []}</code>) but hopefully you will not get that error.  Then that would mean the hooks are connected properly -- the patient just didn't have the data to activate a response.</p>\n<p>If you want to browse the patients that are in that R4 FHIR server, you can go to: <a href=\"http://patient-browser.smarthealthit.org/?config=r4\">http://patient-browser.smarthealthit.org/?config=r4</a>.  Once you find a patient you like, copy its ID and use that in the \"Change Patient\" dialog of the CDS Services Sandbox.</p>\n<p>I hope that I guessed the problem right.  Let me know!</p>",
        "id": 211124221,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1600950839
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> Yes, indeed!  Just to tested out my CDS in both R4 and  DSTU2 versions and it returns empty card as expected.</p>\n<p>For testing with DSTU2 version:</p>\n<ol>\n<li>Downloaded the CDS in DSTU2 and copy the ELM files to config/libraries folder</li>\n<li>Restart the CQL Service</li>\n<li>Use default FHIR server on the Sandbox.</li>\n</ol>\n<p>For testing with R4 version, I followed steps above using  R4 CDS libraries,  FHIR server's URL and new patient. </p>\n<p>Thank you very much for your excellent help.</p>\n<p>Tien Thai</p>",
        "id": 211127881,
        "sender_full_name": "Tien Thai",
        "timestamp": 1600952815
    },
    {
        "content": "<p>Glad we figured it out!  Thanks for reporting back!</p>",
        "id": 211137007,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1600956886
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> <br>\nWhen testing my sample CDS Service with my custom patients  in CDS Authoring Tool, it does return the recommendations as expected.  I downloaded the CDS artifact as R4 and copied all the files to <strong>/config/libraries </strong> folder.  The hook for this CDS service is also configured in /config/hooks folder as shown below:<br>\n=================<br>\n{<br>\n  \"id\": \"vitaminD-use\",<br>\n  \"hook\": \"patient-view\",<br>\n  \"title\": \"Vitamin D Use for Falls Prevention\",<br>\n  \"description\": \"Presents Vitamin D recommendation for adults aged 65 years and older.\",<br>\n  \"_config\": {<br>\n    \"cards\": [{<br>\n      \"conditionExpression\": \"InPopulation\",<br>\n      \"card\": {<br>\n        \"summary\": \"Vitamin D Use for Falls Prevention in adults 65 years of age and older\",<br>\n        \"indicator\": \"info\",<br>\n        \"detail\": \"${Recommendation}\",<br>\n        \"source\": {<br>\n          \"label\": \"CDS Connect: Vitamin D Use for Falls Prevention in Adults\",<br>\n          \"url\": \"<a href=\"https://cds.ahrq.gov/cdsconnect/artifact/Vitamin-D-Supplement-Use\">https://cds.ahrq.gov/cdsconnect/artifact/Vitamin-D-Supplement-Use</a>\"<br>\n        },<br>\n        \"extension\": {<br>\n          \"grade\": \"${Errors}\"<br>\n        }<br>\n      }<br>\n    }],<br>\n    \"cql\": {<br>\n      \"library\": {<br>\n        \"id\": \"Vitamin-D-Supplement-Use\",<br>\n        \"version\": \"1.0.0\"<br>\n      }<br>\n    }<br>\n  }<br>\n}<br>\n======================</p>\n<p>When testing this CDS artifact with a random patient from the Sandbox, \"No cards\" was returned.  This is fine since I know none of those random patients will return anything as they do not meet the criteria defined for the Recommendations (i.e. There exists an Active Medication Request with a code from \"Vitamin D\" value set.)  </p>\n<p>When testing with my custom patient , i.e. the one that works in the CDS Authoring Tool, from the<strong> Logica Sandbox</strong>, there was still no cards returned.  This really made me scratched my head :) as I have no way to debug the CDS artifact.  I can see the content of the JSON request but cannot see the content of the JSON response.   In your experience, can you please let me know the best tool you used to debug your CDS service?  Is there a way to get to the content of the JSON response from the CDS service?  Thank you very much for your help.</p>\n<p>PS:<br>\nWhen looking at the log (see below), I noticed the request was successfully posted but I did not see any line that indicates a successful response.  Does it mean that my CDS service does not return anything back to caller?</p>\n<p>Loaded 4 hooks</p>\n<p>- ascvd-risk<br>\n  - cond-med-count-r4<br>\n  - statin-use<br>\n  - vitaminD-use<br>\n**2020-09-28T19:09:15.828Z ::1 \"OPTIONS /cds-services/vitaminD-use\" 204 0<br>\n2020-09-28T19:09:16.156Z ::1 \"POST /cds-services/vitaminD-use\" 200 12**</p>\n<p>Regards,<br>\nTien Thai</p>",
        "id": 211538621,
        "sender_full_name": "Tien Thai",
        "timestamp": 1601321432
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"249396\">@Tien Thai</span>.  If you'd like to see the full set of CQL results when you call a CDS Hooks service, you can add a logging statement around line 199 of <code>routes/cds-services.js</code>.  It should look like this:<br>\n<a href=\"/user_uploads/10155/kYBHmdoH8jxaZFTEJ5WCaehC/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/kYBHmdoH8jxaZFTEJ5WCaehC/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/kYBHmdoH8jxaZFTEJ5WCaehC/image.png\"></a></div>",
        "id": 211638252,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1601393636
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span>   It is very helpful info.   Thank you very much.</p>",
        "id": 211660887,
        "sender_full_name": "Tien Thai",
        "timestamp": 1601402961
    },
    {
        "content": "<p>Suppose that a recommendation is returned if there exists an active MedicationRequest where code in some value sets, is it possible to include the name and the RxNORM of that medication in the recommendation?  </p>\n<p>Additionally, can you please explain how  you authored the <strong>Condition_and_Medication_Count_FHIRv400</strong> using the CDS Authoring Tool?  Is it an external CQL being imported into the CDS? </p>\n<p>Many thanks for your help.</p>\n<p>Regards,<br>\nTien Thai</p>",
        "id": 220798754,
        "sender_full_name": "Tien Thai",
        "timestamp": 1608737624
    },
    {
        "content": "<p>Currently, the CDS Authoring Tool only supports returning text-based recommendations where the full text is known at build time (i.e., it is not dynamic).  That said, it's possible to build the CDS/CQL in such a way that an engine might be able to easily pull the name and code of the medication from one of the other exported expressions (not the \"Recommendation\" expression) -- but I don't think this is what you're asking for.  For now, you would probably need to manually edit the CQL after downloading it from the Authoring Tool.</p>\n<p>As for the Condition_and_Medication_Count CQL, I believe we authored that manually (not using the CDS Authoring Tool).</p>",
        "id": 221259700,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1609375874
    },
    {
        "content": "<p>Hi Chris,<br>\nThank you very much for your reply.   I have attempted to define the following base element in CDS authoring tool:</p>\n<hr>\n<p>define \"On Fall Risk Increasing Drugs (FRIDs)\":<br>\n  ActiveMedicationRequest([MedicationRequest: \"Fall Risk Increasing Drugs (FRIDs) VS\"])</p>\n<hr>\n<p>and then referenced the \"<strong>On Fall Risk Increasing Drugs (FRIDs)</strong>\"  in the hook config file (see  card configuration below).  Upon successful invoking the CDS service, the  card only displays the word \"<strong>object Object</strong>\" instead of the list of medications with codes from the  \"<strong>Fall Risk Increasing Drugs (FRIDs) VS</strong>\" value set.  Can you please provide me any suggestion on how to return this list of medication back to the CDS client when invoking the CDS service?  Many thanks for your help.<br>\nTien Thai</p>\n<hr>\n<p>\"cards\": [{<br>\n      \"conditionExpression\": \"InPopulation\",<br>\n      \"card\": {<br>\n        \"summary\": \"Fall Prevention Risk Factors for Patient 65 Years of Age and Older\",<br>\n        \"indicator\": \"info\",<br>\n        \"detail\": \"Returned  medications: <strong>${On Fall Risk Increasing Drugs (FRIDs)}</strong>\",<br>\n        \"source\": {<br>\n          \"label\": \"CDS Connect: Fall Prevention Risk Factor - Medication Service\",<br>\n          \"url\": \"<a href=\"https://cds.ahrq.gov/cdsconnect/artifact/fall-prevention-risk-factors-r4\">https://cds.ahrq.gov/cdsconnect/artifact/fall-prevention-risk-factors-r4</a>\"<br>\n        },<br>\n        \"extension\": {<br>\n          \"grade\": \"${RecommendationGrade}\",<br>\n          \"rationale\": \"${Rationale}\"<br>\n        },<br>\n        \"error\":\"Error: ${Error}\"<br>\n      }<br>\n    }],</p>",
        "id": 222717968,
        "sender_full_name": "Tien Thai",
        "timestamp": 1610631777
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"249396\">@Tien Thai</span>.  What is the behavior you want?  Do you want the full <code>MedicationRequest</code> objects or just some info from the medications?  The <code>${...}</code> string interpolation feature works best when the expression you reference is a <code>String</code> -- but <code>On Fall Risk Increasing Drugs (FRIDs)</code> is a list of <code>MedicationRequest</code> objects.  If you want to just display certain information from the requests to the user (like the med name, request date, etc), then you likely need to use CQL String operators to construct the message you want in CQL -- and <em>then</em> you can reference that message in the card using <code>${...}</code>.  Constructing these types of dynamic messages using CQL is not supported in the CDS Authoring Tool though -- so you'll need to hand modify the CQL to support that.</p>\n<p>If you actually want the hook to return a list of <code>MedicationRequests</code> as suggestions that the user can act on (to prescribe, for example), then you need to use the card's <code>suggestions</code> property to return the list of <code>MedicationRequest</code>s.  I haven't tried this in a while, but you could try: <code>\"suggestions\": \"${On Fall Risk Increasing Drugs (FRIDs)}\"</code> -- although I don't recall how well that works.  Even if it does return objects, I think it may return them in a format representing the FHIR <em>modelinfo</em> rather than real FHIR JSON serialization -- in which case you'd need a Tuple to do what you want.  The other approach is if the list of suggested meds is known at build time, you could take an approach like shown <a href=\"https://github.com/AHRQ-CDS/AHRQ-CDS-Connect-CQL-SERVICES/blob/master/config/hooks/statin-use.json.alternate\">here</a>.</p>",
        "id": 222751140,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1610645119
    },
    {
        "content": "<p>Hi Chris,<br>\nThank you very much for the suggestion.<br>\nI did try to define the following in an external CQL, then attached it to the CDS service using the CDS Authoring Tool. </p>\n<hr>\n<p>**define ActiveFRIDsMeds:<br>\n    [MedicationRequest: medication in \"Fall Risk Increasing Drugs (FRIDs) VS\"] A<br>\n        return{<br>\n            medcode:  A.medication.coding.code.value<br>\n            }**</p>\n<hr>\n<p>In the card config file, I used the \"suggestions\" property to display the above definition as shown below and restarted the CDS service.  </p>\n<p>Upon calling the service, the card was successfully returned.   However, when looking at the content of the card, I did not see the \"suggestions\" property nor its content in the card itself.    Did I miss anything?  Many thanks for your help.</p>\n<hr>\n<p>{<br>\n  \"id\": \"fall-prevention-risk-factors-r4\",<br>\n  \"hook\": \"medication-prescribe\",<br>\n  \"title\": \"Fall Prevention Risk Factors\",<br>\n  \"description\": \"CDS Service that provides guidance to the prescriber if the patient is at least 65 years of age and is on FRIDs medication.\",<br>\n  \"_config\": {<br>\n    \"cards\": [{<br>\n      \"conditionExpression\": \"InPopulation\",<br>\n      \"card\": {<br>\n        \"summary\": \"Fall Prevention Risk Factors for Patient 65 Years of Age and Older\",<br>\n        \"indicator\": \"info\",<br>\n        \"detail\": \"Returned Recommendation: ${Recommendation}\",<br>\n        \"source\": {<br>\n          \"label\": \"CDS Connect: Fall Prevention Risk Factor - Medication Service\",<br>\n          \"url\": \"<a href=\"https://cds.ahrq.gov/cdsconnect/artifact/fall-prevention-risk-factors-r4\">https://cds.ahrq.gov/cdsconnect/artifact/fall-prevention-risk-factors-r4</a>\"<br>\n        },<br>\n        \"extension\": {<br>\n          \"grade\": \"${RecommendationGrade}\",<br>\n          \"rationale\": \"${Rationale}\"<br>\n        },<br>\n        \"error\":\"Error: ${Error}\"<br>\n      }<br>\n    }],<br>\n<strong>  \"suggestions\": \"${ActiveFRIDsMeds.medcode}\",</strong><br>\n    \"cql\": {<br>\n      \"library\": {<br>\n        \"id\": \"Fall-Prevention-Medication-Risk-Factors\",<br>\n        \"version\": \"1\"<br>\n      }<br>\n    }<br>\n  }<br>\n}</p>\n<hr>\n<p>Below is the returned CARD upon calling the CDS Servicve:</p>\n<hr>\n<p>{<br>\n    \"cards\": [<br>\n        {<br>\n            \"summary\": \"Fall Prevention Risk Factors for Patient 65 Years of Age and Older\",<br>\n            \"indicator\": \"info\",<br>\n            \"detail\": \"Returned Recommendation: Considering 18-week tapering protocol, provide patient education brochure.\",<br>\n            \"source\": {<br>\n                \"label\": \"CDS Connect: Fall Prevention Risk Factor - Medication Service\",<br>\n                \"url\": \"<a href=\"https://cds.ahrq.gov/cdsconnect/artifact/fall-prevention-risk-factors-r4\">https://cds.ahrq.gov/cdsconnect/artifact/fall-prevention-risk-factors-r4</a>\"<br>\n            },<br>\n            \"extension\": {<br>\n                \"grade\": \"\",<br>\n                \"rationale\": \"\"<br>\n            },<br>\n            \"error\": \"Error: \"<br>\n        }<br>\n    ]<br>\n}</p>",
        "id": 223301241,
        "sender_full_name": "Tien Thai",
        "timestamp": 1611093384
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"249396\">@Tien Thai</span>.  It looks like you have not actually put <code>suggestions</code> in the card object.  In the JSON you posted above, it is outside of the <code>cards</code> array.  I also noticed that you added an <code>error</code> attribute -- but since that is not defined by CDS Hooks, it should really go inside the <code>extension</code> part of the card.</p>\n<p>I think you want something more like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n  &quot;id&quot;: &quot;fall-prevention-risk-factors-r4&quot;,\n  &quot;hook&quot;: &quot;medication-prescribe&quot;,\n  &quot;title&quot;: &quot;Fall Prevention Risk Factors&quot;,\n  &quot;description&quot;: &quot;CDS Service that provides guidance to the prescriber if the patient is at least 65 years of age and is on FRIDs medication.&quot;,\n  &quot;_config&quot;: {\n    &quot;cards&quot;: [\n      {\n        &quot;conditionExpression&quot;: &quot;InPopulation&quot;,\n        &quot;card&quot;: {\n          &quot;summary&quot;: &quot;Fall Prevention Risk Factors for Patient 65 Years of Age and Older&quot;,\n          &quot;indicator&quot;: &quot;info&quot;,\n          &quot;detail&quot;: &quot;Returned Recommendation: ${Recommendation}&quot;,\n          &quot;source&quot;: {\n            &quot;label&quot;: &quot;CDS Connect: Fall Prevention Risk Factor - Medication Service&quot;,\n            &quot;url&quot;: &quot;https://cds.ahrq.gov/cdsconnect/artifact/fall-prevention-risk-factors-r4&quot;\n          },\n          &quot;suggestions&quot;: &quot;${ActiveFRIDsMeds.medcode}&quot;,\n          &quot;extension&quot;: {\n            &quot;error&quot;: &quot;Error: ${Error}&quot;,\n            &quot;grade&quot;: &quot;${RecommendationGrade}&quot;,\n            &quot;rationale&quot;: &quot;${Rationale}&quot;\n          }\n        }\n      }\n    ],\n    &quot;cql&quot;: {\n      &quot;library&quot;: {\n        &quot;id&quot;: &quot;Fall-Prevention-Medication-Risk-Factors&quot;,\n        &quot;version&quot;: &quot;1&quot;\n      }\n    }\n  }\n}\n</code></pre></div>\n<p>That said, putting an array of the med codes in <code>suggestions</code> is not quite correct either.  Suggestions should follow a particular format that defines actions on FHIR resources.  See the CDS Hooks spec for more details: <a href=\"https://cds-hooks.hl7.org/1.0/#suggestion\">https://cds-hooks.hl7.org/1.0/#suggestion</a></p>",
        "id": 223402702,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1611162154
    },
    {
        "content": "<p>Chris,<br>\nThanks for your reply.  I did realize that this morning and I move the suggestion property into the card exactly like the way you suggested but I got an error like the one below.  I am looking for a standard template for suggestion to resolve this error.  </p>\n<p>Error: Card has suggestions but no selectionBehavior field.</p>\n<p>Thanks.<br>\nRegards,<br>\nTien Thai</p>",
        "id": 223404451,
        "sender_full_name": "Tien Thai",
        "timestamp": 1611162857
    },
    {
        "content": "<p>That <a href=\"https://cds-hooks.hl7.org/1.0/#suggestion\">link to the CDS Hooks spec</a> I posted above should get you to the definition of <code>suggestions</code> and what are the required fields.  You can also see the basic layout in the <a href=\"https://github.com/AHRQ-CDS/AHRQ-CDS-Connect-CQL-SERVICES/blob/master/config/hooks/statin-use.json.alternate\">alternative hook configuration</a> I linked to at the end of my first message.</p>",
        "id": 223407278,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1611164230
    },
    {
        "content": "<p>@Chris,<br>\nThank you very much.  The issue is resolved after adding the \"selectionBehavior\" attribute to the CDS card.</p>\n<p>Best,<br>\nTien Thai</p>",
        "id": 223435476,
        "sender_full_name": "Tien Thai",
        "timestamp": 1611176767
    }
]