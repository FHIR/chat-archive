[
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> some feedback from our team on issues when using CQL.  cc <span class=\"user-mention\" data-user-id=\"387988\">@Francis Otieno</span> and Maimoona.  </p>\n<ul>\n<li>No direct mapping of CQL/FHIR types. We had to use myVal: decimal {value: 3.0} instead of myVal: 3.0. Sample CQL</li>\n<li>FHIR inner static classes can not be initialized so we had to add a class to let CQL handle it explicitly. Sample CQL. We have added an extension to R4FHIRModelResolver to accomplish this.</li>\n<li>CQL Runner is very helpful but a very old version of CQL and does not recognize Now(), and QuestionnaireResponse. The CQL here does not work on this IDE but works on code. I am not sure if Bryn can address this one.</li>\n<li>Related to point # 1 . Since FHIR Types are not recognized I had to us</li>\n</ul>\n<p>define \"G6PDTemp\": decimal {value: \"G6PDObs\".value} // G6PDObs=DecimalType<br>\ndefine \"G6PDValue\": ToString(\"G6PDTemp\")<br>\ninstead of</p>\n<p>define \"G6PDValue\": ToString(\"G6PDObs\".value) <br>\n// OR<br>\ndefine \"G6PDValue\": ToString(\"G6PDObs\")</p>",
        "id": 271819081,
        "sender_full_name": "Matt Berg",
        "timestamp": 1644841586
    },
    {
        "content": "<p><a href=\"https://github.com/opensrp/fhircore/blob/main/android/quest/src/test/resources/cql/pq-medication/cql.txt#L112\">https://github.com/opensrp/fhircore/blob/main/android/quest/src/test/resources/cql/pq-medication/cql.txt#L112</a></p>",
        "id": 271819087,
        "sender_full_name": "Matt Berg",
        "timestamp": 1644841604
    },
    {
        "content": "<p><a href=\"https://github.com/opensrp/fhircore/blob/main/android/quest/src/test/resources/cql/control-test/cql.txt\">https://github.com/opensrp/fhircore/blob/main/android/quest/src/test/resources/cql/control-test/cql.txt</a></p>",
        "id": 271819106,
        "sender_full_name": "Matt Berg",
        "timestamp": 1644841624
    },
    {
        "content": "<p>Apologies for the delay, thank you so much for the feedback. </p>\n<ul>\n<li>Regarding CQL/FHIR Types, there is a FHIRHelpers library that defines conversions between FHIR and CQL types, and those are registered with the FHIR ModelInfo as implicit conversions. It works well for converting CQL primitives to FHIR primitives when they are both referenced in expressions, but it doesn't work when \"assigning\" a value as in the selectors there. We could potentially define implicit conversions the other direction to support that use case, I'll take a look at that, if you wouldn't mind submitting a tracker to the CQL-to-ELM translator to remind me?</li>\n<li>There is documentation on FHIRHelpers available here: <a href=\"https://fhir.org/guides/cqf/common/#fhir-helpers\">https://fhir.org/guides/cqf/common/#fhir-helpers</a></li>\n<li>I've used this pattern quite a bit as well, it would be good to consolidate those to a common library, something like a next version of this: <a href=\"https://fhir.org/guides/cqf/common/Library-FHIRCommon.html\">https://fhir.org/guides/cqf/common/Library-FHIRCommon.html</a>, feel free to submit issues to that github repository proposing common functions, and take a look at the ones that are there to see if any match what you are needing</li>\n<li>CQL Runner is great for a quick start, but yeah, it's an older version of the CQL stack and we haven't gotten around to updating it. There is a devcontainer <a href=\"https://github.com/alphora/cqf-ccc/tree/master/.devcontainer\">here</a> that builds a VSCode container with the CQL VSCode extension installed so you can author in that container with validation and execution.</li>\n<li>To work around the lack of implicit conversions in selectors, I've tended to define helper functions, like:</li>\n</ul>\n<div class=\"codehilite\" data-code-language=\"cql\"><pre><span></span><code>define function FHIRDecimal(value Decimal): FHIR.decimal { value: System.Decimal }\n</code></pre></div>",
        "id": 272175189,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1645044042
    }
]