[
    {
        "content": "<p>Hi, I am looking to hook-up CQL engine to my FHIR server so I can execute CQL against the data present in my FHIR server. My server is SmileCDR (Licensed version of Hapi) and the FHIR version is 3.0.2. I checked both cqf-ruler and cql_execution_service projects. On the cqf-ruler project I see that it works on the data that is posted on the hapi version of the server but I want it to work with the data present on my server . On the cql_execution_service project, I am getting lot of errors mainly I think because it is outdated and there seems to be some work needed to make it usable. So, I am looking for guidance as to which implementation I would refer and begin with so I could serve my purpose.<br>\nJust to be clear on the ask, I am looking to execute the 'evaluate' operation</p>",
        "id": 248302593,
        "sender_full_name": "ravi.kuchi",
        "timestamp": 1628041488
    },
    {
        "content": "<p>I can't help you with a hook-up version of a CQL engine but HAPI itself recently integrated the cqf execution engine to enable the $evaluate operation. <a href=\"https://hapifhir.io/hapi-fhir/docs/server_jpa_cql/cql.html\">https://hapifhir.io/hapi-fhir/docs/server_jpa_cql/cql.html</a></p>\n<p>Maybe you can license this extension for SmileCDR.</p>\n<p>I'm the main developer of <a href=\"https://github.com/samply/blaze\">Blaze</a>, I FHIR Server that also has an internal CQL engine. If evaluation performance is important to you, my first tests between HAPI and Blaze show that Blaze is about 1000x faster.</p>",
        "id": 248323128,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1628065867
    },
    {
        "content": "<p>Thanks for the input <span class=\"user-mention\" data-user-id=\"197470\">@Alexander Kiel</span> , I am aware that Smile also has support to $evaluate-measure but I am looking at $evaluate so I can execute the CQL statements captured in a Library.</p>",
        "id": 248344166,
        "sender_full_name": "ravi.kuchi",
        "timestamp": 1628080962
    },
    {
        "content": "<p>This website allows you to run arbitrary CQL against an arbitrary FHIR server: <a href=\"https://cql-runner.dataphoria.org/\">https://cql-runner.dataphoria.org/</a></p>",
        "id": 248349482,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1628083726
    },
    {
        "content": "<p>Code for it is here: <a href=\"https://github.com/DBCG/cql_runner\">https://github.com/DBCG/cql_runner</a></p>",
        "id": 248349508,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1628083739
    },
    {
        "content": "<p>Basically, it's using the $cql operation of a CQF Ruler, but that in turn is just using a specific configuration of the evaluator.</p>",
        "id": 248349587,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1628083784
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> , I tried that tool as well,I changed the datasource to another server (<a href=\"http://test.fhir.org/r4\">http://test.fhir.org/r4</a>) but it does not seem to pick the data from the new server, I saw the parameters it was sending in the developer tools and it does not reflect the server that I have changed to:<br>\n{<br>\n  \"resourceType\": \"Parameters\",<br>\n  \"parameter\": [<br>\n    {<br>\n      \"name\": \"code\",<br>\n      \"valueString\": \"library TestArtifact version '1'\\n\\nusing FHIR version '4.0.0'\\n\\ninclude \\\"FHIRHelpers\\\" version '4.0.0' called FHIRHelpers\\n\\ncodesystem \\\"SNOMED\\\": '<a href=\"http://snomed.info/sct'\\ncodesystem\">http://snomed.info/sct'\\ncodesystem</a> \\\"CONDCLINSTATUS\\\": '<a href=\"http://terminology.hl7.org/CodeSystem/condition-clinical'\\ncodesystem\">http://terminology.hl7.org/CodeSystem/condition-clinical'\\ncodesystem</a> \\\"CONDVERSTATUS\\\": '<a href=\"http://terminology.hl7.org/CodeSystem/condition-ver-status'\\n\\ncode\">http://terminology.hl7.org/CodeSystem/condition-ver-status'\\n\\ncode</a> \\\"Essential hypertension (disorder) code\\\": '59621000' from \\\"SNOMED\\\" display 'Essential hypertension (disorder)'\\ncode \\\"Malignant hypertensive chronic kidney disease (disorder) code\\\": '285831000119108' from \\\"SNOMED\\\" display 'Malignant hypertensive chronic kidney disease (disorder)'\\ncode \\\"Condition Active code\\\": 'active' from \\\"CONDCLINSTATUS\\\" display 'Active'\\ncode \\\"Condition Confirmed code\\\": 'confirmed' from \\\"CONDVERSTATUS\\\" display 'Confirmed'\\n\\nconcept \\\"Condition Active\\\": { \\\"Condition Active code\\\" } display 'Active'\\nconcept \\\"Condition Confirmed\\\": { \\\"Condition Confirmed code\\\" } display 'Confirmed'\\n\\ncontext Patient\\n\\ndefine \\\"AgeRange-548\\\":\\n  AgeInYears() &gt;= 60 and AgeInYears() &lt;= 85\\n\\ndefine \\\"Essential hypertension (disorder)\\\":\\n  exists(ActiveCondition([Condition: \\\"Essential hypertension (disorder) code\\\"]))\\n\\ndefine \\\"Malignant hypertensive chronic kidney disease (disorder)\\\":\\n  exists(Confirmed([Condition: \\\"Malignant hypertensive chronic kidney disease (disorder) code\\\"]))\\n\\ndefine \\\"MeetsInclusionCriteria\\\":\\n  \\\"AgeRange-548\\\"\\n  and \\\"Essential hypertension (disorder)\\\"\\n\\ndefine \\\"MeetsExclusionCriteria\\\":\\n  \\\"Malignant hypertensive chronic kidney disease (disorder)\\\"\\n\\ndefine \\\"InPopulation\\\":\\n  \\\"MeetsInclusionCriteria\\\" and not \\\"MeetsExclusionCriteria\\\"\\n\\ndefine \\\"Recommendation\\\":\\n  if \\\"InPopulation\\\" then ''\\n  else null\\n\\n\\ndefine \\\"Rationale\\\":\\n  if \\\"InPopulation\\\" then null\\n  else null\\n\\ndefine \\\"Errors\\\":\\n  null\\n\\n\\ndefine function Confirmed(CondList List&lt;Condition&gt;):\\n  CondList C where C.verificationStatus ~ \\\"Condition Confirmed code\\\"\\n\\ndefine function ActiveCondition(CondList List&lt;Condition&gt;):\\n  CondList C\\n    where C.clinicalStatus ~ \\\"Condition Active code\\\"\\n      and C.abatement is null\\n\"<br>\n    },<br>\n    {<br>\n      \"name\": \"patientId\",<br>\n      \"valueString\": \"P48\"<br>\n    },<br>\n    null,<br>\n    {<br>\n      \"name\": \"context\",<br>\n      \"valueString\": \"Patient\"<br>\n    },<br>\n    {<br>\n      \"name\": \"terminologyServiceUri\",<br>\n      \"valueString\": \"<a href=\"https://cql-sandbox.alphora.com/cqf-ruler-r4/fhir\">https://cql-sandbox.alphora.com/cqf-ruler-r4/fhir</a>\"<br>\n    },<br>\n    {<br>\n      \"name\": \"terminologyUser\"<br>\n    },<br>\n    {<br>\n      \"name\": \"terminologyPass\"<br>\n    }<br>\n  ]<br>\n}</p>",
        "id": 248354558,
        "sender_full_name": "ravi.kuchi",
        "timestamp": 1628086130
    },
    {
        "content": "<p>Here is the service definition in cqf-ruler, it does not have parameters to change dataSource, so may be that is the limitation<br>\n@SuppressWarnings(\"unchecked\")<br>\n    @Operation(name = \"$cql\")<br>\n    public Bundle evaluate(@OperationParam(name = \"code\") String code,<br>\n            @OperationParam(name = \"patientId\") String patientId,<br>\n            @OperationParam(name = \"periodStart\") String periodStart,<br>\n            @OperationParam(name = \"periodEnd\") String periodEnd,<br>\n            @OperationParam(name = \"productLine\") String productLine,<br>\n            @OperationParam(name = \"terminologyServiceUri\") String terminologyServiceUri,<br>\n            @OperationParam(name = \"terminologyUser\") String terminologyUser,<br>\n            @OperationParam(name = \"terminologyPass\") String terminologyPass,<br>\n            @OperationParam(name = \"context\") String contextParam,<br>\n            @OperationParam(name = \"executionResults\") String executionResults,<br>\n            @OperationParam(name = \"parameters\") Parameters parameters) {</p>",
        "id": 248355491,
        "sender_full_name": "ravi.kuchi",
        "timestamp": 1628086522
    },
    {
        "content": "<p>It would be great if this operation could accept a dataSource so we can plug in any FHIR server and run CQL against the data</p>",
        "id": 248355722,
        "sender_full_name": "ravi.kuchi",
        "timestamp": 1628086621
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"192784\">ravi.kuchi</span> <a href=\"#narrow/stream/179220-cql/topic/Hooking.20up.20CQL.20engine.20to.20FHIR.20server/near/248344166\">said</a>:</p>\n<blockquote>\n<p>Thanks for the input <span class=\"user-mention silent\" data-user-id=\"197470\">Alexander Kiel</span> , I am aware that Smile also has support to $evaluate-measure but I am looking at $evaluate so I can execute the CQL statements captured in a Library.</p>\n</blockquote>\n<p>Do you mean <a href=\"http://hl7.org/fhir/2018jan/operation-servicedefinition-evaluate.html\">http://hl7.org/fhir/2018jan/operation-servicedefinition-evaluate.html</a>? I know, you are on STU3 but it seems that ServiceDefinition is no longer part of R4. Sorry that I can't help.</p>",
        "id": 248370743,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1628093183
    },
    {
        "content": "<p>There are two operations $cql and $evaluate that are used in cqf-ruler that allows you to execute CQL statements in a Library against a FHIR server and they provide outcome for each of the statements. I find this feature powerful and useful especially in Decision Supporting Systems where we have rules for Prior Authorization</p>",
        "id": 248384756,
        "sender_full_name": "ravi.kuchi",
        "timestamp": 1628099821
    },
    {
        "content": "<p>Ok. How is this different from $evaluate-measure? Do you have a Measure in play with $evaluate or $cql? What are the possible result formats? In $evaluate-measure it's only a MeasureReport with various poluation and stratifier counts.</p>",
        "id": 248387497,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1628101087
    },
    {
        "content": "<p>Checkout examples at <a href=\"https://cql-runner.dataphoria.org/\">https://cql-runner.dataphoria.org/</a> <br>\nyou can run arbitrary cql</p>",
        "id": 248387858,
        "sender_full_name": "ravi.kuchi",
        "timestamp": 1628101285
    },
    {
        "content": "<p>Ok I know already about it. But this is not a standarized API in FHIR. In your use case we liked to build cohorts (populations) to $evaluate-measure was a good fit for us. But yes, you can do many many more things with CQL.</p>",
        "id": 248388130,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1628101431
    },
    {
        "content": "<p>Library $evaluate operation is defined in the published CPG IG:  <a href=\"https://build.fhir.org/ig/HL7/cqf-recommendations/OperationDefinition-cpg-library-evaluate.html\">https://build.fhir.org/ig/HL7/cqf-recommendations/OperationDefinition-cpg-library-evaluate.html</a></p>",
        "id": 248412875,
        "sender_full_name": "Dave Carlson",
        "timestamp": 1628113427
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191395\">@Dave Carlson</span> Thanks. This looks good.</p>",
        "id": 248446357,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1628148660
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197470\">Alexander Kiel</span> <a href=\"#narrow/stream/179220-cql/topic/Hooking.20up.20CQL.20engine.20to.20FHIR.20server/near/248323128\">said</a>:</p>\n<blockquote>\n<p>I'm the main developer of <a href=\"https://github.com/samply/blaze\">Blaze</a>, I FHIR Server that also has an internal CQL engine. If evaluation performance is important to you, my first tests between HAPI and Blaze show that Blaze is about 1000x faster.</p>\n</blockquote>\n<p>Blaze looks very good specially with Quality Reporting UI, I tried the basic CQL example of COVID patients and it worked flawlessly. </p>\n<p><span class=\"user-mention\" data-user-id=\"197470\">@Alexander Kiel</span>  as Blaze is standalone and cannot be embedded in HAPI, I would like to understand how to accomplish  the data sync between HAPI server and Blaze CQL engine. This sync is needed for a more real time reporting and analytics. Any pointers are much appreciated.</p>\n<p>On a different note, does Blaze support GraphQL  ? If so, what GraphQL capabilities does it have? Is it even possible to do population health queries (i.e. count of COVID-19 patients) using GraphQL in Blaze ?</p>",
        "id": 248497900,
        "sender_full_name": "dsh",
        "timestamp": 1628179210
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191783\">@dsh</span> I'm glad you like the Blaze so far.</p>\n<blockquote>\n<p>I would like to understand how to accomplish the data sync between HAPI server and Blaze CQL engine.</p>\n</blockquote>\n<p>You can use subscriptions to sync the resources from HAPI to Blaze. I have started a documentation <a href=\"https://github.com/samply/blaze/blob/master/docs/data-sync.md\">here</a>. I would be interested if that works for you. Especially regarding the referential integrity.</p>\n<blockquote>\n<p>On a different note, does Blaze support GraphQL ?</p>\n</blockquote>\n<p>Unfortunately no. But feel free to open an issue with your use-case.</p>\n<blockquote>\n<p>Is it even possible to do population health queries (i.e. count of COVID-19 patients) using GraphQL in Blaze ?</p>\n</blockquote>\n<p>IMHO, <a href=\"http://www.hl7.org/fhir/clinicalreasoning-quality-reporting.html\">quality reporting</a> using CQL is a perfect fir for doing population health queries. Blaze is used as backend for the <a href=\"https://samplelocator.bbmri.de/search\">Sample Locator</a> were you can do exactly that.</p>",
        "id": 248526519,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1628192733
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"197470\">@Alexander Kiel</span>  This looks super interesting! I'm just now playing around with Blaze but I'm seeing 'Referential integrity violated' errors on a relatively simple bundle (here: <a href=\"https://pastebin.com/ZAxmVEhM\">https://pastebin.com/ZAxmVEhM</a>). This seems odd. Am I missing something on importing data that is different from HAPI? I've tried transaction bundles with PUTs as well. I've also tried the blazectl tool (nice use of Go btw) and it only loads one or two of the initial entries (Patient and Organization).</p>",
        "id": 248534458,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1628196604
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194192\">@Richard Stanley</span> I'm very happy that you liked Blaze so far. Referencing resources in batch bundles is problematic, because all requests in a batch should be without dependencies:</p>\n<blockquote>\n<p>For a batch, there SHALL be no interdependencies between the different entries in the Bundle that cause change on the server. The success or failure of one change SHOULD not alter the success or failure or resulting content of another change. -- <a href=\"https://www.hl7.org/fhir/http.html#brules\">https://www.hl7.org/fhir/http.html#brules</a></p>\n</blockquote>\n<p>I would recommend to always use a transaction bundle for changes. However, if I change the bundle type to transaction, the Location <code>Location-HIVSimple</code> can't be created because the <code>managingOrganization</code> reference points to <code>Organization/Organization-HIVSimple</code> which will not be the identity of the Organization you also create in this bundle, because you use POST. At POST the server will generate the ID. However, if you use the fullUrl of the bundle entries as references, you can reference resources even if they will be assigned different IDs from the server. The bundle <a href=\"https://gist.github.com/alexanderkiel/c8bd1568efa39ebf187461623ed37e54\">https://gist.github.com/alexanderkiel/c8bd1568efa39ebf187461623ed37e54</a> works with Blaze.</p>\n<p>I tried the same with HAPI and your bundle as transaction bundle works correctly with HAPI but my version with the fullUrl references do not work. I will read the section on <a href=\"https://www.hl7.org/fhir/bundle.html#references\">resolving references in bundles</a> tomorrow again. I had this before. I'm not sure if my interpretation of the spec is right. I would be happy if you could help me here.</p>",
        "id": 248658206,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1628278468
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"197470\">@Alexander Kiel</span> this is super helpful. I would not be surprised that the issue comes down to me not being great at FHIR :) I'll have a go!</p>",
        "id": 248658881,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1628278815
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"197470\">@Alexander Kiel</span> I'm troubleshooting an issue when issuing the $evaluate-measure operation to Blaze: </p>\n<div class=\"codehilite\"><pre><span></span><code>{&quot;issue&quot;:[{&quot;severity&quot;:&quot;error&quot;,&quot;code&quot;:&quot;value&quot;,&quot;diagnostics&quot;:&quot;Could not load source for library FHIRCommon, version 4.0.1...\n</code></pre></div>\n<p>I can confirm that the CQL source is in the Library, which is on the server. Have you seen this before in Blaze? I see other issues with Publisher building/referencing proper CQL in Library resources but I wanted to check if this could be a Blaze thing.</p>",
        "id": 249054486,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1628640615
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194192\">@Richard Stanley</span> Do you reference the FHIRCommon library from your library? Currently Blaze doesn't support library references except for some hard codes functions from FHIRHelpers.</p>",
        "id": 249083212,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1628672042
    },
    {
        "content": "<p>That's exactly right. I'm referencing another CQL/Library. Thanks for the clarification!</p>",
        "id": 249125325,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1628696217
    },
    {
        "content": "<p>Quick point of clarification. Is FHIR Helpers (and Model-Info) required to be put on the server or is it there already? I've been PUTting them but if its not necessary then I can relax that requirement.</p>",
        "id": 249125480,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1628696286
    },
    {
        "content": "<p>Yes, it's not required to upload model-info and FHIRHelpers. Unlike in HAPI were it is required. Overall, since Blaze itself only support R4 in the moment, the model is constraint to R4 too. If you need more functions in FHIRHelpers, I can implement them without problem.</p>",
        "id": 249220718,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1628766409
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"197470\">@Alexander Kiel</span> I'm getting further. Curious if you have advice on this, I'm seeing an odd error, \"error\",\"code\":\"not-found\", on a simple CQL file with $evaluate-measure.<br>\nEdit: I'm being dumb, wasn't paying attention to url encoding. :)</p>",
        "id": 249273764,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1628792867
    },
    {
        "content": "<p>@Richard Ok that was a simple 404, or? If you have suggestions for better error messages, I‘ll implement them.</p>",
        "id": 249275914,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1628793963
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197470\">@Alexander Kiel</span> Is the 'subject' parameter supported on $evaluate-measure at this time? I see an error with it. </p>\n<div class=\"codehilite\"><pre><span></span><code>$ curl -sXPOST &#39;http://localhost:8080/fhir/Measure/BlazeStratifierTest/$evaluate-measure?periodStart=1970&amp;periodEnd=2030&amp;subject=C6Z4H2E5VIJ7BPCU&#39;\njava.util.concurrent.CompletionException: java.lang.IllegalArgumentException: No matching clause: subject\n    at java.base/java.util.concurrent.CompletableFuture.encodeThrowable(Unknown Source)\n    at java.base/java.util.concurrent.CompletableFuture.completeThrowable(Unknown Source)\n    at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\n    at java.base/java.lang.Thread.run(Unknown Source)\n</code></pre></div>",
        "id": 249422955,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1628894857
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194192\">@Richard Stanley</span> No it's not supported. Can you please write an issue?</p>",
        "id": 249475875,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1628972299
    },
    {
        "content": "<p>Yep, will do! Thanks</p>",
        "id": 249476161,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1628972874
    }
]