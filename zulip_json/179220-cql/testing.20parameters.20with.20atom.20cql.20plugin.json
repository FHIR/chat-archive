[
    {
        "content": "<p>How does one pass parameter values when testing a library in the cql plugin in Atom?</p>",
        "id": 234614082,
        "sender_full_name": "Aziz Boxwala",
        "timestamp": 1618459633
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"195129\">@Aziz Boxwala</span> ,</p>\n<p>Passing parameters is currently not supported in the Atom plugin but it's on the backlog. Currently the easiest workaround is to set a default parameter in the CQL directly, like so:</p>\n<div class=\"codehilite\" data-code-language=\"cql\"><pre><span></span><code>parameter \"Measurement Period\" Interval&lt;DateTime&gt;\n  default Interval[@2019-01-01T00:00:00.0, @2020-01-01T00:00:00.0)\n</code></pre></div>",
        "id": 234620555,
        "sender_full_name": "JP",
        "timestamp": 1618465625
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"194178\">@JP</span></p>",
        "id": 234675926,
        "sender_full_name": "Aziz Boxwala",
        "timestamp": 1618493829
    },
    {
        "content": "<p>Hi, I was also looking for how to pass parameter values to the <code>cql-execution</code>. <br>\nThe only solution I found is to set a default parameter in the CQL directly before translation.</p>",
        "id": 234832524,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1618570287
    },
    {
        "content": "<p>It's possible to pass parameters to <code>cql-execution</code>.  I don't know how well it works if the parameter is a complex type from the FHIR data model, but if it's one of the CQL system types, it definitely ought to work.  See: <a href=\"https://github.com/cqframework/cql-execution/blob/master/OVERVIEW.md#executing-cql-libraries\">https://github.com/cqframework/cql-execution/blob/master/OVERVIEW.md#executing-cql-libraries</a></p>",
        "id": 234843110,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1618575753
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"376706\">@Vasil Herman</span></p>",
        "id": 234843124,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1618575763
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> Thanks! you are amazing! I'll test it later. It's exactly what I was looking for! How could I miss it <span aria-label=\"nerd\" class=\"emoji emoji-1f913\" role=\"img\" title=\"nerd\">:nerd:</span></p>",
        "id": 234986529,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1618663877
    },
    {
        "content": "<p>You're welcome.  We need to improve our documentation. It's easy to look at the README and assume that's it and miss the OVERVIEW.  Unfortunately, you're probably not the first person to miss it.  But I'm glad it looks like it does what you need!</p>",
        "id": 235001587,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1618678083
    },
    {
        "content": "<p>Is there a way to define a FHIR resource as a literal in CQL (for testing)?  The library is used in an ECA rule. The parameter is the med request that triggers the rule. I want to use the default value for testing purposes.</p>",
        "id": 235261458,
        "sender_full_name": "Aziz Boxwala",
        "timestamp": 1618872591
    },
    {
        "content": "<p>Yes, you use an Instance selector. Here's an example from OpioidCDSR4: <a href=\"https://github.com/cqframework/opioid-cds-r4/blob/develop/input/pagecontent/cql/OpioidCDSREC11PatientView.cql#L69\">https://github.com/cqframework/opioid-cds-r4/blob/develop/input/pagecontent/cql/OpioidCDSREC11PatientView.cql#L69</a></p>",
        "id": 235265237,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1618874856
    },
    {
        "content": "<p>And here's an example of building a Composition:</p>\n<div class=\"codehilite\"><pre><span></span><code>define &quot;eICR Composition&quot;:\n  Composition {\n    id: id { value: &#39;XXX&#39; },\n    identifier:\n      Identifier {\n        system: uri { value: &#39;urn:ieft:rfc:3986&#39; },\n        value: string { value: &#39;xxx&#39; }\n      },\n    status: CompositionStatus { value: &#39;final&#39; },\n    type: DocumentType,\n    category: { DocumentCategory },\n    subject: ReferenceTo(Patient),\n    encounter: ReferenceTo(Encounter),\n    date: dateTime { value: Now() },\n    author: { ReferenceTo(Author) },\n    title: String(DocumentType.text),\n    section: {\n      &quot;History of Present Illness Section&quot;,\n      &quot;Reason for Visit Section&quot;\n    }\n  }\n</code></pre></div>",
        "id": 235265313,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1618874885
    },
    {
        "content": "<p>You have to construct the values as FHIR types, FHIRHelpers doesn't go the other direction, so instead of just providing a string, you have to construct a FHIR <code>string</code>: <code>string { value: 'the string' }</code></p>",
        "id": 235265404,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1618874961
    },
    {
        "content": "<p>You could pretty easily imagine some FHIRHelpers along those lines, but I haven't built those out.</p>",
        "id": 235265421,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1618874980
    },
    {
        "content": "<p>Thanks Bryn. This will do the trick.</p>",
        "id": 235285167,
        "sender_full_name": "Aziz Boxwala",
        "timestamp": 1618892320
    }
]