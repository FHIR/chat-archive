[
    {
        "content": "<p>The docs for the <a href=\"https://cql.hl7.org/09-b-cqlreference.html#difference\" target=\"_blank\" title=\"https://cql.hl7.org/09-b-cqlreference.html#difference\">difference</a> and <a href=\"https://cql.hl7.org/09-b-cqlreference.html#duration\" target=\"_blank\" title=\"https://cql.hl7.org/09-b-cqlreference.html#duration\">duration</a> operators say the result type is always an <code>Integer</code>. However, one of the examples on each operation makes it seem like it might return an <code>Interval&lt;Integer&gt;</code> for imprecise comparisons. Specifically:</p>\n<div class=\"codehilite\"><pre><span></span>define UncertainDifferenceInMonths: difference in months between @2012-01-02 and @2012 // [0, 11]\ndefine UncertainDurationInMonths: months between @2012-01-02 and @2012 // [0, 10]\n</pre></div>",
        "id": 180566280,
        "sender_full_name": "Zach Smith",
        "timestamp": 1573595632
    },
    {
        "content": "<p>Uncertainty is used to get more intuitive semantics in cases where partial date time comparisons would otherwise result in null. So an implementation can return null if it doesn't support the uncertainty calculations, or it can use implicit conversions to make the uncertainties transparent to authors: <a href=\"https://cql.hl7.org/05-languagesemantics.html#implicit-conversion\" target=\"_blank\" title=\"https://cql.hl7.org/05-languagesemantics.html#implicit-conversion\">https://cql.hl7.org/05-languagesemantics.html#implicit-conversion</a></p>",
        "id": 180567409,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1573596330
    },
    {
        "content": "<p>I see, so those comments represent an uncertainty. That makes sense, thanks</p>",
        "id": 180568162,
        "sender_full_name": "Zach Smith",
        "timestamp": 1573596943
    },
    {
        "content": "<p>Is the concept of uncertainty represented in the type system at all in CQL?</p>",
        "id": 180568224,
        "sender_full_name": "Zach Smith",
        "timestamp": 1573596965
    },
    {
        "content": "<p>or is the type of <code>uncertainty[0, 10]</code> just an <code>Integer</code>?</p>",
        "id": 180568264,
        "sender_full_name": "Zach Smith",
        "timestamp": 1573597003
    },
    {
        "content": "<p>No, itâ€™s intentionally not surfaced in the type system so that implementations can choose whether to support it, though currently both the JavaScript and java reference implementations do support it. So yes, from the type perspective, the type of an uncertainty over integers is integer.</p>",
        "id": 180568648,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1573597310
    },
    {
        "content": "<p>Got it, thanks Bryn!</p>",
        "id": 180569141,
        "sender_full_name": "Zach Smith",
        "timestamp": 1573597699
    }
]