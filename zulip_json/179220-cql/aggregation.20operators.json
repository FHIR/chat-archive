[
    {
        "content": "<p>Hello, I have a CQL problem using the aggregation operators. The documentation says that \"If a path is specified, the count returns the number of elements that have a value for the property specified by the path.\". What happens if the path traverses array fields ? Do all elements in this array have to have a value for the rest of the path, or only one ?<br>\nAnother problem I have with the semantics of the aggregation operators is the scope of the aggregation. Taking as example the CQL query \"[Patient] A where Count(A.name.given) &gt; 1 return A\". The query could either return all patients with more than one name that has at least one given name, or all patient with at least one name having more than one given name. It could be assumed that the scope gets set by default to the source given in the operator. How would a query look like that defines as scope a part of the path (<a href=\"http://A.name\" target=\"_blank\" title=\"http://A.name\">A.name</a>) and not the source (A) ?</p>",
        "id": 160278327,
        "sender_full_name": "Georg Fette",
        "timestamp": 1552040951
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"196537\">@Georg Fette</span>.  I'm not entirely sure I understand your question, but in regard to your example:</p>\n<div class=\"codehilite\"><pre><span></span>[Patient] A where Count(A.name.given) &gt; 1 return A\n</pre></div>\n\n\n<p>I agree that due to the path-traversal approach that was added for fhirpath, this could be \"all patients with more than one name that has at least one given name, or all patient with at least one name having more than one given name.\"</p>\n<p>If you want to be more specific, I think you'll need to do so via more complex queries.  For example:</p>\n<div class=\"codehilite\"><pre><span></span>// all patients with more than one name that has at least one given name\n[Patient] A where Count((A.name) N where Count(N.given) &gt; 0) &gt; 1\n</pre></div>\n\n\n<p>and</p>\n<div class=\"codehilite\"><pre><span></span>// all patients with at least one name having more than one given name\n[Patient] A where exists((A.name) N where Count(N.given) &gt; 1)\n</pre></div>\n\n\n<p>I didn't compile and test the CQL above, but I think it portrays the point.  Does that help?  Or did I miss the intent of the question?</p>",
        "id": 160323066,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1552077202
    },
    {
        "content": "<p>ah, those two alternatives would solve the ambiguity. Thank you.</p>",
        "id": 160323619,
        "sender_full_name": "Georg Fette",
        "timestamp": 1552077659
    }
]