[
    {
        "content": "<p>Is there any way to pass a value set as a parameter to a function?</p>\n<p>The spec gives tantalizing hints such as the use of type names  ValueSet and  ValueSetRef as type names in the function documentation in section 12.8, but my language implementation doesn't seem to like these types.  If it's not possible to do this, what's the rationale for not being able to pass a value set as a parameter?</p>",
        "id": 206405600,
        "sender_full_name": "Frank Adrian",
        "timestamp": 1596996613
    },
    {
        "content": "<p>The rationale for static declaration of terminology is to permit static analysis of data requirements, including terminology. Having said that, in the latest ballot (CQL 1.5), we did introduce terminology references as first class data types, so you can now pass valuesets and codesystems by reference. See the new <a href=\"https://cql.hl7.org/2020May/09-b-cqlreference.html#vocabulary\">Vocabulary</a> type for more information.</p>",
        "id": 206548669,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1597132272
    },
    {
        "content": "<p>So  one would use a parameter of type Vocabulary, using the value set name and version and pass it into the function? And then one would reference the Vocabulary where a value set  was allowed? And the same for code systems? That's great, if that's what's envisioned.</p>",
        "id": 206579563,
        "sender_full_name": "Frank Adrian",
        "timestamp": 1597155101
    },
    {
        "content": "<p>Yes, Vocabulary if you want to allow a CodeSystem or ValueSet, and then yes, that reference can be used anywhere a terminology reference is required.</p>",
        "id": 206590899,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1597160388
    },
    {
        "content": "<p>The current 1.5.0-SNAPSHOT of the translator has that implemented if you want to try it out.</p>",
        "id": 206590986,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1597160416
    }
]