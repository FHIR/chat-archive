[
    {
        "content": "<p>Is there a CQL equivalent of the ELM expressions <a href=\"https://cql.hl7.org/04-logicalspecification.html#subsumedby\" target=\"_blank\" title=\"https://cql.hl7.org/04-logicalspecification.html#subsumedby\">SubsumedBy</a> and Subsumes?</p>",
        "id": 186893011,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1580310131
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"197470\">@Alexander Kiel</span>, yes, the current translator will recognize <code>(Code, Code)</code> and <code>(Concept, Concept)</code> overloads of both <code>Subsumes</code> and <code>SubsumedBy</code>, though the signatures are documented in the reference; we are still working out how they actually map underneath, so we haven't surfaced them all the way to CQL yet.</p>",
        "id": 186896507,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1580312187
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> Would you recommend to search for example for Conditions with ICD10 codings assuming there is a hierarchical ICD10 code system with super codes like <code>C25</code> or would you rather use ValueSets containing alls C25 codes like <code>C25.1</code> ... <code>C25.9</code>?</p>",
        "id": 186896943,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1580312435
    },
    {
        "content": "<p>We typically do that with value sets today, but that's based on the fact that terminology servers with the capability to perform that expansion are not widespread. To make sure that decision is possible as an implementation decision, we would suggest using a ValueSet either way, and defining the value set with an expression using the hierarchy in the code system, but supporting a \"cached\" version that enumerates the codes for use in environments without terminology servers capable of computing that expansion. See some documentation <a href=\"http://build.fhir.org/ig/HL7/cqf-recommendations/documentation-terminology.html\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/cqf-recommendations/documentation-terminology.html\">here</a> on this very question.</p>",
        "id": 186900208,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1580314266
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> To reiterate on this topic, in FHIR Search it is possible to add the modifier <code>:below</code> to a search parameter say <code>clinical-code</code>. With that one could search like this:</p>\n<div class=\"codehilite\"><pre><span></span>[base]/Condition?code:below=http://fhir.de/CodeSystem/dimdi/icd-10-gm|C25\n</pre></div>\n\n\n<p>and should return all Conditions with a code of <code>C25</code> or below like <code>C25.1</code>.</p>\n<p>For the Retrieve expression, I only see the possibility to specify one ore more codes possibly through a valueset reference. Given that a server has an index for <code>:below</code> codes, it would be faster to search resources containing a code, which is below the search code, as it would be to iterate over all codes in a valueset and perform an or-search over all of them.</p>\n<p>I don't know whether any FHIR servers support <code>:below</code>. I tested Vonk, HAPI and Grahames servers and they don't support it. But it is in the FHIR search spec and perhaps it would be a good idea to enable to use it from CQL. So a direct mapping to FHIR search is possible. What do you think about it? Maybe too much of a performance optimization?</p>",
        "id": 190517742,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1584113989
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197470\">@Alexander Kiel</span>, I'm not sure exactly what you're proposing (whether a way to directly associate specific FHIR search queries or a more general capability of specifying subsumption), but in case it is relevant: CQL has considered subsumption in the past.  Here is a snippet from the current spec regarding that:</p>\n<blockquote>\n<p>A common terminological operation involves determining whether a given concept is implied, or subsumed by another. This operation is generally referred to as subsumption and although useful, is deliberately omitted from this specification. The reason for this omission different terminology systems generally provide different mechanisms for defining and interpreting subsumption relationships. As a result, specifying how that occurs is beyond the scope of CQL at this time. This is not to say that a specific library of subsumption operators could not be provided and broadly adopted and used, only that the CQL specification does not prescribe the semantics of that operation.</p>\n</blockquote>",
        "id": 190519055,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1584114639
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> Yes I propose a capability to specify subsumption on Retrieve expressions. I also know the disclaimer on terminology operations like subsumption. In our project we need to be able to search for categories of ICD-10 concepts. We also have a need for a performant implementation because we implement ad-hoc queries which should be answered in seconds. So I simply search for the best way to implement such subsumptions. CQL only supports the use of having a valueset for each category of ICD-10 concepts. I hoped that I can somehow use a mode in Retrieve which operates like <code>:below</code> in FHR search, because I have an idea to implement <code>:below</code> in a more performant way than searching for all codes in a valueset in succession.</p>",
        "id": 190522093,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1584115959
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197470\">@Alexander Kiel</span> , this may be a bit roundabout, but the ValueSet resource does support description of a ValueSet using the below operation, and so you could define a ValueSet to support the search and then reference that ValueSet in the retrieve. The implementation could detect that. It's not very dynamic, but it would be possible. We are adding as part of the ballot the ability to specify include and reverseInclude aspects of a retrieve. Would also welcome ideas about what a :below or :above modifier might look like in a Retrieve. Do you have any specific examples to work with?</p>",
        "id": 190791999,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1584400760
    }
]