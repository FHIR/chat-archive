[
    {
        "content": "<p>In <em>theory</em> it should be possible to generate code that reflects the constraints on resources as defined in the FHIR definition files.  According to the documentation, the expressions are defined in FHIRPath, which is itself a subset of CQL.  What I would like to do is use the CQL-to-ELM translator to generate an ELM tree for each of the constraints and then use that tree to generate code in a target language.  By doing this we can automate code generation and make sure that it actually matches the definitions as much as possible.  Has anyone tried this?  Is this possible?  Am I wasting my time?</p>",
        "id": 153929832,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1516499049
    },
    {
        "content": "<p>The build tool parses them all to an ast, and evaluates them, but doesn’t do any code generation. I don’t know of anyone who has done that. Btw, you can use the java ast if you want (if you’re using java)</p>",
        "id": 153929836,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516504130
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> can you point me at the code the build tool uses to parse the constraints?</p>",
        "id": 153929857,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1516523216
    },
    {
        "content": "<p>org.hl7.fhir.r4.model.ExpressionNode and org.hl7.fhir.r4.utils.FHIRPathEngine</p>",
        "id": 153929858,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516524645
    },
    {
        "content": "<p>Weird... there are constraints that look like this <code>hasValue() | (children().count() &gt; id.count())</code> all over the place, but I can't find a definition of <code>hasValue()</code> in the FHIRPath specification (<a href=\"http://hl7.org/fhirpath/\" target=\"_blank\" title=\"http://hl7.org/fhirpath/\">http://hl7.org/fhirpath/</a>).</p>",
        "id": 153929874,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1516574257
    },
    {
        "content": "<p>hmm. that's something we haven't quite figured out; it's technically a feature of the primitive types in FHIR</p>",
        "id": 153929875,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516575199
    },
    {
        "content": "<p>So is <code>hasValue()</code> really just checking to see if the Element is a primitive?</p>",
        "id": 153929876,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1516575355
    },
    {
        "content": "<p>no. better to explain it in terms of an element</p>",
        "id": 153929877,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516575429
    },
    {
        "content": "<p>&lt;status value=\"active\"/&gt;</p>",
        "id": 153929878,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516575441
    },
    {
        "content": "<p>hasValue() == true</p>",
        "id": 153929879,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516575444
    },
    {
        "content": "<p>&lt;status&gt;&lt;extension url=\"balh\"&gt;&lt;valueCode value=\"blah\"/&gt;&lt;/extension/&gt;&lt;/status&gt;</p>",
        "id": 153929880,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516575473
    },
    {
        "content": "<p>hasValue() == false</p>",
        "id": 153929881,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516575480
    },
    {
        "content": "<p>I see, there are a few things that aren't primitives, but do have a <code>value</code>.</p>",
        "id": 153929886,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1516577657
    },
    {
        "content": "<p>What would <code>hasValue()</code> evaluate to for <code>&lt;extension url=\"foo\"&gt;&lt;valueCode=\"bar\"/&gt;&lt;/extension&gt;</code>?</p>",
        "id": 153929887,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1516577959
    },
    {
        "content": "<p>Shouldn't that constraint be something like <code>hasValue() or (children().count() &gt; 0)</code>?  What does the <code>id.count()</code> have to do with it?</p>",
        "id": 153929888,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1516579134
    },
    {
        "content": "<p>hasValue() returns null on Extension because it's not a primitive</p>",
        "id": 153929895,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516584904
    },
    {
        "content": "<p>what's the context of this constraint?</p>",
        "id": 153929896,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516584922
    },
    {
        "content": "<p>I'm talking about the <code>ele-1</code> constraint from <code>Element</code> (<code>hasValue() | (children().count() &gt; id.count())</code>).  It's not clear to me why <code>children().count() &gt; id.count()</code> is used instead of <code>children().count() &gt; 0</code>.</p>",
        "id": 153929898,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1516596804
    },
    {
        "content": "<p>oh because it can have an id but that doesn't as content. So there must be at least one more child than the the count of id (which will be 0 or 1)</p>",
        "id": 153929899,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516596950
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> so if I wanted to use the <code>cql-to-elm</code> translator to generate an <code>ELM</code> tree for the <code>ele-1</code> constraint, how would I go about doing it?       --- (BTW... it took longer than I care to admit for me to realize that the <code>ELM</code> here is not the <code>elm</code> programming language)</p>",
        "id": 153929939,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1516633561
    },
    {
        "content": "<p>Simplest way would be to take the ele-1 constraint and put it in a .cql file and call the command-line translator on it. There's context though, so you would need to set up a library to express the definition, something like this:</p>",
        "id": 153930120,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1516652911
    },
    {
        "content": "<p><code>library \"ele-1\"\nusing FHIR version '3.0.0'\nparameter Context Patient\ndefine Constraint: &lt;content of the ele-1 constraint&gt;</code></p>",
        "id": 153930121,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1516652965
    },
    {
        "content": "<p>I'll give that a try, thanks!</p>",
        "id": 153930124,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1516654439
    },
    {
        "content": "<p>if I send this... </p>\n<div class=\"codehilite\"><pre><span></span>library &quot;ele-1&quot;\n\nusing FHIR version &#39;3.0.0&#39;\nparameter Context Patient\ndefine Constraint:\n    hasValue() | (children().count() &gt; id.count())\n</pre></div>\n\n\n<p>To the cql-to-elm translator docker container I get this in response...</p>\n<div class=\"codehilite\"><pre><span></span>{\n    &quot;library&quot;: {\n        &quot;annotation&quot;: [\n            {\n                &quot;startLine&quot;: 6,\n                &quot;startChar&quot;: 2,\n                &quot;endLine&quot;: 6,\n                &quot;endChar&quot;: 11,\n                &quot;message&quot;: &quot;Could not resolve call to operator hasValue with signature ().&quot;,\n                &quot;errorType&quot;: &quot;semantic&quot;,\n                &quot;errorSeverity&quot;: &quot;error&quot;,\n                &quot;type&quot;: &quot;CqlToElmError&quot;\n            }\n        ],\n        &quot;identifier&quot;: {\n            &quot;id&quot;: &quot;ele-1&quot;\n        },\n        &quot;schemaIdentifier&quot;: {\n            &quot;id&quot;: &quot;urn:hl7-org:elm&quot;,\n            &quot;version&quot;: &quot;r1&quot;\n        },\n        &quot;usings&quot;: {\n            &quot;def&quot;: [\n                {\n                    &quot;localIdentifier&quot;: &quot;System&quot;,\n                    &quot;uri&quot;: &quot;urn:hl7-org:elm-types:r1&quot;\n                },\n                {\n                    &quot;localId&quot;: &quot;1&quot;,\n                    &quot;localIdentifier&quot;: &quot;FHIR&quot;,\n                    &quot;uri&quot;: &quot;http://hl7.org/fhir&quot;,\n                    &quot;version&quot;: &quot;3.0.0&quot;\n                }\n            ]\n        },\n        &quot;parameters&quot;: {\n            &quot;def&quot;: [\n                {\n                    &quot;localId&quot;: &quot;3&quot;,\n                    &quot;name&quot;: &quot;Context&quot;,\n                    &quot;accessLevel&quot;: &quot;Public&quot;,\n                    &quot;parameterTypeSpecifier&quot;: {\n                        &quot;localId&quot;: &quot;2&quot;,\n                        &quot;name&quot;: &quot;{http://hl7.org/fhir}Patient&quot;,\n                        &quot;type&quot;: &quot;NamedTypeSpecifier&quot;\n                    }\n                }\n            ]\n        },\n        &quot;statements&quot;: {...\n</pre></div>",
        "id": 153930129,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1516655023
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> looks like this doesn't work as expected.  Any idea how to correct this?  It seems like I'm just missing some definitions, but I have no idea where to find them.</p>",
        "id": 153930325,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1516724071
    },
    {
        "content": "<p>Since it is a constraint, it needs to be evaluated in the context of the definition, so it needs a bit more setup:</p>",
        "id": 153930329,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1516724610
    },
    {
        "content": "<p>I'll log this as an issue and get it running in the translator. hasValue() in particular it looks like is missing, I may need to add that to FHIR Helpers.</p>",
        "id": 153930337,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1516724891
    },
    {
        "content": "<p>Awesome! Thanks!</p>",
        "id": 153930338,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1516724922
    }
]