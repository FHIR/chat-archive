[
    {
        "content": "<p>Hello guys, I am trying to build a simple node.js app using cql-exec-fhir library.<br>\nThe problem is that I am not sure if my ELM file is correct. I did try both <a href=\"https://github.com/cqframework/clinical_quality_language/tree/master/Src/java#generate-an-elm-representation-of-cql-logic\">cql-to-elm</a> as well as <a href=\"https://github.com/cqframework/cql-translation-service#docker-deployment\">cql-translation-service</a> as a docker container from <code>cqframework</code> registry.<br>\nMy goal is to be able to execute a simple <code>.cql</code> file using <code>cql-execution</code>, <code>cql-exec-fhir</code>, <code>cql-exec-vsac</code> libraries and one of available ways to translate a <code>cql</code> file to <code>ELM</code> (JSON). <br>\nMy simple <a href=\"https://github.com/PrettySolution/cql-exec-fhir-example\">app</a></p>\n<div class=\"codehilite\" data-code-language=\"JavaScript\"><pre><span></span><code><span class=\"kr\">const</span> <span class=\"nx\">fs</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">\"fs\"</span><span class=\"p\">);</span>\n<span class=\"kr\">const</span> <span class=\"nx\">path</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">\"path\"</span><span class=\"p\">);</span>\n<span class=\"kr\">const</span> <span class=\"nx\">cql</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">\"cql-execution\"</span><span class=\"p\">);</span>\n<span class=\"kr\">const</span> <span class=\"nx\">cqlfhir</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">\"cql-exec-fhir\"</span><span class=\"p\">);</span>\n<span class=\"kr\">const</span> <span class=\"nx\">cqlvsac</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"s2\">\"cql-exec-vsac\"</span><span class=\"p\">);</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">elmFile</span> <span class=\"o\">=</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">parse</span><span class=\"p\">(</span><span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nx\">readFileSync</span><span class=\"p\">(</span>\n    <span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"nx\">__dirname</span><span class=\"p\">,</span> <span class=\"s1\">'r4'</span><span class=\"p\">,</span> <span class=\"s1\">'gender.json'</span><span class=\"p\">),</span><span class=\"s1\">'utf8'</span><span class=\"p\">));</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">libraries</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"nx\">FHIRHelpers</span><span class=\"o\">:</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">parse</span><span class=\"p\">(</span><span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nx\">readFileSync</span><span class=\"p\">(</span>\n        <span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"nx\">__dirname</span><span class=\"p\">,</span> <span class=\"s1\">'r4'</span><span class=\"p\">,</span> <span class=\"s1\">'FHIRHelpers.json'</span><span class=\"p\">),</span> <span class=\"s1\">'utf8'</span><span class=\"p\">))</span>\n<span class=\"p\">};</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">fhirBundle</span> <span class=\"o\">=</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">parse</span><span class=\"p\">(</span><span class=\"nx\">fs</span><span class=\"p\">.</span><span class=\"nx\">readFileSync</span><span class=\"p\">(</span>\n    <span class=\"nx\">path</span><span class=\"p\">.</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"nx\">__dirname</span><span class=\"p\">,</span> <span class=\"s1\">'r4'</span><span class=\"p\">,</span> <span class=\"s1\">'Johnnie679.json'</span><span class=\"p\">),</span><span class=\"s1\">'utf8'</span><span class=\"p\">));</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">codeService</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">cqlvsac</span><span class=\"p\">.</span><span class=\"nx\">CodeService</span><span class=\"p\">(</span><span class=\"nx\">path</span>\n    <span class=\"p\">.</span><span class=\"nx\">join</span><span class=\"p\">(</span><span class=\"nx\">__dirname</span><span class=\"p\">,</span> <span class=\"s1\">'r4'</span><span class=\"p\">,</span> <span class=\"s1\">'valueset'</span><span class=\"p\">),</span><span class=\"kc\">true</span><span class=\"p\">);</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">library</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">cql</span><span class=\"p\">.</span><span class=\"nx\">Library</span><span class=\"p\">(</span><span class=\"nx\">elmFile</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"nx\">cql</span><span class=\"p\">.</span><span class=\"nx\">Repository</span><span class=\"p\">(</span><span class=\"nx\">libraries</span><span class=\"p\">));</span>\n<span class=\"c1\">// const library = new cql.Library(elmFile);</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">executor</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">cql</span><span class=\"p\">.</span><span class=\"nx\">Executor</span><span class=\"p\">(</span><span class=\"nx\">library</span><span class=\"p\">,</span> <span class=\"nx\">codeService</span><span class=\"p\">);</span>\n<span class=\"c1\">// const executor = new cql.Executor(library);</span>\n\n<span class=\"nx\">patientSource</span> <span class=\"o\">=</span> <span class=\"nx\">cqlfhir</span><span class=\"p\">.</span><span class=\"nx\">PatientSource</span><span class=\"p\">.</span><span class=\"nx\">FHIRv400</span><span class=\"p\">();</span>\n\n<span class=\"nx\">patientSource</span><span class=\"p\">.</span><span class=\"nx\">loadBundles</span><span class=\"p\">([</span><span class=\"nx\">fhirBundle</span><span class=\"p\">]);</span>\n\n<span class=\"kr\">const</span> <span class=\"nx\">result</span> <span class=\"o\">=</span> <span class=\"nx\">executor</span><span class=\"p\">.</span><span class=\"nx\">exec</span><span class=\"p\">(</span><span class=\"nx\">patientSource</span><span class=\"p\">);</span>\n<span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">log</span><span class=\"p\">(</span><span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">(</span><span class=\"nx\">result</span><span class=\"p\">,</span> <span class=\"kc\">undefined</span><span class=\"p\">,</span> <span class=\"mf\">2</span><span class=\"p\">));</span>\n</code></pre></div>\n<p>I am trying to execute <code>gender.cql</code>:</p>\n<div class=\"codehilite\" data-code-language=\"SQL\"><pre><span></span><code><span class=\"n\">library</span> <span class=\"n\">EXM74</span> <span class=\"k\">version</span> <span class=\"s1\">'10.2.000'</span>\n\n\n<span class=\"k\">using</span> <span class=\"n\">FHIR</span> <span class=\"k\">version</span> <span class=\"s1\">'4.0.1'</span>\n\n<span class=\"n\">include</span> <span class=\"n\">FHIRHelpers</span> <span class=\"k\">version</span> <span class=\"s1\">'4.0.1'</span> <span class=\"k\">called</span> <span class=\"n\">FHIRHelpers</span>\n\n<span class=\"n\">context</span> <span class=\"n\">Patient</span>\n\n<span class=\"n\">define</span> <span class=\"ss\">\"Initial Population\"</span><span class=\"p\">:</span>\n    <span class=\"n\">Patient</span><span class=\"p\">.</span><span class=\"n\">gender</span> <span class=\"o\">=</span> <span class=\"s1\">'female'</span>\n\n<span class=\"n\">define</span> <span class=\"ss\">\"Denominator\"</span><span class=\"p\">:</span>\n    <span class=\"ss\">\"Initial Population\"</span>\n</code></pre></div>\n<p>I am getting an error:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>D:<span class=\"se\">\\g</span>it-cql-fhir<span class=\"se\">\\c</span>ql-exec-fhir-example&gt;node .\nFailed to find <span class=\"nb\">type</span> info <span class=\"k\">for</span> http://hl7.org/fhir/StructureDefinition/Patient\nD:<span class=\"se\">\\g</span>it-cql-fhir<span class=\"se\">\\c</span>ql-exec-fhir-example<span class=\"se\">\\n</span>ode_modules<span class=\"se\">\\c</span>ql-execution<span class=\"se\">\\l</span>ib<span class=\"se\">\\e</span>lm<span class=\"se\">\\r</span>eusable.js:159\n      <span class=\"nv\">functionDefs</span> <span class=\"o\">=</span> functionDefs.filter<span class=\"o\">(</span><span class=\"k\">function</span> <span class=\"o\">(</span>f<span class=\"o\">)</span> <span class=\"o\">{</span>\n                                  ^\n\nTypeError: Cannot <span class=\"nb\">read</span> property <span class=\"s1\">'filter'</span> of undefined\n    at FunctionRef.exec <span class=\"o\">(</span>D:<span class=\"se\">\\g</span>it-cql-fhir<span class=\"se\">\\c</span>ql-exec-fhir-example<span class=\"se\">\\n</span>ode_modules<span class=\"se\">\\c</span>ql-execution<span class=\"se\">\\l</span>ib<span class=\"se\">\\e</span>lm<span class=\"se\">\\r</span>eusable.js:159:35<span class=\"o\">)</span>\n    at FunctionRef.execute <span class=\"o\">(</span>D:<span class=\"se\">\\g</span>it-cql-fhir<span class=\"se\">\\c</span>ql-exec-fhir-example<span class=\"se\">\\n</span>ode_modules<span class=\"se\">\\c</span>ql-execution<span class=\"se\">\\l</span>ib<span class=\"se\">\\e</span>lm<span class=\"se\">\\e</span>xpression.js:59:21<span class=\"o\">)</span>\n    at D:<span class=\"se\">\\g</span>it-cql-fhir<span class=\"se\">\\c</span>ql-exec-fhir-example<span class=\"se\">\\n</span>ode_modules<span class=\"se\">\\c</span>ql-execution<span class=\"se\">\\l</span>ib<span class=\"se\">\\e</span>lm<span class=\"se\">\\e</span>xpression.js:73:24\n    at Array.map <span class=\"o\">(</span>&lt;anonymous&gt;<span class=\"o\">)</span>\n    at Equal.execArgs <span class=\"o\">(</span>D:<span class=\"se\">\\g</span>it-cql-fhir<span class=\"se\">\\c</span>ql-exec-fhir-example<span class=\"se\">\\n</span>ode_modules<span class=\"se\">\\c</span>ql-execution<span class=\"se\">\\l</span>ib<span class=\"se\">\\e</span>lm<span class=\"se\">\\e</span>xpression.js:72:28<span class=\"o\">)</span>\n    at Equal.exec <span class=\"o\">(</span>D:<span class=\"se\">\\g</span>it-cql-fhir<span class=\"se\">\\c</span>ql-exec-fhir-example<span class=\"se\">\\n</span>ode_modules<span class=\"se\">\\c</span>ql-execution<span class=\"se\">\\l</span>ib<span class=\"se\">\\e</span>lm<span class=\"se\">\\o</span>verloaded.js:81:23<span class=\"o\">)</span>\n    at Equal.execute <span class=\"o\">(</span>D:<span class=\"se\">\\g</span>it-cql-fhir<span class=\"se\">\\c</span>ql-exec-fhir-example<span class=\"se\">\\n</span>ode_modules<span class=\"se\">\\c</span>ql-execution<span class=\"se\">\\l</span>ib<span class=\"se\">\\e</span>lm<span class=\"se\">\\e</span>xpression.js:59:21<span class=\"o\">)</span>\n    at ExpressionDef.exec <span class=\"o\">(</span>D:<span class=\"se\">\\g</span>it-cql-fhir<span class=\"se\">\\c</span>ql-exec-fhir-example<span class=\"se\">\\n</span>ode_modules<span class=\"se\">\\c</span>ql-execution<span class=\"se\">\\l</span>ib<span class=\"se\">\\e</span>lm<span class=\"se\">\\r</span>eusable.js:57:61<span class=\"o\">)</span>\n    at ExpressionDef.execute <span class=\"o\">(</span>D:<span class=\"se\">\\g</span>it-cql-fhir<span class=\"se\">\\c</span>ql-exec-fhir-example<span class=\"se\">\\n</span>ode_modules<span class=\"se\">\\c</span>ql-execution<span class=\"se\">\\l</span>ib<span class=\"se\">\\e</span>lm<span class=\"se\">\\e</span>xpression.js:59:21<span class=\"o\">)</span>\n    at Executor.exec_patient_context <span class=\"o\">(</span>D:<span class=\"se\">\\g</span>it-cql-fhir<span class=\"se\">\\c</span>ql-exec-fhir-example<span class=\"se\">\\n</span>ode_modules<span class=\"se\">\\c</span>ql-execution<span class=\"se\">\\l</span>ib<span class=\"se\">\\r</span>untime<span class=\"se\">\\e</span>xecutor.js:87:58<span class=\"o\">)</span>\n</code></pre></div>\n<p>to reproduce it:</p>\n<ol>\n<li>clone my repo <a href=\"https://github.com/PrettySolution/cql-exec-fhir-example\">https://github.com/PrettySolution/cql-exec-fhir-example</a></li>\n<li><code>npm i</code></li>\n<li><code>node .</code><br>\nNode v14.15.4<br>\nnpm 6.14.10</li>\n</ol>\n<p>I would appreciate any help on this :)</p>",
        "id": 227257897,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1613996505
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"376706\">@Vasyl Herman</span> -- I don't see anything obviously wrong there.  I'll try to reproduce over here and see what happens!</p>",
        "id": 227269634,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1614002387
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> Thanks!<br>\nI have just noticed that I am using <code>patientSource = cqlfhir.PatientSource.FHIRv400();</code> in index.js and <code>using FHIR version '4.0.1'</code> in gender.cql. Kind of mismatching of FHIR versions. does it make difference?</p>",
        "id": 227271182,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1614003038
    },
    {
        "content": "<p>Good catch.  I <em>have</em> seen that make a difference before, but not usually resulting in an error like this.  So I would recommend fixing it, but I don't expect it to resolve this particular issue.</p>",
        "id": 227271357,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1614003118
    },
    {
        "content": "<p>I think the issue was that your CQL was using FHIR 4.0.1, but you included the FHIRHelpers for FHIR 4.0.0.  I pushed up a PR that fixes this and also adds a gradle script for running CQL-to-ELM (which I find helpful in my own projects).  See: <a href=\"https://github.com/PrettySolution/cql-exec-fhir-example/pull/1\">https://github.com/PrettySolution/cql-exec-fhir-example/pull/1</a></p>",
        "id": 227274264,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1614004182
    },
    {
        "content": "<p>I have found that this line in gender.cql causes an error:</p>\n<div class=\"codehilite\" data-code-language=\"JavaScript\"><pre><span></span><code><span class=\"nx\">define</span> <span class=\"s2\">\"Initial Population\"</span><span class=\"o\">:</span>\n    <span class=\"nx\">Patient</span><span class=\"p\">.</span><span class=\"nx\">gender</span> <span class=\"o\">=</span> <span class=\"s1\">'female'</span>\n</code></pre></div>\n<p>I feel a lack of <code>cql</code> knowledge. <br>\nfor instance this definition works fine:</p>\n<div class=\"codehilite\" data-code-language=\"JavaScript\"><pre><span></span><code><span class=\"nx\">define</span> <span class=\"nx\">Is18OrOlder</span><span class=\"o\">:</span>\n  <span class=\"nx\">AgeInYears</span><span class=\"p\">()</span> <span class=\"o\">&gt;=</span> <span class=\"mf\">18</span>\n</code></pre></div>\n<p>The full <code>.cql</code> file:</p>\n<div class=\"codehilite\" data-code-language=\"JavaScript\"><pre><span></span><code><span class=\"nx\">library</span> <span class=\"nx\">PatientFinderExample</span> <span class=\"nx\">version</span> <span class=\"s1\">'1.0.0'</span>\n<span class=\"nx\">using</span> <span class=\"nx\">FHIR</span> <span class=\"nx\">version</span> <span class=\"s1\">'4.0.1'</span>\n<span class=\"nx\">include</span> <span class=\"nx\">FHIRHelpers</span> <span class=\"nx\">version</span> <span class=\"s1\">'4.0.1'</span> <span class=\"nx\">called</span> <span class=\"nx\">FHIRHelpers</span>\n<span class=\"nx\">context</span> <span class=\"nx\">Patient</span>\n<span class=\"nx\">define</span> <span class=\"nx\">Is18OrOlder</span><span class=\"o\">:</span>\n  <span class=\"nx\">AgeInYears</span><span class=\"p\">()</span> <span class=\"o\">&gt;=</span> <span class=\"mf\">18</span>\n</code></pre></div>\n<p>... and gives me expected result</p>",
        "id": 227274793,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1614004369
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"376706\">@Vasyl Herman</span> -- is this still happening after taking in my pull request?  Or was this from before that?</p>",
        "id": 227274994,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1614004443
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> before the PR. Let me take a look.</p>",
        "id": 227275205,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1614004509
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> Amazing!!!! It works now! Thank you!!!</p>",
        "id": 227276256,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1614004957
    },
    {
        "content": "<p>You're welcome!  As I said, I think it was the FHIRHelpers mismatch that was the issue.  Ideally we'd detect that in the framework and provide a more helpful error -- but for now I think you should be all set.</p>",
        "id": 227278053,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1614005684
    },
    {
        "content": "<p>Yes. the issue caused the <code>FHIRHelpers</code>! And I see here a <code>FHIRHelpers.cql</code> representation of  the <code>FHIRHelpers.json</code>. Well yes, It becomes much more clear to me now, how things work... thanks again. <br>\nBTW, Is it a good idea to use <a href=\"https://github.com/cqframework/cql-translation-service#docker-deployment\">cql-translation-service</a> ? I feel like it has some constrains, like not fully supported or something right? </p>\n<p>I am trying to send it <code>include MATGlobalCommonFunctions version '5.0.000' called Global</code> like so:</p>\n<div class=\"codehilite\" data-code-language=\"JavaScript\"><pre><span></span><code><span class=\"nx\">library</span> <span class=\"nx\">EXM74</span> <span class=\"nx\">version</span> <span class=\"s1\">'10.2.000'</span>\n\n<span class=\"nx\">using</span> <span class=\"nx\">FHIR</span> <span class=\"nx\">version</span> <span class=\"s1\">'4.0.1'</span>\n\n<span class=\"nx\">include</span> <span class=\"nx\">FHIRHelpers</span> <span class=\"nx\">version</span> <span class=\"s1\">'4.0.1'</span> <span class=\"nx\">called</span> <span class=\"nx\">FHIRHelpers</span>\n<span class=\"nx\">include</span> <span class=\"nx\">MATGlobalCommonFunctions</span> <span class=\"nx\">version</span> <span class=\"s1\">'5.0.000'</span> <span class=\"nx\">called</span> <span class=\"nx\">Global</span>\n</code></pre></div>\n<p>and It says me back <code>Could not load source for library MATGlobalCommonFunctions, version 5.0.000.</code></p>",
        "id": 227279875,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1614006387
    },
    {
        "content": "<p>The translation service is pretty capable, but one downside is that it always lags behind the translator versions a bit, because it needs to be manually updated whenever a new translator is released (and we usually forget until someone asks for it).</p>\n<p>As for MATGlobalCommonFunctions, that is not a library built into the translator -- so if you want to translate a library that depends on it, you need to send the MATGlobalCommonFunctions CQL in the same request using multi-part attachments.  I think JP provided some links for this in the other thread.</p>",
        "id": 227280843,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1614006765
    },
    {
        "content": "<p>Yes, I didn't understand what JP meant. Now I fell much better, thanks!</p>",
        "id": 227281299,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1614006946
    }
]