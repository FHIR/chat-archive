[
    {
        "content": "<p>I am trying to execute CQL using the CQF Ruler and the Swagger UI. The response that I am getting back is not what I am expecting. </p>\n<p>I am successfully posting to /$cql:<br>\ncurl -X 'POST' \\<br>\n  '<a href=\"http://localhost:8080/fhir/$cql\">http://localhost:8080/fhir/$cql</a>' \\<br>\n  -H 'accept: application/fhir+json' \\<br>\n  -H 'Content-Type: application/fhir+json' \\<br>\n  -d '{\"resourceType\":\"Parameters\",\"parameter\":[{\"name\":\"code\",\"valueString\":\"define \\\"Inequality Expression\\\":\\n  4 != 5\"}]}'</p>\n<p>The response status is 200 and the headers look good:<br>\nconnection: keep-alive <br>\n content-encoding: gzip <br>\n content-type: application/fhir+json;charset=UTF-8 <br>\n date: Mon,28 Mar 2022 22:06:21 GMT <br>\n keep-alive: timeout=60 <br>\n transfer-encoding: chunked <br>\n x-powered-by: HAPI FHIR 5.5.3 REST Server (FHIR Server; FHIR 4.0.1/R4) <br>\n x-request-id: Fw0yTyFbFncZIipZ </p>\n<p>But, I am getting a response body that looks like this: <br>\n{<br>\n  \"resourceType\": \"Parameters\",<br>\n  \"parameter\": [<br>\n    {<br>\n      \"name\": \"value\",<br>\n      \"valueString\": \"null\"<br>\n    },<br>\n    {<br>\n      \"name\": \"resultType\",<br>\n      \"valueString\": \"Null\"<br>\n    }<br>\n  ]<br>\n}</p>\n<p>How do I get the result of the executed CQL? Any help would be greatly appreciated!</p>",
        "id": 276939061,
        "sender_full_name": "Joel Montavon",
        "timestamp": 1648506853
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"440004\">@Joel Montavon</span> , the $cql operation lets you evaluate expressions of CQL, but the text you're providing is actually a declaration statement: <code>define InequalityExpression: 4 != 5</code>. The expression is just <code>4 != 5</code>. Also, the parameter is named <code>expression</code>, but it looks like you have <code>code</code> as the parameter name?</p>",
        "id": 276944166,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1648511686
    },
    {
        "content": "<p>It's definitely not a very helpful response, you really should be getting an error message about not providing the expected <code>expression</code> parameter.</p>",
        "id": 276944215,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1648511745
    },
    {
        "content": "<p>Thanks! I missed that. </p>\n<p>I'm not a JAVA programmer and looking for a way to evaluate CQL code on the fly for a node.js program. The <a href=\"https://github.com/DBCG/cql_execution_service\">cql_execution_service</a> is basically what I am looking for but has not been recently updated. Is the cql_execution_service not being maintained and the cqf-ruler is preferred going forward? I've also tried using the CQL-to-ELM translator to convert the CQL to ELM as JSON and then using <a href=\"https://github.com/cqframework/cql-execution\">cql-execution</a> to evaluate. However, this requires writing the CQL and ELM to disk and is slow. I haven't tried this yet but, instead of using $cql, it looks like I could load the CQL code as a library or measure and $evaluate or $evaluate-measure. What is the best way to execute CQL on the fly?</p>",
        "id": 277021380,
        "sender_full_name": "Joel Montavon",
        "timestamp": 1648567407
    },
    {
        "content": "<p>You could take a look at <a href=\"https://github.com/asbi-cds-tools/cql-worker\">cql-worker</a>, but this requires you to pre-translate your CQL to ELM since it uses the <a href=\"https://github.com/cqframework/cql-execution\">cql-execution-engine</a>.  It can work either in the browser or node.</p>",
        "id": 277033203,
        "sender_full_name": "David Winters",
        "timestamp": 1648572100
    },
    {
        "content": "<p>Yes, the cql_execution_service hasn't been updated in a while, we've been focused on CQF Ruler support, which does have a $cql implementation, so that's been our preferred approach for ad-hoc execution.</p>",
        "id": 277213510,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1648681129
    },
    {
        "content": "<p>Thanks for the responses! Are there any examples showing what the request body should look like for creating a library or measure in the cqf-ruler (i.e., POST /library or POST /measure)? For example, if I wanted to create a library with a single definition like define InequalityExpression: 4 != 5. I can't seem to figure it out from the <a href=\"https://cloud.alphora.com/sandbox/r4/cqm/fhir/swagger-ui/?page=Library#/Library/post_Library\">Swagger-UI</a> documentation or from the <a href=\"http://build.fhir.org/ig/HL7/cqf-recommendations/OperationDefinition-cpg-library-evaluate.html\">CQF recommendations</a>.</p>",
        "id": 277369078,
        "sender_full_name": "Joel Montavon",
        "timestamp": 1648786342
    },
    {
        "content": "<p>For putting CQL in a Library resource, you would just need to base64 encode your CQL and place it in <a href=\"http://Library.content.data\">Library.content.data</a>, as well as include a Library.status (as per FHIR spec), as well as setting Library.content.contentType as text/cql (don't know if this is required to evaluate CQL, but we use it to differentiate Libraries and its what example Libraries have looked like). For example, here's the FHIR Helpers Library in JSON: <a href=\"https://www.hl7.org/fhir/library-fhir-helpers.json.html\">https://www.hl7.org/fhir/library-fhir-helpers.json.html</a></p>",
        "id": 277415958,
        "sender_full_name": "Andy Stevens",
        "timestamp": 1648819136
    },
    {
        "content": "<p>To be clear, you don't need to put your CQL into a library resource to be able to execute it via the $cql operation in cqf-ruler. You certainly can and should if you have CQL that you are going to be executing repeatedly, but you also just pass in ad-hoc CQL and execute it without storing the code in a Library.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>curl --silent -k -X <span class=\"s1\">'POST'</span> <span class=\"se\">\\</span>\n<span class=\"s1\">'https://cloud.alphora.com/sandbox/r4/cqm/fhir/$cql'</span> <span class=\"se\">\\</span>\n-H <span class=\"s1\">'accept: application/fhir+json'</span> <span class=\"se\">\\</span>\n-H <span class=\"s1\">'Content-Type: application/fhir+json'</span> <span class=\"se\">\\</span>\n-d <span class=\"s1\">'{\"resourceType\":\"Parameters\",\"parameter\":[{\"name\":\"expression\",\"valueString\":\"4 != 5\"}]}'</span>\n</code></pre></div>\n<div class=\"codehilite\"><pre><span></span><code>{\n  &quot;resourceType&quot;: &quot;Parameters&quot;,\n  &quot;parameter&quot;: [ {\n    &quot;name&quot;: &quot;value&quot;,\n    &quot;valueString&quot;: &quot;true&quot;\n  }, {\n    &quot;name&quot;: &quot;resultType&quot;,\n    &quot;valueString&quot;: &quot;Boolean&quot;\n  } ]\n}\n</code></pre></div>",
        "id": 277418710,
        "sender_full_name": "Corey Sanders",
        "timestamp": 1648820217
    }
]