[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span>  We like to count Specimens using $evaluate-measure and CQL. If I understand the mechanics of $evaluate-measure correctly, we need to specify a context of Specimen in CQL in order to be able to have a <code>InInitialPopulation</code> expression which is a predicate of Specimen in this case. In the CQL Authors Guide v1.4.1 under 1.6 Context, the contexts Patient and Practitioner are only examples. According to:</p>\n<blockquote>\n<p>Depending on different needs, models may define any context appropriate to their use case, but should identify a default context that is used when authors do not declare a specific context.</p>\n</blockquote>\n<p>contexts for all FHIR Resource types should be possible. </p>\n<p>Currently I get the following error with <code>info.cqframework/cql-to-elm \"1.4.6\"</code>:</p>\n<div class=\"codehilite\"><pre><span></span>Could not resolve context name Specimen in model FHIR.\n</pre></div>\n\n\n<p>Would it be possible and the right idea to allow every FHIR Resource type as context in the model FHIR?</p>",
        "id": 173555710,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1566230513
    },
    {
        "content": "<p>We had planned on using CompartmentDefinition to specify the allowed contexts, because in addition to the resource type, we need to know the relationships to other resources (and that information needs to be part of the underlying model so the data access layer is capable of evaluating the context-specific query).</p>",
        "id": 173567937,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1566240060
    },
    {
        "content": "<p>So a server could define a CompartmentDefinition to support Specimen and then bring that in to the CQL with a specific model info.</p>",
        "id": 173568057,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1566240145
    },
    {
        "content": "<p>But specifying every FHIR Resource type would require CompartmentDefinitions for every resource.</p>",
        "id": 173568082,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1566240169
    },
    {
        "content": "<p>Ok I can supply the CompartmentDefinition myself? Iâ€˜ll have a look at it.</p>",
        "id": 173631227,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1566280521
    },
    {
        "content": "<p>Well, yes, assuming you have a server that knows how to dynamically apply a CompartmentDefinition :)</p>",
        "id": 173631354,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1566280700
    },
    {
        "content": "<p>I have my own Server and I see that CompartmentDefinition is the thing I need for the context. But I don't see the class CompartmentDefinition used in cql-to-elm. All I need is the cql-to-elm translater translaing my CQL with specimen context into ELM. The rest I do myself.</p>",
        "id": 173641060,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1566292646
    },
    {
        "content": "<p>Yeah, the translator would not reference CompartmentDefinition, the ModelInfo would have that information represented using ContextInfo (so you could say <code>context Specimen</code></p>",
        "id": 173689132,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1566330213
    },
    {
        "content": "<p>In other words, this would need to be a change to the FHIR model info file used by the translator.</p>",
        "id": 173689149,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1566330241
    },
    {
        "content": "<p>Thanks I'm able to have a Specimen context by adding the following into <code>fhir-modelinfo-4.0.0.xml</code> and load it with <code>CqlTranslator.loadModelInfo</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;ns4:contextInfo</span> <span class=\"na\">name=</span><span class=\"s\">&quot;Patient&quot;</span> <span class=\"na\">keyElement=</span><span class=\"s\">&quot;id&quot;</span> <span class=\"na\">birthDateElement=</span><span class=\"s\">&quot;birthDate.value&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;ns4:contextType</span> <span class=\"na\">name=</span><span class=\"s\">&quot;FHIR.Patient&quot;</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/ns4:contextInfo&gt;</span>\n<span class=\"nt\">&lt;ns4:contextInfo</span> <span class=\"na\">name=</span><span class=\"s\">&quot;Specimen&quot;</span> <span class=\"na\">keyElement=</span><span class=\"s\">&quot;id&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;ns4:contextType</span> <span class=\"na\">name=</span><span class=\"s\">&quot;FHIR.Specimen&quot;</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/ns4:contextInfo&gt;</span>\n</pre></div>\n\n\n<p>First queries like</p>\n<div class=\"codehilite\"><pre><span></span>library Retrieve\nusing FHIR version &#39;4.0.0&#39;\ninclude FHIRHelpers version &#39;4.0.0&#39;\n\ncodesystem SampleMaterialType: &#39;https://fhir.bbmri.de/CodeSystem/SampleMaterialType&#39;\n\ncontext Specimen\n\ndefine InInitialPopulation:\n  Specimen.type.coding ~ Code &#39;whole-blood&#39; from SampleMaterialType\n</pre></div>\n\n\n<p>translate.</p>\n<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span>  What would be the way to get such special contexts into the official lib?</p>",
        "id": 173794865,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1566395001
    },
    {
        "content": "<p>For the FHIR model info, we derive that from the FHIR specification, so a compartment definition there would be the driver for that.</p>",
        "id": 173811005,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1566405388
    },
    {
        "content": "<p>What are the relationships to other resources?</p>",
        "id": 173811022,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1566405410
    },
    {
        "content": "<p>From Specimen we need relationships to Patient and Organization at the Moment. But in the ModelInfo I don't see any context specific relationships specified. Where can I find the transformation tool from FHIR StructureDefinitions and CompartmentDefinitions to ModelInfo?</p>",
        "id": 173861269,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1566461145
    },
    {
        "content": "<p>Tooling to generate ModelInfo from StructureDefinitions is here: <a href=\"https://github.com/cqframework/cqf-tooling/blob/master/src/main/java/org/opencds/cqf/modelinfo/StructureDefinitionToModelInfo.java\" target=\"_blank\" title=\"https://github.com/cqframework/cqf-tooling/blob/master/src/main/java/org/opencds/cqf/modelinfo/StructureDefinitionToModelInfo.java\">https://github.com/cqframework/cqf-tooling/blob/master/src/main/java/org/opencds/cqf/modelinfo/StructureDefinitionToModelInfo.java</a></p>",
        "id": 173866303,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1566466236
    },
    {
        "content": "<p>The CompartmentDefinition processing isn't automated yet; but would be quite easy to add to that, just haven't gotten there yet. There is a RelationshipInfo element in the ModelInfo that specifies how contexts are related to resources in the model. Would just be a matter of adding relationship infos generated from the CompartmentDefinition.</p>",
        "id": 173866438,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1566466334
    },
    {
        "content": "<p>Should the <code>InInitialPopulation</code> expression in this library interpreted as: </p>\n<p>\"Has the subject of the specimen, currently in context, the gender male?\"</p>\n<p>If so, the retrieve expression <code>[Patient]</code> returns the one subject of the specimen in context - right?</p>\n<p>At the end, I'll need a CompartmentDefinition for Specimen - I know.</p>\n<div class=\"codehilite\"><pre><span></span>library Retrieve\nusing FHIR version &#39;4.0.0&#39;\ninclude FHIRHelpers version &#39;4.0.0&#39;\n\ncontext Specimen\n\ndefine InInitialPopulation:\n  from [Patient] P where P.gender = &#39;male&#39;\n</pre></div>",
        "id": 174716903,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1567430425
    }
]