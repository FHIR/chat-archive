[
    {
        "content": "<p>I was looking over the USCore Model Info (from here: <a href=\"https://github.com/cqframework/cqf-tooling/blob/master/src/main/resources/org/opencds/cqf/tooling/modelinfo/uscore-modelinfo-3.1.0.xml\">https://github.com/cqframework/cqf-tooling/blob/master/src/main/resources/org/opencds/cqf/tooling/modelinfo/uscore-modelinfo-3.1.0.xml</a>) and I had a question about a couple of the USCore extensions.</p>\n<p><code>BirthSexExtension</code> has a baseType of System.String (<a href=\"https://github.com/cqframework/cqf-tooling/blob/50f199cd1a23a1c0c372e3e0a08574d21d5a250c/src/main/resources/org/opencds/cqf/tooling/modelinfo/uscore-modelinfo-3.1.0.xml#L108\">https://github.com/cqframework/cqf-tooling/blob/50f199cd1a23a1c0c372e3e0a08574d21d5a250c/src/main/resources/org/opencds/cqf/tooling/modelinfo/uscore-modelinfo-3.1.0.xml#L108</a>), whereas <code>EthnicityExtension</code> has a baseType of USCore.Extension (<a href=\"https://github.com/cqframework/cqf-tooling/blob/50f199cd1a23a1c0c372e3e0a08574d21d5a250c/src/main/resources/org/opencds/cqf/tooling/modelinfo/uscore-modelinfo-3.1.0.xml#L793\">https://github.com/cqframework/cqf-tooling/blob/50f199cd1a23a1c0c372e3e0a08574d21d5a250c/src/main/resources/org/opencds/cqf/tooling/modelinfo/uscore-modelinfo-3.1.0.xml#L793</a>).</p>\n<p>My gut feeling would have been that both extensions would have the baseType of USCore.Extension. Does anyone have insight into why they have the different baseTypes? Is it because the <code>BirthSexExtension</code> is simple enough that you only ever really care about it having a single string value? Or should they both have baseTypes of Extension and this is some sort of error when creating the model info?</p>",
        "id": 213335425,
        "sender_full_name": "Matt Sargent",
        "timestamp": 1602701539
    },
    {
        "content": "<p>Yes, in the USCore model info, what we're doing is raising the extension/slice definitions to first class elements, so for simple extensions, we just use the actual type of the extension. The \"target\" element provides a mapping back to the underlying FHIR structures, and that mapping is expanded by the CQL-to-ELM translator so that underlying engines can still run the ELM directly against FHIR.</p>",
        "id": 213490379,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1602797420
    }
]