[
    {
        "content": "<p>bit worried about the \"Mode\" operation <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> - it is polymorphic in that it can return either a list or a single item... seems like a bit of an outlier...</p>",
        "id": 153837085,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1468141385
    },
    {
        "content": "<p>ie this is my current implementation:</p>\n<div class=\"codehilite\"><pre>function mode(values, defaults) {                           \n  if (!values.length) return null                           \n  var clusterFunction = function(a) { return a.toString() } \n  var max = 0, mode = []                                    \n  var counted = _.countBy(values, clusterFunction)          \n  max = _.max(_.values(counted))                            \n  _.forIn(counted, function(v,k) {                          \n    if (v === max) mode.push(parseFloat(k))                 \n  })                                                        \n  formalise(mode, defaults) // add in type etc              \n  var res = mode.length &gt; 1                                 \n    ? {value: mode, type: &#39;List&#39;}                           \n    : mode[0]                                               \n  return res                                                \n}                                                           \n</pre></div>",
        "id": 153837086,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1468141446
    },
    {
        "content": "<p>Yeah, that's a good question. I would tend to argue that it should be the same return type, always returning a list of elements, even if there is only a single result. That's a change to the spec though, the spec actually defines it as returning a single value, and the behavior for ties is unspecified. That should be made explicit in the spec. Do you mind submitting a comment and we can discuss it on the next CDS WG call?</p>",
        "id": 153837492,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1468296497
    }
]