[
    {
        "content": "<p>Hi folks. Is there an existing utility that converts CQL to a Library resource (not the Base64 encoded bit), e.g. the required fields like relatedArtifact etc?</p>",
        "id": 224939342,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1612301322
    },
    {
        "content": "<p>Yes, the cqf-tooling is able to do that:</p>\n<p><a href=\"https://github.com/cqframework/cqf-tooling/blob/master/src/main/java/org/opencds/cqf/tooling/Main.java#L45\">https://github.com/cqframework/cqf-tooling/blob/master/src/main/java/org/opencds/cqf/tooling/Main.java#L45</a></p>",
        "id": 224941571,
        "sender_full_name": "JP",
        "timestamp": 1612302348
    },
    {
        "content": "<p>The publisher will also do it, with binary adjunct files: <a href=\"https://confluence.hl7.org/display/FHIR/Implementation+Guide+Parameters\">https://confluence.hl7.org/display/FHIR/Implementation+Guide+Parameters</a></p>",
        "id": 224949455,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1612306595
    },
    {
        "content": "<p>And the publisher produces a very nice narrative for Library resources (hat tip <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> )</p>",
        "id": 224951936,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1612308226
    },
    {
        "content": "<p>Thanks, I'll have a look at the publisher! On the cqf-tooling, I see an error on the CQL path. This must be user error, but any hints?</p>\n<div class=\"codehilite\"><pre><span></span><code>$ ls /Users/richard/src/github.com/intrahealth/madx-hiv/input/pagecontent/cql/\ntotal 8\ndrwxr-xr-x  3 richard  staff    96B Feb  2 19:21 .\ndrwxr-xr-x  3 richard  staff    96B Feb  2 19:21 ..\n-rw-r--r--  1 richard  staff   217B Feb  2 19:21 DEMOG-0.0.1.cql\n~/src/github.com/cqframework/cqf-tooling [master|âœ”]\n$ java -jar /Users/richard/Downloads/tooling-1.3.0-jar-with-dependencies.jar -CqlToR4Library -ptld=/Users/richard/src/github.com/intrahealth/madx-hiv/input/pagecontent/cql\nException in thread &quot;main&quot; java.lang.IllegalArgumentException: The path to the CQL Content is required\n    at org.opencds.cqf.tooling.library.BaseLibraryGenerator.buildArgs(BaseLibraryGenerator.java:118)\n    at org.opencds.cqf.tooling.library.BaseLibraryGenerator.execute(BaseLibraryGenerator.java:52)\n    at org.opencds.cqf.tooling.Main.main(Main.java:159)\n</code></pre></div>",
        "id": 224958015,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1612312221
    },
    {
        "content": "<p>Looks like the docs are a bit out of date:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>java -jar /Users/richard/Downloads/tooling-1.3.0-jar-with-dependencies.jar -CqlToR4Library -ptcql<span class=\"o\">=</span>/Users/richard/src/github.com/intrahealth/madx-hiv/input/pagecontent/cql -op<span class=\"o\">=</span>/Users/richard/src/github.com/intrahealth/madx-hiv/input/resources/library\n</code></pre></div>\n<p>Make sure the output folder exists before running the command.</p>",
        "id": 225057673,
        "sender_full_name": "JP",
        "timestamp": 1612376448
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 225185716,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1612456601
    },
    {
        "content": "<p>Thanks for the guidance. It runs without error to stdout but the library resource is not created. Output is named <code>all-libraries-bundle.json</code> and content is:</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n  &quot;resourceType&quot;: &quot;Bundle&quot;\n}\n</code></pre></div>\n<p>I don't think it's an issue with the CQL. I've confirmed that the CQL can be converted to ELM without errors. Here it is:</p>\n<div class=\"codehilite\"><pre><span></span><code>library DEMOG version &#39;0.0.1&#39;\n\nusing FHIR version &#39;4.0.1&#39;\n\ninclude FHIRHelpers version &#39;4.0.1&#39;\n\ncontext Patient\n\ndefine &quot;Initial Population&quot;:\n    Patient.gender = &#39;female&#39;\n\ndefine &quot;Denominator&quot;:\n    &#39;Initial Population&#39;\n</code></pre></div>\n<p>Edit: I can reproduce the same output using the <code>cqframework/sample-content-ig</code> repo.</p>",
        "id": 225221651,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1612472406
    },
    {
        "content": "<p>You need to have the \"skeleton\" library resource available, like this example in the sample-ig: <a href=\"https://github.com/FHIR/sample-ig/blob/master/input/examples/Library-example.json\">https://github.com/FHIR/sample-ig/blob/master/input/examples/Library-example.json</a></p>",
        "id": 225233868,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1612477999
    },
    {
        "content": "<p>That link in the \"<a href=\"http://content.id\">content.id</a>\" element is how it knows which library file to package in which library resource. Does that help?</p>",
        "id": 225233921,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1612478026
    },
    {
        "content": "<p>In other words, it won't automatically create a Library resource, it needs the basic information to be present (and won't overwrite anything that's in that source resource that isn't generated by the tooling)</p>",
        "id": 225234011,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1612478068
    },
    {
        "content": "<p>Ok, thanks. I'll have a try. Does that template need also apply to the Measure generation? I've also seen an error \"Could not load source for library FHIRHelpers\", which I must be putting in the wrong place and it's not being found.</p>",
        "id": 225237216,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1612479712
    },
    {
        "content": "<p>So, I've tried putting FHIR Helpers as CQL in the folders, or as /Library. It's still <code>Could not load source for library FHIRHelpers, version 4.0.1</code> Where must it be?</p>",
        "id": 225249713,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1612488464
    },
    {
        "content": "<p>All the CQL sorce resolves from the same cql folder. Are you running the cqf-tooling or the publisher?</p>",
        "id": 225251443,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1612489955
    },
    {
        "content": "<p>I'm using the cqf-tooling. I can try publisher to create Library resources as well.</p>",
        "id": 225331460,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1612546976
    },
    {
        "content": "<p>HI <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> can you clarify the relationship and overlap between cqf-tooling and publishing tools?  Hoping that they share common components/code, e.g. for populating Libraries.  Can these tools be used in combination for complementary behavior?  The cqf-tooling appears to have a helpful feature to create bundles of the outputs (library, valueset, plandef, etc) for posting to CQF Ruler.  I'd like to do the same with publisher outputs for cpg-on-fhir and CDS.</p>",
        "id": 225344623,
        "sender_full_name": "Dave Carlson",
        "timestamp": 1612553180
    },
    {
        "content": "<p>Yes, the cqf-tooling and the IG publisher can be used together for complementary behavior. This is how the Connectathon IG is built:</p>\n<p><a href=\"https://github.com/DBCG/connectathon/tree/master/fhir401\">https://github.com/DBCG/connectathon/tree/master/fhir401</a></p>\n<p>First, the cqf-tooling is run which produces the Bundles, among other things, and then the IG publisher is run to produce the complete IG. The main overlap in their behavior is the fact that they can both translate CQL and produce Library resources. If the cqf-tooling is used, it does that. If the additional features of the cqf-tooling are not needed just the IG publisher can be used.</p>",
        "id": 225345708,
        "sender_full_name": "JP",
        "timestamp": 1612553666
    },
    {
        "content": "<p>Thanks JP.  I saw this during the connectathon and did a very quick initial test.  I found one disconnect where cqf-tooling expected to find CQL under input/pagecontent, whereas the publisher expects under /input/cql (which is my preference for IG content).</p>",
        "id": 225347013,
        "sender_full_name": "Dave Carlson",
        "timestamp": 1612554245
    },
    {
        "content": "<p>Yes, the cqf-tooling is currently hard-coded for <code>input/pagecontent/cql/</code>.  There's an issue tracking that here: </p>\n<p><a href=\"https://github.com/cqframework/cqf-tooling/issues/95\">https://github.com/cqframework/cqf-tooling/issues/95</a></p>\n<p>We expect to make that configurable or derive it from the IG resource.</p>",
        "id": 225347513,
        "sender_full_name": "JP",
        "timestamp": 1612554550
    }
]