[
    {
        "content": "<p>Hi, folks! Could you please explain what the <code>with</code> means in this example:</p>\n<div class=\"codehilite\" data-code-language=\"SQL\"><pre><span></span><code><span class=\"n\">define</span> <span class=\"ss\">\"Outpatient Encounters with Advanced Illness\"</span><span class=\"p\">:</span>\n  <span class=\"p\">(</span> <span class=\"p\">[</span><span class=\"n\">Encounter</span><span class=\"p\">:</span> <span class=\"ss\">\"Outpatient\"</span><span class=\"p\">]</span>\n      <span class=\"k\">union</span> <span class=\"p\">[</span><span class=\"n\">Encounter</span><span class=\"p\">:</span> <span class=\"ss\">\"Nonacute Inpatient\"</span><span class=\"p\">]</span> <span class=\"p\">)</span> <span class=\"n\">OutpatientEncounter</span>\n       <span class=\"k\">with</span> <span class=\"p\">[</span><span class=\"n\">Condition</span><span class=\"p\">:</span> <span class=\"ss\">\"Advanced Illness\"</span><span class=\"p\">]</span> <span class=\"n\">AdvancedIllnessDiagnosis</span>\n      <span class=\"n\">such</span> <span class=\"n\">that</span> <span class=\"k\">exists</span> <span class=\"p\">(</span>\n      <span class=\"n\">OutpatientEncounter</span><span class=\"p\">.</span><span class=\"n\">diagnosis</span><span class=\"p\">.</span><span class=\"n\">condition</span> <span class=\"n\">EncounterDiagnosis</span>\n      <span class=\"k\">where</span> <span class=\"n\">EndsWith</span><span class=\"p\">(</span><span class=\"n\">EncounterDiagnosis</span><span class=\"p\">.</span><span class=\"n\">reference</span><span class=\"p\">,</span> <span class=\"n\">AdvancedIllnessDiagnosis</span><span class=\"p\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n      <span class=\"p\">)</span>\n      <span class=\"k\">and</span> <span class=\"n\">OutpatientEncounter</span><span class=\"p\">.</span><span class=\"k\">period</span> <span class=\"n\">starts</span> <span class=\"mi\">2</span> <span class=\"n\">years</span> <span class=\"k\">or</span> <span class=\"k\">less</span> <span class=\"k\">on</span> <span class=\"k\">or</span> <span class=\"k\">before</span>\n      <span class=\"k\">end</span> <span class=\"k\">of</span> <span class=\"ss\">\"Measurement Period\"</span>\n</code></pre></div>\n<p>I can't get what <code>with [Condition: \"Advanced Illness\"] AdvancedIllnessDiagnosis</code> means.<br>\nThanks!</p>",
        "id": 241626855,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1622885870
    },
    {
        "content": "<p>With clause is making the return type a list of TUPLES where the tuple is every A and B set together where the criteria fires. So this is every encounter tested against every condition.<br>\nThe first clause is a standard reference check in fhir. It's checking if the reference string \"EndsWith\" the id of the Condition. because the format of references are like \"Condition/12345\".<br>\nThe  2nd criteria Is referencing an external definition but it's basically doing a time-check.<br>\nSo this is a time check for encounters that happened 2 years or less from Measurement Period, but we are also including the condition related to the encounter in the result.</p>",
        "id": 241776471,
        "sender_full_name": "Michael Riley",
        "timestamp": 1623072769
    },
    {
        "content": "<p>The way to read this as a series of blocks is<br>\nDefinition Header</p>\n<div class=\"codehilite\"><pre><span></span><code>define &quot;Outpatient Encounters with Advanced Illness&quot;:\n</code></pre></div>\n<p>Retrievals</p>\n<div class=\"codehilite\"><pre><span></span><code>  ( [Encounter: &quot;Outpatient&quot;]\n      union [Encounter: &quot;Nonacute Inpatient&quot;] ) OutpatientEncounter\n       with [Condition: &quot;Advanced Illness&quot;] AdvancedIllnessDiagnosis\n</code></pre></div>\n<p>Filters/Criteria</p>\n<div class=\"codehilite\"><pre><span></span><code>      such that exists (\n      OutpatientEncounter.diagnosis.condition EncounterDiagnosis\n      where EndsWith(EncounterDiagnosis.reference, AdvancedIllnessDiagnosis.id)\n      )\n      and OutpatientEncounter.period starts 2 years or less on or before\n      end of &quot;Measurement Period&quot;\n</code></pre></div>",
        "id": 241788929,
        "sender_full_name": "Michael Riley",
        "timestamp": 1623077779
    },
    {
        "content": "<p>Michael, I appreciate it ! It's very clear now!<br>\nIs there a documentation somewhere about it?<br>\nThanks!</p>",
        "id": 241790061,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1623078194
    },
    {
        "content": "<p><a href=\"https://cql.hl7.org/\">https://cql.hl7.org/</a></p>",
        "id": 241790627,
        "sender_full_name": "John Silva",
        "timestamp": 1623078402
    },
    {
        "content": "<p>Specifically - <a href=\"https://cql.hl7.org/02-authorsguide.html#relationships\">https://cql.hl7.org/02-authorsguide.html#relationships</a></p>",
        "id": 241790695,
        "sender_full_name": "JP",
        "timestamp": 1623078427
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194178\">@JP</span> I have never seen the FHIR cql library properly enforce relationships through the with clause, hence why we need to use filter clauses like this to link them. I'm sure other QDM models do, but is this functionality in cql-fhir now? And if it's not, what would be needed to do so?</p>",
        "id": 241796742,
        "sender_full_name": "Michael Riley",
        "timestamp": 1623080660
    },
    {
        "content": "<p>I don't quite follow what you mean by \"properly enforce relationships\". Would you mind giving me an example of what you mean and what your expected behavior would be?</p>",
        "id": 241797306,
        "sender_full_name": "JP",
        "timestamp": 1623080884
    },
    {
        "content": "<p>I might be describing a personal assumption/perference, not an actual aspect of the language, so maybe I shouldn't use the word \"proper\", sorry.</p>\n<p>Let's say I have Condition A B and C, and Encounters D E and F and the relationships via the field \"Encounter.diagnosis.condition.reference\" in the Encounter FHIR resource maps out like this.<br>\nD-&gt;A<br>\nE-&gt;B<br>\nF-&gt;C<br>\nSo each Encounter is associated to a different Condition. In the retrieval block I would perfer the <code>with</code> clause to only pull the tuples (A,D), (B,E), and (C,F). However I believe (haven't tested this recently) the example pulls all combinations of tuples instead: (A,D),(A,E),(A,F),(B,D),(B,E),(B,F),(C,D),(C,E),(C,F). Which is why we have to use the reference criteria block in the first place: to filter out the 6 tuples that aren't linked together.</p>\n<p>When I'm trying to write a multi-query definition sometimes I do want to compare 2 separate sets to each other, but most often I'm actually just trying to pull DIRECTLY RELATED resources together. They're not really 2 different medical context, it's actually just the same medical context across 2 different resources. Maybe the <code>with</code> clause isn't the best structure to be doing that with, but it might be helpful to have a <code>with linked</code> keyword or something similar to that in the grammar because that's usually what I want to do.</p>",
        "id": 241813873,
        "sender_full_name": "Michael Riley",
        "timestamp": 1623087929
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194612\">@Michael Riley</span> , yes, the with clause is only for cases where you are filtering by the relationship, not for cases where you actually want the data from both sources. You can still do this without using a multi-source query, using the <code>let</code> clause:</p>\n<div class=\"codehilite\"><pre><span></span><code>define MedicationRequestAndEncounter:\n  [MedicationRequest] M\n    let E: [Encounter: id = Last(Split(M.encounter.reference, &#39;/&#39;))]\n    return { medicationRequest: M, encounter: E }\n</code></pre></div>",
        "id": 242267906,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1623357743
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> Is that a valid retreival for FHIR resources? id is not a searchable parameter in FHIR, so you can't create a searchset from a set of ids.</p>",
        "id": 242751949,
        "sender_full_name": "Michael Riley",
        "timestamp": 1623771183
    }
]