[
    {
        "content": "<p>Hello,<br>\nThe cql-to-elm implementation returns for getSource() on Query-type-objects a list of AliasedQuerySources. Why is this a list and not a single source. What would be the semantics of multiple sources in a query ? From the CQL documentation is it not clear to me how the syntax would look like having multiple sources (e.g. \"[Encounter, Condition]\" ?) or how the returned results look like in this case.<br>\nGreetings<br>\nGeorg</p>",
        "id": 154010164,
        "sender_full_name": "Georg Fette",
        "timestamp": 1539850912
    },
    {
        "content": "<p>The <a href=\"http://cql.hl7.org/03-developersguide.html#queries-1\" target=\"_blank\" title=\"http://cql.hl7.org/03-developersguide.html#queries-1\">Type Inference - Queries</a> section of the developer's guide establishes type inference rules for queries.</p>",
        "id": 154011256,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1540253414
    },
    {
        "content": "<p>To avoid the possibility of element name clashes, the default result of a multi-source query is a list of tuples with an element for each source named the alias and of the type of an element of the source. For example, <code>from [Patient] P, [Encounter] E</code> would by default yield a list of <code>Tuple { P Patient, E Encounter }</code>, and the result would contain a tuple for each possible combination of patients and encounters.</p>",
        "id": 154011257,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1540253590
    }
]