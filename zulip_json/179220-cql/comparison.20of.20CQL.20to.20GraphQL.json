[
    {
        "content": "<p>A kind of heretical question in this thread: What is mightier, CQL or GraphQL ?</p>",
        "id": 163489405,
        "sender_full_name": "Georg Fette",
        "timestamp": 1555435897
    },
    {
        "content": "<p>the pen is mightier than the sword. Or not, if you're facing a guy brandishing pen or sword</p>",
        "id": 163514077,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1555454773
    },
    {
        "content": "<p>in the case of graphQL and cql, they are doing radically different things, so it's even less valid to ask that kind of question</p>",
        "id": 163514091,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1555454798
    },
    {
        "content": "<p>You are using Bonetti’s Defense against me, ah?<br>\nI have not yet dived into GraphQL that much, so perhaps the question is indeed a bit dumb.<br>\nIt is true that they do things differently but aren't they still comparable like the comparison of FHIR-REST-search and CQL ?<br>\nGraphQL and CQL both are capable of searching within resources and returning resource instances. Both can constrain some aspects of the desired objects as well as the form of the returned data. I am unsure about the amount of operators (boolean, arithmetic, string manipulation, etc.) that are available in GraphQL (this discussion in this issue <a href=\"https://github.com/graphql/graphql-js/issues/585\" target=\"_blank\" title=\"https://github.com/graphql/graphql-js/issues/585\">https://github.com/graphql/graphql-js/issues/585</a> puzzles me a bit).<br>\nIt seems to me that both query languages had different use cases for which they were developed, so they support different technical concepts and have different syntactical sugar. But I wonder if they could not be replaced by each other, at least for some use cases.<br>\nWhen I would like to get some fields of a patient with a given id I am free to use a CQL statement, a FHIR-REST-search or a GraphQL query. For more complicated use cases it could be that I have to use a combination of CQL and GraphQL to receive desired result.<br>\nFor which use cases is GraphQL intended to be used, or for which is it already in use ?</p>",
        "id": 163537674,
        "sender_full_name": "Georg Fette",
        "timestamp": 1555485936
    },
    {
        "content": "<p>I can't really speak to the GraphQL use cases as I've not spent much time with that spec (it's on my list, I just never seem to get to it). But I can speak to the CQL use cases, authoring clinical logic in a language that tries as much as possible to be independent of where and how that logic will run.</p>",
        "id": 163691978,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1555622615
    },
    {
        "content": "<blockquote>\n<p>You are using Bonetti’s Defense against me, ah?</p>\n</blockquote>",
        "id": 163692171,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1555622812
    },
    {
        "content": "<p>Ok, you made me go <a href=\"https://combativecorner.wordpress.com/2010/11/11/fencing-language-in-the-princess-bride/\" target=\"_blank\" title=\"https://combativecorner.wordpress.com/2010/11/11/fencing-language-in-the-princess-bride/\">here</a></p>",
        "id": 164174633,
        "sender_full_name": "Robert McClure",
        "timestamp": 1556202232
    }
]