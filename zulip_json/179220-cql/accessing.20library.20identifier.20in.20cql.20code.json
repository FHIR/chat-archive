[
    {
        "content": "<p>Hello, Folks! </p>\n<p>Is there a way to access <code>library.identirier.id</code> in <code>cql</code> code.<br>\n<a href=\"/user_uploads/10155/iqZKSOGADIUHWB2_u_JfkYel/image.png\">image.png</a><br>\nI'd like to define \"Measure name\", meaning whatever I set after <code>library</code> it would reflect in \"Measure name\" definition:</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/iqZKSOGADIUHWB2_u_JfkYel/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/iqZKSOGADIUHWB2_u_JfkYel/image.png\"></a></div><div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>library TEST_Logic version <span class=\"s1\">'0.0.0'</span>\nusing FHIR version <span class=\"s1\">'4.0.1'</span>\n\ncontext Patient\n\ndefine <span class=\"s2\">\"Measure name\"</span>:\n    identifier.id // TEST_Logic\n</code></pre></div>\n<p>Thanks!</p>",
        "id": 243387618,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1624284623
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"376706\">@Vasyl Herman</span> -- that's definitely an interesting idea, but AFAIK CQL does not insert any implicit definitions to reference that information.  Contexts sometime insert an implicit definition (e.g. the <code>Patient</code> context inserts a <code>Patient</code> definition) -- but I don't think there is any mechanism that exposes library metadata like the identifier or version for use in the CQL logic itself. <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> -- correct if I'm wrong (i.e., if you snuck something like this in there without me noticing <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span> )</p>",
        "id": 243426464,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1624301449
    },
    {
        "content": "<p>I'm fairly certain this doesn't exist in the Java engine. In the case where you have libraries referencing other libraries, it isn't completely clear to me what you would even want it to return. If you know that you always want a constant value, though, you could simulate the behavior by defining an input parameter that is echoed back out in a define. </p>\n<div class=\"codehilite\"><pre><span></span><code>library TEST_Logic version &#39;0.0.0&#39;\nusing FHIR version &#39;4.0.1&#39;\n\nparameter LibName default &#39;Unknown&#39;\n\ncontext Patient\n\ndefine &quot;Measure name&quot;:\n    &quot;LibName&quot;\n</code></pre></div>",
        "id": 243435089,
        "sender_full_name": "Corey Sanders",
        "timestamp": 1624305699
    },
    {
        "content": "<p>No, there's nothing like this in the spec now. Feel free to submit a tracker if it's a feature that's really needed, but Corey's solution sounds like a better approach to me.</p>",
        "id": 243534244,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1624375851
    },
    {
        "content": "<p>Plus one on this feature from me as well, since oftentimes a client user doesn't have the fhir patient id, they have an identifier that.... identifies the patient such as an MRN or an SSN. Would help with interoperability to client systems.</p>",
        "id": 243556470,
        "sender_full_name": "Michael Riley",
        "timestamp": 1624385308
    },
    {
        "content": "<p>The CQL library identifiers (as in Vasyl's example) which exist in CQL/ELM are actually a different thing than Patient identifiers which exist in FHIR despite having the same name. You do have access to Patient identifiers. Something like this would do it:</p>\n<div class=\"codehilite\" data-code-language=\"cql\"><pre><span></span><code>library Test version '1.0.0'\n\nusing FHIR version '4.0.1'\ninclude FHIRHelpers version '4.0.1'\n\ncontext Patient\n\ndefine \"Identifier\":\n  Patient.identifier I\n    return Tuple { assigner : I.assigner.display, value : I.value}\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"nt\">\"resourceType\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Patient\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"test\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"identifier\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"use\"</span><span class=\"p\">:</span> <span class=\"s2\">\"usual\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"coding\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"nt\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://terminology.hl7.org/CodeSystem/v2-0203\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"MR\"</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n      <span class=\"p\">},</span>\n      <span class=\"nt\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"urn:oid:1.2.36.146.595.217.0.1\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"12345\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"period\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"start\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2001-05-06\"</span>\n      <span class=\"p\">},</span>\n      <span class=\"nt\">\"assigner\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"display\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Acme Healthcare\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">\"active\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"use\"</span><span class=\"p\">:</span> <span class=\"s2\">\"official\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"family\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Chalmers\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"given\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"Peter\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"James\"</span>\n      <span class=\"p\">]</span>\n    <span class=\"p\">}],</span>\n  <span class=\"nt\">\"gender\"</span><span class=\"p\">:</span> <span class=\"s2\">\"male\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"birthDate\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1974-12-25\"</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code><span class=\"nv\">Patient</span><span class=\"o\">=</span>Patient<span class=\"o\">(</span><span class=\"nv\">id</span><span class=\"o\">=</span><span class=\"nb\">test</span><span class=\"o\">)</span>\n<span class=\"nv\">Identifier</span><span class=\"o\">=[</span>Tuple <span class=\"o\">{</span>\n    <span class=\"s2\">\"assigner\"</span>: Acme Healthcare\n    <span class=\"s2\">\"value\"</span>: <span class=\"m\">12345</span>\n<span class=\"o\">}]</span>\n</code></pre></div>",
        "id": 243559317,
        "sender_full_name": "JP",
        "timestamp": 1624386539
    },
    {
        "content": "<p>Thank all of you guys!<br>\nCould I ask? Is it correct way to retrieve a Patient's Social Security Number:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>define <span class=\"s2\">\"SSN\"</span>:\n<span class=\"o\">(</span>singleton from <span class=\"o\">(</span>\n    Patient.identifier identifier\n     where identifier.system.value <span class=\"o\">=</span> <span class=\"s1\">'http://hl7.org/fhir/sid/us-ssn'</span><span class=\"o\">))</span>.value.value\n</code></pre></div>\n<p>Or is there more elegant way?</p>",
        "id": 244134184,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1624881961
    },
    {
        "content": "<p>I was able to shape my query with <code>return</code> but I am not sure I am doing right:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>define <span class=\"s2\">\"SSN\"</span>:\n<span class=\"o\">(</span>singleton from <span class=\"o\">(</span>\n  Patient.identifier identifier\n    where identifier.type.coding <span class=\"k\">in</span> Code <span class=\"o\">{</span>code: <span class=\"s1\">'SS'</span>, system: <span class=\"s1\">'http://terminology.hl7.org/CodeSystem/v2-0203'</span>, display: <span class=\"s1\">'Social Security Number'</span><span class=\"o\">}</span>\n        <span class=\"o\">))</span> I\n     <span class=\"k\">return</span> I.value.value\n</code></pre></div>",
        "id": 244139141,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1624884609
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"376706\">@Vasyl Herman</span> , best practice would be to define a codesystem and code for referencing the <code>SS</code> code from the v2-0203 code system. I also wonder whether using the <code>system</code> of the identifier and specifying that it be <code>http://hl7.org/fhir/sid/us-ssn</code> would work? That's more a content question though.</p>",
        "id": 244179646,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1624901792
    },
    {
        "content": "<p>For accessing the identifier, that's correct syntax, but you could use FHIRHelpers to avoid the .value accessors:</p>\n<div class=\"codehilite\"><pre><span></span><code>define &quot;SSN&quot;:\n  (singleton from (\n    Patient.identifier I\n      where I.system = &#39;http://hl7.org/fhir/sid/us-ssn&#39;\n  )).value\n</code></pre></div>",
        "id": 244179933,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1624901939
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span>, the sample above gives me an Object like that:<br>\n<a href=\"/user_uploads/10155/xvq-bP2UmItHMwYiC41Fmcsp/Screenshot-2021-06-28-at-20.54.51.png\">Screenshot-2021-06-28-at-20.54.51.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/xvq-bP2UmItHMwYiC41Fmcsp/Screenshot-2021-06-28-at-20.54.51.png\" title=\"Screenshot-2021-06-28-at-20.54.51.png\"><img src=\"/user_uploads/10155/xvq-bP2UmItHMwYiC41Fmcsp/Screenshot-2021-06-28-at-20.54.51.png\"></a></div>",
        "id": 244182283,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1624903058
    },
    {
        "content": "<p>I tried to defide a codesystem and code for referensing the <code>SS</code> like so:</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>codesystem <span class=\"s2\">\"IdentifierType\"</span>: <span class=\"s1\">'http://terminology.hl7.org/CodeSystem/v2-0203'</span>\ncode <span class=\"s2\">\"Social Security Number\"</span>: <span class=\"s1\">'SS'</span> from <span class=\"s2\">\"IdentifierType\"</span> display <span class=\"s1\">'Social Security Number'</span>\ncontext Patient\n\ndefine <span class=\"s2\">\"SSN\"</span>:\n  <span class=\"o\">(</span>singleton from <span class=\"o\">(</span>\n    Patient.identifier identifier\n      where identifier.type.coding <span class=\"k\">in</span> <span class=\"s2\">\"Social Security Number\"</span>\n      <span class=\"o\">))</span>.value.value\n</code></pre></div>\n<p>But there is a downside, it is working unless you have all three keys matching in a <code>code</code> Object of Patient.identifier.type.coding[]:  <code>system</code>, <code>code</code> and <code>display</code>. If you remove the <code>display</code> either from the code definition or a Patient's bundle it returns <code>null</code></p>",
        "id": 244184152,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1624903870
    },
    {
        "content": "<p>I also wonder why nither <br>\n<code>where identifier in \"Social Security Number\"</code> <br>\nnor  <br>\n<code>where identifier type in \"Social Security Number\"</code> <br>\ndoesn't work for an identifier as it does for a regular FHIR resource say <code>Enconter</code>?</p>",
        "id": 244184693,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1624904103
    },
    {
        "content": "<p>When performing terminology comparisons, use the equivalent operator (<code>~</code>), which only compares the <code>code</code> and <code>system</code> elements (whereas <code>=</code> compares all attributes, including <code>display</code>).</p>",
        "id": 244186766,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1624905089
    },
    {
        "content": "<p>As far as <code>where identifier in \"Social Security Number\"</code>, that feels like a different operation and if we overloaded <code>in</code> to support that it may lead to confusion, what you're saying there is more something like identifier _is_ a Social Security Number, where in that context \"is\" means \"has a system of Social Security Number\".</p>",
        "id": 244187013,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1624905229
    },
    {
        "content": "<p>For the <code>type in \"Social Security Number\"</code> case, if you defined \"Social Security Number\" as a ValueSet with any known codes for describing Social Security Number, that would work.</p>",
        "id": 244187117,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1624905268
    }
]