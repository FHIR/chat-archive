[
    {
        "content": "<p>What is the preferred way of dealing with fields in current systems that have the specimen, subject, device, etc. as identifiers and moving them to a Observation? My problem is that these are References in the Observation resource, but creating them (the Specimen, Practitioner, etc.) isn't really an option (pointed 'thing' is not really in the system). <br>\nObservation resource doesn't allow Identifier type in neither value or component, so the only other think I could think of is creating a bunch of extensions.</p>\n<p>Any experiences with such a use case?</p>",
        "id": 178098088,
        "sender_full_name": "Diego Bosca",
        "timestamp": 1571055923
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span></p>",
        "id": 178106536,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1571062449
    },
    {
        "content": "<p>reference can point to the business identifier.  would that work?</p>",
        "id": 178131605,
        "sender_full_name": "Eric Haas",
        "timestamp": 1571081536
    },
    {
        "content": "<p>Reference.identifier</p>",
        "id": 178145279,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1571092974
    },
    {
        "content": "<p>Contained resources could be an option for specimen if it's managed one to one</p>",
        "id": 178146744,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1571094614
    },
    {
        "content": "<blockquote>\n<p>reference can point to the business identifier.  would that work?</p>\n</blockquote>\n<p>if we can safely assure that no one will ever try to ask us for that identifier I think it would work. Then the other ones not included in the Observation resource would still be extensions I assume</p>",
        "id": 178171165,
        "sender_full_name": "Diego Bosca",
        "timestamp": 1571127872
    },
    {
        "content": "<blockquote>\n<p>if we can safely assure that no one will ever try to ask us for that identifier I think it would work.</p>\n</blockquote>\n<p>With a value in Observation.specimen.identifier you can supply the value of the identifier, but not a resource for the details of the specimen.</p>",
        "id": 178171915,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1571128536
    },
    {
        "content": "<p>But do references to resources of a given type assume that the pointed resource is in the system?</p>",
        "id": 178172029,
        "sender_full_name": "Diego Bosca",
        "timestamp": 1571128643
    },
    {
        "content": "<p>no. references never have to resolve (at least, not from the pov of the standard. Implementation guides often say something about this). But if it did resolve, then it would be a specimen resource</p>",
        "id": 178172880,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1571129504
    },
    {
        "content": "<blockquote>\n<p>Then the other ones not included in the Observation resource would still be extensions I assume</p>\n</blockquote>\n<p>What \"other ones\" are you referring to....  because everything you listed above can be covered by Reference.identifier</p>",
        "id": 178206154,
        "sender_full_name": "Eric Haas",
        "timestamp": 1571154466
    },
    {
        "content": "<p>Yeah, everything goes into Reference.identifier if the attribute itself is in the Observation resource :)</p>",
        "id": 178281456,
        "sender_full_name": "Diego Bosca",
        "timestamp": 1571227264
    },
    {
        "content": "<p>Use case is genomics, where almost everything (allele, etc.) can have an identifier. While some specific identifiers could be put in existing attributes (as I mentioned above, specimen, author, etc.), there will be some that won't really fit. My first thought was profiling a \"component\" of type Identifier, but that's not allowed. So extension time I assume</p>",
        "id": 178282455,
        "sender_full_name": "Diego Bosca",
        "timestamp": 1571228124
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191708\">@Diego Bosca</span> - Since you mentioned genomics - if you haven't yet, you will want to check out the IG being developed by the Clinical Genomics WG: <a href=\"http://build.fhir.org/ig/HL7/genomics-reporting/\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/genomics-reporting/\">http://build.fhir.org/ig/HL7/genomics-reporting/</a><br>\nWe have components for collecting various sorts of identifies important in the genomics space.  If you review and have questions, you can direct them to the <a class=\"stream\" data-stream-id=\"179197\" href=\"/#narrow/stream/179197-genomics\">#genomics</a> stream.</p>",
        "id": 178305427,
        "sender_full_name": "Kevin Power",
        "timestamp": 1571243357
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191708\">Diego Bosca</span> - Since you mentioned genomics - if you haven't yet, you will want to check out the IG being developed by the Clinical Genomics WG: <a href=\"http://build.fhir.org/ig/HL7/genomics-reporting/\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/genomics-reporting/\">http://build.fhir.org/ig/HL7/genomics-reporting/</a><br>\nWe have components for collecting various sorts of identifies important in the genomics space.  If you review and have questions, you can direct them to the <a class=\"stream\" data-stream-id=\"179197\" href=\"/#narrow/stream/179197-genomics\">#genomics</a> stream.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191913\">@Kevin Power</span> reviewing the implementation guide I see that at least some identifiers (dbSNP-id) ended up as components of type CodeableConcept. Do you think a identifier data type would be better?</p>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> is there any plan to include identifier as a valid component type in R5?</p>",
        "id": 178556668,
        "sender_full_name": "Diego Bosca",
        "timestamp": 1571508316
    },
    {
        "content": "<p>I'm not sure what you're asking - how would identifier be a valid component type? what's a component type - you mean Observation.component.value? That would be a question for OO</p>",
        "id": 178563146,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1571518722
    },
    {
        "content": "<p>Yeah, that was the question. Do OO have a stream or something?</p>",
        "id": 178598394,
        "sender_full_name": "Diego Bosca",
        "timestamp": 1571587216
    },
    {
        "content": "<p><a class=\"stream\" data-stream-id=\"179256\" href=\"/#narrow/stream/179256-Orders-and-Observation-WG\">#Orders and Observation WG</a></p>",
        "id": 178598538,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1571587508
    },
    {
        "content": "<p>Thanks, asked there</p>",
        "id": 178599238,
        "sender_full_name": "Diego Bosca",
        "timestamp": 1571588725
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191708\">@Diego Bosca</span> - Just to answer your question about dbSNP (feel free to post to <a class=\"stream\" data-stream-id=\"179197\" href=\"/#narrow/stream/179197-genomics\">#genomics</a> if you want to learn more).  We discussed this for a while, and for the reasons Lloyd mentions we landed on using CodeableConcept for what much of the genomics world calls an identifier (dbSNP id, ClinVar ID, Cosmic ID, etc ...).  It isn't quite as obvious for things like HGVS and SPDI (which we don't have a spot for SPDI yet, but we likely will soon). We decided to use CodeableConcept as a way to nudge the producers of data to deliver those values in a more compliant fashion.  We actually had a conversation about this recently <a href=\"#narrow/stream/179197-genomics/topic/hgvs.20component(s)\" title=\"#narrow/stream/179197-genomics/topic/hgvs.20component(s)\">here</a> if you want to review.</p>",
        "id": 178658484,
        "sender_full_name": "Kevin Power",
        "timestamp": 1571667054
    }
]