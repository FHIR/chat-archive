[
    {
        "content": "<p>When searching by day, \"For example, the date 2013-01-10 specifies all the time from 00:00 on 10-Jan 2013 to immediately before 00:00 on 11-Jan 2013\" - but in what timezone?</p>",
        "id": 153917352,
        "sender_full_name": "Ben Spencer",
        "timestamp": 1509642520
    },
    {
        "content": "<p>I suppose whatever timezone the value on the resource is recorded with (if any)</p>",
        "id": 153917356,
        "sender_full_name": "Ben Spencer",
        "timestamp": 1509642987
    },
    {
        "content": "<p>all timezones... ?</p>",
        "id": 153917357,
        "sender_full_name": "John Moehrke",
        "timestamp": 1509643443
    },
    {
        "content": "<p>This is only relevant when cross processing date values with date/time values.<br>\nFor date/date comparisons, there is no time component, and hence no zone issue.</p>",
        "id": 153918799,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1510301208
    },
    {
        "content": "<p>If your storage layer is storing dates as datetimes, then yes you'd need to be careful here.</p>",
        "id": 153918802,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1510301238
    },
    {
        "content": "<blockquote>\n<div class=\"codehilite\"><pre><span></span>When the date parameter is not fully specified, matches against it are based on the behavior of intervals, where:\n    Dates with only the year specified are equivalent to an interval that starts at the first instant of January 1st to the last instant of December 31st, e.g. 2000 is equivalent to an interval of [2000-01-01T00:00, 2000-12-31T23:59].\n    Dates with the year and month are equivalent to an interval that starts at the first instant of the first day of the month and ends on the last instant of the last day of the month, e.g. 2000-04 is equivalent to an interval of [2000-04-01T00:00, 2000-04-30T23:59].\nWhere possible, the system should correct for timezones when performing queries. Dates do not have time zones, and time zones should not be considered. Where both search parameters and resource element date times do not have time zones, the servers local time zone should be assumed.\n</pre></div>\n\n\n</blockquote>\n<p>I think this means that the search parameter ultimately is always expressed as a datetime (either already on the url, or a date interpreted as a period by the server as described above), and to match that with the resources, I use datetimes in the search index as well. Thereby using the second rule: use the servers local time zone if not otherwise specified.</p>\n<p>But I agree there are probably cases where these rules don't cover everything.</p>",
        "id": 153918806,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1510301899
    },
    {
        "content": "<p>For date parameters, I'm actually indexing the string.<br>\n(and therefore the starts-with works great, completely ducking the issues)</p>",
        "id": 153918817,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1510305670
    }
]