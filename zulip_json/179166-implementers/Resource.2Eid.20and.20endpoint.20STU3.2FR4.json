[
    {
        "content": "<p>Suppose an Observation with <code>.id</code> 123 on base <code>example.org/fhir/stu3</code>. Suppose you move to R4 with or without changing the base:</p>\n<p>Is it expected that you keep the same <code>Resource.id</code> in R4 as you had in STU3 - I've always assumed yes</p>\n<p>What could be valid reasons for assigning a new id, effectively copying the resource?</p>\n<ul>\n<li>different endpoint?</li>\n<li>different version of FHIR?</li>\n<li>same version of FHIR but different version of underlying profile?</li>\n<li>because you have a FHIR store and optimize retrieval using the right FHIR version/profile this way</li>\n<li>none of the above?</li>\n</ul>",
        "id": 268678008,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1642677984
    },
    {
        "content": "<p>I'd say: Same set of backend data (whether legacy or native FHIR), same id. Patient Smith is patient Smith (with the same id) regardless of what versions/profiles the API supports. That would be the most RESTful way of thinking about ids. However, I expect the spec to be silent on this (and no, I didn't look), thus effectively allowing you to do whatever you want.</p>",
        "id": 268684057,
        "sender_full_name": "Ren√© Spronk",
        "timestamp": 1642681728
    },
    {
        "content": "<p>yes I think it depends if you think of it as the same data. If it is not a copy, but a new way to access the same data then the same id makes sense (and the \"old\" copy is no longer available - same id, different url, would be technically different but confusing). </p>\n<p>Side issue: \"The logical id is unique within the space of all resources of the same type on the same server. Once assigned by the server, the id is never changed.\" But what makes it the same resource, and does it matter if it is not?<br>\nIs it acceptable to randomly reassign all the ids on a server (say, overnight, when no transactions are in progress). If not, why not? Who has the right to keep my ids?</p>",
        "id": 268686939,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1642683319
    },
    {
        "content": "<p>I think the combination of namespace (base URL) and id should consistently identify the same resource.  However, if you change the namespace (base URL), then there isn't any implication that the ID say the same.  So <a href=\"http://example.org/fhir/stu3/Patient/1234\">example.org/fhir/stu3/Patient/1234</a> and <a href=\"http://example.org/fhir/r4/Patient/1234\">example.org/fhir/r4/Patient/1234</a> can be different patients.  However if you start hosting an R4 resource on <a href=\"http://example.org/fhir/stu3/Patient.1234\">example.org/fhir/stu3/Patient.1234</a>, then you'd need to keep the same identity as the previous STU3 resource at that same URL.</p>",
        "id": 268695702,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1642687263
    },
    {
        "content": "<p>Assigning new IDs in the same namespace can be really dangerous.  It basically makes it look like all the data is \"duplicated\", which can be bad for  clinical data.  If a client had queried you before the upgrade, and has stored a local copy, then queries you after, and pulls that down into their local copy, then everything is either duplicated, or possibly assigned to the wrong patient.  It would be a giant mess unless every client were super conservative in their processing (which, in my experience, they aren't).</p>",
        "id": 268696191,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1642687443
    },
    {
        "content": "<p>I see a lot of support for my ground thought: same information, same id, regardless of technical representation.</p>\n<p>I did not necessarily realize that while the server may know that <a href=\"http://example.org/fhir/stu3/Patient/123\">example.org/fhir/stu3/Patient/123</a> and <a href=\"http://example.org/fhir/r4/Patient/123\">example.org/fhir/r4/Patient/123</a> are the same patient, this cannot be assumed or inferred by a client. This imo makes multiple end points per version of FHIR less desirable as it creates virtual copies of data.</p>\n<p>I did note the impreciseness in \"The logical id is unique within the space of all resources of the same type on the same server. Once assigned by the server, the id is never changed.\" as it leaves in the middle what defines a server. The only thing that makes sense to me is that 'server' is equal to endpoint</p>",
        "id": 268697498,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1642688014
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191375\">Alexander Henket</span> <a href=\"#narrow/stream/179166-implementers/topic/Resource.2Eid.20and.20endpoint.20STU3.2FR4/near/268697498\">said</a>:</p>\n<blockquote>\n<p>This imo makes multiple end points per version of FHIR less desirable as it creates virtual copies of data.</p>\n</blockquote>\n<p>I'm not sure I agree here.  Since two endpoints are logically different, it isn't really any different than having endpoints for different hospitals.  Several years ago we had a lot of discussion (at a WGM) about how to handle multiple FHIR versions, whether to use HTTP headers, different endpoints, etc.  It was all kinda a wash, but the common practice so far has been multiple endpoints and that is working fine as far as I know.</p>",
        "id": 268701167,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1642689521
    },
    {
        "content": "<p>the id should only be seen as a unique identifier at that endpoint for that resource type. It should not be expected that an id on one endpoint is the same thing at another endpoint. This is very important. The .identifier is there to carry identifiers that might cross many endpoints (and business systems).</p>",
        "id": 268701590,
        "sender_full_name": "John Moehrke",
        "timestamp": 1642689697
    },
    {
        "content": "<p>can the same id be used for the same data on two different endponts? Yes, but a client that expects this is WRONG. That client will likely work fine in the initial setting, and totally fail in other settings.</p>",
        "id": 268702062,
        "sender_full_name": "John Moehrke",
        "timestamp": 1642689916
    },
    {
        "content": "<p>Different hospitals with different endpoints makes sense, unless they share a common backend. <a href=\"http://example.org/fhir/stu3/Patient/123\">example.org/fhir/stu3/Patient/123</a> and <a href=\"http://example.org/fhir/r4/Patient/123\">example.org/fhir/r4/Patient/123</a> MAY be the same Patient and one may use the Patient.identifier to attest to that. Unless that proves that these are in fact the same Patient, one should assume they are different. I know for a fact that a lot of resources do not have an identifier in our Dutch context so unless you are willing  to venture into other deduplication schemes like code + date, having multiple endpoints almost unavoidably  leads to virtual duplicates of data. Technically there is no issue in multiple endpoints. Functionally/clinically I'm not so sure.</p>\n<p>Would the discussion from all those years ago turn out the same today I wonder.</p>",
        "id": 268745927,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1642707427
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191375\">Alexander Henket</span> <a href=\"#narrow/stream/179166-implementers/topic/Resource.2Eid.20and.20endpoint.20STU3.2FR4/near/268697498\">said</a>:</p>\n<blockquote>\n<p>I see a lot of support for my ground thought: same information, same id, regardless of technical representation.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span>  -- I like this idea a <strong>lot</strong>. I believe that our lives would be <em>fundamentally</em> simpler if the same exact thing had the same exact id, no matter at which endpoint it was discoverable. Where there is an overarching governance over the health data, this is eminently doable.</p>",
        "id": 268752144,
        "sender_full_name": "Derek Ritz",
        "timestamp": 1642710304
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193307\">@Derek Ritz</span>  I'm not sure if that is what Alexander meant, but it is not practical to have the same ID across endpoints.  You can have the same <em>business identifier</em> but not the same FHIR ID.  Using these same FHIR ID is impossible in practice, and not nearly as useful as you probably think (because of merges, and identity issues).</p>",
        "id": 268758579,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1642713198
    },
    {
        "content": "<p>Resource id is a primary key.  If you have multiple interfaces to the same database, then it's reasonable to surface that same key over each of them.  If you have different databases that aren't explicitly synchronized/replicated, then it's exceptionally unlikely that the keys will be the same.  When you're hitting an interface, you won't know what lies underneath and will thus have to always assume that different url + id == potentially different instance and behave accordingly.</p>",
        "id": 268760330,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1642713971
    },
    {
        "content": "<p>I think the foundational concept of <code>FHIR base</code> is sufficiently clearly described in the specification:</p>\n<blockquote>\n<p>The Service Base URL is the address where all of the resources defined by this interface are found. The Service Base URL takes the form of</p>\n<p><div class=\"codehilite\"><pre><span></span><code>http{s}://server{/path}\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>and further down</p>\n<blockquote>\n<p>For example: <code>http://myserver.com/Patient/1</code> and <code>https://myserver.com/Patient/1</code> refer to the same underlying object, while <code>http://myserver.com:81/Patient/1</code> is a distinct entity from either of the above. </p>\n</blockquote>\n<p>The difference of using different ports on the same server is the same as the difference of in the path component on the same server. </p>\n<p>The Service Base URL <strong>cannot contain any semantics</strong>, therefore all discussion on implying equivalence between resources with different Service Base URLs would be moot.</p>",
        "id": 268781121,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1642726556
    },
    {
        "content": "<p><strong>Technical storage challenge</strong><br>\nThere is a technical challenge for the storage-system when objects change due to model-changes and versioning.<br>\nThe structureDefinition of the stored object may have changed significantly across profile-meta-versions and/or fhir-versions. </p>\n<p><strong>Freedom of assigning logical ids</strong><br>\n<a href=\"https://build.fhir.org/resource.html#id\">https://build.fhir.org/resource.html#id</a> states</p>\n<blockquote>\n<p>Each resource has an id element which contains the  logical id  of the resource assigned by the server responsible for storing it. ... Logical Ids are always opaque, and external systems need not and should not attempt to determine their internal structure.*<br>\nIMO: <strong>FHIR Resource Servers are free to create new logical instances if object-storage-requirements call for this</strong></p>\n</blockquote>\n<p>IMO: The business identifier should be used to indicate the same object across multiple endpoints.<br>\nhttp{s}://{server}{/fhir-version}{/path}?identifier={business identifier}|StructureDefinition.version}<br>\nNot the logical id<br>\nhttp{s}://{server}{/fhir-version}{/path}{logical-id}|StructureDefinition.version}</p>\n<p><strong>How to indicate a specific version</strong><br>\nBased on <a href=\"https://build.fhir.org/structuredefinition-definitions.html#StructureDefinition.fhirVersion\">https://build.fhir.org/structuredefinition-definitions.html#StructureDefinition.fhirVersion</a></p>\n<blockquote>\n<p>There may be different structure definition instances that have the same identifier but different versions. The version can be appended to the url in a reference to allow a reference to a particular business version of the structure definition with the format [url]|[version].</p>\n</blockquote>\n<p><strong>Possibility to use logical-id uniquely as joint agreement</strong><br>\nAn additional constraint should be impsoed if logical-id is to be used as unique key.<br>\nSee the unless phrase below.<br>\n<a href=\"https://www.hl7.org/fhir/managing.html#distributed\">https://www.hl7.org/fhir/managing.html#distributed</a></p>\n<blockquote>\n<p>... the logical id of the resource is not guaranteed to be unique (unless all resources have a UUID for the logical id, which is allowed but not required). *</p>\n</blockquote>",
        "id": 269225636,
        "sender_full_name": "Tjerk Drouen",
        "timestamp": 1643100867
    },
    {
        "content": "<p>Across endpoints, logical id (i.e. [x].identifier) is the only safe way to decide that something is the \"same\", and even that isn't necessarily always \"safe\" - there are lots of situations where the same business identifier might exist on more than one record.  However, if a system exposes a <em>single</em> endpoint and uses HTTP content negotiation to determine the version, then id would be the same regardless of what version you ask for - even if the data is represented quite differently between versions.</p>",
        "id": 269298479,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1643134176
    },
    {
        "content": "<p>Where each <a href=\"http://resource.id\">resource.id</a> is a UUID, it would seem that the usefully simplifying expectation that \"same information, same id\" becomes reasonable... and doable.</p>",
        "id": 269437942,
        "sender_full_name": "Derek Ritz",
        "timestamp": 1643213922
    },
    {
        "content": "<p>Except that id isn't required to be a UUID - and it often isn't (and can't be made to be).  Agree that if the id <em>is</em> a UUID, then it <em>ought</em> to represent the same record.  However, there's no guarantee that it'll be the same information.  The instance on one server might be years - or even decades - out of date.</p>",
        "id": 269447542,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1643217463
    }
]