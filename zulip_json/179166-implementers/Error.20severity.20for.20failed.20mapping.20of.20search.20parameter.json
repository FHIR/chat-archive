[
    {
        "content": "<p>When a client provides a search parameter that the server doesn't recognize, the server can return a fatal OperationOutcome or include a non-fatal one in the Bundle with results.  </p>\n<p>In general, I believe a server should be as forgiving as possible in the face of unexpected client behavior.  In this case, returning some results could be misleading.  </p>\n<p><strong>Example 1: Failed mapping of a single parameter</strong></p>\n<p>The client wants a patient's progress notes.  </p>\n<p><code>[base]/DocumentReference?patient=1316024&amp;type=http://loinc.org|11506-3</code></p>\n<p>If the server can't map this LOINC code, does it return all DocumentReferences for that patient?  That's certainly not what the client wants.  </p>\n<p><strong>Example 2: One OR parameter can be mapped, the other can't</strong></p>\n<p>The client wants the patients progress notes and discharge documentation.</p>\n<p><code>[base]/DocumentReference?patient=1316024&amp;type=http://loinc.org|11506-3,http://loinc.org|18842-5</code></p>\n<p>The server can map 18842-5 but not 11506-3.  Does it return the discharge documentation?  The client gets some of the data it wants, and it can tell from the OperationOutcome that the mapping for progress notes failed.  But . . . what if the client doesn't check for the OperationOutcome?</p>",
        "id": 153968520,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1528748617
    },
    {
        "content": "<p>If the server returns a fatal OperationOutcome in the latter case, the client needs to do a second search to get just the discharge documentation if that's an acceptable compromise.</p>",
        "id": 153968521,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1528748725
    },
    {
        "content": "<p>1. How likely is it that a client will take note of a non-fatal OperationOutcome and take appropriate action?  <br>\n2. How dangerous is it if a client fails to do this?<br>\n3. How useful are the results if a server ignores the mapping failure and returns results as if the client hadn't passed that parameter in the first place?<br>\n4. How inconvenient is it for a client to make a new request if the server doesn't return the compromise results?</p>",
        "id": 153968525,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1528748857
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191936\">@Michael Donnelly</span> The query response is required to include a \"self\" link that includes the portions of the query that it actually executed.  So if it only searched on one of the LOINC codes, that's all that should be in the self link.  Clients are expected to check the self link.</p>",
        "id": 153968541,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528750076
    },
    {
        "content": "<p>we can't really know 'how likely' something is; we encourage clients to do it, and as the safety impact increases, it becomes more likely</p>",
        "id": 153968579,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528759011
    },
    {
        "content": "<p>in this case, you're second guessing the client - trying to think what they really meant. Actually, what the client said is 'find me anything that has X'. your response is: I didn't find anything, with a note 'I'd never find anything because we don't accept X'. I don't think that should be an error unless you're really sure (somehow) that the client is <em>wrong</em> to ask for X and you won't accept it.</p>",
        "id": 153968580,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528759099
    },
    {
        "content": "<p>Ah, I wasn't clear enough.  If a client asks for X (example 1 above), and we don't know what X is, the question is whether we should return <strong>nothing</strong> or if we should return <strong>everything</strong>.  If we pretended we didn't even <em>receive</em> parameter X, then we'd return results that aren't filtered on that parameter.</p>",
        "id": 153968703,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1528811596
    },
    {
        "content": "<p>To be clear, I'm not suggesting that's a good idea.</p>",
        "id": 153968704,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1528811609
    },
    {
        "content": "<p>I was trying to present the two options without including my bias.</p>",
        "id": 153968706,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1528811631
    },
    {
        "content": "<p>See <a href=\"http://build.fhir.org/security.html#AccessDenied\" target=\"_blank\" title=\"http://build.fhir.org/security.html#AccessDenied\">http://build.fhir.org/security.html#AccessDenied</a></p>",
        "id": 153968708,
        "sender_full_name": "John Moehrke",
        "timestamp": 1528811818
    },
    {
        "content": "<p>With fully authorized clients, a very rich and expressive response can be given...</p>",
        "id": 153968709,
        "sender_full_name": "John Moehrke",
        "timestamp": 1528811940
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> was this meant for another thread?</p>",
        "id": 153968712,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1528812416
    },
    {
        "content": "<p>nope, it was intended for you to see that we have already indicated that returning various kinds of responses exist</p>",
        "id": 153968723,
        "sender_full_name": "John Moehrke",
        "timestamp": 1528815053
    },
    {
        "content": "<p>So, it seems \"return nothing\" is the desired behaviour.  But extending this to how we deal with <em>unknown</em> search parameters, we don't say \"I'd never find anything because I don't accept X\", we say \"Didn't know about search parameter X, so I disregard X\".  Isn't that inconsistent?</p>",
        "id": 153968726,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1528819065
    },
    {
        "content": "<p>isn't the guidance on 'unknown' query parameters is to ignore that parameter? Thus returning results based only on the query parameters you know. This behaviour is common, it tends to simply return more results than one would expect, as parameters tend to reduce the results, not add to them (exceptions in FHIR are things like _include)... but I think what is being asked is if there could be a way to return some warning (lesser than a warning actually) that indicates whichquery parameters were ignored, so that the clent can undestand the results might not be as expected</p>",
        "id": 153968730,
        "sender_full_name": "John Moehrke",
        "timestamp": 1528819602
    },
    {
        "content": "<p>so we have a way to do this.</p>",
        "id": 153968782,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528843714
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191936\">@Michael Donnelly</span> thanks for the clearer statement. I think it is more safe to return too much than to return unexpectedly little. Further, given that we already say that you ignore parameters you don't know, and that you confirm back to the client what parameters you did process, I think it would be most expected and safe to ignore parameters you don't support (and possibly return a note to that effect).</p>",
        "id": 153968783,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528843803
    },
    {
        "content": "<p>It would be good when this subject arises at connectathons to point out to search users that they can and do get search messages back, and they should display them somewhere if they do - they can be very useful to users</p>",
        "id": 153968784,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528843846
    }
]