[
    {
        "content": "<p>AppointmentResponse says it implements the Request pattern... Is that intended?</p>",
        "id": 167381362,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1559736453
    },
    {
        "content": "<p>I'm looking at a simple scheduling: someone asks for an appointment and it gets confirmed or rejected. So I presume I would have an AppointmentRequest and AppointmentResponse. But atm both Appointment and AppointmentResponse implement the Request</p>",
        "id": 167381634,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1559736640
    },
    {
        "content": "<p>Both are describing something that's intended to happen, not something that's actually happened yet.</p>",
        "id": 167386822,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559740495
    },
    {
        "content": "<p>it makes sense to see it from that perspective, but i can't figure out the mechanism. this sounds strange:<br>\n\"The reply process is simply performed by the person/system handing the requests, updating the participant statuses on the appointment as needed. If there are multiple systems involved, then these will create AppointmentResponse entries with the desired statuses.<br>\nOnce all participants have their participation status created/updated (and the main system marking the appointment participant records with the AppointmentResponse statuses) then the overall status of the Appointment is updated.\"</p>",
        "id": 167398236,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1559747184
    },
    {
        "content": "<p>AppointmentResponse is really a request to update the Appointment resource to indicate attendance.</p>",
        "id": 167398292,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559747240
    },
    {
        "content": "<p>ok, so the one resource that holds the appointment (from initial request/tentative to accepted/rejected) is Appointment. and Response is for tracking, well, the responses of every participant.</p>",
        "id": 167398583,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1559747426
    },
    {
        "content": "<p>Yup</p>",
        "id": 167400011,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559748274
    },
    {
        "content": "<p>thanks. I will have to implement this soon and possibly create some ExampleScenarios for  explaining these workflows.</p>",
        "id": 167403276,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1559750292
    },
    {
        "content": "<p>(if that is useful - i mean i will create them for my implementation anyway, but if useful, we can post some examples in the core documentation)</p>",
        "id": 167403308,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1559750310
    },
    {
        "content": "<p>There are sample state workflow on the appointment page showing the transitions and interactions between those resources under differing use cases.</p>",
        "id": 167709377,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1560101933
    }
]