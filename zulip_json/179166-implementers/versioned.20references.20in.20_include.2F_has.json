[
    {
        "content": "<p>If a reference is version specific (think AuditEvent.entity.reference) and an _include or _has is used, should the included resources be the version specific ones or the current ones?  At first, I thought this obvious (version specific), but not so sure.  Today, I needed to find:<br>\n<code>Encounter?_has:AuditEvent:reference:action-by=update$my-user-id&amp;_profile=http://example.com/sd/something</code><br>\n(action-by is a composite of subtype + altid)<br>\nSince search parameters only apply to the current version, the _profile search applies to current, but the AuditEvent.reference applies to an old version.  My intent was \"an Encounter that was ever updated by my-user-id and (currently) has this profile\".</p>",
        "id": 153851946,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475634762
    },
    {
        "content": "<p>not obvious at all then</p>",
        "id": 153851947,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475634821
    },
    {
        "content": "<p>Having a hard time getting my head around this...thinking maybe there should be a modifier on reference searches to direct resolution</p>",
        "id": 153851949,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475634875
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> <span class=\"user-mention\" data-user-id=\"191370\">@Richard Ettema</span> How do your servers handle this?</p>",
        "id": 153851953,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475635328
    },
    {
        "content": "<p>Could be as simple as <code>Encounter?patient.name=donovan</code> when the Encounter has a version specific patient reference and the patient has been updated. The search indexes usually don't have the old version of the patient...then what?</p>",
        "id": 153851955,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475635467
    },
    {
        "content": "<p>This is an interesting question..</p>\n<p>I implemented <code>_has</code> in a non-version-specific way. Now that I think about it, so is <code>_include</code>. Both features assume the latest version even if the reference is to an older version.</p>",
        "id": 153852232,
        "sender_full_name": "James Agnew",
        "timestamp": 1475807417
    },
    {
        "content": "<p>If a reference is version-specific, you really want an _include to be the specified version.  I'm not as sure about _has</p>",
        "id": 153852257,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1475813617
    },
    {
        "content": "<p>What about a chained search?</p>",
        "id": 153852475,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1476130055
    },
    {
        "content": "<p>That would still follow version-specific references if they were version specific, I presume</p>",
        "id": 153852484,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1476138935
    },
    {
        "content": "<p>Meaning search on old versions. Ouch.  Of course, servers could opt-out, but now we're in a situation where chained search *is* supported, but a particular instance may not be.  Similar to a broken link/reference, but not quite since a current version of the record may still exist.  This is all kinds of fuzzy....</p>",
        "id": 153852486,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1476140194
    },
    {
        "content": "<p>interesting question. I don't follow version specific references in search; all search is on current resources</p>",
        "id": 153852498,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476141728
    },
    {
        "content": "<p>I think with the chained search I would be ok if the deleted content was not indexed, and that the link for chaining was not considered to be the versioned item.</p>",
        "id": 153852510,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1476151730
    },
    {
        "content": "<p>If I search a Provanance and ask to get back its target too, I definitely don't want the current version</p>",
        "id": 153852827,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1476416671
    },
    {
        "content": "<p>Are there any servers out there that follow version specific references in (chained) search? Is this a mandatory requirement? <br>\nContrary use case: Get all audit events for the patient with the MRN currently as 12345 - <br>\n/AuditEvent?participant:Patient.identifier=http://acmehospital.com/Downtown|12345. <br>\nI want to get all audit events of the patient even though this patient was previously wrongly assigned a different MRN?</p>",
        "id": 153853253,
        "sender_full_name": "Anand Mohan Tumuluri",
        "timestamp": 1476909013
    },
    {
        "content": "<p>my server does not consider the version</p>",
        "id": 153853254,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476909059
    },
    {
        "content": "<p>it's not a mandatory requirement</p>",
        "id": 153853255,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476909077
    }
]