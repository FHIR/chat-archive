[
    {
        "content": "<p>I asked this on the HAPI FHIR google groups forum, but didn't get a response.  I do wonder, given the class name, if the code in question is not really from the HAPI team though.  Anyways, trying this question here to see if anyone knows the answer.  I basically created a StructureDefinition in Forge and want to validate an XML input against that definition.</p>",
        "id": 153889361,
        "sender_full_name": "JL",
        "timestamp": 1494511894
    },
    {
        "content": "<p>Sorry, pressed entered by mistake.  :)  This is the original question posted on HAPI google groups:</p>\n<p>I created a profile using Forge where only certain identifiers are permitted for a resource.  It created a StructureDefinition that contains this:</p>\n<div class=\"codehilite\"><pre><span></span>    &lt;element&gt;\n        &lt;path value=&quot;Patient.identifier&quot; /&gt;\n        &lt;slicing&gt;\n            &lt;discriminator&gt;\n                &lt;type value=&quot;value&quot; /&gt;\n                &lt;path value=&quot;type.coding.system&quot; /&gt;\n            &lt;/discriminator&gt;\n            &lt;discriminator&gt;\n                &lt;type value=&quot;value&quot; /&gt;\n                &lt;path value=&quot;type.coding.code&quot; /&gt;\n            &lt;/discriminator&gt;\n            &lt;rules value=&quot;closed&quot; /&gt;\n        &lt;/slicing&gt;\n    &lt;/element&gt;\n</pre></div>\n\n\n<p>I wanted to validate a resource against definition using HAPI, but it seems HAPI does not validate slicing closed rules?  I took a look at org.hl7.fhir.dstu3.validation.InstanceValidator, and I can't seem to find any code that checks for a closed slicing rule.  I see some logic around line 3003 for open rules, but no references for closed rule.  I am using HAPI FHIR 2.4.  Please advise.</p>",
        "id": 153889362,
        "sender_full_name": "JL",
        "timestamp": 1494511949
    },
    {
        "content": "<p>Looks like the validator in the .NET API also doesn't verify this yet. TODO</p>",
        "id": 153889370,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1494513776
    },
    {
        "content": "<p>The FHIR validator has different rules for open vs. \"not open\" but doesn't distinguish between openAtEnd and closed.  So definitely more work to happen.  Out of curiosity, why are you using closed?  It's sort of similar to declaring \"final\" in Java, which is hard to use well.</p>",
        "id": 153889374,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1494514237
    },
    {
        "content": "<p>Thanks for the reply, Llyod.  I was trying to declare that our system takes \"these\" identifiers and other identifiers will be ignored.  Having written that, I think openAtEnd might be a better rule.  I was interested in testing out the validation though, which was why I chose \"closed\" in the beginning because it was more restrictive.</p>",
        "id": 153889396,
        "sender_full_name": "JL",
        "timestamp": 1494515672
    },
    {
        "content": "<p>Open is preferable to OpenAtEnd.  OpenAtEnd says yours have to appear first, which is generally not good practice - order has no meaning and forces the sender to customize order just for you.</p>",
        "id": 153889429,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1494519814
    },
    {
        "content": "<p>Good point - thanks</p>",
        "id": 153889431,
        "sender_full_name": "JL",
        "timestamp": 1494519900
    },
    {
        "content": "<p>So why do we have that as an option?</p>",
        "id": 153889619,
        "sender_full_name": "Eric Haas",
        "timestamp": 1494567508
    },
    {
        "content": "<p>Because there are some implementations that will need to be able to say \"our stuff must come first\" or \"only our stuff is allowed\".  It's not good practice, but sometimes it's implementation reality.</p>",
        "id": 153889646,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1494580999
    }
]