[
    {
        "content": "<p>I have an Observation, which always has a string-value, but sometimes also have a structured result (CodeableConcept).<br>\nRight now I have profiled using two observations with a hasMember attribute pointing from the string-valued observation to the structured observation.</p>\n<p>It would simplify my model if I design one Observation, with value[x] datatype CodableConcept - using CodableConcept.text for the text-based result and  CodableConcept.coding for the structured result. However, is this design an unintended use of the FHIR-standard? (You might argue that since the data is primarily text-based it should be represented as a string - not a text in a CodableConcept datatype)</p>\n<p>If you are interested, you can see an example (of the first design) here: <a href=\"http://build.fhir.org/ig/Kirstinerosenbeck/FKInfo/branches/master/StructureDefinition-KLCommonCareSocialEvaluation.html\">http://build.fhir.org/ig/Kirstinerosenbeck/FKInfo/branches/master/StructureDefinition-KLCommonCareSocialEvaluation.html</a> (where hasMember references a structured evaluation)</p>\n<p>What are your thoughts on this?</p>",
        "id": 210511639,
        "sender_full_name": "Kirstine Rosenbeck GÃ¸eg",
        "timestamp": 1600432326
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span></p>",
        "id": 210515198,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1600434511
    },
    {
        "content": "<p>If the string and the code are expressing the same concept / idea it is appropriate to the just put the string in CodeableConcept.text</p>",
        "id": 210516001,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1600434909
    },
    {
        "content": "<p>Otherwise I would go for a main observation containing two components with the code and string values</p>",
        "id": 210516055,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1600434937
    }
]