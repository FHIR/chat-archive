[
    {
        "content": "<p>We’re trying to use FHIR Provenance to record activities against patient-related resources. The target of the Provenance resource is not a patient resource, but we want to search by patient identifier. The obvious modelling is to reference the related Patient resource in a Provenance.entity reference, which is searchable. The entity reference has a mandatory role parameter coded using the ProvenanceEntityRole valueset, which is not extensible (<a href=\"https://www.hl7.org/fhir/valueset-provenance-entity-role.html\">https://www.hl7.org/fhir/valueset-provenance-entity-role.html</a>). None of the role definitions seem to fit. Perhaps ‘source’ but it has a rather convoluted definition that isn’t very deterministic. </p>\n<p>My question: can we use ‘source’ in this case? If not, how else could we capture a searchable patient identity in the Provenance resource? </p>\n<p>Would appreciate any suggestions. Thanks.</p>",
        "id": 243605428,
        "sender_full_name": "Andrew Berry",
        "timestamp": 1624421634
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span></p>",
        "id": 243648518,
        "sender_full_name": "David Pyke",
        "timestamp": 1624453710
    },
    {
        "content": "<p>Provenance is intended to be used to determine the provenance of a resource. It does not have use-cases for discovering all the Provenance for a given subject.  The Provenance resource design is intended to cover specifically provenance use-cases, and not more.</p>",
        "id": 243648809,
        "sender_full_name": "John Moehrke",
        "timestamp": 1624453881
    },
    {
        "content": "<p>It sounds like you are looking for a function that the AuditEvent does cover. And it covers it much like you have expressed. And AuditEvent covers more than just Create/Update events, it covers queries and reads and more.</p>",
        "id": 243648954,
        "sender_full_name": "John Moehrke",
        "timestamp": 1624453931
    },
    {
        "content": "<p>We have added clarifications of this in the R5 build - <a href=\"http://build.fhir.org/auditevent.html#patient\">http://build.fhir.org/auditevent.html#patient</a></p>",
        "id": 243649085,
        "sender_full_name": "John Moehrke",
        "timestamp": 1624454020
    },
    {
        "content": "<p>Thanks John.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> <a href=\"#narrow/stream/179166-implementers/topic/Modelling.20provenance/near/243648954\">said</a>:</p>\n<blockquote>\n<p>It sounds like you are looking for a function that the AuditEvent does cover. And it covers it much like you have expressed. And AuditEvent covers more than just Create/Update events, it covers queries and reads and more.</p>\n</blockquote>\n<p>They’re not AuditEvents because they are intended for clinical review (noting from AuditEvent “This content is not intended to be accessible or used directly by other healthcare users”). That said, re-reading the Provenance definition in light of your comments I can see we are stretching the definition. We could perhaps take a slightly different approach and say that the Patient resource is the target since we are tracking changes to the patient clinical record, but I suspect this is still stretching the definition. </p>\n<p>Other thoughts or suggestions?</p>",
        "id": 243721432,
        "sender_full_name": "Andrew Berry",
        "timestamp": 1624487610
    },
    {
        "content": "<p>You might need to define a custom SearchParameter</p>",
        "id": 243940774,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1624639337
    },
    {
        "content": "<p>The note on AuditEvent is more to distinguish Provenance from AuditEvent.</p>",
        "id": 243943393,
        "sender_full_name": "John Moehrke",
        "timestamp": 1624640699
    },
    {
        "content": "<p>Possibilities:<br>\na. add an extension in Provenance for .patient and search parameter<br>\nb. make this extension core in FHIR.. by proving it useful beyond a specific project<br>\nc. proving it useful it is recognized as a core element in Provenance.<br>\nd. define an operation that works on magic (use of $everything with reverse include on Provenance)<br>\nI could be convinced this is core. The Provenance layout is generic, and thus not considering the Healthcare needs.<br>\nBut we would need more than one person interested.</p>",
        "id": 243943792,
        "sender_full_name": "John Moehrke",
        "timestamp": 1624640922
    },
    {
        "content": "<p>Drawbacks of adding a patient element (extension or core) is that this adds overhead to everywhere Provenance is recorded that there is an evaluation of if a Patient is relevant (not all FHIR resources are patient relevant). and then extraction of the Patient id relevant (which sometimes it is a step away).</p>",
        "id": 243943907,
        "sender_full_name": "John Moehrke",
        "timestamp": 1624641002
    },
    {
        "content": "<p>What if the Provenance targets resources from multiple patients? A bulk update, insert process.</p>",
        "id": 243955700,
        "sender_full_name": "Daniel Venton",
        "timestamp": 1624647159
    },
    {
        "content": "<p>yup, more issues with this.</p>",
        "id": 243957744,
        "sender_full_name": "John Moehrke",
        "timestamp": 1624648230
    },
    {
        "content": "<p>Thanks, interesting discussion. Our use case is patient clinical review, patient history and (potentially) clinical audit, so a singular patient resource is reasonable for this use case. </p>\n<p>I don’t think it would be adequately covered by history on the Patient resource as other resources are necessarily involved and the specific agent and activity is important (i.e. knowledge of data changed is not necessarily sufficient).  It isn’t really resource provenance because it’s about the patient rather than the resources themselves, but it is about activity involving a patient, the agent responsible, and and other entities involved in the activity. You can perhaps interpret the English language meaning of “provenance” to include this. </p>\n<p>Would a clinical “PatientProvenance” or perhaps “ClinicalAuditEvent” resource be appropriate or warranted?</p>",
        "id": 244055004,
        "sender_full_name": "Andrew Berry",
        "timestamp": 1624779899
    },
    {
        "content": "<p>I have trouble imagining those being added.  Those sound more like profiles and IGs built on the existing resources.</p>",
        "id": 244071764,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1624807858
    },
    {
        "content": "<p>if added they would be huge overhead and thus very unlikely to be filled out. Provenance itself is unlikely to be filled out without some community policy requiring it.</p>",
        "id": 244072699,
        "sender_full_name": "John Moehrke",
        "timestamp": 1624809320
    },
    {
        "content": "<p>I am unclear on why a review of the Patient compartment is not sufficient?</p>",
        "id": 244072710,
        "sender_full_name": "John Moehrke",
        "timestamp": 1624809362
    },
    {
        "content": "<p>Regarding Patient, there are a few reasons it doesn’t work for us:</p>\n<ul>\n<li>activity and agent are important and this is not captured or coded in our case</li>\n<li>at present we don’t have access to adequate history for the resources in question</li>\n</ul>\n<p>In an ideal world we could perhaps access them via Patient history and linked resource history. Our world probably won’t be ideal for a while yet. The limited compliance on resource history and the request pattern captured in history are also likely to make it troublesome to reliably capture activity and agent, especially if multiple repositories are involved.</p>",
        "id": 244089768,
        "sender_full_name": "Andrew Berry",
        "timestamp": 1624835428
    },
    {
        "content": "<p>Note that based on this discussion, we will most likely model around existing resources.</p>",
        "id": 244089794,
        "sender_full_name": "Andrew Berry",
        "timestamp": 1624835524
    },
    {
        "content": "<p>So for activity and agent consistency it does seem like you need a policy requiring Provenance. I think what I was pushing back on is the modification of Provenance to include a Patient. I was more pointing that there is already the $everything (aka Patient compartment) that is defined to find everything; from which you can get the Provenance for all of that. Wrap this algorithm into an operation -- $provenanceOfEverything</p>",
        "id": 244134725,
        "sender_full_name": "John Moehrke",
        "timestamp": 1624882261
    },
    {
        "content": "<p>That makes sense John. I wasn’t particularly wanting to change the current resource definition. We will likely use Patient as our target resource and explicitly identify relevant subordinate resources in entity references.</p>",
        "id": 244233855,
        "sender_full_name": "Andrew Berry",
        "timestamp": 1624942878
    },
    {
        "content": "<p>so you are planning on adding to all Provenance records a <a href=\"http://Provenance.target\">Provenance.target</a> of the Patient impacted? Yet the activity that caused the Provenance did not revise the Patient resource... this would be against the definition of the .target element. Far better to add a Provenance.entity of the Patient as a resource that was read (source). This  is not directly the intent, but surely it is true that anything created/updated (<a href=\"http://Provenance.target\">Provenance.target</a>) was created/updated with knowledge of the subject. (This is what I recommend in AuditEvent for similar purpose).   -- I don't think this is the proper solution, prefer the use of AuditEvent as it already does this (and includes read and query).</p>",
        "id": 245045958,
        "sender_full_name": "John Moehrke",
        "timestamp": 1625581574
    }
]