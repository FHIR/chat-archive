[
    {
        "content": "<p>Hello<br>\nI've a question on the example given under the section of reverse chaining.</p>\n<p>GET [base]/Patient?_has:Observation:patient:_has:AuditEvent:entity:user=MyUserId</p>\n<p>If my understanding is correct about reverse chaining, 'user' should be a search parameter for the Resource 'Audit'. I don't see any such search parameter defined for 'Audit'.</p>\n<p>Any insights?</p>\n<p>Thanks</p>",
        "id": 258738703,
        "sender_full_name": "Chidamber Kumar",
        "timestamp": 1634921164
    },
    {
        "content": "<p>You're correct! This is an error stemming from the fact that the example you cited is not validated automatically. The word <code>user</code> should probably be <code>agent</code>. I'll submit a Jira ticket.</p>",
        "id": 258739615,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1634921556
    },
    {
        "content": "<p><a href=\"http://jira.hl7.org/browse/FHIR-34162\">FHIR-34162</a></p>",
        "id": 258739738,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1634921612
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> for taking that as an action.</p>",
        "id": 258746963,
        "sender_full_name": "Chidamber Kumar",
        "timestamp": 1634924667
    },
    {
        "content": "<p>Regarding the Reverse Chaining, I cannot understand how multiple _has work. For example, [base]/Patient?_has:Observation:patient:code=123&amp;_has:Observation:patient:code=456. In the documentation it says that each _has parameter is processed independently of other _has parameters, but I cannot understand the meaning of independently here. Would you please help me in this matter?</p>",
        "id": 269122355,
        "sender_full_name": "Mohsen Jafari",
        "timestamp": 1643038317
    },
    {
        "content": "<p>A better example would be to find patients where (has an Observation with code 123) AND (has an Observation with status \"final\"). But those could be two different Observations because each \"has\" is treated independently (or separately).</p>\n<p>It is not possible to use _has to find patients where (has an Observation with (code 123 AND status \"final\")).</p>",
        "id": 269123784,
        "sender_full_name": "Paul Church",
        "timestamp": 1643038862
    },
    {
        "content": "<p>You could gather the observations you care about, collect a set of Patient id values from them then read each of those patients.</p>",
        "id": 269125729,
        "sender_full_name": "Daniel Venton",
        "timestamp": 1643039695
    },
    {
        "content": "<p>Paul is correct that this can't be done using 2 different _has parameters, there are other ways of doing this in one single search, e.g. using _include: GET [base]/Observation?code=123&amp;status=final&amp;_include=Observation: patient (ok, that'd also return the actual observations), or configuring [if one has the option of doing so] the server to support a new composite type search parameter for Observations, a composite search parameter for the tuple (code, status).</p>",
        "id": 269149257,
        "sender_full_name": "Ren√© Spronk",
        "timestamp": 1643049257
    }
]