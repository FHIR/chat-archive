[
    {
        "content": "<p>Hi there,</p>\n<p>I have a question about proper implementation for multiple Implementation Guides in a single server. In the scope of our project, we have to implement CarinBB and USCore guides. Both IG has PractitionerRole resource.<br>\nFrom US Core IG PractitionerRole.practitioner field has to be filled because of cardinality 1..1.<br>\nBut for CarinBB IG PractitionerRole.practitioner field is optional because of cardinality 0..1.</p>\n<p>So there are questions: <br>\nHow should we resolve this conflict from the capability statement's point of view?<br>\nDo we have to implement our own IG to merge all conflicts?<br>\nDoes the metadata endpoint have to return the next resource?<br>\n{<br>\n  \"type\": \"PractitionerRole\",<br>\n  \"profile\" : \"<a href=\"http://hl7.org/fhir/custom/StructureDefinition/custom-practitionerrole\">http://hl7.org/fhir/custom/StructureDefinition/custom-practitionerrole</a>\",<br>\n  \"supportedProfile\": [<br>\n    \"<a href=\"http://hl7.org/fhir/us/carin/StructureDefinition/carin-bb-practitionerrole\">http://hl7.org/fhir/us/carin/StructureDefinition/carin-bb-practitionerrole</a>\"<br>\n  ],<br>\n  ...<br>\n}</p>\n<p>Regards, Siarhei.</p>",
        "id": 197714745,
        "sender_full_name": "Siarhei Bartoshyk",
        "timestamp": 1589559145
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 197717358,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1589560323
    },
    {
        "content": "<p>Carin-bb has PractitionRole.practitioner as 1..1 in version 0.1.0 and in the current version.  It's not possible to relax that constraint in a depended profile  Can you screenshot where you see it being 0..1 in Carin?</p>",
        "id": 197718948,
        "sender_full_name": "David Pyke",
        "timestamp": 1589560880
    },
    {
        "content": "<p>Generally the solution is to spit out instances that meet the requirements of everyone.  That gets a bit tougher if you're also needing to <em>consume</em> data from everyone.  It's also tricky if the profiles impose constraints on the max that can be sent.  In those situations, the best thing to do is to push back on the profile authors.  (e.g. it's bad practice to constrain <a href=\"http://Patient.name\">Patient.name</a> to 1..1.  Instead, enforce that there's a mandatory slice with enough metadata that would allow you to extract that one name from amongst all the others that might exist</p>",
        "id": 197719844,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1589561302
    }
]