[
    {
        "content": "<p>How should you resolve canonical references that are polymorphic/any (such as <code>RelatedArtifact.resource</code> <a href=\"https://www.hl7.org/fhir/metadatatypes.html#RelatedArtifact\">https://www.hl7.org/fhir/metadatatypes.html#RelatedArtifact</a>)?</p>",
        "id": 199439876,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1591058722
    },
    {
        "content": "<p>You'd have to search against all of the types that have canonical URLs.  (Or at least all those you know how to search for.)  It would be worth clarifying this in the spec - can you submit a change request?</p>",
        "id": 199447104,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1591068347
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  There is no search at the system level that could work across resources (for a URL)? <del>So that is not possible?</del> it's technically possible, but would require up to (total number of resource types with canonical URLs) search requests</p>",
        "id": 199498505,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1591107801
    },
    {
        "content": "<p>I think a more practical solution would be a system search, like <code>GET /fhir/?url=&lt;canonical-url&gt;</code>, that would search across all resource types (that have canonical URLs)?</p>",
        "id": 199502581,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1591108985
    },
    {
        "content": "<p>Yes, that would work.</p>",
        "id": 199504629,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1591109919
    },
    {
        "content": "<p>Canâ€™t you use _type on the system level for this?</p>",
        "id": 199505165,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1591110106
    },
    {
        "content": "<p>What would you use for <code>_type</code>? In this case the Canonical is ploymorphic, so you don't know what type it is.</p>",
        "id": 199505488,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1591110214
    },
    {
        "content": "<p>To constrain at least to all types which can have a canonical url</p>",
        "id": 199505656,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1591110274
    },
    {
        "content": "<p>so _type=StructureDefinition,ValueSet,CodeSystem&amp;url=&lt;canonical&gt;</p>",
        "id": 199505775,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1591110322
    },
    {
        "content": "<p>I see, that's a great idea</p>",
        "id": 199505812,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1591110331
    },
    {
        "content": "<p>but this pattern will be common as we start using canonical, so maybe we think about a system level capability for this.</p>",
        "id": 199505937,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1591110372
    },
    {
        "content": "<p>CanonicalResource could define this search parameter: <a href=\"http://build.fhir.org/canonicalresource.html#search\">http://build.fhir.org/canonicalresource.html#search</a></p>\n<p>but I would think it should be _url</p>",
        "id": 199506685,
        "sender_full_name": "Paul Church",
        "timestamp": 1591110658
    }
]