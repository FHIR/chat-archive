[
    {
        "content": "<p>Hello, I am looking for some validation on which FHIR resource to use for a medication solution such as Normal Saline.  I believe it may be<br>\nthe ingredient in the Medication resource.  If this is the correct resource, is the solution always the last ingredient? Thank You</p>",
        "id": 153972419,
        "sender_full_name": "Sylvia Freeman",
        "timestamp": 1530208908
    },
    {
        "content": "<p>It will be interesting to see the answer for this.  In the HL7 V2.x world this would come from the RXC-1 (Component Type) field marked as 'B' (Base) typically.  I'm wondering how people map this to FHIR Medication ingredient[x]?   The HL7 v2 Mapping (<a href=\"http://build.fhir.org/medication-mappings.html#v2\" target=\"_blank\" title=\"http://build.fhir.org/medication-mappings.html#v2\">http://build.fhir.org/medication-mappings.html#v2</a>) on the FHIR Medications page doesn't seem to help with this.</p>",
        "id": 153972424,
        "sender_full_name": "John Silva",
        "timestamp": 1530210968
    },
    {
        "content": "<p>There is no fixed rule for what order the ingredients are listed in.  You can use ingredient.inActive = false to indicate that it's not an active ingredient but, at present, there's no standard way to differentiate the 'base' from any other excipient ingredient.  <span class=\"user-mention\" data-user-id=\"191759\">@Melva Peters</span> <span class=\"user-mention\" data-user-id=\"192080\">@John Hatem</span> thoughts?</p>",
        "id": 153972425,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530211104
    },
    {
        "content": "<p>MedicationKnowledge is expected to have ingredient role as a property.</p>",
        "id": 153972438,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530214406
    },
    {
        "content": "<p>The notion of \"base\" is most relevant with compounds and custom IVs.  And in both of those cases, there probably wouldn't <em>be</em> a MedicationKnowledge resource.</p>",
        "id": 153972440,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530214492
    },
    {
        "content": "<p>I'm wondering that since medicationknowledge has an ingredient role, medication.ingredient.isActive could actually become medication.Ingredient.role.</p>",
        "id": 153972441,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530214798
    },
    {
        "content": "<p>But yes if we have the need to convey whether something is an excipient or a solvent vs adjuvant or active substance, this is medication.ingredient.isActive</p>",
        "id": 153972442,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530214912
    },
    {
        "content": "<p>Thank you very much for the responses! I will use the medication.ingredient resource for the solution and the medication.ingredient.isActive to indicate whether it is a medication or a solution.</p>",
        "id": 153972444,
        "sender_full_name": "Sylvia Freeman",
        "timestamp": 1530215333
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span>  -- aren't there other uses besides compounds and IVs that have a non-active (non-medicine) ingredients?  For example, the elixir in cough syrup is some kind of 'sugar/water' syrup that is only used for the delivery of the medicine but is not the active ingredient.   If the Medication resource is truly used to represent all 'stuff' in the formulary, will it need to represent all of these ingredients?  (I suppose there might be cases where some non-active ingredient is something that a patient is allergic or have a reaction to, e.g. a diabetic to a sugar based elixir.   Is the active property sufficient for this?   Aren't there some 'drug databases' that have fully enumerated lists of ingredients for the drugs in the DB?)</p>",
        "id": 153972463,
        "sender_full_name": "John Silva",
        "timestamp": 1530222348
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194183\">@John Silva</span> yes there are other use cases. The medication resource is not intended to represent all stuff in formulary, but yes it will also need to support these ingredients. e.g. magistral preparations. No, the \"active\" does not seem sufficient for all this but it was there from the initial 80% scope initially defined. We can consider bringing this to Pharmacy but perhaps later as the medicationknowledge (which is really a medication Definition) becomes more mature.<br>\nAnd yes, there are drug DBs and for those the MedicationKnowledge exists</p>",
        "id": 153972466,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530224839
    },
    {
        "content": "<p>If you are prescribing, dispensing, administering or recording usage statements, then the Medication resource is the appropriate one to represent the medication.  There are examples in the MedicationRequest resource where the medication is compounded such as an IV bag.  The MedicationKnowledge resource is intended to be used to \"drug information\" type content.  You can represent Normal Saline in this resource too with the ingredient attributes, but the context for the resource is different than for Medication.</p>",
        "id": 153972481,
        "sender_full_name": "Melva Peters",
        "timestamp": 1530239610
    },
    {
        "content": "<p>It is possible that some of the attributes that are added to MedicationKnowledge may be added to Medication (such as the \"base\" notion), but no decisions have been made at this time.  We will work on harmonization as part of the second phase of the project.</p>",
        "id": 153972482,
        "sender_full_name": "Melva Peters",
        "timestamp": 1530239675
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191759\">@Melva Peters</span>  - how is a system going to maintain the \"linkage\" between the prescribed Medication and the dispensed and the administered  drug without having a unique identifier to tie them all together?   As Jose pointed out, the prescribed Medication would not yet have a serialNumber or lotNumber, only the <a href=\"http://resource.id\" target=\"_blank\" title=\"http://resource.id\">resource.id</a>, which isn't something the source (CPOE/PIS/EHR) knows about.</p>",
        "id": 153972485,
        "sender_full_name": "John Silva",
        "timestamp": 1530241312
    },
    {
        "content": "<p>As an exercise -- I went through all of the \"top-level\" resources listed on the FHIR page under Administration, Clinical, Diagnostics, Medications and Workflow and ALL except the Medication resource have an (external) identifier property; curious as to why Medication is the only one that doesn't.  (didn't go to the 2nd level page under each of the top-level resource types)</p>",
        "id": 153972486,
        "sender_full_name": "John Silva",
        "timestamp": 1530242129
    },
    {
        "content": "<p>Medication linkage is generally by code - and then it's not a direct linkage.  For example, the prescription might be for Tylenol (a kind) and the dispense might be for Tylenol 100mg capsules (also a kind).  To confirm the link, you need a terminology service.  The same thing can happen in the device space (e.g. ordering syringes)</p>",
        "id": 153972494,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530252289
    },
    {
        "content": "<p>Are you saying the the terminology service in this case is going to know about all the drug kinds in your pharmacy?  Is this really an interface to the formulary system or a drug database?   What I'm still having a problem with is that if the order and dispense are both pointing to a drug (kind) then the administration has to point (reference) a drug (instance), how can it do that when the admin system only knows about 'external identifiers\" (i.e. not the <a href=\"http://resource.id\" target=\"_blank\" title=\"http://resource.id\">resource.id</a> created by the FHIR server) yet the FHIR server only has the code (kind) identifier?   This also seems to be a problem in the device space where patient-level traceability is required, e.g. by UDI (an external identifier) in the case of a device recall (but device does have an identifier property.)</p>",
        "id": 153972502,
        "sender_full_name": "John Silva",
        "timestamp": 1530266328
    },
    {
        "content": "<p>Administration will point to the order by id.  But the drug pointed to by the order and the drug pointed to by the administration won't be the same.  The only linkage between them would be in a terminology system.  Drug recall wouldn't be driven by the order records, they'd be driven by the administration and dispense records and they'd look at drug code and lot number.</p>",
        "id": 153972504,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530267302
    },
    {
        "content": "<p>Device is hopefully going to address this issue of linking instance to kind, perhaps we should take an example between medication and devices and see what to do from there</p>",
        "id": 153972507,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530270123
    },
    {
        "content": "<p>You can't have instance link to kind</p>",
        "id": 153972508,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530270270
    },
    {
        "content": "<p>The instance could link to 30+ different kinds - because the order could specify all sorts of different levels</p>",
        "id": 153972509,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530270306
    },
    {
        "content": "<p>I don't understand why OO is proceeding with the split of Device in the first place.</p>",
        "id": 153972510,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530270474
    },
    {
        "content": "<p>How would an instance link to more than one kind?</p>",
        "id": 153972596,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530286309
    },
    {
        "content": "<p>\"Lot 152347 Tylonol 100 mg caplets\" is an instance of Tylenol, Tylenol 100mg, Paracetamol, Paracetemol Caplets and a whole bunch of other concepts - any one of which might have been prescribed, or possibly dispensed.</p>",
        "id": 153972607,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530291370
    },
    {
        "content": "<p>Aaahhh. I see it as : Lot 152347 (Tylenol 100 mg caplets), where (Tylenol 100 mg caplets) is the commercially available product. The rest is a chain of concept descriptions. There is no \"lot xxx of Tylenol\" .</p>",
        "id": 153972608,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530291939
    },
    {
        "content": "<p>But the point is that any one of those concept descriptions could be the ordered med.  You have no idea which one to point the \"instance\" to.</p>",
        "id": 153972609,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530292039
    },
    {
        "content": "<p>Which is why it makes sense to just leave it to the terminology - no need to establish any linkage at all - except perhaps on the \"knowledge\" side of things.</p>",
        "id": 153972610,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530292070
    },
    {
        "content": "<p>We can prescribe Acetaminophen and dispense Tylenol 100 mg caplets and yes,  the link resides somewhere in that terminology.</p>",
        "id": 153972611,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530292094
    },
    {
        "content": "<p>That's how existing systems handle it - figuring out relationship between different levels of medication products is always handled by the terminology server.</p>",
        "id": 153972612,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530292097
    },
    {
        "content": "<p>No need for instance to point to kind.  (And not clear it's advantageous or appropriate to split instance and kind at all.)</p>",
        "id": 153972613,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530292129
    },
    {
        "content": "<p>Yes, agree there. In an administration you would capture an instance of the \"commercially available\" product, the rest of the links are somewhere.</p>",
        "id": 153972614,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530292218
    },
    {
        "content": "<p>Maybe.  Or you might just point to a kind because you don't track the instance detail and you use the same instances as were in the prescription</p>",
        "id": 153972615,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530292330
    },
    {
        "content": "<p>I'm trying to understand the push to separate kind from instance in Device and Medication - because I can see both concepts being used throughout the order/event lifecycle.</p>",
        "id": 153972616,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530292387
    },
    {
        "content": "<p>My preference for the approach taken by Device is this:</p>",
        "id": 153972617,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530292445
    },
    {
        "content": "<p>Applied to this medication, we capture the baecode of Tylenol 100 mg caplets lot 152347. This actually means scanning a string that says : product xxxyyyzzz (which is a code that identifies a kind) and instance data (lot and expiry)</p>",
        "id": 153972618,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530292586
    },
    {
        "content": "<p>Maybe.  But you can also have systems that just point to the same med instance as was in the prescription.  And even if they do capture a code, there's no guarantee there'll be any instance data.</p>",
        "id": 153972619,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530292782
    },
    {
        "content": "<p>Agree. Instance data is not guaranteed. But you still want to capture \"I just scanned one instance of xxyyzz\", and I don't give details about which instance</p>",
        "id": 153972621,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530293072
    },
    {
        "content": "<p>If you say ' I just gave one paracetamol to this person because that is what was requested', you can but you are simply inheriting what was in the order</p>",
        "id": 153972622,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530293135
    },
    {
        "content": "<p>Systems need to support the case of identifying a product (kind and optionally instance) unrelated to the ordered product</p>",
        "id": 153972623,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530293401
    },
    {
        "content": "<p>Point is: order product X, dispense product Y. Instance data is of product Y. If product Y is matching product X, that is another question</p>",
        "id": 153972625,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530293529
    },
    {
        "content": "<p>And there is the traceability aspect when it comes to an instance -- for controlled substances or 'custom mixed drugs' there might need to be an instance notion that is more precise than lot  (hopefully serial number can perform that role).    </p>\n<p>I have another related question, coming from the HL7 V2 Order workflow, but I want to formulate (pun intended) my ideas first -- hopefully with a diagram showing the different parts of the workflow in an attempt to understand how FHIR Med-resources address/fit this workflow.  (i.e. the difference between ORM/OMP, RDE, RDS (dispense?) and RAS -- but for another day)</p>",
        "id": 153972652,
        "sender_full_name": "John Silva",
        "timestamp": 1530305862
    },
    {
        "content": "<p>OMP=medicationrequest (+patient+...+medication)<br>\nRDE=same as OMP<br>\nRDS=medicationDispense (+patient+...+medication (possibly with instance info))<br>\nRAS = medicationAdministration (+patient+...+medication (possibly with instance info))</p>",
        "id": 153972656,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530307945
    },
    {
        "content": "<p>Patient specific preparations would get a lot or serial number (depends if we need to  distinguish each one, or only to the level of  each batch)</p>",
        "id": 153972657,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530308065
    },
    {
        "content": "<p>I just don't understand the reason to have two resources - what implementation requirement is driving that choice?</p>",
        "id": 153972659,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530318460
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span>  -- some additional thoughts<br>\nOMP (un-encoded order, could even be 'free text' -- therefore the drug ordered would be a Kind, e.g Tylenol, in RXO-1 or RXO-6 , RXO-9 allow substitution)</p>\n<p>RDE (encoded order, the drug is Kind but closer to instance, e.g. Tylenol 100 mg tablets, in RXE-2, RXE-9 - allow substitution)</p>\n<p>RDS (dispense encoded order's drug, drug seems to be an instance now, e.g. could be Acetaminophen 100 mg caplets (generic from a specific drug company, with lot info, possibly even serial number for 5-rights tracking, especially if controlled substance!!, this instances of a drug could already be in a lock-cabinet with intention of administration for a specific patient at a specific time) RXD-2, RXD-20 indicates if drug was substituted,  RXD-18 lot number, RDX-20 -&gt; RXD-24 indication drug manufacturer and package info, RXD doesn't seem to have serial number though, maybe RXD-25 - supplementary code?)</p>\n<p>RAS (actual admin'd drug, drug is definitely an instance now, RXA-5, RXA-15 lot#,  RXA-18 manufacturer info, doesn't seem to have serial number though, maybe RXA-2 = admin sub-id counter?)</p>\n<p>So, the $64,000 (or $1 million) question is --- how to map all of this to FHIR Med resources?   What happens with the drug codes in each of the V2 messages (RXO-1, RXE-2, RDS-2, RXA-5)?   How are these to be posted in FHIR bundles, with only drug codes (no 'business identifiers')?  In other words, the sending system (V2) doesn't know about internal FHIR resource.id's so typically uses the ifNotExists with the identifier so that the FHIR server can resolve the external 'business identifier' to the FHIR internal <a href=\"http://resource.id\" target=\"_blank\" title=\"http://resource.id\">resource.id</a>.   If the bundle contains the ifNotExists with the code, then the resource reference within the bundle can be resolved between the MedRequest's medicationReference and the Medication within the same bundle.   But later on, when the MedAdmin comes in with it's medicationReference that could be using a different instance of the Medicaiton (drug)?   Is this handled by having that MedAdmin bundle simply not use the ifNotExists so that it always creates a new Medication that is uniquely tied to the MedAdmin (by <a href=\"http://resource.id\" target=\"_blank\" title=\"http://resource.id\">resource.id</a>)?</p>",
        "id": 153972667,
        "sender_full_name": "John Silva",
        "timestamp": 1530357002
    },
    {
        "content": "<p>I attach a UK IV infusion prescribing (Medication.request) dataset which 'might' be useful for FHIR server testing and possibly clarifying the important detail in this thread.<br>\nIn UK secondary care (hospitals) the prescriber will either prescribe by:</p>\n<p>1. Medication (generic) product name<br>\nor<br>\n2. Medication active ingredient(s) only<br>\nor<br>\n3. Medication active ingredient(s) + Form</p>\n<p>When the nurse administers the medication then the manufacturer + batch number + expiry date of both the medication_product and the iv_diluent are recorded.</p>\n<p><a href=\"/user_uploads/10155/C2qaZ-Vc0Iie-Su3AU0ZZojW/IV-infusion-dataset-HL7-FHIR-test-resource.xlsx\" target=\"_blank\" title=\"IV-infusion-dataset-HL7-FHIR-test-resource.xlsx\">IV-infusion-dataset-HL7-FHIR-test-resource.xlsx</a></p>",
        "id": 153972673,
        "sender_full_name": "Andrew Gledhill",
        "timestamp": 1530360019
    },
    {
        "content": "<p>If you don't have an existing Medication to point to, you have the option of a contained Medication</p>",
        "id": 153972681,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530368520
    },
    {
        "content": "<p>That's what you'll typically use when you're not pointing to something explicit from a formulary</p>",
        "id": 153972682,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530368543
    },
    {
        "content": "<p>(The formulary could be instance-specific (listing lot and/or expiry) or not when dispensing or administering)</p>",
        "id": 153972683,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530368575
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  Huh?   The MedAdmin and MedRequest only seem to have the possibility of using a full medicationReference (pointing to a FHIR instance of a Medication, resolved by the bundle post) and a medicationCodatableConcept -- but that doesn't have full 'instance info' from what I can see, so how can you use that?</p>",
        "id": 153972687,
        "sender_full_name": "John Silva",
        "timestamp": 1530372881
    },
    {
        "content": "<p>You can have contained resources</p>",
        "id": 153972688,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530373961
    },
    {
        "content": "<p>From what Lloyd tells, in a dispense or administration you can point to a resource that represents an \"instance\".</p>",
        "id": 153972689,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530378379
    },
    {
        "content": "<p>If the server has a medication resource for our Tylenol 100 mg tablets, named med001,</p>",
        "id": 153972690,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530378586
    },
    {
        "content": "<p>You prescribe med001</p>",
        "id": 153972691,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530378596
    },
    {
        "content": "<p>If you administer 1 tablet of Tylenol 100 mg, with lot a123, then either:</p>",
        "id": 153972692,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530378643
    },
    {
        "content": "<p>a) you have a resource in your server called med00101 which represents the physical Tylenol with that lot, and in the administration you point to med00101 and NOT to med001 (otherwise you lose traceability)</p>",
        "id": 153972693,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530378742
    },
    {
        "content": "<p>b) you get the data from med001,  you\"append\" the lot number to it, and thus data is a new resource called \"med00101\" which you can contain in the Administration resource</p>",
        "id": 153972694,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530378839
    },
    {
        "content": "<p>Possibly this is what <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> means when he says that the formulary can be instance-specific. Although I would rather call that \"inventory\" because we are then  talking about quantities, positions...</p>",
        "id": 153972695,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530378930
    },
    {
        "content": "<p>In a dispense or administration you can point to a resource that represents an \"instance\" or a \"kind\" or you can just specify a code. </p>\n<p>I didn't call it inventory because there's no requirement that you track inventory quantities in order for the system to know that particular lots are avaailable</p>",
        "id": 153972696,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530380672
    },
    {
        "content": "<p>Yes, \"inventory\" may be overloaded. I don't mean inventory control, but simply inventory items. Agree there is no need to track quantities. And indeed in dispense or admin we can point to kind, to instance or just mention a code.</p>",
        "id": 153972698,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530390474
    },
    {
        "content": "<p>If you look in the MedicationRequest examples, you'll see examples that include a code only (e.g. RxNorm, NDC, etc), or a contained resource where you may want to include additional attributes about a medication (like in the case of extemporaneous medications and IV bags, etc</p>",
        "id": 153972713,
        "sender_full_name": "Melva Peters",
        "timestamp": 1530469742
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191759\">@Melva Peters</span>  - thanks, a little hard to find which of the set of the example MedRequests had a contained resource, found this one:  <a href=\"http://build.fhir.org/medicationrequest0322.json.html\" target=\"_blank\" title=\"http://build.fhir.org/medicationrequest0322.json.html\">http://build.fhir.org/medicationrequest0322.json.html</a>   (I didn't realize the concept of 'contained' resources; however, even with the contained med resource, the FHIR server is going to replace the ' \"id\": \"med0317\" with the server-generated id (random from the perspective of the ordering system and a V2 message feed.)   I'm still stuck with the problem of how does the source V2 system know which Medication resource on the server is associated with the MedReq it sent in without a 'business identifer'?</p>",
        "id": 153972727,
        "sender_full_name": "John Silva",
        "timestamp": 1530486398
    },
    {
        "content": "<p>I'm not really understanding the question.  We don't generally use business identifiers for reference even when they exist.  References are done by URL.  In the case of a contained resource, it's a local reference.  If you're converting to v2, you'll grab the request and the referenced medication and populate the v2 segments accordingly.</p>",
        "id": 153972733,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530488406
    },
    {
        "content": "<p>I have updated the IV infusion spreadsheet with FHIR 'timing' descriptions/information which should also be of use as a FHIR Medication.Request training resource.</p>\n<p><a href=\"/user_uploads/10155/ppCrlLoWOd4PauOnkTBb85Tr/IV-infusion-dataset-HL7-FHIR-test-resource.xlsx\" target=\"_blank\" title=\"IV-infusion-dataset-HL7-FHIR-test-resource.xlsx\">IV-infusion-dataset-HL7-FHIR-test-resource.xlsx</a></p>",
        "id": 153972811,
        "sender_full_name": "Andrew Gledhill",
        "timestamp": 1530529048
    },
    {
        "content": "<p>I suppose I'll have to post samples V2 RDE and RAS messages to illustrate the problem.  (It's the conversion from V2 to FHIR, not the other way around.  Remember, most legacy systems are V2 not FHIR so the need is to convert from V2 to FHIR.)   Actually, the same thing occurs with ORU messages converted to FHIR Observations; but at least there we have an identifier property (business identifier) that we can control from the V2 mapping process to allow us to later on update an existing FHIR Obs resource, e.g. when there's a corrected lab value.   The V2 world doesn't know about FHIR references and FHIR internal ids so using the identifier gives us a way (with the ifNotExists in bundle messages) to provide the linkage between the V2's identity and the FHIR's identity.</p>",
        "id": 153972816,
        "sender_full_name": "John Silva",
        "timestamp": 1530530651
    },
    {
        "content": "<p>RDE^O11 - Order message (note ORC-2 (Placer#) and RXE-2 (Give Code):<br>\n<code>\nMSH|^~\\&amp;|CPOEs^172.3.2.44^DNS|Facility^172.3.2.45^DNS|||20101207133655||RDE^O11|MC-ID-1|P|2.4|\nPID|||456789||Jones^Mary||20040328134602.1234-0400|F|\nORC|XO|PN-1234|FN-1234||IP||12^TID&amp;0430,1230,2030^D4^20101207133655^20101211133655^S^^^^^^12||20101207133655||||||20101207133655|\nRXE|12^TID&amp;0430,1230,2030^D4^20101207133655^20101211133655^S^^^^^^12|1234-ABCD^Acetaminophen^NDC|750||mg^milligrams^ISO+|\nRXR|PO^By Mouth^HL70162|\n</code><br>\nSo, without an identifier available for the FHIR Medication resource the only thing I can code is the RXE-2 as the FHIR Medication.code.   The problem is that because that Medication.code is a Kind or might have been an instance Medication that was created by a previous order from another patient!!   If I use the bundle ifNotExists it would pick up whichever one the FHIR server happens to have.    If, on the other hand, the Medication resource had an identifier property (business identifier) the V2 mapping used the combination of the ORC-2 and RXE-2 to create a unique identifier for this drug that would then create (or use) the Medication instance on the FHIR server specifically used by this MedicationRequest Order.    Also, later on when this Medication is administered (assuming for argument sake that it was the same NDC code/drug that was administered) the RAS message would be able to refer to the same Medication by identifier since the RAS message would have the same ORC-2 and RXE-2 values and then the ifNotExists would find the same <strong>* instance </strong>* of the Medication (w/o needing to know the FHIR server's internal id).   Notice another benefit, there would be traceability to the specific Kind of drug ordered, encoded, dispensed and administered, in the case where the specific drug used changed during the medication workflow, i.e. from 'Tylenol' (OMP ordered) to 'Tylenol 100 mg tablets' (RDE encoded) to  'Acetaminophen 100 mg caplets' (RDE dispensed) to 'Acetaminophen 100 mg tablets' (RAS administered)</p>\n<p>RAS^O15 Administration message:  (Note: same ORC-2 (Placer#) and RXA-5 (Admin Give Code) )<br>\n<code>\nMSH|^~\\&amp;|CPOEs^172.3.2.44^DNS|Facility^172.3.2.45^DNS|||20061012013000.1234-0500||RAS^O17|MSG001|P|2.4|\nPID|||456789||Jones^Mary||20040328134602.1234-0500|F|\nORC|NW|PN-1234|FN-1234||IP||12^TID&amp;0430,1230,2030^D3^20061012050000-0500^20061016050000-0500^S^^^^^M5&amp;&amp;ISO+^48||20061012050000-0500||||||20061012050000-0500|\nRXA|1|1|20061012013000.1234-0500||1234-ABCD^Acetametophin^NDC|850|mg^milligrams^ISO+|||||||||||||CP|\nRXR|PO^By Mouth^HL70162||||^routing instrs\n</code></p>",
        "id": 153972824,
        "sender_full_name": "John Silva",
        "timestamp": 1530531951
    },
    {
        "content": "<p>Right.  So in both of these cases you'd use a contained medication because there's no \"identity\" information in the v2 instance that would allow you to determine that multiple messages talking about the \"same\" medication are in fact pointing to a shared maintained formulary entry.  I.e. the information you have about the medication isn't enough to create a stand-alone resource because v2 doesn't have an \"identifier\" for the medicaiton.</p>",
        "id": 153972826,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530532475
    },
    {
        "content": "<p>So, if I understand you correctly, in the MedicationRequest (and MedAdmin) the contained Medication resource will NOT create an actual Medication resource on the FHIR server,is that right?   OK, that might work.</p>\n<p>However, a similar situation happens in ORU messages, but I don't think the contained 'trick' will work there.   If I have an ORU message I can use the OBR-2 (Placer#, aka Accession#) along with the OBX-3 (Obx Identifier) and the OBX-14 (Date/time of Obs) to provide a FHIR identifier that can be used with the ifNotExists so that later on, when there is an update for this specific value, the bundle would use the same identifier in the ifNotExists with request=PUT (update). </p>\n<p>BTW, this is one of the things we were interesting in learning more about at FHIR DevDays, but I'm not sure if these more complicated mapping topics were discussed.  In the FHIR spec web pages the V2 mappings are somewhat sparsely populated (and sometimes completely missing) to give guidance for those of us working with V2 interfaces.   Mapping from the \"legacy V2\" world seems like it should have more \"traction\" in the FHIR community since to bring the \"existing HL7 world\" into the FHIR world, it's going to happen from two main paths --- the legacy V2 path and the new 'green field' FHIR apps path.  (I'm ignoring the V3 path, not sure there was ever much of a footprint of V3 in 'production environments')</p>",
        "id": 153972827,
        "sender_full_name": "John Silva",
        "timestamp": 1530533413
    },
    {
        "content": "<p>Right, the contained medication resource will not be stored on the server.</p>",
        "id": 153972829,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530533944
    },
    {
        "content": "<p>I'm not understanding what you'd be creating with the ORU/OBR/OBX.  If you're creating an Observation, then that's fine - I'd expect you to have enough information in a v2 message to do a create.  Though the \"if not exists\" is going to need to take into account corrections too.  That wouldn't change the date/time of Obs, but could mean a need to replace the existing instance.</p>",
        "id": 153972830,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530533973
    },
    {
        "content": "<p>Yes, the ORU message, with combo identifier from OBR-2, OBX-3 and OBX-14 would be used as the identifier for the FHIR Observation identifier and the URL for the ifNotExists.    The first time the specific ORU's OBX is mapped the FHIR Observation would be created because the request=POST would be used.   If, later on a correction, e.g. to a lab result, came in, the same OBR-2, OBX-3, OBX-14  would be used for the identifier (would be the same as the original one) and ifNotExists URL, but with request=PUT to cause the FHIR server to update the specific instances of the FHIR Observation.   To put it more precisely, with the example RDE message I showed above it would end up creating this URL for the ifNotExists:    (NOTE, if the OBX-14 doesn't exist HL7 V2 rules imply that the date/time is the same as the OBR-7 and that's what's used - JSON snippet)</p>\n<p><code>\n\"request\"=\"PUT\"\n\"ifNotExists\"=\"Observation?Identifier=PN-1234_ABCD_20101207133655\"\n</code></p>",
        "id": 153972835,
        "sender_full_name": "John Silva",
        "timestamp": 1530534654
    },
    {
        "content": "<p>If you can trust that order of events is enough to confirm you should update, then that will work.</p>",
        "id": 153972841,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530535195
    },
    {
        "content": "<p>Or we can use request=PUT every time since the FHIR rules (if I interpret them right) for bundle processing say that a PUT will do an add if the resource in the ifNotExists doesn't already exist.</p>",
        "id": 153972865,
        "sender_full_name": "John Silva",
        "timestamp": 1530539426
    },
    {
        "content": "<p>PUT requires that you specify the id - and that the server allows the client to decide on the id.</p>",
        "id": 153972866,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530539587
    },
    {
        "content": "<p>Is this the one cases (exception?) where the client is able to 'influence' what the FHIR server uses for it's internal id or are you talking about something else.  (I guess I need to go back and read the bundle REST processing rules page again.)   I thought that on any add operation the FHIR server always creates the internal id so it is guaranteed to have a unique id.  </p>\n<p>In <a href=\"https://www.hl7.org/fhir/http.html#transaction\" target=\"_blank\" title=\"https://www.hl7.org/fhir/http.html#transaction\">https://www.hl7.org/fhir/http.html#transaction</a>  it seems to imply that it is not safe to allow the client to control internal ids:</p>\n<p>\"When processing a batch or transaction, a server MAY choose to honor existing logical ids (e.g. Observation/1234 remains as Observation/1234 on the server), but since this is only safe in controlled circumstances, servers may choose to assign new ids to all submitted resources, irrespective of any claimed logical id in the resource, or fullUrl on entries in the batch/transaction.\"</p>\n<p>Ah, interesting, reading further in that same section it describes the V2 problem I'm asking about:</p>\n<p>\"When constructing the bundle, the client may not know the logical id of a resource, but it may know identifying information - e.g. an identifier. This situation arises commonly when building transactions from v2 messages. The client could resolve that identifier to a logical id using a search, but that would mean that the resolution to a logical id does not occur within the same transaction as the commit (as well as significantly complicating the client). Because of this, in a transaction (and only in a transaction), references to resources may be replaced by a search URI that describes how to find the correct reference:\"</p>",
        "id": 153972871,
        "sender_full_name": "John Silva",
        "timestamp": 1530540183
    },
    {
        "content": "<p>On a POST the server sets the id.  On a PUT to a non-existent location, the server MAY allow the record to be created there.  However, giving clients control creates the risk of collisions, so typically this will only be allowed if the server uses GUIDs as ids and the client PUTs a resource with a GUID for its id.  (Though if there's a single dedicated client or you're cloning records from another server, you might not be limited to only GUIDs.)</p>",
        "id": 153972873,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530540358
    },
    {
        "content": "<p>Yes, but our V2 clients and the V2 messages are not going to have GUIDs for uniqueness so we need to ensure that using the identifier approach.  (Yes, the V2 mapping agent could create/keep its own mapping table between V2 identifiers of some kind to a GUID and use that, but that overly complicates things.)</p>\n<p>I guess this has gone outside of the original question (yeh, for sure); should I really move this thread to the 'v2 to FHIR' stream? ( <a href=\"#narrow/stream/32-v2-to.20FHIR\" title=\"#narrow/stream/32-v2-to.20FHIR\">https://chat.fhir.org/#narrow/stream/32-v2-to.20FHIR</a> )   Are there others who are interested in these V2 mapping questions?   It seems like there are lots of corner cases that make it non-obvious and sometimes not tractable to provide a way to map V2 to FHIR.  Argh!</p>",
        "id": 153972882,
        "sender_full_name": "John Silva",
        "timestamp": 1530540542
    },
    {
        "content": "<p>Moving probably makes sense.  And there will absolutely be places where mapping v2 to FHIR REST will be difficult or impossible.</p>",
        "id": 153972888,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530540995
    }
]