[
    {
        "content": "<p>I'm trying to figure out the valueSet for ServiceRequest.status (which is \"Required\").</p>\n<p>On the ServiceRequest resource page (<a href=\"https://www.hl7.org/fhir/servicerequest.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/servicerequest.html\">https://www.hl7.org/fhir/servicerequest.html</a>) it says the values are:<br>\ndraft | active | suspended | completed | entered-in-error | cancelled</p>\n<p>However on the RequestStatus valueSet page (<a href=\"https://www.hl7.org/fhir/valueset-request-status.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/valueset-request-status.html\">https://www.hl7.org/fhir/valueset-request-status.html</a>) it says<br>\ndraft | active | on-hold | revoked | completed | entered-in-error | unknown</p>\n<p>There is inconsistency for on-hold, revoked, and cancelled. Also, it wasn't too long ago i looked at the valueSet and I believe that it had revoked AND cancelled (which i though was helpful to have both, as revoked I associate with revoking consent to send the request, while cancelled is more generic - it could be cancelled by the sender, by the provider, by the patent, due to snow-storm etc...). Removing cancelled from the list (And the different valueSets on these two pages) has caused some complications in our implementation guide for serviceRequest. </p>\n<p><span class=\"user-mention\" data-user-id=\"192256\">@Smita Kachroo</span> <span class=\"user-mention\" data-user-id=\"223465\">@Ion Moraru</span></p>",
        "id": 166913841,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1559227530
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Why isn't the short description validating against the code lists anymore?</p>",
        "id": 166916683,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559229467
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193959\">@Tim Berezny</span> The value set is the authoritative list.</p>\n<p>Note that the status of the ServiceRequest represents the state of the authorization, not the state of the fulfillment activities.  (The latter would be captured using Task)</p>",
        "id": 166916764,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559229515
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> , I follow what you mean by using a task for the state of fulfillment activities, can you expand a bit on the statement/philosophy behind the word - state of \"authorization\" for the ServiceRequest.status? I feel like I 70% know what you mean by that but need a few more words to get to 100%.</p>",
        "id": 166918298,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1559230461
    },
    {
        "content": "<p>@Lloyd McKenzie  @Tim Berezny Couple of questions: With referrals sent between systems in a \"de-coupled\" approach using the messaging paradigm, would the sender be expected to have visibility of and/or access to the status of task resources for activities executed on the recipient systems in response to the request?  Given that the task resources don't exist on the sending system and that receiving systems don;t expose a restful interface to tasks based on a servce request, should status of downstream activities (represented in tasks) be shared using the communication resource or does it make sense to share the tasks directly? ( Also, would the Request State diagram also be updated to reflect the new valueset, or is it intended tobe at a higher, more generic level?</p>",
        "id": 166923778,
        "sender_full_name": "John Wills",
        "timestamp": 1559234140
    },
    {
        "content": "<p>All request resources with an intent of 'order' essentially represent an authorization for something to happen \"This patient should be on this medication\" or \"This patient needs an MRI\" or \"This patient should have their cholesterol checked\".  It doesn't necessarily identify <em>who</em> should do those things or specifically say \"do it now\".  An order/referral for an MRI might result in a solicitation going to several different organizations before you find one who has availability to do the test needed in the timeframe desired.  Each of those \"please fulfill this order\" requests are managed by Task.  The order doesn't change as you ask for someone to fill the order and they say \"I'm thinking about it\", \"yes I can\", \"no I can't\".  All of that is reflected in the Task.  The order only changes when the testing is complete and the order requester decides that they're happy with what's been done or the requester gets fed up with waiting and cancels the order because it's no longer useful.</p>",
        "id": 166923859,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559234181
    },
    {
        "content": "<p>Can you make a gforge tracker to correct the short description?  not only for ServiceRequest but for the request pattern and State Diagram and wherever else this occurs</p>",
        "id": 166923893,
        "sender_full_name": "Eric Haas",
        "timestamp": 1559234206
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192708\">@John Wills</span> It depends what you're doing with your messages.  The MessageHeader.event (and sender and receiver) overlap significantly with Task so you don't necessarily need Task to use messaging to say \"please fulfill\" or \"yes I will\" or \"no I won't\".  However, if you want to send a message that says \"so how's it going?\", the response will almost certainly need to be conveyed with Task - because there's no other resource that can represent the \"progress towards completion\" state of a request.</p>",
        "id": 166924116,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559234358
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> I'd prefer for Grahame to identify why the build tool isn't checking this.  Once it does, we'll have no choice but to go in and fix all of the descriptions that are broken.</p>",
        "id": 166924212,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559234423
    },
    {
        "content": "<p>So, in this context, considering the messaging is supported by specific event codes in the message header can we rely on the ServiceRequest.status to indicate the progress of the service/order at a given point in time?</p>",
        "id": 166927846,
        "sender_full_name": "Ion Moraru",
        "timestamp": 1559237160
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"223465\">@Ion Moraru</span> from the perspective of the RECEIVER progressing the referral and telling the sender that they have processed the referral, my interpretation of <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> 's comments above would be no, that Task is better suited to this purpose.</p>",
        "id": 166928388,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1559237515
    },
    {
        "content": "<p>ServiceRequest.status won't reflect progress.  It reflects the state of the authorization.  The authorization will stay \"active\" even if the filler decides they're not going to action it.  (Because someone else might later be asked to action the same order.)</p>",
        "id": 166930551,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559238950
    },
    {
        "content": "<p>Got it, thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> . </p>\n<p>One question from an implementation standpoint on the RECEIVING end of the ServiceRequest ... let's say that the receiver wants to do some work on the referral/serviceRequest in their RECEIVING system. e.g., add some notes, add an attachment, fix an incorrectly submitted phone number. How does the receiver making these changes (which are the norm form most referral processing processes) align with updating a ServiceRequest resource and its authorization?</p>",
        "id": 166931137,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1559239259
    },
    {
        "content": "<p>There are a couple of possibilities.  In some cases, the \"actioning\" system might have the authority to update the source-of-truth copy of the ServiceRequest.  In that case, it just makes an update.  In other cases, it will have a local \"filler\" copy of the order and will make the changes in its own copy (to reflect what it's actually going to do), while the original ServiceRequest remains unchanged.  In really fancy environments, you could also submit a Task to the placing system requesting that it revise the original ServiceRequest, but that's probably overkill for this requirement.</p>",
        "id": 166932172,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559239914
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> , that helps a lot. Can you clarify what \"filler\" means?</p>",
        "id": 166935759,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1559242534
    },
    {
        "content": "<p>Placer is the individual/system that creates the order/request/authorization.  Filler is the individual/system that performs all or part of the order/request/authorization.  So in pharmacy, the placer would be the clinician and the filler would be the pharmacy (and possibly also the nurse who administers the med).  In a referral, the placer would be the clinician/practitioner who makes the referral and the filler would be the clinician/agency that is asked to accept the referral.</p>",
        "id": 166936839,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559243244
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> Thanks that helps a lot</p>",
        "id": 166941040,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1559246433
    },
    {
        "content": "<p>I don't know why it's broken. It certainly is supposed to check that those are correct</p>",
        "id": 166947452,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559251423
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Do you need a tracker item?</p>",
        "id": 166950820,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559254793
    },
    {
        "content": "<p>I'd say so, since it's likely to be a technical correction in R4</p>",
        "id": 166951974,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559256029
    },
    {
        "content": "<p>because the value set was defined differently</p>",
        "id": 166952299,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559256398
    },
    {
        "content": "<p>fixing that gives this scary list:</p>",
        "id": 166952969,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559257185
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>ERROR @ ActivityDefinition.kind: The short description of an element with a code list should have the format code | code | etc (should be Kind of resource) (src = ResourceValidator)\nERROR @ ActivityDefinition.intent: The short description &quot;proposal | plan | order&quot; does not match the expected (&quot;proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option&quot;) (src = ResourceValidator)\nERROR @ AllergyIntolerance.verificationStatus: Status element code &quot;presumed&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ AppointmentResponse.participantStatus: The short description &quot;accepted | declined | tentative | in-process | completed | needs-action | entered-in-error&quot; does not match the expected (&quot;accepted | declined | tentative | needs-action&quot;) (src = ResourceValidator)\nERROR @ CarePlan.status: Status element code &quot;on-hold&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ CarePlan.status: Status element code &quot;revoked&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ CarePlan.status: The short description &quot;draft | active | suspended | completed | entered-in-error | cancelled | unknown&quot; does not match the expected (&quot;draft | active | on-hold | revoked | completed | entered-in-error | unknown&quot;) (src = ResourceValidator)\nERROR @ CarePlan.activity.detail.kind: The short description of an element with a code list should have the format code | code | etc (should be Kind of resource) (src = ResourceValidator)\nERROR @ ClinicalImpression.status: Status element code &quot;in-progress&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ ClinicalImpression.status: The short description &quot;draft | completed | entered-in-error&quot; does not match the expected (&quot;in-progress | completed | entered-in-error&quot;) (src = ResourceValidator)\nERROR @ CodeSystem.filter.operator: The short description of an element with a code list should have the format code | code | etc (should be Operators that can be used with filter) (src = ResourceValidator)\nERROR @ Communication.status: Status element code &quot;not-done&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ Communication.status: Status element code &quot;on-hold&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ Communication.status: Status element code &quot;stopped&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ Communication.status: The short description &quot;preparation | in-progress | not-done | suspended | aborted | completed | entered-in-error&quot; does not match the expected (&quot;preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown&quot;) (src = ResourceValidator)\nERROR @ Communication.priority: The short description of an element with a code list should have the format code | code | etc (should be Message urgency) (src = ResourceValidator)\nERROR @ CommunicationRequest.status: Status element code &quot;on-hold&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ CommunicationRequest.status: Status element code &quot;revoked&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ CommunicationRequest.status: The short description &quot;draft | active | suspended | cancelled | completed | entered-in-error | unknown&quot; does not match the expected (&quot;draft | active | on-hold | revoked | completed | entered-in-error | unknown&quot;) (src = ResourceValidator)\nERROR @ CommunicationRequest.priority: The short description of an element with a code list should have the format code | code | etc (should be Message urgency) (src = ResourceValidator)\nERROR @ Condition.clinicalStatus: Status element not registered in status-codes.xml (src = ResourceValidator)\nERROR @ Contract.status: Status element not registered in status-codes.xml (src = ResourceValidator)\nERROR @ Contract.status: The short description &quot;draft | active | suspended | cancelled | completed | entered-in-error | unknown&quot; does not match the expected (&quot;amended | appended | cancelled | disputed | entered-in-error | executable | executed | negotiable | offered | policy | rejected | renewed | revoked | resolved | terminated&quot;) (src = ResourceValidator)\nERROR @ Contract.contentDefinition.publicationStatus: Status element not registered in status-codes.xml (src = ResourceValidator)\nERROR @ Contract.contentDefinition.publicationStatus: The short description &quot;draft | active | retired | unknown&quot; does not match the expected (&quot;amended | appended | cancelled | disputed | entered-in-error | executable | executed | negotiable | offered | policy | rejected | renewed | revoked | resolved | terminated&quot;) (src = ResourceValidator)\nERROR @ DeviceRequest.status: Status element code &quot;on-hold&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ DeviceRequest.status: Status element code &quot;revoked&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ DeviceRequest.status: Status element code &quot;unknown&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ DeviceRequest.status: The short description &quot;draft | active | suspended | completed | entered-in-error | cancelled&quot; does not match the expected (&quot;draft | active | on-hold | revoked | completed | entered-in-error | unknown&quot;) (src = ResourceValidator)\nERROR @ DeviceRequest.intent: The short description &quot;proposal | plan | original-order | encoded | reflex-order&quot; does not match the expected (&quot;proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option&quot;) (src = ResourceValidator)\nERROR @ DeviceRequest.priority: The short description of an element with a code list should have the format code | code | etc (should be Indicates how quickly the {{title}} should be addressed with respect to other requests) (src = ResourceValidator)\nERROR @ DocumentReference.docStatus: Status element code &quot;preliminary&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ DocumentReference.docStatus: Status element code &quot;final&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ DocumentReference.docStatus: Status element code &quot;amended&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ DocumentReference.docStatus: Status element code &quot;entered-in-error&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ DocumentReference.docStatus: The short description &quot;preliminary | final | appended | amended | entered-in-error&quot; does not match the expected (&quot;preliminary | final | amended | entered-in-error&quot;) (src = ResourceValidator)\nERROR @ GraphDefinition.link.target.compartment.code: The short description of an element with a code list should have the format code | code | etc (should be Identifies the compartment) (src = ResourceValidator)\nERROR @ Immunization.status: Status element code &quot;not-done&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ ImmunizationEvaluation.status: Status element not registered in status-codes.xml (src = ResourceValidator)\nERROR @ Media.status: Status element code &quot;on-hold&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ Media.status: Status element code &quot;stopped&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ Media.status: The short description &quot;preparation | in-progress | not-done | suspended | aborted | completed | entered-in-error | unknown&quot; does not match the expected (&quot;preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown&quot;) (src = ResourceValidator)\nERROR @ MedicationRequest.intent: The short description &quot;proposal | plan | order | original-order | instance-order | option&quot; does not match the expected (&quot;proposal | plan | order | original-order | reflex-order | filler-order | instance-order | option&quot;) (src = ResourceValidator)\nERROR @ NutritionOrder.status: Status element code &quot;revoked&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ NutritionOrder.status: Status element code &quot;unknown&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ NutritionOrder.status: The short description &quot;proposed | draft | planned | requested | active | on-hold | completed | cancelled | entered-in-error&quot; does not match the expected (&quot;draft | active | on-hold | revoked | completed | entered-in-error | unknown&quot;) (src = ResourceValidator)\nERROR @ NutritionOrder.intent: The short description &quot;proposal | plan | order&quot; does not match the expected (&quot;proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option&quot;) (src = ResourceValidator)\nERROR @ Procedure.status: Status element code &quot;not-done&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ Procedure.status: Status element code &quot;on-hold&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ Procedure.status: Status element code &quot;stopped&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ RequestGroup.status: Status element code &quot;on-hold&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ RequestGroup.status: Status element code &quot;revoked&quot; not found in status-codes.xml (src = ResourceValidator)\nERROR @ RequestGroup.status: The short description &quot;draft | active | suspended | cancelled | completed | entered-in-error | unknown&quot; does not match the expected (&quot;draft | active | on-hold | revoked | completed | entered-in-error | unknown&quot;) (src = ResourceValidator)\nERROR @ RequestGroup.intent: The short description &quot;proposal | plan | order&quot; does not match the expected (&quot;proposal | plan | directive | order | original-order | reflex-order | filler-order | instance-order | option&quot;) (src = ResourceValidator)\nERROR @ RiskAssessment.status: Status element not registered in status-codes.xml (src = ResourceValidator)\nERROR @ ServiceRequest.status: Status element not registered in status-codes.xml (src = ResourceValidator)\nERROR @ ServiceRequest.status: The short description &quot;draft | active | suspended | completed | entered-in-error | cancelled&quot; does not match the expected (&quot;draft | active | on-hold | revoked | completed\n</pre></div>",
        "id": 166952973,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559257189
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22638\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22638\">GF#22638</a></p>",
        "id": 166956714,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559261550
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> is there a generally accepted way to indicate that a version of a request resource is a \"filler\" or \"placer\" version?</p>",
        "id": 166960098,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1559265666
    },
    {
        "content": "<p>identifier type is a clue</p>",
        "id": 166960314,
        "sender_full_name": "Eric Haas",
        "timestamp": 1559265962
    },
    {
        "content": "<p>But i might have both the placer and filler identifiers recorded on the ServiceRequest?</p>",
        "id": 166960599,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1559266283
    },
    {
        "content": "<p>I realized that as well</p>",
        "id": 166960684,
        "sender_full_name": "Eric Haas",
        "timestamp": 1559266384
    },
    {
        "content": "<p>Request.intent allows you to distinguish filler orders from original orders</p>",
        "id": 166962179,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559268503
    },
    {
        "content": "<p>In the 'old HL7 V2 days' ;-)  the notion of filler, placer, tracker and informer were well defined in the order request workflow (Chapter 4 I believe).   Does the FHIR Workflow (or Task) pattern have this nice definition of these roles in 'order fulfillment'?</p>",
        "id": 166968759,
        "sender_full_name": "John Silva",
        "timestamp": 1559279099
    },
    {
        "content": "<p>Probably not as good as it should.  Do you want to submit a change request?</p>",
        "id": 166990962,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559304258
    },
    {
        "content": "<p>Sure -- on which page -- the Task (pattern) page?</p>",
        "id": 166997853,
        "sender_full_name": "John Silva",
        "timestamp": 1559310127
    },
    {
        "content": "<p>Workflow pages I think.</p>",
        "id": 167004085,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1559314765
    },
    {
        "content": "<p>I fixed all the errors related to this in the current build - quite a lot of work</p>",
        "id": 167044261,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559346734
    }
]