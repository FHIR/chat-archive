[
    {
        "content": "<p>Hi, I'm curious why the cardinality of <code>OperationDefinition.parameter.type</code> is <code>0..1</code> instead of <code>0..*</code>, similar to <code>ElementDefinition.type</code>, to allow for type choices?</p>\n<p>The docs for <a href=\"https://www.hl7.org/fhir/codesystem-operation-find-matches.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/codesystem-operation-find-matches.html\"><code>CodeSystem$find-matches</code></a> (which, admittedly, is maturity level 0), defines the <code>property.value</code> parameter as a type-choice, but it's encoded as type <code>code</code> in the <code>OperationDefinition</code>.</p>\n<p>Thanks!</p>",
        "id": 172274870,
        "sender_full_name": "Zach Smith",
        "timestamp": 1564707540
    },
    {
        "content": "<p>I expect because a lot of RPC mechanisms don't support polymorphic types.  The solution is multiple optional parameters each with an appropriate type</p>",
        "id": 172275040,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564707756
    },
    {
        "content": "<p>I see. If that's the case, then shouldn't the <code>$find-matches</code> OperationDefinition have multiple parameters? i.e.<code>property.valueCode</code>, <code>property.valueCoding</code>, etc.</p>",
        "id": 172275135,
        "sender_full_name": "Zach Smith",
        "timestamp": 1564707896
    },
    {
        "content": "<p>there's a task to do something about that parameter</p>",
        "id": 172275331,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564708191
    },
    {
        "content": "<p>and the operation ;-)</p>",
        "id": 172480818,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1564984646
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"228690\">@Zach Smith</span> can you provide some detail as to what you're wanting to use <code>$find-matches</code> for?</p>",
        "id": 172480880,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1564984741
    },
    {
        "content": "<p>No concrete plans for using <code>$find-matches</code> just yet. I'm just working on implementing the full Terminology Services spec, and this was the last operation on my list. So this isn't a super high priority issue for me, I was more just curious if the choice to not allow for polymorphic types in extended operations was intentional.</p>",
        "id": 172519673,
        "sender_full_name": "Zach Smith",
        "timestamp": 1565024314
    },
    {
        "content": "<p>Ah, thanks.  I'm still on the hunt for people who want to <em>use</em> <code>$find-matches</code> :-)<br>\nDo you have a public endpoint for your server that I could point <a href=\"https://ontoserver.csiro.au/vstool\" target=\"_blank\" title=\"https://ontoserver.csiro.au/vstool\">https://ontoserver.csiro.au/vstool</a> at, and if so, are you interested in me adding it to the list of servers?</p>",
        "id": 172547900,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1565048437
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191673\">@Davide Sottara</span></p>",
        "id": 172548706,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1565049422
    }
]