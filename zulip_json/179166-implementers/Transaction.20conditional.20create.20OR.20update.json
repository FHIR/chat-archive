[
    {
        "content": "<p>How do you tell a transaction to do a conditional create OR update?</p>",
        "id": 153993056,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1536083116
    },
    {
        "content": "<p>i.e. if the resource doesn't exist with the criteria, create it. if the resource <em>does</em> exist with the criteria, update it instead</p>",
        "id": 153993057,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1536083134
    },
    {
        "content": "<p>You'd list the resource twice.  We should probably make explicit that failure to meet conditional create/update requirements doesn't get treated as a failure within a transaction.</p>",
        "id": 153993059,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536083353
    },
    {
        "content": "<p>so, one entry in the transaction with POST (conditional create), and another entry with PUT (conditional update)</p>",
        "id": 153993060,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1536083443
    },
    {
        "content": "<p>What you describe, is actually a conditional update:</p>\n<p>\"<br>\nNo matches: The server performs a create interaction<br>\nOne Match: The server performs the update against the matching resource<br>\n\"</p>",
        "id": 153993063,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536083470
    },
    {
        "content": "<p>that works.. but makes for a VERY large bundle if doing this to many resources</p>",
        "id": 153993064,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1536083474
    },
    {
        "content": "<p><a href=\"https://www.hl7.org/fhir/http.html#cond-update\" target=\"_blank\" title=\"https://www.hl7.org/fhir/http.html#cond-update\">https://www.hl7.org/fhir/http.html#cond-update</a></p>",
        "id": 153993065,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536083498
    },
    {
        "content": "<p>No need to have it twice, if I read you correct</p>",
        "id": 153993066,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536083544
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span> That's only true if you want the client to assign the id on a create.  I was assuming <span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span> wanted server-assigned create ids.</p>",
        "id": 153993067,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536083554
    },
    {
        "content": "<p>ok, <span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span> , I'll give that a shot</p>",
        "id": 153993068,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1536083557
    },
    {
        "content": "<p>thx</p>",
        "id": 153993069,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1536083559
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> Where is that stated? isn't a create a create and as such should ignore any id sent from the client?</p>",
        "id": 153993071,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536083732
    },
    {
        "content": "<p><a href=\"https://build.fhir.org/http.html#cond-update\" target=\"_blank\" title=\"https://build.fhir.org/http.html#cond-update\">https://build.fhir.org/http.html#cond-update</a> explicitely says:<br>\n\"The resource MAY contain an id element, but does not need to (this is one of the few cases where a resource exists without an id element). If an id is provided, the server SHALL ignore it - see documentation for the update interaction. \"</p>",
        "id": 153993086,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536084146
    },
    {
        "content": "<p>That section says: \"No matches: The server treats the interaction as an Update as Create interaction (or rejects it, if it does not support Update as Create)\".  Update as Create means client-assigned id.  The part about not having an id is presumably because the id is conveyed in the URL.</p>",
        "id": 153993096,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536084831
    },
    {
        "content": "<p>So... not sure how I would do a conditional update without an ID, though</p>",
        "id": 153993098,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1536085185
    },
    {
        "content": "<p>for example, if I have a CapabilityStatement that does NOT have an ID, but I want to conditionally create/update the resource on the FHIR server based on the CapabilityStatement.url...</p>",
        "id": 153993099,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1536085217
    },
    {
        "content": "<p>what would I put for the METHOD/URL of the request?</p>",
        "id": 153993100,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1536085226
    },
    {
        "content": "<p>I couldn't use \"PUT\" because PUT would require a URL like .../CapabilityStatement/&lt;id&gt;</p>",
        "id": 153993102,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1536085264
    },
    {
        "content": "<p>I would have to use POST with .../CapabilityStatement as the url</p>",
        "id": 153993103,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1536085278
    },
    {
        "content": "<p>Right, the \"No matches\" definition has changed between STU3 and current build.<br>\nThe new definition looks rather inconsistent to me, since at the the top it states \"without id\", but \"Update as Create\" talks about ids</p>",
        "id": 153993104,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536085278
    },
    {
        "content": "<p>I think...</p>",
        "id": 153993105,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1536085280
    },
    {
        "content": "<p>would be great to have a set of bullets in guidance for various scenarios, and what to do...</p>",
        "id": 153993106,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1536085313
    },
    {
        "content": "<p>ultimately I'm just trying to setup \"import\" for end-users... I don't know if the resource already exists on the server, and I don't know if the user is sending a resource with an id or not</p>",
        "id": 153993107,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1536085358
    },
    {
        "content": "<p>but I know that for some resources, I can use .url as a canonical id to find out if it exists already</p>",
        "id": 153993108,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1536085382
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span> a conditional update means \"without id, but with search criteria\". But I admit the new definition leaves me a bit confused</p>",
        "id": 153993109,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536085445
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> If the client would not send an id (whereever), this should still work a a regular create, right?</p>",
        "id": 153993117,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536087005
    },
    {
        "content": "<p>yah... I'm now completely confused as-to how I should construct this \"create or update\" transaction for multiple resources</p>",
        "id": 153993121,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1536088024
    },
    {
        "content": "<p>I'm not clear on that.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> ?</p>",
        "id": 153993122,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536088034
    },
    {
        "content": "<p>How else would one perform a \"STU3 way\" of conditional update?</p>",
        "id": 153993140,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536089371
    },
    {
        "content": "<p>I.e. the original primary use case:<br>\n- I don't know the id and not even, whether that resource exists<br>\n- but I have enough information to define criteria that hopefully represent a unique key<br>\n- and I don't care about the id that resource already has or will get</p>",
        "id": 153993189,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536095055
    },
    {
        "content": "<blockquote>\n<p>I'm now completely confused as-to how I should construct this \"create or update\" transaction for multiple resources</p>\n</blockquote>\n<p>I'm not sure about this. Is 'multiple resources' important somehow?</p>",
        "id": 153993233,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536098457
    },
    {
        "content": "<p>Yes... goes back to my attempts to load all us-core resources on FHIR servers.</p>",
        "id": 153993267,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1536103442
    },
    {
        "content": "<p><a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17720\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17720\">https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17720</a></p>",
        "id": 153993270,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1536103464
    },
    {
        "content": "<p>Is there not a special case where the Resource you are POSTing has a business identifier ? Where in the case where the server has a Resource with that business identifier, it will do an UPDATE of that. But otherwise will do a CREATE? is the business identifier usable this way, or only the id?</p>",
        "id": 153993484,
        "sender_full_name": "John Moehrke",
        "timestamp": 1536159461
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> That's conditional update as defined in STU3.<br>\nYou can use a business identifier or basically any search criteria that would lead to 0..1 matches and do a create or update accordingly.</p>",
        "id": 153993485,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536159904
    },
    {
        "content": "<p>I think the open question here is: does the definition in the current build still allow that? And if not, should that definition be changed to allow it again?</p>",
        "id": 153993486,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536160220
    },
    {
        "content": "<p>I think the only ambiguous part of the current spec is here:<br>\n<a href=\"http://build.fhir.org/http.html#cond-update\" target=\"_blank\" title=\"http://build.fhir.org/http.html#cond-update\">http://build.fhir.org/http.html#cond-update</a></p>\n<blockquote>\n<p>The resource MAY contain an id element, but does not need to (this is one of the few cases where a resource exists without an id element). If an id is provided, the server SHALL ignore it - see documentation for the update interaction.</p>\n</blockquote>\n<p>This contradicts the \"Update as Create\": <a href=\"http://build.fhir.org/http.html#upsert\" target=\"_blank\" title=\"http://build.fhir.org/http.html#upsert\">http://build.fhir.org/http.html#upsert</a></p>",
        "id": 153993488,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536160607
    },
    {
        "content": "<p>upsert is useful with traditional PUT or conditional Updates</p>",
        "id": 153993490,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536160674
    },
    {
        "content": "<p>True.<br>\nPlus: in STU3 \"No match\" meant: create. In current build, if the server does not support \"Update as create\", it must throw an error.<br>\nBasic UPSERT is gone.</p>",
        "id": 153993491,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536160719
    },
    {
        "content": "<p>Maybe we should distinguish between </p>\n<ul>\n<li>\"NO MATCH - no ID provided\" -&gt; Create</li>\n<li>\"NO MATCH - ID provided -&gt; Update as Create (if the server supports it)</li>\n</ul>",
        "id": 153993492,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536161052
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> That's exactly what I think.<br>\n\"Update <strong>or</strong> Create\" (aka \"Conditional Update\" or \"UPSERT\") is not compatible with \"Update <strong>as</strong> Create\" otherwise</p>",
        "id": 153993493,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536161199
    },
    {
        "content": "<p>It would be great to clarify this. The current wording has come from <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=16549\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=16549\">GF#16549</a> (<a href=\"https://github.com/HL7/fhir/commit/098f965b5694f683ba3d593564f698c031777ef2\" target=\"_blank\" title=\"https://github.com/HL7/fhir/commit/098f965b5694f683ba3d593564f698c031777ef2\">https://github.com/HL7/fhir/commit/098f965b5694f683ba3d593564f698c031777ef2</a>) which doesn't seem to intend to disallow upserts with server-assigned IDs (which would be an issue for me and I suspect many others). The current trunk text for conditional updates even says \"The resource MAY contain an id...If an id is provided, the server SHALL ignore it\" and there is no id in the URL.</p>",
        "id": 153995649,
        "sender_full_name": "Eugene Lubarsky",
        "timestamp": 1536631358
    },
    {
        "content": "<p>Interestingly I managed to implement the bundle transaction processing to behave as suggested here from reading the STU3 spec. At least I just tested and it seems to do as your require. Here is a simple Transaction Bundle example with a Patient and Observation resource where the Patient gets added with the supplied Resource ID as it is a PUT and the Observation is created with a server assigned id as it is a POST. If you POST the same transaction bundle again only the Observation is created and the patient will be updated. I think that is what you're looking for.  <br>\n<code>GET: https://stu3.test.pyrohealth.net/fhir/Bundle/transactionExampleUpdateOrCreate2</code> <br>\nYou can change the identifiers in that example and POST that transaction bundle to <code>https://stu3.test.pyrohealth.net/fhir</code>  to test again.<br>\nThe  server always treats any PUT as a conditional Create or Update as defined here in the spec: <a href=\"http://hl7.org/fhir/http.html#update\" target=\"_blank\" title=\"http://hl7.org/fhir/http.html#update\">http://hl7.org/fhir/http.html#update</a><br>\nOr am I missing something?</p>",
        "id": 153996531,
        "sender_full_name": "Angus Millar",
        "timestamp": 1536829276
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191391\">@Angus Millar</span> Right, that's the behavior when you know the id.<br>\nFor what is described under \"conditional update\" (without id, but with search parameter(s)), I would hope for the same behavior. Which happens to be the case in STU3, but not in current build.<br>\nCurrent build refers to ids in that case (section \"Update as create\"), but usually, when you update by search, you don't have an id</p>",
        "id": 153996535,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536830740
    },
    {
        "content": "<p>I would like to open a tracker item on that, with the proposed solution of changing <a href=\"http://build.fhir.org/http.html#cond-update\" target=\"_blank\" title=\"http://build.fhir.org/http.html#cond-update\">http://build.fhir.org/http.html#cond-update</a> to contain the text <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> wrote above:</p>\n<div class=\"codehilite\"><pre><span></span>&quot;NO MATCH - no ID provided&quot; -&gt; Create\n&quot;NO MATCH - ID provided -&gt; Update as Create (if the server supports it)\n</pre></div>",
        "id": 153996536,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536831058
    },
    {
        "content": "<p>Any objections (or affirmations) on that?</p>",
        "id": 153996537,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536831100
    },
    {
        "content": "<p>So you mean like this one:<br>\n<code>GET: https://stu3.test.pyrohealth.net/fhir/Bundle/transactionExampleUpdateOrCreate4</code><br>\nNow I am not assiging the Id for Patient the server is, but it first searches for the correct Patient resource based on a search parameter and business identifier?</p>",
        "id": 153996538,
        "sender_full_name": "Angus Millar",
        "timestamp": 1536831500
    },
    {
        "content": "<p>Are sorry so something changed between STU3 and R4. That will  be what  I'm not aware of.</p>",
        "id": 153996539,
        "sender_full_name": "Angus Millar",
        "timestamp": 1536831598
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191391\">@Angus Millar</span>  Are you sure about the statement \"The server always treats any PUT as a conditional Create or Update? A conditional Create uses a POST and is different from a Conditional Update. A Conditional create does not update if ONE resource is found that matches the criteria (it just returns doing nothing) and if none are found it does a create. That's my understanding.</p>",
        "id": 153996540,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536831636
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191391\">@Angus Millar</span> exactly.<br>\nAnd I assume(d) that \"conditional Create or Update\" was meant to mean \"UPSERT\"</p>",
        "id": 153996541,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536831758
    },
    {
        "content": "<blockquote>\n<p>Any objections (or affirmations) on that?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span>  I would say no to the second line. A conditional update is a PUT and that is where the uploader can specify the logical id. So if the resource is not found and a conditional update is done (with a logicial id) the resource is created using the logical id specified by the uploader. In a create you do not specify a logical id (unless a temporary id in a transaction bundle)</p>",
        "id": 153996542,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536831892
    },
    {
        "content": "<p>So that would basically mean returning to the way it is specified in STU3...</p>\n<p>I think, the \"Create as Update\" was added for the reason to allow the client to specify the id in certain well defined use cases. And if that is allowed for the basic update, it should also be allowed for conditional update</p>",
        "id": 153996544,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536832117
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191391\">@Angus Millar</span> exactly.<br>\nAnd I assume(d) that \"conditional Create or Update\" was meant to mean \"UPSERT\"</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span>  My understanding of a Conditional Create (which I use extensively in PHD uploads in transaction bundles) is that if one and only one resource is found matching your selection criteria,  nothing happens. No change to the existing resource is made and the server responds with 200 OK for that resource. If NO resources are found a CREATE is done with the server specifying the logical iD (the uploader is not allowed to specify a logical id). If more than one resource is found matching your criteria a 4xx error is returned.</p>",
        "id": 153996545,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536832154
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191391\">@Angus Millar</span>  Are you sure about the statement \"The server always treats any PUT as a conditional Create or Update? A conditional Create uses a POST and is different from a Conditional Update. A Conditional create does not update if ONE resource is found that matches the criteria (it just returns doing nothing) and if none are found it does a create. That's my understanding.</p>\n</blockquote>\n<p>Sorry, I was misusing terminology, all I meant to say is that a PUT will update if it finds a  resource with the given id or it will create the resource with the Id provided if not found. As per this sentence from the spec: \"The update interaction creates a new current version for an existing resource or creates an initial version if no resource already exists for the given id.\" I should not have said 'Conditional Create' as that is somthing else as you point out.</p>",
        "id": 153996546,
        "sender_full_name": "Angus Millar",
        "timestamp": 1536832157
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192228\">@Brian Reinhold</span> completely agreed. We are talking \"conditional update\" here, not \"conditional create\". As Angus just clarified</p>",
        "id": 153996548,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536832244
    },
    {
        "content": "<blockquote>\n<p>So that would basically mean returning to the way it is specified in STU3...</p>\n<p>I think, the \"Create as Update\" was added for the reason to allow the client to specify the id in certain well defined use cases. And if that is allowed for the basic update, it should also be allowed for conditional update</p>\n</blockquote>\n<p>Isnt that what conditional update already does? When I did conditional updates, I specified the logical id (I assumed I had to but maybe that was a false assumption). In any case, I wanted to specify the logicial id because I needed that logical id in subsequent uploads in a streaming situation and I (1) did not want to wait for a server response to get it or (2) was queuing data for a third-party sender that knew nothing of FHIR.</p>\n<p>The conditional update then created the resource with my logical id if the resource was not found. If it was found, the resource was updated. Does the 'create as update' apply to something other than the conditional update? To me it seems the conditional update DOES do a create as update...and always has (at least the last time I used it which was a long time ago!)</p>",
        "id": 153996550,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536832582
    },
    {
        "content": "<p>I agree although I think you mean normal Update not Conditional Update, im reading R4 and like you I see no differance between these two statments :</p>\n<p>Update: \"The update interaction creates a new current version for an existing resource or creates an initial version if no resource already exists for the given id. \"<br>\nAND<br>\nUpdate as Create: \"Servers MAY choose to allow clients to PUT a resource to a location that does not yet exist on the server - effectively, allowing the client to define the id of the resource. \"</p>",
        "id": 153996553,
        "sender_full_name": "Angus Millar",
        "timestamp": 1536832812
    },
    {
        "content": "<p>I'm specifically talking about conditional update.</p>\n<p>The spec there currently just says: \"No matches: The server treats the interaction as an Update as Create interaction (or rejects it, if it does not support Update as Create)\".<br>\nAnd \"Update as Create\" is an optional thing here and it's about <a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a>. Which leaves you with \"reject the create, when you don't support \"Update as Create\". Meaning: update, if it exists, throw it away if not.<br>\nSo this is just the keep the \"old\" behavior</p>",
        "id": 153996555,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536832994
    },
    {
        "content": "<blockquote>\n<p>I agree although I think you mean normal Update not Conditional Update, im reading R4 and like you I see no differance between these two statments :</p>\n<p>Update: \"The update interaction creates a new current version for an existing resource or creates an initial version if no resource already exists for the given id. \"<br>\nAND<br>\nUpdate as Create: \"Servers MAY choose to allow clients to PUT a resource to a location that does not yet exist on the server - effectively, allowing the client to define the id of the resource. \"</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191391\">@Angus Millar</span>  Maybe the create as update means something I would REALLY like to have had: If the resource <em>is</em> found <strong>NO</strong> update is done. The resource is left alone!  If the resource is not found, it is created with my logical id. THAT would have been a dream solution for me but in STU3 such an option does not exist. If that exists now, it will be a great addition because I could really use it!!!</p>",
        "id": 153996556,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536833054
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192228\">@Brian Reinhold</span> I agree with that. I just want to be able to <em>also</em> have the STU3 variant in the context of conditional update.</p>",
        "id": 153996557,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536833221
    },
    {
        "content": "<p>Is that dream not  'if-none-exsists: _id =123' function on a create</p>",
        "id": 153996558,
        "sender_full_name": "Angus Millar",
        "timestamp": 1536833540
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"192228\">@Brian Reinhold</span> I agree with that. I just want to be able to <em>also</em> have the STU3 variant in the context of conditional update.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span>  Shake some of the cobwebs out of my mind; its been many years since I did the conditional update. But as I recall in the STU3/DSTU2 version the difference between a conditional update and update is that in the conditional case your match was based on something else other than the logical id. </p>\n<blockquote>\n<p>Is that dream not  'if-none-exsists: _id =123' function on a create</p>\n</blockquote>\n<p>YES!!!</p>\n<p>Right now a conditional create does not allow the specification of a logical id when the resource is created. I want a situation where I can specify the logical id (because I need it in other resources and I don't want to wait or can't wait for a server to respond and give it to me) and have the server create the resource with that logical id if it does not exist BUT if it does exist LEAVE IT ALONE ... no update, not even of the internal metadata.</p>",
        "id": 153996560,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536833724
    },
    {
        "content": "<p>Sounds like a  'if-none-exist: _id =123' yet on a PUT update rather than a POST create.  So that is still a dream</p>",
        "id": 153996561,
        "sender_full_name": "Angus Millar",
        "timestamp": 1536833930
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192228\">@Brian Reinhold</span> exactly. Which is why the current description of \"Update as Create\" (client defined id) is fine in the context of a basic Update (I have an id there), but not for Conditional Update (I explicitely have no id there)...</p>",
        "id": 153996562,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536833973
    },
    {
        "content": "<p>Anyway, a Conditional Update with \"Update as Create\" would still allow the client to define an id for a resouce that not yet exists.<br>\nBut as described now, having no id will just lead to the resource being discarded instead. Which I consider bad.</p>",
        "id": 153996563,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536834084
    },
    {
        "content": "<p>... because not knowing the id is the whole reason for Conditional Update ...</p>",
        "id": 153996564,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536834154
    },
    {
        "content": "<blockquote>\n<p>I agree although I think you mean normal Update not Conditional Update, im reading R4 and like you I see no differance between these two statments :</p>\n<p>Update: \"The update interaction creates a new current version for an existing resource or creates an initial version if no resource already exists for the given id. \"<br>\nAND<br>\nUpdate as Create: \"Servers MAY choose to allow clients to PUT a resource to a location that does not yet exist on the server - effectively, allowing the client to define the id of the resource. \"</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191391\">@Angus Millar</span>  Correct me if I am wrong (its been years) but the DSTU2/STU3 conditional update vs update was to allow the update to be done based upon something other than the logical id. You may not know the logical id and you want to make sure the resource has not already been created. If it hasn't been created, it gets created with the logical id you specify (didn't you HAVE to specify a logical id in an update?)  <br>\nIf it exists, the resource gets (unfortunately for me) updated. I do not know if the logical id you specified gets updated too but I doubt it. If multiple resources are found, error! Make better selection criteria.</p>\n<p>A normal update is all based upon the logical id and it is found and updated or not found and created with you logical id</p>",
        "id": 153996565,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536834262
    },
    {
        "content": "<p>Update as Create: \"Servers MAY choose to allow clients to PUT a resource to a location that does not yet exist on the server - effectively, allowing the client to define the id of the resource. \"</p>\n<p><span class=\"user-mention\" data-user-id=\"191391\">@Angus Millar</span>  Update as create difference I am assuming is that NO update gets done if the resource exists...at least I hope so. That is an option that does not currently exist. Maybe a better wording is Create as Update (I specify the logical id). If the resource does not exist, create with my logical id and do nothing if the resource exists.</p>",
        "id": 153996566,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536834722
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192228\">@Brian Reinhold</span> that#s about the \"One Match\" part then. For Conditional Update:<br>\n\"One Match: The server performs the update against the matching resource\"</p>",
        "id": 153996567,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536834886
    },
    {
        "content": "<p>I think it was not ever made clear, if you do a Conditional Update where you provide a search parameter and that search parameter returns one resource, then an update is done on it. Yet if it returned no resource a create is done, yet it never talked about whether that resource MUST have a resource Id in it or not. I know my server, if you do give a resource id, in the resource on a conditional update,  I check it matches the found resource id from the search and fail the update if it does not match . Yet if you provide no resource id in the resource then I just perform the update on the found resource. And furthermore, if not resource is found I do the create with your Resource id in the resource or if none I assign a server resource id and create.</p>",
        "id": 153996568,
        "sender_full_name": "Angus Millar",
        "timestamp": 1536834902
    },
    {
        "content": "<p>But that would be a Conditional Create as stated above?</p>",
        "id": 153996569,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536834979
    },
    {
        "content": "<p>Before completely moving away from the original issue, I just created a tracker on that: <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17906\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17906\">GF#17906</a></p>",
        "id": 153996571,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536835146
    },
    {
        "content": "<p>Well, Conditional Create and Conditional Update are similar but they have differences. <br>\nCReate: One Match: The server ignores the post and returns 200 OK<br>\nUpdate : One Match: The server performs the update against the matching resource</p>",
        "id": 153996572,
        "sender_full_name": "Angus Millar",
        "timestamp": 1536835151
    },
    {
        "content": "<p>And Create never lets the user define the resource id</p>",
        "id": 153996573,
        "sender_full_name": "Angus Millar",
        "timestamp": 1536835214
    },
    {
        "content": "<p>If defining the id is considered necessary on the \"Create but not Update\" case, this may indeed be another issue</p>",
        "id": 153996574,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536835400
    },
    {
        "content": "<blockquote>\n<p>I think it was not ever made clear, if you do a Conditional Update where you provide a search parameter and that search parameter returns one resource, then an update is done on it. Yet if it returned no resource a create is done, yet it never talked about whether that resource MUST have a resource Id in it or not. I know my server, if you do give a resource id, in the resource on a conditional update,  I check it matches the found resource id from the search and fail the update if it does not match . Yet if you provide no resource id in the resource then I just perform the update on the found resource. And furthermore, if not resource is found I do the create with your Resource id in the resource or if none I assign a server resource id and create.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191391\">@Angus Millar</span>  Are you implementing a server? I am impressed! All power to you!</p>\n<p>Here are my understandings of the creates, updates, and conditional variants (versions 2 and 3, I have not looked at 4)<br>\ncreate: cant specify a logical id. The resource is always created and the server gives it the logical id<br>\nconditional create: can't specify a logical id. Resource is created if no resource is found matching criteria<br>\n                                       ONE Match: server returns doing nothing. Resource is left alone and remains as is.<br>\n                                       Multiple matches: Error. Your selection criteria stink<br>\nupdate: client specifies the logical id. Server creates resource with logical id if not found. Updates resource if found<br>\nconditional update: client specifies logical id but resource is searched for based on other criteria. No match, create with specified logical id<br>\n                                      ONE match: update the resource (if the logical ids are different, I am assuming the new one is ignored)<br>\n                                     Multiple matches: your criteria stink. Error</p>\n<p>Digging into the dust of 3.0.1 here is where an update is required to have a client specified logical id:</p>\n<p>The request body SHALL be a Resource with an id element that has an identical value to the [id] in the URL. If no id element is provided, or the value is wrong, the server SHALL respond with an HTTP 400 error code, and SHOULD provide an OperationOutcome identifying the issue.</p>",
        "id": 153996575,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536835419
    },
    {
        "content": "<p>Conditional Update is to my understanding not about the client specifying a logical id in STU3. The \"client specifies id\" is \"Update as Create\" as explicitely referred to in R4. And it is an optional functionality on the server. Plus: if the server does not support that functionality, the resource will be rejected in the \"No matches\" case. Which I still consider bad ;-)</p>",
        "id": 153996576,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536835707
    },
    {
        "content": "<p>If it is optional then why does the normal update say \"he update interaction creates a new current version for an existing resource or creates an initial version if no resource already exists for the given id\", I still see no differance between normal update and this new ' Update as Create'</p>",
        "id": 153996577,
        "sender_full_name": "Angus Millar",
        "timestamp": 1536835905
    },
    {
        "content": "<blockquote>\n<p>The request body SHALL be a Resource with an id element that has an identical value to the [id] in the URL. If no id element is provided, or the value is wrong, the server SHALL respond with an HTTP 400 error code, and SHOULD provide an OperationOutcome identifying the issue.</p>\n</blockquote>\n<p>Yes. But that's for update, not for conditional update:<br>\nSTU3: \"When the server processes this update, it performs a search using its standard search facilities for the resource type, with the goal of resolving a single logical id for this request\" - so the server <em>finds</em> the id, the client doesn't provide it</p>",
        "id": 153996578,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536835909
    },
    {
        "content": "<p>\"Update as Create\" simply clarifies what has to happen in the \"No matches\" case when a client provides an id</p>",
        "id": 153996579,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536836013
    },
    {
        "content": "<p>Agree, so are we saying that if they do provide the id in the resource on a conditonal Update then that is an error?</p>",
        "id": 153996580,
        "sender_full_name": "Angus Millar",
        "timestamp": 1536836031
    },
    {
        "content": "<p>That would disallow a client to specify the id on Conditional Update.<br>\nSo my proposal for <strong>Conditional Update</strong> is:</p>\n<ul>\n<li>No matches, no id provided: The server creates the resource.</li>\n<li>No matches, id provided:  The server treats the interaction as an Update as Create interaction (or rejects it, if it does not support Update as Create)\"</li>\n</ul>",
        "id": 153996581,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536836105
    },
    {
        "content": "<blockquote>\n<p>\"Update as Create\" simply clarifies what has to happen in the \"No matches\" case when a client provides an id</p>\n</blockquote>\n<p>OK I can accept that, good point</p>",
        "id": 153996582,
        "sender_full_name": "Angus Millar",
        "timestamp": 1536836133
    },
    {
        "content": "<blockquote>\n<p>That would disallow a client to specify the id on Conditional Update.<br>\nSo my proposal for <strong>Conditional Update</strong> is:</p>\n<ul>\n<li>No matches, no id provided: The server creates the resource.</li>\n<li>No matches, id provided:  The server treats the interaction as an Update as Create interaction (or rejects it, if it does not support Update as Create)\"</li>\n</ul>\n</blockquote>\n<p>I'm on board with all this wiht an extra that I do:<br>\nOne Match and match resource id not equal to provided resource id, reject</p>",
        "id": 153996583,
        "sender_full_name": "Angus Millar",
        "timestamp": 1536836297
    },
    {
        "content": "<p>Good point. Maybe add a comment to the tracker? <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17906\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17906\">GF#17906</a></p>",
        "id": 153996584,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536836431
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>\"Update as Create\" simply clarifies what has to happen in the \"No matches\" case when a client provides an id</p>\n</blockquote>\n<p>OK I can accept that, good point</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span>  agreed. The conditional update was a little vague about the creation. The HAPI FHIR server happened to take my logical id when it created the resource. So its conditional update was like the update except it did a search for the resource based upon selection criteria. Since the way id did it (the logical id was actually created from the selection criteria) there would never be a conflict. In other words, if I had already created the resource it would have the same logical id I would have in my conditional update attempt. Would have been interesting to see what would have happened if I put in a logical id that was different.</p>",
        "id": 153996585,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536836447
    },
    {
        "content": "<p>So that is :<br>\nOne Match: no resource id provided, create ands assign new id<br>\nOne Match resource id provided and it matches the found resource ,update that resourece<br>\nOne Match resource id provided does not match resource found , reject update<br>\nAnd, everthing you wrote.</p>",
        "id": 153996586,
        "sender_full_name": "Angus Millar",
        "timestamp": 1536836474
    },
    {
        "content": "<blockquote>\n<p>Good point. Maybe add a comment to the tracker? <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17906\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17906\">GF#17906</a></p>\n</blockquote>\n<p>Is there a situation in R4 (I have not checked) where one can have the resource created if it does NOT match the selection criteria with the specified logical id AND if one match is found THE RESOURCE IS LEFT ALONE??? NO update!!!</p>",
        "id": 153996587,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536836592
    },
    {
        "content": "<p>Got run, feel free to play around with  this on my server here, woudl love the testing : <br>\n<a href=\"https://pyrohealth.net/\" target=\"_blank\" title=\"https://pyrohealth.net/\">https://pyrohealth.net/</a><br>\nFHIR Endpoint: <a href=\"https://stu3.test.pyrohealth.net/fhir\" target=\"_blank\" title=\"https://stu3.test.pyrohealth.net/fhir\">https://stu3.test.pyrohealth.net/fhir</a></p>",
        "id": 153996588,
        "sender_full_name": "Angus Millar",
        "timestamp": 1536836677
    },
    {
        "content": "<blockquote>\n<p>Got run, feel free to play around with  this on my server here, woudl love the testing : <br>\n<a href=\"https://pyrohealth.net/\" target=\"_blank\" title=\"https://pyrohealth.net/\">https://pyrohealth.net/</a><br>\nFHIR Endpoint: <a href=\"https://stu3.test.pyrohealth.net/fhir\" target=\"_blank\" title=\"https://stu3.test.pyrohealth.net/fhir\">https://stu3.test.pyrohealth.net/fhir</a></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191391\">@Angus Millar</span>  Do you have a server supporting R4 3.6.0? Does it support the new Device resource and transaction bundle?</p>",
        "id": 153996589,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536836889
    },
    {
        "content": "<p>Working on R4 now. So no not yet.</p>",
        "id": 153996590,
        "sender_full_name": "Angus Millar",
        "timestamp": 1536836922
    },
    {
        "content": "<blockquote>\n<p>Working on R4 now. So no not yet.</p>\n</blockquote>\n<p>So what version is it? 3.1.0, 3.20?</p>",
        "id": 153996591,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536836981
    },
    {
        "content": "<p>STU V3.0.1</p>",
        "id": 153996592,
        "sender_full_name": "Angus Millar",
        "timestamp": 1536837017
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192228\">@Brian Reinhold</span> <br>\nI'm not aware of such a situation being allowed. Might require another header param for Conditional Create?</p>",
        "id": 153996593,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536837289
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"192228\">@Brian Reinhold</span> <br>\nI'm not aware of such a situation being allowed. Might require another header param for Conditional Create?</p>\n</blockquote>\n<p>It might be easier just to make the decision upon whether the logical id is present. If the resource is not found with the given selection criteria, the resource is created. If the logical id is specified, that logical id is used (if the server already uses that logical id an error is returned. The client needs to be smarter about specifying the logical id). If not, the server creates it. The important thing is if the resource is found, do nothing!</p>\n<p>Many clients are in a situation where they cannot wait for a server response to get a logical id but need that logical id for upcoming resources. For example, handling streaming data from an ECG. Each Observation references the patient and device via logical id. In some cases Observation A is referenced by Observation B sent at a later time.</p>",
        "id": 153996596,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536837832
    },
    {
        "content": "<p>That's probably the original intention of \"Update as Create\" - except that you don't want to update</p>",
        "id": 153996598,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536838024
    },
    {
        "content": "<blockquote>\n<p>That's probably the original intention of \"Update as Create\" - except that you don't want to update</p>\n</blockquote>\n<p>Right!</p>",
        "id": 153996603,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536838052
    },
    {
        "content": "<p>But basically ... if you ensure that the client created id doesn't already exist on the server, you get what you want.<br>\nAs stated in <a href=\"http://build.fhir.org/http.html#upsert\" target=\"_blank\" title=\"http://build.fhir.org/http.html#upsert\">http://build.fhir.org/http.html#upsert</a> :</p>\n<p>\"Alternatively, clients may be sharing an agreed identification model (e.g. key server, scoped identifiers, or UUIDs) where clashes do not arise. Note that this use of update has security implications. \"</p>",
        "id": 153996607,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536838279
    },
    {
        "content": "<p>In this case, Conditional update WITH Update as Create would do what you want</p>",
        "id": 153996608,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536838360
    },
    {
        "content": "<p>Somebody should draw a diagram on that whole thing ...</p>",
        "id": 153996611,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536838467
    },
    {
        "content": "<p>something like this?: <a href=\"user_uploads/10155/fkQZy2tVEMfLg13nWIgXhXNi/conditional_update.png\" target=\"_blank\" title=\"user_uploads/10155/fkQZy2tVEMfLg13nWIgXhXNi/conditional_update.png\">conditional_update.png</a> <br>\n(fixed version)</p>\n<div class=\"message_inline_image\"><a href=\"user_uploads/10155/fkQZy2tVEMfLg13nWIgXhXNi/conditional_update.png\" target=\"_blank\" title=\"conditional_update.png\"><img src=\"user_uploads/10155/fkQZy2tVEMfLg13nWIgXhXNi/conditional_update.png\"></a></div>",
        "id": 153996919,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536914010
    },
    {
        "content": "<blockquote>\n<p>something like this?: <a href=\"/user_uploads/10155/e8gMs-9sRRRkVLZH4cGgNOuh/conditional_update.png\" target=\"_blank\" title=\"conditional_update.png\">conditional_update.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/e8gMs-9sRRRkVLZH4cGgNOuh/conditional_update.png\" target=\"_blank\" title=\"conditional_update.png\"><img src=\"/user_uploads/10155/e8gMs-9sRRRkVLZH4cGgNOuh/conditional_update.png\"></a></div></blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span>  if the condition matches only once on a conditional create you do nothing. That's the point. Why are you creating a resource when the condition matches?</p>\n<p>I would like a situation where if the condition matches one does nothing BUT if the resource is not found it is created with my provided id. As far as I know that option does not exist. For many clients, especially on small resource-limited platforms, handling a server response to get ids that are needed in resources being concurrently generated is complicated, one needs queuing and thus memory resources. An example of such a situation is sending streaming pulse oximeter data from a home environment.</p>",
        "id": 153996921,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536914566
    },
    {
        "content": "<p>You are talking about Conditional Creates, this is about Conditional Updates</p>",
        "id": 153996922,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536914770
    },
    {
        "content": "<p>What you are searching already exists: <a href=\"https://www.hl7.org/fhir/http.html#ccreate\" target=\"_blank\" title=\"https://www.hl7.org/fhir/http.html#ccreate\">https://www.hl7.org/fhir/http.html#ccreate</a></p>",
        "id": 153996923,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536914832
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span> or take this one if you prefer DMN over BPMN <a href=\"/user_uploads/10155/biHpwrY9KjCttAjtG9GPsQey/conditional_update_DMN.png\" target=\"_blank\" title=\"conditional_update_DMN.png\">conditional_update_DMN.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/biHpwrY9KjCttAjtG9GPsQey/conditional_update_DMN.png\" target=\"_blank\" title=\"conditional_update_DMN.png\"><img src=\"/user_uploads/10155/biHpwrY9KjCttAjtG9GPsQey/conditional_update_DMN.png\"></a></div>",
        "id": 153996924,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536914884
    },
    {
        "content": "<blockquote>\n<p>What you are searching already exists: <a href=\"https://www.hl7.org/fhir/http.html#ccreate\" target=\"_blank\" title=\"https://www.hl7.org/fhir/http.html#ccreate\">https://www.hl7.org/fhir/http.html#ccreate</a></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span>  I see. You have 'conditional POST'. If you are talking about conditional updates use 'conditional PUT'. The POST makes it a conditional create.</p>",
        "id": 153996925,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536914956
    },
    {
        "content": "<p>omg, thx :-) fixed it above</p>",
        "id": 153996926,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536914979
    },
    {
        "content": "<blockquote>\n<p>omg, thx :-)</p>\n</blockquote>\n<p>Given that, I am still a little confused about the what you do when a single match is found and a logical id provided. In that case you create a new resource in spite of the fact a resource already exists with the condition specified. Why does this happen and not just an update? I would expect the logical id is provided for the case where a resource is not found and one is made using that logical id.</p>",
        "id": 153996927,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536915249
    },
    {
        "content": "<p>you are right, i did my diagram based on the GF Tracker item, which includes these from you:<br>\nCopy &amp; paste additional proposal by Angus Millar:</p>\n<p>One Match: no resource id provided, create ands assign new id<br>\nOne Match resource id provided and it matches the found resource ,update that resourece<br>\nOne Match resource id provided does not match resource found , reject update</p>",
        "id": 153996928,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536915448
    },
    {
        "content": "<p>but you are right</p>",
        "id": 153996929,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536915483
    },
    {
        "content": "<p>One Match should only have two results: <br>\n- Update<br>\n- REJECT</p>",
        "id": 153996930,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536915503
    },
    {
        "content": "<blockquote>\n<p>you are right, i did my diagram based on the GF Tracker item, which includes these from you:<br>\nCopy &amp; paste additional proposal by Angus Millar:</p>\n<p>One Match: no resource id provided, create ands assign new id<br>\nOne Match resource id provided and it matches the found resource ,update that resourece<br>\nOne Match resource id provided does not match resource found , reject update</p>\n</blockquote>\n<p>The 'One Match: no resource id provided, create ands assign new id' makes no sense to me. The idea that you found a match indicates that the resource you are looking for exists and is the only one that exists with your criteria. If you want to make a new resource, just do it why go through all the matching logic? With that statement the result is the same whether there is a match or not. Well, if there are multiple matches then there is a reject.</p>",
        "id": 153996931,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536915661
    },
    {
        "content": "<p>Right, no create should happen when one match is found</p>",
        "id": 153996932,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536915765
    },
    {
        "content": "<p>Yes</p>",
        "id": 153996933,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536915775
    },
    {
        "content": "<p>alright here you go (again) <a href=\"/user_uploads/10155/lHOyGl_Yz42luJdlLfv4JQvy/conditional_update.png\" target=\"_blank\" title=\"conditional_update.png\">conditional_update.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/lHOyGl_Yz42luJdlLfv4JQvy/conditional_update.png\" target=\"_blank\" title=\"conditional_update.png\"><img src=\"/user_uploads/10155/lHOyGl_Yz42luJdlLfv4JQvy/conditional_update.png\"></a></div>",
        "id": 153996934,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536915805
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/hMidoFcRBu0jiCrT8NU7T5ck/conditional_update_DMN.png\" target=\"_blank\" title=\"conditional_update_DMN.png\">conditional_update_DMN.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/hMidoFcRBu0jiCrT8NU7T5ck/conditional_update_DMN.png\" target=\"_blank\" title=\"conditional_update_DMN.png\"><img src=\"/user_uploads/10155/hMidoFcRBu0jiCrT8NU7T5ck/conditional_update_DMN.png\"></a></div>",
        "id": 153996935,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536915915
    },
    {
        "content": "<p>I think in the diagram this should be \"<strong>No resource id provided or</strong> resource id and found-resource-ID are matching\"</p>",
        "id": 153996936,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536916065
    },
    {
        "content": "<p>DMN:<br>\nrows 2 and 3 need \"false\" in the \"multiple matches\" column<br>\nand a row \"3a\" is needed: true/false/false/-/UPDATE</p>",
        "id": 153996937,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536916229
    },
    {
        "content": "<blockquote>\n<p><a href=\"/user_uploads/10155/hMidoFcRBu0jiCrT8NU7T5ck/conditional_update_DMN.png\" target=\"_blank\" title=\"conditional_update_DMN.png\">conditional_update_DMN.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/hMidoFcRBu0jiCrT8NU7T5ck/conditional_update_DMN.png\" target=\"_blank\" title=\"conditional_update_DMN.png\"><img src=\"/user_uploads/10155/hMidoFcRBu0jiCrT8NU7T5ck/conditional_update_DMN.png\"></a></div></blockquote>\n<p>On a conditional update my understanding is this<br>\n1. A condition is specified<br>\n2. IF one and only one resource is found, it is updated (otherwise error). Any provided logical id by the client is ignored. - 'the conditional part of the update'<br>\n3. If no matches are found, the resource is created with the logical id provided by the client - classic update transaction<br>\n4. The new thing is (as I understand it) if the logical id is not provided, the resource is created where the server generates the logical id.</p>\n<p>Step 4 was added as a clarification because in the classic update, it is clear that one had to specify a logical id. In the conditional update, that statement was not explicitly made. So now we have the option to specify or not specify a logical id. It also satisfies a different use case; one where the client does not know the logical id. I had a use case where I knew what the logical would be if the resource had been created but what I didn't know was if it was already created. So I wanted to check for existence first (without doing a GET). If it didnt exist I wanted to create it with my id. But if it did exist, I wanted to do nothing but using the conditional update would cause the existing resource to be updated (even though the content of the resource was identical).</p>",
        "id": 153996938,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536916641
    },
    {
        "content": "<p>Step 3 actually is \"Update as Create\".<br>\nStep 4 is the STU3 behavior for conditional update with no matches</p>",
        "id": 153996939,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536916798
    },
    {
        "content": "<blockquote>\n<p>Step 3 actually is \"Update as Create\".<br>\nStep 4 is the STU3 behavior for conditional update with no matches</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span> I think you have it backwards. In a create transaction you are not allowed to specify a logical id. In an update transaction, you are required to specify a logical id. When I did a conditional update on a HAPI FHIR server, I always specified the logical id and it would generate the resource if it did not exist with my logical id. I never tried doing a conditional update without specifying a logical id.<br>\nIn a conditional create I am not allowed to specify a logical id (unless it is a temporary id in a bundle but that's a different story).</p>",
        "id": 153996940,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536917077
    },
    {
        "content": "<p>AFAIK the whole use of conditional update is not knowing the id</p>",
        "id": 153996943,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536917177
    },
    {
        "content": "<blockquote>\n<p>Step 3 actually is \"Update as Create\".<br>\nStep 4 is the STU3 behavior for conditional update with no matches</p>\n</blockquote>\n<p>Rule 3 is Update: i have a matching Condition, and a matching provided ID -&gt; UPDATE</p>",
        "id": 153996945,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536917336
    },
    {
        "content": "<p>and RULE4 is the same as in STU3</p>",
        "id": 153996946,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536917365
    },
    {
        "content": "<p>Brian's Step 3 says \"If no matches are found\" =&gt; create ;-)</p>",
        "id": 153996947,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536917430
    },
    {
        "content": "<p>i agree, but you could do a condUpdate with a search criteria despite the fact that you know the ID. (Maybe making shure this resource only exists once on the server)</p>",
        "id": 153996948,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536917468
    },
    {
        "content": "<blockquote>\n<p>AFAIK the whole use of conditional update is not knowing the id</p>\n</blockquote>\n<p>I had a slightly different use case; I knew what the logical id would be (it was specified by a standard). What I didn't know was if the resource had already been created.</p>\n<p>But not knowing the logical id is fine, too. Thus you provide the condition. This does not prevent you from specifying the logical id in case the resource needs to be generated. What was not clear in STU3 version was if you are doing a conditional update, do you still have to specify a logical id for the case where the resource is not found. In a classic update, the spec says you have to provide a logical ID. What R4 is doing is saying in a conditional update, you can either specify the logical id or not. If you don't, a no-match case is handled like a create and not an update.</p>",
        "id": 153996950,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536917504
    },
    {
        "content": "<blockquote>\n<p>DMN:<br>\nrows 2 and 3 need \"false\" in the \"multiple matches\" column</p>\n</blockquote>\n<p>actually it doesn't (Rule1 already handles all multiple matches) but i added it for clarification. <a href=\"/user_uploads/10155/lVChESLhRbxATyb_xjXWvouU/conditional_update_DMN.png\" target=\"_blank\" title=\"conditional_update_DMN.png\">conditional_update_DMN.png</a> <a href=\"/user_uploads/10155/nPzHCoe1b85JpjWfSP0GqK8_/conditional_update.png\" target=\"_blank\" title=\"conditional_update.png\">conditional_update.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/lVChESLhRbxATyb_xjXWvouU/conditional_update_DMN.png\" target=\"_blank\" title=\"conditional_update_DMN.png\"><img src=\"/user_uploads/10155/lVChESLhRbxATyb_xjXWvouU/conditional_update_DMN.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/10155/nPzHCoe1b85JpjWfSP0GqK8_/conditional_update.png\" target=\"_blank\" title=\"conditional_update.png\"><img src=\"/user_uploads/10155/nPzHCoe1b85JpjWfSP0GqK8_/conditional_update.png\"></a></div>",
        "id": 153996953,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536917676
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>rows 2 and 3 need &quot;false&quot; in the &quot;multiple matches&quot; column\n</pre></div>\n\n\n<p>actually it doesn't (Rule1 already handles all multiple matches) but i added it for clarification. </p>\n<p>Right, but thanks anyway ;-)</p>",
        "id": 153996956,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536917723
    },
    {
        "content": "<p>I agree on both table and diagram</p>",
        "id": 153996957,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1536917873
    },
    {
        "content": "<blockquote>\n<p>and RULE4 is the same as in STU3</p>\n</blockquote>\n<p>Not quite. This is where STU3 was vague. It wasn't clear what would happen if the resource was found and no logical id was provided. Given that the classic update required it, does this mean an error? I think R4 is trying to clarify this situation by saying ok, we allow both. Existing id will do an update and no id will do a create.</p>\n<p>What probably happened was some  servers, after finding no match, handed the transaction to its 'update' method. That would cause an error if no id were provided. Now it needs to check for an id. If found, use the update method. If not, use the create method. Probably not too much extra work.</p>",
        "id": 153996963,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536918141
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>DMN:<br>\nrows 2 and 3 need \"false\" in the \"multiple matches\" column</p>\n</blockquote>\n<p>actually it doesn't (Rule1 already handles all multiple matches) but i added it for clarification. <a href=\"/user_uploads/10155/lVChESLhRbxATyb_xjXWvouU/conditional_update_DMN.png\" target=\"_blank\" title=\"conditional_update_DMN.png\">conditional_update_DMN.png</a> <a href=\"/user_uploads/10155/nPzHCoe1b85JpjWfSP0GqK8_/conditional_update.png\" target=\"_blank\" title=\"conditional_update.png\">conditional_update.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/lVChESLhRbxATyb_xjXWvouU/conditional_update_DMN.png\" target=\"_blank\" title=\"conditional_update_DMN.png\"><img src=\"/user_uploads/10155/lVChESLhRbxATyb_xjXWvouU/conditional_update_DMN.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/10155/nPzHCoe1b85JpjWfSP0GqK8_/conditional_update.png\" target=\"_blank\" title=\"conditional_update.png\"><img src=\"/user_uploads/10155/nPzHCoe1b85JpjWfSP0GqK8_/conditional_update.png\"></a></div></blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span>  I don't know what should happen if the resource is found and the logical id is specified but does not match the logical id of the found resource. Should that be an error? Say I don't know the logical id but  want to generate (I use generate instead of create to avoid confusion) the resource if it is not found WITH this logical id. If the resource is found with my conditions but it does not have my specified logical id, is that an error? I don't know. I would (personally) prefer that the specified logical id be looked at only if a resource is being generated. If it already exists, ignore it.</p>",
        "id": 153996970,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536918613
    },
    {
        "content": "<p>i disagree, if i provide an id in a conditional update (which is already an edge case) it should behave similar to a regular update.</p>\n<p>UPDATE:</p>\n<blockquote>\n<p>The request body SHALL be a Resource with an id element that has an identical value to the [id] in the URL. If no id element is provided, or the id disagrees with the id in the URL, the server SHALL respond with an HTTP 400 error code, and SHOULD provide an OperationOutcome identifying the issue.</p>\n</blockquote>",
        "id": 153996972,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1536919253
    },
    {
        "content": "<blockquote>\n<p>i disagree, if i provide an id in a conditional update (which is already an edge case) it should behave similar to a regular update.</p>\n<p>UPDATE:</p>\n<blockquote>\n<p>The request body SHALL be a Resource with an id element that has an identical value to the [id] in the URL. If no id element is provided, or the id disagrees with the id in the URL, the server SHALL respond with an HTTP 400 error code, and SHOULD provide an OperationOutcome identifying the issue.</p>\n</blockquote>\n</blockquote>\n<p>But as Stefan says, isn't the conditional update for when you don't know the logical id? The conditional is a different use case. A classic update is designed to update a resource that you know exists and know its id and if it doesnt exist you want to generate it with a specific id.</p>\n<p>Conditional is different. You could do a GET based upon your search conditions (if you dont know the id) to see if the resource exists and then update it if it doesnt (specifying the id). But that involves two transactions and permission to obtain PHI from the server. The conditional is attempting to allow you to accomplish all that in one transaction without the need for permissions to extract data from the server.</p>",
        "id": 153996974,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1536921337
    },
    {
        "content": "<p>The proposed resolution pointed to in this discussion was adopted in R4, but recently, <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> raised a valid question on <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20390\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20390\">GF#20390</a>.  The discussion above (which is now part of the R4 spec) uses the phrase \"id provided\" and \"the logical id\" pretty informally.  In the case of a conditional PUT, the FHIR REST URL does <em>not</em> have an id (as it would for a normal PUT), so where exactly does this \"provided id\" live?  In <a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a>?  Or in the _id search parameter?   </p>\n<p>It's conceivable that you'd have search criteria without an _id, but want to conditionally create a resource with a given <a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a>.  Yet the last sentence in the text on conditional updates says: \"If an id is provided, the server SHALL ignore it\" - so this suggests we cannot use <a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a></p>\n<p>Anyway, I suspect this refers to <a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a>, and we should remove the last sentence of that paragraph, but in a FHIR-I discussion with some implementers on the call, we could not reach a final conclusion, and we all had our own differing interpretation of the current R4 text.</p>\n<p>What to do about it?</p>",
        "id": 161687547,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1553548051
    },
    {
        "content": "<p>The introduction of id provided introduces IMO a subtle second criteria (<a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a>).<br>\nIf you have a <a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a> and your intention is to update an existing or create a new resource by id provided, shouldn't you then just use Update as create?<br>\nWhile if I want to do a Conditional update I explicitly define my search parameters on the query string and if I accidentally forget to remove <a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a> the server disregards the id and creates a new resource if no matches.</p>",
        "id": 161752948,
        "sender_full_name": "Kenneth Myhra",
        "timestamp": 1553600710
    },
    {
        "content": "<p>Disregard my comment above, I think I can see the use-case for this and therefore agree with Ewout's conclusion to remove the paragraph stating: \"If an id is provided, the server SHALL ignore it\". Also misinterpreted the \"Update as create\" thinking it meant it would update that resource if it is was found, rather it is a Create operation and will only create the resource using the provided id if not found.</p>",
        "id": 161794174,
        "sender_full_name": "Kenneth Myhra",
        "timestamp": 1553627877
    }
]