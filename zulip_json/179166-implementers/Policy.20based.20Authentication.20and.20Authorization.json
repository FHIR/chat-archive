[
    {
        "content": "<p>I've been asked to implement a system where patients, practitioners are assigned some policies and access to various resources should be enforced based on those policies. How do I go about implementing this? </p>\n<p>For example, a practitioner is assigned a few patients, recorded by using the <code>CareTeam</code> resource. So, a practitioner is a part of a bunch of careteams. Now, I thought of implementing a proxy or an API Gateway to modify the query URL to limit the response to only those they're supposed to see, but this doesn't scale at all, and is a probably going to be a nightmare to extend, debug and maintain. </p>\n<p>I also looked at <code>SMART on FHIR</code>, but this doesn't seem to meet the requirements, or am I mistaken? </p>\n<p>HAPI FHIR docs suggest I use the <code>@Interceptor</code> to implement custom authentication and authorization checks, but I'm facing some difficulties understanding them. For example, say a practitioner searches for all patients that have BP greater than some threshold, how do I limit the response to only those that have been assigned to him? I'm also worried in case of somewhat larger transactions, it might be possible to figure out some information (say if a patient has a condition) based on how long a response takes to process (exiting early due to access denied) or going through and taking a few seconds. </p>\n<p>How do I proceed with implementing this policy based access control?</p>",
        "id": 219188556,
        "sender_full_name": "Dexter",
        "timestamp": 1607421156
    },
    {
        "content": "<p>I'm pretty new to this, so I hope this place is appropriate to ask such questions. If not, please do let me know, and where such questions are better suited</p>",
        "id": 219188605,
        "sender_full_name": "Dexter",
        "timestamp": 1607421203
    },
    {
        "content": "<p>In general you'll have to build your own 'access control engine', which may filter a query (decide whether it should be processed at all) as well as the response (remove any matching or included resources that this user isn't allowed to see). This is quite common in implementations. Potentially this could be very tricky depending on the complexity and amount of different policies that may exist in your context, let alone if one starts working with XACML based policies. SMART on FHIR offers an implementation guide for OAuth / OpenID which is one of the core foundations of an access control engine. It also has the concept of scopes which will also impact the functionality of your access control engine. This is the right forum to ask, some who have actually implemented this (I haven't) will undoubtedly pitch in as well.</p>",
        "id": 219201866,
        "sender_full_name": "René Spronk",
        "timestamp": 1607431485
    },
    {
        "content": "<p>You generally won't want to change the API to enforce your access control.  The way clients interact with your interface should remain unchanged even if your access control rules change.  Your access control rules will be handled as \"business rules\" within your system after a call has hit your interface, but before you've executed your query/returned your results.</p>",
        "id": 219211115,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607437057
    },
    {
        "content": "<p>Thank you very much for the info! </p>\n<p>So my access control must be based on approaches that use filtering, and perhaps ones that also modify the final query sent to the DB by changing/adding logic to HAPI. Are there examples for both the approaches I can look at, so that I can start to get an idea on how the huge codebase works and interacts?</p>",
        "id": 219317992,
        "sender_full_name": "Dexter",
        "timestamp": 1607509187
    },
    {
        "content": "<p>That sort of question is probably best raised in the <a class=\"stream\" data-stream-id=\"179167\" href=\"/#narrow/stream/179167-hapi\">#hapi</a> stream</p>",
        "id": 219353342,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607528435
    },
    {
        "content": "<p>Okay, will do, thanks!<br>\nOn a small sidenote, how do I keep track of all the threads I've started or interracted in?</p>",
        "id": 219430407,
        "sender_full_name": "Dexter",
        "timestamp": 1607573613
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"359486\">@Dexter</span> outside of FHIR it sounds like your describing an authorization based access control (ABAC) which is typically enabled through an XACML based system. i'm also not familiar with orchestrating this governance through HAPI.</p>",
        "id": 272967868,
        "sender_full_name": "Jim StClair",
        "timestamp": 1645631737
    },
    {
        "content": "<p>It looks like <span class=\"user-mention\" data-user-id=\"191372\">@René Spronk</span> was heading down the same direction I was suggesting, sorry if I was redundant.</p>",
        "id": 272968120,
        "sender_full_name": "Jim StClair",
        "timestamp": 1645631829
    }
]