[
    {
        "content": "<p>I'm trying to figure out which resource to use in the following scenario.</p>\n<p>1. A national citizen portal where citizens (patients) can communicate with healthcare personell<br>\n2. One feature of the portal is to convey messages between the citizens and healthcare personell<br>\n3. These messages will have a title and a body of text<br>\n4. These message can also have references to other FHIR resources as well as documents and images (binaries)<br>\n-<br>\nI have looked at Composition and profiled something that could work, I have also looked at Communication and initially didn't feel it would fit since it is missing the title in 3. above, there is also IMO not a good way of adding a text body like there is in Composition.section.text and using an associated loinc code for it.</p>\n<p>Any input or clarification would be appreciated.</p>",
        "id": 175882860,
        "sender_full_name": "Kenneth Myhra",
        "timestamp": 1568705829
    },
    {
        "content": "<p>Title would be Communication.subject.text.  The body of text would go in Communication.payload.contentAttachment.  (You would have to base64-encode it though.)</p>",
        "id": 175895670,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1568718662
    },
    {
        "content": "<blockquote>\n<p>Title would be Communication.subject.text.  The body of text would go in Communication.payload.contentAttachment.  (You would have to base64-encode it though.)</p>\n</blockquote>\n<p>for simple text, I would (will) use payload.contentCodeableConcept</p>",
        "id": 175895872,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1568718842
    },
    {
        "content": "<p>is that wrong? most common case for us is to send a string of text. Besides, we want to limit the message length to 320 characters, which is hard to do if we base64-encode it.</p>",
        "id": 175896042,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1568718964
    },
    {
        "content": "<p>Communication.subject.text (you mean display?) would work in some cases, but could we have a dedicated field ?<br>\n\"Subject\" can mean \"subject of care\" as it does today in Communication. But it can also mean \"subject of this email, or subject of this thread\" and those are two different elements IMO. They could even be different in classification (one is PII, the other not so much)</p>",
        "id": 175896333,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1568719235
    },
    {
        "content": "<p>I'm not sure why CodeableConcept is there actually.  On CommunicationRequest, CodeableConcept is used to indicate what \"kind\" of information you want shared - e.g. a document code.  However, in the Communication you'd always want the actual data.  <span class=\"user-mention\" data-user-id=\"191403\">@Michelle (Moseman) Miller</span>, what's the usecase for CodeableConcept in the Communication itself?</p>",
        "id": 175902930,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1568725109
    },
    {
        "content": "<p>sending people a code</p>",
        "id": 175903014,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568725178
    },
    {
        "content": "<p>e.g. \"Code Blue\"</p>",
        "id": 175903024,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568725186
    },
    {
        "content": "<blockquote>\n<p>Title would be Communication.subject.text. </p>\n</blockquote>\n<p>That should probably be Communication.topic.text? Initially that seemed a bit hackish to me, but if that's the intention</p>\n<blockquote>\n<p>The body of text would go in Communication.payload.contentAttachment.  (You would have to base64-encode it though.)</p>\n</blockquote>\n<p>Or Communication.payload.contentString? The only thing I'm missing here is some way of coding it like I would do with Composition i.e: Communication.payload.code.coding.code = 'instructions' or some similar code.</p>",
        "id": 175903769,
        "sender_full_name": "Kenneth Myhra",
        "timestamp": 1568725646
    },
    {
        "content": "<p>CodeableConcept was added per <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20770\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20770\">GF#20770</a></p>\n<p>Communication.payload.content[x] comment summarizes the use case.</p>\n<blockquote>\n<p>The content can be codified or textual. As an example of codified content, when working with machine generated communications, the payload may be drawn from a finite, terminology defined set of communications, especially for short, status update kinds of communications where more of a natural language approach isn't appropriate.</p>\n<p>If the content isn't codified, contentCodeableConcept.text can be used.</p>\n<p>When using contentCodeableConcept, the CodeableConcept is what is being communicated and is not a categorization of the content.</p>\n</blockquote>",
        "id": 175904961,
        "sender_full_name": "Michelle (Moseman) Miller",
        "timestamp": 1568726510
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  meant that title can be Communication.topic.text (not Communication.subject.text)</p>",
        "id": 175905100,
        "sender_full_name": "Michelle (Moseman) Miller",
        "timestamp": 1568726579
    },
    {
        "content": "<p>FYI -- We have an outstanding tracker, <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22648\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22648\">GF#22648</a>, that we need to resolve.  This tracker deals with payload differences between Communication and CommunicationRequest.  If payload has differences in meaning between Communication and CommunicationRequest, then Patient Care will consider either beefing up the descriptions to make those differences more clear OR possibly rename the elements to mitigate confusion (e.g. assumptions that the payload is the same).</p>",
        "id": 175905631,
        "sender_full_name": "Michelle (Moseman) Miller",
        "timestamp": 1568726926
    },
    {
        "content": "<p>Any thoughts on adding Communication.payload.code of type CodeableConcept like Composition.section.code so I can say something about the what the content is / intention of the content?</p>",
        "id": 175908286,
        "sender_full_name": "Kenneth Myhra",
        "timestamp": 1568728559
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191403\">@Michelle (Moseman) Miller</span> added a tracker item requesting to add some way of coding Communication.payload in a similar way as Composition.section.code. <a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=24661\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=24661\">GF#24661</a></p>",
        "id": 175997601,
        "sender_full_name": "Kenneth Myhra",
        "timestamp": 1568808265
    },
    {
        "content": "<p>Communication. payload may benefit from the CodeableReference discussion<br>\n<a href=\"#narrow/stream/179166-implementers/topic/Proposal.20for.20a.20new.20type.20ConceptReference\" title=\"#narrow/stream/179166-implementers/topic/Proposal.20for.20a.20new.20type.20ConceptReference\">https://chat.fhir.org/#narrow/stream/179166-implementers/topic/Proposal.20for.20a.20new.20type.20ConceptReference</a></p>",
        "id": 175998768,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1568809086
    }
]