[
    {
        "content": "<p>In FHIR documentation, the type of \"repeat\" element in \"Timing\" data type  is specified as \"Element\"  in the Structure tab, whereas the UML diagram tab shows a separate class \"Repeat\". <br>\n<a href=\"/user_uploads/10155/dOWJwrUJ4Nw0CNxnmDvYbNvj/image1.png\" target=\"_blank\" title=\"image1.png\">image1.png</a><br>\n<a href=\"/user_uploads/10155/SpTGnzMnEkqr5bR5Yy_9Wo1D/image2.png\" target=\"_blank\" title=\"image2.png\">image2.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/dOWJwrUJ4Nw0CNxnmDvYbNvj/image1.png\" target=\"_blank\" title=\"image1.png\"><img src=\"/user_uploads/10155/dOWJwrUJ4Nw0CNxnmDvYbNvj/image1.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/10155/SpTGnzMnEkqr5bR5Yy_9Wo1D/image2.png\" target=\"_blank\" title=\"image2.png\"><img src=\"/user_uploads/10155/SpTGnzMnEkqr5bR5Yy_9Wo1D/image2.png\"></a></div><p>In most of the Primitive and Complex Types, it appears like all the elements inside them have been mapped to one or other pre-defined FHIR data type. But below three elements are mapped to \"Element\" instead of a specific Class. </p>\n<ul>\n<li>Timing.Repeat</li>\n<li>DataRequirement.dateFilter</li>\n<li>DataRequirement.codeFilter</li>\n</ul>\n<p>Could some one provide an insight  if this is by design ? Or there should have been a specific data type such as “Repeat”, “DateFilter” and “CodeFilter” respectively. </p>\n<p>As there is no specific data type, we are unable to interpret corresponding profiles, e.g.,  \"Timing.repeat\" profile in <a href=\"https://github.com/jamesagnew/hapi-fhir/blob/3173af31aeaa3132915febcfd3aae3283368a6e1/hapi-fhir-validation-resources-dstu3/src/main/resources/org/hl7/fhir/dstu3/model/profile/profiles-types.xml#L18072\" target=\"_blank\" title=\"https://github.com/jamesagnew/hapi-fhir/blob/3173af31aeaa3132915febcfd3aae3283368a6e1/hapi-fhir-validation-resources-dstu3/src/main/resources/org/hl7/fhir/dstu3/model/profile/profiles-types.xml#L18072\">HAPI profiles-types.xml</a> based on <a href=\"http://hl7.org/fhir/timing.profile.json.html\" target=\"_blank\" title=\"http://hl7.org/fhir/timing.profile.json.html\">FHIR Timing.repeat profile</a></p>",
        "id": 181678473,
        "sender_full_name": "Amaresh Vakul",
        "timestamp": 1574457777
    },
    {
        "content": "<p>This is by design. You should think of these as in place anonymous specializations of Element (or, in other places, BackboneElement). UML doesn’t have such a thing, so we generate names for the classes using an algorithm</p>",
        "id": 181707739,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574500504
    },
    {
        "content": "<p>I’m not sure why this means you can’t interpret the profiles</p>",
        "id": 181707745,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574500524
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  for confirming. <br>\nI was reading in BackboneElement documentation that  </p>\n<blockquote>\n<p>The base definition for elements defined as part of a resource definition. Data Type elements do not use this type.</p>\n</blockquote>\n<p>so it was not clear whether in DataType we should treat these anonymous elements similar to BackboneEement or these couple of elements were somehow missing a specific data type.   <br>\nAnyways as the root data-type (in this case \"Timing\") <a href=\"http://hl7.org/fhir/STU3/timing.profile.json.html\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/timing.profile.json.html\">profile</a> has all the children elements definitions inline, so we can use an algorithm to generate specific class, the same way that we would generate for a BackboneElement.</p>",
        "id": 181939347,
        "sender_full_name": "Amaresh Vakul",
        "timestamp": 1574786266
    },
    {
        "content": "<p>carumba:</p>\n<blockquote>\n<p>Data Type elements do not use this type.</p>\n</blockquote>\n<p>That's not true. I'l have to fix that line</p>",
        "id": 181952642,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574794831
    }
]