[
    {
        "content": "<p>Hi. Perhaps I am missing the obvious, but how do i inform about a diagnosis in a) non-patient-specific and b) patient-specific scenarios?</p>",
        "id": 153910885,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1506492575
    },
    {
        "content": "<p>Examples: <br>\na) these are the infections that this medication treats (so if I have a medication resource, i can link to some established resources or code sets)<br>\nb) patient has this kind of infection with these bacteria.</p>",
        "id": 153910887,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1506492723
    },
    {
        "content": "<p>condition seems to be patient-specific only so only works for b, and the description of condition seems to be circumstancial things about the patient, rather than an asserted diagnosis.<br>\nObservation also would be patient-specific.</p>",
        "id": 153910888,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1506492819
    },
    {
        "content": "<p>for a), should we work with only the code as an attribute ? that may be limiting if the adopted terminology does not support some nuances that we may want to use</p>",
        "id": 153910889,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1506492865
    },
    {
        "content": "<p>for example, icd-10 code for kidney cancer is just one, but we'll likely need a few variants</p>",
        "id": 153910890,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1506493018
    },
    {
        "content": "<p>use case for a): catalog of treatments per disease</p>",
        "id": 153910891,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1506493528
    },
    {
        "content": "<p>Scenario A is about Medication knowledge/master-file type information and could include not just what conditions, but whether it's recommended as a first line or second line treatment, what the recommended dosages are, what clinical evidence supports those recommendations, etc.  Pharmacy is working on a MedicationKnowledge resource that should tackle some of this.  It would certainly reference the diagnosis as a code, not as a reference to Condition which is indeed intended to be patient-specific.</p>",
        "id": 153911014,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1506524509
    },
    {
        "content": "<p>that information is something i expect in a catalog, as curated information by some entity for a specific context. We shouldn't to say 'this drug is for that condition' but rather 'in this context, this drug is for that condition'. <br>\nassuming that there should be a common construct for catalogs, instead of each domain specifying their catalog formats, then this can indeed be an attribute, but the concept of Condition seems so clear that it could make sense to have it separate, no?</p>",
        "id": 153911064,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1506544425
    },
    {
        "content": "<p>Cataloguing it is a use-case.  But it should be possible to pass the knowledge information around independent of whether you've got a catalog.  I'd like to see some consistency/re-use of structures that we use to capture knowledge around substances, medications, devices, orderable therapies, protocols, etc.  Whether we can fit that into a single resouce seems unlikely though.</p>",
        "id": 153911072,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1506546338
    },
    {
        "content": "<p>As an example of reuse, I'd expect pointers to PlanDefinition to talk about recommended therapy uses.</p>",
        "id": 153911075,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1506546525
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> I'm not following. You mean we'd have a way to say \"by the way, this is the full definition of this medication/device\"?</p>",
        "id": 153912091,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507057955
    },
    {
        "content": "<p>I'm saying that I think having a supplemental resource for Medication that represents MedicationDefinition or MedicationKnowledge makes sense.  I'd then expect that resource to be leveraged in the regulatory, knowledgebase and cataloging use-cases.</p>",
        "id": 153912103,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1507059002
    },
    {
        "content": "<p>The approach behind the \"catalogEntry\" (name can surely be challenged, since it was made just for the original purpose) was to have a \"here's some definitionalstuff about this entry - additional attributes and any extra relations\"</p>",
        "id": 153912108,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507059629
    },
    {
        "content": "<p>thus extending attributes to things like price with tax, price without tax, price for regimen A, whether it can be sold for use outside hospital, schedule (if that applies)</p>",
        "id": 153912109,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507059700
    },
    {
        "content": "<p>and creating a graph of things like medication-substance relation, drug-food interaction, drug-diagnostic relations (both indications or contraindications)</p>",
        "id": 153912110,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507059781
    },
    {
        "content": "<p>that is the part in the catalog that provides additional contextual information (concrete definitions or more extended knowledge)</p>",
        "id": 153912112,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507059852
    },
    {
        "content": "<p>the rest of the catalog is just a curated list - well, actually composition but pretty close :-)</p>",
        "id": 153912113,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507059891
    },
    {
        "content": "<p>the use case I have at hand is treatment protocols.  if we want a catalog of treatment protocols for a simple disease, doesn't it start making more sense to start considering the indications or usage as a resource which exists on its own, instead of an attribute of another resource?</p>",
        "id": 153912118,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507060321
    },
    {
        "content": "<p>Catalogues can have different purposes and contain different types of information.  I'd expect cost information to be handled by a BillableItem type resource that includes the price, effective period, link to the associated resource and qualifying information - who the price applies to.  It could be passed in conjunction with resources in a variety of situations - including catalogue uses.  Similarly I'd expect a MedicationKnowledge resource to include information about ingredients, known side effects, links to recommended protocols.  A catalogue might include some combination of those resources.</p>",
        "id": 153912119,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1507060416
    },
    {
        "content": "<p>I don't understand your last sentence.  What do you mean by \"node in the graph, instead of an attribute\"?</p>",
        "id": 153912120,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1507060460
    },
    {
        "content": "<p>so far so good. agree.</p>",
        "id": 153912121,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507060477
    },
    {
        "content": "<p>ah sorry, had the wrong neuron activated.  the disease is a code value. So to express it  we use an attribute in the resources</p>",
        "id": 153912122,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507060545
    },
    {
        "content": "<p>the idea is that if it became a resource, then we could link to it using our \"graph\" construct.</p>",
        "id": 153912123,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507060587
    },
    {
        "content": "<p>difference between being an attribute of a resource (no lifecycle outside of it) and a resource.</p>",
        "id": 153912124,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507060634
    },
    {
        "content": "<p>Well, at some point we might have a resource for \"ConditionKnowlege\" too, but I expect the linkage will always be via the code.</p>",
        "id": 153912125,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1507060934
    },
    {
        "content": "<p>\"Similarly I'd expect a MedicationKnowledge resource to include information about ingredients, known side effects, links to recommended protocols. A catalogue might include some combination of those resources.\" - that is exactly what we want  - those things that you mention can either be attributes or links to other resources. Given the wealth of information expected, links would be more adequate</p>",
        "id": 153912126,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507060942
    },
    {
        "content": "<p>e.g. a link between a drug and a condition can be: indication or contraindication. A link between a drug and another can be interaction, any kind of combination...</p>",
        "id": 153912127,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507061037
    },
    {
        "content": "<p>Exploring all possibilities seems a long, path and would always need extensions since databases have different information supported.</p>",
        "id": 153912128,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507061086
    },
    {
        "content": "<p>so, we have a graph that can link things. This was meant for the catalog, but would be good to reuse for any other purpose where we have to convey additional information</p>",
        "id": 153912129,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507061161
    },
    {
        "content": "<p>the starting point for this was a treatment protocol linking to diseases or intended uses of that protocol . e.g. <a href=\"http://build.fhir.org/plandefinition-example-kdn5-simplified.json.html\" target=\"_blank\" title=\"http://build.fhir.org/plandefinition-example-kdn5-simplified.json.html\">http://build.fhir.org/plandefinition-example-kdn5-simplified.json.html</a></p>",
        "id": 153912130,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507061310
    },
    {
        "content": "<p>I would expect things like indications and contraindications to be explicit elements.  Conformance is much easier to manage that way than pushing things down into codes.  The set of relationships that are supported by most systems isn't going to be that large.  And edge cases can be handled using extensions as usual.</p>",
        "id": 153912134,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1507061565
    },
    {
        "content": "<p>That sounds very good. I think that indeed, relationships are not that big, and it is easier to maintain a code set of \"relationshipTypes\" in the graph (catalogEntry) than to make a new extension for each new relation in the resources.</p>",
        "id": 153912135,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507061661
    },
    {
        "content": "<p>We would rather have new extensions than a value set</p>",
        "id": 153912138,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1507061819
    },
    {
        "content": "<p>why?</p>",
        "id": 153912139,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507061836
    },
    {
        "content": "<p>Anyone can create their own extensions and it's easy to profile those.  Profiling value sets and maintaining a shared set of codes is much harder for the edge cases.</p>",
        "id": 153912140,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1507061854
    },
    {
        "content": "<p>With FHIR, we've got a built-in name-value pair mechanism with extensions</p>",
        "id": 153912141,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1507061887
    },
    {
        "content": "<p>So unless there are a lot of \"core\" relationship types, we tend to avoid using codes to disambiguate them.</p>",
        "id": 153912142,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1507061911
    },
    {
        "content": "<p>with that in mind, and if you see the catalogEntry as a \"wrapper\" to provide definitional and contextual information about a resource, would it help to rename CatalogEntry to e.g. entryDefinition?</p>",
        "id": 153912143,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507061919
    },
    {
        "content": "<p>ok, i was thinking of the code set for relation types: it can be a preferred binding, with some core values \"...contains, requires, interacts with, to be mixed with...\" - which is what i thought is better than having each of those in the resource</p>",
        "id": 153912144,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507062054
    },
    {
        "content": "<p>I'm not convinced we should have CatalogEntry at all.  In general, \"wrappers\" are something we tend to avoid in FHIR.</p>",
        "id": 153912145,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1507062060
    },
    {
        "content": "<p>i know. let's consider that as a scaffold or something that simply serves to show the requirements.</p>",
        "id": 153912146,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507062106
    },
    {
        "content": "<p>Contains would need to be an element as it would presumably want to indicate quantity, or possibily a \"does not contain\" attribute.  Interacts with would likely require an explaination of \"how\".  Etc.</p>",
        "id": 153912147,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1507062133
    },
    {
        "content": "<p>So leaning even further towards explicit elements.</p>",
        "id": 153912148,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1507062149
    },
    {
        "content": "<p>indeed,  catalog will eventually require these.</p>",
        "id": 153912149,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507062236
    },
    {
        "content": "<p>I don't feel comfortable with not having some sort of flexible mechanism for expressing relations and attributes (and attributes of relations indeed)</p>",
        "id": 153912150,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507062290
    },
    {
        "content": "<p>can't really pinpont to my discomfort but it hurts somewhere...</p>",
        "id": 153912151,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507062319
    },
    {
        "content": "<p>What's more flexible than extensions?</p>",
        "id": 153912152,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1507062390
    },
    {
        "content": "<p>i think it is about governing all that, making things predictable so that different implementers will not have opposed ideas on how to handle it. But i won't figure out the issue until I see a solution.</p>",
        "id": 153912153,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507062699
    },
    {
        "content": "<p>one question that could appear: what resources would we extend? is there a risk of overlap? Say you have a medicationResource, and PharmaceuticalProduct resource (if that is defined by BRR, to cover IDMP). where would you express \"this product contains this substance\"? Normally I would put this in the BRR resource for regulated products. Not sure how i would do it for other products.</p>",
        "id": 153912155,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507063017
    },
    {
        "content": "<p>Having it be codes doesn't help if implementers can create their own codes - which they'd need to be able to do.</p>",
        "id": 153912156,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1507063065
    },
    {
        "content": "<p>Medication already reflects containment.  I expect MedicationKnowledge will do so too, though probably at finer granularity.</p>",
        "id": 153912158,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1507063115
    },
    {
        "content": "<p>True - but if they have a previously populated list of codes, it is easier to see if something is there already. Possibly I think I have a working approach (the Catalog discussions reinforce my faith) but it's not easy to reconsider paradigm until a solution starts being visible even if fuzzy.</p>",
        "id": 153912159,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507063154
    },
    {
        "content": "<p>I do think the \"medicationKnowledge\" is a scope trap because of these aspects but that is not this discussion.</p>",
        "id": 153912160,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507063186
    },
    {
        "content": "<p>the contained substances are defined at the regulator side, and i believe in a peaceful coexistence between those resources. medication is clinical, so does not have to repeat the regulated information, right?</p>",
        "id": 153912162,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507063376
    },
    {
        "content": "<p>And someone said meat doesn't come from the butcher - meaning that this information is created and maintained at the regulator side.</p>",
        "id": 153912163,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507063410
    },
    {
        "content": "<p>Here's my summary: <br>\nI started by wondering whether we could eventually consider \"condition/indication/disease\" as a resource.<br>\nI agree that catalog it a list (with some curation information).<br>\nI propose that somewhere in that list we should support extra attributes and links - in the catalog itself, in the middle, or in the resources. Best not in the catalog, since these attributes and links can exist outside a catalog.<br>\nI think that the mechanism to express these attributes and links should aim at some predictability/consistency. My experience from designing this (in a past life, before I knew that there was this things called REST) is that people tend to see information in silos and ask the wrong questions, like \"who is the master of all the data\" and \"where is a simple list of everything\" - it really helps starting to think all of it is a graph. <br>\nPerhaps a resource like \"catalogEntry\" is not the final solution, but I think the \"definitional\" part can be either a) so generic it is consistent or b) so specific it is, well, specific. And I would prefer a).</p>",
        "id": 153912165,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507063564
    },
    {
        "content": "<p>My general leaning is that \"catalogue\" has no information in it that isn't purely about organization/presentation.  All of the \"knowledge\" would exist in other general-purpose resources that could be used in the catalogue context, but could be used other places too. <br>\nExtensions have predictability/consistency about what they look like.  But anyone can create them - and that's what we want.  FHIR is not a top-down thing.  If there's a need for top-down, that can be accomplished through IGs.<br>\nIf you like to think if things as a graph, that's fine - all information models can be visualized that way.  But in general we try to avoid vocabulary-driven name-value pairs.  That tends to conceal complexity and make conformance harder to manage.</p>",
        "id": 153912174,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1507064960
    },
    {
        "content": "<p>we'll eventually have to see how to handle context-sensitive and context-independent information.</p>",
        "id": 153912180,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507066668
    },
    {
        "content": "<p>medication that has a price for one department and another price for another department. It is still the same medication, right?</p>",
        "id": 153912181,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507066721
    },
    {
        "content": "<p>That's why I believe pricing should be handled with a separate resource.  There could be 10s or 100s of \"BillableItem\" instances all with the same medication code reflecting different prices for different contexts and time-periods.</p>",
        "id": 153912194,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1507072409
    },
    {
        "content": "<p>A catalogue would expose the subset of those relevant to the time-period and context that the catalogue was produced for.</p>",
        "id": 153912195,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1507072461
    },
    {
        "content": "<p>I think I see. So the fact that all these 100 billable items are catually the same product is defined by the medication code.. My thinking is that it would be one medication(/definition/knowledge) resource linked to billableItems</p>",
        "id": 153912244,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1507118102
    },
    {
        "content": "<p>The billing stuff and the knowledge stuff are somewhat orthogonal.  You might want to link directly from a MedicationPrescription to cost info (or Procedure.code to cost info).  Linking could be done by Reference, but I don't think that's how most systems behave.  Every system I've seen links knowledge, prices, protocols, etc. based on codes.</p>",
        "id": 153912272,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1507128546
    }
]