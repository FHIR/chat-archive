[
    {
        "content": "<p>Good Morning from Germany,<br>\nI got familiar with fhir for a student thesis. Its goal is to \"translate\" data -  generated from a medical data generator - from an existing medical data warehouse (dw) into a local fhir server instance as well as \"translating\" the dw's query language. While I did the former using a HAPI JPA Server, I checked the RESTful Search options to realize the latter. The original dw's query language main task ist to search for patients according to the onset of a &lt;Condition, Observation, Procedure etc.&gt;. <br>\nIf I understood correctly from the fhir search docu, this could be achieved with reverse chaining, as given in the docu:<br>\nGET [base]/Patient?_has:Observation:patient:code=8302-2 (for loinc body height)<br>\nThis is fine for all Ressources for which I only want to check the onset. For Observation unfortunately, I would also like to check for the respective value (e.g. height in cm). How could a query of this type be realized?<br>\nI would have thought that this is fine: <br>\nPatient?_has:Observation:patient:code=8302-2&amp;_has:Observation:patient:value-quantity=180.0|http://unitsofmeasure.org|cm <br>\nbut in the docu it states that \"_has parameter is processed independently of other _has parameters\", so it can't be the solution.<br>\nI am probably missing something since this simple functionality is surely not too hard to set up.<br>\nAny help would be greatly appreciated!<br>\nKind regards,<br>\nSebastian<br>\n(hoping to post this in the right forum -&gt; feel free to refer me to a different one if appropriate!)</p>",
        "id": 213746886,
        "sender_full_name": "Sebastian Lanz",
        "timestamp": 1603088445
    },
    {
        "content": "<p>You can use the code-value-quantity composite search parameter on Observation, but there's no way to combine reverse-chained parameters to work  except independently.  You'd have to look at _filter</p>",
        "id": 213795818,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603118601
    },
    {
        "content": "<p>Yes, it seems _filter is the right solution.<br>\nThank you a lot for your quick reply and have a good day!</p>",
        "id": 213888309,
        "sender_full_name": "Sebastian Lanz",
        "timestamp": 1603182556
    },
    {
        "content": "<p>Hello <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> ,</p>\n<p>About the _filter (the docu afaik is not very specific about it's actual capabilities). </p>\n<p>Let's say I want to get all Patients with:</p>\n<ul>\n<li>either: a Condition of code A and of code B </li>\n<li>or: an Observation of code C and value = 1</li>\n</ul>\n<p>Knowing that the request \"/Patient?_has:Condition:patient:code=A\" gets me all Patients with Condition of code A.<br>\nDoes the use of the _has parameter in a _filter query as used below get me the requested Patients? If not, how is it done?<br>\n/Patient?_filter=(_has:Condition:patient:code=A and _has:Condition:patient:code=B) or ( _has:Observation:patient:code=C and  _has:Observation:patient:code=1)</p>\n<p>Cheers,<br>\nSebastian</p>",
        "id": 214310799,
        "sender_full_name": "Sebastian Lanz",
        "timestamp": 1603458537
    },
    {
        "content": "<p>The first bit would be fine - because the conditions you're trying to match would be independent  However, for the second, you'd want the same observation - you don't want a match where one Observation has code C and a different Observation has value 1.  Your choices there are either to use the code-value-quantity search criteria to match on both at once, or to say _has:Condition:patient[code=C and value=1]</p>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>, I'm not totally clear whether the latter is legal?</p>",
        "id": 214348725,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603477399
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> ,<br>\ni'm not actually sure if the first bit would be considered independent, since I do want all patients with Condition A and(!) B both, not just Patients with A or Patients with B.<br>\nFrom testing on the <a href=\"http://test.fhir.org/r4\">test.fhir.org/r4</a> server I got the impression that even \"and\"-ing the _has-parameters in the _filter option just logically Or-s the search criteria -&gt; e.g. in the above example I would just get patients with Contition A or B.<br>\nMaybe there exists a server that supports the functionality i am describing.<br>\nIt does definitely not seem to keen of a requirement to me, at least I would (as a practitioner or else) expect from a Fhir server to be able to process above request (get all patients with condition A and B) - or am I missing something completely?<br>\nA comment from <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  maybe would clear this point (mentioned server does seem to be related to him).<br>\nCheers and thanks in advance,<br>\nSebastian</p>",
        "id": 215071660,
        "sender_full_name": "Sebastian Lanz",
        "timestamp": 1604050362
    },
    {
        "content": "<p>When you use _filter, you can specify filters at different levels, and you can use ands and ors and brackets within those levels.  _filter itself is not widely implemented, unfortunately.</p>",
        "id": 215118050,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1604075148
    },
    {
        "content": "<p>I think my server fully implements _filter and I think that you should be able to do what you need. what specific searches are you doing?</p>",
        "id": 215375785,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1604349730
    }
]