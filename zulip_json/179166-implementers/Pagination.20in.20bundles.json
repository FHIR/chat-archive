[
    {
        "content": "<p>Whenever we receive a bundle, there  is usually <code>first</code>, <code>previous</code>, <code>next</code> and <code>last</code> urls for navigating (as explained here: <a href=\"https://www.hl7.org/fhir/http.html#paging\" target=\"_blank\" title=\"https://www.hl7.org/fhir/http.html#paging\">https://www.hl7.org/fhir/http.html#paging</a> ).<br>\nEach server implementation have their own additional query parameters to indicate the pagination like <code>page</code>, <code>_skip</code> or <code>_getpagesoffset</code>.<br>\nAre there plans to have a standard way to do this? If we have <code>_count</code> we should have this one as well.</p>",
        "id": 153988544,
        "sender_full_name": "Jaime Olivares",
        "timestamp": 1534537476
    },
    {
        "content": "<p>no we have declined to standardise this because servers approach this so differently.</p>",
        "id": 153988550,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534537717
    },
    {
        "content": "<p>I really want to understand the rationale here: this is a standard defining a REST API. How it can depend on particular servers' approaches? If the standard norms to use <code>_skip</code> or <code>_page</code> then all implements MUST follow it. Just as all the other \"underscore\" search parameters.</p>\n<p>Anyway, let's say the pagination urls are opaque or at least semi-opaque. At least it should be stated to use pagination directives with underscore, for not confusing with regular search parameters. Does it make sense?</p>",
        "id": 153988555,
        "sender_full_name": "Jaime Olivares",
        "timestamp": 1534538060
    },
    {
        "content": "<p>why would that make sense? at what point would it matter?</p>",
        "id": 153988556,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534538775
    },
    {
        "content": "<p>Some architectures may find it very easy to skip to page 57 of 300.  Others might find that very challenging.  The functionality that's standardized is what we believe all servers, regardless of persistence architecture, can manage.</p>",
        "id": 153988557,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1534538863
    }
]