[
    {
        "content": "<p>I'm looking for others with experience using the FHIR JSON Schema for validating FHIR JSON instances.  Here's what I've found out so far:</p>\n<p>I found the FHIR JSON Shema ZIP file and was trying to use that with Newtonsoft’s JSchema validation library.   When I tried this, once I realized I needed to use their JSchemaUrlResolver API, I was able to validate a Patient resource against the <a href=\"http://HL7.org\" target=\"_blank\" title=\"http://HL7.org\">HL7.org</a> Patient.schema.json schema.   However, I tried to modify a “good Patient” JSON resource (file) to try to make the validation fail, but couldn’t!   I’m not convinced that the JSchema tool is really importing (or referencing) all the leaf-level JSON schemas referenced by the Patient.schema.json file.    </p>\n<p>Have any of you had any experience with this?   Any guidance you can give?</p>\n<p>BTW, there is an online JSchema tool that uses the Newtonsoft library, you can use that to test for pass/fail FHIR resources.   I tried this online with the FHIR Patient resource (had to remove the first $ref line though -- \"$ref\": \"#/definitions/Patient\") and I could not get it to fail on a ‘bad’ Patient JSON file.   Here’s the link to this:  <a href=\"http://www.jsonschemavalidator.net/\" target=\"_blank\" title=\"http://www.jsonschemavalidator.net/\">http://www.jsonschemavalidator.net/</a>   I tried renaming the identifier tag and other tags but couldn’t get it to fail the JSchema validator.</p>",
        "id": 153898077,
        "sender_full_name": "John Silva",
        "timestamp": 1500990697
    },
    {
        "content": "<p>I'm going to respond to this on the mailling list. btw, see <a href=\"http://wiki.hl7.org/index.php?title=FHIR_Rules_for_asking_questions\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=FHIR_Rules_for_asking_questions\">http://wiki.hl7.org/index.php?title=FHIR_Rules_for_asking_questions</a></p>",
        "id": 153898165,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501016880
    },
    {
        "content": "<p>Thanks Grahame!   (Didn't realize FHIR had so many places for discussions; I'm  used to the older HL7 listserv-only model, sorry to dup my question in multiple places; I didn't know where FHIR-folks 'hang out').</p>",
        "id": 153898365,
        "sender_full_name": "John Silva",
        "timestamp": 1501077256
    },
    {
        "content": "<p>More people hang out here I think, although there are slightly different communities in each place.  General rule is pick a place and wait a few days.  If there's no response, try somewhere else.</p>",
        "id": 153898367,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1501078475
    },
    {
        "content": "<p>Today I tried using the full fhir.schema.json file with JScema so that the JSON schema is all self-contained; using this method I was able to load the full FHIR JSON schema without any errors.   I was then able to validated a Patient JSON instance and it passed as expected.  However, I modified some of the tags on the Patient JSON instance, e.g. changed   \"identifier\"  to   \"identifierZ\" which I would have expected to cause the validation to fail but it still passed validation!   At this point I'm not sure if it is because the FHIR.schema.json is \"so wide open\" (for extensions) that virtually anything (that is legal JSON) would validate against it.   If you want to try this out use Newtonsoft's online JSON schema validator and cut-and-paste the full fhir.schema.json file into the schema window on the left, and something NOT FHIR on the right --- and it will still pass!   I used this nonsense JSON and it did validate:</p>\n<p>{<br>\n  \"gobbly-goop\": {<br>\n    \"street_address\": \"1st Street SE\",<br>\n    \"city\": \"Washington\",<br>\n    \"state\": \"DC\",<br>\n    \"type\": \"business\"<br>\n  }<br>\n}</p>",
        "id": 153898808,
        "sender_full_name": "John Silva",
        "timestamp": 1501169569
    },
    {
        "content": "<p>it shouldn't be because of extensions - any extension has the name extension, a url, and some kind of value. From a schema perspective, there's no extensibility there.</p>",
        "id": 153898851,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501187831
    },
    {
        "content": "<p>Grahame, were you able to try the fhir.schema.json and the sample (nonsense) JSON above on the <a href=\"http://www.jsonschemavalidator.net/\" target=\"_blank\" title=\"http://www.jsonschemavalidator.net/\">http://www.jsonschemavalidator.net/</a> page?   I don't understand how the \"nonsense JSON\" above could validate against the fhir.schema.json schema though?</p>",
        "id": 153899218,
        "sender_full_name": "John Silva",
        "timestamp": 1501251531
    },
    {
        "content": "<p>no I haven't had a chance</p>",
        "id": 153899351,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501278006
    },
    {
        "content": "<blockquote>\n<p>no I haven't had a chance</p>\n</blockquote>\n<p>It is Saturday morning, after all ... <img alt=\":simple_smile:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/unicode/1f642.png\" title=\":simple_smile:\"></p>",
        "id": 153899352,
        "sender_full_name": "Todd Cooper",
        "timestamp": 1501278108
    },
    {
        "content": "<p>I found this npm package which looks it does the work:<br>\n<a href=\"https://www.npmjs.com/package/fhir-validator\" target=\"_blank\" title=\"https://www.npmjs.com/package/fhir-validator\">https://www.npmjs.com/package/fhir-validator</a></p>\n<p>Does this considered to be an effective way by the community, other than the official .jar validator that is provided or HAPI FHIR parser?</p>",
        "id": 153899509,
        "sender_full_name": "Nikolaos Alexandros Kaloumenos",
        "timestamp": 1501334903
    },
    {
        "content": "<p>I'm not familiar with this validator, or it's author.</p>",
        "id": 153899539,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501363421
    },
    {
        "content": "<p>Yes, I posted it realizing soon after that it was already too late for Grahame to see.</p>\n<p>I'm getting the sense that not many (if any) folks are using the FHIR JSON schema; is that true?  Are folks validating FHIR JSON (at run-time) using other mechanisms?   Is this like in the XML world where systems only make sure that the syntax is correct (i.e. is valid XML) not that it matches the XML schema?</p>",
        "id": 153899543,
        "sender_full_name": "John Silva",
        "timestamp": 1501373055
    },
    {
        "content": "<p>Neither XML schema validation nor JSON schema validation give you full validation.</p>",
        "id": 153899555,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1501385721
    },
    {
        "content": "<p>some people are using one of the FHIR validators - they give a much more thorough check anyway</p>",
        "id": 153899560,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501388396
    },
    {
        "content": "<p>Lloyd, yes, I realize that XML or JSON schema can't do much, but when what is coming in is FHIR JSON, that's pretty much the only option. (this is starting to feel like HL7 V2.x conformance discussions ;-) )    I did find some page on the FHIR website where you (FHIR team) list the different levels of validation that can be done with each of the approaches so I understand that JSON schema can only do so much; but it's better than \"nothing\".  (of course this raises the question about the run-time performance impact of performing JSON schema [or any] validation in FHIR interchange handling.)</p>",
        "id": 153900210,
        "sender_full_name": "John Silva",
        "timestamp": 1501707679
    },
    {
        "content": "<p>it's no the only option - you can run a FHIR validator in line - there are options for java, C#, and win32/64 which covers most requirements</p>",
        "id": 153900219,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501708068
    },
    {
        "content": "<p>any updates on the JSON schema?</p>",
        "id": 153900220,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501708089
    },
    {
        "content": "<p>Grahame, just sent you 'regular email' on JSON schema; thanks.</p>",
        "id": 153900230,
        "sender_full_name": "John Silva",
        "timestamp": 1501709747
    },
    {
        "content": "<p>Hey guys,</p>\n<p>I found the current (DSTU3) JSON schemas on here <a href=\"https://www.hl7.org/fhir/downloads.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/downloads.html\">https://www.hl7.org/fhir/downloads.html</a>. However, I cant seem to find the DSTU2 equivalents. I want to do my own JSON schema validations at runtime, can someone point me in the right direction?</p>",
        "id": 153900888,
        "sender_full_name": "Cagdas Alcicek",
        "timestamp": 1502196862
    },
    {
        "content": "<p>As far as I remember, JSON schemas were introduce in STU3, so probably, these just don't exist in DSTU2.</p>",
        "id": 153900947,
        "sender_full_name": "Igor Sirkovich",
        "timestamp": 1502202894
    },
    {
        "content": "<p>Igor is correct.  No JSON schemas were defined in DSTU2.  (In part because the JSON schema spec was extremely immature at that point.  It's since turned out that the schema spec is still pretty immature in that the various tools that claim to support the JSON schema spec have varying behaviors and expectations.</p>",
        "id": 153901081,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1502244497
    },
    {
        "content": "<p>(HL7 encountered exactly the same issues when we were an early adopter of XML schema way back when we defined the HL7 v3 standard.)</p>",
        "id": 153901082,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1502244529
    }
]