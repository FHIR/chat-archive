[
    {
        "content": "<p>We are looking into the ServiceRequest resource. It is obviously a very generic resource for many types of \"requests\" and \"orders\", so we need to have a strategy for classifying them correctly. </p>\n<p>There are two attributes, ServiceRequest.category and ServiceRequest.code that seem to be relevant to use. </p>\n<p>Example use cases could be:</p>\n<ol>\n<li>Radiology referral for a CT Scan of the abdomen</li>\n<li>Laboratory order for a set of investigations such as creatinine, glucose, albumin, calcium, sodium...</li>\n<li>Request for a surgical procedure, specifically a full hip replacement with cement</li>\n<li>Request f to a patient to fill in a form prior to a surgery specifying their life style factors (smoking, alcohol...)</li>\n</ol>\n<p><strong>Question 1 - How should we use category?</strong><br>\nIs it correct to see ServiceRequest.category as the broader classification of the \"type\" or ServiceRequest. The examples seem to indicate that. The following examples map very well to our internal \"request types\". We need to map the ServiceRequest internally to our corresponding data models and internal APIs. For use cases above, would the following be correct for ServiceRequest.category?</p>\n<p>1) Imaging<br>\n2) Laboratory procedure<br>\n3) Surgical procedure<br>\n4) ??? (background for this question is that I asked our national Snomed CT affiliate for a concept for this use case)</p>\n<p><strong>Question 2 - How should we use code?</strong><br>\nIs it correct that ServiceRequest.code should be used for specifying explicitly what is requested? Looking at my use cases again...</p>\n<p>1) Computed tomography of abdomen (procedure) SCTID: 169070004<br>\n2) <br>\nCreatinine measurement, serum (procedure) SCTID: 113075003<br>\nGlucose measurement, serum (procedure) SCTID: 22569008<br>\nAlbumin measurement, serum (procedure) SCTID: 104485008<br>\nSerum calcium measurement (procedure) SCTID: 271240001<br>\nSodium measurement, serum (procedure) SCTID: 104934005<br>\n3) Total prosthetic replacement of hip joint using cement (procedure) SCTID: 265157000<br>\n4) ??? (concept requested from our Snomed CT affiliate corresponding to something similar to \"filling in life style factor questionnaire\")</p>\n<p><strong>Question 3 - How should we then use the cardinalities?</strong><br>\nIf ServiceRequest.category was correctly interpreted above, is it correct that is has 0..*? I dont think that makes sense as I suspect many will have a similar requirement like we have, they need to map a category to some internal data structure/entity, and it cant be more than one. </p>\n<p>On the other hand, ServiceRequest.code has 0..1, if we are expected to use code in the way I suggested above, that doesnt work as you often request multiple things to be done. How should this be handled? Should each investigation in the laboratory ServiceRequest have a child ServiceRequest for each individual investigation using  ServiceRequest.basedOn? Or how should we manage it?</p>\n<p>Thanks for any input! I think it is extremely important to have a common strategy for this when implementing ServiceRequest support, and ideally others would use the same strategy.</p>",
        "id": 188441164,
        "sender_full_name": "Martin Grundberg",
        "timestamp": 1582023533
    },
    {
        "content": "<p>There have been similar discussions in the SNOMED on FHIR project group on the category-code issue e.g. here <a href=\"https://confluence.ihtsdotools.org/display/FHIR/Free+SNOMED+CT+set+for+FHIR\" target=\"_blank\" title=\"https://confluence.ihtsdotools.org/display/FHIR/Free+SNOMED+CT+set+for+FHIR\">https://confluence.ihtsdotools.org/display/FHIR/Free+SNOMED+CT+set+for+FHIR</a><br>\nWe're happy to bring this up for ServiceRequest as we're currently working through the Procedure-CarePlan area now.</p>",
        "id": 188446088,
        "sender_full_name": "Daniel Karlsson",
        "timestamp": 1582028741
    },
    {
        "content": "<p>The 4th use case is unusual for ServiceRequest. It sounds like it is a Questionnaire, where the QuestionnaireResponse will contain the responses. I can see the point that such a Questionnaire can  be \"ordered\" by a provider, and hence the ServiceRequest, but the use case indicates that the Questionnaire is within the context of a surgical procedure.</p>",
        "id": 188449361,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1582031871
    },
    {
        "content": "<p>Multiple categories allow you to classify the order in different ways.  So you can do radiology vs. lab vs. surgery, but you can also do inpatient vs. outpatient or physician order vs. resident order or any number of other categorizations.</p>\n<p>If you're ordering multiple things, each one is a distinct Request - because each one might be suspended, resumed, cancelled, completed, etc. independently.  If you're actually in one of those rare situations where multiple activities are intrinsically linked and their states can't be manipulated independently, then set their <code>intent</code> to \"option\" and use the RequestGroup resource to manage the collection of them.</p>\n<p>Multiple things ordered at the same time <em>should</em> be able to be grouped using the groupIdentifier element as defined in the Request pattern.  However, it appears that ServiceRequest is missing this element.  I've submitted <a href=\"http://jira.hl7.org/browse/FHIR-26316\" target=\"_blank\" title=\"http://jira.hl7.org/browse/FHIR-26316\">FHIR#26316</a> to deal with this.  (<span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> do you know why this element is missing?)  In the interim, you may need to use an extension.</p>\n<p><code>basedOn</code> doesn't allow linking parent/child.  It's about a fulfillment chain.  E.g. lab filler order D is based on physician placer order C is being done based on care plan B which in turn was based on clinical decision support recommendation A.</p>",
        "id": 188457843,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582038158
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"192685\">Vassil Peytchev</span> <a href=\"#narrow/stream/179166-implementers/topic/ServiceRequest.20category.20and.20code/near/188449361\" title=\"#narrow/stream/179166-implementers/topic/ServiceRequest.20category.20and.20code/near/188449361\">said</a>:</p>\n<blockquote>\n<p>The 4th use case is unusual for ServiceRequest. It sounds like it is a Questionnaire, where the QuestionnaireResponse will contain the responses. I can see the point that such a Questionnaire can  be \"ordered\" by a provider, and hence the ServiceRequest, but the use case is indicates that the Questionnaire is within the context of a surgical procedure.</p>\n</blockquote>\n<p>There is even a standard extension on ServiceRequest for this use case: <a href=\"https://www.hl7.org/fhir/extension-servicerequest-questionnairerequest.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/extension-servicerequest-questionnairerequest.html\">https://www.hl7.org/fhir/extension-servicerequest-questionnairerequest.html</a></p>\n<p>To me it feels correct to use SR to request a questionnaire to be filled in.</p>",
        "id": 188461302,
        "sender_full_name": "Martin Grundberg",
        "timestamp": 1582040492
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179166-implementers/topic/ServiceRequest.20category.20and.20code/near/188457843\" title=\"#narrow/stream/179166-implementers/topic/ServiceRequest.20category.20and.20code/near/188457843\">said</a>:</p>\n<blockquote>\n<p>Multiple categories allow you to classify the order in different ways.  So you can do radiology vs. lab vs. surgery, but you can also do inpatient vs. outpatient or physician order vs. resident order or any number of other categorizations.</p>\n<p>If you're ordering multiple things, each one is a distinct Request - because each one might be suspended, resumed, cancelled, completed, etc. independently.  If you're actually in one of those rare situations where multiple activities are intrinsically linked and their states can't be manipulated independently, then set their <code>intent</code> to \"option\" and use the RequestGroup resource to manage the collection of them.</p>\n<p>Multiple things ordered at the same time <em>should</em> be able to be grouped using the groupIdentifier element as defined in the Request pattern.  However, it appears that ServiceRequest is missing this element.  I've submitted <a href=\"http://jira.hl7.org/browse/FHIR-26316\" target=\"_blank\" title=\"http://jira.hl7.org/browse/FHIR-26316\">FHIR#26316</a> to deal with this.  (<span class=\"user-mention silent\" data-user-id=\"191401\">Eric Haas</span> do you know why this element is missing?)  In the interim, you may need to use an extension.</p>\n<p><code>basedOn</code> doesn't allow linking parent/child.  It's about a fulfillment chain.  E.g. lab filler order D is based on physician placer order C is being done based on care plan B which in turn was based on clinical decision support recommendation A.</p>\n</blockquote>\n<p>That gave a lot of good input! </p>\n<p>Regarding the groupIdentifier, why is the data type an Identifier and not a Reference? Wouldnâ€™t that request also be resource of its own?</p>",
        "id": 188462729,
        "sender_full_name": "Martin Grundberg",
        "timestamp": 1582041467
    },
    {
        "content": "<p>There isn't a separate resource for the 'requisition' - there's no independent request with its own status.  When you take a lab order form and tick of 15 of the 50+ tests listed on the form, in FHIR that results in 15 independent ServiceRequests that all share a common groupIdentifier that indicates they were all ticked off at once on a single form.  There are no other resource instances created.</p>",
        "id": 188464174,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582042373
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197234\">Martin Grundberg</span> <a href=\"#narrow/stream/179166-implementers/topic/ServiceRequest.20category.20and.20code/near/188461302\" title=\"#narrow/stream/179166-implementers/topic/ServiceRequest.20category.20and.20code/near/188461302\">said</a>:</p>\n<blockquote>\n<p>There is even a standard extension on ServiceRequest for this use case: <a href=\"https://www.hl7.org/fhir/extension-servicerequest-questionnairerequest.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/extension-servicerequest-questionnairerequest.html\">https://www.hl7.org/fhir/extension-servicerequest-questionnairerequest.html</a></p>\n<p>To me it feels correct to use SR to request a questionnaire to be filled in.</p>\n</blockquote>\n<p>I wasn't aware of that extension. As long as you don't lose the context that the questionnaire is related to an upcoming surgery, then a ServiceRequest should work.</p>",
        "id": 188473075,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1582047661
    },
    {
        "content": "<p>see <a href=\"http://build.fhir.org/servicerequest-definitions.html#ServiceRequest.requisition\" target=\"_blank\" title=\"http://build.fhir.org/servicerequest-definitions.html#ServiceRequest.requisition\">http://build.fhir.org/servicerequest-definitions.html#ServiceRequest.requisition</a></p>",
        "id": 188474709,
        "sender_full_name": "Eric Haas",
        "timestamp": 1582048715
    },
    {
        "content": "<p>and the mapping here: <a href=\"http://build.fhir.org/servicerequest-mappings.html#workflow\" target=\"_blank\" title=\"http://build.fhir.org/servicerequest-mappings.html#workflow\">http://build.fhir.org/servicerequest-mappings.html#workflow</a></p>",
        "id": 188474881,
        "sender_full_name": "Eric Haas",
        "timestamp": 1582048814
    },
    {
        "content": "<p>been there since DiagnosticRequest</p>",
        "id": 188474926,
        "sender_full_name": "Eric Haas",
        "timestamp": 1582048854
    },
    {
        "content": "<p>Ah.  Missed because of the different name.  Perfect.  So no need for an extension.</p>",
        "id": 188474944,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582048872
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"197234\">@Martin Grundberg</span>! - What is the use case for the questionnaire request?<br>\nIn our eReferral use cases, we're sending a ServiceRequest with an accompanying (supportingInfo) QuestionnaireResponse... but for us, the request to fill in the Questionnaire in the first place doesn't seem to be something that needs to be governed by a workflow. </p>\n<p>Are your ServiceRequests inside an organization? or Inter-organization?</p>\n<p>Thanks!!</p>",
        "id": 188489511,
        "sender_full_name": "Geoff Ramsay",
        "timestamp": 1582058901
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"202753\">@Geoff Ramsay</span> <br>\nThe use case is mainly driven by patient questionnaires. There are various scenarios where you want a patient to fill in a questionnaire prior to an appointment of some sort. </p>\n<p>Here in Sweden we have a national patient portal to which healthcare organizations can request a patient to fill in a form. There is already today a Swedish proprietary way of posting this request for form completion. We (EHR vendors and national health IT infrastructure provider) are together looking into  how we could implement this use case using FHIR instead. A ServiceRequest with an associated questionnaire feels like the right way to go. We also need to know whether the questionnaire has been completed, so there is workflow involved.</p>\n<p>PROMs (Patient Recorded Outcome Measures) and lifestyle factor questionnaires are two important use cases. The former normally sent after eg a surgery, and the latter often prior to various appointments. </p>\n<p>I havenâ€™t thought much about whether there are use case between healthcare organizations/healthcare professionals for requesting questionnaire completion. Referrals is something else, and your approach sounds better. There the core service requested is not a form to be completed, but I guess instead the questionnaire acts as a template for the referrer to complete necessary information so the receiver can act accordingly.</p>",
        "id": 188520441,
        "sender_full_name": "Martin Grundberg",
        "timestamp": 1582096260
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179166-implementers/topic/ServiceRequest.20category.20and.20code/near/188464174\" title=\"#narrow/stream/179166-implementers/topic/ServiceRequest.20category.20and.20code/near/188464174\">said</a>:</p>\n<blockquote>\n<p>There isn't a separate resource for the 'requisition' - there's no independent request with its own status.  When you take a lab order form and tick of 15 of the 50+ tests listed on the form, in FHIR that results in 15 independent ServiceRequests that all share a common groupIdentifier that indicates they were all ticked off at once on a single form.  There are no other resource instances created.</p>\n</blockquote>\n<p>I must admit, I havent looked into this area too much in FHIR yet, so I might very well be wrong. But this sounds strange. I can see that you would need to keep track of the status of the requisition for multiple reasons. That is what is completed when all the individual tests are completed. You might get multiple results coming at various times. At some point the requisition is completed. This to me seems to also force business logic onto the client as they will need to aggregate all the individual ServiceRequests and interpret the status of the requisition. There would also be common information on the requisition level, like who authorized it/requester. </p>\n<p>Or is RequestGroup intended to be used for this use case?</p>",
        "id": 188526113,
        "sender_full_name": "Martin Grundberg",
        "timestamp": 1582102841
    },
    {
        "content": "<p>There isn't an overall authorization for the requisition that has more information than the individual pieces.  If you wished, you could search to see if all of the ServiceRequests for a particular requisition were complete.  RequestGroup is used when the individual parts can't have their status manipulated independently.  I.e. you can't suspend, abort or mark as 'complete' the individual pieces.  Instead, the status only exists on the collective.  E.g. You're administering a complex chemotherapy protocol where it's not appropriate/safe/effective to stop one part without stopping everything.</p>",
        "id": 188558472,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582128810
    },
    {
        "content": "<p>Every individual request has to hold all of the common information because each request has to be able to stand on its own - so the requester, date, reason, etc. will be specified on (or pointed to by) every lab test created from that one requisition form.</p>",
        "id": 188558553,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582128870
    }
]