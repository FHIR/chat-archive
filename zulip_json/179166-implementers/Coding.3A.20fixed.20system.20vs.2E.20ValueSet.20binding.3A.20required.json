[
    {
        "content": "<p>While working on some profiles with required ValueSets i started wondering what is the difference between setting the sytem to a fixed value and  using a ValueSet binding \"required\". The only difference in this context is the binding element with the binding strength, right?<br>\nIf i use a fixed system i end up also with a fixeCoding, but without explizit binding strength, but the meaning is the same.<br>\nWhat is the best practice in this use case? Fixed System or required binding?</p>",
        "id": 153929068,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1516108607
    },
    {
        "content": "<p>Fixed system only allows you to say \"all codes from this system\".  With value set bindings, you can be specific about a particular subset of relevant codes.  You can also draw codes from multiple code systems in those cases where one code system doesn't cover everything you need.  Finally, if you make the code system a fixed value and don't use slicing, you might accidentally prevent translations from being sent that convey codes from other code systems/value sets - and that's a problem for interoperability.  (In general, you always want to allow unrecognized codings to be sent alongside the coding you're looking for so that the system that's sending you data can create a single interface that satisfies the needs of your system as well as all other systems they need to talk to.)  Finally, using value sets allows you to create the definition once and then maintain it over time while referencing it from multiple profiles.  If you use fixed values and slicing, you'll need to update all referencing profiles if things change.</p>",
        "id": 153929114,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1516132382
    },
    {
        "content": "<p>thank you for the excellent explanation Lloyd.</p>",
        "id": 153929160,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1516145904
    }
]