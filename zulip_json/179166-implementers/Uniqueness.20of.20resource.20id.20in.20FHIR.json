[
    {
        "content": "<p>I would like to clarify -- do I understand correctly that for any given resource type, all resources of that type within a given FHIR-compliant EHR database will have a unique id?<br>\nTaking Condition as a concrete example: each Condition resource in Cerner's system must have a unique resource id; Condition id's are not necessarily guaranteed to be unique across different EHR's, but every other EHR system (e.g., Epic) should also have all of its Conditions with internally unique ids. Is that correct? Or can two Condition documents within the same EHR system have the same id?</p>",
        "id": 253815363,
        "sender_full_name": "Francesca Ricci-Tam",
        "timestamp": 1631917187
    },
    {
        "content": "<p>That's correct</p>",
        "id": 253818928,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1631919820
    },
    {
        "content": "<p>Technically speaking these IDs are unique within a given resource type within a given fhir server. Keep in mind that systems vendors like Cerner or Epic may have thousands of customers with different FHIR endpoints, and \"Patient/123\" will be referring to a different patient in every one of those.</p>",
        "id": 253831035,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1631931843
    },
    {
        "content": "<p>It's easiest to think about the full URL of a resource (e.g., <a href=\"https://server.example.org/fhir/Patient/123\">https://server.example.org/fhir/Patient/123</a>) to see why this is true.</p>",
        "id": 253831088,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1631931895
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191315\">Josh Mandel</span> <a href=\"#narrow/stream/179166-implementers/topic/Uniqueness.20of.20resource.20id.20in.20FHIR/near/253831088\">said</a>:</p>\n<blockquote>\n<p>It's easiest to think about the full URL of a resource (e.g., <a href=\"https://server.example.org/fhir/Patient/123\">https://server.example.org/fhir/Patient/123</a>) to see why this is true.</p>\n</blockquote>\n<p>thank you for the response, I do realize it is a task with having different end points. Would changing the location of data be a good resolution to this? My strategy of going about this was to bulk load data into a DB(eventually implementing EDA) after translating the data from Json to Json LD, and then querying the data from the DB in graphQL.</p>",
        "id": 254040180,
        "sender_full_name": "Christian Annel",
        "timestamp": 1632140491
    },
    {
        "content": "<p>It would seem, where there is a <strong>federation</strong> of FHIR servers, that the \"original author\" of a resource (ideally... the client that created it) should assign a GUID that is then faithfully persisted by the receiving server as the resource's id. In this way, content that is shared across the federation can be elegantly de-duped. I'm sure there is an intelligent role Provenance resources can play in this, too. As an example of why this could be important, collating content from a federation of FHIR servers into a patient-centric health summary document (e.g. IPS) is <em>very</em> difficult if id's are <em>not</em> globally unique. <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> <span class=\"user-mention\" data-user-id=\"192545\">@Alex Goel</span></p>",
        "id": 260251635,
        "sender_full_name": "Derek Ritz",
        "timestamp": 1636021773
    },
    {
        "content": "<p>the id is a unique identifier \"within the assigning authority\", which is the root url of the FHIR server. You can not, and must not, presume that the same id means the data are the same. You must have the same id and the same root url. -- True even if using GUID.</p>",
        "id": 260262721,
        "sender_full_name": "John Moehrke",
        "timestamp": 1636029173
    },
    {
        "content": "<p>somewhere in spec we mildly recommend the GUID approach, buy only mildly so; however you manage your information, you have to pay the piper one way or another when combining information from multiple sources</p>",
        "id": 260263904,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1636029846
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> <a href=\"#narrow/stream/179166-implementers/topic/Uniqueness.20of.20resource.20id.20in.20FHIR/near/260262721\">said</a>:</p>\n<blockquote>\n<p>the id is a unique identifier \"within the assigning authority\", which is the root url of the FHIR server. You can not, and must not, presume that the same id means the data are the same. You must have the same id and the same root url. -- <strong>True even if using GUID</strong>.</p>\n</blockquote>\n<p>I'm not trying to sound stoopid, but that <em>wouldn't</em> be true if it was really a GUID... would it? The goal of the approach I was describing was to avoid the proliferation of uniquely identified resources in cases where there is a federation of FHIR servers, and the same content may be found on multiple servers. There are use cases where this proliferation can become very problematic. Creating a globally unique id, once, and faithfully persisting it every time a resource is copied from one server to another, can fundamentally simplify workflows that otherwise can become intractably hard.</p>",
        "id": 260263915,
        "sender_full_name": "Derek Ritz",
        "timestamp": 1636029854
    },
    {
        "content": "<blockquote>\n<p>the same content may be found on multiple servers</p>\n</blockquote>\n<p>well, that's very often the case, but the information was acquired on channels that don't automatically trace identity (e.g. paper form, verbal, etc) and so it might be the same content but it won't have the same identifier. </p>\n<p>Sometimes you're in luck, and there is traceability, and it's reliable even in the face of institutional record keeping policies. And then, if all the ducks stand nicely in the row, the GUID approach really pays off. Bang - you can shoot all ducks with a single shot, and you get the prize</p>",
        "id": 260264119,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1636029991
    },
    {
        "content": "<p>in the absence of a GUID approach... someone's going to have a mapping table somewhere, and maintaining it is somwhat expensive. Only, in my experience, what's damned expensive is maintaining integrity in the face of institutional record \"correction\" policies, and then it turns out you need mapping tables anyway, even if everyone started with the same guid. </p>\n<p>oh the stories I can tell! (but anyone who's worked in a reasonably large health institution has their own stories)</p>",
        "id": 260264313,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1636030123
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179166-implementers/topic/Uniqueness.20of.20resource.20id.20in.20FHIR/near/260264119\">said</a>:</p>\n<blockquote>\n<p>Sometimes you're in luck, and there is traceability, and it's reliable even in the face of institutional record keeping policies. And then, if all the ducks stand nicely in the row, the GUID approach really pays off. Bang - you can shoot all ducks with a single shot, and you get the prize</p>\n</blockquote>\n<p>It's true... sometimes we get lucky. But if we're electronically sharing data, and we persist a golden thread (the GUID) when we do, then at least in that case we'll be able to elegantly get our ducks in a row. \"Luck favours the prepared\"... as they say. ;-)</p>",
        "id": 260264417,
        "sender_full_name": "Derek Ritz",
        "timestamp": 1636030200
    },
    {
        "content": "<p>And yes... horror stories abound! <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span>  I guess the trick is to start doing the things that will address the root causes.</p>",
        "id": 260264567,
        "sender_full_name": "Derek Ritz",
        "timestamp": 1636030291
    },
    {
        "content": "<p>GUID does not have absolute guarantee of never having two identical values ever created. Yes the chances are impossibly high, but they do exist. Within one FHIR server that chance is addressed by the create operation noticing that the GUID that it created happens to already exist in the database, so another GUID is created. Thus one can only be sure that GUID is unique within one FHIR server. (Note the FHIR server does need to have been created with good systems-design principles, one I just mentioned).</p>",
        "id": 260267117,
        "sender_full_name": "John Moehrke",
        "timestamp": 1636031542
    },
    {
        "content": "<p>assuming that GUIDs are always globally unique is a major patient safety risk.</p>",
        "id": 260267165,
        "sender_full_name": "John Moehrke",
        "timestamp": 1636031579
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> <a href=\"#narrow/stream/179166-implementers/topic/Uniqueness.20of.20resource.20id.20in.20FHIR/near/260267165\">said</a>:</p>\n<blockquote>\n<p>assuming that GUIDs are always globally unique is a major patient safety risk.</p>\n</blockquote>\n<p>\"You keep using that word [GUID]... I don't think it means what you think it means\". <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> <br>\n<a href=\"https://www.youtube.com/watch?v=dTRKCXC0JFg\">https://www.youtube.com/watch?v=dTRKCXC0JFg</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"dTRKCXC0JFg\" href=\"https://www.youtube.com/watch?v=dTRKCXC0JFg\"><img src=\"https://uploads.zulipusercontent.net/92c7750e99c727230386235a036e2972f8e48e26/68747470733a2f2f692e7974696d672e636f6d2f76692f6454524b435843304a46672f64656661756c742e6a7067\"></a></div>",
        "id": 260271197,
        "sender_full_name": "Derek Ritz",
        "timestamp": 1636033602
    },
    {
        "content": "<p><a href=\"https://datatracker.ietf.org/doc/html/rfc4122\">https://datatracker.ietf.org/doc/html/rfc4122</a></p>",
        "id": 260272341,
        "sender_full_name": "Derek Ritz",
        "timestamp": 1636034139
    },
    {
        "content": "<p>I like how you assume people are actually following the RFC instead of assigning them based on some internal policy</p>",
        "id": 260272601,
        "sender_full_name": "David Pyke",
        "timestamp": 1636034255
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193307\">@Derek Ritz</span> See third paragraph of \"Security Considerations\" - <a href=\"https://datatracker.ietf.org/doc/html/rfc4122#section-6\">https://datatracker.ietf.org/doc/html/rfc4122#section-6</a></p>",
        "id": 260275165,
        "sender_full_name": "John Moehrke",
        "timestamp": 1636035376
    },
    {
        "content": "<p>Sorry... but I don't believe I am making a rash assumption when I assume that GUID means <em>globally</em> unique ID. There is a mature standard for how these are to be created and this spec must be followed for the resulting artefacts to <strong>actually</strong> be considered GUIDs. RE: para-3 of sec-6... I'm sure that was good advice in 2005 (and it still is one way to go)... and I'm equally sure there are GUIDs being reliably generated all day, every day, all over.  The issue at hand is that there is a <strong>FHIR resource id proliferation problem</strong> in federated server environments, and GUIDs are one way to address this issue. I'm sure there are other ways, too...</p>",
        "id": 260298282,
        "sender_full_name": "Derek Ritz",
        "timestamp": 1636043986
    },
    {
        "content": "<p>If I recall correctly, even for good implementations, there is a 1 in 100 million chance of a collision with 100 million GUIDs. Unfortunately I can't find a reference for that right now.</p>\n<p>(Edit: <a href=\"https://en.wikipedia.org/wiki/Universally_unique_identifier#Collisions\">Wikipedia</a> suggests 1 in 1 billion for 100 trillion GUIDs.)</p>",
        "id": 260299150,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1636044296
    },
    {
        "content": "<p>It seems to me that this discussion has degenerated into trying to apply a business meaning to a purely technical element. Whether a resource id is globally unique or not, the moment a resource is instantiated on a different FHIR server it becomes a different instance. If there is a business need to establish that two instances of a resource contain information about the same business entity (same patient, same result, etc.), then you must use an identifier for that purpose. Anything else is fraught with risks.</p>\n<p>This is not to say that the issue of federated FHIR servers is not important or easy to solve - on the contrary. I am just pointing out that <a href=\"http://Resource.id\">Resource.id</a> is not the way to solve it.</p>",
        "id": 260301187,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1636044991
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"192685\">Vassil Peytchev</span> <a href=\"#narrow/stream/179166-implementers/topic/Uniqueness.20of.20resource.20id.20in.20FHIR/near/260301187\">said</a>:</p>\n<blockquote>\n<p>the moment a resource is instantiated on a different FHIR server it becomes a different instance.</p>\n</blockquote>\n<p>If it is a copy... is it not useful that this copy will have the same GUID as the \"original\"? So may things we need to do with FHIR resources are operationalized by referencing the id. Across a federation of FHIR servers, the very chatty process of searching and fetching by identifier... then by id (once the server-assigned <a href=\"http://patient.id\">patient.id</a> is known, for example)... seems ripe for being re-engineered. I live in hope for a better way...</p>",
        "id": 260305862,
        "sender_full_name": "Derek Ritz",
        "timestamp": 1636046854
    },
    {
        "content": "<p>no.<br>\nAs Vassil indicates the copy can/should/shall have a .identifier that holds the original resource .id and system. But that copy is a copy and takes on a life of its-own. Most copies should/shall/may never change, but they are still copies that have a life of their own.<br>\nalso, a Provenance is really good to have to show the derivation.</p>",
        "id": 260308272,
        "sender_full_name": "John Moehrke",
        "timestamp": 1636047894
    },
    {
        "content": "<p>There are some very important issues that need to be solved. The very <em>unhelpful behaviour</em> of a federation of FHIR servers -- that are all assigning different id's to the identical copies they may have of a single resource -- is one of these important issues. I fear that the idea of saving the original .id in an .identifier element will be a very poor performer, in practice (just too chatty... a simple sequence diagram of the traffic pattern illustrates this). Has anyone tried to address \"proliferation of duplicate resources across a federation of FHIR servers\" problem... and found a good solution?</p>",
        "id": 260687301,
        "sender_full_name": "Derek Ritz",
        "timestamp": 1636391378
    },
    {
        "content": "<p>Uniqueness of ids for identical copies of resources is, in my opinion, one of the minor challenges with federation of FHIR servers.</p>",
        "id": 260696297,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1636394959
    },
    {
        "content": "<p>There is no such thing as identical copies of resources in this case. If it is on a different server, it is not identical. it may be equivalent, but not identical (and then you have the identical identifier to establish the equivalence).</p>",
        "id": 260700388,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1636396852
    },
    {
        "content": "<p>It's equivalent to \"identical copies of the same information in different databases have distinct primary keys\" - which is something we've lived with for many decades and is generally not perceived to be a problem...</p>",
        "id": 261452252,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1636944999
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  -- this issue (and solution) we've had for decades is <strong>exactly</strong> what i'm trying to address, here. across a federation of multiple production databases... if the <strong>primary key</strong> of the record is the same, you can tell it's the same data record, and de-duping is simple (e.g. SELECT UNIQUE...). i think you're conflating rowid and primary key. across different databases, the rowid would be different... but the primary key would be the same. but... across a federation of FHIR servers... it seems our spec is to have each FHIR server use rowid as the primary key... and to figure out which ones are the same is left as an exercise for the reader.</p>",
        "id": 261788233,
        "sender_full_name": "Derek Ritz",
        "timestamp": 1637158085
    },
    {
        "content": "<p>In most databases, the primary key <em>is</em> the rowId.  The <a href=\"http://resource.id\">resource.id</a> definitely corresponds to rowId.  It's not supposed to be meaningful.  It's not intended for use as anything other than to allow linking between resources, in the same way that a relational database links to rows in other tables.</p>",
        "id": 261807870,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637165966
    },
    {
        "content": "<p>There's <em>zero</em> expectation that rowIds or <a href=\"http://resource.id\">resource.id</a> values would be the same on different systems unless they are synchromized databases</p>",
        "id": 261807984,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637166008
    },
    {
        "content": "<p>To bring back this from the other related thread:</p>\n<blockquote>\n<p>Across a federation of FHIR servers it can be important to know which resources are \"copies\" of the same underlying \"base\" resource.</p>\n</blockquote>\n<p>I don't think anyone is arguing against that. What the difference seems to be is that the way to achieve the above is for the federation to define a particular identifier system, and have the same identifier from this system be the primary key.</p>\n<p>In other words <code>GET &lt;FHIR base&gt;/Resource?identifier=&lt;federated system URI&gt;|2345</code> will give you the identical copy of the resource.</p>",
        "id": 261809124,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1637166446
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192685\">@Vassil Peytchev</span>  -- this sounds wonderful! I didn't realize there was a single-statement way to get <strong>all</strong> the health data about a particular care subject using the patient.identifier, alone. I was under the (mistaken) impression that, for each FHIR server in the federation, I had to get the <a href=\"http://patient.id\">patient.id</a> by querying using the patient.identifier... and then separately query for the health content associated with that <a href=\"http://patient.id\">patient.id</a> (by querying by .id, now that I have it). To confirm... I can get the whole person-centric health \"story\" without all that round-tripping? :-)</p>",
        "id": 261824698,
        "sender_full_name": "Derek Ritz",
        "timestamp": 1637172676
    },
    {
        "content": "<p>as long as the FHIR server supports this.... it is one of the features in fhir core... and like all features, none are mandatory.  An implementation guide can mandate it. I have seen some regions with national identifiers do this.</p>",
        "id": 261828378,
        "sender_full_name": "John Moehrke",
        "timestamp": 1637174214
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> we had a lot of challenges testing IPS at the EU IHE Connectathon... and they seemed to be related to this exact problem. Am I not remembering correctly what the issue was?</p>",
        "id": 261841764,
        "sender_full_name": "Derek Ritz",
        "timestamp": 1637179938
    },
    {
        "content": "<p>I was not involved. Would love to help</p>",
        "id": 261848458,
        "sender_full_name": "John Moehrke",
        "timestamp": 1637182879
    },
    {
        "content": "<blockquote>\n<p>I was under the (mistaken) impression that, for each FHIR server in the federation, I had to get the <a href=\"http://patient.id\">patient.id</a> by querying using the patient.identifier... and then separately query for the health content associated with that <a href=\"http://patient.id\">patient.id</a> (by querying by .id, now that I have it). To confirm... I can get the whole person-centric health \"story\" without all that round-tripping?</p>\n</blockquote>\n<p>you've conflated to things - searching by identifier, and multiple servers. But <span class=\"user-mention\" data-user-id=\"192685\">@Vassil Peytchev</span>'s example should be understood as a template, not an actual equivalent to the $everything which is what it sounds like your are thinking it is. But IPS is a much more bounded question. Although it really sounds like you are asking about IPA not IPS</p>",
        "id": 261869809,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637194525
    },
    {
        "content": "<p>A lot of EHRs require you to first undertake patient resolution (which will give you a <a href=\"http://Patient.id\">Patient.id</a>) and then get authorization and perform all other queries using <a href=\"http://Patient.id\">Patient.id</a>.  Cross-resource searching using Patient.identifier is often not supported (though it's completely legal).</p>\n<p>A search that <em>can</em> work across resources is <code>GET [base]?patient.identifier=&lt;someSystem&gt;|123</code>, but definitely not something you'll find widely supported.  (Note that that'll give you all patient-centric resources <em>except</em> the Patient.)</p>",
        "id": 261949544,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637252035
    },
    {
        "content": "<p>WRT to IPS requests - identifier is one of the input parameters to the nascent $summary operation.  I also believe that it will be one of the primary means of facilitating searching from patient-facing apps.</p>\n<p>In NZ, we have 30 years experience of using a national patient identifier (NHI) in EHR systems and HIE services. Based on that experience, I strongly recommend implementers here NOT to use it as the ID of a Patient Resource however convenient that may be for them in the short-term - for the same reasons that it is not a suitable candidate for a primary key in a relational database.</p>",
        "id": 262116620,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1637349857
    },
    {
        "content": "<p>Moreover <span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span>  - Anonymization/Deidentification is a common task for health data to support downstream research. If you are using a business identifier as <a href=\"http://Patient.id\">Patient.id</a> deidentification becomes extremely difficult.</p>",
        "id": 262134511,
        "sender_full_name": "Craig McClendon",
        "timestamp": 1637358473
    },
    {
        "content": "<p>I agree with <span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span>... the business identifier should <strong>not</strong> be the unique <a href=\"http://patient.id\">patient.id</a>. I wasn't contemplating that it would be. What I <strong>was</strong> contemplating was that a meaningless but unique ID for a resource... a GUID... would be consistent used across a federation of FHIR servers that all had copies of this resource. The obvious use case is for replicated patient resources... but I think it could apply for any other resource that is copied to multiple servers... couldn't it?</p>",
        "id": 262527954,
        "sender_full_name": "Derek Ritz",
        "timestamp": 1637709418
    },
    {
        "content": "<p>sure. you can use UUIDs for that. and the standard says you can and mentions that as a usecase.</p>",
        "id": 262531706,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637712343
    },
    {
        "content": "<p>Still, <code>http://server1/Resource/uuid1</code> and <code>http://server2/Resource/uuid1</code> need to be considered different instances of <em>Resource</em>, unless there is additional information to indicate that they are the same resource replicated.</p>\n<p>In general, I think that the information about replication of resources and federation of servers is better handled at lower level of the network stack. For the cases when this information has to bubble up to level 7, it fits best in canonical urls for canonical resources, and identifiers for the rest...</p>",
        "id": 262541210,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1637722586
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179166-implementers/topic/Uniqueness.20of.20resource.20id.20in.20FHIR/near/262531706\">said</a>:</p>\n<blockquote>\n<p>sure. you can use UUIDs for that. and the standard says you can and mentions that as a usecase.</p>\n</blockquote>\n<p>The dissonance in the discussion is not about UUIDs, but rather the element .id. As Vassil and I have said multiple times, a UUID as a .id on server1 can not be assumed/presumed/compelled to be the same resource .id on server2. <br>\nOne could put the server1 resource .id value into the instance copied onto server2 in that server2 instance .identifier element.</p>",
        "id": 262589052,
        "sender_full_name": "John Moehrke",
        "timestamp": 1637761109
    },
    {
        "content": "<p>Servers can coordinate to use the same <a href=\"http://resource.id\">resource.id</a> values for the same records - in much the same way as they can use the same database row ids to synchronize databases - and the use-cases are much the same.  It requires a controlled approach to identity management and pre-arrangement with the respective servers.  Completely possible where planned for and designed, but definitely <em>not</em> something that will be typical or happen automatically.</p>",
        "id": 262663555,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637811019
    },
    {
        "content": "<p>fyi <a href=\"https://www.ctl.io/developers/blog/post/server-generated-keys-unique-ids-for-distributed-databases\">https://www.ctl.io/developers/blog/post/server-generated-keys-unique-ids-for-distributed-databases</a></p>",
        "id": 262663747,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637811339
    }
]