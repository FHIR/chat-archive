[
    {
        "content": "<p>I have a question about handling IDs (&amp; Identifiers) with a /referralRequest. Consider the following scenario:</p>\n<p>SystemA sends a referralRequest to SystemB, with <a href=\"http://referralRequest.id\" target=\"_blank\" title=\"http://referralRequest.id\">referralRequest.id</a> = ABC<br>\nSystemB accepts the referralRequest, and assigns a new internal <a href=\"http://referralRequest.id\" target=\"_blank\" title=\"http://referralRequest.id\">referralRequest.id</a> = 123</p>\n<p>SystemB now updates the referralRequest.status = completed, and wants to update SystemA.</p>\n<p>To send the updated /referralRequest back to A, what value is used for <a href=\"http://referralRequest.id\" target=\"_blank\" title=\"http://referralRequest.id\">referralRequest.id</a> (ABC or 123?)? Does the .identifier field get involved at all?</p>",
        "id": 153895825,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1498823528
    },
    {
        "content": "<p>You should be using identifier, id is a logical, system specific id. </p>",
        "id": 153895827,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1498824983
    },
    {
        "content": "<p>So, <span class=\"user-mention\" data-user-id=\"194909\">@Kevin Mayfield</span> , does the following sound like generally the correct process:<br>\n1) SystemA send <a href=\"http://referralRrequest.id\" target=\"_blank\" title=\"http://referralRrequest.id\">referralRrequest.id</a> = ABC<br>\n2) SystemB sends back with <a href=\"http://referralRequest.id\" target=\"_blank\" title=\"http://referralRequest.id\">referralRequest.id</a> = 123, but adds in identifier.value = ABC?</p>\n<p>(with some more coding in the identifier.value field)</p>",
        "id": 153895828,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1498825896
    },
    {
        "content": "<p>or... 1) SystemA sends identifier.value as ABC.</p>",
        "id": 153895829,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1498826095
    },
    {
        "content": "<p>Ideally you would want all systems within an organisation to be referencing the Referrals by the same identifier. You could also say Organisation A will refer to it's Referrals by this 'identifier' e.g. ReferralRequest.idenitifer=https://sysA/ReferralID|ABC </p>",
        "id": 153895830,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1498826539
    },
    {
        "content": "<p>ABC could be the same as <a href=\"http://ReferralRequest.id\" target=\"_blank\" title=\"http://ReferralRequest.id\">ReferralRequest.id</a> but that's down to implementors</p>",
        "id": 153895831,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1498826579
    },
    {
        "content": "<p>System B should use the same identifier when talking to A, so ReferralRequest.idenitifer=https://sysA/ReferralID|ABC. System A wouldn't know System B's identifiers and likewise SystemB woudn't know System A <a href=\"http://ReferralRequest.id\" target=\"_blank\" title=\"http://ReferralRequest.id\">ReferralRequest.id</a>  unless it's search for it using the identifier.</p>",
        "id": 153895832,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1498826715
    },
    {
        "content": "<p>Ok, since we are talking about referrals, this is pretty much by definition across many organizations and systems. </p>\n<p>So it sounds like focusing on the .identifier for connecting info between the referring/receiving systems is the way to go.</p>",
        "id": 153895834,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1498827577
    },
    {
        "content": "<p>one way to handle this is for system B to use the same local id. </p>",
        "id": 153895836,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1498827695
    },
    {
        "content": "<p>if that's not possible - it often isn't - another way is for system B to remember that system a know it as ABC</p>",
        "id": 153895837,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1498827724
    },
    {
        "content": "<p>have you read <a href=\"http://hl7.org/fhir/managing.html\" target=\"_blank\" title=\"http://hl7.org/fhir/managing.html\">http://hl7.org/fhir/managing.html</a>?</p>",
        "id": 153895838,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1498827755
    },
    {
        "content": "<p>RE <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>'s comment: \"..another way is for system B to remember that system a know it as ABC\" <br>\nThat seems like the most correct and simplest solution to the problem. <br>\nIt's no different than if you were loading a patient or an appointment into your system from an external system. Sure, you may give the patient or appointment or other entity a unique identifier for local use, but it's just common sense that you would use the native, external identifier (not your synthetic, local identifier) whenever you communicated with the external source about that patient, appointment, etc.</p>",
        "id": 153895866,
        "sender_full_name": "Thomas Lukasik",
        "timestamp": 1498849185
    }
]