[
    {
        "content": "<p>The French community of vendors are currently working on a use case focused on scheduling through a third-party application:</p>\n<ul>\n<li>The third-party application is able to obtain the following scheduling business rules <br>\n       * (1) Initial load of the scheduling business rules (initial sharing of the rules)<br>\n                  One Schedule resource per Healthcare service associated within all the resources involved in this Shedule (Practitioner(s)/PractitionerRole, Location(s)/Device(s), etc.)<br>\n       * (2) Regular notifications from the FHIR Scheduler at each schedule changes.</li>\n</ul>\n<p>Once the third-party application is synchronized with the FHIR Scheduler, it controls the schedule information, can create/update/delete appointments and then send these appointments to the FHIR Scheduler.</p>\n<p>The French vendor community thinks that the Schedule resource, as it is specified in FHIR STU3.4.0, doesn’t seem appropriate to easily exchange the scheduling business rules for the following reasons:</p>\n<ul>\n<li>In some cases, the Schedule.planningHorizon may not be fulfilled (the Schedule can be covered by a very large period),</li>\n<li>\n<p>The slots associated to this Schedule can be fix-sized (1 minute, 5, 10, etc.) or be variable-sized,<br>\n                   (1mn: it means many slots).</p>\n</li>\n<li>\n<p>We need to specify that the availability time is recurrent (every Monday, Tuesday, Thursday from 8am to 12 am) and there is no possibility to specify this notion of recurrence at the level of the Schedule resource.</p>\n</li>\n</ul>\n<p>For all these reasons it seems that <strong>the number of slots to exchange is too huge.</strong></p>\n<p>That’s the reason why the French community considers profiling the Schedule resource in the following way:</p>\n<ul>\n<li>Add an extension busyType (definition of an availibity or unavailability Schedule)</li>\n<li>\n<p>Add an extension period (list of periods recurrent or not)<br>\n      * Rule (iCalendar format) [0..*]<br>\n       * Start<br>\n       * End</p>\n</li>\n<li>\n<p>Add an extension serviceDuration (specify the duration (in seconds) for the type of service)</p>\n</li>\n</ul>\n<p>I would appreciate your comments on this proposal.</p>",
        "id": 153970133,
        "sender_full_name": "Isabelle Gibaud",
        "timestamp": 1529076821
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span></p>",
        "id": 153970136,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1529079698
    },
    {
        "content": "<p>Take a look at the <a href=\"http://www.fhir.org/guides/argonaut/scheduling/\" target=\"_blank\" title=\"http://www.fhir.org/guides/argonaut/scheduling/\">Argonaut Scheduling id</a>.  This is something we discussed a lot but decided moved out of band for this version.</p>",
        "id": 153970138,
        "sender_full_name": "Eric Haas",
        "timestamp": 1529082430
    },
    {
        "content": "<p>@Eric, I've read the Argonaut Scheduling IG, thanks for the link, it's very interesting. When you say that you decided moved out of band for this, you mean that you know the issue but the Argonaut team has not solved it and at the moment we have no solution?</p>",
        "id": 153970155,
        "sender_full_name": "Isabelle Gibaud",
        "timestamp": 1529092059
    },
    {
        "content": "<p>Is not in scope and handled by some other means  ( for example sharing a spreadsheet, off line conversations)</p>",
        "id": 153970369,
        "sender_full_name": "Eric Haas",
        "timestamp": 1529358810
    },
    {
        "content": "<p>Sounds like a 'ScheduleDefinition' i.e. rules to generate schedule instances (which have explicit period); this is out of band for my implementation also at this stage but would like to think about it...<br>\nSchedule/Slot aligns with the direct usage search and display for simple stuff e.g demo at <a href=\"http://oridashi.com.au/site/scheduling.html\" target=\"_blank\" title=\"http://oridashi.com.au/site/scheduling.html\">http://oridashi.com.au/site/scheduling.html</a> but think synchronising calendar availability definitions is a different thing than Schedule/Slots sets out to achieve</p>",
        "id": 153970968,
        "sender_full_name": "Brett Esler",
        "timestamp": 1529589589
    },
    {
        "content": "<p>With the proposed variation you will need quite a lot more than you've got described there.</p>\n<ul>\n<li>Timezones (where the system services more than one timezone) - which then apply to your start/end</li>\n<li>exceptions to the general rule (including cancellations for every second thursday of a month due to some meeting)</li>\n<li>cancellations of specific slots</li>\n<li>what happens when slots are filled - they become unavailable - how is that represented with the schedule?<br>\nI do agree with your analysis that the number of slots is huge, this is true under any approach - even yours, once you consider the above factors, which always occur. Every slot is realized at some point, if it occurs or not - hence everything is eventually processed.<br>\nSo what you are pointing at as being large, is what actually occurs, even if you provide the recurring information.</li>\n</ul>\n<p>The extensions for busy type, little confused by this, is that to imply that the schedule is always available or not?<br>\nI would have thought that the busyType should be in the rule, as that could permit you to include exceptions, when it is available, and when it is not (exceptions), you would also want the recurrence information for the rule (and timezone - so that daylight savings can be calculated)</p>\n<p>Is this work that you're proposing documented somewhere? (I'd be happy to collaborate to do more of a write-up and review other issues you may encounter as you progress)</p>",
        "id": 153971414,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1529908430
    },
    {
        "content": "<p>These complications are the same reason why we chose to leave the recurrent definitions from the core appointment, and instead indicate that multiple appointment resources should be created when considering a recurring appointment (and is left outside the specification at this point)</p>",
        "id": 153971415,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1529908694
    }
]