[
    {
        "content": "<p>I'm looking at how decision data from artificial pancreas systems could be encoded using FHIR. Each one of the systems provides a different set of data regarding the decision that has been made, ranging from the device status at the point of the decision having been made (insulin reservoir status, battery status etc) to calculated insulin on board, the decision that was made (dose more / dose less / do nothing / alarm user) and data regarding the predictive mode estimates for how the blood glucose levels will behave in the near future. Looking at the R4 spec, this looks like a use case that's somewhat outside the scope of the current spec, where it could be argued the system is a <code>Device</code>, but possibly also a <code>Practitioner</code>? Another point of consideration is storing predictions, which is not covered by the current spec. Depending on system used, these status messages are produced 1-2 times / 5 minute interval (1 or 2 updates for each continuous glucose monitor data point), with future systems potentially producing 1 update / minute.</p>\n<p>The two use cases for storing the data would be both analysis of the decision data (so structured format is needed), but also potentially clinical use where a healthcare professional might want to access a visualization of the decision data along with separately stored blood glucose, insulin and carbohydrate consumption <code>Observation</code> and <code>MedicationAdministration</code> records. For the latter, it might be the easiest solution to store a textual description of the decision along with a generated image (so expert system visual generator is not needed at the moment of information display).</p>\n<p>Here's a sample output from one system, to give you an idea of the amount of information per update:</p>\n<div class=\"codehilite\"><pre><span></span>{\n    &quot;device&quot;: &quot;&lt;redacted&gt;&quot;,\n    &quot;openaps&quot;: {\n        &quot;iob&quot;: {\n            &quot;iob&quot;: 0.88,\n            &quot;activity&quot;: 0.0042,\n            &quot;basaliob&quot;: -0.179,\n            &quot;bolusiob&quot;: 1.059,\n            &quot;netbasalinsulin&quot;: -0.05,\n            &quot;bolusinsulin&quot;: 1.2,\n            &quot;iobWithZeroTemp&quot;: {\n                &quot;iob&quot;: 0.93,\n                &quot;activity&quot;: 0.0043,\n                &quot;basaliob&quot;: -0.129,\n                &quot;bolusiob&quot;: 1.059,\n                &quot;netbasalinsulin&quot;: 0,\n                &quot;bolusinsulin&quot;: 1.2,\n                &quot;time&quot;: &quot;2019-06-14T07:24:41.000Z&quot;\n            },\n            &quot;lastBolusTime&quot;: 1560494766000,\n            &quot;lastTemp&quot;: {\n                &quot;rate&quot;: 0.8,\n                &quot;timestamp&quot;: &quot;2019-06-14T10:12:13+03:00&quot;,\n                &quot;started_at&quot;: &quot;2019-06-14T10:12:13+03:00&quot;,\n                &quot;date&quot;: 1560496333000,\n                &quot;duration&quot;: 13.54\n            },\n            &quot;timestamp&quot;: &quot;2019-06-14T07:24:41.000Z&quot;\n        },\n        &quot;suggested&quot;: {\n            &quot;temp&quot;: &quot;absolute&quot;,\n            &quot;bg&quot;: 142,\n            &quot;tick&quot;: &quot;+13&quot;,\n            &quot;eventualBG&quot;: 140,\n            &quot;insulinReq&quot;: 0.13,\n            &quot;reservoir&quot;: &quot;13.8&quot;,\n            &quot;deliverAt&quot;: &quot;2019-06-14T07:24:50.208Z&quot;,\n            &quot;sensitivityRatio&quot;: 1.04,\n            &quot;predBGs&quot;: {\n                &quot;IOB&quot;: [142, 154, 164, 172, 179, 184, 188, 190, 191, 191, 189, 186, 182, 177, 173, 169, 165, 161, 157, 153, 150, 146, 143, 140, 136, 134, 131, 128, 125, 123, 120, 118, 116, 114, 112, 110, 109, 107, 105, 104, 103, 101, 100, 99, 98, 97, 96, 95],\n                &quot;ZT&quot;: [142, 138, 135, 131, 126, 122, 118, 114, 110, 106, 103, 99, 96, 93, 90, 88, 86, 84, 83, 82, 81, 80, 80, 80, 81, 81, 82, 83, 85, 86, 88, 90, 93],\n                &quot;COB&quot;: [142, 154, 164, 173, 181, 187, 192, 196, 199, 200, 200, 199, 197, 194, 190, 186, 182, 178, 174, 170, 167, 163, 160, 157, 154, 151, 148, 145, 142, 140, 138, 135, 133, 131, 129, 127, 126, 124, 122, 121, 120, 118, 117, 116, 115, 114, 113, 112],\n                &quot;UAM&quot;: [142, 154, 165, 175, 183, 190, 197, 202, 207, 210, 213, 214, 215, 215, 214, 212, 209, 206, 202, 198, 195, 191, 188, 185, 181, 178, 176, 173, 170, 168, 165, 163, 161, 159, 157, 155, 154, 152, 150, 149, 147, 146, 145, 144, 143, 142, 141, 140]\n            },\n            &quot;COB&quot;: 12,\n            &quot;IOB&quot;: 0.88,\n            &quot;reason&quot;: &quot;COB: 12, Dev: 5.5, BGI: -0.2, ISF: 9.1, CR: 17, Target: 5.2, minPredBG 6.4, minGuardBG 6.8, IOBpredBG 5.3, COBpredBG 6.2, UAMpredBG 7.8;  insulinReq 0.13. temp 0.8 &gt;~ req 0.725U/hr. &quot;,\n            &quot;timestamp&quot;: &quot;2019-06-14T07:24:50.000Z&quot;\n        },\n        &quot;enacted&quot;: {\n            &quot;insulinReq&quot;: 0.16,\n            &quot;received&quot;: true,\n            &quot;bg&quot;: 101,\n            &quot;reservoir&quot;: &quot;13.975&quot;,\n            &quot;temp&quot;: &quot;absolute&quot;,\n            &quot;rate&quot;: 0.8,\n            &quot;reason&quot;: &quot;COB: 17, Dev: 4.7, BGI: -0.1, ISF: 9.1, CR: 17, Target: 5.2, minPredBG 6.7, minGuardBG 6.2, IOBpredBG 2.4, COBpredBG 6.8, UAMpredBG 6.3;  insulinReq 0.16. no temp, setting 0.8U/hr. &quot;,\n            &quot;IOB&quot;: 0.878,\n            &quot;sensitivityRatio&quot;: 1.04,\n            &quot;COB&quot;: 17,\n            &quot;eventualBG&quot;: 123,\n            &quot;timestamp&quot;: &quot;2019-06-14T07:12:15.000Z&quot;,\n            &quot;duration&quot;: 30,\n            &quot;tick&quot;: &quot;+15&quot;,\n            &quot;deliverAt&quot;: &quot;2019-06-14T07:12:09.773Z&quot;\n        }\n    },\n    &quot;pump&quot;: {\n        &quot;clock&quot;: &quot;2019-06-14T10:24:41+03:00&quot;,\n        &quot;battery&quot;: {\n            &quot;status&quot;: &quot;normal&quot;,\n            &quot;voltage&quot;: 1.39\n        },\n        &quot;reservoir&quot;: 13.8,\n        &quot;status&quot;: {\n            &quot;status&quot;: &quot;normal&quot;,\n            &quot;bolusing&quot;: false,\n            &quot;suspended&quot;: false,\n            &quot;timestamp&quot;: &quot;2019-06-14T07:24:29.000Z&quot;\n        }\n    },\n    &quot;uploader&quot;: {\n        &quot;batteryVoltage&quot;: 4090,\n        &quot;battery&quot;: 91\n    },\n    &quot;created_at&quot;: &quot;2019-06-14T07:27:15.699Z&quot;,\n    &quot;utcOffset&quot;: 0\n}\n</pre></div>",
        "id": 168116583,
        "sender_full_name": "Sulka Haro",
        "timestamp": 1560500743
    },
    {
        "content": "<p>The system is definitely a <code>Device</code> and not a <code>Practitioner</code>.</p>\n<p>A <code>Practitioner</code> is a person (or rarely a service animal).</p>",
        "id": 168135154,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1560519254
    },
    {
        "content": "<blockquote>\n<p>A <code>Practitioner</code> is a person (or rarely a service animal).</p>\n</blockquote>\n<p>Is this the general guideline for all artificial intelligence that makes treatment decisions? ;)</p>",
        "id": 168135934,
        "sender_full_name": "Sulka Haro",
        "timestamp": 1560519865
    },
    {
        "content": "<p>Yes.  Devices can be software and can absolutely make decisions.  (Responsibility tends to cascade up the chain to the organization that made the software or that manages the device.)  All of the point-in-time measurements (statuses, blood sugar levels, etc.) would be Observations.  The decisions taken could be represented in a few different ways.  Alerts would be Communications.  Adjustments to dosing would be MedicationAdministrations (if you're actually changing the dose) or MedicationRequest (if you're specifying a target dose that something else will then need to execute).  In terms of forecasting, that's a really interesting question.  My leaning would be to use Observation - where the code clearly indicates that you're doing a forecast.  The alternative would be a modifier extension on Observation that indicates the Observation is a forecast.  The effectiveTime would be the date at which the anticipated result would be expected.  (And you could use components to capture confidence levels, etc.)</p>\n<p>You are correct that this isn't a use-case we've tried to handle before (or at least not one I've seen brought up here), so feel free to push back if things don't seem like they're working quite right.</p>",
        "id": 168141314,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560523669
    },
    {
        "content": "<p>I would expect the effectiveTIme to be the time that the prediction is being made, and then you'd have one of the components carry the time that you're predicting for.<br>\nPerhaps there is also a need for LOINC codes to cover predicted BGLs (including the specific algorithm?) <span class=\"user-mention\" data-user-id=\"191978\">@Daniel Vreeman</span></p>",
        "id": 168150294,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1560529769
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192917\">@Mikael Rinnetm√§ki</span> I think you've already done all this</p>",
        "id": 168173554,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560548156
    },
    {
        "content": "<p>Thanks for the ping <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>. No, I haven't yet done this in that detailed level. In fact, we're doing this together with <span class=\"user-mention\" data-user-id=\"199600\">@Sulka Haro</span> . We have the easy parts, like each measurement from a Continuous Glucose Monitor is an Observation, and each dosing is a MedicationStatement (when we get the data from the pump).</p>\n<p>Thanks for input <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>. The dosing decision from the APS algorithm should in fact be a MedicationStatement (or a MedicationRequest?), hadn't thought of that. The pump then details in MedicationStatement what was actually delivered. And forecasts being Observations, that's an interesting thought too.</p>\n<p>In my view, most of the data in Sulka's example are DeviceMetric stuff.</p>",
        "id": 168192067,
        "sender_full_name": "Mikael Rinnetm√§ki",
        "timestamp": 1560575367
    },
    {
        "content": "<blockquote>\n<p>it might be the easiest solution to store a textual description of the decision along with a generated image (so expert system visual generator is not needed at the moment of information display).</p>\n</blockquote>\n<p>I would definitely not store an image with each decision (around 288 pieces per day). I'd expect an expert system to be present when a Practitioner is inspecting the data at this level.</p>",
        "id": 168192189,
        "sender_full_name": "Mikael Rinnetm√§ki",
        "timestamp": 1560575525
    },
    {
        "content": "<p>DeviceMetric could also hold the forecasts - it is after all something that a device is producing.<br>\nDosing decision should be medicationRequest. Actual administration, if for each administration, should not be a MedicationStatement but a MedicationAdministration.</p>",
        "id": 168197238,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1560584755
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> the effective Time is when the Observation holds true.  There's a different element for when the assertion was made.</p>",
        "id": 168207839,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560605322
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192917\">@Mikael Rinnetm√§ki</span> MedicationStatement is generally a summary of what's happened.  If we were tracking an iv, every adjustment would be a Medication Administration.  I don't see why this would be any different.</p>",
        "id": 168207910,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560605482
    },
    {
        "content": "<p>My mistake, we do use MedicationAdministration.</p>",
        "id": 168208526,
        "sender_full_name": "Mikael Rinnetm√§ki",
        "timestamp": 1560606588
    },
    {
        "content": "<p>For what the pump did administer.</p>",
        "id": 168208582,
        "sender_full_name": "Mikael Rinnetm√§ki",
        "timestamp": 1560606655
    },
    {
        "content": "<p>ok thanks. this is a good and interesting question. I will ask on the OO topic what the intention is for calibration data and device data associated with an observation</p>",
        "id": 168219331,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560625362
    },
    {
        "content": "<p><a href=\"#narrow/stream/179256-Orders-and.20Observation.20WG/topic/Device.20and.20Calibration.20Data\" title=\"#narrow/stream/179256-Orders-and.20Observation.20WG/topic/Device.20and.20Calibration.20Data\">https://chat.fhir.org/#narrow/stream/179256-Orders-and.20Observation.20WG/topic/Device.20and.20Calibration.20Data</a></p>",
        "id": 168219462,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560625605
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> Do you mean <code>issued</code>.  That didn't seem right to me; it seems to encode time of receipt of the <code>Observation</code>, not time of making the <code>Observation</code>. </p>\n<p>I do see this as being when the <code>Observation</code> holds true, but in this case the thing that hold true is *not * an actual BGL but a predicted BGL.</p>\n<p>I'm seeing it as there is a point in time <code>T</code> where the algorithm makes multiple predictions, for a series of future time points <code>T+i</code>, about future BGLs. This would result in a set <code>Observations</code>, each with the same <code>effectiveTime</code> but different times in the component.  <code>issued</code> would be used for when these predictions arrive in the end system (e.g., Nightscout), which might be delayed as the physical device running the algorithm (e.g., an OpenAPS rig) may be offline while this is happening.</p>",
        "id": 168227279,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1560641552
    },
    {
        "content": "<p>Issued is the time the Observation is made.  EffectiveTime is when it's deemed to hold true.  Typically Observation . issued is the same as or earlier than the EffectiveTime.  For example with blood tests the effectiveTime is when the blood is drawn.  Issued might be several days later after a culture is done.  Observation doesn't track when it's received.  (The same instance might be received by different systems at different times.)</p>",
        "id": 168274738,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560732412
    },
    {
        "content": "<p>In this case issued would be when the predictions are made and effectiveTime would be when the value is predicted.  We wouldn't track when a given system received the prediction except through lastUpdated, Provenance or AuditEvent. <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span></p>",
        "id": 168274846,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560732625
    },
    {
        "content": "<p>Okay, that seems to capture the requirements of representing the two key time points. I was over-interpreting \"time this version of the observation was made available to providers\" as the receipt time, not the issuance time.</p>",
        "id": 168299538,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1560768540
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> feel free to submit a change request to better clarify</p>",
        "id": 168316309,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560782670
    },
    {
        "content": "<p>I think the definition is simple concise and clear any more words will risk making it murkier</p>",
        "id": 168319213,
        "sender_full_name": "Eric Haas",
        "timestamp": 1560784647
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> Evidently it's not sufficiently clear or Michael wouldn't have been confused.  It doesn't make sense to down-vote the notion of proposing a clarification.  If you don't like the proposed clarification, you can challenge that.  But certainly there's room here to improve the definition to be clear that we're capturing when the Observation is 'made', not when it happens to be received by a given system.</p>",
        "id": 168322461,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560786809
    },
    {
        "content": "<p>It was the \"made available to providers\" part that confused me.  If it had just said \"time this version of the observation was made\" then I would (probably) not have been confused.  This is simple, concise, and fewer words <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> but I'm not sure if it actually makes it clearer for all.</p>",
        "id": 168359355,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1560817432
    },
    {
        "content": "<p>I think the problem OO is facing is that the determination is made at one point (often by a machine), but the finding is 'released' at a different point - generally when the results are signed off.  In some cases, those could be a day or more apart.  No action can be taken on the Observation until it's actually released (both because generally no one sees it, but also because it could be totally wrong.)  So a proposal for revised wording would need to keep that nuance - while making clear that it's the time released by the observer, not the time received by any arbitrary server (which in some cases could be months or years after the measurement was made).</p>",
        "id": 168364427,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560825594
    }
]