[
    {
        "content": "<p>Does anyone think it's a bad practice for a servers to treat \"Accept: application/json\" (i.e. Missing the \"+fhir\" of the official content type) as a way for a client to ask for JSON data? </p>",
        "id": 153822974,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1461602702
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> I donâ€™t see a problem with a server accepting this. </p>",
        "id": 153822979,
        "sender_full_name": "Peter Bernhardt",
        "timestamp": 1461609042
    },
    {
        "content": "<p>I accept it </p>",
        "id": 153822985,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461611245
    },
    {
        "content": "<p>I think it would be good if the test servers spit out an operation outcome warning</p>",
        "id": 153823006,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1461615572
    },
    {
        "content": "<p>I like it because postman has a dropdown for application/json and doesn't for application/json+fhir</p>",
        "id": 153823015,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1461622704
    },
    {
        "content": "<p>Agreed, it seems like a nice convenience and it is something that I recommend to implementers that they support. Just making sure my thinking was not out of line with the rest of the community :-)</p>",
        "id": 153823017,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1461624116
    },
    {
        "content": "<p>HAPI accepts this too..</p>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> The only problem with that is that most of the places you would use the <code>Accept:</code> header are things that return a resource (or a bundle) so there's nowhere to put that warning. </p>",
        "id": 153823024,
        "sender_full_name": "James Agnew",
        "timestamp": 1461632630
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> Is there any other way to warn implementers that they're \"doing it wrong\"?</p>",
        "id": 153823034,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1461634605
    },
    {
        "content": "<p>I guess a custom header would be the obvious spot. Something like the following would be easy:<br>\n<code>X-Warning: Content-Type for JSON FHIR content should be application/json+fhir</code></p>",
        "id": 153823036,
        "sender_full_name": "James Agnew",
        "timestamp": 1461634678
    },
    {
        "content": "<p>Certainly better than nothing :)</p>",
        "id": 153823039,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1461635140
    },
    {
        "content": "<p>I don't see a need to be honest, seems only to be a pedantic thing - there's no sideeffect that it actually warns against</p>",
        "id": 153823062,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1461639769
    },
    {
        "content": "<p>The side effect is that if you do this in testing and it works, that's no guarantee that it will work against real systems in production.  We're trying to make our test servers a bit tighter so that client systems evolve to be more compliant</p>",
        "id": 153823109,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1461679220
    },
    {
        "content": "<p>The classic dilemma: I'm being lenient in what I accept, and precise in what I return. So, for example, I do accept _format=json as a parameter, although I probably shouldn't. But demoing a GET is much easier that way.  Then again: stimulating correct behaviour by giving developers an early hint they are not doing it *exactly* right, might be a goal for the test servers.... It's going to be a balance. E.g. the discussion we're having about accepting non-xml entities is a good example of what the server probably should NOT accept.</p>",
        "id": 153823133,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1461680675
    }
]