[
    {
        "content": "<p>The following signed document has a valid signature:</p>",
        "id": 153927198,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514502218
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/qxfj2nNkAbf3h4yXtGvfvviS/signed.xml\" target=\"_blank\" title=\"signed.xml\">signed.xml</a></p>",
        "id": 153927199,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514502228
    },
    {
        "content": "<p>but it's not a valid FHIR instance:</p>",
        "id": 153927200,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514502241
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>  <span class=\"nt\">&lt;signature&gt;</span>\n    <span class=\"nt\">&lt;type&gt;</span>\n      <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;urn:iso-astm:E1762-95:2013&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;1.2.840.10065.1.12.1.1&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/type&gt;</span>\n    <span class=\"nt\">&lt;when</span> <span class=\"na\">value=</span><span class=\"s\">&quot;2017-12-28T23:02:41Z&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;whoReference&gt;</span>\n      <span class=\"nt\">&lt;reference</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Practitioner/example&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/whoReference&gt;</span>\n    <span class=\"nt\">&lt;targetFormat</span> <span class=\"na\">value=</span><span class=\"s\">&quot;application/fhir+xml&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;sigFormat</span> <span class=\"na\">value=</span><span class=\"s\">&quot;application/signature+xml&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;Signature</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://www.w3.org/2000/09/xmldsig#&quot;</span><span class=\"nt\">&gt;&lt;SignedInfo&gt;&lt;CanonicalizationMethod</span> <span class=\"na\">Algorithm=</span><span class=\"s\">&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;</span><span class=\"nt\">/&gt;&lt;SignatureMethod</span> <span class=\"na\">Algorithm=</span><span class=\"s\">&quot;http://www.w3.org/2000/09/xmldsig#rsa-sha1&quot;</span><span class=\"nt\">/&gt;&lt;Reference</span> <span class=\"na\">URI=</span><span class=\"s\">&quot;&quot;</span><span class=\"nt\">&gt;&lt;Transforms&gt;&lt;Transform</span> <span class=\"na\">Algorithm=</span><span class=\"s\">&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;</span><span class=\"nt\">/&gt;&lt;/Transforms&gt;&lt;DigestMethod</span> <span class=\"na\">Algorithm=</span><span class=\"s\">&quot;http://www.w3.org/2000/09/xmldsig#sha1&quot;</span><span class=\"nt\">/&gt;&lt;DigestValue&gt;</span>hE70IWsShlfQtc+HaiWAsl+0fkI=<span class=\"nt\">&lt;/DigestValue&gt;&lt;/Reference&gt;&lt;/SignedInfo&gt;&lt;SignatureValue&gt;</span>IQY6hk/xtFKokFfqIKHnZnliCE1FF1bVNKqWkSI3uTYh55AqhjMCkyxaOJBu4vVclemB5TRFUAyEnxrNTYdm7hR6o7PdIJ5EO9ZuO9RSzgNkDOIfMYdPQjnECTJcN7XIuZroeviFstzR/iIECVUmTLJw0m0ddXGey8/DSLIYjgzpcZqIcVlkOs+NjqbeXJWKC260sLPwXMOyiNvfMdhLl7P424P+KHPuVUUOXTJ5jjdummJqxBVMnS/g1R+8tG9KcPG78BTbFm3m3XxBsmzJuOEw8TMiefSDZktmeQkNTGGYiVqJPTWZAlPuJFG7WZkUfWFOx76Fn+tCr9qDtWq/OA==<span class=\"nt\">&lt;/SignatureValue&gt;&lt;KeyInfo&gt;&lt;KeyValue&gt;&lt;RSAKeyValue&gt;&lt;Modulus&gt;</span>m475SJi0ndOkUWBDK9HeUPJLo5ujSiTaO23N6DrNHMR0wGzbMNTaslVKUKKF+wR1JBwoGvGLwsol0vrctR+tz/z5JbetCjOwFqh1R6ElJL7/T2sPLo1gRxpXmTAJ+kWbenQX9Z8Mr8teijGPwQ0MvQWlesl0S0ZJm4W54XVwFPsvbUaohKyCx6yBT1SyTcMHnDJve9AT/k30Gu/euxMLMQE814rSWnoyVy8p5Dt4AgTWKEgU4y2Efr8yZRlx6Fhttbt6g/lGWretlKuA46MJv3HyssYw7daTHKoHCIcaU/bhJ237pFguQg6v/Zn6U7hTHwW3lWXVXyEZCsaZtflPGw==<span class=\"nt\">&lt;/Modulus&gt;&lt;Exponent&gt;</span>AQAB<span class=\"nt\">&lt;/Exponent&gt;&lt;/RSAKeyValue&gt;&lt;/KeyValue&gt;&lt;/KeyInfo&gt;&lt;/Signature&gt;&lt;/signature&gt;</span>\n</pre></div>",
        "id": 153927201,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514502256
    },
    {
        "content": "<p>problem is that the signature needs to be put in a blob... but then it's not an enveloped signature... so I'm not sure what it should look like?</p>",
        "id": 153927202,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514502290
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191407\">@Rick Geimer</span> <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span></p>",
        "id": 153927203,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514502295
    },
    {
        "content": "<p>Grahame, what are you trying to show?</p>",
        "id": 153927205,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514507423
    },
    {
        "content": "<p>The blob is the base64 of the xml signature. Not what you have.</p>",
        "id": 153927206,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514507461
    },
    {
        "content": "<p>right. So what should the signature in the blob look like. is reference=\"\" still valid?</p>",
        "id": 153927207,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514507504
    },
    {
        "content": "<p>sorry. i don't understand your question.</p>",
        "id": 153927208,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514507534
    },
    {
        "content": "<p>An enveloped signature is added to an XML document, like above. It has &lt;Reference URI=\"\"&gt; - to indicate that what is signed is the XML document that contains the signature, and it is removed before verifying the signature.</p>",
        "id": 153927209,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514507604
    },
    {
        "content": "<p>I do not see that it is possible to have an enveloped signature in a Bundle - yet it must be because it is inside the bundle</p>",
        "id": 153927210,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514507633
    },
    {
        "content": "<p>An enveloped signature?</p>",
        "id": 153927211,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514507634
    },
    {
        "content": "<p>yes. that's what we're talking about</p>",
        "id": 153927212,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514507651
    },
    {
        "content": "<p>so Bundle.signature</p>",
        "id": 153927213,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514507659
    },
    {
        "content": "<p>.. yes, that's what I'm asking about.</p>",
        "id": 153927214,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514507678
    },
    {
        "content": "<p>Yes you have indeed happened upon a problem that who ever added signature to Bundle didn't address. I was not aware</p>",
        "id": 153927215,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514507695
    },
    {
        "content": "<p>not aware that Bundle contains a signature..?</p>",
        "id": 153927216,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514507726
    },
    {
        "content": "<p>for encapsulated signatures, typically the xml-signature would have an xpath exception for the place where the signature is going to be stored.</p>",
        "id": 153927217,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514507733
    },
    {
        "content": "<p>what does that look like?</p>",
        "id": 153927218,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514507772
    },
    {
        "content": "<p>that is what CDA did with the encapsulated xml-signature</p>",
        "id": 153927219,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514507802
    },
    {
        "content": "<p>encapsulated signatures are trouble... not just because of this. But because of this need to exclude from the signature a region where the signature will go.... bad-guys simply put what they want inside that exception area</p>",
        "id": 153927220,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514507818
    },
    {
        "content": "<p>what's a good reference for the CDA encapsulated signature? I can't find good information about \" the xml-signature would have an xpath exception\"?</p>",
        "id": 153927222,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514508032
    },
    {
        "content": "<p><a href=\"http://www.hl7.org/implement/standards/product_brief.cfm?product_id=375\" target=\"_blank\" title=\"http://www.hl7.org/implement/standards/product_brief.cfm?product_id=375\">http://www.hl7.org/implement/standards/product_brief.cfm?product_id=375</a></p>",
        "id": 153927223,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514508103
    },
    {
        "content": "<p>hmmm, I expected that was  a bit more instructive</p>",
        "id": 153927224,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514508361
    },
    {
        "content": "<p>it doesn't help. For a start, the example is not legal (not even any namespace)</p>",
        "id": 153927225,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514508830
    },
    {
        "content": "<p>So, all of the actual uses that I have worked with are signatures by reference. Like what we did in Provenance, or IHE DSG. Where the signature is not contained within the hash space. I only know of the theory, don't have a good example. For an encapsulated signature you need to exclude from the hashed space the slot where you are putting the blob.</p>",
        "id": 153927226,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514508849
    },
    {
        "content": "<p>now that I've read the text of that document, I'm getting more unhappy. The examples have \"&lt;ds:CanonicalizationMethod Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\"/&gt;\" - but this is a lie, because: </p>\n<p>A digest is the result of a mathematical algorithm that takes all of the bits of the thing to be signed (in this case, the CDA document excluding the legalAuthenticator and authenticator tags in the CDA header)</p>",
        "id": 153927227,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514509087
    },
    {
        "content": "<p>It's also hard to believe that the signature ignores the authenticator information - that information that binds between the signature and the thing being signed.... surely that smells badly?</p>",
        "id": 153927228,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514509140
    },
    {
        "content": "<p>how does IHE DSG work with CDA documents?</p>",
        "id": 153927229,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514509160
    },
    {
        "content": "<p>yeah, I do remember I put in a bunch of negative comments... That is what resulted</p>",
        "id": 153927230,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514509297
    },
    {
        "content": "<p>DSG just makes a XML-Signature blob (as a document) of a signed document (by reference)</p>",
        "id": 153927231,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514509325
    },
    {
        "content": "<p>thus there is no need to exclude anything</p>",
        "id": 153927232,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514509333
    },
    {
        "content": "<p>simple</p>",
        "id": 153927233,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514509336
    },
    {
        "content": "<p>what you need for Bundle is <a href=\"https://www.w3.org/TR/xmldsig-core1/#sec-EnvelopedSignature\" target=\"_blank\" title=\"https://www.w3.org/TR/xmldsig-core1/#sec-EnvelopedSignature\">https://www.w3.org/TR/xmldsig-core1/#sec-EnvelopedSignature</a></p>",
        "id": 153927234,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514509344
    },
    {
        "content": "<p>where you exclude the Bundle.signature element during signing and validation</p>",
        "id": 153927235,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514509356
    },
    {
        "content": "<p>but where does the signature go? It just moves the problems around</p>",
        "id": 153927236,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514509358
    },
    {
        "content": "<p>in IHE-DSG? There are two options... ( a ) Two documents are in the Registry... one is XML-Signature, the other is the signed docment</p>",
        "id": 153927237,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514509397
    },
    {
        "content": "<p>The other one ( b ) is enveloped... That is the signed document is base64 encoded INTO the XML-Signature.</p>",
        "id": 153927238,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514509423
    },
    {
        "content": "<p>no,... not enveloped... enveloping.</p>",
        "id": 153927239,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514509437
    },
    {
        "content": "<p>you want envelopedSignature</p>",
        "id": 153927240,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514509447
    },
    {
        "content": "<p>so note that the actual transform for <a href=\"https://www.w3.org/TR/xmldsig-core1/#sec-EnvelopedSignature\" target=\"_blank\" title=\"https://www.w3.org/TR/xmldsig-core1/#sec-EnvelopedSignature\">https://www.w3.org/TR/xmldsig-core1/#sec-EnvelopedSignature</a> is pre-specified - to exclude the dsig:Signature. So we'd have to define our own canonicalization then</p>",
        "id": 153927241,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514509453
    },
    {
        "content": "<p>that is where you put the signature into the signed-document, in an element excluded from the signature calculation</p>",
        "id": 153927242,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514509464
    },
    {
        "content": "<p>yup</p>",
        "id": 153927243,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514509480
    },
    {
        "content": "<p>so, I guess that should not be too hard to do for Bundle.signature... right? And we can likely use fhir path?</p>",
        "id": 153927244,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514509639
    },
    {
        "content": "<p>I hadn't noticed that the xpath exclusion is baked into the canonicalization algorithm... and thus we need our own..</p>",
        "id": 153927245,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514509705
    },
    {
        "content": "<p>so then why is that not in the CDA signature spec.. hmmmm.....</p>",
        "id": 153927246,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514509724
    },
    {
        "content": "<p>yes CDA spec is broken. I think we don't want to follow.</p>",
        "id": 153927247,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514509977
    },
    {
        "content": "<p>so I think we need a new method code here: <a href=\"http://build.fhir.org/xml.html#digsig\" target=\"_blank\" title=\"http://build.fhir.org/xml.html#digsig\">http://build.fhir.org/xml.html#digsig</a></p>",
        "id": 153927248,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514510021
    },
    {
        "content": "<p><a href=\"http://hl7.org/fhir/canonicalization/xml#bundle\" target=\"_blank\" title=\"http://hl7.org/fhir/canonicalization/xml#bundle\">http://hl7.org/fhir/canonicalization/xml#bundle</a> - signs an entire document, with the exception of Bundle.signature.blob</p>",
        "id": 153927249,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514510062
    },
    {
        "content": "<p>sounds like that is heading in the right direction.</p>",
        "id": 153927250,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514510533
    },
    {
        "content": "<p>The way I defined the signature datatype, it is not intended to be part of the signature. All the elements in the signature datatype are intended to be just easy access for a FHIR app to stuff that formally is part of the xml-signature.</p>",
        "id": 153927251,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514510584
    },
    {
        "content": "<p>so, exclude the whole signature, not just the signature.blob</p>",
        "id": 153927252,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514510594
    },
    {
        "content": "<p>that is just my logic... it might not be useful logic</p>",
        "id": 153927253,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514510607
    },
    {
        "content": "<p>that also makes it easier to fixup the elements i Signature without invalidating the digital-signature</p>",
        "id": 153927254,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514510685
    },
    {
        "content": "<p>I don't follow why you'd exclude all the elements that are easy access from the signature - just seems like it creates an obvious attack point - sign, but hack all the easy statements about the signature...</p>",
        "id": 153927255,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514511041
    },
    {
        "content": "<p>I put warnings in the Signature datatype about this</p>",
        "id": 153927256,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514512157
    },
    {
        "content": "<p>most will use these elements to find things, but they know for legal reliance (like a legal audit) they need to look at the same elements as captured within the signature itself</p>",
        "id": 153927257,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514512250
    },
    {
        "content": "<p>I don't see the language. I don't see why we shouldn't sign them.</p>",
        "id": 153927258,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514512590
    },
    {
        "content": "<p>I didn't say I put that language in there... I never expected someone to try an enveloped signature</p>",
        "id": 153927259,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514512646
    },
    {
        "content": "<p>\"I put warnings in the Signature datatype about this\"....?</p>",
        "id": 153927260,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514512672
    },
    {
        "content": "<p>is there any reason it shouldn't be a detached signature in there?</p>",
        "id": 153927261,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514512694
    },
    {
        "content": "<p>about the fact the elements in the Signature datatype are informative, not part of a signature</p>",
        "id": 153927262,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514512702
    },
    {
        "content": "<p>I've read it several times and can't see it</p>",
        "id": 153927263,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514512746
    },
    {
        "content": "<p>hmmm... It must be well written in my head</p>",
        "id": 153927264,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514512922
    },
    {
        "content": "<p>write a CR?</p>",
        "id": 153927265,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514512937
    },
    {
        "content": "<p>more evidence that this is a good candidate to stay STU</p>",
        "id": 153927266,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514512951
    },
    {
        "content": "<p>I start here... but it also doesn't say what I think it shouldhttp://build.fhir.org/secpriv-module.html#signature</p>",
        "id": 153927267,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514513000
    },
    {
        "content": "<p><a href=\"http://build.fhir.org/secpriv-module.html#signature\" target=\"_blank\" title=\"http://build.fhir.org/secpriv-module.html#signature\">http://build.fhir.org/secpriv-module.html#signature</a></p>",
        "id": 153927268,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514513004
    },
    {
        "content": "<p>back to detached/enveloped - is there any reason we shouldn't use detached in Bundle.signature.blob?</p>",
        "id": 153927269,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514513032
    },
    {
        "content": "<p>I am not clear what the use-case for Bundle.signature is</p>",
        "id": 153927270,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514513112
    },
    {
        "content": "<p>I saw it appear there, but was not involved in it</p>",
        "id": 153927271,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514513137
    },
    {
        "content": "<p>signing documents exactly similar to the CDA use case</p>",
        "id": 153927272,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514513166
    },
    {
        "content": "<p>As I have indicated... most that go to the extent of actually trying to make this work in real life... use detached, and maintain the signatures independent of the signed object. It is just more robust</p>",
        "id": 153927274,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514513529
    },
    {
        "content": "<p>Provenance can do this for the whole FHIR-Document</p>",
        "id": 153927275,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514513556
    },
    {
        "content": "<p>Provenance.target points at the FHIR Document, Provenance.signature holds the signature of that FHIR Document</p>",
        "id": 153927276,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514513599
    },
    {
        "content": "<p>I'm suspicious of this. It feels like it moves the deckchairs around - how do I know I have the right matching provenance?</p>",
        "id": 153927277,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514513625
    },
    {
        "content": "<p>enveloped signatures looks cool, and seems like what one would want... but it is a bitch to get right, and cracks easy</p>",
        "id": 153927278,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514513631
    },
    {
        "content": "<p>why would you not find the right one?</p>",
        "id": 153927279,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514513659
    },
    {
        "content": "<p>see <a href=\"http://wiki.hl7.org/index.php?title=201801_FHIR_Documents\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=201801_FHIR_Documents\">http://wiki.hl7.org/index.php?title=201801_FHIR_Documents</a> - what would you propose? <span class=\"user-mention\" data-user-id=\"191918\">@Sarah Gaunt</span> <span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span> <span class=\"user-mention\" data-user-id=\"191407\">@Rick Geimer</span></p>",
        "id": 153927280,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514513683
    },
    {
        "content": "<p>should be fun</p>",
        "id": 153927281,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514513787
    },
    {
        "content": "<p>doesn't a FHIR Document exist as a FHIR Resource? Thus a Provenance.target can point at that FHIR Document?</p>",
        "id": 153927282,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514513833
    },
    {
        "content": "<p>it can. But the implication of what you are saying is that we might as well remove Bundle.signature</p>",
        "id": 153927283,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514513979
    },
    {
        "content": "<p>so if someone just added signature to Bundle expecting magjic would happen... then, yes, we should remove it until we can make it work</p>",
        "id": 153927284,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514514077
    },
    {
        "content": "<p>sure sounds well outside the 80%</p>",
        "id": 153927285,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514514097
    },
    {
        "content": "<p>it's been there a long time. Since the beginning, in fact, since it cam out of Atom</p>",
        "id": 153927286,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514515281
    },
    {
        "content": "<p>ok, an update, then. Here's a revised signed document, for comment</p>",
        "id": 153927291,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514532358
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/-D9iRELtFSFVMu-PaTlGvkd6/signed.xml\" target=\"_blank\" title=\"signed.xml\">signed.xml</a></p>",
        "id": 153927292,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514532387
    },
    {
        "content": "<p>for reader convenience, here's the signature directly:</p>",
        "id": 153927293,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514532405
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n<span class=\"nt\">&lt;Signature</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://www.w3.org/2000/09/xmldsig#&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;SignedInfo&gt;</span>\n    <span class=\"nt\">&lt;CanonicalizationMethod</span> <span class=\"na\">Algorithm=</span><span class=\"s\">&quot;http://www.w3.org/TR/2001/REC-xml-c14n-20010315&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;SignatureMethod</span> <span class=\"na\">Algorithm=</span><span class=\"s\">&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;Reference&gt;</span>\n      <span class=\"nt\">&lt;Transforms&gt;</span>\n        <span class=\"nt\">&lt;Transform</span> <span class=\"na\">Algorithm=</span><span class=\"s\">&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/Transforms&gt;</span>\n      <span class=\"nt\">&lt;DigestMethod</span> <span class=\"na\">Algorithm=</span><span class=\"s\">&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;DigestValue&gt;</span>Vyn0Z139dlswfTg1Ivx/DNlVJAJoRC+ros1dtAKKHGo=<span class=\"nt\">&lt;/DigestValue&gt;</span>\n    <span class=\"nt\">&lt;/Reference&gt;</span>\n  <span class=\"nt\">&lt;/SignedInfo&gt;</span>\n  <span class=\"nt\">&lt;SignatureValue&gt;</span>RU2N7C/WdTuuk5PCbdBL6/Qk6Tx46qEN1K4t6FbdZJmnDmYmlEn6WA+D1AnfQcfkDGlsSS2oyr/vZNRGyVSiVZkQAcHs2ExUo8YuwyI/SU40Mc9uqpWb18LNVu3+DRBaowUTzcDoafIBVkEe+Qv5B2kgByiqe2MN1V/a/dwjiMdb+SMXah60yHaq0o5vOYerAx/NYt4cpruvLcHUD6zRu+9f3h+Ptj+6hjhaK2P+WpNjANm3QokzZnqhAKqEwlNd1yFPBcL6zMhQKSvijkyNQDnjPGNfDyJDjc4LaZZ6SXu6TCiZICiYemlfypsZ7FiGYqc9OTAbWUqr/hqQQEw+qA==<span class=\"nt\">&lt;/SignatureValue&gt;</span>\n  <span class=\"nt\">&lt;KeyInfo&gt;</span>\n    <span class=\"nt\">&lt;KeyValue&gt;</span>\n      <span class=\"nt\">&lt;RSAKeyValue&gt;</span>\n        <span class=\"nt\">&lt;Modulus&gt;</span>m475SJi0ndOkUWBDK9HeUPJLo5ujSiTaO23N6DrNHMR0wGzbMNTaslVKUKKF+wR1JBwoGvGLwsol0vrctR+tz/z5JbetCjOwFqh1R6ElJL7/T2sPLo1gRxpXmTAJ+kWbenQX9Z8Mr8teijGPwQ0MvQWlesl0S0ZJm4W54XVwFPsvbUaohKyCx6yBT1SyTcMHnDJve9AT/k30Gu/euxMLMQE814rSWnoyVy8p5Dt4AgTWKEgU4y2Efr8yZRlx6Fhttbt6g/lGWretlKuA46MJv3HyssYw7daTHKoHCIcaU/bhJ237pFguQg6v/Zn6U7hTHwW3lWXVXyEZCsaZtflPGw==<span class=\"nt\">&lt;/Modulus&gt;</span>\n        <span class=\"nt\">&lt;Exponent&gt;</span>AQAB<span class=\"nt\">&lt;/Exponent&gt;</span>\n      <span class=\"nt\">&lt;/RSAKeyValue&gt;</span>\n    <span class=\"nt\">&lt;/KeyValue&gt;</span>\n  <span class=\"nt\">&lt;/KeyInfo&gt;</span>\n<span class=\"nt\">&lt;/Signature&gt;</span>\n</pre></div>",
        "id": 153927294,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514532415
    },
    {
        "content": "<p>oh. oops. missed something. I'll try again shorlty</p>",
        "id": 153927296,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514532455
    },
    {
        "content": "<p>ok, this pair:</p>",
        "id": 153927297,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514533953
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/-LRZijcZ-ClpIas0QcaYkKQ4/signed.xml\" target=\"_blank\" title=\"signed.xml\">signed.xml</a></p>",
        "id": 153927298,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514534003
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n<span class=\"nt\">&lt;Signature</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://www.w3.org/2000/09/xmldsig#&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;SignedInfo&gt;</span>\n    <span class=\"nt\">&lt;CanonicalizationMethod</span> <span class=\"na\">Algorithm=</span><span class=\"s\">&quot;http://hl7.org/fhir/canonicalization/xml#bundle&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;SignatureMethod</span> <span class=\"na\">Algorithm=</span><span class=\"s\">&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;Reference&gt;</span>\n      <span class=\"nt\">&lt;Transforms&gt;</span>\n        <span class=\"nt\">&lt;Transform</span> <span class=\"na\">Algorithm=</span><span class=\"s\">&quot;http://www.w3.org/2000/09/xmldsig#enveloped-signature&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/Transforms&gt;</span>\n      <span class=\"nt\">&lt;DigestMethod</span> <span class=\"na\">Algorithm=</span><span class=\"s\">&quot;http://www.w3.org/2001/04/xmldsig-more#rsa-sha256&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;DigestValue&gt;</span>H/lLrIGPTNlpf1Xr78AmZ2VVCDeO4XzYZalqxCgJmVQ=<span class=\"nt\">&lt;/DigestValue&gt;</span>\n    <span class=\"nt\">&lt;/Reference&gt;</span>\n  <span class=\"nt\">&lt;/SignedInfo&gt;</span>\n  <span class=\"nt\">&lt;SignatureValue&gt;</span>kwm6FNATYxp4sdHf0noK8Z1JBCyw+XisaRvhjsiIuL6emO7Yityq3CIRWm2WS8aAeq/bzcRrqRQB+TJKuwDGOXqJarkH7VuBreAMMNDotctMPSnb7BInzSpg+ytus1fz7MvtlQBpfyuEwNA4RNJcOLK8BgQe1pWwckNaNt5hN2Rn71E+doGr3g7FeX7kQZ3yWJTV7XWExVZdmDaDRI77N+AsNIPNP4Nc/OiAJJP+DAeHW15AJssQUIykr0ZKTaPLVPdk7N2QwBpkYsbkHh1646ys5MKDYu9+fRb8il5x8Ao1Dxgbeoow8VXDW1RI1cCbT7T5V+cm+T15LCTB9iCRRw==<span class=\"nt\">&lt;/SignatureValue&gt;</span>\n  <span class=\"nt\">&lt;KeyInfo&gt;</span>\n    <span class=\"nt\">&lt;KeyValue&gt;</span>\n      <span class=\"nt\">&lt;RSAKeyValue&gt;</span>\n        <span class=\"nt\">&lt;Modulus&gt;</span>m475SJi0ndOkUWBDK9HeUPJLo5ujSiTaO23N6DrNHMR0wGzbMNTaslVKUKKF+wR1JBwoGvGLwsol0vrctR+tz/z5JbetCjOwFqh1R6ElJL7/T2sPLo1gRxpXmTAJ+kWbenQX9Z8Mr8teijGPwQ0MvQWlesl0S0ZJm4W54XVwFPsvbUaohKyCx6yBT1SyTcMHnDJve9AT/k30Gu/euxMLMQE814rSWnoyVy8p5Dt4AgTWKEgU4y2Efr8yZRlx6Fhttbt6g/lGWretlKuA46MJv3HyssYw7daTHKoHCIcaU/bhJ237pFguQg6v/Zn6U7hTHwW3lWXVXyEZCsaZtflPGw==<span class=\"nt\">&lt;/Modulus&gt;</span>\n        <span class=\"nt\">&lt;Exponent&gt;</span>AQAB<span class=\"nt\">&lt;/Exponent&gt;</span>\n      <span class=\"nt\">&lt;/RSAKeyValue&gt;</span>\n    <span class=\"nt\">&lt;/KeyValue&gt;</span>\n  <span class=\"nt\">&lt;/KeyInfo&gt;</span>\n<span class=\"nt\">&lt;/Signature&gt;</span>\n</pre></div>",
        "id": 153927299,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514534004
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> turning my attention to a json equivalent now.... we (you!) specify the mime type for json as application/jose. Is the specifically not application/jose+json? I would have thought that application/jose+json was actually the right thing to use in a Signature?</p>",
        "id": 153927303,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514537567
    },
    {
        "content": "<p>that is what the RFC said to use...</p>",
        "id": 153927313,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514552583
    },
    {
        "content": "<ul>\n<li>application/jose = the compact form (URL safe encoding)</li>\n<li>application/jose+json = the full form (json encoding)</li>\n</ul>\n<p>You've specified the URL safe encoding.....</p>",
        "id": 153927341,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514573573
    },
    {
        "content": "<p>Will this also work for the bulk data transfer json format?<br>\nI expect this could be a useful place for it.</p>",
        "id": 153927357,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1514675363
    },
    {
        "content": "<p>I don't think signatures apply there - tough situation for signatures</p>",
        "id": 153927365,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514714592
    },
    {
        "content": "<p>Bulk data transfer, is likely well enough covered by the communications security mechanism (e.g. mutually-authenticated TLS,  https+OAuth, https+SMIME, S/MIME). So there is not really a need for a signature in the bundle.</p>",
        "id": 153927374,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514752588
    },
    {
        "content": "<p>end-to-end security (made up of multiple point-to-point communications), is more the space where a signature is needed. Biggest use-case is where an object sits-at-rest for a period of time, and one needs an integrity check that the object has not changed while it was resting.  Which is why the topic is natural to come up with a FHIR Document, or any FHIR Resource. the use-case for any FHIR Resource is well covered by Provenance.signature. I would argue that this same solution should be considered for FHIR Document, until someone identifies a specific use-case. We can then assess that specific use-case for best solution.  This said, there is clearly more \"Trial\" (STU) experience we need with this solution.</p>",
        "id": 153927375,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514752853
    },
    {
        "content": "<p>Just coming up to speed on this after the holidays. <span class=\"user-mention\" data-user-id=\"191918\">@Sarah Gaunt</span> please read the whole thread. </p>\n<p>On the FHIR Documents track, we added the digital signature scenario specifically because it needs testing. We actually added it several connectathons ago, but no one did it yet (most people who sign up for the documents track are newbies to docs). </p>\n<p>Assuming someone does try it this time around, I think we should test both the detached (using Provenance) and enveloped (using Grahame's sample as an example) methods. </p>\n<p>Also, maybe this is a dumb question, but why not follow <a href=\"https://www.w3.org/TR/xmldsig-core1/#sec-EnvelopedSignature\" target=\"_blank\" title=\"https://www.w3.org/TR/xmldsig-core1/#sec-EnvelopedSignature\">https://www.w3.org/TR/xmldsig-core1/#sec-EnvelopedSignature</a> exactly and use dsig:Signature? Yes it's in another namespace, but is there a reason why we can't do that for XML?</p>",
        "id": 153927484,
        "sender_full_name": "Rick Geimer",
        "timestamp": 1514940035
    },
    {
        "content": "<p>we could but it's a lot of work for everyone</p>",
        "id": 153927486,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514940302
    },
    {
        "content": "<p>what would it look lke for json?</p>",
        "id": 153927487,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514940313
    },
    {
        "content": "<p>a for provenance, what workflow do you want for the connectathon?</p>",
        "id": 153927489,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514940408
    },
    {
        "content": "<p>I'm not much of a JSON guy, better to ask someone who is. I assume there is a preferred method of signing JSON files, yes?</p>",
        "id": 153927490,
        "sender_full_name": "Rick Geimer",
        "timestamp": 1514940419
    },
    {
        "content": "<p>I expected to add a sign parameter to the $document operation, but I fall over on passwords/access (personal or system cert?). What would the flow be for a provenance?</p>",
        "id": 153927491,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514940462
    },
    {
        "content": "<p>well, there's a way to, yes, though I haven't got the bottom of jose yet. I haven't found enveloped signatures there yet. <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>?</p>",
        "id": 153927492,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514940497
    },
    {
        "content": "<p>The flow from the Connectathon perspective? I assume it would be pretty simple:<br>\na) Create a document<br>\nb) Calculate the signature for the document<br>\nc) Create the Provenance resource and stuff the sig in there. <br>\nd) Post both to  your favorite FHIR server</p>",
        "id": 153927493,
        "sender_full_name": "Rick Geimer",
        "timestamp": 1514940646
    },
    {
        "content": "<p>so the client does the signing? ok</p>",
        "id": 153927495,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514940929
    },
    {
        "content": "<p>can you update the wiki page?</p>",
        "id": 153927496,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514940964
    },
    {
        "content": "<p>Sure</p>",
        "id": 153927503,
        "sender_full_name": "Rick Geimer",
        "timestamp": 1514954518
    },
    {
        "content": "<p>This will be enlightening. The main problems with the client doing the signatures is all of the expected reference fixup that the server will do will cause that signaure to break. This is the main problem we have identified as a problem for all digital signatures <a href=\"http://wiki.hl7.org/index.php?title=FHIR_Digital_Signature_Working_Page\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=FHIR_Digital_Signature_Working_Page\">http://wiki.hl7.org/index.php?title=FHIR_Digital_Signature_Working_Page</a></p>",
        "id": 153927534,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514998604
    },
    {
        "content": "<p>The text I put in for json signatures was purely done by theory... no actual trial feedback has been received.</p>",
        "id": 153927535,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514998636
    },
    {
        "content": "<p>this is why an encapsulated signature on a bundle is so much simpler - because there's no external dependencies to intrude on the content. The idea that encapsulated signatures are harder is because of externalised complexity</p>",
        "id": 153927567,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515014360
    },
    {
        "content": "<p>I will implement a client that uses $document on the server, signs the response, and posts it back to the server as a binary, with either an encapsulated signature or a detached provenance</p>",
        "id": 153927569,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515015182
    },
    {
        "content": "<p>If you have already fixedup the references, then that problem goes away. Not sure how encapsulated signature magjically solves the fixup problem.</p>",
        "id": 153927572,
        "sender_full_name": "John Moehrke",
        "timestamp": 1515016849
    },
    {
        "content": "<p>No need to fiddle with references afterwards. Unlike in other contexts.</p>",
        "id": 153927582,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515029325
    },
    {
        "content": "<p>On this subject, take this workflow: generate a document, sign it, post it to the server as a binary. <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> - the content type will be none other than.. application/fhir+[fmt]... which is ambiguous... isn’t it?</p>",
        "id": 153927583,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515029465
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191407\">@Rick Geimer</span> <span class=\"user-mention\" data-user-id=\"191918\">@Sarah Gaunt</span> is there a specified version of FHIR for the document track?</p>",
        "id": 153927592,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515049843
    },
    {
        "content": "<p>ok. so I have released a new version of the FHIRToolkit that supports the following workflow:<br>\n- connect to a server<br>\n- find a patient, double click<br>\n- see the patient's compositions, double  click  one<br>\n- toolkit fetches a document using $document<br>\n- allows the user to see the document<br>\n- prompts for user to provide certificate details to sign the document<br>\n- allows user to choose an embedded signature (Bundle.signature) or a detached signature (Provenance.signature)<br>\n- allows the user to save Document/DocumentReference(/Provenance) back to the server, or to a local file</p>\n<p><span class=\"user-mention\" data-user-id=\"191407\">@Rick Geimer</span> <span class=\"user-mention\" data-user-id=\"191918\">@Sarah Gaunt</span> <span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span></p>",
        "id": 153927843,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515207094
    },
    {
        "content": "<p>xml signatures a supported (completely, so far as I can tell). JSON signatures is a work in progress</p>",
        "id": 153927844,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515207142
    }
]