[
    {
        "content": "<p>Over on the dotnet stream was asking about error messages appropriate for a user as a result of a call to a resource $validate and the OperationOutcome Issues.<br>\nDo others think that the Text in the Issue should be applicable to show to a user?<br>\n(If not, where should the detail to show the user come from?)</p>",
        "id": 153938459,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1518997984
    },
    {
        "content": "<p>The example that I was going to clean up from the .net validator output was this one:<br>\n<code>[Field Display Name in ElementDefinition] is a mandatory field</code><br>\ninstead of<br>\n<code>Instance count for 'Practitioner.identifier.type' is 0, which is not within the specified cardinality of 1..1</code></p>",
        "id": 153938460,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1518998044
    },
    {
        "content": "<p>Well, we could do that.  And when you have repeats for a non-repeating field, you'd get something along these lines: \"[....] is not a repeatable element\".   And then when you have something specific, like 1..3 (and having 4 repeats), you'd get the message as we have it now?</p>",
        "id": 153938596,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1519053588
    },
    {
        "content": "<p>On the details needed to create user-friendlier messages (I just read the messages in the dotnet stream):  I am thinking about making the errors more elaborate, by adding a reference to the failing rule, which has the details. E.g. an error as above, would also reference a \"CardinalityRule\", which has both the lower and upper bounds. Like this, you could first switch on the type of rule, and then create your own text.</p>\n<p>But I think you underestimate a bit the number of messages, sometimes created by subsystems like a terminology service. To consistently be able to translate or re-create those, you'd need a framework to communicate not just the text, but the details everywhere. It sounds ambitious.</p>",
        "id": 153938601,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1519054784
    },
    {
        "content": "<p>yes very much so. I'm thinking of 100s of messages already</p>",
        "id": 153938664,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519069640
    },
    {
        "content": "<p>So who is the best to turn these errors into something user understandable? Has to be the server side right?</p>",
        "id": 153938676,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1519071326
    },
    {
        "content": "<p>Do other client app writers expect that the error message should be able to be shown to a user?<br>\nIf not, who is responsible to do the above message conversion?</p>",
        "id": 153938679,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1519072176
    },
    {
        "content": "<p>Or a property to say it's not suitable, which i think is severity.</p>",
        "id": 153938680,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1519072212
    }
]