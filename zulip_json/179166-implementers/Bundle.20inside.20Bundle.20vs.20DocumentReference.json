[
    {
        "content": "<p>When doing a POST of a document to Azure Cosmos db, I can either Bundle a 'sub-Bundle with resources' or I can embed a 'Bundle with multiple resources' inside <a href=\"http://DocumentReference.content.attachment.data\">DocumentReference.content.attachment.data</a> .  Wondering if one way more proper than the other from FHIR standard perspective?  Please advise, thanks.</p>",
        "id": 243210243,
        "sender_full_name": "Maria Hu",
        "timestamp": 1624051871
    },
    {
        "content": "<p>Can you explain more about what you're doing?  Why would posting a document have sub-Bundles at all?</p>",
        "id": 244044534,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1624758750
    },
    {
        "content": "<p>Are you using FHIR Documents (a Bundle of type = document) or a normal document?<br>\nand in either case you will have a DocumentReference for the document metadata.</p>",
        "id": 244050964,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1624772070
    },
    {
        "content": "<p>There has been some discussion about this in the IHE space around the MHD and MHDS implementation guides. The <a href=\"http://attachment.data\">attachment.data</a> (or in the case of MHD the attachment.url points at) an object that is described with the mime-type in attachment.contentType. If that contentType is a FHIR type, then the contents pointed to can be seen as a FHIR Resource type. For attachment.url situations this is often a Binary that holds the content. Either way the concept that the attachment has a mime-type and a content enables the source to use a FHIR Document Bundle, or a FHIR Binary with anything.   <br>\nSo far, MHD/MHDS has been silent on this FHIR Document Bundle use, because it is unclear how that affects persistence as bits (which is important to MHD/MHDS)<br>\nA Binary will have a deterministic hash and size... a FHIR Document Bundle might start out with the one and morph as translations and re-encodings happen.<br>\nSo, needing Trial Implementation experience to uncover the concerns and advantages.... they are not all clear right now.</p>",
        "id": 244073011,
        "sender_full_name": "John Moehrke",
        "timestamp": 1624809796
    },
    {
        "content": "<p>I've been looking at how to merge a variety of document exchanges and I'm leaning towards IHE MHD and the use of FHIR Document as an alternative to a FHIR Binary. <br>\n<a href=\"https://simplifier.net/guide/NHSDigital/document\">https://simplifier.net/guide/NHSDigital/document</a></p>",
        "id": 244102662,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1624856821
    },
    {
        "content": "<p>I think that should work... and I would like to hear how well it does. I have an open issue in MHD looking for experience on this. Please keep me informed on how well it goes.</p>",
        "id": 244134058,
        "sender_full_name": "John Moehrke",
        "timestamp": 1624881875
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> <a href=\"#narrow/stream/179166-implementers/topic/Bundle.20inside.20Bundle.20vs.20DocumentReference/near/244134058\">said</a>:</p>\n<blockquote>\n<p>I think that should work... and I would like to hear how well it does. I have an open issue in MHD looking for experience on this. Please keep me informed on how well it goes.</p>\n</blockquote>\n<p>Thanks John.</p>\n<p>I tried two different options as follow, wondering which option is best practice:<br>\nOption 1:<br>\nBundle (Master)<br>\nEntry<br>\nBundle (Sub)<br>\nEntry<br>\n                                MessageHeader<br>\nPatient<br>\n                                Practitioner<br>\n                                Organization<br>\n                                ServiceRequest1<br>\n                                Servicerequest2</p>\n<p>Option 2:<br>\nBundle<br>\nEntry<br>\n                MessageHeader<br>\n                DocumentReference<br>\n<a href=\"http://Content.attachment.data\">Content.attachment.data</a> (encode Patient/Practitioner/Organization/ServiceRequest1/ServiceRequest2)</p>",
        "id": 244219882,
        "sender_full_name": "Maria Hu",
        "timestamp": 1624925618
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/-dqKUoBkO0iMzoNRkV7EjSNI/5f35ku.jpg\">5f35ku.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/-dqKUoBkO0iMzoNRkV7EjSNI/5f35ku.jpg\" title=\"5f35ku.jpg\"><img src=\"/user_uploads/10155/-dqKUoBkO0iMzoNRkV7EjSNI/5f35ku.jpg\"></a></div>",
        "id": 244510369,
        "sender_full_name": "Brendan Keeler",
        "timestamp": 1625104509
    },
    {
        "content": "<p>Option one doesn't make sense... Are you looking for a FHIR message containing a document?</p>",
        "id": 244575252,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1625149791
    },
    {
        "content": "<p>I think we better need to understand your use case and workflow so that the options have more context</p>",
        "id": 244575665,
        "sender_full_name": "David Pyke",
        "timestamp": 1625149930
    },
    {
        "content": "<p>I'm currently working on an document exchange specification that aims to align with MHD. But more often than not, the content will be a FHIR document bundle.<br>\nI was thinking thet the \"provide document\" transaction could be a transaction bundle where the DocumentReference.content.attachement.url resolves within the Bundle to another entry containing the document Bundle. So you get another Bundle instead of a Binary (currently not allowed in MHD).</p>\n<p>However, this seems to be quite a redundant approach, because Patient, Practitioner(Author), Organization (Custodian) etc. would be both in the outer and in the inner bundle. I suppose this is by design in order to keep metadata separate from content, but it still feels a bit weird. </p>\n<p>Any thoughts on this?</p>",
        "id": 254571149,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1632417351
    },
    {
        "content": "<p>Your point about redundancy due to the nested nature.. YES. But the Bundle of type Document requires they be in there. And the FHIR-Document rules are good and appropriate. I am not clear on why this replication is all that troubling. it is just bits</p>",
        "id": 254573744,
        "sender_full_name": "John Moehrke",
        "timestamp": 1632418428
    },
    {
        "content": "<p>true <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 254575381,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1632419118
    },
    {
        "content": "<p>But it is correct that MHD doesn't allow this currently. The only compliant way would be to Base64 encode the document Bundle an put it in a Binary, right?</p>",
        "id": 254577244,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1632419854
    },
    {
        "content": "<p>correct... until we work together to improve the spec...</p>",
        "id": 254579266,
        "sender_full_name": "John Moehrke",
        "timestamp": 1632420573
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> you mentioned earlier that you had an open issue for this? Could you share a link, I'd be happy to update it in case we go along with the above mentioned pattern and have collected some experience.</p>",
        "id": 254583037,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1632422152
    },
    {
        "content": "<p><a href=\"https://github.com/IHE/ITI.MHD/issues/91\">https://github.com/IHE/ITI.MHD/issues/91</a></p>",
        "id": 254583659,
        "sender_full_name": "John Moehrke",
        "timestamp": 1632422431
    },
    {
        "content": "<p>Note that there is a set of open issues asserted in the specification. <br>\n<a href=\"https://profiles.ihe.net/ITI/MHD/a_issues.html\">https://profiles.ihe.net/ITI/MHD/a_issues.html</a></p>",
        "id": 254586561,
        "sender_full_name": "John Moehrke",
        "timestamp": 1632423541
    },
    {
        "content": "<p>I added a comment to the issue. We're only at the beginning of defining our use cases, so I might add more in the future...</p>",
        "id": 254607760,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1632432171
    },
    {
        "content": "<p>thanks. Note that the consumer side is not burdened by the Binary constraint. A server is free to follow the http negotiate to determine that the consumer would prefer FHIR mime-type, and thus return the Document Bundle. Not clear how many servers will do this, but it is mentioned in MHD and does leverage the explanation in Binary resource. Im not saying it is obvious or clear, but possible.</p>",
        "id": 254696718,
        "sender_full_name": "John Moehrke",
        "timestamp": 1632487247
    },
    {
        "content": "<blockquote>\n<p>A server is free to follow the http negotiate to determine that the consumer would prefer FHIR mime-type, and thus return the Document Bundle</p>\n</blockquote>\n<p>Mhh, no: 'When a read request is made with a FHIR type in the Accept header (e.g. \"application/fhir+xml\" or \"application/fhir+json\") the Binary resource is returned in the requested FHIR format. This applies even when the binary data itself has a FHIR mime type'  (from <a href=\"http://hl7.org/fhir/binary.html#rest\">http://hl7.org/fhir/binary.html#rest</a>)</p>",
        "id": 254698279,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1632488013
    },
    {
        "content": "<p>odd that FHIR explicitly enables easier Binary for all other mime types, and makes fhir mime type harder...</p>",
        "id": 254702601,
        "sender_full_name": "John Moehrke",
        "timestamp": 1632489747
    },
    {
        "content": "<p>well, more reason to get MHD (and thus the attachment datatype, url element) to better handle FHIR Documents.</p>",
        "id": 254702730,
        "sender_full_name": "John Moehrke",
        "timestamp": 1632489797
    },
    {
        "content": "<p>I don't understand why a FHIR server would persist FHIR data as Binary...? I mean, even if it's necessary to Base64 encode the document Bundle for the transaction, I would expect the server to decode it when processing hte transaction and simply store the Bundle. Why would it want to maintain the encoding...?</p>",
        "id": 255605224,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1633019802
    },
    {
        "content": "<p>The issue is that if the instance contains elements (e.g. extensions) the system doesn't know how to persist and would normally throw away, then you'd break the signature.  Also, some systems may introduce elements (e.g. code translations, alternate display values, etc.) when re-serializing.  By storing a binary copy, you hold onto everything and maintain signature validity even if you then also store the resource normally in a way that modifies the content.</p>",
        "id": 255611327,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1633021932
    },
    {
        "content": "<p>I am expecting that a server would store the Binary as a binary, but I am not presuming that the server would be forbidden from returning the result to a client that asks for a specific mime-type encoding that the server can fulfill.</p>",
        "id": 255633696,
        "sender_full_name": "John Moehrke",
        "timestamp": 1633030224
    }
]