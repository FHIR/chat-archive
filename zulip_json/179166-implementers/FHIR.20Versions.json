[
    {
        "content": "<p>Philosophy of changes by Rich Hickey - <a href=\"https://t.co/59VWzjneNa\" target=\"_blank\" title=\"https://t.co/59VWzjneNa\">https://t.co/59VWzjneNa</a>. Rich decomposes versions and deps - may be useful for strategy for FHIR versioning.</p>",
        "id": 153859878,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1480676040
    },
    {
        "content": "<p>I'm not going to watch an hour video. perhaps you could summarise it here....</p>",
        "id": 153859994,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1480705702
    },
    {
        "content": "<p>1) Rich analyses dependency/version hell using maven deps as example<br>\n2) He identified two types of changes - safe and breaking - adding new is safe and he named it growing/open system, removing or changing is unsafe (there are parallel with immutability ), closed world assumption is also unsafe<br>\n3 ) Then he attacked semantic versioning (major versions) - as a best way of break software and create problems<br>\n4) He shows examples how to convert breaking changes (removal, relaxation) into safe changes (addition) and successful examples of this approach in real world (unix, html, java, git, clojure, maven by itself)  - it's really true - couple of month ago i've updated in our project (after year) clojure version by 2  (1.7 to 1.9alpha20)  and about half libraries (&gt;10)  to latest versions (also +2/3) and all keep working (only one library from java world was incompatible - jdbc :) - i never had such experience with other languages.<br>\n5) the last part is how clojure deals with it especially by clojure.spec<br>\n6) So the main point was that you could change system (languages, services, standards:) using growing/open principle, without breakage and dependency hells</p>\n<p>My english is awful, may be somebody will spend an hour and explain it better.</p>",
        "id": 153860045,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1480714464
    },
    {
        "content": "<p>what I heard is: don't make breaking changes....</p>",
        "id": 153860061,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1480727704
    },
    {
        "content": "<p>Breaking changes will be forbidden once FHIR goes Normative. Until then, FHIR is a Standard for TRIAL Use (STU). Right now is is best for trial use. If you choose to use it beyond trial use, you take on the risk of the breaking changes that might happen. We have a principle that once we go normative, then no breaking changes will be allowed. Thus ONE version.</p>",
        "id": 153860103,
        "sender_full_name": "John Moehrke",
        "timestamp": 1480781071
    },
    {
        "content": "<p>Emphasise that's on a 'per resource' basis: <a href=\"http://wiki.hl7.org/index.php?title=FHIR_Maturity_Model\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=FHIR_Maturity_Model\">http://wiki.hl7.org/index.php?title=FHIR_Maturity_Model</a></p>",
        "id": 153860112,
        "sender_full_name": "David Hay",
        "timestamp": 1480787235
    },
    {
        "content": "<p>Rich talks about simple rules (paradigm) how to change and grow system without breakage</p>",
        "id": 153860113,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1480793775
    },
    {
        "content": "<p>Some of those assumptions about what is breaking and not tend to fall down in the real world. Also, there is both forward and backward compatibility in play. </p>",
        "id": 153860936,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1480970643
    },
    {
        "content": "<p>For example, adding a field should be compatible. As it's been defined in FHIR, it is. However, if an app uses a java library to deserialize json that throws an exception when it finds an \"unknown\" field, it's not as compatible as you once thought</p>",
        "id": 153860937,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1480970697
    },
    {
        "content": "<p>FHIR has said it will eventually be backward compatible. But apps may need to be forward compatible.</p>",
        "id": 153860938,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1480970724
    },
    {
        "content": "<p>And adding a field while accepting writes can get... nasty (not as bad after Patch.. yay!).</p>",
        "id": 153860942,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1480970802
    },
    {
        "content": "<p>yes, these things are challenging. And we explicitly note the difference between in principle backwards compatiblity, and in practice compatibility</p>",
        "id": 153860978,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1480972517
    },
    {
        "content": "<p>My plea for a simple improvement in FHIR versioning would be having a clear distinction between \"moving versions\" (eg those like Maven's x.y.z-SNAPSHOT) and fixed versions (x.y.z)<br>\nIt's really hard when something is called x.y.z and is changing regularly up until some point in time where it's frozen and a new version number is used (but then pointing at changing content)</p>\n<p>Note, I'm not calling for every change to have a unique version (that's what commit ids provide), but just a naming policy such that it is possible to distinguish a fixed version from a moving one.</p>",
        "id": 153862644,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1481261537
    },
    {
        "content": "<p>is this a HAPI issue?</p>",
        "id": 153862646,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481265452
    },
    {
        "content": "<p>No, I think it's a FHIR issue (see <a href=\"http://hl7.org/fhir/directory.html\" target=\"_blank\" title=\"http://hl7.org/fhir/directory.html\">http://hl7.org/fhir/directory.html</a>) \"current\" is the problem here.  It's version is listed as \"(last commit)\", but in the generated structures the fhirVersion is reported as 1.8.0 (see org/hl7/fhir/dstu3/model/Constants.java).  This is also visible in, for example, dataelements.json which in the \"current\" build (based off 10555 is still called 1.8.0 even though there's a frozen 1.8.0 (based of 10521)</p>",
        "id": 153863069,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1481515517
    },
    {
        "content": "<p>migrating to 1.9.0 as soon as I can catch my breath. Takes me about 2 hours to migrate versions, so I didn't get to it last week</p>",
        "id": 153863074,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481522946
    },
    {
        "content": "<p>But can we call it 1.9.0-SNAPSHOT (or similar) instead, otherwise we won't be able to distinguish a final 1.9.0 from any of the interim ones.  That is for an x.y.z version, there should only ever be one associated commit id, but for x.y.z-SNAPSHOT, there can be many.</p>",
        "id": 153863079,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1481523782
    },
    {
        "content": "<p>there will only be interim 1.9.0 versions. When I next do a milestone - probably the final QA version - it will be 1.10.0. Then there'll be R3 which will be 2.0.0</p>",
        "id": 153863094,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481529258
    },
    {
        "content": "<p>done</p>",
        "id": 153863178,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481586197
    },
    {
        "content": "<p>I agree with <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> , such a distinction wouldn't hurt</p>",
        "id": 153867533,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1484560259
    },
    {
        "content": "<p>Is there a law or requirement for certification for EHR Vendors to use the latest FHIR version for interoperability? (for example: using r5 over r4). Also, can an external healthcare facility using a newer FHIR version still make use of fhir resources obtained from an older FHIR version?</p>",
        "id": 198366688,
        "sender_full_name": "Jose Guerrero",
        "timestamp": 1590090078
    },
    {
        "content": "<p>There is regulation in the US that says 'use R4' (and only R4)</p>",
        "id": 198367085,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1590090315
    },
    {
        "content": "<blockquote>\n<p>can an external healthcare facility using a newer FHIR version still make use of fhir resources obtained from an older FHIR version</p>\n</blockquote>\n<p>In general no - some specific resources _might_ be compatible (in one direction or both)</p>",
        "id": 198367202,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1590090374
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191912\">Michele Mottini</span> <a href=\"#narrow/stream/179166-implementers/topic/FHIR.20Versions/near/198367085\">said</a>:</p>\n<blockquote>\n<p>There is regulation in the US that says 'use R4' (and only R4)</p>\n</blockquote>\n<p>Thanks <span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> . where would this information be indicated? or could you point me to a resource so I could learn more about it?</p>",
        "id": 198380534,
        "sender_full_name": "Jose Guerrero",
        "timestamp": 1590097120
    },
    {
        "content": "<blockquote>\n<p>In general no - some specific resources _might_ be compatible (in one direction or both)</p>\n</blockquote>\n<p>Normative resources will be compatible with newer versions (a newer version client will be able to process and understand older version resources).</p>",
        "id": 198380839,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1590097306
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"296814\">@Jose Guerrero</span> which information? The regulation is at <a href=\"https://www.healthit.gov/curesrule/overview/major-changes-proposed-rule-final-rule\">https://www.healthit.gov/curesrule/overview/major-changes-proposed-rule-final-rule</a></p>",
        "id": 198388387,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1590101822
    },
    {
        "content": "<p>note that the R4 FHIR API piece doesn't go into full effect at health systems until 24 months after publication. Between now and then you'll likely see more and more R4 support coming out :)</p>",
        "id": 198390471,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1590103137
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191912\">Michele Mottini</span> <a href=\"#narrow/stream/179166-implementers/topic/FHIR.20Versions/near/198388387\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"296814\">Jose Guerrero</span> which information? The regulation is at <a href=\"https://www.healthit.gov/curesrule/overview/major-changes-proposed-rule-final-rule\">https://www.healthit.gov/curesrule/overview/major-changes-proposed-rule-final-rule</a></p>\n</blockquote>\n<p>Yes, Thank you!</p>",
        "id": 198509938,
        "sender_full_name": "Jose Guerrero",
        "timestamp": 1590195127
    }
]