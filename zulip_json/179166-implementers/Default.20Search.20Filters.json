[
    {
        "content": "<p>What are folks' thoughts on us putting in place a default search filter for one of our resources? Specifically, <code>ExplanationOfBenefit.disposition</code>. Most of our API users aren't going to want to see inactive/superceded claims, so it makes sense to me to set <code>?disposition=active</code> unless folks explicitly set it to something else. Does this horrify anyone or generally seem reasonable?</p>",
        "id": 153941562,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1519930560
    },
    {
        "content": "<p>The main problem I see with this is that it removes the ability to search for what would be <code>?disposition=*</code> -- you can't run a single search for both active and cancelled resources at once. (Unless I further cheat and special-case \"*\" or \"any\" or something like that.)</p>",
        "id": 153941568,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1519931044
    },
    {
        "content": "<p>our collective opinion of defaults is gradually hardening to complete rejection where ever we can. the downstream consequences are pernicious.</p>",
        "id": 153941607,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519937643
    },
    {
        "content": "<p>I think this is a bad idea too - the clients should always be specific - anything else will lead to unsafe consequences later.</p>",
        "id": 153941608,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519937671
    },
    {
        "content": "<p>Graham, thanks -- your input is VERY appreciated.</p>\n<p>In this case, I just worry more about unsophisticated API users getting back resources that have effectively been logically deleted. I'd rather make it harder for them to accidentally show their users data that's out of date. Any further thoughts?</p>",
        "id": 153941612,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1519938518
    },
    {
        "content": "<p>I understand the desire.  And there's a value question here - make it easier for newbies makes it harder for non-newbies. Sometimes, that's a good tradeoff. But sometimes it's not. and in this case, the converse is that the applications expecting standard behaviour won't get it.</p>",
        "id": 153941613,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519939041
    },
    {
        "content": "<p>having said that, Argonaut interfaces work this way, because of your concern. I think it's a mistake that will become due eventually, but they didn't listen to me on that subject. So you wouldn't stand alone on this</p>",
        "id": 153941614,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519939088
    },
    {
        "content": "<p>To make it slightly less-not-supported (hah), it might be good to add an official mechanism for text wildcard searches?</p>",
        "id": 153941615,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1519939268
    },
    {
        "content": "<p>(On a specific field/param that is, unlike the _content param.)</p>",
        "id": 153941616,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1519939299
    },
    {
        "content": "<p>can you describe this further?</p>",
        "id": 153941618,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519939391
    },
    {
        "content": "<p>And FWIW, I <strong>entirely</strong> understand your concern: it's definitely a risk/tradeoff/whatever. I'm still not 100% on it, but I'm leaning towards it being the right move for our use case.</p>",
        "id": 153941619,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1519939441
    },
    {
        "content": "<blockquote>\n<p>can you describe this further?</p>\n</blockquote>\n<p>If the service assumes a default <code>?disposition=active</code>, how would an API user negate that when they explicitly want to, such that results aren't filtered by <code>disposition</code>?</p>",
        "id": 153941620,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1519939520
    },
    {
        "content": "<p>well, yes, that's a question. One way would be to list the ones they do want:<br>\ndisposition=active,errorr</p>",
        "id": 153941621,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519939613
    },
    {
        "content": "<p>!</p>\n<p>Duh -- great idea. Okay, so that's a nonissue. Thanks.</p>",
        "id": 153941622,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1519939695
    },
    {
        "content": "<p>That would work unless disposition has no value, but an extension.</p>",
        "id": 153941631,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1519940667
    },
    {
        "content": "<p>yes you'd have to rule that out</p>",
        "id": 153941634,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519940799
    },
    {
        "content": "<p>For this specific implementation, it'll only ever have one of two values.</p>",
        "id": 153941660,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1519945312
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> You have anything to say about how default search params is working out so far for Argonaut? Any particular things I should be nervous about if we do that on CMS' Blue Button to filter out logically deleted EOBs?</p>",
        "id": 153941662,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1519945431
    },
    {
        "content": "<p>My preference is to have consistent API behavior -- no defaults, and apps that want to filter can filter.</p>",
        "id": 153941663,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1519945877
    },
    {
        "content": "<p>Are ya'all using them in Argonaut? If so, what for/where? (Apologies if not.)</p>",
        "id": 153941664,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1519946313
    },
    {
        "content": "<p>in the argonaut context, searching for any clinical resource (e.g. Condition) will only return conditions out of the current problem list. There's no access to search past historical problems</p>",
        "id": 153941670,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519947278
    },
    {
        "content": "<p>Where does it say that? I'm looking at <a href=\"http://www.fhir.org/guides/argonaut/r2/StructureDefinition-argo-condition.html\" target=\"_blank\" title=\"http://www.fhir.org/guides/argonaut/r2/StructureDefinition-argo-condition.html\">http://www.fhir.org/guides/argonaut/r2/StructureDefinition-argo-condition.html</a> and can't see anything...</p>",
        "id": 153941682,
        "sender_full_name": "David Hay",
        "timestamp": 1519950470
    },
    {
        "content": "<p>it's even better because it doesn't say that. That's just how it works</p>",
        "id": 153941690,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519954381
    },
    {
        "content": "<p>I believe that if you want \"current\" you search with statuses. You can see that in the example. No default behavior</p>",
        "id": 153941785,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1520005069
    },
    {
        "content": "<p>If there are servers defaulting that to some set of statuses, that is news to me :)</p>",
        "id": 153941787,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1520005124
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  Have you seen this work that way in a FHIR server?</p>",
        "id": 153941803,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1520015891
    },
    {
        "content": "<p>no I admit I have not tested this, I was only going off the argument on the argonaut email list about 2 years ago</p>",
        "id": 153941825,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1520021740
    },
    {
        "content": "<p>I think that was more in regards to having the capability to get \"current' state of lists from the normal query than requiring List. I don't think anyone would argue that getting \"snapshot in time\" lists would require List.</p>",
        "id": 153941853,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1520030265
    },
    {
        "content": "<p>But it's been a while :)</p>",
        "id": 153941854,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1520030283
    },
    {
        "content": "<p>And it's Friday.</p>",
        "id": 153941855,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1520030314
    },
    {
        "content": "<p>but getting the current state of the lists from the normal query rules out processing the query more generally. I didn't argue for support for List, but for _list, which is a different thing. Though it's water under the bridge now</p>",
        "id": 153941856,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1520030622
    }
]