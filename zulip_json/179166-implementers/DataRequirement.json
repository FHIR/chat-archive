[
    {
        "content": "<p>How do we refer to extensions using DataRequirement? For example if we need birthTime what do we put in mustSupport? can't just put \"extension\" as this would match any extensions on Patient.</p>",
        "id": 153867664,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1484597190
    },
    {
        "content": "<p>You would have the DataRequirement refer to a profile that specified the extension. I realize that doesn't quite convey the same meaning, so I'm thinking about how you would specify mustSupport.</p>",
        "id": 153867753,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1484610152
    },
    {
        "content": "<p>I suppose if the extension is listed in the profile, you are effectively saying, you must give me a Patient that conforms to a profile that contains this extension, so that implies that you must support the extension, right?</p>",
        "id": 153867754,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1484610223
    },
    {
        "content": "<p>Yeah. profile is QI-Patient, it doesn't specify the field.</p>",
        "id": 153867755,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1484610225
    },
    {
        "content": "<p>But I want birthTime from the patient, mustSupport should indicate that birthTime is used.</p>",
        "id": 153867756,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1484610272
    },
    {
        "content": "<p>QI-Patient includes birthTime: <a href=\"http://build.fhir.org/ig/cqframework/qi-core/qicore-patient.html\" target=\"_blank\" title=\"http://build.fhir.org/ig/cqframework/qi-core/qicore-patient.html\">http://build.fhir.org/ig/cqframework/qi-core/qicore-patient.html</a></p>",
        "id": 153867757,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1484610344
    },
    {
        "content": "<p>but this doesn't tell the consuming system that birthTime is the field we are looking for, a QI-Patient has many fields.</p>",
        "id": 153867758,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1484610376
    },
    {
        "content": "<p>Yeah, it's not quite the same as mustSupport, I agree.</p>",
        "id": 153867759,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1484610402
    },
    {
        "content": "<p>So mustSupport is just a string, you could just put the code of the extension in, so patient-birthTime in this case.</p>",
        "id": 153867761,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1484610507
    },
    {
        "content": "<p>Can you submit a tracker on this?</p>",
        "id": 153867762,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1484610573
    },
    {
        "content": "<p>sure, a tracker to update the documentation or to modify DataRequirement?</p>",
        "id": 153867763,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1484610642
    },
    {
        "content": "<p>To support the use case. I'd propose using the code of the extension, but would want feedback and review from others about whether that's the right approach.</p>",
        "id": 153867764,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1484610711
    },
    {
        "content": "<p>Ok, thanks.</p>",
        "id": 153867765,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1484610727
    },
    {
        "content": "<p>Another question for DataRequirement: what is the correct FHIR way of indicating that a resource which was prompted for through a DataRequirement does not apply to a Patient? For example, the DataRequirement page gives an example of Procedure -&gt; Total Colectomy Value Set . The expectation is if the patient had this procedure the system receiving the DataRequirement will add it to the patient record. What if the patient did not have the procedure performed or there is no information about it, how can the receiving system of a DataRequirement respond that the resource doesn't apply to the given patient?</p>",
        "id": 153867844,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1484667559
    },
    {
        "content": "<p>How do we specify the type of a choice or Reference field in \"mustSupport\" of DataRequirement (<a href=\"http://build.fhir.org/metadatatypes.html#DataRequirement\" target=\"_blank\" title=\"http://build.fhir.org/metadatatypes.html#DataRequirement\">http://build.fhir.org/metadatatypes.html#DataRequirement</a>) ? We need to communicate to the system that a specific type is required for a given field in mustSupport.</p>",
        "id": 153871286,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1487025716
    },
    {
        "content": "<p>Specify a profile that indicates the type.</p>",
        "id": 153871287,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1487025835
    },
    {
        "content": "<p>e.g. <a href=\"http://hl7.org/fhir/StructureDefinition/Coding\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/Coding\">http://hl7.org/fhir/StructureDefinition/Coding</a> - that is the URI for the base Coding data type</p>",
        "id": 153871288,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487025948
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> so this means we need to create a profile on the DataRequirement \"type\" resource which restricts the type of choice/Reference fields in the mustSupport path?</p>",
        "id": 153871289,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1487026067
    },
    {
        "content": "<p>No, you create a profile on the type that you want to restrict the type of the choice and specify that profile in the DataRequirement.</p>",
        "id": 153871290,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1487026108
    },
    {
        "content": "<p>Right. So if we have a DataRequirement for type \"Observation\" which requires valueQuantity we create a profile on \"Observation\", restrict the value field in it and add that profile to the profile field in the DataRequirement?</p>",
        "id": 153871291,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1487026170
    },
    {
        "content": "<p>Yes, exactly.</p>",
        "id": 153871292,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1487026190
    },
    {
        "content": "<p>Ok, thanks.</p>",
        "id": 153871293,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1487026207
    },
    {
        "content": "<p>mustSupport can only indicate that that element is referenced by the logic, it doesn't allow you to put any constraints on the type of the element, you need profiles for that.</p>",
        "id": 153871294,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1487026222
    },
    {
        "content": "<p>If you have a choice of data types and want to declare some as \"must support\" and others as optional, you can slice by type</p>",
        "id": 153871306,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487027860
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>, using slices does not appear to fix the problem for our use case. Specifically for the following example: <br>\n1) A profile on Condition has a list of 6 slices for stage.Assessment.<br>\n2) Using DataRequirement I would like to specify that I require only slices 2, and 6<br>\nI can specify stage.Assessment in DataRequirement.mustsupport, but how do I specify that I only require specific slices?<br>\nAs far as I understand the string in DataRequirement.mustsupport refers to the path which is the same among all slices.<br>\nAppreciate your feedback. </p>",
        "id": 153872097,
        "sender_full_name": "Sadiq Saleh",
        "timestamp": 1487271802
    },
    {
        "content": "<p>the cardinality of siices 2 and 6 would be 1..1 and the rest 0..1</p>",
        "id": 153872129,
        "sender_full_name": "Eric Haas",
        "timestamp": 1487277558
    },
    {
        "content": "<p>Can you set the cardinality of the slices in datarequirement? I thought that they can only be set in the profile, which would mean I would have to create one profile to use slices 2 and 6, and a second profile to use slices 1 and 5 at another time?</p>",
        "id": 153872143,
        "sender_full_name": "Sadiq Saleh",
        "timestamp": 1487281750
    },
    {
        "content": "<p>You can't specify slice cardinality with a DataRequirement.</p>",
        "id": 153872185,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1487288705
    },
    {
        "content": "<p>The whole point of a DataRequirement is that it's potentially inferrable and that you can reason over them (combine them to produce a \"covering\" set).</p>",
        "id": 153872187,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1487288754
    },
    {
        "content": "<p>So to come back to my original question then, how can I refer to specific sllice(s) in an array for datarequirement since the path is the same for all the slices.</p>",
        "id": 153872457,
        "sender_full_name": "Sadiq Saleh",
        "timestamp": 1487356833
    },
    {
        "content": "<p>Would it make sense to have a urifilter attribute for datarequirement, to allow references to specific profiles instead?<br>\nWhat this would mean is that you could specify a path (e.g. Condition.stage.assessment.reference.resolve().meta.profile) and specify a list of uri's that should be returned, and thus what profiles should be returned?</p>",
        "id": 153872963,
        "sender_full_name": "Sadiq Saleh",
        "timestamp": 1487694363
    },
    {
        "content": "<p>I'm not sure I understand, how is this different than what's there now? You can specify a type and an optional profile.</p>",
        "id": 153872964,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1487694872
    },
    {
        "content": "<p>How do you specify a type now <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> ? DataRequirement only allows a path in \"mustSupport\",  We need a way to tell the receiving system that a given reference on the path is a specific Profile. For example, if you have Condition, the context may be Encounter or EpisodeOfCare. If our mustSupport = \"context.length\" how does the receiving system know we want the length of an Encounter ? If we had a uriFilter like we have a codeFilter then we could put in there that \"context\" is a profile of Encounter and not EpisodeOfCare.</p>",
        "id": 153872997,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1487713002
    },
    {
        "content": "<p>Okay, I see what you're saying, and I was referring to the ability to specify type and profile for the root type of the data requirement. For mustSupport, what you are saying is only that your logic references that path, not that it has to be of a particular type. For the Condition example, what you'd be saying with a path of context.length is that you accessed the length attribute of the context element. If you access the length and the runtime value happens to be an episodeOfCare, you'll get a null (the path is a FhirPath expression, so accessing length returns an empty list). If you want to require that the context is an Encounter, you need to specify that information with a profile of Condition.</p>",
        "id": 153873010,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1487738962
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191606\">@Stefan Dimitrov</span> sorry, forgot to tag you.</p>",
        "id": 153873011,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1487739023
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> thank you for the detailed response. In the first case (null value) the end result will be a failed use case for users, largely because the two systems (DataRequirement provider and DataRequirement consumer) failed to communicate what type of data is needed. If we could add the uriFilter it would enable a more user friendly experience where the EHR system can pre-fill the resources according to the DataRequirement \"mustSupport\", leaving the physician to provide only concrete patient-specific details. The second option (specific profile per resource reference) would require defining the profile on the fly (based on the underlying library / CQL) and will put an unnecessary burden on the receiving system to retrieve, parse and process profile definitions on the fly. We can't just pre-define the profile, it depends on runtime CQL evaluation.</p>",
        "id": 153873047,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1487774364
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191606\">@Stefan Dimitrov</span> for me there are two separate considerations here: 1) Is the consuming system likely to be able to use a uriFilter to determine what should be populated? and 2) What is the impact of adding the notion of a uriFilter to the DataRequirement? For the first consideration, I would suggest that it's currently not very likely, we're not even sure how likely it is that they'll be able to dynamically react to the currently specified information in a DataRequirement, so adding functionality without knowing where that line is seems premature. For the second consideration, which I think is more impactful to the design of DataRequirement, the question is how likely is a uriFilter to correlate with an underlying access mechanism (like an index). The current filters of code and date were specifically chosen because they are ubiquitous in storing and searching clinical information, so they are the most likely to match up with (and have the most selectivity for) existing systems. It's unlikely that a uriFilter would correspond to any specific access mechanism, so adding it to the DataRequirement would increase the implementation burden for an underlying data access layer but without any significant pefrormance improvement.</p>",
        "id": 153873190,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1487892522
    },
    {
        "content": "<p>Few questions about DataRequirement. First, is this metadata type going to be impacted at all by the GuidanceResponse deprecation?</p>\n<p>Second (and if not), how does one signify in 'mustSupport' that you would like to interpreting system to include a particular extension. The path alone is insufficient to say \"please send me a condition resource with the body-structure extension\" unless you use FHIRPath filtering function like:<br>\n\"mustSupport\": [{<br>\n\"extension.where(uri = <a href=\"http://hl7.org/fhir/StructureDefinition/body-structure\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/body-structure\">http://hl7.org/fhir/StructureDefinition/body-structure</a>\"<br>\n}]</p>\n<p>What is the proper mustSupport string value here? Is it sufficient to enforce this through the StructureDefinition of the profile referenced by 'dataRequirement.profile'?</p>\n<p>Thanks</p>",
        "id": 153895320,
        "sender_full_name": "Travis Stenerson",
        "timestamp": 1498584478
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> - for you</p>",
        "id": 153895348,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1498620583
    },
    {
        "content": "<p>For the first question, no, the GuidanceResponse deprecation will not impact DataRequirement, GuidanceResponse just used DataRequirement to communicate additional data needs as part of a decision support response.</p>",
        "id": 153895477,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1498670476
    },
    {
        "content": "<p>For the second question, we've had discussions about that, but haven't landed on what it should look like. Right now, the mustSupport documentation just says \"it can be a path\", but doesn't give any specifics about what that path can look like.</p>",
        "id": 153895480,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1498670972
    },
    {
        "content": "<p>Using a FHIRPath is a possibility, but it would need to be constrained to only allow for paths, and the need to allow for selecting extensions complicates that.</p>",
        "id": 153895481,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1498671043
    },
    {
        "content": "<p>Of course, you could use a profile that specified the extension and indicated must support there, but that could lead to an explosion of profiles.</p>",
        "id": 153895483,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1498671134
    },
    {
        "content": "<p>Do you mind submitting a tracker to clarify the allowed \"paths\" for DataRequirements and allow for selecting extensions?</p>",
        "id": 153895484,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1498671194
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13593\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13593\">[#13593] Summary: Clarify allowed paths in mustSupport for DataRequirement</a></p>\n<p>Let me know if there are problems with the submission, my first tracker. Thanks Bryn.</p>",
        "id": 153895662,
        "sender_full_name": "Travis Stenerson",
        "timestamp": 1498746371
    },
    {
        "content": "<p>does HAPI Fhir only support IBaseResource resources? or can we convert custom resource to IBaseResource.</p>",
        "id": 153895957,
        "sender_full_name": "arif khan",
        "timestamp": 1499084046
    },
    {
        "content": "<p>This might get more traction as a HAPI stream posting</p>",
        "id": 153895972,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1499108677
    },
    {
        "content": "<p>What would be the type code value in the DataRequirement metadatatype if I want to use the limit to indicate the number of results, i.e. repetitions of a goal in planDefinition? The target of the goal can be any of the detail types, and there are cases where there are many targets for a goal and they can be different types.</p>",
        "id": 245776711,
        "sender_full_name": "Catherine Hosage Norman",
        "timestamp": 1626148399
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span></p>",
        "id": 245777559,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1626149481
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"197370\">@Catherine Hosage Norman</span> , that sounds like a constraint you would express in a profile, rather than with a DataRequirement. Can you provide a bit more context to help me understand the use case?</p>",
        "id": 246007616,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1626290732
    }
]