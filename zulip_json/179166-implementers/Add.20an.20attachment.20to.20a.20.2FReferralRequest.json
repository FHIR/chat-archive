[
    {
        "content": "<p>Hi, this is my first post here, i see it's very active! I would like to ask a question:</p>\n<p>I'm developing a /ReferralRequest module (to receive eReferrals). One need i have is to send attachments with the payload (e.g., PDFs.). I'm trying to figure out the best way to do it, but can't quite figure out what the most accepted approach is. So far I've considered:<br>\n1) Using ReferralRequest.SupportingInfo to reference a /DocumentReference<br>\n2) Using ReferralRequest.SupportingInfo to reference a /DocumentManifest<br>\n3) Using referralRequest.SupportingInfo to reference a /Attachment<br>\n4) Adding an extension<br>\n5) Other?</p>\n<p>I want to chose one core way that is the simplest yet flexible approach, so that it could handle one or many documents. What would be the best way to attach a document to a /ReferralRequest.</p>\n<p>Any assistance is greatly appreciated!</p>",
        "id": 153891200,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1495655328
    },
    {
        "content": "<p>If it's a pure PDF with no metadata, I'd use supportingInfo to point to a Binary.  If you've got metada, then DocumentReference or Media could work, with a preference for Media.  You can't point to it as an Attachment because that's a data type.</p>",
        "id": 153891219,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1495659570
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193959\">@Tim Berezny</span> DocumentManifest is to identify a collection of documents associated with each other, so that's not a candidate.<br>\nI don't like Media because it isn't an image/video/audo.<br>\nLloyd is correct about using Attachment directly, however,  you could put it in DocumentReference.content.attachment.<br>\nSo, in my mind, you're looking at Binary or DocumentReference. Or Binary AND DocumentReference -- sinceDocumentReference.content.attachment.url could point to something stored under Binary. If you use DocumentReference, I would suggest using Binary or some other place outside of the DocumentReference to store the content (i.e., don't use attachment.data), since there may be good use cases for retrieving the metadata separately from the document content.</p>",
        "id": 153891245,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1495666130
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span>  Why is media restricted to image/video/audio? seems arbitrary.   Also depending on the context could  point  to Diagnostic Report or Observation.  DocRef seems like a good choice to me.  </p>",
        "id": 153891246,
        "sender_full_name": "Eric Haas",
        "timestamp": 1495669859
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> , well, the scope of the resource is \"A photo, video, or audio recording acquired or used in healthcare. \" and the mandatory element type is a code limited to audio, video, or photo. I don't think there's any intention of being able to put something like a PDF in there.</p>",
        "id": 153891265,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1495691740
    },
    {
        "content": "<p>I think this should support any media type - and PDF is included in this. One would assume any media could be passed with a format (application/pdf) and then processed as such. This way you then have futureproofing with things like STL files for 3d-printed braces as an example</p>",
        "id": 153891268,
        "sender_full_name": "Nate Walker",
        "timestamp": 1495703512
    },
    {
        "content": "<p>Actually, a binary would work for this. But then why do we have binary and media when media can be a subset of binary?</p>",
        "id": 153891269,
        "sender_full_name": "Nate Walker",
        "timestamp": 1495703668
    },
    {
        "content": "<p>Binary has no metadata beyond mime type.  It's just intended to store the blob.  Media is focused on the metadata.  It <em>can</em> include the blob, but may just point to it.  And the metadata Media has is focused on images and videos.  DocumentReference serves a similar purpose for document-type blobs.</p>",
        "id": 153891275,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1495717011
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span>  and <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> , thanks, that's a big help. For the purposes of sending a referral, the metadata requirements are pretty light I think. We probably want to preserve the filename, and perhaps some classifier about what kind of document it is (e.g., assessment report, consult request note, etc...). </p>\n<p>Sounds like it's between /DocumentReference and /attachment (with a preference for using the URL instead of .data). </p>\n<p>However, on the .url vs .data issue, practically speaking for eReferrals, a common use case would be to send from an EMR (particularly locally deployed client-based physician office solutions) that has no capability of providing a .url to reference to. i.e., it wants to send the referral off in one transaction and be done with it. In this case, is .data the way to go?</p>\n<p>Reviewing /DocumentReference a bit more, it feels like overkill for referral purposes. I don't think i have any need for any of the \"required\" fields in that resource, i would likely just be filling those with placeholders. </p>",
        "id": 153891282,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1495719328
    },
    {
        "content": "<p>You can't use /attachment directly because it's a data type.  You can only point to a resource.  So you'd be looking at DocumentReference and populating the DocumentReference.content.attachment.  If you want the content embedded, you'd use .data.  If you think the requirements on DocumentReference are overkill, feel free to submit a change request.  (I tend to agree, but I'm not an implementer of it, so my opinion has less weight :))</p>",
        "id": 153891291,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1495723948
    },
    {
        "content": "<p>There are only a few required fields in DocumentReference: status, type, indexed, and content.attachment. I don't think that's overkill for your use case. Status is whether the document is current or not (in your case, I'd assume it is); you're already suggsting using the type to classify the document; and indexed is just when you added the document. All sound reasonable for your use case.<br>\nMy preference for attachment.data vs attachment.url is just my preference; the standard allows either, so do what works best for you. However, I disagree with your reasoning about not having a usable URL. You can submit a Bundle containing the DocumentReference, and a Binary containg the document, and the attachment.url will point to the resulting Binary. This allows you to separate the data blob from the metadata. </p>",
        "id": 153891300,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1495728768
    },
    {
        "content": "<p>indexed is overkill.  It's not needed, so we shouldn't force it to be present.  I'm not sure if it's reasonable to mandate type all the time either.  It doesn't seem to meet the use-case of \"can't possibly do anything with the resource instance if this is unknown\"</p>",
        "id": 153891306,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1495729632
    },
    {
        "content": "<p>OK, that logic seems reasonable. I'll file a tracker. However, I don't think the current requirements get in the way of <span class=\"user-mention\" data-user-id=\"193959\">@Tim Berezny</span>'s use case.</p>",
        "id": 153891307,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1495729791
    },
    {
        "content": "<p>I think the issue is the  DocumentReference  <em>is</em> really confusing  if you don't understand its context of XDS and IHE stuff I forced myself to read several times to begin to understand it all.   Media is straight forward easy-peasy and adding documents to its scope could make that a whole lot easier too.  But then we have multiple ways for doing the same stuff  :-( </p>",
        "id": 153891308,
        "sender_full_name": "Eric Haas",
        "timestamp": 1495729983
    },
    {
        "content": "<p>I'd be happy if DocumentReference were clarified a bit to be less XDS-centric and to recognize its use as just a way of passing around wrapped documents and similar artifacts</p>",
        "id": 153891309,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1495730219
    },
    {
        "content": "<p>re  \"passing around wrapped documents and similar artifacts \"  to my earlier point what makes a pdf unique from a png or mpg and whatever else is out there or in the future.  These boundaries are blurry</p>",
        "id": 153891311,
        "sender_full_name": "Eric Haas",
        "timestamp": 1495730517
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13447\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13447\">GF#13447</a> for min cardinality.</p>",
        "id": 153891313,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1495730589
    },
    {
        "content": "<p>Well, Media has metadata for image height and width.  DocumentReference has metadata for document type.  So they're definitely targeted to wrap different types of artifacts.  Making the distinction and relationships clear in their intros would be a good idea though.</p>",
        "id": 153891314,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1495730707
    },
    {
        "content": "<p>OK picking on Lloyd again.  We had conversions about Media being a type of Observation  but DR not so much in my opinion.  </p>",
        "id": 153891315,
        "sender_full_name": "Eric Haas",
        "timestamp": 1495731475
    },
    {
        "content": "<p>and to take it step further everywhere there is Media do we need to consider DR?</p>",
        "id": 153891316,
        "sender_full_name": "Eric Haas",
        "timestamp": 1495731542
    },
    {
        "content": "<p>I'm looking here, <a href=\"https://www.hl7.org/fhir/documentreference.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/documentreference.html\">https://www.hl7.org/fhir/documentreference.html</a> and see the required fields for /DocumentReference as status, docstatus, relatesTo.code. And it says type is preferred not required, and no required marking on index. These are different than what <span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span>  mentioned, am I looking in the wrong spot?</p>\n<hr>\n<p>My comments on the required fields in /DocumentReference, for the purpose of eReferral<br>\n1. Status: will always = \"current\".  eReferrals are kind of transient by definition, it's not a repository. So it would be a pretty big stretch to think of a scenario where that gets =\"superseded\". I can conceive of it... but only mildly. I can include it, but realistically i would likely make it an optional field to my eReferral API.<br>\n2. docStatus: similarly to status, i will probably just always set it to \"final\", and make it optional to input to my eReferral API. <br>\n3. relatesTo.code: I don't understand this one or how it might be useful in an eReferral context. (Is this one of those XDS/IHE-ish types of fields you mention?)</p>\n<hr>\n<p>Regarding Using a bundle for the URL reference: Right, ok, that makes sense. Thanks.</p>",
        "id": 153891317,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1495732491
    },
    {
        "content": "<p>By \"required\", we meant \"minOccurs = 1\".</p>",
        "id": 153891320,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1495734323
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193959\">@Tim Berezny</span> I'm looking at the same place, but differ in how I read it. docStatus is 0..1, so it's optional; relatesTo.code is 1..1, but  relatesTo is 0..*, so relatesTo.code is required only if relatesTo is present. type is 1..1 so it is required, but the vocabulary to use is not fixed -- there is only a recommendation.<br>\nI agree that in your case, you'll probably always use status=current.</p>",
        "id": 153891321,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1495734323
    },
    {
        "content": "<p>Ooooh, I see. Thanks for that clarification. I've been looking for \"required\" in the description field, but i see now that that relates more to the valueset that is used with the variable.</p>",
        "id": 153891323,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1495737450
    },
    {
        "content": "<p>Another question, would the \"title\" field in the attachment datatype be the right spot to put the original filename?</p>",
        "id": 153891351,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1495809410
    },
    {
        "content": "<p>It's more for the document name, not necessarily the file name.</p>",
        "id": 153891357,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1495811547
    },
    {
        "content": "<p>Is there another spot allocated for the filename? I'm looking between attachment and documentReference and don't see a spot.</p>",
        "id": 153891407,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1495831823
    },
    {
        "content": "<p>Not yet.  So far, there hasn't been a use-case for sharing it.  What's the purpose?</p>",
        "id": 153891422,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1495846487
    },
    {
        "content": "<p>I usually put filename in the attachment title - if I have a filename, I usually don't have anything else to put in the title, and it's the most descriptive thing that there is </p>",
        "id": 153891441,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1496003364
    },
    {
        "content": "<p>and when I'm pulling something out of an attachment and looking for a filename, I convert the title to a valid filename (strip characters etc)</p>",
        "id": 153891442,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1496003398
    },
    {
        "content": "<p>Good to know, thanks. I think i'll pursue that approach of putting filename into the title.</p>",
        "id": 153891713,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1496177957
    }
]