[
    {
        "content": "<p>As per documentation <a href=\"https://www.hl7.org/fhir/resource-definitions.html\">https://www.hl7.org/fhir/resource-definitions.html</a>, Resource ID must be certain format and minimum 1 &amp; maximum 64 characters. <br>\nAs we have python implementation <a href=\"https://github.com/nazrulworld/fhir.resources/pull/48\">https://github.com/nazrulworld/fhir.resources/pull/48</a> , currently <a href=\"http://Resource.id\">Resource.id</a> datatype is string currently,<br>\nit is possible to use Id type but some tests are failing because some resources ID is longer than 64 (example resources).<br>\nMy question here <a href=\"http://Resource.id\">Resource.id</a> value would always be 64 characters maximum in length or we should not add that constraint. ?</p>",
        "id": 223096779,
        "sender_full_name": "Md Nazrul Islam",
        "timestamp": 1610962080
    },
    {
        "content": "<p>See <a href=\"#narrow/stream/179166-implementers/topic/Resource.2Eid.20restrictions\">https://chat.fhir.org/#narrow/stream/179166-implementers/topic/Resource.2Eid.20restrictions</a> , which discusses this very same topic.</p>",
        "id": 223097766,
        "sender_full_name": "René Spronk",
        "timestamp": 1610962657
    },
    {
        "content": "<p>short answer: we're not going to change the 64 character limit</p>",
        "id": 223108960,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1610969573
    },
    {
        "content": "<p>Another short answer:  not all systems generate ids within that 64 character limit...</p>",
        "id": 223122994,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1610978584
    },
    {
        "content": "<p>short comment: hash them if too long</p>",
        "id": 223127452,
        "sender_full_name": "René Spronk",
        "timestamp": 1610980757
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179166-implementers/topic/Resource.2Eid.20Data.20Type/near/223108960\">said</a>:</p>\n<blockquote>\n<p>short answer: we're not going to change the 64 character limit</p>\n</blockquote>\n<p>But I see <a href=\"https://www.hl7.org/fhir/R4/resource.profile.json.html\">https://www.hl7.org/fhir/R4/resource.profile.json.html</a> here in profile description <a href=\"http://Ressource.id\">Ressource.id</a> value is String <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 223161848,
        "sender_full_name": "Md Nazrul Islam",
        "timestamp": 1611002269
    },
    {
        "content": "<p>it is, but that doesn't change the fact that the length limit applies. <span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span> yes, that's a challenge, but we can't make it indefinite, and you only get out past 64 chars if you're doing some inefficient construction mechanism (inefficient in terms of entropy density), and anything beyond 64 chars is just trading between issues. however the 64 character limit is from an external standard</p>",
        "id": 223163876,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1611004034
    },
    {
        "content": "<p>The 64 character limit is also normative - so we're past the point where we can realistically change it.</p>",
        "id": 223171435,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611010997
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> what about changing the field type in the specification? it sounds like it indeed needs to be <code>Resource.Id</code> and not <code>String</code>.</p>",
        "id": 223646723,
        "sender_full_name": "Itay Goren",
        "timestamp": 1611325227
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"378903\">@Itay Goren</span> change what?</p>",
        "id": 223648409,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611326088
    },
    {
        "content": "<p>it says here <a href=\"https://www.hl7.org/fhir/R4/resource.profile.json.html\">https://www.hl7.org/fhir/R4/resource.profile.json.html</a> that the type of <code>Resource.id</code> is <code>String</code> and not <code>Id</code>. Hence, any automated tool run on this specification, creates a different type.</p>",
        "id": 223652696,
        "sender_full_name": "Itay Goren",
        "timestamp": 1611327954
    },
    {
        "content": "<p>yes you could create a task to fix the value of the <a href=\"http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type\">http://hl7.org/fhir/StructureDefinition/structuredefinition-fhir-type</a> extension to 'id'</p>",
        "id": 224940018,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1612301624
    },
    {
        "content": "<p>Thanks a lot for all clarifications. With the new release of the <a href=\"https://pypi.org/project/fhir.resources/6.1.0/\">https://pypi.org/project/fhir.resources/6.1.0/</a>  [Python implementation]  now PrimitiveType.Id has a default behavior of a maximum of 64 characters but as a part developer's flexibility, it is possible to change the default behavior, for example allowing more characters, even possible to implement a new regex.<br>\n<a href=\"https://github.com/nazrulworld/fhir.resources#resourceid-aka-fhirtypesid-constraint-extensibility\">https://github.com/nazrulworld/fhir.resources#resourceid-aka-fhirtypesid-constraint-extensibility</a></p>",
        "id": 226240185,
        "sender_full_name": "Md Nazrul Islam",
        "timestamp": 1613214971
    }
]