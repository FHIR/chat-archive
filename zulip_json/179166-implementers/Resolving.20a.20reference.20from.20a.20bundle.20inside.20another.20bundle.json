[
    {
        "content": "<p>I'm working on a use case where it might be useful to include multiple searchset bundles within a response message. The searches would all relate to one patient, so resources within the searchset bundles will contain references to that same patient. </p>\n<p>I'd like to include the Patient resource just once, within the \"outside\" message bundle, to be referenced by resources within the \"nested\" searchset bundles. The structure would be something like: </p>\n<p>Bundle (type: message)</p>\n<ul>\n<li>Patient/1  (the patient for whom multiple searches have be performed)</li>\n<li>Bundle (searchset)<br>\n      -  entry: Observation (containing a reference to Patient/1)<br>\n...</li>\n</ul>\n<p>My question is: <strong> Does the searchset Observation's reference to Patient/1  legitimately resolve to the resource in the outer bundle.</strong></p>\n<p>It wasn't clear to me in the <a href=\"http://build.fhir.org/bundle.html#references\">resolving references in Bundles</a> section whether references could resolve to a containing bundle. <br>\nThanks!</p>",
        "id": 205138978,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1595867526
    },
    {
        "content": "<p>There's no support for resolution across Bundles.  However, in a search-set, there's no expectation for resolution within a Bundle except for items that are marked as 'includes' (which are expected to be pointed to by something else in the Bundle with a pathway to one of the matching resources).  It would be fine to have a batch of queries, one of which just asked for Patient and others asking for various other information.  The linkages should be resolvable once you import/process all of the search-set Bundles because the full URLs should allow de-referencing.</p>",
        "id": 205141212,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1595868719
    },
    {
        "content": "<p>Thanks Lloyd for the clarification. Just what I needed to understand</p>",
        "id": 205142555,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1595869377
    }
]