[
    {
        "content": "<p>Wondering if anyone here can help me with an odd validation error while attempting to use HAPI to create a DSTU2 FHIR ReferralRequest context from a JSON string. Specifically with the HAPI method: FhirContext.forDstu2().newJsonParser().parseResource( &lt;JSON string&gt; ).</p>\n<p>The JSON string is well formed and seems to pass validation in the FHIR test server. But in my code I get validation errors for perfectly valid elements.</p>\n<p>This is the error log:</p>\n<p>INFO: Creating new FHIR context for FHIR version [DSTU2]<br>\nJan 17, 2017 6:44:37 PM ca.uhn.fhir.parser.LenientErrorHandler unknownElement<br>\nWARNING: Unknown element 'name' found while parsing<br>\nJan 17, 2017 6:44:37 PM ca.uhn.fhir.parser.LenientErrorHandler unknownElement<br>\nWARNING: Unknown element 'telecom' found while parsing<br>\nJan 17, 2017 6:44:37 PM ca.uhn.fhir.parser.LenientErrorHandler unknownElement<br>\nWARNING: Unknown element 'telecom' found while parsing<br>\nJan 17, 2017 6:44:37 PM ca.uhn.fhir.parser.LenientErrorHandler unknownElement<br>\nWARNING: Unknown element 'telecom' found while parsing<br>\nJan 17, 2017 6:44:37 PM ca.uhn.fhir.parser.LenientErrorHandler unknownElement<br>\nWARNING: Unknown element 'gender' found while parsing<br>\nJan 17, 2017 6:44:37 PM ca.uhn.fhir.parser.LenientErrorHandler unknownElement<br>\nWARNING: Unknown element 'birthDate' found while parsing<br>\nJan 17, 2017 6:44:37 PM ca.uhn.fhir.parser.LenientErrorHandler unknownElement<br>\nWARNING: Unknown element 'address' found while parsing<br>\nJan 17, 2017 6:44:37 PM ca.uhn.fhir.parser.LenientErrorHandler unknownElement<br>\nWARNING: Unknown element 'careProvider' found while parsing<br>\nJan 17, 2017 6:44:37 PM ca.uhn.fhir.parser.LenientErrorHandler unknownElement<br>\nWARNING: Unknown element 'id' found while parsing<br>\nJan 17, 2017 6:44:37 PM ca.uhn.fhir.context.FhirContext &lt;init&gt;</p>",
        "id": 153867988,
        "sender_full_name": "Dennis Warren",
        "timestamp": 1484710929
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"193287\">@Dennis Warren</span>, that should work properly for sure.</p>\n<p>Would you be able to provide the string you're passing in (or even a subset of it?)</p>",
        "id": 153868216,
        "sender_full_name": "James Agnew",
        "timestamp": 1484770536
    },
    {
        "content": "<p>Thank you James;</p>\n<p>This is the JSON string being passed: </p>\n<p>{<br>\n  \"resourceType\": \"ReferralRequest\",<br>\n  \"id\": \"Ref/4597856131\",<br>\n  \"status\": \"requested\",<br>\n  \"date\": \"2017-01-18T15:32:00-05:00\",<br>\n  \"patient\": {<br>\n    \"resourceType\": \"Patient\",<br>\n    \"name\": [<br>\n      {<br>\n        \"given\": [<br>\n          “Test\"<br>\n        ],<br>\n        \"family\": [<br>\n          “Patient\"<br>\n        ],<br>\n        \"text\": “Test Patient\"<br>\n      }<br>\n    ],<br>\n    \"telecom\": [<br>\n      {<br>\n        \"system\": \"phone\",<br>\n        \"value\": \"604-334-2344\",<br>\n        \"use\": \"home\"<br>\n      },<br>\n      {<br>\n        \"system\": \"phone\",<br>\n        \"value\": \"778-238-2342\",<br>\n        \"use\": \"work\"<br>\n      },<br>\n      {<br>\n        \"system\": \"email\",<br>\n        \"value\": \"<a href=\"mailto:thepatient@patient.com\" title=\"mailto:thepatient@patient.com\">thepatient@patient.com</a>\",<br>\n        \"use\": \"home\"<br>\n      }<br>\n    ],<br>\n    \"gender\": \"male\",<br>\n    \"birthDate\": \"1966-06-17\",<br>\n    \"address\": [<br>\n      {<br>\n        \"line\": [<br>\n          \"123 Abc Street\"<br>\n        ],<br>\n        \"city\": \"Vancouver\",<br>\n        \"state\": \"BC\"<br>\n      }<br>\n    ],<br>\n    \"careProvider\": [<br>\n      {<br>\n        \"resourceType\": \"Practitioner\",<br>\n        \"name\": {<br>\n          \"given\": [<br>\n            \"Doctor\"<br>\n          ],<br>\n          \"family\": [<br>\n            \"Love\"<br>\n          ],<br>\n          \"text\": \"Doctor Love\"<br>\n        },<br>\n        \"telecom\": [<br>\n          {<br>\n            \"system\": \"phone\",<br>\n            \"value\": \"604-498-3456\",<br>\n            \"use\": \"work\"<br>\n          }<br>\n        ],<br>\n        \"id\": \"Practitioner/1\"<br>\n      }<br>\n    ],<br>\n    \"id\": \"Patient/1\"<br>\n  },<br>\n  \"priority\": {<br>\n    \"text\": \"\"<br>\n  }<br>\n}</p>",
        "id": 153868426,
        "sender_full_name": "Dennis Warren",
        "timestamp": 1484852180
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"193287\">@Dennis Warren</span>,</p>\n<p>Ahh, you can't nest resources like that in FHIR. The patient element needs to have a reference to the patient, not an actual patient resource. See the example here: <a href=\"http://hl7.org/fhir/referralrequest-example.json.html\" target=\"_blank\" title=\"http://hl7.org/fhir/referralrequest-example.json.html\">http://hl7.org/fhir/referralrequest-example.json.html</a></p>\n<p>There is a mechanism called \"contained resources\" that you can use for nesting one resource inside another, but it's intended as a last resort. You can learn about the syntax here: <a href=\"http://www.hl7.org/FHIR/references.html\" target=\"_blank\" title=\"http://www.hl7.org/FHIR/references.html\">http://www.hl7.org/FHIR/references.html</a></p>",
        "id": 153868705,
        "sender_full_name": "James Agnew",
        "timestamp": 1484955699
    },
    {
        "content": "<p>Thank you James. Referenced resources makes much more sense and really does demonstrate the power of FHIR.</p>\n<p>In this case my goal was to create a complete Referral Request into a single payload because it is not possible for the target server (host) to callback to the origin (client) for resources.  It seemed to me that the Contained Resources approach made the most sense. Is it not possible for the parser to separate each Contained Resource through the unique Resource identifiers?  And, I guess - as a work around - would be too dangerous to pull the resources out of the JSON string prior to parsing them? </p>\n<p>BTW: This conclusion was drawn by reading HAPI's resource description here: <a href=\"http://hapifhir.io/doc_resource_references.html\" target=\"_blank\" title=\"http://hapifhir.io/doc_resource_references.html\">http://hapifhir.io/doc_resource_references.html</a> </p>\n<p>I see now that the best way to transmit a single payload is as a Bundle of Resources containing relative URL's. Right?  Is it then possible for the HAPI parser to parse each resource in the Bundle automatically?</p>",
        "id": 153868743,
        "sender_full_name": "Dennis Warren",
        "timestamp": 1485057124
    },
    {
        "content": "<p>If you want to pass multiple resources in a single payload, the preferred solution is to use Bundle.  \"contained\" is for when resources *cannot* stand alone - i.e. they'll never be referenced by anything else and don't have enough information to exist as independent entities.  The URLs used in the Bundle can be relative, absolute or simple UUIDs, depending on whether the resources are available RESTfully and whether they're all on the same server or not.</p>",
        "id": 153868759,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1485099504
    }
]