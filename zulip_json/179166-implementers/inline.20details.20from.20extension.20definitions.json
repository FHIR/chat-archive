[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span> raised <a href=\"http://jira.hl7.org/browse/FHIR-26360\" target=\"_blank\" title=\"http://jira.hl7.org/browse/FHIR-26360\">FHIR#26360</a>, asking for better computable paths to resolve the meaning of extensions. Part of this can be fixed with strong (more computable) definitions hosted at the <code>Extension.url</code>, e.g. to make sure <a href=\"http://hl7.org/fhir/R4/elementdefinition-definitions.html#ElementDefinition.code\" target=\"_blank\" title=\"http://hl7.org/fhir/R4/elementdefinition-definitions.html#ElementDefinition.code\">http://hl7.org/fhir/R4/elementdefinition-definitions.html#ElementDefinition.code</a> is populated when relevant. Given this ability, how important do folks think it would be to also provide this kind of information <em>inline</em>.</p>",
        "id": 188971052,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1582581771
    },
    {
        "content": "<p>I responded to your question in the issue <a href=\"http://jira.hl7.org/browse/FHIR-26360\" target=\"_blank\" title=\"http://jira.hl7.org/browse/FHIR-26360\">FHIR#26360</a>.</p>",
        "id": 188976805,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1582586252
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> -- When you suggest setting the <code>code</code> on the <code>Extension.url</code> element -- I assume you mean in the <code>StructureDefinition</code> that <em>defines</em> the extension (as opposed to putting it on the <code>url</code> element of a <em>use</em> of the extension in some other profile), right?  I just want to be sure I'm tracking...</p>",
        "id": 188979492,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1582588904
    },
    {
        "content": "<p>That's right -- the algorithm for a client would be to dereflference the URL found in the extension and then to review the element definitions found there.</p>",
        "id": 188981345,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1582591055
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span> several comments on the task (and your comment in the task):</p>\n<ul>\n<li>\n<p>you equate extensions to observations but this would not usually be true. Generally, if it has a LOINC code, it should be an observation. There's a grey area, and you  you picked an example from there, but that shouldn't drive general policy</p>\n</li>\n<li>\n<p>I'm interested how many other extensions you identify that have codes that can be assigned? How useful are these codes? (see some stats below)</p>\n</li>\n</ul>\n<blockquote>\n<p>Finally, I believe it is allowable to bind ElementDefinition.code to a value set</p>\n</blockquote>\n<ul>\n<li>\n<p>I don't believe we have any machinery for this other than profiling structure definition itself. Is that what you mean?</p>\n</li>\n<li>\n<p>I think that adding CodeableConcept to Extension will make all but a few much more unhappy with extensions</p>\n</li>\n<li>\n<p>Why Coding and not CodeableConcept? because the inherent thing you are doing here is different, and the assertion of code binding is much tighter</p>\n</li>\n</ul>",
        "id": 188983461,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582593841
    },
    {
        "content": "<p>these stats are just for r4 core:</p>\n<div class=\"codehilite\"><pre><span></span>Total Structures: 658\nStructures with KeyWords: 0\nStructures with Element that have codes: 0\nTotal Extensions: 396\nExtensions with KeyWords: 0\nExtensions with Element that have codes: 0\n</pre></div>",
        "id": 188983519,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582593888
    },
    {
        "content": "<p>I'll have a go at doing this for all IGs in the ci-build system later</p>",
        "id": 188983531,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582593903
    },
    {
        "content": "<p>for all the r4 packages I could find to load:</p>\n<div class=\"codehilite\"><pre><span></span>Total Structures: 2172\nStructures with KeyWords: 0\nStructures with Element that have codes: 0\nTotal Extensions: 773\nExtensions with KeyWords: 0\nExtensions with Element that have codes: 0\n</pre></div>",
        "id": 188986818,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582598400
    },
    {
        "content": "<p>we're really making use of those features, that's for sure</p>",
        "id": 188986916,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582598531
    },
    {
        "content": "<p>This is the single area where FHIR implementations are complete consistent <span aria-label=\"upside down\" class=\"emoji emoji-1f643\" role=\"img\" title=\"upside down\">:upside_down:</span> .  To your points, <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>: </p>\n<ul>\n<li>Sure, and extension isn't an Observation; they are more like Observation.component, and I've been in MANY discussions about whether {thing X} should be an extension or a component. </li>\n<li>Yes, I was talking about binding the ElementDefinition.code to a value set, but on second thought, I agree there is no (reasonable) way to do that.</li>\n<li>An optional element shouldn't upset people. If they don't want to send it, well, it's optional. But for some things, like the BirthSex example, it is entirely reasonable to supply a code to let receivers know the meaning of the extension.</li>\n</ul>",
        "id": 189219671,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1582814893
    },
    {
        "content": "<p>It's always been reasonable - but so far, there's not much in the way of incentive.  Nor much likelihood of validation/review...</p>",
        "id": 189224086,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582817748
    }
]