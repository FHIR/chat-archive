[
    {
        "content": "<p>Hello,</p>\n<p>how one can search Encounters that has any individual Practitioner as reference? I use Java (and REST).</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n &quot;resourceType&quot;: &quot;Encounter&quot;,\n...\n &quot;participant&quot;: [\n   {\n     &quot;individual&quot;: {\n       &quot;reference&quot;: &quot;Practitioner/4&quot;,\n       &quot;type&quot;: &quot;role-xxx&quot;\n     }\n   }\n ]\n}\n</code></pre></div>\n\n\n<div class=\"codehilite\"><pre><span></span><code>Bundle bundle = ourClient\n      .search()\n      .forResource(Encounter.class)\n      .where(Encounter.PARTICIPANT.???\n      .returnBundle(Bundle.class)\n      .execute();\n</code></pre></div>\n\n\n<p>BR, Markku</p>",
        "id": 203731882,
        "sender_full_name": "Markku Nikkanen",
        "timestamp": 1594655200
    },
    {
        "content": "<p>Are you wanting to filter on those with a specific participant, or just that have 'some' Practitioner as a participant?</p>",
        "id": 203733325,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1594655861
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"321011\">@Markku Nikkanen</span>  did you try with _include query like _include:Encounter:practitioner</p>",
        "id": 203733546,
        "sender_full_name": "Hue Nguyen",
        "timestamp": 1594655938
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> I want to filter encounters with some Practitioner as a participant.</p>",
        "id": 203799992,
        "sender_full_name": "Markku Nikkanen",
        "timestamp": 1594704403
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"279912\">Hue Nguyen</span> It seems that query does not have effect.</p>\n<p><a href=\"http://localhost:8080/fhir/Encounter?_include:Encounter:practitioner\">http://localhost:8080/fhir/Encounter?_include:Encounter:practitioner</a></p>\n<p>gives same result as</p>\n<p><a href=\"http://localhost:8080/fhir/Encounter?_include:Encounter:kjfdsljfds\">http://localhost:8080/fhir/Encounter?_include:Encounter:kjfdsljfds</a></p>",
        "id": 203801053,
        "sender_full_name": "Markku Nikkanen",
        "timestamp": 1594706117
    },
    {
        "content": "<p>You'd better talk to your server provider, to see whether they support _include. That's a pretty basic search functionality used by quite a lot of projects.</p>",
        "id": 203801761,
        "sender_full_name": "René Spronk",
        "timestamp": 1594707173
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191372\">René Spronk</span> Following seems to work in REST but I am still missing one thing:</p>\n<p><a href=\"http://localhost:8080/fhir/Encounter?_include:Encounter:participant&amp;participant:missing=false\">http://localhost:8080/fhir/Encounter?_include:Encounter:participant&amp;participant:missing=false</a></p>\n<p>Type must be for example role-xxx. I want to return only e.g. physicians and refractionists.</p>\n<div class=\"codehilite\"><pre><span></span><code>participant&quot;: [\n   {\n     &quot;individual&quot;: {\n       &quot;reference&quot;: &quot;Practitioner/4&quot;,\n       &quot;type&quot;: &quot;role-xxx&quot;\n     }\n   }\n ]\n</code></pre></div>",
        "id": 203801771,
        "sender_full_name": "Markku Nikkanen",
        "timestamp": 1594707215
    },
    {
        "content": "<p>Encounter?_include:Encounter:participant:participant-type=role-xxx&amp;participant:missing=false ? Or Encounter?participant-type=role-xxx&amp;_include:Encounter:participant&amp;participant:missing=false</p>",
        "id": 203802045,
        "sender_full_name": "René Spronk",
        "timestamp": 1594707687
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191372\">René Spronk</span> <a href=\"#narrow/stream/179166-implementers/topic/Search.20Encounters.20by.20Practitioner/near/203802045\">said</a>:</p>\n<blockquote>\n<p>Encounter?_include:Encounter:participant:participant-type=role-xxx&amp;participant:missing=false ? Or Encounter?participant-type=role-xxx&amp;_include:Encounter:participant&amp;participant:missing=false</p>\n</blockquote>\n<p>Actually above does now work. It seems that the role-xxx rule  does not have any effect. Following queries returns same result:</p>\n<p>// Should return only Encounter having role-refractionist as participant type, not Encounter having role-physician<br>\n<a href=\"http://localhost:8080/fhir/Encounter?_include:Encounter:participant:participant-type=role-refractionist&amp;participant:missing=false\">http://localhost:8080/fhir/Encounter?_include:Encounter:participant:participant-type=role-refractionist&amp;participant:missing=false</a></p>\n<p><a href=\"http://localhost:8080/fhir/Encounter?_include:Encounter:participant&amp;participant:missing=false\">http://localhost:8080/fhir/Encounter?_include:Encounter:participant&amp;participant:missing=false</a></p>\n<div class=\"codehilite\"><pre><span></span><code>{\n  &quot;resourceType&quot;: &quot;Bundle&quot;,\n  &quot;type&quot;: &quot;searchset&quot;,\n  &quot;total&quot;: 2,\n  &quot;entry&quot;: [\n    {\n      &quot;resource&quot;: {\n        &quot;resourceType&quot;: &quot;Encounter&quot;,\n        &quot;participant&quot;: [\n          {\n            &quot;individual&quot;: {\n              &quot;reference&quot;: &quot;Practitioner/4&quot;,\n              &quot;type&quot;: &quot;role-refractionist&quot;\n            }\n          }\n        ]\n      }\n    },\n    {\n      &quot;resource&quot;: {\n        &quot;resourceType&quot;: &quot;Encounter&quot;,\n        &quot;participant&quot;: [\n          {\n            &quot;individual&quot;: {\n              &quot;reference&quot;: &quot;Practitioner/8&quot;,\n              &quot;type&quot;: &quot;role-physician&quot;\n            }\n          }\n        ]\n      }\n    }\n  ]\n}\n</code></pre></div>\n\n\n<p>Following query does not return any matches:</p>\n<p><a href=\"http://localhost:8080/fhir/Encounter?participant-type=role-physician&amp;_include:Encounter:participant&amp;participant:missing=false\">http://localhost:8080/fhir/Encounter?participant-type=role-physician&amp;_include:Encounter:participant&amp;participant:missing=false</a></p>\n<p>Is this correct: \"participant-type\"?</p>",
        "id": 203805256,
        "sender_full_name": "Markku Nikkanen",
        "timestamp": 1594711248
    },
    {
        "content": "<p>See <a href=\"http://build.fhir.org/encounter.html#search\">http://build.fhir.org/encounter.html#search</a> for parameters. Are you using a code from <a href=\"http://build.fhir.org/valueset-encounter-participant-type.html\">http://build.fhir.org/valueset-encounter-participant-type.html</a> or are you using an extended value set? What does the  'self' link in the response bundle contain (i.e. any parameters that are ignored by the server because they're not supported)?</p>",
        "id": 203816765,
        "sender_full_name": "René Spronk",
        "timestamp": 1594721354
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191372\">René Spronk</span> <a href=\"#narrow/stream/179166-implementers/topic/Search.20Encounters.20by.20Practitioner/near/203816765\">said</a>:</p>\n<blockquote>\n<p>See <a href=\"http://build.fhir.org/encounter.html#search\">http://build.fhir.org/encounter.html#search</a> for parameters. Are you using a code from <a href=\"http://build.fhir.org/valueset-encounter-participant-type.html\">http://build.fhir.org/valueset-encounter-participant-type.html</a> or are you using an extended value set? What does the  'self' link in the response bundle contain (i.e. any parameters that are ignored by the server because they're not supported)?</p>\n</blockquote>\n<p>See self:</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n  &quot;resourceType&quot;: &quot;Bundle&quot;,\n  &quot;id&quot;: &quot;bca650b7-508a-4059-bc6e-72de6f85da99&quot;,\n  &quot;meta&quot;: {\n    &quot;lastUpdated&quot;: &quot;2020-07-14T10:25:36.004+00:00&quot;\n  },\n  &quot;type&quot;: &quot;searchset&quot;,\n  &quot;total&quot;: 2,\n  &quot;link&quot;: [\n    {\n      &quot;relation&quot;: &quot;self&quot;,\n      &quot;url&quot;: &quot;http://localhost:8080/fhir/Encounter?_include%3AEncounter%3Aparticipant%3Aparticipant-type=role-refractionist&amp;participant%3Amissing=false&quot;\n    }\n</code></pre></div>\n\n\n<p>We have extensions in Encounter. Individual type should be standard. See how JSON object is constructed that is posted to HAPI FHIR:</p>\n<div class=\"codehilite\"><pre><span></span><code>participant.push({\n                individual: {\n                    reference: `Practitioner/${this.practitionerFhirId}`,\n                    type: Roles.PHYSICIAN\n                },\n</code></pre></div>",
        "id": 203818205,
        "sender_full_name": "Markku Nikkanen",
        "timestamp": 1594722625
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191372\">René Spronk</span> I think participant-type points to incorrect location:</p>\n<div class=\"codehilite\"><pre><span></span><code>participant-type    token   Encounter.participant.type\n</code></pre></div>\n\n\n<p>It should point to Encounter.participant.individual.type.</p>\n<div class=\"codehilite\"><pre><span></span><code>participant&quot;: [\n   {\n     &quot;individual&quot;: {\n       &quot;reference&quot;: &quot;Practitioner/4&quot;,\n       &quot;type&quot;: &quot;role-xxx&quot;\n     }\n   }\n ]\n</code></pre></div>\n\n\n<p>I do not find such search option:</p>\n<p><a href=\"http://build.fhir.org/encounter.html#search\">http://build.fhir.org/encounter.html#search</a></p>\n<p>Following is most closest:</p>\n<div class=\"codehilite\"><pre><span></span><code>practitioner    reference   Encounter.participant.individual.where(resolve() is Practitioner)\n(Practitioner)\n</code></pre></div>\n\n\n<p>Is it possible to enrich Encounter query options to match Encounter.participant.individual.type?</p>",
        "id": 203920394,
        "sender_full_name": "Markku Nikkanen",
        "timestamp": 1594794250
    },
    {
        "content": "<p>Why would you need that information? It contains the name of the resource type being referenced, i.e. Practitioner or PractionerRole or RelatedPerson. <a href=\"http://build.fhir.org/references.html#Reference\">http://build.fhir.org/references.html#Reference</a> , sure it's an extensible binding, but extending the value set would only be appropriate if your server supports new resource types not documented in FHIR itself.</p>",
        "id": 203925166,
        "sender_full_name": "René Spronk",
        "timestamp": 1594799315
    },
    {
        "content": "<blockquote>\n<p>how one can search Encounters that has any individual Practitioner as reference?<br>\nEncounter?participant:Practitioner:missing=false</p>\n</blockquote>",
        "id": 203925172,
        "sender_full_name": "René Spronk",
        "timestamp": 1594799323
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191372\">René Spronk</span> I am building reporting tool with filtering options in UI. I need to list all Encounters that has individual type role-physician or role-refractionist for instance. Individual type is the only location where role information for the Practitioner is stored.</p>",
        "id": 203925480,
        "sender_full_name": "Markku Nikkanen",
        "timestamp": 1594799613
    },
    {
        "content": "<p>OK, but that's a non appropriate use of that data element. As such you'll need some server side tweaking, as FHIR won't offer you a solution out of the box.</p>",
        "id": 203925731,
        "sender_full_name": "René Spronk",
        "timestamp": 1594799811
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191372\">René Spronk</span> what would be proper element to store practitioner role for the Encounter? Following?</p>\n<div class=\"codehilite\"><pre><span></span><code>Encounter.participant.type - Role of participant in encounter\n</code></pre></div>",
        "id": 203929474,
        "sender_full_name": "Markku Nikkanen",
        "timestamp": 1594802702
    },
    {
        "content": "<p>Practitioner.qualification.code , but probably better would be PractitionerRole.code . If the Practitioner could have different roles depending on the encounter, then Encounter.participant.type may be more appropriate.</p>",
        "id": 203943626,
        "sender_full_name": "René Spronk",
        "timestamp": 1594813075
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191372\">René Spronk</span> </p>\n<p>In our case Practitioner Role is Encounter specific. Is it possible to add custom roles as code e.g. PHYSCIAN? Predefined list does not have roles we are using. Can you add link to custom system definition where our domain roles are defined?</p>\n<p><a href=\"https://www.hl7.org/fhir/valueset-encounter-participant-type.html#expansion\">https://www.hl7.org/fhir/valueset-encounter-participant-type.html#expansion</a></p>\n<div class=\"codehilite\"><pre><span></span><code>&quot;participant&quot;: [\n    {\n      &quot;type&quot;: [\n        {\n          &quot;coding&quot;: [\n            {\n              &quot;system&quot;: &quot;http://hl7.org/fhir/ValueSet/encounter-participant-type&quot;,\n              &quot;code&quot;: &quot;PHYSICIAN&quot;,\n              &quot;display&quot;: &quot;something&quot;\n            }\n          ]\n        }\n      ],\n      &quot;individual&quot;: {\n        &quot;reference&quot;: &quot;Practitioner/4&quot;\n      }\n</code></pre></div>",
        "id": 204048292,
        "sender_full_name": "Markku Nikkanen",
        "timestamp": 1594879249
    },
    {
        "content": "<p>It seems that you can define custom terminologies:</p>\n<div class=\"codehilite\"><pre><span></span><code>          {\n              &quot;system&quot;: &quot;http://something.com/fhir/ValueSet/encounter-participant-type&quot;,\n              &quot;code&quot;: &quot;PHYSICIAN&quot;\n            }\nhttp://localhost:8080/fhir/Encounter?participant-type=http://something.com/fhir/ValueSet/encounter-participant-type|PHYSICIAN\n</code></pre></div>\n\n\n<p>Following operates, also:</p>\n<div class=\"codehilite\"><pre><span></span><code>          {\n              &quot;code&quot;: &quot;PHYSICIAN&quot;\n            }\nhttp://localhost:8080/fhir/Encounter?participant-type=PHYSICIAN\n</code></pre></div>",
        "id": 204054896,
        "sender_full_name": "Markku Nikkanen",
        "timestamp": 1594885929
    },
    {
        "content": "<p>Encounter.participant.type has a binding of \"extensible\", meaning you MUST use the codes HL7 defines unless you're conveying a concept that is in no way covered by one of the standard codes (even if it's conveying a different granularity).  The notion of \"physician\" seems like an odd choice of code for this element because the element isn't about \"what kind of clinician is this individual?\", it's \"how are they involved in the encounter?\".  What kind of clinician would be conveyed in PractitionerRole.code.</p>",
        "id": 204081623,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1594905501
    },
    {
        "content": "<p>Indeed. The intent of the attribute is a different one than the envisioned use, as such it seems Marku was looking at the wrong data element. If the intent of an attribute is to identify a color, then even the fact that the predefined value set is extensible doesn't mean one can/should create a new concept for \"high fever\". That's clearly a different thing.</p>",
        "id": 205683852,
        "sender_full_name": "René Spronk",
        "timestamp": 1596292204
    }
]