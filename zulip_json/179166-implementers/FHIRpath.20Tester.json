[
    {
        "content": "<p>I'm testing my FHIRpath with FHIRpath Tester on the resource below. How can I test for values of profile? <br>\n<code>meta.where(profile='a')</code> does not work where there is more than one profile element.<br>\nIs there a problem with my FHIRpath? Is there a problem with FHIRpath Tester?</p>\n<p><code>&lt;Patient xmlns=\"http://hl7.org/fhir\"&gt;\n  &lt;meta&gt;\n    &lt;profile value=\"a\"/&gt;\n    &lt;profile value=\"b\"/&gt;\n    &lt;profile value=\"c\"/&gt;\n  &lt;/meta&gt;\n&lt;/Patient&gt;</code></p>",
        "id": 153922908,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1512458678
    },
    {
        "content": "<p>what are you trying to do?</p>",
        "id": 153923032,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1512500319
    },
    {
        "content": "<p>I'm trying to create an invariant to say that instances of Patient must have profile='a', and are allowed to have other profiles.</p>",
        "id": 153923081,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1512517034
    },
    {
        "content": "<p>You need the invariant to return true, so if you need at least one of the profiles to be 'a', you could say:   <code>meta.any(profile = 'a')</code>.  Note that this allows for multiple profiles='a'.</p>\n<p>That's the technical answer......Grahame's question remains: what are you trying to achieve?</p>",
        "id": 153923107,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1512550190
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> <br>\nI am creating a profile of Patient and I want all instances of it to say in meta.profile that they are instances of it.<br>\nI am trying to use an invariant for this.<br>\nIf the profile has URI \"a\", I want<br>\n<code>&lt;Patient xmlns=\"http://hl7.org/fhir\"&gt;\n  &lt;meta&gt;\n    &lt;profile value=\"a\"/&gt;\n    &lt;profile value=\"b\"/&gt;\n  &lt;/meta&gt;\n&lt;/Patient&gt;</code> <br>\nto pass validation and <br>\n<code>&lt;Patient xmlns=\"http://hl7.org/fhir\"&gt;\n  &lt;meta&gt;\n    &lt;profile value=\"b\"/&gt;\n  &lt;/meta&gt;\n&lt;/Patient&gt;</code><br>\nto fail validation</p>",
        "id": 153923527,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1512696372
    },
    {
        "content": "<p>By the way, using the FHIRpath Tester, your suggestion returns true when there is only one profile, and false when there is more than one.</p>",
        "id": 153923528,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1512696832
    },
    {
        "content": "<p>I'm not sure you've thought this through. why do you want to do this? It really sounds like a bad idea to me.</p>",
        "id": 153923529,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1512696833
    },
    {
        "content": "<p>What are some of the problems?</p>",
        "id": 153923530,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1512696924
    },
    {
        "content": "<p>well, a profile tag is a claim that a resource conforms to some profile. So an application can scan resources and identify ones that meet a particular profile, and mark them accordingly.</p>",
        "id": 153923531,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1512697006
    },
    {
        "content": "<p>the claim may not be true. Or it may be missing.</p>",
        "id": 153923532,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1512697018
    },
    {
        "content": "<p>by making a rule that the profile can only be valid if it states the profile, you are making it so that resources can never be identified to meet the rules unless they make that explicit claim</p>",
        "id": 153923533,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1512697057
    },
    {
        "content": "<p>in particular, there's a rule about profiles: removing the profile from a resource must not change the meaning of the resource. It sounds to me like you're trying to make some hidden rule that's associated with the profile</p>",
        "id": 153923534,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1512697109
    },
    {
        "content": "<p>Ah!<br>\nSo on my design, conformance can never be discovered after the record is created.</p>",
        "id": 153923535,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1512697156
    },
    {
        "content": "<p>yes</p>",
        "id": 153923536,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1512697187
    },
    {
        "content": "<p>they key is that asserting a profile claim is a denormalization for performance reasons, not a statement of meaning</p>",
        "id": 153923537,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1512697222
    },
    {
        "content": "<p>And my design would break the \"profile assertions can be removed\" principle.</p>",
        "id": 153923538,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1512697231
    },
    {
        "content": "<p>well, yes, indirectly</p>",
        "id": 153923539,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1512697265
    },
    {
        "content": "<p>That explains why I have not seen a way to do this. I was puzzled at this being so hard to make work.</p>",
        "id": 153923540,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1512697406
    }
]