[
    {
        "content": "<p>Patient resource has a search parameter <a href=\"http://Patient.name\" target=\"_blank\" title=\"http://Patient.name\">Patient.name</a> which is defined as \"A portion of either family or given name of the patient\". Should I be able to search patient's full name, as displayed in Patient.name.text? For example: Patient?name=John Smith.</p>",
        "id": 153838099,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1468467300
    },
    {
        "content": "<p>Was just writing a test case for that exact scenario and was unable to find any direction in the spec.</p>",
        "id": 153838102,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1468467561
    },
    {
        "content": "<p>you should find it today. I added the guidance yesterday. And the answer is yes: I made explicit that text is included in the search. </p>",
        "id": 153838103,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468467638
    },
    {
        "content": "<p>or maybe we just approved it in MnM call and I haven't aded it yet</p>",
        "id": 153838104,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468467653
    },
    {
        "content": "<p>Where would it go?  In the data type section?</p>",
        "id": 153838105,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1468467665
    },
    {
        "content": "<p>interesting question. which means we approved it and I haven't added it yet </p>",
        "id": 153838107,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468467703
    },
    {
        "content": "<p>Is there a similar directive for address?</p>",
        "id": 153838109,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1468467738
    },
    {
        "content": "<p>there will be</p>",
        "id": 153838110,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468467975
    },
    {
        "content": "<p>thx</p>",
        "id": 153838111,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1468467990
    },
    {
        "content": "<p>great. thx</p>",
        "id": 153838118,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1468468712
    },
    {
        "content": "<p>Hi,<br>\nJust want to make sure I understand how search on <a href=\"http://Patient.name\" target=\"_blank\" title=\"http://Patient.name\">Patient.name</a> is supposed to work.  If a patient resource has:<br>\n&lt;!--   Peter James Chalmers, but called \"Jim\"   --&gt;<br>\n  &lt;name&gt;<br>\n    &lt;use value=\"official\"/&gt;<br>\n    &lt;family value=\"Chalmers\"/&gt;<br>\n    &lt;given value=\"Peter\"/&gt;<br>\n    &lt;given value=\"James\"/&gt;<br>\n  &lt;/name&gt;<br>\n  &lt;name&gt;<br>\n    &lt;use value=\"usual\"/&gt;<br>\n    &lt;given value=\"Jim\"/&gt;<br>\n  &lt;/name&gt;</p>\n<p>Then all of the following queries should get that resource:<br>\n/Patient?name=chalmers<br>\n/Patient?name=pete<br>\n/Patient?name=james<br>\n/Patient?name=jim<br>\nYes?</p>\n<p>What about the case where a &lt;name&gt; has no text.value, as here?  Am I as a server expected to return this resource for:<br>\n/Patient?name=Peter%20James%20Chalmers<br>\n?</p>\n<p>The way the description on <a href=\"http://Patient.name\" target=\"_blank\" title=\"http://Patient.name\">Patient.name</a> is worded initially made me think that it is a \"contains\" search:<br>\n    \"A portion of either family or given name of the patient\"</p>\n<p>So the above patient would be returned for:<br>\n/Patient?name=almer</p>\n<p>But now I'm thinking that's not right.  Is it?</p>",
        "id": 153868986,
        "sender_full_name": "Jorge de la Garza",
        "timestamp": 1485288936
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> I know we talked about how this was going to work in Amsterdam, but I don't remember exactly where we landed - or if we've updated the spec to align with our discussion.  (So your thoughts here would be welcome :))</p>",
        "id": 153868999,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1485293456
    },
    {
        "content": "<p>I think we agreed that searches for names should try to match at the beginning of the value, or after whitespace or Apostrophes/dashes<br>\nSo searching for almer would match Almer, D'Almerio or Jones-Almers, but not Chalmers.<br>\nI wouldn't expect a server to be able to Match \"Peter%20James%20Chalmers\" unless there's a field  (name.text) that in fact matches this string. But then again, clients should split multiple search string into a proper query like ?name=Peter&amp;name=James&amp;name=Chalmers.</p>\n<p>Also, Servers may decide to automatically populate empty text fields with a default concatenation of all given name parts to improve search results.</p>",
        "id": 153869001,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1485293962
    },
    {
        "content": "<p>BTW if a client specifically wants to get partial matches, it's have to use the :contains modifier, e.g.:<br>\n?name:contains=almers would in fact match Chalmers<br>\nBut a contains search by default would return too many false positive results!</p>",
        "id": 153869002,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1485294099
    },
    {
        "content": "<p>I am pretty sure the spec does not say anything like this, except that server behaviour could differ based on what kind of indexes the server has and what kind of searching would be performant enough to allow on the REST interface...</p>",
        "id": 153869509,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1485789719
    },
    {
        "content": "<p>what we do say is that searches on string type tokens is not meant to be determinate </p>",
        "id": 153870149,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1486353006
    },
    {
        "content": "<p>Does that mean it's legitimate to have a search result where none of the name parts start with the value specified in the search string?</p>",
        "id": 153870168,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1486355798
    },
    {
        "content": "<p>I think so. It woudn't be good or wise, but making it illegitimate would lead us to dive down a rabbit hole we've avoided so far</p>",
        "id": 153870184,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1486362467
    },
    {
        "content": "<p>My fundamental question is whether it's legitimate for a back-end that does an EMPI-style probability based match that accounts for day/month swapping, typos, spelling mistakes, sounds like issues, patient's who've moved, etc. from pretending to support a FHIR RESTful search but not actually following any of the criteria rules as written.  To me, that seems wrong.</p>",
        "id": 153870284,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1486390324
    },
    {
        "content": "<p>that's what the $match operation is about - moving away from literal indexes. </p>",
        "id": 153870331,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1486408358
    },
    {
        "content": "<p>I understand.  The question is whether someone whose back-end is suited to doing a $match can/should expose a RESTful search interface if they're not actually going to be compliant with the definitions of the search parameters as defined.</p>",
        "id": 153870401,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1486431119
    },
    {
        "content": "<p>no, I think it shouldn't be</p>",
        "id": 153870404,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1486431761
    },
    {
        "content": "<p>But you also said that searches don't have to be determinate.  I'm not sure what the dividing line is.</p>",
        "id": 153870416,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1486436787
    },
    {
        "content": "<p>no. there's no magic bullet here. If you start trying to draft text that makes the line clear, you'll get tied up in knots. In principle, the search parameters are for character based literal matching, and the $match operation is for smarts. But we don't delineate a precise border here</p>",
        "id": 153870420,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1486438477
    },
    {
        "content": "<p>There's more than 1 reason to search for patients, one is to find a single patient for treatment (where MPI $match is appropriate), or for searching for patients for population or group analysis (search for all patients in a specific team, or for a managing organisation, or having a specific identifier type etc) these others are not appropriate for $match style queries</p>",
        "id": 153870433,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1486455143
    },
    {
        "content": "<p>Is there any guidance around whether search should look at ALL HumanNames (regardless of period and/or use =old)?</p>",
        "id": 153875769,
        "sender_full_name": "Michelle (Moseman) Miller",
        "timestamp": 1489078712
    },
    {
        "content": "<p>I would expect the search to look at all of them, but I don't think there's a requirement that all servers must implement that way.</p>",
        "id": 153875772,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1489078956
    }
]