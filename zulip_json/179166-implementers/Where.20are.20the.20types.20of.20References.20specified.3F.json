[
    {
        "content": "<p>When I look at the FHIR specification online I see Resources where attributes are typed as Reference and then the type that is referenced is indicated.<br>\n<a href=\"/user_uploads/10155/37n8Bh3EkHpkUjAoyeoAy8GY/fhir_reference_type.png\" target=\"_blank\" title=\"fhir_reference_type.png\">fhir_reference_type.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/37n8Bh3EkHpkUjAoyeoAy8GY/fhir_reference_type.png\" target=\"_blank\" title=\"fhir_reference_type.png\"><img src=\"/user_uploads/10155/37n8Bh3EkHpkUjAoyeoAy8GY/fhir_reference_type.png\"></a></div><p>When I look at the XSD, I can not find information about what type a Reference refers to.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;xs:complexType</span> <span class=\"na\">name=</span><span class=\"s\">&quot;Device&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;xs:complexContent&gt;</span>\n      <span class=\"nt\">&lt;xs:extension</span> <span class=\"na\">base=</span><span class=\"s\">&quot;DomainResource&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;xs:sequence&gt;</span>\n          <span class=\"c\">&lt;!--This does not tell me that it is a reference to a DeviceDefinition --&gt;</span>\n          <span class=\"nt\">&lt;xs:element</span> <span class=\"na\">name=</span><span class=\"s\">&quot;definition&quot;</span> <span class=\"na\">minOccurs=</span><span class=\"s\">&quot;0&quot;</span> <span class=\"na\">maxOccurs=</span><span class=\"s\">&quot;1&quot;</span> <span class=\"na\">type=</span><span class=\"s\">&quot;Reference&quot;</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;xs:annotation&gt;</span>\n              <span class=\"nt\">&lt;xs:documentation</span> <span class=\"na\">xml:lang=</span><span class=\"s\">&quot;en&quot;</span><span class=\"nt\">&gt;</span>The reference to the definition for the device.<span class=\"nt\">&lt;/xs:documentation&gt;</span>\n           <span class=\"nt\">&lt;/xs:annotation&gt;</span>\n          <span class=\"nt\">&lt;/xs:element&gt;</span>\n          <span class=\"c\">&lt;!--other attributes elided --&gt;</span>\n        <span class=\"nt\">&lt;/xs:sequence&gt;</span>\n      <span class=\"nt\">&lt;/xs:extension&gt;</span>\n    <span class=\"nt\">&lt;/xs:complexContent&gt;</span>\n  <span class=\"nt\">&lt;/xs:complexType&gt;</span>\n</pre></div>\n\n\n<p>I would like to know where information about what type(s) that References refer to is specified.  I'll admit to being neither a XML wizard or having had a thorough look through the build process repo.  If anyone could point me to something machine readable I would be grateful.</p>",
        "id": 154013742,
        "sender_full_name": "Michael Faughn",
        "timestamp": 1540926608
    },
    {
        "content": "<p>It won't be on the element but can be contained within the Reference type:  <a href=\"http://build.fhir.org/references.html#Reference\" target=\"_blank\" title=\"http://build.fhir.org/references.html#Reference\">http://build.fhir.org/references.html#Reference</a>  The Reference.type element can be used to define what type the reference refers to.  Note that it is optional 0..1 so it won't always be there.</p>",
        "id": 154013745,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1540926854
    },
    {
        "content": "<p>Here is more information about the reference target type:  <a href=\"http://build.fhir.org/references.html#type\" target=\"_blank\" title=\"http://build.fhir.org/references.html#type\">http://build.fhir.org/references.html#type</a></p>",
        "id": 154013747,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1540926931
    },
    {
        "content": "<p>The schemas don't differentiate.  The \"type\" of Reference is the same regardless of what the Reference points to.  (It's just a URI and possibly a display or business identifier).  Enforcement of what can be at the other end of the reference requires resolving the reference, which is something that XML Schema can't manage.</p>",
        "id": 154013755,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1540927230
    },
    {
        "content": "<p>You have to look at the StructureDefinition files to get that information</p>",
        "id": 154013813,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1540928782
    },
    {
        "content": "<p>There are quite a few things (profile assertions, terminology bindings, constraints, \"mustSupport\", etc. that can't be enforced by the schemas.</p>",
        "id": 154013856,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1540934850
    },
    {
        "content": "<p>OK, let me ask the question a different way.  In the example I gave, the definition found on the FHIR website does indicate that the Reference is <em>to</em> an object of type DeviceDefinition.  I am assuming that this information is specified <em>somewhere</em> in some format that programmatically consumable and that this source is used to build the definition that we see on the website.  Is this assumption correct?  If it is correct, then what/where is that source?</p>",
        "id": 154014082,
        "sender_full_name": "Michael Faughn",
        "timestamp": 1540996114
    },
    {
        "content": "<p>It is in the StructureDefinition file - profiles-resources.xml</p>",
        "id": 154014083,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1540996497
    },
    {
        "content": "<p><a href=\"http://hl7.org/fhir/definitions.xml.zip\" target=\"_blank\" title=\"http://hl7.org/fhir/definitions.xml.zip\">http://hl7.org/fhir/definitions.xml.zip</a></p>",
        "id": 154014085,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1540996614
    },
    {
        "content": "<p>Thanks.  That does help.  The information is parseable from the profiles-resources.xml file.</p>\n<div class=\"codehilite\"><pre><span></span>          &lt;element id=&quot;Device.definition&quot;&gt;\n            &lt;path value=&quot;Device.definition&quot;/&gt;\n            &lt;short value=&quot;The reference to the definition for the device&quot;/&gt;\n            &lt;definition value=&quot;The reference to the definition for the device.&quot;/&gt;\n            &lt;min value=&quot;0&quot;/&gt;\n            &lt;max value=&quot;1&quot;/&gt;\n            &lt;type&gt;\n              &lt;code value=&quot;Reference&quot;/&gt;\n              &lt;targetProfile value=&quot;http://hl7.org/fhir/StructureDefinition/DeviceDefinition&quot;/&gt;\n            &lt;/type&gt;\n          &lt;/element&gt;\n</pre></div>\n\n\n<p>This is certainly enough for me to proceed with what I'm attempting to do.  I still must wonder though, if one were to add or remove a target for a Reference, is it this file that would be changed manually?  I somehow had the impression that structure definitions in this file were themselves generated from other inputs.</p>",
        "id": 154014119,
        "sender_full_name": "Michael Faughn",
        "timestamp": 1540998458
    },
    {
        "content": "<p>Each resource has a source document in the build.  That is where the resource author will identify the various elements and their datatypes.</p>",
        "id": 154014122,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1540998855
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"194707\">@Michael Faughn</span>, to constrain the reference, you have to create a (separate) \"derived profile\". You cannot change the definitions of the core FHIR Resources &amp; Datatypes, as this would break compatibility with other FHIR systems.</p>",
        "id": 154014123,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1540998858
    },
    {
        "content": "<p>See <a href=\"http://hl7.org/fhir/profiling.html\" target=\"_blank\" title=\"http://hl7.org/fhir/profiling.html\">http://hl7.org/fhir/profiling.html</a></p>",
        "id": 154014124,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1540998890
    },
    {
        "content": "<p>So, let's take the source document for the Device resource then.  Where can I find that file?  Is it in the github repo?</p>\n<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> I'm not trying to do change anything or create anything new at all.  I'm trying to figure out exactly how the information that is in the structure definitions got there.  At the moment I'm occupied specifically with how the targetProfile values for attributes that are typed as Reference get included in the structure definitions.  I'm trying to develop a process for programmatically building the FHIR spec (or at least as much as I can of it) as instances of the UML metamodel (computable instances, not simply class diagram images).  I want to do this with as much fidelity and completeness as I possibly can.</p>",
        "id": 154014138,
        "sender_full_name": "Michael Faughn",
        "timestamp": 1541000707
    },
    {
        "content": "<p>Yes, it is all in the github repository.  fhir/source/device/device-spreadsheet.xml</p>",
        "id": 154014141,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1541001087
    },
    {
        "content": "<p>All FHIR datamodels are defined by means of a FHIR StructureDefinition. Definitions for FHIR core resources and datatypes are published as part of the spec (definitions.zip, profiles-resources.xml and profiles-types.xml). These definition files provide a complete and computable description of the spec.<br>\nDefinitions for user models are typically published to the HL7 FHIR registry (<a href=\"http://registry.fhir.org/\" target=\"_blank\" title=\"http://registry.fhir.org/\">http://registry.fhir.org/</a>) and on Simplifier (<a href=\"https://simplifier.net\" target=\"_blank\" title=\"https://simplifier.net\">https://simplifier.net</a>).</p>\n<p>BTW Are you familiar with MDHT (<a href=\"https://github.com/mdht/mdht\" target=\"_blank\" title=\"https://github.com/mdht/mdht\">https://github.com/mdht/mdht</a>)? This is a UML-based profiling tool that also supports FHIR.</p>",
        "id": 154014142,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1541001221
    },
    {
        "content": "<p>While the spreadsheets are the source of truth in Github, noone should write tools against them.  We may shift authoring tools at some point.  The StructureDefinition instances are the \"standard\" way of expressing the models and are the safest thing to interact with for software.</p>",
        "id": 154014163,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1541002333
    },
    {
        "content": "<p>I've had a look at the device-spreadsheet.xml file.  I did find the cell where DeviceDefinition is specified as the target for the Reference that Device.defintion is typed as.  Thanks.  It's informative.  We have done a fair amount of work programmatically generating specifications for standards.  There is certainly an element of curiosity in having a look down into the bowels of how FHIR gets put together that is, at some point, beyond any practical need I have. I definitely do not intend to use the spreadsheets as an input for my process.  It's clear that the generated files in the definitions.xml.zip collection are the interface I should be working against.</p>\n<p>I'm familiar with the MDHT work.  We have a fairly extensive UML based toolchain already.  It is what I use to do the IEEE 11073 based work.  I'm hoping to get some mileage out of having the FHIR model expressed in the same toolchain.</p>",
        "id": 154014183,
        "sender_full_name": "Michael Faughn",
        "timestamp": 1541003149
    },
    {
        "content": "<p>I'm certainly interested in talking about the conceptual underpinnings for the UML metamodel, and what you intend it to achieve. There's some compromises to make that require careful thought and perspective to strike the right balance</p>",
        "id": 154014300,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1541016548
    },
    {
        "content": "<p>the structure definitions are the master format. We may transit to using them as the editorial source instead of spreadsheets once they are stable. So they should be the focus. Though I would recommend the json format in the NPM packages, since that it our main commitment going forward</p>",
        "id": 154014304,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1541016649
    },
    {
        "content": "<p>When I've got something banged together I'll share it.  It'll help any discussion.</p>",
        "id": 154015245,
        "sender_full_name": "Michael Faughn",
        "timestamp": 1541183838
    },
    {
        "content": "<p>Well, if nothing else, this is certainly a good way to get acquainted with the ins and outs of the Structure Defs.  I'm running across a few things that make me scratch my head a bit.  I notice that what I see online in the structure doesn't always align with what I find in the downloaded files (xsd and resources-profile.xml).  An example of this is Claim.payee.  Online it is a backbone element with two attributes, <code>type</code> and <code>party</code>.  In the downloaded files there is an additional attribute: <code>&lt;xs:element name=\"resource\" minOccurs=\"0\" maxOccurs=\"1\" type=\"Coding\"&gt;</code>.    Both sources purport to be v3.6.0.  I'm not sure what to do with such situations.  Which is correct?</p>",
        "id": 154015768,
        "sender_full_name": "Michael Faughn",
        "timestamp": 1541453858
    },
    {
        "content": "<p>Can you provide the URLs of the files you're looking at?</p>",
        "id": 154015791,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1541459711
    },
    {
        "content": "<p>I downloaded again from <a href=\"https://build.fhir.org/definitions.xml.zip\" target=\"_blank\" title=\"https://build.fhir.org/definitions.xml.zip\">here</a>.  <br>\nMy first download includes this in the schema files:<br>\n<code>Generated on Thu, Oct 25, 2018 13:08+0000 for FHIR v3.6.0 </code><br>\nTodays download includes this:<br>\n<code>Generated on Tue, Nov 6, 2018 00:02+0000 for FHIR v3.6.0 </code></p>\n<p>Today's download doesn't include the extra attribute.  I did not know that I needed to look at <code>version.info</code> to get the complete versioning information.  Why is the revision number elided elsewhere?</p>",
        "id": 154015807,
        "sender_full_name": "Michael Faughn",
        "timestamp": 1541473018
    },
    {
        "content": "<p>3.6.0 is the current build and is rolling over quickly right now - I suspect you got caught by ongoing changes</p>",
        "id": 154015838,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1541486370
    }
]