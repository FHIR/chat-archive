[
    {
        "content": "<p>This is kind of an academic question, but if I do an update transaction twice with <em>exactly the same resource</em>, will the versionId change? I assume the lastUpdated will change even if the content is identical.</p>",
        "id": 153892708,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1496866735
    },
    {
        "content": "<p>Most servers would do that, though I don't think a server <em>has</em> to do that.  (Smart servers could theoretically accept the update and send back the etag from the prior event - though how audit, etc. would work, I'm not sure.)</p>",
        "id": 153892710,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1496867016
    },
    {
        "content": "<p>That is helpful. Its basically because I am trying to think of what is the simplest way to avoid data duplication should a filter fail.<br>\nFor example, some Personal Health Devices are very bad about data management and will upload old data until it gets flushed out of the buffer by subsequent measurements. Conditional creates are one way to do that, but that is expensive and requires a well thought out set of selection criteria. Perhaps a simple update would suffice and be simplest for both server and client</p>",
        "id": 153892714,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1496867243
    },
    {
        "content": "<p>Audit should record all attempts, it could indicate which were ignored. </p>",
        "id": 153892966,
        "sender_full_name": "John Moehrke",
        "timestamp": 1496927161
    },
    {
        "content": "<p>see also <a href=\"https://chat.fhir.org/#narrow/stream/implementers/subject/HTTP.2C.20Idempotency.2C.20and.20FHIR\" target=\"_blank\" title=\"https://chat.fhir.org/#narrow/stream/implementers/subject/HTTP.2C.20Idempotency.2C.20and.20FHIR\">https://chat.fhir.org/#narrow/stream/implementers/subject/HTTP.2C.20Idempotency.2C.20and.20FHIR</a></p>",
        "id": 153893008,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1496955412
    }
]