[
    {
        "content": "<p>I was looking for a way to make a _has NOT search <br>\n/Patient?_has:Condition:subject:code=1234 - gives me patients with a condition by code; how would I search for patients who don't have a specific condition?</p>",
        "id": 154015114,
        "sender_full_name": "Brett Esler",
        "timestamp": 1541163182
    },
    {
        "content": "<p>Because you are eventually searching on Condition.code, which is a token search parameter, you can use the :not modifier.<br>\n<code>[base]/Patient?_has:Condition:subject:code:not=1234</code><br>\nThis would give you all patients that have a condition with a code, which differs from 1234. <br>\nYou can also use :missing=true, which gives you all patients where the linked condition does not contain a code.</p>",
        "id": 154015157,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1541169796
    },
    {
        "content": "<p>I thought this also - but wouldn't this return all patients that have a least one condition other than 1234 which would not include patients that do not have any Conditions recorded?</p>",
        "id": 154015525,
        "sender_full_name": "Brett Esler",
        "timestamp": 1541326817
    },
    {
        "content": "<p>Yes, that's true. So, basically, you would need to execute two queries: a) :code:not and b) :missing=false. The union of the two result sets then contains all records that do have a code, but which are different AND all records which do not have a code.</p>\n<p>Theoretically, you can also use _filter for it, though, not many servers support this kind of request. <br>\nWith _filter you can do an OR query, which the \"regular\" search API does not allow:<br>\n<code>[base]/Patient?_filter=_has:Condition:subject:code ne 1234 or _has:Condition:subject:missing eq false</code></p>\n<p>Edit: While writing the _filter statement above, I was running into the issue that the ':' character is rejected by the _filter grammar. See this <a href=\"#narrow/stream/4-implementers/subject/_has.20.26.20_filter/near/205083\" title=\"#narrow/stream/4-implementers/subject/_has.20.26.20_filter/near/205083\">thread</a>. Sorry, for that.</p>",
        "id": 154015536,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1541335911
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"193430\">@Alexander Zautke</span></p>",
        "id": 154017614,
        "sender_full_name": "Brett Esler",
        "timestamp": 1542027029
    }
]