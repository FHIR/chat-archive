[
    {
        "content": "<p>Hi!<br>\nI'm trying to create a FHIR compliant iCBT (Internet-based Cognitive Behavioural Therapy) service. I have not been able to find any Profile for this use-case, does anyone know if there exists one? (I tried here: <a href=\"http://www.fhir.org/guides/registry/\">http://www.fhir.org/guides/registry/</a>, but the search does not seem to work on Resource level). </p>\n<p>Right now it feels like I'm reinventing the wheel and trying to shoehorn stuff into PlanDefinitions, CarePlans, ResourceGroups etc (where to store the reference to the actual text content?) and I'm not sure if it's actually going to be useful.</p>",
        "id": 217105184,
        "sender_full_name": "Håkan MacLean",
        "timestamp": 1605686618
    },
    {
        "content": "<p>Can you provide a bit more detail about the requirements? What types of capabilities will this service provide?</p>",
        "id": 217128312,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1605702767
    },
    {
        "content": "<p>Thanks for replying! I'll try to be brief as I can. We want to store the definition of a iCBT treament programme, e.g.<br>\niCBT Anxiety Treatment Plan v.1</p>\n<ul>\n<li>Internal metadata<ul>\n<li>Link to internal chat session</li>\n</ul>\n</li>\n<li>Content<ul>\n<li>Module 1<ul>\n<li>Task 1: Read about topic X<ul>\n<li>Task 1.1: Read X.1</li>\n<li>Task 1.2: Read X.2</li>\n</ul>\n</li>\n<li>Task 2: Self-assessment</li>\n</ul>\n</li>\n<li>Module 2<ul>\n<li>Task 1: Read about topic Y</li>\n<li>Task 2: Appointment with Clinician</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>And then we want to enroll a Patient in one of these programmes. </p>\n<p>My current understanding, after reading the chapter here: <a href=\"https://www.hl7.org/fhir/plandefinition.html#12.18.3.3\">https://www.hl7.org/fhir/plandefinition.html#12.18.3.3</a>, is that I should try to put the iCBT program in a PlanDefinition, using actions and subactions with ActivityDefinitions to create this Module/Task hierarchy. Then when enrolling a patient I create a RequestGroup with nested Actions/Tasks, referring to the ActivityDefinitions. Finally then create a CarePlan referencing this RequestGroup.</p>\n<p>My questions (in descending priority) are:</p>\n<ol>\n<li>Am I doing this correctly? Or is there a Profile I can look at? I have not find a place where I can search for Profiles implementing a specific Resource.</li>\n<li>How would I reference the actual content (e.g. text) in the ActivityDefintions? Perhaps using ActivityDefinition.relatedArtifact?</li>\n<li>When my the patient wants to consume this data, I suppose would send a bundle containing the CarePlan and the RequestGroup?</li>\n<li>I suppose the reference to the chat session would be a FHIR Extension</li>\n</ol>",
        "id": 217139019,
        "sender_full_name": "Håkan MacLean",
        "timestamp": 1605708840
    },
    {
        "content": "<p>Yes, that sounds right. Note that if there isn't any optionality in the actions (i.e. they just perform each action), then you don't need to use RequestGroup, you can add the actions directly to the CarePlan. It's a very interesting use case because it's a set of instructions for the patient, as opposed to a set of instructions for a practitioner or care team.</p>\n<ol>\n<li>CPG-on-FHIR has several profiles that might be helpful here: <a href=\"http://build.fhir.org/ig/HL7/cqf-recommendations\">http://build.fhir.org/ig/HL7/cqf-recommendations</a></li>\n<li>You could use the relatedArtifact, yes, you could also consider just using the documentation element of PlanDefinition.action</li>\n<li>I think the answer to this question depends on what the best way to represent this in FHIR would be, and I'm not 100% sure about that. I think you could use CommunicationRequest/Communication, that might be the best fit, and would let you put the content in the payload element.</li>\n<li>Yes, I think the chat session would be an extension</li>\n</ol>",
        "id": 217158275,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1605716401
    },
    {
        "content": "<p>Wow, this is great info, thanks!<br>\n0) Re. adding the actions directly to the CarePlan, I found no way of grouping/nesting them in the Module/Task/Subtask hierarchy that we have. Is there a way I have missed? You can't have sub-activities as far as can see?</p>\n<p>3) Let's say I want to send the entire plan, with the content and how far the patient has come in each module. Wouldn't I then need to send the entire CarePlan (and perhaps related ResourceGroup)?</p>",
        "id": 217161195,
        "sender_full_name": "Håkan MacLean",
        "timestamp": 1605717532
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256280\">@Ingvar Sørlien</span>  thanks for a super interesting talk! We seem to be working on something very similar, as you see in my question above. I have so many questions to you now :) </p>\n<ol>\n<li>Would you mind sharing your experiences in regards to my  questions above?</li>\n<li>Do you have any example CarePlans, PlanDefinitions I could look at?</li>\n<li>Do you have any IG/Profile in draft I could look at already?</li>\n</ol>",
        "id": 217161593,
        "sender_full_name": "Håkan MacLean",
        "timestamp": 1605717671
    },
    {
        "content": "<p>That's a fair point, RequestGroup does give you a way to easily follow the same grouping/hierarchy as the PlanDefinition. It would also let you continue to use the documentation element of RequestGroup.action for the actual content. I think with some extensions/codes/profiles to indicate clearly that that's what you were doing, that would make a lot of sense and ease representation/implementation.</p>",
        "id": 217163129,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1605718243
    },
    {
        "content": "<p>And yes, that would then mean that you could use the CarePlan/RequestGroup to track current state/progress, though you might need some extensions to keep track of completion of modules.</p>",
        "id": 217163350,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1605718329
    },
    {
        "content": "<p>So I'm trying to fit a iCBT treatment program into FHIR using PlanDefinitions and CarePlans. Right now I'm thinking about how to encode something like the following task for Patient: \"Step 1. Read this text about topic X\". </p>\n<p>Right now my assumption is that in the PlanDefinition, this task would be encoded using a ActivityDefinition with 'kind' set to Task</p>\n<p>Right now my questions are:</p>\n<ol>\n<li>\n<p>Is my assumption above reasonable? Or should I use some other Resources?</p>\n</li>\n<li>\n<p>I'm a bit confused about when to store things in PlanDefinition.action[0].aRandomField vs the related ActivityDefinition.aRandomField. Should I interpret the ActivityDefinition to be something like \"A <em>generic</em> Task that instructs the patient to read <em>something</em>\", which could then be re-used by several different actions in the PlanDefinition and be referenced through definitionCanonical? Or is it more specific and I should create one ActivityDefinition for each topic and reference it through definitionUri?</p>\n</li>\n<li>\n<p>Where in should I put a link to the actual text content? Right now I'm thinking about PlanDefinition.action.document or ActivityDefinition.relatedArtifact (pending the answer on question 2). </p>\n</li>\n<li>\n<p>When it comes to creating the actual Task, what would be an appropriate place to put the link to the text content in the Task?</p>\n</li>\n<li>\n<p>Reading about \"Applying an ActivityDefinition\" (<a href=\"https://www.hl7.org/fhir/activitydefinition.html#12.17.3.3\">https://www.hl7.org/fhir/activitydefinition.html#12.17.3.3</a>) it talks about the 'transform' element and StructureMaps. Since I want the text content from the say PlanDefinition.action[0].FieldX to end up in the Task.FieldY, have I understood it correctly that we then have to create a StructureMap that explains this transform?</p>\n</li>\n</ol>",
        "id": 217419114,
        "sender_full_name": "Håkan MacLean",
        "timestamp": 1605887779
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span></p>",
        "id": 217509800,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1605978544
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"364590\">@Håkan MacLean</span>:<br>\n1) Yes, a Task resource is appropriate here<br>\n2) Yes, ActivityDefinitions are used to define a generic task, but _how_ generic it is depends on your use case. One approach is to define an ActivityDefinition _profile_ that establishes the \"A generic Task that instructs the patient to read something\", and then have ActivityDefinitions that conform to that profile for each specific task. For example <a href=\"http://build.fhir.org/ig/HL7/cqf-recommendations/StructureDefinition-cpg-collectinformationactivity.html\">CollectInformationActivity</a> is a profile of ActivityDefinition that defines the activity of collecting information using _some_ questionnaire. Then there would be specific ActivityDefinition resources that specify the questionnaire to be used using the \"collectWith\" extension. The act of applying that ActivityDefinition would result in a Task that conforms to the <a href=\"http://build.fhir.org/ig/HL7/cqf-recommendations/StructureDefinition-cpg-questionnairetask.html\">QuestionnaireTask</a> profile, with the actual Questionnaire to be filled out as an <code>input</code> element.<br>\n3) In this approach, you could specify the document as an extension in the ActivityDefinition profile, so that it's clear exactly where the element would be specified<br>\n4) That extension in the ActivityDefinition would result in an <code>input</code> element in the generated Task<br>\n5) No, you don't have to specify a Transform, that is one of the possible approaches, you can use a StructureMap if you want to use FHIR Mapping Language to describe the transform from the ActivityDefinition to the Request resource, or you can use the ActivityDefinition.kind to specify the type and use <code>dynamicValue</code> elements to specify the individual fields.<br>\nDoes that help?</p>",
        "id": 217651184,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1606149359
    },
    {
        "content": "<p>The CarePlan.activity.status values are specified here: <a href=\"http://hl7.org/fhir/valueset-care-plan-activity-status.html\">http://hl7.org/fhir/valueset-care-plan-activity-status.html</a><br>\nThey do not include a value to indicate that a scheduled activity was not performed in its allocated time and was therefor \"missed\".<br>\nAny suggestions on why this status is not included in the spec and how implementations should handle this?<br>\nIs there a general extension mechanism for extending enumeration values like state?</p>",
        "id": 217685474,
        "sender_full_name": "Farrukh Najmi",
        "timestamp": 1606167240
    },
    {
        "content": "<p>CarePlan.activity.plannedActivityDetail.status?  It has a binding of required type.</p>",
        "id": 217702500,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1606178516
    },
    {
        "content": "<p>CarePlan.activity.progress might be relevant element for this case.</p>",
        "id": 217702670,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1606178656
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192103\">@Lin Zhang</span> When cosnidering the same question for CarePlan.status where an application has more status values than what is defined in FHIR I realized that both CarePlan.activity.status are of type code (<a href=\"http://hl7.org/fhir/STU3/datatypes.html#code\">http://hl7.org/fhir/STU3/datatypes.html#code</a>). This means that apps are free to extend the enumerated values for status in my interpretation.</p>",
        "id": 217749265,
        "sender_full_name": "Farrukh Najmi",
        "timestamp": 1606222592
    },
    {
        "content": "<p>No, the set of values is  fixed (the binding is 'Required')</p>",
        "id": 217765047,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1606230110
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"193915\">Farrukh Najmi</span> <a href=\"#narrow/stream/179166-implementers/topic/CarePlans.2C.20PlanDefinitions.20and.20iCBT/near/217685474\">said</a>:</p>\n<blockquote>\n<p>The CarePlan.activity.status values are specified here: <a href=\"http://hl7.org/fhir/valueset-care-plan-activity-status.html\">http://hl7.org/fhir/valueset-care-plan-activity-status.html</a><br>\nThey do not include a value to indicate that a scheduled activity was not performed in its allocated time and was therefor \"missed\".<br>\nAny suggestions on why this status is not included in the spec and how implementations should handle this?<br>\nIs there a general extension mechanism for extending enumeration values like state?</p>\n</blockquote>\n<p>CarePlan.activity[x].scheduledTiming = (past dateTime)<br>\nCarePlan.activity[x].detail.status = not-started<br>\nThese should be enough to indicate that the activity has a schedule passed and not started yet.<br>\nOptionally, You can add CarePlan.activity[x].statusReason to make it clear. Be noticed that FHIR does not provide any binding for that codeableConcept so you have to create your own.</p>",
        "id": 217778590,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1606235576
    },
    {
        "content": "<p>Wow <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> , thank you so much for taking the time to help me navigate the world of FHIR! It is really super appreciated.</p>\n<ol start=\"4\">\n<li>You say that an ActivityDefinition extension would end up as Task.input. How so? Is this behaviour described somwhere?</li>\n<li>Ah, great suggestion with DynamicValue. Seems like a lightweight way to convey this mapping.</li>\n</ol>\n<p>And now I of course have new questions. Let's say the iCBT programme has \"Modules\" and each module consists of \"Steps\". We like see these Modules as resources of their own that can be used by many different iCBT programmes. Like we discussed before, the Steps could be modelled as FHIR ActivitiyDefinitions with kind=Task, but what about the Modules? Right now I'm thinking that we could model these as well as ActivityDefinitions with kind=Task. Then two new questions arise:</p>\n<ol start=\"6\">\n<li>\n<p>Doing this, the \"ModuleActivityDefinition\" seems to have no knowledge about its own \"StepActivityDefinitons\". Instead all this information is stored at the PlanDefinitions level, which doesn't feel right. Is there some way for the ModuleActivityDefinition to reference the Steps in some FHIR like way?</p>\n</li>\n<li>\n<p>I was also thinking about how to nest the PlanDefinition actions. In this example <a href=\"https://www.hl7.org/fhir/plandefinition.html#12.18.3.3\">https://www.hl7.org/fhir/plandefinition.html#12.18.3.3</a> there is only one action at the root level. So would all ModuleActivityDefinitions live inside the a single \"root action\"? Or could we lift up the ModuleActivityDefinitions and put them at the root level? When applying, I assume that would mean creating multiple RequestGroups instead, but I guess it does not make sense converting an action pointing to an ActivityDefinition to a RequestGroup? </p>\n</li>\n</ol>\n<p><span class=\"user-mention\" data-user-id=\"256280\">@Ingvar Sørlien</span> , I recall you had some kind of nesting in your PlanDefinition, right? One group of ActivityDefinitions for \"green\" days and one for \"red\" days etc. Did you also model the groups as ActivityDefinitions? Do you have any wise things to say about #6 and #7?</p>",
        "id": 217820689,
        "sender_full_name": "Håkan MacLean",
        "timestamp": 1606255861
    },
    {
        "content": "<p>So I’ve been thinking some more about how to model this and came up with a new approach that solves both question 6 and 7. Since we want our Modules to have knowledge about their own Steps (i.e. their ActivityDefinitions/Tasks), I thought maybe we could model Modules as PlanDefinitions. Then to create a programme, we create a “parent” PlanDefinition pointing to multiple ModulePlanDefinitions. E.g. like this:<br>\niCBTProgramme: PlanDefinition1</p>\n<ul>\n<li>Module1: PlanDefintion2<ul>\n<li>Task 1: ActivityDefintion1 kind Task</li>\n<li>Task 2: ActivityDefintion2 kind Task</li>\n</ul>\n</li>\n<li>Module2: PlanDefintion3<ul>\n<li>Task 3: ActivityDefintion3 kind Task</li>\n<li>Task 4: ActivityDefintion4 kind Task</li>\n</ul>\n</li>\n</ul>\n<p><strong>The question is then what happens when you “apply” the above to a Patient?</strong> I haven’t found a lot information about the apply operation, except this section here: <a href=\"https://www.hl7.org/fhir/plandefinition.html#12.18.3.3\">https://www.hl7.org/fhir/plandefinition.html#12.18.3.3</a>. In this example one PlanDefinition creates <strong>both</strong> a CarePlan and a ResourceGroup. Would it instead be reasonable that only the parent PlanDefinition generates one CarePlan and the “inner” PlanDefinitions only generate ResourceGroups? <strong>How/where is this behaviour defined? </strong>See suggestion below.</p>\n<p>iCBT Treatment: CarePlan1 (instantiates PlanDefinition1)</p>\n<ul>\n<li>Module1: ResourceGroup 1 (instantiates PlanDefinition2)<ul>\n<li>Task 1: Task1</li>\n<li>Task 2: Task2</li>\n</ul>\n</li>\n<li>Module2: ResourceGroup 2 (instantiates PlanDefinition3)<ul>\n<li>Task 3: Task3</li>\n<li>Task 4: Task4</li>\n</ul>\n</li>\n</ul>",
        "id": 217982783,
        "sender_full_name": "Håkan MacLean",
        "timestamp": 1606384433
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span></p>",
        "id": 218013791,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1606404416
    },
    {
        "content": "<p>The current proposed behavior for nested PlanDefinitions is to have nested CarePlans. However, we are currently prototyping a <code>mergeNestedCarePlans</code> parameter that would indicate that the result of applying nested PlanDefinitions should result in a single merged careplan as the result. <a href=\"http://build.fhir.org/ig/HL7/cqf-recommendations/OperationDefinition-cpg-plandefinition-apply.html\">http://build.fhir.org/ig/HL7/cqf-recommendations/OperationDefinition-cpg-plandefinition-apply.html</a></p>",
        "id": 218132756,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1606515066
    },
    {
        "content": "<p>We would welcome feedback on whether that would work for your use case as well.</p>",
        "id": 218132815,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1606515156
    },
    {
        "content": "<p>Super grateful for every reply  from you <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> ! I'll number my questions so nothing gets lost.</p>\n<ol>\n<li>\n<p>So we first thought nested PlanDefinitions would result in nested CarePlans, but we couldn't figure out how to do it since CarePlan.activity.reference cannot reference a resource of type CarePlan? </p>\n</li>\n<li>\n<p>Do you have any example resources with PlanDefinitions and CarePlans (preferably nested)? Would help a lot with my understanding. Could only find PlanDefinitions here: <a href=\"http://build.fhir.org/ig/HL7/cqf-recommendations/examples.html\">http://build.fhir.org/ig/HL7/cqf-recommendations/examples.html</a></p>\n</li>\n<li>\n<p>Your link says <code>True if the result of any nested PlanDefinitions should be merged into the final care plan, false if they should be preserved as nested CarePlans in the output. If this parameter is not specified, the default behavior is to preserve nested care plans in the output.</code><br>\nWhat would <code>true</code> and <code>false</code> actually result in, if we take my example above? If false you seem to suggest nested CarePlans (even though I don't understand how, see Q1) and if true, what happens then? Are all ActivityDefinitions flattened to the root level? Or do we use multiple ResourceGroups as per my example?</p>\n</li>\n<li>\n<p>Would the proposal I have (with the sub-PlanDefintions resulting in multiple ResourceGroups) be invalid from a FHIR perspective? When I read here: <a href=\"https://www.hl7.org/fhir/plandefinition-operation-apply.html\">https://www.hl7.org/fhir/plandefinition-operation-apply.html</a> it says: <code>The result of this operation is a CarePlan resource with a single activity represented by a RequestGroup.</code> it sounds like maybe it is not valid?</p>\n</li>\n</ol>",
        "id": 218233233,
        "sender_full_name": "Håkan MacLean",
        "timestamp": 1606687775
    },
    {
        "content": "<ol>\n<li>We're looking at using an extension for the nested CarePlan result, either that or you could maybe use the outcomeReference of the activity to reference the CarePlan. We're currently thinking an extension is the right way to go there, with a request in to the CarePlan resource to allow referencing a CarePlan as the reference of an activity.</li>\n<li>There is a CarePlan example here: <a href=\"http://build.fhir.org/ig/who-int/anc-cds/examples.html\">http://build.fhir.org/ig/who-int/anc-cds/examples.html</a>, but it's not nested, that part is in progress.</li>\n<li>True would result in the activities from the nested care plans being pulled in to the activity element of the main care plan, however they were represented in the nested care plans. So if the activities in the nested care plans are RequestGroups, those would be pulled in as RequestGroups in the main care plan.</li>\n<li>That does mean that the main care plan will in general have multiple activities, that is an aspect of the operation documentation that needs to be updated to allow for this (and other) scenarios.</li>\n</ol>",
        "id": 219214543,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1607438858
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"364590\">@Håkan MacLean</span> , apologies for the delayed response :(</p>",
        "id": 219214580,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1607438875
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> I just wanted to follow up on this and thank you for all your time. Unfortunately our feeling, after trying to squeeze our iCBT plan with nested modules into FHIR, was that there wasn't a good match between the standard and our use-case atm, so we decided wait with using FHIR in this case since we are not yet integrating with any external systems.<br>\nHowever, I would be very much interested in hearing about updates to your work and if the extensions you suggested will make it into the standard. Is there any mailing list or similar I can get on to get updates re. FHIR CarePlan and PlanDefinitions?</p>\n<p>My 2c after all of this would be that the easiest and cleanest solution would be that if you have nested PlanDefintions should result in multiple ResourceGroups, but I guess that would require changing the wording of the standard.</p>",
        "id": 222912494,
        "sender_full_name": "Håkan MacLean",
        "timestamp": 1610739129
    }
]