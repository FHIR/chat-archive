[
    {
        "content": "<p>In SearchParameter, there's an element called 'chain' of type string.  But we don't actually document how it's used.  Specifically:</p>\n<ul>\n<li>do you list just the next level (with the presumption that people can nest as deeply as they like) or do you list all specific chain combinations to the depth you support them (meaning you might support chaining to depth 1 and a couple of depth 2 chains, but not all of them)</li>\n<li>what is the syntax to describe what chains you support.  Do you include the current search parameter name, or just what's below it?  Do you lead with a \".\" or not?<br>\nSee tracker item here: <a href=\"http://jira.hl7.org/browse/FHIR-32531\">FHIR#32531</a></li>\n</ul>",
        "id": 263929943,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1638827588
    },
    {
        "content": "<blockquote>\n<p>do you list just the next level (with the presumption that people can nest as deeply as they like)</p>\n</blockquote>\n<p>That's what <a href=\"http://test.fhir.org\">test.fhir.org</a> does</p>",
        "id": 263937369,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1638831773
    },
    {
        "content": "<blockquote>\n<p>do you list all specific chain combinations to the depth you support them</p>\n</blockquote>\n<p>That's a permutational explosion that is not closed on <a href=\"http://test.fhir.org\">test.fhir.org</a></p>",
        "id": 263937400,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1638831793
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> <span class=\"user-mention\" data-user-id=\"193430\">@Alexander Zautke</span> <span class=\"user-mention\" data-user-id=\"197072\">@Paul Church</span> <span class=\"user-mention\" data-user-id=\"191318\">@nicola (RIO/SS)</span> <span class=\"user-mention\" data-user-id=\"191676\">@Lee Surprenant</span> <span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span> <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> - can you comment?</p>",
        "id": 265611348,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1640031674
    },
    {
        "content": "<p>It's very inefficient, but with aidbox you have unlimited \"chains\". The common problem with chain, that there is no way to put two or more criteria on same chain( join)</p>",
        "id": 265611613,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1640031840
    },
    {
        "content": "<p>We even think to introduce \"_join\" parameter for that</p>",
        "id": 265611715,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1640031881
    },
    {
        "content": "<p>But for security and performance reasons from other side we often need to restrict, which chains are allowed</p>",
        "id": 265611801,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1640031945
    },
    {
        "content": "<p>I.e. from api point of view it would be great to document this restrictions</p>",
        "id": 265611965,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1640032044
    },
    {
        "content": "<p>Ours is open like <a href=\"http://test.fhir.org\">test.fhir.org</a>. So would be impractical to express.<br>\nAnd still yet to implement chaining over a canonical reference.</p>",
        "id": 265619017,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1640036612
    },
    {
        "content": "<p>Didn't get a whole lot of responses, and I'm nervous that those solicited are all those who have 'generic' FHIR servers - which will typically always support unlimited chaining.  What about those who have legacy back-ends who only support very specific types of chains and don't necessarily let you chain through to everything and might well want to enumerate?  How do we differentiate the declarations of the generic folk (for whom listing a search parameter automatically means \"and anything you want beneath it\" from the simpler systems for whom it means \"and this alone, with no further nesting\".</p>",
        "id": 267505158,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1641851006
    }
]