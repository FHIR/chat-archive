[
    {
        "content": "<p>Given that I have some canonical URI with a fragment (<a href=\"https://www.hl7.org/fhir/references.html#canonical-fragments\">as per specification</a>), how should I approach resolving it via FHIR API?<br>\nFHIR search API doesn't say anything about fragments.</p>\n<p>Should FHIR search support fragments? That would be easiest for the client in the sense that client wouldn't need to know the type of the \"container\", the search would be simply be <code>ValueSet?uri=http%3A%2F%2Ffhir.acme.com%2FQuestionnaire%2Fexample%7C1.0%23vs1</code> and then it's up to the server to somehow figure that the <code>ValueSet</code> being searched is actually contained inside some <code>Questionnaire</code>.</p>\n<p>Another alternative would be for client to resolve canonical URI without the fragment first, then to lookup the contained resource. However, in that case, how would client formulate the search query? You cannot do <code>?uri=http%3A%2F%2Ffhir.acme.com%2FQuestionnaire%2Fexample%7C1.0</code>. Maybe, <code>?_type=CodeSystem,ValueSet,ImplementationGuide&amp;uri=http%3A%2F%2Ffhir.acme.com%2FQuestionnaire%2Fexample%7C1.0</code>? That just looks plain ugly and also requires client to know the types of all possible containers.</p>",
        "id": 219292272,
        "sender_full_name": "Ivan Dubrov",
        "timestamp": 1607482287
    },
    {
        "content": "<p>I don't think we've ever discussed whether search should find into contained canonicals. Does it work on <a href=\"http://test.fhir.org\">test.fhir.org</a>?</p>",
        "id": 219293017,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1607483196
    },
    {
        "content": "<p>No, it doesn't work. I created CodeSystem <a href=\"http://test.fhir.org/r4/CodeSystem/1\">http://test.fhir.org/r4/CodeSystem/1</a> and then searched ValueSet contained in it via <a href=\"http://test.fhir.org/r4/ValueSet?url=urn%3Auuid%3A49da80fe-107d-4958-aca4-2db07276f0e5%23full\">http://test.fhir.org/r4/ValueSet?url=urn%3Auuid%3A49da80fe-107d-4958-aca4-2db07276f0e5%23full</a></p>\n<p>This use-case of \"entire\" ValueSet being contained in the CodeSystem itself is by the way exactly the use-case I'm interested in: it makes sense to me from the tooling point of view (not for all CodeSystems, of course, but for some). Makes it easier to manage that pair of CodeSystem &lt;--&gt; entire ValueSet.</p>",
        "id": 219294028,
        "sender_full_name": "Ivan Dubrov",
        "timestamp": 1607484447
    },
    {
        "content": "<p>Implicit ValueSets within a CodeSystem?</p>",
        "id": 219296442,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1607487505
    }
]