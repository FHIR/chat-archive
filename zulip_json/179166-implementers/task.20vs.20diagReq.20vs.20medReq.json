[
    {
        "content": "<p>The use case is the patient or their practitioner orders a few items from us for the patient to use the items to collect some samples and then returns them to us for diagnostic. We need to build a resource that allows these items to be ordered. Initially we were gonna go with DiagnosticOrder but we learned it's being deprecated and are now mainly looking at Task, but would like some input or recommendation as to what makes more sense.</p>",
        "id": 153859627,
        "sender_full_name": "Jose Montoya",
        "timestamp": 1480611341
    },
    {
        "content": "<p>DiagnosticRequest also seems a good fit</p>",
        "id": 153859631,
        "sender_full_name": "Jose Montoya",
        "timestamp": 1480614346
    },
    {
        "content": "<p>Especially since the patient/practitioner will be interested in getting the results from the diagnostic</p>",
        "id": 153859632,
        "sender_full_name": "Jose Montoya",
        "timestamp": 1480614497
    },
    {
        "content": "<p>I guess ideally the use case would comprise 2 diff resources Task, which would be sending the sample container to the patient and getting it back, followed by a DiagnosticRequest to be performed on the samples.</p>",
        "id": 153859636,
        "sender_full_name": "Jose Montoya",
        "timestamp": 1480615752
    },
    {
        "content": "<p>Does that sound sane?</p>",
        "id": 153859637,
        "sender_full_name": "Jose Montoya",
        "timestamp": 1480615766
    },
    {
        "content": "<p>Could there be a clean way to collapse that into 1 resource...</p>",
        "id": 153859638,
        "sender_full_name": "Jose Montoya",
        "timestamp": 1480615855
    },
    {
        "content": "<p>that sounds right. The Task documentation should sufficiently explain why they are not collapsed into one resoruce</p>",
        "id": 153859654,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1480618067
    },
    {
        "content": "<p>Usage Recommendations for Task:<br>\n\"Not clear why would anyone do this . . . \"</p>",
        "id": 153859700,
        "sender_full_name": "Jose Montoya",
        "timestamp": 1480621914
    },
    {
        "content": "<p><a href=\"http://build.fhir.org/workflow.html#12.1.2.6.4\" target=\"_blank\" title=\"http://build.fhir.org/workflow.html#12.1.2.6.4\">http://build.fhir.org/workflow.html#12.1.2.6.4</a></p>",
        "id": 153859701,
        "sender_full_name": "Jose Montoya",
        "timestamp": 1480621931
    },
    {
        "content": "<p>that's pretty amusing. <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  please look at that</p>",
        "id": 153859702,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1480622176
    },
    {
        "content": "<p>Worried about the scope of the recommendation? About Task in general? :)</p>",
        "id": 153859703,
        "sender_full_name": "diego kaminker",
        "timestamp": 1480622220
    },
    {
        "content": "<p>RE \"DiagnosticOrder but we learned it's being deprecated\"  - This is incorrect DiagnosticOrder has been renamed to DiagnosticRequest in STU3 just like MedicationOrde has been renamed to MedicationRequest.</p>",
        "id": 153859705,
        "sender_full_name": "Eric Haas",
        "timestamp": 1480622276
    },
    {
        "content": "<p>So we're trying to figure out the best way to implement our use case. 1- patient/practitioner orders some sample containers, 2- patient/practitioner sends us back the container with sample. 3- we diagnose the sample and report the results. At this point I'm thinking a Task that keeps track of SupplyRequest + Supply Delivery + DiagReq (For when we get it back) + DiagReport</p>",
        "id": 153859707,
        "sender_full_name": "Jose Montoya",
        "timestamp": 1480622483
    },
    {
        "content": "<p>It's getting a little unwieldy </p>",
        "id": 153859708,
        "sender_full_name": "Jose Montoya",
        "timestamp": 1480622499
    },
    {
        "content": "<p>But I think that's as clean and FHIRish as it can be</p>",
        "id": 153859709,
        "sender_full_name": "Jose Montoya",
        "timestamp": 1480622536
    },
    {
        "content": "<p>usually that's 2 separate workflows :<br>\n  - SupplyRequest / SupplyDelivery<br>\n  - DiagnosticRequest / DiagnosticReport</p>",
        "id": 153859710,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1480622575
    },
    {
        "content": "<p>but yes, that's the moving parts you have to deal with </p>",
        "id": 153859711,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1480622587
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> We couldn't think of a good reason for a placer to post a Task to a receiver's system.  It's a theoretical option we figured we should document, but don't have a good reason for that particular workflow.  </p>",
        "id": 153861036,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1480974972
    },
    {
        "content": "<p>I think it arises once you inject a broker into the middle between multiple systems</p>",
        "id": 153861038,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1480975301
    },
    {
        "content": "<p>Having a broker is a separate scenario and that one makes good sense.  It's the one where the Placer posts the Task to the Filler that's a little odd.</p>",
        "id": 153861041,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1480977079
    }
]