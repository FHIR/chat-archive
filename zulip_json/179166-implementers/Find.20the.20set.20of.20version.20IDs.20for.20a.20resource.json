[
    {
        "content": "<p>I was giving a tutorial today and was asked if there was a way to find the set of version IDs for a given resource without getting the full details of the versions, i.e. through a simple history call.  My initial answer was no and the set of parameters for history would lead me to believe that is the right answer, but I thought I'd ask the community before I give an absolute no as my answer. :)</p>",
        "id": 173060198,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1565643625
    },
    {
        "content": "<p>dang tricky questions!</p>",
        "id": 173062516,
        "sender_full_name": "David Hay",
        "timestamp": 1565645232
    },
    {
        "content": "<p>Search has _summary for this purpose but I don't think that's supported by history.</p>",
        "id": 173062735,
        "sender_full_name": "Paul Church",
        "timestamp": 1565645355
    },
    {
        "content": "<p><code>_elements=id</code> ?</p>",
        "id": 173088525,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1565676648
    },
    {
        "content": "<p>Close. But there is no description in elements on the syntax for nested props. Eg. Patient.name.family<br>\nOnly defines for properties at the root.<br>\nSo couldn't do patient/43/_history?_elements=meta.vetsionId</p>",
        "id": 173089396,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1565677887
    },
    {
        "content": "<p>(Indeed, we had a discussion about this capability on last week's infrastructure call; while the specification does not define dotted paths in the _elements array, some servers do implement this behavior -- namely HAPI.)</p>",
        "id": 173110117,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1565700868
    },
    {
        "content": "<p>But <a href=\"http://hapi.fhir.org/baseR4/_history?_elements=meta\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/_history?_elements=meta\">http://hapi.fhir.org/baseR4/_history?_elements=meta</a> is standards compliant and pretty close to let us being asked for. It just includes a little bit of additional metadata :)</p>",
        "id": 173110462,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1565701146
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192166\">@Jean Duteau</span> Can you submit a change request to a) explicitly allow dotted paths in _elements; and b) make clear that _elements is supported for _history, and provide this as an example of how you might choose to use it?</p>",
        "id": 173674566,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566319816
    },
    {
        "content": "<p>Done</p>",
        "id": 173693905,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1566333478
    },
    {
        "content": "<p>I must reimplement the dotted notation.</p>",
        "id": 174522010,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1567150235
    },
    {
        "content": "<p>Had some interesting issues when you select a backbone type, does that mean you want all props of it, and none nested eg Patient?_elements=name,identifier</p>",
        "id": 174522090,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1567150324
    }
]