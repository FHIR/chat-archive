[
    {
        "content": "<p>Hi All,</p>\n<p>I'm looking for some broader thoughts around the treatment of the AuditEvent in regards to pure FHIR Servers. <br>\nThe question I have is: Should pure FHIR Servers put any default restrictions on the Restful interactions? e.g. Allow the Create interaction, but not Update or Delete?<br>\nThe given scenario I've come across is that if you wanted to create an AuditEvent with a specific ID, it would require an Update with Allow Create, so it's starting to cross some interesting boundaries in the system. For a pure FHIR Server, does it make sense that this is just pure restful storage allowing all supported resource interactions?</p>\n<p>Brendan</p>",
        "id": 214078098,
        "sender_full_name": "Brendan Kowitz",
        "timestamp": 1603298276
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span></p>",
        "id": 214078326,
        "sender_full_name": "David Pyke",
        "timestamp": 1603298386
    },
    {
        "content": "<p>my server does not allow delete on auditevents</p>",
        "id": 214102116,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1603308470
    },
    {
        "content": "<p>it does allow external systems to put audit events to existing and new ids.</p>",
        "id": 214102213,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1603308500
    },
    {
        "content": "<p>it's not really any different to allowing put to a new id for any other resource - see 'upsert' in the specification</p>",
        "id": 214102256,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1603308526
    },
    {
        "content": "<p>Audit Event is likely one where policy forbids Update and Delete. Yes.</p>",
        "id": 214103023,
        "sender_full_name": "John Moehrke",
        "timestamp": 1603308829
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179166-implementers/topic/AuditEvents.20in.20pure.20FHIR.20Servers/near/214102256\">said</a>:</p>\n<blockquote>\n<p>it's not really any different to allowing put to a new id for any other resource - see 'upsert' in the specification</p>\n</blockquote>\n<p>Thanks for the replies. <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  so your server does allow updates for AuditEvents?</p>\n<p>I guess the underlying implementation question is, should \"CapabilityStatement.rest.resource.updateCreate\" be allowed even if the \"Update\" (CapabilityStatement.rest.resource.interaction) interaction is not defined on that resource? That to me was the slightly grey area.</p>",
        "id": 214131113,
        "sender_full_name": "Brendan Kowitz",
        "timestamp": 1603326190
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>  in principle I also agree, the implementers question is how this is defined as capabilities in the case I want to define the ID</p>",
        "id": 214131314,
        "sender_full_name": "Brendan Kowitz",
        "timestamp": 1603326391
    },
    {
        "content": "<p>it does allow it, but I probably wouldn't allow it in a production EHR. OTOH, my server also plays the role as an audit trail sink, so other systems can send it audit trail events. hence, I allow insert/update/upsert.</p>",
        "id": 214132278,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1603327353
    },
    {
        "content": "<p>Testing server...</p>",
        "id": 214132283,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1603327359
    },
    {
        "content": "<p>Thanks Grahame, John.</p>",
        "id": 214211766,
        "sender_full_name": "Brendan Kowitz",
        "timestamp": 1603383944
    },
    {
        "content": "<p>I'm summarizing as this:<br>\nWhen <code>CapabilityStatement.rest.resource.updateCreate</code> is true, it should invert the behavior to allow creates on PUT and only allow modify when the <code>update</code> interaction is also present.</p>",
        "id": 214213536,
        "sender_full_name": "Brendan Kowitz",
        "timestamp": 1603384695
    },
    {
        "content": "<p>Im not sure I understand your conclusion.   I see no need for updateCreate. The .interaction already is clear on how to declare create only.  if a server wants to allow updateCreate, it then it seems to be normal behavior. I am unclear on what you mean by \"invert the behavior\".</p>",
        "id": 214218681,
        "sender_full_name": "John Moehrke",
        "timestamp": 1603387072
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>  perhaps it would help if you paraphrase what should happen in the case where \"updateCreate = true\", but update is omitted from the resource interactions?</p>\n<p>The definition for the \"create\" interaction on a resource seemed clear with \"Create a new resource with a server assigned id.\"</p>",
        "id": 214225224,
        "sender_full_name": "Brendan Kowitz",
        "timestamp": 1603389864
    },
    {
        "content": "<p>from what I read, updateCreate says that when it is TRUE, the server will treat an Update request as if it is a Create request with the client given id value.... right?</p>",
        "id": 214257315,
        "sender_full_name": "John Moehrke",
        "timestamp": 1603407086
    },
    {
        "content": "<p>Hi team can you please help me how to save audit events ?</p>",
        "id": 215420521,
        "sender_full_name": "Lokesh G S",
        "timestamp": 1604389278
    },
    {
        "content": "<p>My doubt is .. for suppose if i am changing the name of the organization, how should i store it in audit events? can any help me with sample</p>",
        "id": 215420755,
        "sender_full_name": "Lokesh G S",
        "timestamp": 1604389545
    },
    {
        "content": "<p>Regarding your remark in the \"FHIR Message identifiers\"-stream: It always may take some time until a question is answered as the one familiar with your topic might be out of office due to different time zones. Your question is just 1,5 hours old. Please give others time to read and think about your question. Thank you in advance.</p>",
        "id": 215425173,
        "sender_full_name": "Mareike Przysucha",
        "timestamp": 1604393272
    },
    {
        "content": "<p>okay <span class=\"user-mention\" data-user-id=\"196115\">@Mareike Przysucha</span> . Actually i am trying with different people in private chat but no one responded. I am very new to his as developer implemting the tele medicine project. Wanted to know how the audit events are created? do you have any idea <span class=\"user-mention\" data-user-id=\"196115\">@Mareike Przysucha</span></p>",
        "id": 215425330,
        "sender_full_name": "Lokesh G S",
        "timestamp": 1604393394
    },
    {
        "content": "<p>I think this depends on your system. Which programming languange and framework do you use? If you use java, hapi could be an example. Could you provide more information, so that the experts can give better advice?</p>",
        "id": 215425681,
        "sender_full_name": "Mareike Przysucha",
        "timestamp": 1604393623
    },
    {
        "content": "<p>We doing it using fhir graphql node js <span class=\"user-mention\" data-user-id=\"196115\">@Mareike Przysucha</span></p>",
        "id": 215425830,
        "sender_full_name": "Lokesh G S",
        "timestamp": 1604393725
    },
    {
        "content": "<p>some platforms like HAPI have built in automatic logging to AuditEvent format. Most general IT tools will log events to that platforms logging tool, using free text strings.  I suspect a node.js is just going to log free text.  The AuditEvent is intended to be recorded by FHIR knowledgeable applications/services and to be populated with as rich of information as is known. This level of rich audit logging is not something that can be done well by infrastructure.</p>",
        "id": 215457192,
        "sender_full_name": "John Moehrke",
        "timestamp": 1604412419
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"356954\">@Lokesh G S</span> welcome.  In general, it's better to ask questions in public rather than using private messages because there's a broader set of people who can respond.  It also means that others get to benefit from both the question and the answer.  Also, when asking a question, it's important to provide context - what tools you're using, what parts of the specification you've read, etc.  Your original question doesn't make clear whether you've read up on the AuditEvent resource and the section in the security module that talks about audit (which should be a pre-requisite to asking anything).</p>",
        "id": 215501841,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1604432906
    },
    {
        "content": "<p>My server is similar to Grahames in that it permits upserts, however if the auditevent was created by the system, then it is locked. So it kinda does both - support an event sink, and local auditing.</p>",
        "id": 215521091,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1604443905
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179166-implementers/topic/AuditEvents.20in.20pure.20FHIR.20Servers/near/214102256\">said</a>:</p>\n<blockquote>\n<p>it's not really any different to allowing put to a new id for any other resource - see 'upsert' in the specification</p>\n</blockquote>\n<p>although there is an html anchor for 'upsert' it is not  in any narrative, so not possible to \"see\" it.<br>\n<a href=\"https://www.hl7.org/fhir/http.html#upsert\">https://www.hl7.org/fhir/http.html#upsert</a><br>\nI am just now learning this word...</p>",
        "id": 215521691,
        "sender_full_name": "John Moehrke",
        "timestamp": 1604444320
    },
    {
        "content": "<p>Question about the use of AuditEvent. I'm creating an online questionnaire application implemented in FHIR. Currently, it displays one question per screen. In addition to the actual QuestionnaireResponse, I'd like to capture how long the user spends on each screen and the total amount of time per session. Would this information best be captured as AuditEvents, or is there another resource that's more representative?</p>",
        "id": 236116151,
        "sender_full_name": "Grey Faulkenberry",
        "timestamp": 1619408693
    },
    {
        "content": "<p>The AuditEvent resource could certainly be used for this. The AuditEvent.period could be used to indicate when the form was presented, to when the form was submitted.</p>",
        "id": 236171195,
        "sender_full_name": "John Moehrke",
        "timestamp": 1619442949
    }
]