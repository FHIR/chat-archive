[
    {
        "content": "<p>Changing reference to allow logical links: #GF10354 and #GF10659</p>",
        "id": 153849194,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474215791
    },
    {
        "content": "<p>sigh. <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=10354\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=10354\">GF#10354</a> and <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=10659\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=10659\">GF#10659</a></p>",
        "id": 153849195,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474215816
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Can you add a blog post link to the issue?</p>",
        "id": 153849198,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1474215932
    },
    {
        "content": "<p>Actually, I didn't post it :-(</p>",
        "id": 153849199,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474217545
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 153849200,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1474219509
    },
    {
        "content": "<p><a href=\"http://www.healthintersections.com.au/?p=2557\" target=\"_blank\" title=\"http://www.healthintersections.com.au/?p=2557\">http://www.healthintersections.com.au/?p=2557</a></p>",
        "id": 153849201,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474222187
    },
    {
        "content": "<p>Thanks! That was a super-helpful writeup.</p>",
        "id": 153849202,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1474223920
    },
    {
        "content": "<p>Ditto...we've been fighting this issue since the beginning, but it also rocks the world of anyone with a running implementation!</p>",
        "id": 153849203,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1474223995
    },
    {
        "content": "<p>Agreed <span class=\"user-mention\" data-user-id=\"191351\">@Chris Grenz</span>. I commented after you -- agree it's a huge upset.</p>",
        "id": 153849204,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1474224199
    },
    {
        "content": "<p>Josh, I had a technical issue with your comment. I too am conerned about the impact of the idea</p>",
        "id": 153849205,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474224488
    },
    {
        "content": "<p>but I'm not sure how different it really is when you can just refer to a contained resource that contains the identifier. What's the difference?</p>",
        "id": 153849206,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474224507
    },
    {
        "content": "<p>The difference is that contained resources are clearly demarcated as \"avoid this if you can\".</p>",
        "id": 153849207,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1474224572
    },
    {
        "content": "<p>We've made it difficult because we don't think it should be common.</p>",
        "id": 153849208,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1474224586
    },
    {
        "content": "<p>Bringing this up to a first-class reference mechanism changes that stance.</p>",
        "id": 153849209,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1474224606
    },
    {
        "content": "<p>Um. Isn't this already resolved with the introduction of the conditional reference...?</p>",
        "id": 153849210,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1474224607
    },
    {
        "content": "<p>2 cents - we're using contained resources as the primary method of doing this today (prior to conditional reference).</p>",
        "id": 153849211,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1474224621
    },
    {
        "content": "<p>well, we can still say to avoid it. I't not really more first class - just a little more convenient?</p>",
        "id": 153849212,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474224640
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> I think so, except that the reference must be converted on write today.</p>",
        "id": 153849213,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1474224642
    },
    {
        "content": "<p>yes. this can persist. </p>",
        "id": 153849214,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474224656
    },
    {
        "content": "<p>More convenient == better supported. People will start using this kind of reference just because it looks good/fine/useful. Even if they don't need the use case it was designed for.</p>",
        "id": 153849216,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1474224744
    },
    {
        "content": "<p>that's what we said when contained resources were included. But it pretty much didn't turn out to be that much of a practical problem. </p>",
        "id": 153849217,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474224775
    },
    {
        "content": "<p>not as much as people were concerned anyway</p>",
        "id": 153849218,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474224783
    },
    {
        "content": "<p>Because most people don't see/understand contained resources.</p>",
        "id": 153849220,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1474224803
    },
    {
        "content": "<p>You have to go out of your way.</p>",
        "id": 153849221,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1474224811
    },
    {
        "content": "<p>Anyway, I still think I prefer breaking out a separate <code>.identifier</code> better than overloading the <code>.reference</code> property â€” at least clients don't have to parse strings to figure out what's happening.</p>",
        "id": 153849222,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1474224901
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=10659\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=10659\">GF#10659</a> should be satisfied with conditional reference. There's no particular request that the logical references have to be persitant.</p>",
        "id": 153849223,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1474224905
    },
    {
        "content": "<p>the intent is that it will be. The common case is where there isn't a server at all - SSN, etc. </p>",
        "id": 153849224,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474224947
    },
    {
        "content": "<p>I've always argued to use contained resource for that, but one problem there is that sometimes they have mandatory elements you can't know </p>",
        "id": 153849225,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474224980
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 153849226,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1474224994
    },
    {
        "content": "<p>I thought we'd said that in the context of <code>contained</code> resources, all field were optional. I guess I just remember that as a discussion topic rather than a decision.</p>",
        "id": 153849227,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1474225041
    },
    {
        "content": "<p>definitely not a decision. And not easy to make that happen either, except to make nothing mandatory at all</p>",
        "id": 153849228,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474225106
    },
    {
        "content": "<p>It's a relatively small step ;-)</p>",
        "id": 153849229,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1474225145
    },
    {
        "content": "<p>I think you might get some pretty strong comments about that</p>",
        "id": 153849230,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474225217
    },
    {
        "content": "<p>Yeah, hence the wink.</p>",
        "id": 153849231,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1474225232
    },
    {
        "content": "<p>I'd rather write the code to loosen up my contained resource validation than change how Reference works!</p>",
        "id": 153849232,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1474225267
    },
    {
        "content": "<p>Is there some reason allowing conditional references to persist would _not_ meet the requirement?</p>",
        "id": 153849233,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1474225311
    },
    {
        "content": "<p>I think it must meet the functional requirement, because it maps 1:1 syntactically with what Grahame's blog post proposed.</p>",
        "id": 153849234,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1474225344
    },
    {
        "content": "<p>My concern is about confusing clients.</p>",
        "id": 153849235,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1474225357
    },
    {
        "content": "<p>I believe that there are in fact very few resources that still have mandatory elements. Wouldn't it be easier to remove these few that still remain? Deciding what's mandatory is the concern of profiles IMHO</p>",
        "id": 153849236,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1474225402
    },
    {
        "content": "<p>What about cases where a reference can be to multiple types?<br>\nYou are able to differentiate based on the reference url, but which resource would the identifier come from?</p>",
        "id": 153849273,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1474234543
    },
    {
        "content": "<p>It'd be the same issue as if the reference was a urn:uuid.  You can't necessarily look at the reference and know the resource type.</p>",
        "id": 153849275,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1474234821
    },
    {
        "content": "<p>In the case of the urn:uuid this is referencing a resource that is within the bundle, the indentifier is referencing a resource NOT in the bundle. (the receiving system is expected to already know about the resource with the identifier)</p>",
        "id": 153849277,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1474235005
    },
    {
        "content": "<p>Yes, that's what I was wondering about too. Is there an expectation (since Message and Document were mentioned) that the reference is always resolvable in the context of the Bundle?</p>",
        "id": 153849554,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1474289431
    },
    {
        "content": "<p>well, the existing rules would still apply, no?</p>",
        "id": 153849565,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474290086
    },
    {
        "content": "<p>The urn:uuid can work out the type as it will resolve within the bundle you are processing (not exteral reference)<br>\nThe relative or full URI will have the resource type in it so you can work out which it is also.<br>\nJust including an Identifier won't let you choose which resource type to scan for the identifier, so do you scan all permitted types in the reference choice list? (Such as with observation.subject, which is in the example on grahame's blog, which resource type do I search for that identifier?)</p>",
        "id": 153849574,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1474292442
    },
    {
        "content": "<p>Just to let everyone know, this will be discussed face to face Tues Q3 in 'MnM' (which owns the data types) (aka Modelling and Methodology)</p>",
        "id": 153849579,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474292706
    },
    {
        "content": "<p>What I don't like about just using an identifier here is that it changes the concept of reference in two ways:</p>\n<ul>\n<li>It no longer refers to something that is unique and unmuteable, a reference may now refer to multiple things and worse, the identifier referred to is muteable. That means that systems storing this data may no longer resolve this link at storage time and convert it to e.g. a foreign key internally.  As well, as time progresses, a reference to an identifier that was once unique, may become ambiguous, since another resource with a duplicate identifier may have been added to the system.</li>\n<li>A client does no longer know how to resolve the reference. It requires additional knowledge to know what system or architecture it is operating in to interpret the identifier and resolve the reference.</li>\n</ul>",
        "id": 153849646,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1474308724
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 153849647,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1474308969
    },
    {
        "content": "<p>We recently had a discussion here about how to handle merges: <a href=\"https://chat.fhir.org/#narrow/stream/implementers/topic/client.20responsibilities.20on.20reading.20merged.20patients\" target=\"_blank\" title=\"https://chat.fhir.org/#narrow/stream/implementers/topic/client.20responsibilities.20on.20reading.20merged.20patients\">https://chat.fhir.org/#narrow/stream/implementers/topic/client.20responsibilities.20on.20reading.20merged.20patients</a></p>\n<p>Bottom line was so far, that it might be useful to have add the \"new\" identifier to the merged resource, resulting in two resources with the same identifier, one active, one inactive.</p>\n<p>I can handle that with the conditional references by adding ...&amp;active=true to the url. But how does that work with the logical reference proposal?</p>",
        "id": 153849648,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1474309069
    },
    {
        "content": "<p>I'm inclined to think that the proposed change does not apply  to references to conformance resources. If these references cannot be resolved, then the system can't guarantee correct snapshot generation, validation etc.</p>",
        "id": 153849658,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1474309801
    },
    {
        "content": "<p>why are they different? why isn't that the same for any other reference?</p>",
        "id": 153849668,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474310420
    },
    {
        "content": "<p>Actually, the conformance resources are a good example of where a Reference.identifier might be used, but where the client needs to know the context of the identifier to be able to resolve it. If we would have \"identifier\" on Reference, the reference would probably the canonical url for the conformance resource, not the actual endpoint where the conformance resource could be found.  To resolve such an identifier, the client would have to go out to a (local) registry and resolve the identifier by searching on URL.</p>",
        "id": 153849669,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1474310756
    },
    {
        "content": "<p>only, it's not the right identifier</p>",
        "id": 153849678,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474311082
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> Reference doesn't necessarily refer to something unique (you can have &lt;display = \"John Smith\"/&gt;) and unless you specify version in your URL, it doesn't reference something immutable either.  Plus, we can send identifier inside an extension now.  So this is not changing what can be done in Identifier, merely recognizing what can be \"common\" in identifier, recognizing that what's common in REST and what's common in messaging/documents.</p>",
        "id": 153849767,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1474328419
    },
    {
        "content": "<p>Making this change *should* not change how any RESTful servers operate.  And it reflects how external references are (and must) be handled in non-RESTful systems.  And there are going to be a sizeable number of non-RESTful systems.  FHIR Documents and FHIR Messaging may not have been first out of the block, but they're not going to be rare.</p>",
        "id": 153849768,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1474328531
    },
    {
        "content": "<p>how do you figure that it won't make any difference? All of us who maintain servers are looking at this change with extreme distaste</p>",
        "id": 153849769,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474328765
    },
    {
        "content": "<p>How does it make any difference?  There are reference instances now with \"display\" that you can't resolve.  A reference with \"identifier\" would just be another type of reference you can't resolve.</p>",
        "id": 153849772,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1474329473
    },
    {
        "content": "<p>You couldn't resolve it any more if it was a reference with an extension or a reference to a contained resource with a bare id</p>",
        "id": 153849773,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1474329494
    },
    {
        "content": "<p>Yes, it's possible the *some* servers could choose to implement a way to resolve identifier references, but that would be specialized (and context-based) behavior.  It's certainly not something the reference implementations would be expected to (or even should) do.  And servers that only care about REST generally would have no need to do that sort of thing.</p>",
        "id": 153849774,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1474329599
    },
    {
        "content": "<p>I think you are saying, that we would document that resolution from an identifier reference (as opposed to a url reference) would be regarded as a broken link except by informed business processes that could resolve the association, and we would document it accordingly (e.g. chaining is not allowed to work)</p>",
        "id": 153849811,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474365937
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Yes, that's what I'm saying.</p>",
        "id": 153849832,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1474375447
    },
    {
        "content": "<p>Isn't that what using a contained resource implies?  That there isn't enough information to provide the whole resource, but I'll provide what I have.  An \"informed business process\" needn't be limited to resolving identifiers - I may determine that some other combination of elements may suffice to resolve the reference.</p>",
        "id": 153849895,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1474382871
    },
    {
        "content": "<p>We've implemented this in our current messaging, and our server uses a business defined process to convert the contained reference (and contained resource) to a FHIR resource reference when able.  Would be nice if there was a better way for a client to inform its intent here, but the process seems reasonable.</p>",
        "id": 153849898,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1474382995
    },
    {
        "content": "<p>In the discussion on <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12183\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12183\">GF#12183</a> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> made the assertion \"For the vast bulk of systems, a reference with just 'identifier' won't be treated any differently than a reference with just 'display'.\"  Is that what others were expecting, or were you expecting systems to attempt to resolve identifier based references?</p>",
        "id": 153850830,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1474936846
    },
    {
        "content": "<p>Interested in community insight!</p>",
        "id": 153850831,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1474936862
    },
    {
        "content": "<p>check the current draft; I documented that resolution is business knowledge dependent </p>",
        "id": 153850832,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474938457
    },
    {
        "content": "<p>I like the current wording and the conformance choices.</p>",
        "id": 153850833,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1474938649
    },
    {
        "content": "<p>I'm making the argument in <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12183\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12183\">GF#12183</a> that some systems will aggressively try to resolve logical references and in FHIR, that includes the ability to handle validity date ranges (due to the presence of Identifier.period).  I guess we don't view period as simply informational but rather as a critical part of understanding the identifier's utility.</p>",
        "id": 153850834,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1474938847
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> respectfully disagrees!</p>",
        "id": 153850835,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1474938885
    },
    {
        "content": "<p>We can rely on Lloyd to disagree, and also to do that respectfully. Lloyd is an equal opportuntity disagreer</p>",
        "id": 153850836,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474939449
    },
    {
        "content": "<p>I have no opinion on the date issue right now</p>",
        "id": 153850837,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474939460
    },
    {
        "content": "<p>see further comments on the general issuer here:</p>",
        "id": 153850838,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474939469
    },
    {
        "content": "<p><a href=\"http://www.healthintersections.com.au/?p=2575\" target=\"_blank\" title=\"http://www.healthintersections.com.au/?p=2575\">http://www.healthintersections.com.au/?p=2575</a></p>",
        "id": 153850839,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474939477
    },
    {
        "content": "<p>We're doing this one via the listserv? Like when it was 1985? ;)</p>",
        "id": 153850840,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1474939593
    },
    {
        "content": "<p>yep. but be nice. like when it was 1995</p>",
        "id": 153850841,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474939901
    },
    {
        "content": "<p>but feel free to go off about it on facebook or snapchat or instathingy or whatever ;-)</p>",
        "id": 153850842,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474939941
    },
    {
        "content": "<p>Sorry...missed that...was reading documentation on how to use listserv...</p>",
        "id": 153850843,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1474939966
    },
    {
        "content": "<p>Sent the first post to the list... let's see</p>",
        "id": 153850873,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1474977053
    },
    {
        "content": "<p>OK...I think that's done...although I'm not 100% sure I did it right.</p>",
        "id": 153850878,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1474979669
    },
    {
        "content": "<p>On the topic of required elements in contained resources...a simple(r) solution may be to defined every profile with 2 levels, one that specializes all the elements (min:0) and one that introduces the required elements:  <br>\n<code>Resource&lt;-DomainResource&lt;-ContainedPatient&lt;-Patient</code></p>",
        "id": 153851468,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475275218
    },
    {
        "content": "<p>Snapshot for Patient is identical to today.</p>",
        "id": 153851469,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475275254
    },
    {
        "content": "<p>Not so damaging to XSDs...</p>",
        "id": 153851470,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475275278
    },
    {
        "content": "<p>just spitballing....</p>",
        "id": 153851471,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475275287
    },
    {
        "content": "<p>I'll think about that it inevitably heads into covariant restrictions</p>",
        "id": 153851476,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475279293
    },
    {
        "content": "<p>Blogged about this topic here:  <a href=\"https://www.linkedin.com/pulse/fhir-resource-identity-references-chris-grenz\" target=\"_blank\" title=\"https://www.linkedin.com/pulse/fhir-resource-identity-references-chris-grenz\">https://www.linkedin.com/pulse/fhir-resource-identity-references-chris-grenz</a></p>",
        "id": 153851826,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475598227
    },
    {
        "content": "<p>\"Breaks current implementations\" - why?</p>",
        "id": 153851857,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475609916
    },
    {
        "content": "<p>an existing system working the way the existing system works will continue to work</p>",
        "id": 153851858,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475609934
    },
    {
        "content": "<p>I'm also not sure why you're so invested in the idea that this solution 'restricts' you from providing additional details. When I wrote this up in the spec, I made exactly 0 changes to the wording around contained resources</p>",
        "id": 153851859,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475610024
    },
    {
        "content": "<p>\"But in a not-insubstantial set of cases, the identifier needed to be qualified by a date (identifier re-use) or another attribute (date of birth, email, pager number, location, etc.).\"</p>\n<p>- identifier has a period. <br>\n- I don't understand the other use cases</p>",
        "id": 153851860,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475610070
    },
    {
        "content": "<p>Breaks I'm concerned about are primarily around information (presumably of value) located in a previously unavailable location.</p>",
        "id": 153851861,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475610802
    },
    {
        "content": "<p>See <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12183\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12183\">GF#12183</a> for the date issue...</p>",
        "id": 153851862,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475610872
    },
    {
        "content": "<p>As for additional details, I suppose you could have both reference.identifier and reference.reference with a contained reference for the other stuff.  which is really ugly.</p>",
        "id": 153851863,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475610936
    },
    {
        "content": "<p>so technically, it breaks *forward* compatibility, not backwards compatibility</p>",
        "id": 153851864,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475611110
    },
    {
        "content": "<p>Sure, technically.</p>",
        "id": 153851865,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475611122
    },
    {
        "content": "<p>btw, you won't get any traction for saying that we shouldn't do that. (but we should always consider the cost, which is why we have this process now)</p>",
        "id": 153851866,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475611162
    },
    {
        "content": "<p>I'm not against change, that's just one point to consider.</p>",
        "id": 153851867,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475611192
    },
    {
        "content": "<p>I agree that it would be bad to have both reference.identifier and reference.contained. </p>",
        "id": 153851868,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475611252
    },
    {
        "content": "<p>I'm concerned that the identifier solution add a half-solution to a half-solution (contained) resulting in something less than elegant</p>",
        "id": 153851869,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475611265
    },
    {
        "content": "<p>well, there's no elegance in this space anyway, because the problem is (pretty much) lack of elegance</p>",
        "id": 153851870,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475611293
    },
    {
        "content": "<p>Doesn't mean we shouldn't try!</p>",
        "id": 153851871,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475611308
    },
    {
        "content": "<p>I actually think that the contained option isn't as bad as all that and could be massaged a bit...</p>",
        "id": 153851872,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475611343
    },
    {
        "content": "<p>I'm very concerned that the client server interaction lacks clear communication about intent and result</p>",
        "id": 153851873,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475611381
    },
    {
        "content": "<p>what's not clear?</p>",
        "id": 153851874,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475611486
    },
    {
        "content": "<p>Whether the client would like the server to attempt to resolve the reference.</p>",
        "id": 153851875,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475611678
    },
    {
        "content": "<p>Also, should the server be able to communicate resolution rules per-resource?</p>",
        "id": 153851876,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475611729
    },
    {
        "content": "<p>I think there's a significant difference between a Reference with a bare identifier and a reference to a contained resource.  With a contained resource, there's no expectation for any resolution at all.  You'd have to have special business rules to decide if and how resolution might occur.  With an identifier, there's an expectation for resolution at the business level, if needed.</p>",
        "id": 153851901,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1475613816
    },
    {
        "content": "<p>Bad to have both identifier and reference populated?<br>\nI would have thought this would be desired. If I received a resource in with the identifier reference populated, then resolevd it and set the reference, should I then discard the identifier link too?<br>\n(as that would contain the information that was used to resolve the link, incase things changed)<br>\n(We would also need to document how that could change things if patient link/merge was done)</p>",
        "id": 153851902,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1475613971
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> I'm not sure that assumption is going to hold, especially if the guidance is that contained is the place where we store everything that's not explicitly an identifier.</p>",
        "id": 153851904,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475614590
    },
    {
        "content": "<p>I see a very similar/parallel issue in the messaging space when a known patient record is send in the message bundle with the clinical payload.</p>",
        "id": 153851905,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475614647
    },
    {
        "content": "<p>What does the receiver do with that data?  Match to the existing?</p>",
        "id": 153851906,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475614698
    },
    {
        "content": "<p>In the messaging, its the case of deciding is the a patient for storing, or for matching.</p>",
        "id": 153851907,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1475615642
    },
    {
        "content": "<p>Which the server is certainly free to decide.</p>",
        "id": 153851908,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475615699
    },
    {
        "content": "<p>However, in some cases, I'd like to be able to communicate that my *only* intent in providing a record is solely for matching</p>",
        "id": 153851909,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475615749
    },
    {
        "content": "<p>I'm not trying to update anything or even communicate that my data is reliable for anything other than matching</p>",
        "id": 153851910,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1475615777
    },
    {
        "content": "<p>Was there a reason we only had a cordiality of 0..1 on the reference and not 0..*</p>",
        "id": 153851923,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1475623671
    }
]