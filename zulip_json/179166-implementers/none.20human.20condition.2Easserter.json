[
    {
        "content": "<p>We're implementing the Condition service.  We will have an expert system of sorts that we want to be able to create a Condition for a given patient (base on analysis of medical record, test results, lab results, etc.).  Has anyone dealt with AI or expert system references as the \"Condition.asserter\"?  This is not a diagnosis, just a problem added as a problem-list-item.  We'll place the rule-id from our rule engine in the Condition.evidence.This is DSTU2.  Recommendations more than welcome.  </p>",
        "id": 153869008,
        "sender_full_name": "Jim Kreth",
        "timestamp": 1485295661
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> ?</p>",
        "id": 153869497,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1485788477
    },
    {
        "content": "<p>The asserter element in Condition (for DSTU2 and STU3) references a Patient or Practitioner (or RelatedPerson in STU3), so would not provide a way to communicate that a device asserted the condition. Within GuidanceResponse in STU3, we have a performer element that is a reference to a Device, which provides a way to capture the system returning the guidance. So one way to capture that resulting information would be to use a Provenance resource referencing the Condition and capture the device that way using the agent element with role set to performer and the whoReference set to the Device resource.</p>",
        "id": 153869517,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1485795356
    },
    {
        "content": "<p>(actor element in the DSTU2 Provenance resource).</p>",
        "id": 153869519,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1485795415
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> Thanks, that gives me some guidance and a thread to research some more.</p>",
        "id": 153869611,
        "sender_full_name": "Jim Kreth",
        "timestamp": 1485889728
    }
]