[
    {
        "content": "<p>Who's got $closure implemented on a server with SNOMED and LOINC loaded?  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> 's responds but without content (unless I'm doing it wrong...):</p>\n<div class=\"codehilite\"><pre><span></span>POST\n{\n  &quot;resourceType&quot; : &quot;Parameters&quot;,\n  &quot;parameter&quot; : [{\n    &quot;name&quot; : &quot;name&quot;,\n    &quot;valueString&quot; : &quot;eaab9a21-db9a-45e0-a400-0075eb19f790&quot;\n  }, {\n    &quot;name&quot; : &quot;concept&quot;,\n    &quot;valueCoding&quot; : {\n       &quot;system&quot; : &quot;http://snomed.info/sct&quot;,\n       &quot;code&quot; : &quot;44054006&quot;\n    }\n  }]\n}\n</pre></div>",
        "id": 153876624,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1489504722
    },
    {
        "content": "<p>Returns a 200 and an empty ConceptMAp</p>",
        "id": 153876625,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1489504748
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> ?</p>",
        "id": 153876626,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1489504790
    },
    {
        "content": "<p>I think either <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> and/or <span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span> have implemented it?  I may not be remembering exactly (there could be some others).  We can see what they have to say, and I can check further.</p>",
        "id": 153876627,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1489504944
    },
    {
        "content": "<p>yes it's implemented </p>",
        "id": 153876677,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1489519018
    },
    {
        "content": "<p>the first time you use a UUID as a name, you'll get an empty closure because it's the first entry into the table </p>",
        "id": 153876678,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1489519041
    },
    {
        "content": "<p>did Michael and/or Peter also implement it? </p>",
        "id": 153876679,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1489519145
    },
    {
        "content": "<p>yes Michael did. I know Peter was testing but don't remember him ever saying 'done'</p>",
        "id": 153876681,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1489519303
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I'm following the instructions (I think) - initialize the table with a UUID - 200 OK.  Then POST with codings to add codes and return the closure...  I get a 200 OK from that operation as well, but an empty ConceptMap resource</p>",
        "id": 153876701,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1489523735
    },
    {
        "content": "<p>are there relationships? what is your posting sequence?</p>",
        "id": 153876703,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1489523780
    },
    {
        "content": "<p>Sadly, still on my 'to do' list. Hope to complete on time for Madrid. Think Apelon might also have done this.</p>",
        "id": 153876704,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1489523783
    },
    {
        "content": "<div class=\"codehilite\"><pre>\n</pre></div>",
        "id": 153876705,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1489523799
    },
    {
        "content": "<div class=\"codehilite\"><pre>POST /$closure\n{\n  &quot;resourceType&quot; : &quot;Parameters&quot;,\n  &quot;parameter&quot; : [{\n    &quot;name&quot; : &quot;name&quot;,\n    &quot;valueString&quot; : &quot;eaab9a21-db9a-45e0-a400-0075eb19f790&quot;\n  }\n}\n</pre></div>\n\n\n<p>Returns a 200 OK - table initialized.  Then:</p>\n<div class=\"codehilite\"><pre>POST /$clousure\n{\n  &quot;resourceType&quot; : &quot;Parameters&quot;,\n  &quot;parameter&quot; : [{\n    &quot;name&quot; : &quot;name&quot;,\n    &quot;valueString&quot; : &quot;eaab9a21-db9a-45e0-a400-0075eb19f790&quot;\n  }, {\n    &quot;name&quot; : &quot;concept&quot;,\n    &quot;valueCoding&quot; : {\n       &quot;system&quot; : &quot;http://snomed.info/sct&quot;,\n       &quot;code&quot; : &quot;44054006&quot;\n    }\n  }]\n}\n</pre></div>\n\n\n<p>returns a 200 OK with:</p>\n<div class=\"codehilite\"><pre>{\n  &quot;resourceType&quot;: &quot;ConceptMap&quot;,\n  &quot;id&quot;: &quot;40370ab0-de1c-47e1-8d59-e742749a6286&quot;,\n  &quot;version&quot;: &quot;4&quot;,\n  &quot;name&quot;: &quot;Updates for Closure Table eaab9a21-db9a-45e0-a400-0075eb19f790&quot;,\n  &quot;status&quot;: &quot;active&quot;,\n  &quot;experimental&quot;: true,\n  &quot;date&quot;: &quot;2017-03-14T15:10:03Z&quot;\n}\n</pre></div>",
        "id": 153876706,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1489523880
    },
    {
        "content": "<p>I never get any concepts back in the ConceptMap</p>",
        "id": 153876707,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1489523909
    },
    {
        "content": "<p>so that's what's expected. You created a closure table. Then you entered a code in it. </p>",
        "id": 153876709,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1489524190
    },
    {
        "content": "<p>at that point, there's only one snomed concept in the closure table, so there's no relationships generated</p>",
        "id": 153876710,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1489524212
    },
    {
        "content": "<p>Confused - I want a closure of all codes above/below that code.  Isn't that the point?</p>",
        "id": 153876713,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1489526224
    },
    {
        "content": "<p>no. read the doco again. maintaining a closure table is something different</p>",
        "id": 153876714,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1489526259
    },
    {
        "content": "<p>It's building a transitive closure, yes?</p>",
        "id": 153876728,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1489528283
    },
    {
        "content": "<p>So, if:</p>\n<div class=\"codehilite\"><pre>     A\n    /   \\\n  B     C\n / \\      / \\\nD E     F G\n</pre></div>\n\n\n<p>then you'll have A-&gt;B, A-&gt;D, A-&gt;E, etc. for all possible routes (10 total in this case neglecting self-reference)</p>",
        "id": 153876729,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1489528381
    },
    {
        "content": "<p>So how do I get all 10 in this case? Do I have to enter all 10 codes? Seems...painful.</p>",
        "id": 153876730,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1489528654
    },
    {
        "content": "<p>ok...got it working by adding codes at both ends - not what I was expecting, but I'm probably underestimating the volumes for SNOMED.</p>",
        "id": 153876734,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1489529840
    },
    {
        "content": "<p>if you just want parents or chlidren, you can define a value set to expand for that. </p>",
        "id": 153876764,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1489538343
    },
    {
        "content": "<p>maintaining a closure table is done like this so that it can handle expressions, version changes, translations etc on the terminology server side</p>",
        "id": 153876765,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1489538376
    },
    {
        "content": "<p>Yes, we've implemented <code>$closure</code>.<br>\nThe way to think of it is that it gives you (incrementally) the transitive closure of all the concepts you've added to it.  Zero or one concepts can only give you zero edges :)</p>",
        "id": 153876787,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1489543043
    }
]