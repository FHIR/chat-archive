[
    {
        "content": "<p>Hello. I'm curious if there are any references folks can share on how to efficiently reconcile entities in FHIR, ie. how to reconcile entities in nested (tree) data structures. An example that our team is working on different location resources that need to be reconciled. Any thoughts, prior art, research papers, tools would be great.</p>",
        "id": 153950237,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1522775826
    },
    {
        "content": "<p>So checking to see that tree structures on different servers are organized in the same hierarchy?</p>",
        "id": 153950238,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1522776189
    },
    {
        "content": "<p>Yes. So, a use case would be that Server A needs to work with the hierarchy from Server B. After an initial share, Server A now needs to get the latest Server B location hierarchy and check for any staleness in their (Server A) version. Make sense or am I confusing it?</p>",
        "id": 153950260,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1522780317
    },
    {
        "content": "<p>Retrieving a hierarchy is possible if you use the :recurse hierarchy, but that brings back everything all the time.  You could filter by last updated, but it's not clear how that filter interacts with _include.  My reading is that it would apply to the root node, not the _included records, so that wouldn't help much.  You could also grab <em>everything</em> from the server, filtered by last updated, but that may give you a lot of locations you don't care about.  Depending on how many locations are involved, you could filter by last updated and by a list of all the location ids you care about, but that could be a pretty large query if you've got lots of location ids.  (You'd update the list of ids after each query to reflect what you learned the last time)</p>",
        "id": 153950293,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1522781799
    }
]