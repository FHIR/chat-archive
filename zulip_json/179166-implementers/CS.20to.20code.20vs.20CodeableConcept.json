[
    {
        "content": "<p>How do people tend to map CS? I have arguments running for both code and CodeableConcept running in my head</p>",
        "id": 153868723,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1485001794
    },
    {
        "content": "<p>Presume you're talking about extensions as how you map to core elements will be driven by what type the mapped-to element has in the resource.  In the extension space we're a bit more tolerant of code than we are in core because extensions are often very narrow in purpose.  If you're quite certain that the value set is going to be fixed forever and there's no value in people being able to communicate their local codes or needing to use different codes in different environments, then code can be fine.  If you're not sure, stick with CodeableConcept.  Typically elements that would be a CS in v3 will be a \"code\" in FHIR, but not always</p>",
        "id": 153868731,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1485011532
    },
    {
        "content": "<p>Yep, sorry, indeed talking about extensions. Thanks for the input <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> !</p>",
        "id": 153868773,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1485158655
    },
    {
        "content": "<p>Another way to look at it: values in \"codes\" are often built into software as \"case\" or \"if\" statements because they trigger different behaviour, display etc.  The same could be true for CodeableConcepts if the binding strength is \"required\".</p>",
        "id": 153869502,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1485789075
    },
    {
        "content": "<p>Yeah definitely. I was just thinking about the improved readability for debugging of the resources vs increased payload size and things like that</p>",
        "id": 153869522,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1485797430
    }
]