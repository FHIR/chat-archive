[
    {
        "content": "<p>Hi, <br>\nI'm new to FHIR. Just trying to use the json schemas, available on fhir for each resources, to validate input data on the backend. I have a problem with self referencing (for example the element schema, referencing to itself <a href=\"https://www.hl7.org/fhir/Element.schema.json\" target=\"_blank\" title=\"https://www.hl7.org/fhir/Element.schema.json\">https://www.hl7.org/fhir/Element.schema.json</a>), because most of the libraries like ajv crash going in infinite loop. There is a reason for self referencing and this is something that will stay in the future and if there is a solution to this. Thanks</p>",
        "id": 153927172,
        "sender_full_name": "Pietro Ghezzi",
        "timestamp": 1514486216
    },
    {
        "content": "<p>json schema is a challenge for us.</p>",
        "id": 153927186,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514496493
    },
    {
        "content": "<p>I'm expecting to meet with several json schema tool maintainers in march to see if we can figure out how to do a json schema that works across multiple tools - all of them instruct us to do different things with the schema</p>",
        "id": 153927187,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514496547
    },
    {
        "content": "<p>So this means that the schema will change soon?</p>",
        "id": 153927188,
        "sender_full_name": "Pietro Ghezzi",
        "timestamp": 1514496811
    },
    {
        "content": "<p>Grahame, has the new update to the IETF RFC for JSON helped?   RFC8259 (STD90)  <a href=\"https://www.rfc-editor.org/info/std90\" target=\"_blank\" title=\"https://www.rfc-editor.org/info/std90\">https://www.rfc-editor.org/info/std90</a></p>",
        "id": 153927192,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514498547
    },
    {
        "content": "<p>I don't know. I'll have to look</p>",
        "id": 153927196,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514499570
    },
    {
        "content": "<p>I saw another problem with the schema. For example in Patient.schema.json is it correct that the dependencies : Patient_Contact, Patient_Link,... aren't inside dependencies, but on the same level as Patient? Shouldn't it be more like this <a href=\"https://gist.github.com/gpietro/20775ec6d6a53d50426a573a51e8ffeb\" target=\"_blank\" title=\"https://gist.github.com/gpietro/20775ec6d6a53d50426a573a51e8ffeb\">https://gist.github.com/gpietro/20775ec6d6a53d50426a573a51e8ffeb</a> ?</p>",
        "id": 153927328,
        "sender_full_name": "Pietro Ghezzi",
        "timestamp": 1514569249
    },
    {
        "content": "<blockquote>\n<p>I saw another problem with the schema. For example in Patient.schema.json...</p>\n</blockquote>\n<p>As far as I can tell, those <code>Foo.schema.json</code> files auto-generate the documentation, and aren't actual JSON-Schema files for the resource in question.</p>",
        "id": 153927361,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1514697742
    },
    {
        "content": "<p>nup I generate them with the intent that they are actual json schema files</p>",
        "id": 153927364,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514714568
    },
    {
        "content": "<p>Yes they are valid json schemas. I'm trying to make them work with ajv library for validating data input.</p>",
        "id": 153927366,
        "sender_full_name": "Pietro Ghezzi",
        "timestamp": 1514716990
    },
    {
        "content": "<p>Interesting.  A couple of rough edges, but I think the Meteor community could start supporting the raw JSON Schema files then.  </p>\n<p>We've been refactoring/extracting the FHIR Simple Schemas into their own package:<br>\n<a href=\"https://github.com/clinical-meteor/fhir-simple-schemas\" target=\"_blank\" title=\"https://github.com/clinical-meteor/fhir-simple-schemas\">https://github.com/clinical-meteor/fhir-simple-schemas</a></p>\n<p>And our Patient schema is roughly analogous.  We invert the <code>required</code> array into an <code>optional</code> field.   And use a class based shorthand for describing cardinality and type.<br>\n<a href=\"https://github.com/clinical-meteor/fhir-simple-schemas/blob/master/schemas/Patient.js\" target=\"_blank\" title=\"https://github.com/clinical-meteor/fhir-simple-schemas/blob/master/schemas/Patient.js\">https://github.com/clinical-meteor/fhir-simple-schemas/blob/master/schemas/Patient.js</a></p>\n<p>But it looks like there's a JSON Schema to SimpleSchema converter:<br>\n<a href=\"https://github.com/bshamblen/meteor-json-simple-schema\" target=\"_blank\" title=\"https://github.com/bshamblen/meteor-json-simple-schema\">https://github.com/bshamblen/meteor-json-simple-schema</a></p>\n<p>So, with a little bit of work, we can help get the Meteor/Node/NPM communities using JSON Schema files, as published.</p>",
        "id": 153927367,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1514724378
    },
    {
        "content": "<p>I guess my question would be:  why all the underscore fields?  Coming from the other direction, with a validation infrastructure that has been using simple-schemas for the past 2 years, it seems that the json-schemas are cluttered with underscore variables and extensions.  Is there a way to rethink that?</p>",
        "id": 153927369,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1514726537
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191678\">@Abigail Watson</span> I still have some problems with that. <a href=\"https://github.com/epoberezkin/ajv/issues/659\" target=\"_blank\" title=\"https://github.com/epoberezkin/ajv/issues/659\">https://github.com/epoberezkin/ajv/issues/659</a>. I'm looking to find the correct format.<br>\nI got rid of underscore fields. They aren't necessary for input validation.</p>",
        "id": 153927371,
        "sender_full_name": "Pietro Ghezzi",
        "timestamp": 1514729161
    },
    {
        "content": "<p>Huh.  Looks like you're not resolving the urls for the datatypes.  We had to implement those as separate schemas, and pull them in via ES6 imports.  But it's not clear at all that a FHIR server ought to serve them up at any endpoint.  Perhaps resolve to <code>https://www.hl7.org/fhir</code> instead of <code>http://localhost:3030/fhir</code>?</p>\n<p>The problem with those <code>$ref</code>fields is figuring out where they resolve to.   You've approached the problem assuming that they would be endpoints, but the only thing they really specify is the name of a file.  Could be accessed via file reader, or any number of other approaches.</p>",
        "id": 153927372,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1514731124
    },
    {
        "content": "<p>I have now a \"working\" solution with ajv without the use of Extension and ResourceList schemas.<br>\nThe problem is that those schemas have too many $ref.</p>",
        "id": 153927373,
        "sender_full_name": "Pietro Ghezzi",
        "timestamp": 1514739423
    },
    {
        "content": "<p>the json schemas contain the underscored fields because the json source does too</p>",
        "id": 153927377,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514833313
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  What do you mean with json source?</p>",
        "id": 153927378,
        "sender_full_name": "Pietro Ghezzi",
        "timestamp": 1514835664
    },
    {
        "content": "<p>the json resources</p>",
        "id": 153927379,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514837973
    },
    {
        "content": "<blockquote>\n<p>I'm expecting to meet with several json schema tool maintainers in march to see if we can figure out how to do a json schema that works across multiple tools - all of them instruct us to do different things with the schema</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  can you tell some of the those instructions? I'm trying to elaborate the schemas. One try was to put all the references inside the resources definitions. It works but it is unacceptable since there are too many and files get too big. I'm curious to know some suggestions on how to solve this problem and try an implementation. Thanks</p>",
        "id": 153927741,
        "sender_full_name": "Pietro Ghezzi",
        "timestamp": 1515146874
    },
    {
        "content": "<blockquote>\n<p>Interesting.  A couple of rough edges, but I think the Meteor community could start supporting the raw JSON Schema files then.  </p>\n<p>We've been refactoring/extracting the FHIR Simple Schemas into their own package:<br>\n<a href=\"https://github.com/clinical-meteor/fhir-simple-schemas\" target=\"_blank\" title=\"https://github.com/clinical-meteor/fhir-simple-schemas\">https://github.com/clinical-meteor/fhir-simple-schemas</a></p>\n<p>And our Patient schema is roughly analogous.  We invert the <code>required</code> array into an <code>optional</code> field.   And use a class based shorthand for describing cardinality and type.<br>\n<a href=\"https://github.com/clinical-meteor/fhir-simple-schemas/blob/master/schemas/Patient.js\" target=\"_blank\" title=\"https://github.com/clinical-meteor/fhir-simple-schemas/blob/master/schemas/Patient.js\">https://github.com/clinical-meteor/fhir-simple-schemas/blob/master/schemas/Patient.js</a></p>\n<p>But it looks like there's a JSON Schema to SimpleSchema converter:<br>\n<a href=\"https://github.com/bshamblen/meteor-json-simple-schema\" target=\"_blank\" title=\"https://github.com/bshamblen/meteor-json-simple-schema\">https://github.com/bshamblen/meteor-json-simple-schema</a></p>\n<p>So, with a little bit of work, we can help get the Meteor/Node/NPM communities using JSON Schema files, as published.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191678\">@Abigail Watson</span> I don't see a good reason in converting json schema to another format like json-simple-schema. It's not even a standard, it would create only a dependency. I did try to solve the issue by importing refs into resources definitions but the file gets too big. Another solution could be: importing only the circular refs but I don't know if it's doable, or, simplify the schemas as you did in <a href=\"https://github.com/clinical-meteor/fhir-simple-schemas\" target=\"_blank\" title=\"https://github.com/clinical-meteor/fhir-simple-schemas\">https://github.com/clinical-meteor/fhir-simple-schemas</a> with an official full supported version. Any thoughts?</p>",
        "id": 153927744,
        "sender_full_name": "Pietro Ghezzi",
        "timestamp": 1515148448
    },
    {
        "content": "<p><span class=\"emoji emoji-1f937\" title=\"shrug\">:shrug:</span>  It may not be suitable for your use case. </p>\n<p>We like it because <code>meteor-simple-schema</code>supports isomorphic client/server/database design, came out of the  Meteor.js community, which was started and currated by MIT alumni, and is now one of the most popular web frameworks on the internet,  and has been widely proven in production.  But you're correct, it uses an adhoc schema library.  </p>\n<p>So, if we want to harmonize with the FHIR standards, we're probably going to want to migrate the <code>fhir-simple-schemas</code> from SimpleSchemas to JsonSchemas; which means moving towards <code>meteor-json-simple-schema</code>.   </p>\n<p>But all the source code is there.  We've got a strategy for converting FHIR Json Schemas into Meteor SimpleSchemas, which can be attached to Mongo cursors on the server and minimongo cursors on the client.  And it all supports hooks and triggers.  </p>\n<p>Guess what I'm trying to say is 'this is what we had to go  through to get a working schema validation infrastructure working' and 'this is our plans for harmonizing with FHIR initiatives'.</p>",
        "id": 153927822,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1515189996
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191678\">@Abigail Watson</span> I didn't mean to criticize the choice of the framework. Meteor is perfectly fine. What I was trying to say is that if we stay with a standard format it would be better for everyone (you could choose, js, python, go,...) and there are already the fhir schemas for each resource (155). I think it needs just a little effort to make them work with validation libraries. It would be more difficult the other way around, I didn't find any library supporting self referencing. So far I see AJV as the best choice. But I would like to hear also the option of <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> about this, I have limited knowledge of FHIR. <br>\nAlso Mongo version 3.6 supports now json schema validation:<br>\n<a href=\"https://docs.mongodb.com/manual/core/schema-validation/#json-schema\" target=\"_blank\" title=\"https://docs.mongodb.com/manual/core/schema-validation/#json-schema\">https://docs.mongodb.com/manual/core/schema-validation/#json-schema</a></p>\n<p>There are also client side library for rendering forms with json schemas.  One is from mozilla:<br>\n<a href=\"https://github.com/mozilla-services/react-jsonschema-form\" target=\"_blank\" title=\"https://github.com/mozilla-services/react-jsonschema-form\">https://github.com/mozilla-services/react-jsonschema-form</a></p>\n<p>This would save a lot of work.</p>\n<p>I'm available on helping with this if anyone like the idea.</p>",
        "id": 153927829,
        "sender_full_name": "Pietro Ghezzi",
        "timestamp": 1515192907
    },
    {
        "content": "<p>No criticism taken.  I'd very much like to move towards using the standard json-schemas that FHIR provides directly; and the Meteor community is in a great position to make that migration and promote it.  The Mongo 3.6 support for <code>json-schema</code> in the database is pretty fantastic; and we could continue using <code>meteor-json-simple-schema</code> when we need validation on the server and client cursors.  </p>\n<p>I will say that we've had problems with using schema based form rendering in the past.  We had a templating layer which people tried to add an additional templating layer on top of; and it became too much abstraction.  But people continue asking about it; and the React approach with its pure methods and functional programming might make the approach work.  The real win, of course, would be in autogenerating forms for the long tail of lesser-used FHIR schemas.</p>",
        "id": 153927833,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1515195332
    },
    {
        "content": "<p>Anyhow, count me in.  I'd be happy to test out the json-schemas for Mongo 3.6 and the <code>react-jsonschema-form</code>.  We're doing a refactor/redesign right now, and I'm happy to take recommendations and ideas.  (Still on the fence about <code>ajv.js</code> though. It's probably a solution for non-Meteor node apps.)</p>",
        "id": 153927834,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1515195359
    },
    {
        "content": "<p>Now here's the important question: are the FHIR json-schemas available on NPM anywhere?</p>",
        "id": 153927835,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1515196090
    },
    {
        "content": "<p>Is Swagger (aka Open API) a viable alternative or complement to other JSON schema technologies?<br>\n<a href=\"https://github.com/OAI/OpenAPI-Specification\" target=\"_blank\" title=\"https://github.com/OAI/OpenAPI-Specification\">https://github.com/OAI/OpenAPI-Specification</a></p>",
        "id": 153927856,
        "sender_full_name": "Joel Schneider",
        "timestamp": 1515266887
    },
    {
        "content": "<p>complement - it uses JSON schema, though with some technical restrictions that are very... painful... for us</p>",
        "id": 153927859,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515270631
    },
    {
        "content": "<p>So, I took the liberty of publishing the JSON Schemas onto NPM:<br>\n<a href=\"https://www.npmjs.com/package/fhir-schemas\" target=\"_blank\" title=\"https://www.npmjs.com/package/fhir-schemas\">https://www.npmjs.com/package/fhir-schemas</a></p>\n<p>And I managed to get Ajv.js working.  Implementation is in the following file:<br>\n<a href=\"https://github.com/clinical-meteor/meteor-on-fhir/blob/schemas/webapp/server/main.js\" target=\"_blank\" title=\"https://github.com/clinical-meteor/meteor-on-fhir/blob/schemas/webapp/server/main.js\">https://github.com/clinical-meteor/meteor-on-fhir/blob/schemas/webapp/server/main.js</a></p>\n<p>A few notes:</p>\n<p>1.  Element, Extension, and ResourceList were the resources that caused the pain points.<br>\n2.  The way they're structured requires importing ALL of the schemas into Ajv, so it can parse across the entire dependency graph.  It's the <code>allOf</code> and <code>oneOf</code>declarations that wind up spanning across the entire API surface.<br>\n3.  The $schema field in the published JSON Schemas isn't being picked up by Ajv.  I had to delete it from each resource.<br>\n4.  Likewise, the <code>Foo.id</code> field needed to be assigned to <code>Foo.$id</code>.  <br>\n5.  Lastly, and most importantly, the <code>Foo.schema.json</code>references needed to be replaced by <code>http://hl7.org/fhir/json-schema/Foo</code></p>\n<p>In summary, some of the $ fields seem to be misconstructed, and the <code>$ref</code> fields should point to the schema id, not the name of the .json file.</p>",
        "id": 153927863,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1515281268
    },
    {
        "content": "<p>Later this week I'll do the <code>meteor-json-simple-schema</code> integration; and see if the $ref values work in that library also.</p>",
        "id": 153927864,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1515281355
    },
    {
        "content": "<p>The problem with swagger are the remote refs that is not resolved.</p>",
        "id": 153927872,
        "sender_full_name": "Pietro Ghezzi",
        "timestamp": 1515322825
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Can you give any opinion on the viability of replacing the .json file names in the $ref fields with the $id?  i.e. changing from <code>$ref: \"Foo.schema.json\"</code> to <code>$ref: \"http://hl7.org/fhir/json-schema/Foo\"</code>?</p>",
        "id": 153928067,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1515456898
    },
    {
        "content": "<p>One json schema tool author said that would be a wrong thing to do. Other than that, I don't know. I get conflicting advice from the json schema tools guys. That's why I'm hoping to meet them face to face in March</p>",
        "id": 153928069,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515459820
    },
    {
        "content": "<p>Gotchya.  It sort of boils down to different implementations, then.  Hate to suggest that we need a spreadsheet, but it sounds like it may boil down to doing some empirical research and tracking which schemas are supported in which tools.  Thx!</p>",
        "id": 153928070,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1515462001
    },
    {
        "content": "<p>As I said it would be great to know what those advice from library maintainers are to try out some solutions and make a proposal.</p>",
        "id": 153928639,
        "sender_full_name": "Pietro Ghezzi",
        "timestamp": 1515761991
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <a href=\"https://github.com/fhir-js/fhir-schema\" target=\"_blank\" title=\"https://github.com/fhir-js/fhir-schema\">https://github.com/fhir-js/fhir-schema</a> - source code &amp; here is a demo <a href=\"http://fhir-js.github.io/fhir-schema/\" target=\"_blank\" title=\"http://fhir-js.github.io/fhir-schema/\">http://fhir-js.github.io/fhir-schema/</a></p>\n<p>For contained resources and resource list we could use reference to the root $ref: \"#/\" - so if engine support discriminator - it will report better errors</p>",
        "id": 153932381,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1517177548
    },
    {
        "content": "<p>During the Working Group FHIRChat, someone mentioned that a new set of R4 schemas were published last week, after the connectathon?  Is there a link?</p>",
        "id": 153935145,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1517676055
    },
    {
        "content": "<p>Graham posted in the JSON Schema(R3) thread that it's available for download on <a href=\"http://build.fhir.org\" target=\"_blank\" title=\"http://build.fhir.org\">build.fhir.org</a>  - took me a while to find it -- here's the direct URL:   <a href=\"http://build.fhir.org/fhir.schema.json.zip\" target=\"_blank\" title=\"http://build.fhir.org/fhir.schema.json.zip\">http://build.fhir.org/fhir.schema.json.zip</a></p>",
        "id": 153935152,
        "sender_full_name": "John Silva",
        "timestamp": 1517684395
    },
    {
        "content": "<p>Thank you!  Exactly what I was looking for.  It blipped by as desktop notification, and I couldn't find it again.  Will get to work publishing it on NPM...</p>",
        "id": 153935177,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1517753452
    },
    {
        "content": "<p>Okay, got it loaded up into the <code>fhir-schemas</code> package.  Anybody have an Ajv.js syntax example for the new all-in-one file format?  I'm not seeing <code>id</code> or <code>$id</code> properties on the resources.</p>",
        "id": 153935179,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1517763330
    },
    {
        "content": "<p>$id - ?</p>",
        "id": 153935205,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517776260
    },
    {
        "content": "<p>Do you mean the <a href=\"http://meta.id\" target=\"_blank\" title=\"http://meta.id\">meta.id</a> property?</p>",
        "id": 153935218,
        "sender_full_name": "John Silva",
        "timestamp": 1517778053
    },
    {
        "content": "<p>Well, I mean an <code>$id</code> field on the schema:  <br>\n<a href=\"https://github.com/clinical-meteor/fhir-schemas/blob/master/fhir.schema.json/Patient.schema.json#L3\" target=\"_blank\" title=\"https://github.com/clinical-meteor/fhir-schemas/blob/master/fhir.schema.json/Patient.schema.json#L3\">https://github.com/clinical-meteor/fhir-schemas/blob/master/fhir.schema.json/Patient.schema.json#L3</a></p>\n<p>We're having a bit more success with the Json Schemas from the download page than the all-in-one schema.  The schemas that are separated out in different files at least have an <code>id</code> field.  We used that to add a <code>$</code> and arrived at an <code>$id</code> field which our validator could pick up and stitch together into a graph.  Having all the schemas in the same file solves the problem of building an API graph, I think; but now I'm not entirely sure how to query a single schema, if not by id.  </p>\n<p>I'm going to experiment with syntax a bit more.  Having them all in a single file could be a good idea; but there's still a bit of room for improvement.</p>",
        "id": 153935407,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1517879437
    },
    {
        "content": "<p>so we decided to get rid of the individual schemas - they were generating all the problems with references, and they weren't real useful because they all depended on each other anyway</p>",
        "id": 153935408,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517879646
    },
    {
        "content": "<p>I think you're doing something with the graph that's not clear to me - can you explain more?</p>",
        "id": 153935409,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517879672
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191678\">@Abigail Watson</span> ping on this - I'd like to close JSON schema issues out</p>",
        "id": 153936406,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518120450
    },
    {
        "content": "<p>I think we're all set on the NPM side.  We had to add the following <code>$id</code> field at the top of the file, like so:</p>\n<div class=\"codehilite\"><pre><span></span>&quot;$id&quot; : &quot;http://hl7.org/fhir/json-schema&quot;,\n</pre></div>\n\n\n<p>Which lets us do the following:</p>\n<div class=\"codehilite\"><pre><span></span>import { FhirApi } from &#39;fhir-schemas&#39;;\nimport Ajv from &#39;ajv&#39;;\n\nvar ajv = new Ajv;\nvar validate = ajv.addSchema(FhirApi).getSchema(&#39;http://hl7.org/fhir/json-schema/Patient&#39;);\n\nvar newPatient = {\n    &quot;resourceType&quot;: &quot;Patient&quot;,\n    &quot;name&quot;: [{\n        &quot;family&quot;: &#39;Doe&#39;,\n        &quot;given&quot;: [&#39;Jane&#39;]\n    }],\n    &quot;identifier&quot;: [{\n        &quot;value&quot;: &#39;123&#39;\n    }]\n};\n\nvar isValid = validate(newPatient);\n</pre></div>\n\n\n<p>Apparently, as long as that initial <code>$id</code> is there, Ajv will autogenerate the <code>$id</code> fields throughout the rest of the schema.  We can even override it with a second parameter (but it's not as clean syntax).</p>\n<div class=\"codehilite\"><pre><span></span>var validate = ajv.addSchema(FhirApi2, &quot;http://hl7.org/fhir/json-schema&quot;).getSchema(&#39;http://hl7.org/fhir/json-schema#/definitions/Patient&#39;);\n</pre></div>\n\n\n<p>Anyhow, it's all working great, with minimal maintenance on our part.  Great work, everyone.</p>",
        "id": 153936574,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1518193580
    },
    {
        "content": "<p>Also, it's now published in the <code>fhir-schemas</code>NPM package.  <br>\n<a href=\"https://www.npmjs.com/package/fhir-schemas\" target=\"_blank\" title=\"https://www.npmjs.com/package/fhir-schemas\">https://www.npmjs.com/package/fhir-schemas</a></p>\n<p>I'm still refining the README with examples, and deprecating the older schemas that Meteor was using.  Regardless, I have a list of list of Meteor apps that will be migrating towards it, and and a number of business clients using Node who are asking about it as well.</p>",
        "id": 153936576,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1518193856
    },
    {
        "content": "<p>ok added the root $id to the generator</p>",
        "id": 153936618,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518206937
    },
    {
        "content": "<p>Fantastic.  Should we think about including semver or release version in there?  <br>\n<code>http://hl7.org/fhir/json-schema/v3.0.1/</code></p>",
        "id": 153936619,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1518207115
    },
    {
        "content": "<p>If we were to do that, we should trim it to \"3.0\" rather than \"3.0.1\"</p>",
        "id": 153936620,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1518207260
    },
    {
        "content": "<p>Works for me.  I'd only want to release on major versions, anyhow.</p>",
        "id": 153936621,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1518207347
    },
    {
        "content": "<p>I'll do that</p>",
        "id": 153936623,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518207494
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> - all this work was kicked off because you wanted to add more metadata to the json schema. Now would be a great time to start adding to it, now that it's valid</p>",
        "id": 153937988,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518736461
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> - all this work was kicked off because you wanted to add more metadata to the json schema. Now would be a great time to start adding to it, now that it's valid</p>\n</blockquote>\n<p>Yes! I have a few:</p>\n<ul>\n<li>xml-order</li>\n<li>binding information (strength, valueset)</li>\n<li>is choice type?</li>\n<li>target profile</li>\n<li>aggregation</li>\n<li>mustsupport, ismodifier</li>\n</ul>\n<p>just to get started...</p>\n<p>pattern values - I doubt we could do that.</p>",
        "id": 153938188,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1518785238
    },
    {
        "content": "<p>yikes - just loaded the R3 into Swagger UI and effectively killed Chrome as the mem usage swelled to over 20GB</p>",
        "id": 153941124,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1519797790
    },
    {
        "content": "<p>That's swagger ui problem - create them issue on github :) - they should be lazy</p>",
        "id": 153941140,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1519819948
    },
    {
        "content": "<p>...are the json schema files for DSTU2? Or a way to generate them?</p>",
        "id": 153956949,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1525789866
    },
    {
        "content": "<p><a href=\"http://hl7.org/fhir/DSTU2/allergyintolerance.html#resource\" target=\"_blank\" title=\"http://hl7.org/fhir/DSTU2/allergyintolerance.html#resource\">http://hl7.org/fhir/DSTU2/allergyintolerance.html#resource</a><br>\nCheck 'JSON'</p>",
        "id": 153956953,
        "sender_full_name": "Dread Hawk",
        "timestamp": 1525790116
    },
    {
        "content": "<p>That's a example of JSON coding, not the JSON schema...</p>",
        "id": 153956954,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1525790197
    },
    {
        "content": "<p>There are JSON schemas for STU3 at <a href=\"https://www.hl7.org/fhir/fhir.schema.json.zip\" target=\"_blank\" title=\"https://www.hl7.org/fhir/fhir.schema.json.zip\">https://www.hl7.org/fhir/fhir.schema.json.zip</a>, but not for DSUT2</p>",
        "id": 153956955,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1525790216
    },
    {
        "content": "<p>Derp. Sorry.</p>",
        "id": 153956957,
        "sender_full_name": "Dread Hawk",
        "timestamp": 1525790279
    },
    {
        "content": "<p>..no problem...thanks for trying!</p>",
        "id": 153956959,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1525790814
    },
    {
        "content": "<p>I thought I generated json schema for R2 somewhere -- but can't retrospectively add them to the spec itself.</p>",
        "id": 153957101,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525839897
    },
    {
        "content": "<p>If there is a way to get those files - or to generate them somehow - that would be great</p>",
        "id": 153957398,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1525894390
    },
    {
        "content": "<p>(We have a customer asking for Swagger description of our FHIR DSTU2 implementation, and the json schemas are the closes thing to that)</p>",
        "id": 153957399,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1525894431
    },
    {
        "content": "<p>umm. I'll have a look - but I'm pretty backlogged up...</p>",
        "id": 153958117,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526065419
    },
    {
        "content": "<p>Bump - I need json schemas for testing purposes.</p>",
        "id": 153972965,
        "sender_full_name": "Dread Hawk",
        "timestamp": 1530561519
    },
    {
        "content": "<p>They are 'hidden' ;-) in a non-obvious place under Documentation -&gt; Downloads</p>\n<p><a href=\"http://build.fhir.org/downloads.html\" target=\"_blank\" title=\"http://build.fhir.org/downloads.html\">http://build.fhir.org/downloads.html</a> (R4) or <a href=\"https://www.hl7.org/fhir/downloads.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/downloads.html\">https://www.hl7.org/fhir/downloads.html</a></p>\n<p>The JSchema file is one BIG file with many internal references.  I've had some problems using it (though not the most recent version) with Newtonsoft's JSchema implementation.</p>",
        "id": 153973110,
        "sender_full_name": "John Silva",
        "timestamp": 1530616589
    },
    {
        "content": "<p>Sorry, I meant that I need STU2 json schemas, preferably with Argonaut profiles.</p>",
        "id": 153973187,
        "sender_full_name": "Dread Hawk",
        "timestamp": 1530636846
    },
    {
        "content": "<p>I do not think that I have generated these, or that it's very easy for me to do so</p>",
        "id": 153973221,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530648645
    },
    {
        "content": "<p>I received the following question today:</p>\n<blockquote>\n<p>we experience inconsistencies in the FHIR json files from R4 Ballot #1 (FHIR 3.3.0) ( <a href=\"http://hl7.org/fhir/2018May\" target=\"_blank\" title=\"http://hl7.org/fhir/2018May\">http://hl7.org/fhir/2018May</a> ). <br>\nThe experience with the current version (FHIR Release 3 STU) was much better and does not contain any of these inconsistencies.<br>\n Is that a “normal” behavior and we can expect the metadata quality to improve when it comes to the final R4 release?</p>\n<p>Find below the list of problems with the JSON encoded files of the FHIR definitions and examples for version 3.3.0:</p>\n<p>In <a href=\"http://hl7.org/fhir/2018May/definitions.json.zip\" target=\"_blank\" title=\"http://hl7.org/fhir/2018May/definitions.json.zip\">http://hl7.org/fhir/2018May/definitions.json.zip</a></p>\n<p>valuesets.json<br>\nMultiple entries missing 1..1 field <code>CodeSystem.content</code>: <a href=\"http://hl7.org/fhir/2018May/codesystem.html\" target=\"_blank\" title=\"http://hl7.org/fhir/2018May/codesystem.html\">http://hl7.org/fhir/2018May/codesystem.html</a><br>\nWe patched the standard to allow 0..1</p>\n<p><code>fhir-versions</code> CodeSystem with entry in <code>concept</code> list missing the 1..1 field <code>code</code>:<br>\nAt lines</p>\n<p>32913           {<br>\n  32914             \"display\": \"1.0.2\",<br>\n  32915             \"definition\": \"DSTU 2 (Official version) with 1 technical errata\"<br>\n  32916           },</p>\n<p>We changed to</p>\n<p>32913           {<br>\n  32914             \"code\": \"1.0.2\",<br>\n  32915             \"display\": \"1.0.2\",<br>\n  32916             \"definition\": \"DSTU 2 (Official version) with 1 technical errata\"<br>\n  32917           },</p>\n<p><code>feeding-device</code> CodeSystem missing 1..1 field <code>status</code><br>\nAt lines</p>\n<p>36431       \"fullUrl\": \"<a href=\"http://hl7.org/fhir/CodeSystem/feeding-device\" target=\"_blank\" title=\"http://hl7.org/fhir/CodeSystem/feeding-device\">http://hl7.org/fhir/CodeSystem/feeding-device</a>\",<br>\n  36432       \"resource\": {<br>\n  36433         \"resourceType\": \"CodeSystem\",<br>\n  36434         \"id\": \"feeding-device\",<br>\n  36435         \"meta\": {</p>\n<p>We changed to</p>\n<p>36431       \"fullUrl\": \"<a href=\"http://hl7.org/fhir/CodeSystem/feeding-device\" target=\"_blank\" title=\"http://hl7.org/fhir/CodeSystem/feeding-device\">http://hl7.org/fhir/CodeSystem/feeding-device</a>\",<br>\n  36432       \"resource\": {<br>\n  36433         \"resourceType\": \"CodeSystem\",<br>\n  36434         \"status\": \"unknown\",<br>\n  36435         \"id\": \"feeding-device\",<br>\n  36436         \"meta\": {</p>\n<p>dataelements.json<br>\nMultiple entries missing 1..1 field<br>\nWe ended up ignoring them in the tests as it was not obvious how to fix</p>\n<p>Here is the list of issues we found because we have tests validating the example files:</p>\n<p>·         Files with entry(ies) missing some mandatory <code>base</code> field:<br>\no   codesystem-extensions-CodeSystem-{author,effective,end,keyword,workflow}.json<br>\no   valueset-extensions-CodeSystem-{author,effective,end,keyword,workflow}.json</p>\n<p>·         Files with entry(ies) missing some mandatory <code>type</code> field:<br>\no   definition.json<br>\no   event.json<br>\no   request.json<br>\no   fivews.json</p>\n<p>·         Files with entry(ies) missing some mandatory <code>linkId</code> field:<br>\no   All files whose name end with <code>-questionnaire.json</code>, except for <code>operation-structuredefinition-questionnaire.json</code></p>\n<p>·         Files with entry(ies) missing some mandatory <code>code</code> field:<br>\no   codesystem-fhir-versions.json<br>\no   valuesets.json<br>\no   dataelements.json</p>\n<p>·         Files with entry(ies) missing some mandatory <code>status</code> field:<br>\no   codesystem-feeding-device.json<br>\no   codesystem-fhir-versions.json</p>\n</blockquote>\n<p>...can someone comment on these issues?</p>",
        "id": 153980839,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1533190963
    },
    {
        "content": "<p>Hi Simone, thanks for posting it. I'm the one that found these issues in your comment. Another case is the file <code>plandefinition-example-cardiology-os.json</code> in examples. On line 551 the field <code>action</code> contains null values without a companion <code>_action</code> field containing corresponding <code>{id: “”, extension: {…}}</code> values.</p>\n<div class=\"codehilite\"><pre><span></span>    551       &quot;action&quot;: [\n    552         null,\n    553         {\n    …\n    601         },\n    602         null,\n    603         null,\n    604         null,\n    605         {\n    …\n    700         }\n    701       ]\n</pre></div>",
        "id": 153980940,
        "sender_full_name": "Gabriel Bezerra",
        "timestamp": 1533218101
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ...?</p>",
        "id": 153983527,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1533709396
    },
    {
        "content": "<p>json schema is on my list for the net week or so</p>",
        "id": 153983534,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533710140
    },
    {
        "content": "<p>I just released a work I have done two years ago with the jsonschema. It's a javascript generator that helps to create a REST API with FHIR resources. It only support STU3 for now. If somebody has the time to check it out I would interested in some feedback.</p>",
        "id": 156992597,
        "sender_full_name": "Pietro Ghezzi",
        "timestamp": 1548631532
    },
    {
        "content": "<p><a href=\"https://www.npmjs.com/package/generator-fhir\" target=\"_blank\" title=\"https://www.npmjs.com/package/generator-fhir\">https://www.npmjs.com/package/generator-fhir</a></p>",
        "id": 156992599,
        "sender_full_name": "Pietro Ghezzi",
        "timestamp": 1548631549
    }
]