[
    {
        "content": "<p>Is it legal to omit the Bundle.entry.fullUrl element where there is no RESTful read endpoint to independently retrieve the resource?</p>",
        "id": 190848116,
        "sender_full_name": "Jonny Rylands",
        "timestamp": 1584452374
    },
    {
        "content": "<p><a href=\"https://www.hl7.org/fhir/bundle.html#bundle-unique\" target=\"_blank\" title=\"https://www.hl7.org/fhir/bundle.html#bundle-unique\">https://www.hl7.org/fhir/bundle.html#bundle-unique</a> no it isn't</p>",
        "id": 190848609,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1584452568
    },
    {
        "content": "<p>That seems to contradict <a href=\"https://www.hl7.org/fhir/bundle-definitions.html#Bundle.entry.fullUrl\" target=\"_blank\" title=\"https://www.hl7.org/fhir/bundle-definitions.html#Bundle.entry.fullUrl\">https://www.hl7.org/fhir/bundle-definitions.html#Bundle.entry.fullUrl</a>  \"The fullUrl element SHALL have a value except that\"</p>",
        "id": 190848962,
        "sender_full_name": "Jonny Rylands",
        "timestamp": 1584452746
    },
    {
        "content": "<p>If it is required, what can/do you populate when you don't have a RESTful read endpoint to retrieve the resource from?</p>",
        "id": 190849180,
        "sender_full_name": "Jonny Rylands",
        "timestamp": 1584452839
    },
    {
        "content": "<p>I've never used it to read from a rest endpoint. I have used it a lot when creating or processing messages and responding to complex rest queries - it was invaluable.</p>",
        "id": 190849410,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1584452940
    },
    {
        "content": "<p>If the resource isn't available from a RESTful endpoint, you use urn:uuid:.....</p>",
        "id": 190850390,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1584453363
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> .  But you can continue to use your 'original' ids in <a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a> and references that point to it? e.g. <a href=\"http://Organization.id\" target=\"_blank\" title=\"http://Organization.id\">Organization.id</a> = 123    Patient.managingOrganization = Organization/123    Just wondering what the purpose of the fullUrl UUIDs are if nothing points to them, and the resources aren't retrievable by them?</p>",
        "id": 190851394,
        "sender_full_name": "Jonny Rylands",
        "timestamp": 1584453758
    },
    {
        "content": "<p>References resolve based on the fullURIs.  The resource ids are ignored when resolving references, though I can't think of a reason why they should differ from the GUIDs in the fullURLs.</p>",
        "id": 190852772,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1584454424
    },
    {
        "content": "<p>OK thanks.</p>",
        "id": 190855223,
        "sender_full_name": "Jonny Rylands",
        "timestamp": 1584455455
    },
    {
        "content": "<p>I think the description and definition is quite confusing. Is it implying that if the resource is not available through a restful endpoint, the fullUrl SHALL be an UUID in urn format? <a href=\"https://www.hl7.org/fhir/bundle.html#bundle-unique\" target=\"_blank\" title=\"https://www.hl7.org/fhir/bundle.html#bundle-unique\">This says</a> \"should\"...</p>",
        "id": 190875937,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1584463120
    },
    {
        "content": "<p><a href=\"http://jira.hl7.org/browse/FHIR-26599\" target=\"_blank\" title=\"http://jira.hl7.org/browse/FHIR-26599\">FHIR#26599</a></p>",
        "id": 190877411,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1584463645
    },
    {
        "content": "<blockquote>\n<p>though I can't think of a reason why they should differ from the GUIDs in the fullURLs.</p>\n</blockquote>\n<p>Why bother changing the ids to the uuid if they are transient anyway.  For example, I assemble a message bundle and retain the existing ids, The references all resolve using the FullUri and UUIDs.  If  the recipient chooses to store the data as FHIR resources may  use their own ids anyway.</p>",
        "id": 190913882,
        "sender_full_name": "Eric Haas",
        "timestamp": 1584480917
    },
    {
        "content": "<p>If the data is transient, then there isn't an I'd to change.</p>",
        "id": 190914462,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1584481302
    },
    {
        "content": "<p>I meant the ids are transient- in other words server dependent.</p>",
        "id": 190915030,
        "sender_full_name": "Eric Haas",
        "timestamp": 1584481681
    },
    {
        "content": "<p>Server ids that aren't tied to RESTful URLs aren't really relevant to expose.  Having the id convey something other than the GUID of the fullURL isn't going to create any application awareness of what the server's internal id and result in recognition the instance is the same, for instance.  If the fullURL is the same across messages, that indicates it's the same instance.  The <a href=\"http://resource.id\" target=\"_blank\" title=\"http://resource.id\">resource.id</a> being the same would be ignored.</p>",
        "id": 190915525,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1584481943
    },
    {
        "content": "<p>After reading your response, I'm still confused... what is an example where the fullUrl and  id <em>need</em> to match or things go awry?</p>",
        "id": 190920195,
        "sender_full_name": "Eric Haas",
        "timestamp": 1584484902
    },
    {
        "content": "<p>It's just confusing to people when they don't.  In practice, the id is required, but also gets ignored.  When you set it to something other than the GUID, it's just a recipe for making developers debugging instances bang their heads.</p>",
        "id": 190922502,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1584486343
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> On this point \"If the resource isn't available from a RESTful endpoint, you use urn:uuid:.....\".  Is that a MUST or a SHOULD in terms of FHIR spec compliance?  Thanks.</p>",
        "id": 191230280,
        "sender_full_name": "Jonny Rylands",
        "timestamp": 1584704168
    },
    {
        "content": "<p>(Background:  we have a FHIR operation returning a self contained Bundle (i.e. all references can be resolved within the Bundle) and so the fullUrls do not need to be resolved externally.  We would rather not force the use of UUIDs as the systems the interface will sit in front on don't store UUIDs and would rather not use ephemeral UUIDs)</p>",
        "id": 191236776,
        "sender_full_name": "Jonny Rylands",
        "timestamp": 1584708118
    },
    {
        "content": "<p>It's not a question about \"do not need to be\".  If they <em>can</em> be resolved externally, then use RESTful URLs.  It's fine if everything resolves inside the Bundle - the receiving system might still want to query or update the source later.  On the other hand, if there is no RESTful endpoint, then it's wrong to pretend there is one.  If there's no RESTful endpoint, you should be using UUIDs.</p>",
        "id": 191258129,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1584718189
    },
    {
        "content": "<p>Do we have any guidance on how servers should handle fullUrl when it doesn't know if (or how) the client can access the RESTful endpoint?  fullUrl is pretty annoying for us (Epic) since our FHIR server is often running behind an API manager, reverse proxy, load balanced VIP, WAF, and other network intermediaries.  The main problem we face is that our FHIR server doesn't know the hostname that the client uses to reference our FHIR server (the hostname the client sees is the reverse proxy hostname, not the FHIR server host).  We can generate a resolvable <em>relative</em> URL (which we do for references), but generating an <em>absolute</em> URL is a pain.</p>",
        "id": 191476303,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1584971981
    },
    {
        "content": "<p>I ran into the same problem with a Google Cloud endpoint behind a proxy. We tried having the proxy do a regexp replace of the underlying endpoint's URL with the proxy's URL, on both incoming and outgoing payloads. Worked as a prototype solution but it tightly couples the outermost layer of proxy to the FHIR store and would have to think pretty carefully before deploying that in a production application.</p>",
        "id": 191477409,
        "sender_full_name": "Paul Church",
        "timestamp": 1584972479
    },
    {
        "content": "<p>Yeah - one additional wrinkle is that often we have a single logical FHIR server that is accessible via multiple different DNS names depending on the client.  E.g. public/internet clients vs. internal/LAN clients.</p>",
        "id": 191482266,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1584974464
    },
    {
        "content": "<p>We have the additional issue that the actual fullUrl of a GCP FHIR store is an infrastructure backend that the application might not want to expose to clients - it contains a GCP project name, an API version, and other resource names. Developers might want to migrate some of those things without making the migration visible to the client.</p>\n<p>I don't think we have a great solution yet but I'll keep an eye on how users deal with the issue.</p>",
        "id": 191510521,
        "sender_full_name": "Paul Church",
        "timestamp": 1584985528
    },
    {
        "content": "<p>If the endpoint isn't intended to be visible, then just assign a GUID and use urn:uuid: - the same as you would for a system that didn't have a RESTful URL at all.  What to do where the RESTful URL depends on who's looking is more challenging...</p>",
        "id": 191522521,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1584990922
    },
    {
        "content": "<p>It is not that the endpoint isn't intended to be visible, it is that the endpoint is managed by a \"presentation layer\" that is removed from and independent from the FHIR sever itself.</p>",
        "id": 191524933,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1584992057
    },
    {
        "content": "<p>\"then just assign a GUID and use urn:uuid\" - Why? This seems far from practical, not every supplier uses GUIDs as an identifier and they'll need to create another identifier just for this purpose, this will be even worse if the GUID is expected to be persistent as they  would need to store it. I don't think fullUrl has been specified well from a practical point of view, this thread alone haas highlighted this.</p>",
        "id": 191596762,
        "sender_full_name": "Matt Stephens",
        "timestamp": 1585049417
    },
    {
        "content": "<p>The GUID only needs to be valid for the Bundle - it doesn't need to be stored/retained by the sender.  FullURL is very simple.  It's the RESTful URL where the resource can be retrieved/manipulated.  If there isn't one of those, then it needs to be urn:uuid:[some guid].</p>",
        "id": 191607976,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1585056224
    },
    {
        "content": "<p>If the server generates GUIDs on the fly for each Bundle response, the client isn't able to identify the same resource twice.  Unless <a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a> uses a persistent identifier and not an on the fly GUID.  But that would not be very pretty having fullUrl and references using GUIDs, and <a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a> using something else.</p>",
        "id": 191626312,
        "sender_full_name": "Jonny Rylands",
        "timestamp": 1585063469
    },
    {
        "content": "<p>Right.  If there's no RESTful id, then <a href=\"http://resource.id\" target=\"_blank\" title=\"http://resource.id\">resource.id</a> is useless for identifying the resource across instances - you need to rely on the .identifier element</p>",
        "id": 191627313,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1585063855
    },
    {
        "content": "<p>In such case, sounds like if there is no referencable fullUrl, identifier must be present. Is that currently the case?</p>",
        "id": 191628466,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1585064269
    },
    {
        "content": "<p>That would be nice. But in real life, lots of things don't have solid identifiers.</p>",
        "id": 191629964,
        "sender_full_name": "René Spronk",
        "timestamp": 1585064834
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191372\">René Spronk</span> <a href=\"#narrow/stream/179166-implementers/topic/Bundle.2Eentry.2EfullUrl.20-.20no.20RESTful.20endpoint/near/191629964\" title=\"#narrow/stream/179166-implementers/topic/Bundle.2Eentry.2EfullUrl.20-.20no.20RESTful.20endpoint/near/191629964\">said</a>:</p>\n<blockquote>\n<p>That would be nice. But in real life, lots of things don't have solid identifiers.</p>\n</blockquote>\n<p>Yet every FHIR resource that has a RESTful end point, must have a \"solid\" id. If the spec requires this part, why is it considered unreasonable to require \"solid\" identifiers for resources in a Bundle without a RESTful endpoint?</p>",
        "id": 191631066,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1585065257
    },
    {
        "content": "<p>Do all 'socks' that you put in a gym locker have their own identifier? No. The locker does have a unique identifier. Socks may only be known as 'blue sock, size 42' - that's hardly unique.</p>",
        "id": 191631856,
        "sender_full_name": "René Spronk",
        "timestamp": 1585065542
    },
    {
        "content": "<p>Your IG could define identifier as a SHOULD. But SHALL is totally unrealistic in almost all contexts.</p>",
        "id": 191631992,
        "sender_full_name": "René Spronk",
        "timestamp": 1585065593
    },
    {
        "content": "<p>identifier doesn't have to be present.  If it's not, then you're either unable to match or have to match by other elements (demographics for patient, time and code for Observations, etc.)</p>",
        "id": 191632125,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1585065627
    },
    {
        "content": "<p>The base FHIR spec can't require what systems don't support.  Profiles can certainly tighten expectations where they think that 'better' behavior is achievable.</p>",
        "id": 191632312,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1585065693
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191372\">René Spronk</span> <a href=\"#narrow/stream/179166-implementers/topic/Bundle.2Eentry.2EfullUrl.20-.20no.20RESTful.20endpoint/near/191631856\" title=\"#narrow/stream/179166-implementers/topic/Bundle.2Eentry.2EfullUrl.20-.20no.20RESTful.20endpoint/near/191631856\">said</a>:</p>\n<blockquote>\n<p>Do all 'socks' that you put in a gym locker have their own identifier? No. The locker does have a unique identifier. Socks may only be known as 'blue sock, size 42' - that's hardly unique.</p>\n</blockquote>\n<p>This is an excellent argument for using contained resources, not necessarily entries in a bundle <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 191634456,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1585066538
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191372\">René Spronk</span> <a href=\"#narrow/stream/179166-implementers/topic/Bundle.2Eentry.2EfullUrl.20-.20no.20RESTful.20endpoint/near/191631992\" title=\"#narrow/stream/179166-implementers/topic/Bundle.2Eentry.2EfullUrl.20-.20no.20RESTful.20endpoint/near/191631992\">said</a>:</p>\n<blockquote>\n<p>Your IG could define identifier as a SHOULD. But SHALL is totally unrealistic in almost all contexts.</p>\n</blockquote>\n<p>SHALL in an IG is very realistic. What is not realistic is matching by other elements to determine equivalence - been there, done that, affects patient safety.</p>",
        "id": 191634720,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1585066631
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179166-implementers/topic/Bundle.2Eentry.2EfullUrl.20-.20no.20RESTful.20endpoint/near/191632312\" title=\"#narrow/stream/179166-implementers/topic/Bundle.2Eentry.2EfullUrl.20-.20no.20RESTful.20endpoint/near/191632312\">said</a>:</p>\n<blockquote>\n<p>The base FHIR spec can't require what systems don't support.  Profiles can certainly tighten expectations where they think that 'better' behavior is achievable.</p>\n</blockquote>\n<p>Agreed. Proper guidance, however, is essential.</p>",
        "id": 191634824,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1585066681
    },
    {
        "content": "<p>Resources without an identifier don't necessarily need to be 'contained'.   The reality is that lots of the stuff passed around in messages and documents won't have identifiers - and won't be contained.  It will also be painful to try to match to resources that are outside of the message/document.  That's a world we've lived in in the CDA space and even v2 for a long time.  FHIR doesn't magically make that issue go away</p>",
        "id": 191637705,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1585067680
    },
    {
        "content": "<p>It would be nice if you could just send a \"fullUrl\" that was a hash of (FHIR server logical identifier + resource type + resource ID), however that doesn't qualify as a UUID I believe. Is there a reason the only other option for fullUrl is a UUID, rather than some other sort of unique identifier?</p>",
        "id": 191795111,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1585162599
    }
]