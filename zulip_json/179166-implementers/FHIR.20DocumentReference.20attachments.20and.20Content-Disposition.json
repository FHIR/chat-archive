[
    {
        "content": "<p>Has anyone implemented an attachment implementation within FHIR DocumentReferences that returns back a URI that ends up returning an HTTP response with a Content-Disposition: header? FHIR doesn't appear to have a concept of being able to provide a URI to download the content with a Content-Disposition header set vs a \"stream\" based HTTP response that doesn't have that header set.</p>",
        "id": 153843711,
        "sender_full_name": "David Teirney",
        "timestamp": 1470961208
    },
    {
        "content": "<p>I'm a little out of touch in this area. Do you still need a content-disposition header if you specify the mime type correctly? why? </p>",
        "id": 153843712,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1470961369
    },
    {
        "content": "<p>Content-Disposition is orthogonal to Content-Type. <a href=\"https://tools.ietf.org/html/rfc6266#section-4.2\" target=\"_blank\" title=\"https://tools.ietf.org/html/rfc6266#section-4.2\">https://tools.ietf.org/html/rfc6266#section-4.2</a></p>",
        "id": 153843713,
        "sender_full_name": "David Teirney",
        "timestamp": 1470961438
    },
    {
        "content": "<p>It's used to indicate that the response should be treated \"inline\" or as an \"attachment\". It's most often used to be able to trigger a download in a web browser or other client rather than having that client try and render directly.</p>",
        "id": 153843714,
        "sender_full_name": "David Teirney",
        "timestamp": 1470961489
    },
    {
        "content": "<p>We've got a use case where the client can both view the content and also trigger a download. The latter requires that header to be set. So we're currently setting it all the time and making sure our clients are not relying on the browser to directly load the HTTP stream, e.g. we put the URI into an iframe to ensure that it gets loaded into that frame.</p>",
        "id": 153843715,
        "sender_full_name": "David Teirney",
        "timestamp": 1470961571
    },
    {
        "content": "<p>We're wondering if anyone else has a similar use case. And, if so, how they approached it.</p>",
        "id": 153843716,
        "sender_full_name": "David Teirney",
        "timestamp": 1470961778
    },
    {
        "content": "<p>David, My read of content disposition seems to be more associated with interactive sessions, it doesn't seem legitimate for an API. I am not sure how a Resource Server would know enough about the client side setting/context to make the determination. Can you enlighten me on your use-case details?</p>",
        "id": 153843738,
        "sender_full_name": "John Moehrke",
        "timestamp": 1471013717
    },
    {
        "content": "<p>well, it's kind of what you would want to happen in a browser app if you wanted tot use the http server, not the http api server. </p>",
        "id": 153843814,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471031893
    },
    {
        "content": "<p>but this is not well differentiated. </p>",
        "id": 153843815,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471031899
    }
]