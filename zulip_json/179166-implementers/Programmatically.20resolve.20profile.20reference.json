[
    {
        "content": "<p>How would software resolve an extension definition? Are registries expected to be FHIR servers exposing searchable StructureDefinition endpoints?</p>",
        "id": 203408704,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1594312285
    },
    {
        "content": "<p>Registries should be.  The canonical URL may not be (and the canonical URL isn't guaranteed to resolve at all).  As well, there may be security issues with hitting unknown/untrusted URLs.  (At minimum, it would allow a malicious party to be able to track where data is flowing.)  So - runtime resolution might be possible, but isn't guaranteed and may not be a desired approach even when possible.</p>",
        "id": 203409162,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1594312491
    },
    {
        "content": "<p>I can't find a way to programmatically get the StructureDefinition for this for instance: <a href=\"http://hl7.org/fhir/StructureDefinition/patient-birthPlace\">http://hl7.org/fhir/StructureDefinition/patient-birthPlace</a><br>\nIt's easy for a human to see the HTML page. <a href=\"http://hl7.org/fhir\">http://hl7.org/fhir</a> is not a FHIR server of course.</p>",
        "id": 203409934,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1594312860
    },
    {
        "content": "<p>I can't see way to query <a href=\"http://registry.fhir.org\">registry.fhir.org</a> or <a href=\"http://simplifier.net\">simplifier.net</a> to get a structure definition</p>",
        "id": 203410438,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1594313034
    },
    {
        "content": "<p><a href=\"https://fhir.simplifier.net/r4/StructureDefinition?url=http://hl7.org/fhir/StructureDefinition/patient-birthPlace\">https://fhir.simplifier.net/r4/StructureDefinition?url=http://hl7.org/fhir/StructureDefinition/patient-birthPlace</a> doesn't work (it should). <span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span> ?</p>",
        "id": 203411149,
        "sender_full_name": "René Spronk",
        "timestamp": 1594313404
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191651\">@Rik Smithies</span> go to <br>\nC:\\Users\\Rik\\.fhir\\packages\\hl7.fhir.r4.core#4.0.1\\package</p>",
        "id": 203412675,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594314204
    },
    {
        "content": "<p>there is a  StructureDefinition-patient-birthPlace.json there</p>",
        "id": 203412695,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594314217
    },
    {
        "content": "<p>!C:\\users\\Rik! is my guess for your home folder<br>\nor maybe I have ways to know... <span aria-label=\"smiling devil\" class=\"emoji emoji-1f608\" role=\"img\" title=\"smiling devil\">:smiling_devil:</span></p>",
        "id": 203412847,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594314293
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> I am looking for a general method. How would I get the package programatically?</p>",
        "id": 203412909,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1594314331
    },
    {
        "content": "<p>ah sorry</p>",
        "id": 203413120,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594314441
    },
    {
        "content": "<p>are you looking for a general method that applies to fhir core content? Or something that applies to content from any implementation guide anywhere?</p>",
        "id": 203417955,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1594317123
    },
    {
        "content": "<p>Did you try setting your accept header appropriately?  That <em>should</em> work for FHIR-published extensions for the current release.</p>",
        "id": 203436613,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1594326811
    },
    {
        "content": "<p>doesn't work. I don't know why - it's supposed to</p>",
        "id": 203437510,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1594327255
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191651\">@Rik Smithies</span> Here is how you get packages programmatically: <a href=\"https://simplifier.net/docs/package-server/Home\">https://simplifier.net/docs/package-server/Home</a></p>",
        "id": 203439273,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1594328086
    },
    {
        "content": "<p>It's more just the structure definition of a given extension. If the URL is right there it seems there should be an easy way to get something, since we say it should go somewhere. I did also try the accept header - it gave me HTML and a 404. </p>\n<p><span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span>  thanks - I could get the package, but that wasn't the original idea. (That would beg the question how to know what package it is in...). Rene's URL trick, above, would be ideal, but its not currently working?</p>",
        "id": 203440106,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1594328449
    },
    {
        "content": "<p>Well, finding what package it is in is actually also supported: <a href=\"https://packages.simplifier.net/catalog?canonical=http://hl7.org/fhir/StructureDefinition/patient-birthPlace\">https://packages.simplifier.net/catalog?canonical=http://hl7.org/fhir/StructureDefinition/patient-birthPlace</a></p>\n<p>But let me have a look at the other URL too.</p>",
        "id": 203440724,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1594328713
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191372\">@René Spronk</span> <span class=\"user-mention\" data-user-id=\"191651\">@Rik Smithies</span> I believe the <code>url</code> search parameter having some issues right now in Simplifier. I'll check further.</p>\n<p>However, I do think packages are the best way to find a resource anyway. They are the published content that is clearly versioned and immutable. And this process should work for any resource in a package published to the package registry, not just the core spec. #packagefanboy<br>\n(The fact that you find this canonical in multiple packages is a less than perfect publishing strategy in my opinion, the latter two packages should just have declared a dependency on the first.)</p>",
        "id": 203443780,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1594330444
    },
    {
        "content": "<p>If I look up the package it tells me it is hl7.fhir.r4.core and version \"R4\". How then do I get that via <a href=\"https://packages.simplifier.net/&lt;package-name&gt;/&lt;package-version\">https://packages.simplifier.net/&lt;package-name&gt;/&lt;package-version</a>&gt;, which expects \"4.0.1\"</p>",
        "id": 203445526,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1594331359
    },
    {
        "content": "<p>ok this works for Accept: application/json : <a href=\"http://hl7.org/fhir/StructureDefinition/patient-birthPlace\">http://hl7.org/fhir/StructureDefinition/patient-birthPlace</a></p>\n<p>but not for Accept:  application/fhir+json or  application/json+fhir - I think <span class=\"user-mention\" data-user-id=\"193461\">@David Johnson</span> needs to fix something on the server</p>",
        "id": 203446020,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1594331604
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191651\">@Rik Smithies</span> You're mixing FHIR version and package version:</p>\n<ol>\n<li><a href=\"https://packages.simplifier.net/catalog?canonical=http://hl7.org/fhir/StructureDefinition/patient-birthPlace\">https://packages.simplifier.net/catalog?canonical=http://hl7.org/fhir/StructureDefinition/patient-birthPlace</a> finds three package names, including <code>hl7.fhir.r4.core</code></li>\n<li><a href=\"https://packages.simplifier.net/hl7.fhir.r4.core\">https://packages.simplifier.net/hl7.fhir.r4.core</a> gives you one package version with the latest (and only) being <code>4.0.1</code></li>\n<li><a href=\"https://packages.simplifier.net/hl7.fhir.r4.core/4.0.1\">https://packages.simplifier.net/hl7.fhir.r4.core/4.0.1</a> gives you the package itself</li>\n</ol>\n<p>Limitation is that there's currently no guarantee that the canonical is in the latest version of the package, an older version or all. For that the <code>versions</code> parameter needs to be implemented on the search endpoint, which isn't done yet (described under <a href=\"https://simplifier.net/docs/package-server/Search#package-version-response:~:text=Package%20version%20response,PROPOSAL%20%2D%20Not%20implemented%20yet\">package version response on the Search documentation page</a>).</p>",
        "id": 203447161,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1594332223
    },
    {
        "content": "<p>I've added the two mime types</p>",
        "id": 203455932,
        "sender_full_name": "David Johnson",
        "timestamp": 1594338568
    },
    {
        "content": "<p>.json2 goes to download, while .json1 displays like .json.  Is that the expected behavior, based on application types?</p>",
        "id": 203455996,
        "sender_full_name": "David Johnson",
        "timestamp": 1594338603
    },
    {
        "content": "<p>not sure but I don't think it matters. it's what happens in postman that matters for those mime types- let me check</p>",
        "id": 203456718,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1594339283
    },
    {
        "content": "<p>sweet - all good. Rik, requests against that canonical URL should work now - thanks for reporting the problem</p>",
        "id": 203456800,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1594339340
    },
    {
        "content": "<p>Hi Everyone, <br>\n                       Can someone please guide me or share some C# code examples of implementation of Fhir validation (R4 version 4.0.1) against structural definitions / local profiles. </p>\n<p>For example, I want to validate a Fhir (R4) Json patient object against the Fhir structural definition (Json Schema) at <a href=\"http://build.fhir.org/ig/HL7NZ/nzbase/branches/master/StructureDefinition-NzPatient.profile.json.html\">http://build.fhir.org/ig/HL7NZ/nzbase/branches/master/StructureDefinition-NzPatient.profile.json.html</a> </p>\n<p>I have found some examples online but they are all for STU3 (like <a href=\"https://github.com/FirelyTeam/Furore.Fhir.ValidationDemo\">https://github.com/FirelyTeam/Furore.Fhir.ValidationDemo</a>) </p>\n<p>Your help will be much appreciated. </p>\n<p>Thanks,<br>\nAdeel</p>",
        "id": 203466472,
        "sender_full_name": "Adeel Ahmed",
        "timestamp": 1594352266
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"320090\">@Adeel Ahmed</span> Please ask in the <a class=\"stream\" data-stream-id=\"179171\" href=\"/#narrow/stream/179171-dotnet\">#dotnet</a> channel. I'm sure <span class=\"user-mention\" data-user-id=\"193551\">@Marco Visser</span> or <span class=\"user-mention\" data-user-id=\"191334\">@Marten Smits</span> can point you to some sample code.</p>",
        "id": 203474781,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1594364198
    }
]