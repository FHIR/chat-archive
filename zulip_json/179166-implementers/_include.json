[
    {
        "content": "<p>During the Argonaut Provider directory connectathon we had a question about use of the _include paramater. We want to support a search for Practitioner with _include on endpoint. Does Endpoint need to be a search paramaeter on Practitioner to support _include?</p>",
        "id": 153843742,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1471021859
    },
    {
        "content": "<p><a href=\"http://hl7-fhir.github.io/search.html#include\" target=\"_blank\" title=\"http://hl7-fhir.github.io/search.html#include\">http://hl7-fhir.github.io/search.html#include</a></p>",
        "id": 153843743,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1471021869
    },
    {
        "content": "<p>\"Parameter values for both _include and _revinclude have three parts, separated by a : character:</p>\n<p>1. The name of the source resource from which the join comes<br>\n2. The name of the search parameter which must be of type reference<br>\n3. (Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types\"</p>",
        "id": 153843744,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1471021894
    },
    {
        "content": "<p>Yes: the <code>_include</code> mechanism relies on search parameter definitions. So the fix here would be adding an \"endpoint\" search parameter to Practitioner. I'll comment that this feels a bit odd, though.</p>",
        "id": 153843745,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1471022295
    },
    {
        "content": "<p>which bit feels odd? </p>",
        "id": 153843859,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471036884
    },
    {
        "content": "<p>Requiring a search parameter on the source reference field to be able to perform an include.<br>\nWhich means that if a resource reference property on a resource doesn't have a search parameter, then you can't do the _include.</p>",
        "id": 153843874,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1471048275
    },
    {
        "content": "<p>So should we have a build warning to say that all references should have a search parameter so that _include can be used.</p>",
        "id": 153843875,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1471048312
    },
    {
        "content": "<p>Does a query like <code>Observation?_include=Observation:based-on:CarePlan&amp;_include=CarePlan:context:EpisodeOfCare</code> mean to do a chained include of first CarePlan and then EpisodeOfCare?  And if so what does it mean if a resource type appears in multiple includes, is there a tree of all possible combinations?</p>",
        "id": 153914577,
        "sender_full_name": "Ben Spencer",
        "timestamp": 1508313112
    },
    {
        "content": "<p>Yes, you'll get the combination of all includes - that at least is what I think we designed in the spec.  Which does not mean all current servers implement it that way, so it's interesting to see what some of the developers say.  <span class=\"user-mention\" data-user-id=\"191757\">@Christiaan Knaap</span> , <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> , <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ?</p>",
        "id": 153914820,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1508400685
    },
    {
        "content": "<p>Every _include will start at the resourcetype the query is on (Observation in this case). If you try this on <a href=\"http://vonk.furore.com\" target=\"_blank\" title=\"http://vonk.furore.com\">vonk.furore.com</a>, it will tell you about the second _include: \"ResourceType 'CarePlan' is not one of the ResourceTypes in scope of the search.\"</p>",
        "id": 153915029,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1508490577
    },
    {
        "content": "<p>I think it should</p>",
        "id": 153915245,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1508703734
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 153915948,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1508927936
    },
    {
        "content": "<p>So, is this unclear in the spec? does the :recurse modifier change that behaviour?</p>",
        "id": 153916784,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1509379135
    },
    {
        "content": "<p>:recurse is unclear to me, it seems to do different things in the two examples given</p>",
        "id": 153916794,
        "sender_full_name": "Ben Spencer",
        "timestamp": 1509384039
    },
    {
        "content": "<blockquote>\n<p>:recurse is unclear to me, it seems to do different things in the two examples given</p>\n</blockquote>\n<p>Hi <span class=\"user-mention\" data-user-id=\"193659\">@Ben Spencer</span>, we've discussed this question in the context of tracker item <a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13602&amp;start=0\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13602&amp;start=0\">https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13602&amp;start=0</a>.</p>\n<p>We've agreed there that the text is unclear:</p>\n<ul>\n<li>the term \"recurse\" is maybe not appropriate, since you're not necessary \"recursively\" including resources (your algorithm doing the include on the server might be recursive, but might also be iterative)</li>\n<li>It's unclear that the real difference is whether :recurse works on matches and/or works on resources included by the other _includes.</li>\n</ul>\n<p>So, we're going to fix this description quite a bit....</p>",
        "id": 153916831,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1509395028
    },
    {
        "content": "<p>Hi everyone!<br>\nMy team is working on provide data according to FHIR specification and now we are working on the  _include option for search. Does anybody has an example of the JSON for PractitionerRole using  _include of Organization vs PractitionerRole without using  _include of Organization? we are struggling to find a proper example. It could be the required example or any other example you may have</p>",
        "id": 153928189,
        "sender_full_name": "Adrian",
        "timestamp": 1515547577
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"195071\">@Adrian</span> : Simply try it on the public test servers, e.g. <a href=\"http://vonk.furore.com/PractitionerRole?_include=PractitionerRole:organization\" target=\"_blank\" title=\"http://vonk.furore.com/PractitionerRole?_include=PractitionerRole:organization\">vonk.furore.com/PractitionerRole?_include=PractitionerRole:organization</a><br>\n(sidenote: we made an error in the Bundle.entry.search.mode for the included Organizations, it should be 'include' instead of 'match' - we'll fix that soon)</p>",
        "id": 153928212,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1515567755
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"191757\">@Christiaan Knaap</span> for your answer</p>",
        "id": 153928341,
        "sender_full_name": "Adrian",
        "timestamp": 1515620165
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191757\">@Christiaan Knaap</span> I am checking which would be the proper way of presenting multiple results for the _include option, so have a couple of questions (since the example that I check on your server is just one element):<br>\n1. All searches/includes should be together in a block or alternating individual search and includes. e.g. PR1, PR2, PR3, P1, P2, P3 or PR1, P1, PR2, P2, PR3, P3?<br>\n2. Does the list of searches have to be ordered? e.g. best match is first, second best match is second in the list, etc? If we include a search.score does that mean we could put the results in any order and leave it up to the client to reorder the list based on search.score?<br>\nThank you and regards<br>\nAdrian</p>",
        "id": 153928363,
        "sender_full_name": "Adrian",
        "timestamp": 1515631305
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"195071\">@Adrian</span> The order of matches is only defined by the _sort parameter, if present. As <a href=\"http://www.hl7.org/implement/standards/fhir/bundle-definitions.html#Bundle.entry.search.score\" target=\"_blank\" title=\"http://www.hl7.org/implement/standards/fhir/bundle-definitions.html#Bundle.entry.search.score\">Bundle.entry.search.score</a> states: \"Often, search results are sorted by score, but the client may specify a different sort order.\" <br>\nPutting all the include results at the end or interleaved with the matches is not defined. Some includes may belong to more than one match though, so putting them all at the end is convenient.<br>\nAnd note that every page of matches should contain all related includes (at the end of the <a href=\"http://www.hl7.org/implement/standards/fhir/search.html#revinclude\" target=\"_blank\" title=\"http://www.hl7.org/implement/standards/fhir/search.html#revinclude\">_include paragraph</a>).</p>",
        "id": 153928421,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1515676510
    },
    {
        "content": "<p>Question regarding _include - could someone elaborate on the requirement that the element to be included must be a search parameter and not just any element in the response? <br>\nFrom a server's perspective, it seems burdensome to have to define a link between search parameter and response element.</p>",
        "id": 153973808,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1530808329
    },
    {
        "content": "<p>I think it's driven by the need to only join on stuff that's indexed.  If there's a search parameter for it, it can be indexed.  If not, it won't be.</p>",
        "id": 153973814,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530809437
    },
    {
        "content": "<p>feedback was that it was burdensome to have to link search semantics to specific elements in the resource when search and joins were based on indexed parameters</p>",
        "id": 153973866,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530817972
    },
    {
        "content": "<p>Agree with <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> . Although our implementation has moved in a way that it would not really matter anymore.<br>\nStill it would feel inconsistent that you can _include things that you cannot use for chaining.</p>",
        "id": 153974656,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1531319416
    },
    {
        "content": "<p>What's the expected behaviour for \"included\" Search Bundle entries, with regard to entry.search.score? The example <a href=\"https://www.hl7.org/fhir/bundle-example.json.html\" title=\"https://www.hl7.org/fhir/bundle-example.json.html\">https://www.hl7.org/fhir/bundle-example.json.html</a> seems to omit entry.search.score when entry.search.mode=\"include\", but the definition at <a href=\"https://www.hl7.org/fhir/bundle-definitions.html#Bundle.entry.search.score\" title=\"https://www.hl7.org/fhir/bundle-definitions.html#Bundle.entry.search.score\">https://www.hl7.org/fhir/bundle-definitions.html#Bundle.entry.search.score</a> isn't explicit.</p>",
        "id": 194818085,
        "sender_full_name": "Ken Sinn",
        "timestamp": 1587482461
    },
    {
        "content": "<p>In principle, it would be up to the operation you hit that returns scored results.  However, in general, I would not expect score to be present on included resources.  They're not part of the 'search' determination - they're resources that happen to be related to the matching resources</p>",
        "id": 194818868,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1587482773
    },
    {
        "content": "<p>I don't see any useful information that could be conveyed by score for included entries, so perhaps it should be made explicit.</p>",
        "id": 194819058,
        "sender_full_name": "Paul Church",
        "timestamp": 1587482855
    },
    {
        "content": "<p>Feel free to submit a change request :)</p>",
        "id": 194819551,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1587483055
    },
    {
        "content": "<p>Hi all, I have come across a new issue I want help finding documentation to support my position or help understanding why my vendors may be correct if it is. Here is an example query for a test patient that is being sent by the requesting party:</p>\n<p>https://{baseURL}/fhir/4_0_0/MedicationRequest?patient=5fb4094f0929&amp;_include=MedicationRequest:medication</p>\n<p>The issue here is the response I get is not including the medication, and my server has decided in many cases to implement in such a way that I need to include in a case like this 'medicationReference:' before medication the _include syntax? The structure of the actual reference.</p>\n<p>So, I need this: https://{baseURL}/fhir/4_0_0/MedicationRequest?patient=5fb4094f0929&amp;_include=MedicationRequest:medicationReference:medication</p>\n<p>Here is the reference structure from the response:</p>\n<div class=\"codehilite\"><pre><span></span><code>&quot;status&quot; : &quot;inactive&quot;,\n&quot;intent&quot; : &quot;order&quot;,\n&quot;medicationReference&quot; : {\n  &quot;reference&quot; : &quot;Medication/6019cc948bfdd855c9d4b474&quot;,\n  &quot;display&quot; : &quot;loratadine 5 mg chewable tablet&quot;\n</code></pre></div>\n\n<p>Is this correct? Or should the syntax being sent be acceptable? And in which cases should the middle value be required versus optional?</p>\n<p>I see a similar issue with patient requiring me to have subject in the middle as well. However, this does not align with most implementations I have seen to date and not something I can find strong documentation on. I was able to find this here: <a href=\"https://www.hl7.org/fhir/search.html#include\">https://www.hl7.org/fhir/search.html#include</a> which says the following:</p>\n<p>Parameter values for both _include and _revinclude have three parts, separated by a : character:</p>\n<p>The name of the source resource from which the join comes<br>\nThe name of the search parameter which must be of type reference<br>\n(Optional) A specific of type of target resource (for when the search parameter refers to multiple possible target types)</p>\n<p>Is the example above a good situation where all three values are needed? How about this type of reference structure, should this require all three values to get my patient to include?</p>\n<p>\"subject\" : {<br>\n\"reference\" : \"Patient/5fb4094f0929\",<br>\n\"display\" : \"Clinton763 Crona259\"</p>",
        "id": 227798574,
        "sender_full_name": "Jeremy Smelski",
        "timestamp": 1614271775
    },
    {
        "content": "<p>The syntax being sent is the correct one. The syntax your server expects is absolutely not correct.<br>\nAs you see in the three parts, the second parameter is \"The name of the <strong>search parameter</strong> which must be of type reference\". The server seems to expect a field name instead. There is no search parameter on MedicationRequest that is called 'medicationReference'.</p>",
        "id": 227829653,
        "sender_full_name": "Mirjam Baltus",
        "timestamp": 1614283472
    },
    {
        "content": "<p>Since <span class=\"user-mention\" data-user-id=\"380712\">@Jeremy Smelski</span> and I have previously discussed this, if anyone else can give this some weight, that might help his arguments get across to the vendor.</p>",
        "id": 227830344,
        "sender_full_name": "Mirjam Baltus",
        "timestamp": 1614283782
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191347\">Mirjam Baltus</span> <a href=\"#narrow/stream/179166-implementers/topic/_include/near/227829653\">said</a>:</p>\n<blockquote>\n<p>The syntax being sent is the correct one. The syntax your server expects is absolutely not correct.<br>\nAs you see in the three parts, the second parameter is \"The name of the <strong>search parameter</strong> which must be of type reference\". The server seems to expect a field name instead. There is no search parameter on MedicationRequest that is called 'medicationReference'.</p>\n</blockquote>\n<p>What Mirjam said :). MedicationRequest:medicationReference:medication would says include all resources that can be found by following the reference located at the search parameter MedicationRequest:medicationReference and only return me instances that are of the Medication resource.<br>\na) there is no search parameter medicationReference, so that just doesn't make any sense.<br>\nb) since the search parameter medication only returns Medication instances, you don't need the optional parameter.  So it needs to be as you sent it: _include=MedicationRequest:medication</p>\n<p>Point them to the example in the spec (<a href=\"http://hl7.org/fhir/search.html#revinclude\">http://hl7.org/fhir/search.html#revinclude</a>)<br>\nGET [base]/MedicationRequest?_include=MedicationRequest:patient</p>\n<p>That is explicitly using the patient search parameter.</p>",
        "id": 227832483,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1614284615
    },
    {
        "content": "<p>Thanks for the reply and weighing in with such a detailed explanation. <span class=\"user-mention\" data-user-id=\"192166\">@Jean Duteau</span></p>",
        "id": 227835133,
        "sender_full_name": "Jeremy Smelski",
        "timestamp": 1614285666
    },
    {
        "content": "<p>US Core IG requires this query parameter if you reference Medication resources from within MedicationRequest, see examples here: <a href=\"https://www.hl7.org/fhir/us/core/StructureDefinition-us-core-medicationrequest.html#mandatory-search-parameters\">https://www.hl7.org/fhir/us/core/StructureDefinition-us-core-medicationrequest.html#mandatory-search-parameters</a>. Your vendor's implementation would fail certification to <a href=\"https://www.healthit.gov/test-method/standardized-api-patient-and-population-services\">ONC's Standardized API criteria</a>.  I don't know if they would care about that or not, but it may add more weight to your argument that their implementation is not correct.</p>",
        "id": 227835486,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614285823
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"192576\">@Robert Scanlon</span>  for the helpful link and support. Much appreciated.</p>",
        "id": 227848028,
        "sender_full_name": "Jeremy Smelski",
        "timestamp": 1614291105
    }
]