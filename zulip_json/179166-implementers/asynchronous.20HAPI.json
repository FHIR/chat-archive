[
    {
        "content": "<p>Hi everybody.<br>\nHapi Fhir implements asynchronous communication in messaging mode?<br>\nI work with apache camel and I wonder if it is opportune to create a camel connector for hapi-fhir.<br>\nIt is very simple to make a camel-dataformat that uses parser hapi-fhir.<br>\nSimilarly creating a camel connector that uses the hapi-fhir client does not pose any difficulty to send queries to the server.<br>\nBut camel allows you to listen to a data source. In this case it is necessary that the source (hapi-fhir server) be cappable to send messages, or to generate events.<br>\nWith such a connector it becomes possible to write things like:<br>\nfrom(\"jms:myqueue\").bean(PatientBean.class).to(\"fhir:myserver\");<br>\nor <br>\nfrom(\"fhir:myserver\").bean(RegionalIdentityBuilder.class).to(\"rest:regionalIdentityServer/patient\");</p>",
        "id": 153867180,
        "sender_full_name": "世界人 Sekaijin",
        "timestamp": 1484490476
    },
    {
        "content": "<p>Hello,</p>\n<p>I guess this depends on what you mean by asynchronous messaging mode. We don't currently have native support for the \"messaging endpoint\" as defined by FHIR, but in general if you're just looking to stand up a FHIR server using HAPI inside Camel and route incoming requests to it via Camel's infrastructure, I would assume this would work.</p>",
        "id": 153867181,
        "sender_full_name": "James Agnew",
        "timestamp": 1484490588
    },
    {
        "content": "<p><a href=\"https://www.hl7.org/fhir/messaging.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/messaging.html\">https://www.hl7.org/fhir/messaging.html</a><br>\nOn some system we can do this:<br>\nThe client opens a connection is subscribing to the patient creation events<br>\nWhen a patient is created on the server<br>\nThe server generates an event and the client listen method is enabled<br>\nThe client then receives the information from the patient created.</p>",
        "id": 153867183,
        "sender_full_name": "世界人 Sekaijin",
        "timestamp": 1484491425
    },
    {
        "content": "<p>Hmm, so I guess if I'm understanding your question correctly the answer is: HAPI doesn't have any already built support for that, but certainly the library has all of the parts you'd need to build it in your application. I.e all the resources are there, and there's support for operations and everything else. If you're using Camel it would presumably be as simple as standing up a HAPI server with a $process-message operation, then routing the incoming requests into Camel for queuing and eventual processing.</p>",
        "id": 153867279,
        "sender_full_name": "James Agnew",
        "timestamp": 1484496742
    },
    {
        "content": "<p>Hi<br>\nThank you for the answer.<br>\nI do not write an application but a client connector that plugs into a fhir server.</p>\n<p>A + JYT</p>",
        "id": 153867637,
        "sender_full_name": "世界人 Sekaijin",
        "timestamp": 1484594258
    }
]