[
    {
        "content": "<p>We are defining a FHIR Restful API using FHIR STU3 for our Clinical Decision Support service, which uses two systems, the EMS and the CDSS.<br>\nThe Encounter Management System (EMS) invokes the appropriate  Clinical Decision Support System (CDSS), which stores and retains a set of clinical content rules that guide the triage process to an outcome. </p>\n<p>The triage process is initiated when the EMS selects a ServiceDefinition from a selected CDSS and the $evaluate operation is invoked by the EMS. The CDSS returns the GuidanceResponse resource detailing the suggested outcome to the triage process or additional data it requires as part of the triage process which is detailed in a referenced Questionnaire resource. </p>\n<p>One of the suggested outcomes is redirection to a different ServiceDefinition as the current cycle of Clinical Decision Support has completed.  As the element GuidanceResponse.result only has the choice Reference(CarePlan | RequestGroup), in order to achieve this redirection we are considering:</p>\n<p>•   Selecting RequestGroup and setting the element RequestGroup.action.resouce to reference the resource ‘Activity Definition’<br>\n•   In Activity Definition, populate the element ActivityDefinition.Library.dataRequirement to match the contents of the element ServiceDefinition.trigger.eventData for the new ServiceDefinition that the EMS is to be re-directed to progress with.</p>\n<p>Questions<br>\n1. The RequestGroup.action.resource does state “The target resource SHALL be a Request resource with a Request.intent set to \"option\".” Would referencing an ActivityDefinition at this element be FHIR Conformant? The specification does state ”An activity definition provides a reusable template that can be used to construct specific request resources such as ProcedureRequest and MedicationRequest.” <br>\n2. The suggestion above does seem like a complex approach for redirection to a new service definition, given that these additional resources (ActivityDefinition and Library) are solely defined to achieve this outcome by the CDSS. Could anyone suggest a more efficient approach on how this can be achieved?</p>",
        "id": 157840671,
        "sender_full_name": "Katie Wheatley",
        "timestamp": 1549610335
    },
    {
        "content": "<p>1. No.  RequestGroup is intended to be time-bound and subject-specific.  However, you could say \"Do this care plan\", where the care plan essentially says \"instantiate this protocol)<br>\n2. <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span></p>",
        "id": 157874344,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1549645251
    },
    {
        "content": "<p>RequestGroup is used if you need to preserve optionality among requests. If the outcome of your decision support is that some other decision support should be run, you could represent that with a CarePlan directly. Return a CarePlan with an activity.detail.definition that specifies the action you want to run. The STU3 CarePlan does not allow for ServiceDefinition to be one of those things, but you could use an extension to do that.</p>",
        "id": 157901989,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1549668075
    },
    {
        "content": "<p>Having said that, I'm curious about the implementation. Note that there is a __Note to implementers__ on ServiceDefinition in STU3 stating that the resource is deprecated and will be removed in R4 in favor of a CDS Hooks approach. In R4, it's possible to use a PlanDefinition to model the behavior you want to have run behind a CDS Hooks endpoint, so PlanDefinition would be a potential target for the functionality moving forward (and CarePlan does support pointing to a PlanDefinition in STU3).</p>",
        "id": 157902129,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1549668236
    },
    {
        "content": "<p>No need for an extension.  You'd just have the activity.activityDetail.instantiatesCanonical point to the definition.</p>",
        "id": 157903344,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1549669391
    },
    {
        "content": "<p>Thank you both for your responses. It was incredibly useful that you confirmed that it is not conformant to use the ActivityDefinition resource in the way I outlined.<br>\nWe are using STU3 at present, so while I am aware that the ServiceDefinition resource is deprecated in R4, it is not possible currently for us to move to R4. However, your comments will be borne in mind, should we be in a future position to move to R4.<br>\nThank you for suggesting ways in which we could reference a chosen ServiceDefinition from CarePlan. However, we are using a Data event triggering event rather than a Named event, so this approach would not be possible for us.</p>",
        "id": 158419014,
        "sender_full_name": "Katie Wheatley",
        "timestamp": 1550042332
    },
    {
        "content": "<p>This does not fulfil the requirement - the need is to identify the trigger of a new ServiceDefinition - not an actual ServiceDefinition.  The resource must allow the CDS to define the trigger requirements of the next decision support</p>",
        "id": 159718021,
        "sender_full_name": "David Waters",
        "timestamp": 1551450453
    },
    {
        "content": "<blockquote>\n<p>Having said that, I'm curious about the implementation. Note that there is a __Note to implementers__ on ServiceDefinition in STU3 stating that the resource is deprecated and will be removed in R4 in favor of a CDS Hooks approach. </p>\n</blockquote>\n<p>The note in STU3 says that the two will be aligned (As part of FHIR Release 4, it is the intention to unify the CDS Hooks specification with the Clinical Reasoning module), not that one would be deprecated in favour of the other</p>",
        "id": 159718194,
        "sender_full_name": "David Waters",
        "timestamp": 1551450587
    }
]