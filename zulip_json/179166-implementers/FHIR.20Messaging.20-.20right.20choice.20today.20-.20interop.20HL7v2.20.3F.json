[
    {
        "content": "<p>Any thoughts suggestions - is FHIR the wrong choice ?</p>",
        "id": 153873032,
        "sender_full_name": "Frank Misa",
        "timestamp": 1487766058
    },
    {
        "content": "<p>Looking to provide a way for Clinical applications to integrate with our Practice Management framework.  Initial application - and likely others - will speak HL7v2:  ADT,  SIU and DFT messages to start.</p>\n<ul>\n<li>FHIR support (examples) for \"messaging\" doesn't seem complete;  it's more a restful implementation.</li>\n<li>I see efforts to bridge between HL7v2 and FHIR using Batch or Transaction.<br>\nI need to define a standard message interface on my side - either JSON or XML - and push messages to ESB layer where mapping to/from HL7 can take place.<br>\nDon't want to reinvent the wheel - was hoping FHIR would provide a set of \"standard\" messages for me - I could bind and process in my application layer.</li>\n</ul>\n<p>[3rdParty - Clinical HL7*]&lt;=&gt;[ESB Mapping to FHIR xml/json]&lt;=&gt; [PracticeManagementFramework]</p>\n<p>Though it seems possible to map HL7v2 to FHIR messages;  FHIR to me seems more a shift towards a restful approach where the HL7 would be used to populate a \"repository\"/database - which could then be queried/updated using restful API.</p>\n<p>Any thoughts suggestions - is FHIR the wrong choice ?</p>",
        "id": 153873033,
        "sender_full_name": "Frank Misa",
        "timestamp": 1487767069
    },
    {
        "content": "<p>In England we use FHIR Messages and FHIR RESTful - different tools for different jobs. Not every interoperability challenge is going to be fixed by a RESTful FHIR interface. That said if that's an option then it is one to consider.</p>",
        "id": 153873035,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1487767953
    },
    {
        "content": "<p>Just to labour the point the value of having common \"profiles\" in place for different exchanges is significant. We use FHIR in the RESTful, Message and Document paradigms - all sharing the same resource profiles.</p>",
        "id": 153873036,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1487768105
    },
    {
        "content": "<p>Thank You !<br>\nMaybe I'm wrong - but the messaging support implementations don't seem as mature as the support for REST.<br>\nI don't see reference open-source FHIR messaging server implementations or hl7ToFHIR bridges that I can leverage/extend.<br>\nI see two approaches at least to map HL7v2 to FHIR.</p>\n<ul>\n<li>Mapping to FHIR Batch or Transaction types.</li>\n<li>or Message type: <a href=\"http://hl7.org/fhir/messaging.html\" target=\"_blank\" title=\"http://hl7.org/fhir/messaging.html\">http://hl7.org/fhir/messaging.html</a></li>\n</ul>\n<p>Are there any examples out there ? references ?<br>\n<a href=\"http://hapifhir.io/\" target=\"_blank\" title=\"http://hapifhir.io/\">http://hapifhir.io/</a></p>\n<p>Can you suggest some urls.</p>",
        "id": 153873037,
        "sender_full_name": "Frank Misa",
        "timestamp": 1487768522
    },
    {
        "content": "<p>You could using both versions of HAPI use Apache Camel to build a bridge (the hl7v2 hapi is a component), I've used this to provide a HL7v2 patient demographic feed to FHIR-HAPI demo database. I'm not finding a need to use FHIR in messaging at the moment and although I expect our EPR to move to FHIR API's, I'm not expecting the orchestration/integration engine to move over except for communication with the EPR and national systems.</p>",
        "id": 153873039,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1487769498
    },
    {
        "content": "<p>Link to HAPI/Camel v2 <a href=\"http://camel.apache.org/hl7.html\" target=\"_blank\" title=\"http://camel.apache.org/hl7.html\">http://camel.apache.org/hl7.html</a></p>",
        "id": 153873040,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1487769571
    },
    {
        "content": "<p>Thanks Kevin<br>\nThat was helpful.<br>\nCurious - given today's landscape....  if you're not moving to FHIR messaging - what are you mapping your vendor/3rd-party hl7v2 to downstream.<br>\nGiven all the mapping/transformation issues between vendor implementations of HL7 - I want to map to some common message/schema on my end - move the task of mapping/transformation out of my application - to another ESB/layer or the vendor themselves.<br>\nWhat's the standard message profile/schema you want to publish today to vendors wishing to integrate with you.<br>\nHL7v2 ?  or some custom XML/JSON schema - neither seem the correct choice to me - today.</p>",
        "id": 153873042,
        "sender_full_name": "Frank Misa",
        "timestamp": 1487771580
    },
    {
        "content": "<p>While architecting integration between 400 EHRs in one big city, we decided to use persistent FHIR transactions log - as replacement/evolution of messaging. Persistent means log is append only and available by REST API, each transaction has increasing number, so you could replicate this transactions to another server by moving pointer to last transaction and replaying this log (probably filtered by some criteria) on another server. This could be considered like extending FHIR history API. To do this we would like turn all CUD opeartions into transactions, even for one resource. This design is inspired by modern event driven integrations thro queues and databases replication analogy.</p>",
        "id": 153873049,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1487777213
    },
    {
        "content": "<p>This is a really interesting thought ! Thank you very much for sharing. <br>\nAre you replaying/using those transactions to populate a FHIR repository ?  The transactions themselves wouldn't be available by REST API.<br>\nBut I can see - how they can be used to populate a repository - that could be queried by REST api.  So then - instead of processing 'messages' the various points you need to integrate can query the repository using REST/verbs - and process CRUD operations that way.<br>\nCan't get my head wrapped around how those 400 EHRs you mention are sending you the FHIR transactions in the first place ?<br>\nAre those EHRs using FHIR to begin with or are they/you mapping their HL7 to FHIR transactions ?<br>\nThere's not an easy 1:1 mapping between HL7 and FHIR message and no reference/open-source bridge I can leverage for this purpose.<br>\nIf I understand correctly - FHIR 'messages' responses are w.r.t. to a given resource.  HL7 'messages' can reference many of these resources in a single message.  The only way I see to use FHIR on my end is to use HL7 to populate a FHIR repository.  We move away from <code>messages</code> and towards REST<code>API</code>.</p>",
        "id": 153873056,
        "sender_full_name": "Frank Misa",
        "timestamp": 1487781457
    },
    {
        "content": "<p>There's significantly more focus on RESTful use of FHIR because it provides easier interoperability - no need to negotiate what's in the payload, what responses are allowed or what event codes will be used.  And much of the initial implementation of FHIR has been in spaces where REST works well (mobile, PHRs, registries, etc.)  So it's certainly true that REST is more mature.  (REST is more mature than FHIR documents too.)  That said, messaging still makes sense when you need routing, certain types of asynchronous behavior, etc.  Also, messaging gives you more context.  In REST, an admit, discharge and a bed transfer would all be handled using PUT Patient/x.  That's a positive thing in terms of flexibility, but a bit of a downside in terms of detailed control.  (As a rule, the less control you try to assert at the server side, the easier it is to get interoperability, but there are certainly times when control is necessary.</p>",
        "id": 153873062,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487794865
    },
    {
        "content": "<p>Thank you very much Lloyd - everyone...<br>\nGetting a better understanding of how these technologies complement each-other.<br>\nReally appreciate the feedback.<br>\nThanks !</p>",
        "id": 153873069,
        "sender_full_name": "Frank Misa",
        "timestamp": 1487798443
    },
    {
        "content": "<p>Also, FHIR only documents the transport which isn't documented elsewhere, the FHIR REST protocol. Other protocols such as SMTP, HTTP Request-Response, MLLP, WSI Web Services etc. are document elsewhere and widely used, the only new addition is using FHIR resources as the payload of the exchange. In the Financial track of Connectathons since 2013 we have included at least one Request-Response protocol in addition for FHIR REST as the business is typically Request-Response. </p>",
        "id": 153873070,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1487798872
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193465\">@Frank Misa</span> transaction log is our extension to FHIR - we've added $transactions Operation, which could be used to pull transactions by REST API. EHR has to dump all changes into log in FHIR transaction bundle format. For example if new patient is registered - EHR create transaction with new Patient and Encounter resource, if Patient demographic changed - transaction with Patch Operation is added to the log. The difference with messages is that EHR should not report redundant information (all this message segments) - only what was changed, created or deleted - this is much simpler to implement, than build HL7v2 message, and also easy to on recipient side to process - just apply this transaction.  We are in early stage of evaluation of this approach, we will report results.</p>",
        "id": 153873102,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1487813296
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193465\">@Frank Misa</span> it's a bit of mixed bag. We're mostly moving bespoke xml feeds and HL7v2 to EDMS solutions, the EDMS doesn't need the full MDM^T02 message just the metadata (FHIR DocumentReference) and the actual document (FHIR Binary). The closest we come to a message is a FHIR Bundle containing both resources. We're looking at reducing the messaging for a number of reasons (information governance, etc), ideally we'd want systems to use a FHIR resource API to lookup the data rather than receiving  it via messaging.</p>",
        "id": 153873112,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1487844428
    }
]