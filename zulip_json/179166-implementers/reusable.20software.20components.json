[
    {
        "content": "<p>I've been poking around in javascript (angular/express) of late... and attempting to avoid reinventing of wheels</p>",
        "id": 153830585,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464647438
    },
    {
        "content": "<p>and I'm wondering how much history/ground-work has gone in the space?</p>",
        "id": 153830591,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464648299
    },
    {
        "content": "<p>I'm particularly interested in javascript (bower/npm) packages - but I imagine that much of this logic (and even some of the architectural scope decisions) would transcend language choice  </p>",
        "id": 153830592,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464648427
    },
    {
        "content": "<p>there seem to be cluster of demonstration projects - but I'm yet to see (without looking hard!) a pattern that separates [client], [server], [presentation] and [controller] components as stand-alone reusable packages</p>",
        "id": 153830598,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464649274
    },
    {
        "content": "<p>although noting an abundance of off the shelf REST client and server things</p>",
        "id": 153830599,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464649301
    },
    {
        "content": "<p>so its more the \"controller\" utilities and presentation that maybe of more interest</p>",
        "id": 153830600,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464649338
    },
    {
        "content": "<p>(i started this flight of ideas considering angular directives)</p>",
        "id": 153830601,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464649404
    },
    {
        "content": "<p>but I'm also thinking there maybe scope for a kind of \"lodash for FHIR\" general utility library </p>",
        "id": 153830602,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464649453
    },
    {
        "content": "<p>I'm imagining that many of the demonstration project authors would have encountered or created many such little reusable gems</p>",
        "id": 153830603,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464649564
    },
    {
        "content": "<p>I think you're correct to be thinking along these lines (though possible better to do so in the <code>javascript</code> stream) <span class=\"user-mention\" data-user-id=\"192001\">@Erich Schulz</span> -- the trick is to produce a compelling enough set of these utilities that developers are willing to follow your conventions to benefit from them. Critical mass, in other words.</p>",
        "id": 153830726,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1464708559
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> I'm thinking this much bigger than javascript - I've noticed work going on in both java and c# - and I think that there would be little nuggets of reusable goodness in these projects already</p>",
        "id": 153830764,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464732959
    },
    {
        "content": "<p>i'm thinking having  some common patterns in a \"utility belt\" library that transcended language  would help achieve critical mass</p>",
        "id": 153830765,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464733040
    },
    {
        "content": "<p>although javascript seems like the way of the future to me - a colleague was just singing the virtues of <code>python</code> of all things and predicting it rise (?)</p>",
        "id": 153830766,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464733109
    },
    {
        "content": "<p>I'm not sure how you plan to share a library that transcends platforms. We do talk a lot about similarity of design between java and dotnet, but it's not exactly the same - mostly for a good reasons. </p>",
        "id": 153830805,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464750718
    },
    {
        "content": "<p>main thing would be to share conceptual work</p>",
        "id": 153830812,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464752736
    },
    {
        "content": "<p>yes code wont share - but possibly many function signatures would be similar (?identical)</p>",
        "id": 153830816,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464752772
    },
    {
        "content": "<p>well, you can look at what the Java and dotnet libraries have. But it's not obvious that the javascript library should have the same functionality as them or not</p>",
        "id": 153830818,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464752808
    },
    {
        "content": "<p>also by thinking cross platform it could be that some of the implied knowledge can be dropped as a config file that all languages can use</p>",
        "id": 153830819,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464752831
    },
    {
        "content": "<p>rather than trawlling through 1000's of lines of code I'm hoping for pointers :-)</p>",
        "id": 153830820,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464752899
    },
    {
        "content": "<p>when I get a mo I'll start a google doc to write up a few functions to illustrate the kinds of things i'm think of</p>",
        "id": 153830821,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464753007
    },
    {
        "content": "<p>2 use cases I have already is taking a raw JSON blob and trimming out the stuff that could be considered as \"noise\" in a ui context</p>",
        "id": 153830822,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464753073
    },
    {
        "content": "<p>how would you know? </p>",
        "id": 153830823,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464753109
    },
    {
        "content": "<p>here's the stuff we have in the java library:<br>\n- A run time context for holding factories and loaded conformance resources<br>\n- generated object model + parsers (generated using the Object Model mappings in the resources)<br>\n- element based object model + validating parsers<br>\n- fluent path engine<br>\n- validator <br>\n- narrative generator<br>\n- a bunch of terminology and conformance utilities that power the build<br>\n- StructureMap based transform engine<br>\n- client</p>",
        "id": 153830824,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464753303
    },
    {
        "content": "<p>HAPI builds lots of other things on top of that too</p>",
        "id": 153830825,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464753312
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"192001\">@Erich Schulz</span> wants to use config file to pinpoint UI element to individual data attribute in JSON/XML raw data.</p>",
        "id": 153830826,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1464753374
    },
    {
        "content": "<p>some kind of UI binding thing? sounds very context specific, as well as implementation specific </p>",
        "id": 153830827,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464753420
    },
    {
        "content": "<p>That's my guess from his post.</p>",
        "id": 153830828,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1464753487
    },
    {
        "content": "<p>sweet </p>",
        "id": 153830831,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464754557
    },
    {
        "content": "<p>so game would be to isolate functions with clean injectable dependancies</p>",
        "id": 153830832,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464754584
    },
    {
        "content": "<p>this would not necessarily be a UI related</p>",
        "id": 153830833,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464754680
    },
    {
        "content": "<p>the general theme is little bits of transformation that occur commonly in the context of FHIR handling but are not handled by standard language constructs</p>",
        "id": 153830834,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464754735
    },
    {
        "content": "<p>I haven't found anything like that myself yet</p>",
        "id": 153830836,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464754872
    },
    {
        "content": "<p>(i also am thinking some UI widgets maybe sharable but that is truly highly context specific)</p>",
        "id": 153830837,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464754877
    },
    {
        "content": "<p>mmm </p>",
        "id": 153830838,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464754889
    },
    {
        "content": "<p>UI widget for good code look up --&gt; that would be a winner</p>",
        "id": 153830839,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464754898
    },
    {
        "content": "<p>heh</p>",
        "id": 153830840,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464754909
    },
    {
        "content": "<p>the angular ui-bootstrap \"typeahead\" is probably a good start for a code look up</p>",
        "id": 153830842,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464754938
    },
    {
        "content": "<p>it plays nice with RESTful endpoints</p>",
        "id": 153830843,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464754950
    },
    {
        "content": "<p>recurring theme I noticed in presenting the observation, flag, condition resources is there are are often code values that basically mean \"normal\" ie a \"confirmed condition\" is basically \"condition\" - to say \"confirmed\" is just visual clutter in the UI</p>",
        "id": 153830844,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464755071
    },
    {
        "content": "<p>or \"status=final\" for an observation</p>",
        "id": 153830845,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464755189
    },
    {
        "content": "<p>a more interesting example is the \"status\" value for encounters... if the event is in the future then \"planned\" is implied, wherase if it is in the past then \"finished\" is implied</p>",
        "id": 153830846,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464755448
    },
    {
        "content": "<p>but the impact of that on your UI is highly variable</p>",
        "id": 153830847,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464755568
    },
    {
        "content": "<p>sure</p>",
        "id": 153830848,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464755895
    },
    {
        "content": "<p>that's why its a library</p>",
        "id": 153830849,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464755901
    },
    {
        "content": "<p>use it if it works or not, or let users toggle both \"cleaned\" and \"full\" display</p>",
        "id": 153830850,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464755926
    },
    {
        "content": "<p>if there are some common variations they could be parameters</p>",
        "id": 153830851,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464755940
    },
    {
        "content": "<p>but 80:20 rule would apply</p>",
        "id": 153830852,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464755949
    },
    {
        "content": "<p>point being that is a single example</p>",
        "id": 153830853,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464755960
    },
    {
        "content": "<p>if some kind of classification engine is injected then some more interesting possibilities exist</p>",
        "id": 153830855,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464756223
    },
    {
        "content": "<p>eg to remove or collapse reduntant observations and condtions (if problem list includes \"asthma\" and \"acute asthma\" only show the second....</p>",
        "id": 153830856,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464756284
    },
    {
        "content": "<p>if 100 repeated observation in a short period then reduce that to a range </p>",
        "id": 153830857,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464756322
    },
    {
        "content": "<p>this is in the unix philosophy of small simple tools that do a single job and are easy to plug into bigger systems</p>",
        "id": 153830858,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464756477
    },
    {
        "content": "<p>the lodash library is the closest example to what I'm imagining</p>",
        "id": 153830859,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464756540
    },
    {
        "content": "<p>another nice example is the moment library</p>",
        "id": 153830862,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464756631
    },
    {
        "content": "<p><a href=\"http://momentjs.com/\" target=\"_blank\" title=\"http://momentjs.com/\">http://momentjs.com/</a></p>",
        "id": 153830863,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464756669
    },
    {
        "content": "<p>since I - and probably most readers - have no idea what they are, do you want to describe them? </p>",
        "id": 153830864,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464756690
    },
    {
        "content": "<p>sure moment is a set of functions that just do things with dates and times</p>",
        "id": 153830865,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464756715
    },
    {
        "content": "<p>lodash is more heterogenous but provides a stack of function that manipulate JS arrays, objects and collections (sort, extract columns, search, iterate over etc)</p>",
        "id": 153830866,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464756809
    },
    {
        "content": "<p>I think these would be two of the most commonly used JS packages and they transcend the framework</p>",
        "id": 153830868,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464756869
    },
    {
        "content": "<p><a href=\"https://lodash.com/docs\" target=\"_blank\" title=\"https://lodash.com/docs\">https://lodash.com/docs</a></p>",
        "id": 153830869,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464756924
    },
    {
        "content": "<p>ie just simple collections of simple functions with no external dependancies</p>",
        "id": 153830871,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464756970
    },
    {
        "content": "<p>that save 1000's of coders having to reinvent wheels</p>",
        "id": 153830872,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464756998
    },
    {
        "content": "<p>got home from work... starting to make a doc to capture the above ramblings...</p>",
        "id": 153830900,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464770874
    },
    {
        "content": "<p>these are some examples of the kind of thing I'm picturing: <a href=\"https://github.com/PBernhardt/FHIR-Cloud/blob/master/src/app/common/filters.js#L17\" target=\"_blank\" title=\"https://github.com/PBernhardt/FHIR-Cloud/blob/master/src/app/common/filters.js#L17\">dob to age text formatter</a><br>\n<a href=\"https://github.com/PBernhardt/FHIR-Cloud/blob/master/src/app/common/filters.js#L46\" target=\"_blank\" title=\"https://github.com/PBernhardt/FHIR-Cloud/blob/master/src/app/common/filters.js#L46\">codeable concept displayer</a><br>\n<a href=\"https://github.com/PBernhardt/FHIR-Cloud/blob/master/src/app/common/filters.js#L113\" target=\"_blank\" title=\"https://github.com/PBernhardt/FHIR-Cloud/blob/master/src/app/common/filters.js#L113\">period displayer</a><br>\n<a href=\"https://github.com/PBernhardt/FHIR-Cloud/blob/master/src/app/common/filters.js#L134\" target=\"_blank\" title=\"https://github.com/PBernhardt/FHIR-Cloud/blob/master/src/app/common/filters.js#L134\">human name displayer</a><br>\n<a href=\"https://github.com/PBernhardt/FHIR-Cloud/blob/master/src/app/observation/observation.service.js#L438\" target=\"_blank\" title=\"https://github.com/PBernhardt/FHIR-Cloud/blob/master/src/app/observation/observation.service.js#L438\">generate a random religion for testing purposes</a><br>\n<a href=\"https://github.com/PBernhardt/FHIR-Cloud/blob/master/src/app/observation/observation.service.js#L484\" target=\"_blank\" title=\"https://github.com/PBernhardt/FHIR-Cloud/blob/master/src/app/observation/observation.service.js#L484\">clean up empty arrays to null values</a> to facilitate presentation with angular templates</p>",
        "id": 153830901,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464770901
    },
    {
        "content": "<p>actually, some of them do ring a bell. I have a nuber of summary displayers in my code base</p>",
        "id": 153830906,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464773166
    },
    {
        "content": "<p>:-)</p>",
        "id": 153830908,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464773240
    },
    {
        "content": "<p>I'm going to continue to make some notes <a href=\"https://docs.google.com/document/d/1hNFaEDY9SL4MUWzv9wBU-D8ag-sSmXSanBHbcEuMkAo/edit?usp=sharing\" target=\"_blank\" title=\"https://docs.google.com/document/d/1hNFaEDY9SL4MUWzv9wBU-D8ag-sSmXSanBHbcEuMkAo/edit?usp=sharing\">here</a></p>",
        "id": 153830909,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464773474
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> this seems a bit like your kind of thing??</p>",
        "id": 153830910,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464773492
    },
    {
        "content": "<p>can you read pascal? </p>",
        "id": 153830911,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464773869
    },
    {
        "content": "<p>there's a bunch of them in here:</p>",
        "id": 153830912,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464773878
    },
    {
        "content": "<p>takes me back to Delphi</p>",
        "id": 153830913,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464773899
    },
    {
        "content": "<p>1996...</p>",
        "id": 153830914,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464773910
    },
    {
        "content": "<p><a href=\"https://github.com/grahamegrieve/fhirserver/blob/master/reference-platform/dstu3/FHIRUtilities.pas\" target=\"_blank\" title=\"https://github.com/grahamegrieve/fhirserver/blob/master/reference-platform/dstu3/FHIRUtilities.pas\">https://github.com/grahamegrieve/fhirserver/blob/master/reference-platform/dstu3/FHIRUtilities.pas</a></p>",
        "id": 153830915,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464773940
    },
    {
        "content": "<p>strewth - theres not a lot of comments in that file!!!</p>",
        "id": 153830916,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464774033
    },
    {
        "content": "<p>nah. not that one. </p>",
        "id": 153830917,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464774105
    },
    {
        "content": "<p>but i can spot a few likely sounding contenders in there</p>",
        "id": 153830918,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464774190
    },
    {
        "content": "<p><code>HumanNamesAsText()</code></p>",
        "id": 153830919,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464774244
    },
    {
        "content": "<p>i think I would need some assistance in identifying the high-value functions</p>",
        "id": 153830922,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464780008
    },
    {
        "content": "<p>if given some test cases I'd have a crack at some JS implementations</p>",
        "id": 153830923,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464780028
    },
    {
        "content": "<p>those are the ones. Those are easy to transform to js too</p>",
        "id": 153830924,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464781007
    },
    {
        "content": "<p>all of them?</p>",
        "id": 153830926,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464781142
    },
    {
        "content": "<p>all the gen() methods</p>",
        "id": 153830927,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464781249
    },
    {
        "content": "<p>so thats an overloaded function dependant on strong typing - all returning string?</p>",
        "id": 153830928,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464781446
    },
    {
        "content": "<p>not sure if even typescript supports overloading...</p>",
        "id": 153830929,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464781465
    },
    {
        "content": "<p>but a <code>type</code> parameter would enable same functionality</p>",
        "id": 153830930,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464781483
    },
    {
        "content": "<p>any chance of some testcases?</p>",
        "id": 153830931,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464781522
    },
    {
        "content": "<p>well, in JS you'd name them differently</p>",
        "id": 153830932,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464781545
    },
    {
        "content": "<p>gen[Type]</p>",
        "id": 153830933,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464781552
    },
    {
        "content": "<p><code>[{in: {type: &lt;string&gt;, value: &lt;JSON&gt;}, out: &lt;json&gt;}, ... ]</code></p>",
        "id": 153830934,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464781606
    },
    {
        "content": "<p>well, that's probably a good idea, but no, I don't have test cases</p>",
        "id": 153830935,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464781660
    },
    {
        "content": "<p>json test cases would enable cross language compatibility...</p>",
        "id": 153830936,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464781699
    },
    {
        "content": "<p>having type as a parameter would simplify calling</p>",
        "id": 153830937,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464781810
    },
    {
        "content": "<p>if the muse takes you - chuck a few at me and I'll have a crack</p>",
        "id": 153830938,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464782181
    },
    {
        "content": "<p>others then may chip in?</p>",
        "id": 153830939,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464782205
    },
    {
        "content": "<p>btw, is \"gen\" short for \"generate a text representation of supplied object\"?</p>",
        "id": 153830940,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464782284
    },
    {
        "content": "<p>y</p>",
        "id": 153830941,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464782581
    },
    {
        "content": "<p>I do this in a couple of places in clinFHIR (though driven by the needs of the app - and 'organically' grown - rather than intended to be a library).  These ones are datatype data entry templates (<a href=\"https://github.com/davidhay25/FHIRSampleCreator/tree/master/prTemplates\" target=\"_blank\" title=\"https://github.com/davidhay25/FHIRSampleCreator/tree/master/prTemplates\">https://github.com/davidhay25/FHIRSampleCreator/tree/master/prTemplates</a> ) and <a href=\"https://github.com/davidhay25/FHIRSampleCreator/blob/master/includes/dataTypeInputTemplates.html\" target=\"_blank\" title=\"https://github.com/davidhay25/FHIRSampleCreator/blob/master/includes/dataTypeInputTemplates.html\">https://github.com/davidhay25/FHIRSampleCreator/blob/master/includes/dataTypeInputTemplates.html</a> used in the Resource Builder</p>",
        "id": 153830957,
        "sender_full_name": "David Hay",
        "timestamp": 1464790421
    },
    {
        "content": "<p>And these are some utilities for generating a 'one line description' of resources to assist users selecting one as a reference target: seatch for 'getOneLineSummaryOfResource' in <a href=\"https://github.com/davidhay25/FHIRSampleCreator/blob/master/resourceBuilder/rbServices.js\" target=\"_blank\" title=\"https://github.com/davidhay25/FHIRSampleCreator/blob/master/resourceBuilder/rbServices.js\">https://github.com/davidhay25/FHIRSampleCreator/blob/master/resourceBuilder/rbServices.js</a> - I need to extend them to cover more resources at some point...</p>",
        "id": 153830963,
        "sender_full_name": "David Hay",
        "timestamp": 1464790636
    },
    {
        "content": "<p>If someones interested in building more 'formal' libraries of javascript components that would meet these needs - plus the 'build text' one that I'd certainly  be happy to help out... </p>",
        "id": 153830964,
        "sender_full_name": "David Hay",
        "timestamp": 1464790902
    },
    {
        "content": "<p>awesome <span class=\"user-mention\" data-user-id=\"191321\">@David Hay</span> ! I've been making some notes <a href=\"https://docs.google.com/document/d/1hNFaEDY9SL4MUWzv9wBU-D8ag-sSmXSanBHbcEuMkAo/edit?usp=sharing\" target=\"_blank\" title=\"https://docs.google.com/document/d/1hNFaEDY9SL4MUWzv9wBU-D8ag-sSmXSanBHbcEuMkAo/edit?usp=sharing\">here</a></p>",
        "id": 153831167,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464837770
    },
    {
        "content": "<p>the place to start maybe to see how many people are interested in workshopping some function signatures, the putting together list of test cases</p>",
        "id": 153831168,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464837905
    },
    {
        "content": "<p>hopefully putting together a set of simple test cases is simple activity that may attract a few contributors</p>",
        "id": 153831234,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464858151
    },
    {
        "content": "<p>some test cases of \"codeableconcept\" would be appreciated - especially with some some curly edge cases</p>",
        "id": 153831242,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1464866603
    }
]