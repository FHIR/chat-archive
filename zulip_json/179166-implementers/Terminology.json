[
    {
        "content": "<p>[reposting from Skype Terminology list]</p>\n<p>My little VSTool is now available: <a href=\"http://ontoserver.csiro.au/vstool/\" target=\"_blank\" title=\"http://ontoserver.csiro.au/vstool/\">http://ontoserver.csiro.au/vstool/</a>  It has a limited number of pre-configured endpoints supporting FHIR Terminology (let me know if you want others added) and a some pre-configures sample ValueSets to work with.  Hover over an endpoint name to see some additional details, click on a code to do a $lookup on that code with the server of the same column</p>\n<p>Each column shows the reported number of matching codes (only the 1st 10 are requested) and the response time (timing started separately for each request, but potentially affected by processing a quicker server's response).</p>\n<p>The bottom of the table shows the actual request (sans endpoint) that was sent to each server</p>",
        "id": 153812885,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1455860954
    },
    {
        "content": "<p>Looking for any further details on <a href=\"http://hl7.org/fhir/StructureDefinition/conformance-supported-system\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/conformance-supported-system\">http://hl7.org/fhir/StructureDefinition/conformance-supported-system</a> -- <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> you server seems to use <a href=\"http://hl7.org/fhir/StructureDefinition/conformance-common-supported-system\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/conformance-common-supported-system\">http://hl7.org/fhir/StructureDefinition/conformance-common-supported-system</a> instead?</p>",
        "id": 153813031,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1456120341
    },
    {
        "content": "<p>Michael, what further details do you want? I think we should replace that extension with a direct reference to the code system resource</p>",
        "id": 153813063,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1456170269
    },
    {
        "content": "<p>Server implementers - how are you validating bcp47 tags?  Is this special handling? I can't see a way to implement a bcp47 valueset that isn't hopelessly huge...  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> ?</p>",
        "id": 153813547,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1456759647
    },
    {
        "content": "<p>I thought FHIR had defined some constraints on BCP47, but it appears not. This is a nice practical tool for exploring the BCP47 space: <a href=\"http://schneegans.de/lv/\" target=\"_blank\" title=\"http://schneegans.de/lv/\">http://schneegans.de/lv/</a>.</p>\n<p>Also <a href=\"https://github.com/DanSmith/languagetags-sharp\" target=\"_blank\" title=\"https://github.com/DanSmith/languagetags-sharp\">https://github.com/DanSmith/languagetags-sharp</a></p>\n<p>For some reason it's the C# community that seems to care about this :-)</p>",
        "id": 153813549,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1456760849
    },
    {
        "content": "<p>Yep...we've been using that to better understand...</p>",
        "id": 153813550,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1456760888
    },
    {
        "content": "<p>The FHIR bindings though imply that the normal ValueSet @validate will be used to determine validity</p>",
        "id": 153813551,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1456760914
    },
    {
        "content": "<p>Which leads either to a valueset with all possible combinations of tags OR special case handling</p>",
        "id": 153813552,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1456760943
    },
    {
        "content": "<p>\"Ha!\". Yeah, that's not realistic for a grammar like this (similar to the story for UCUM).</p>",
        "id": 153813553,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1456760946
    },
    {
        "content": "<p>Does valueset need some kind of capability to support these?  Or at least indicate special handling?</p>",
        "id": 153813554,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1456760990
    },
    {
        "content": "<p>It's also worth pointing out that unconstrained BCP47 tags make the \"language\" search param on Patient pretty hard to use.</p>",
        "id": 153813555,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1456760995
    },
    {
        "content": "<p>i.e. no good way to say \"all patients who speak english\".</p>",
        "id": 153813556,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1456761009
    },
    {
        "content": "<p>right...need some kind of hierarchy or equivalence...</p>",
        "id": 153813557,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1456761046
    },
    {
        "content": "<p>Hmm, at <a href=\"https://hl7-fhir.github.io/patient.profile.xml\" target=\"_blank\" title=\"https://hl7-fhir.github.io/patient.profile.xml\">https://hl7-fhir.github.io/patient.profile.xml</a>  I see</p>\n<div class=\"codehilite\"><pre>      <span class=\"nt\">&lt;binding&gt;</span>\n        <span class=\"nt\">&lt;strength</span> <span class=\"na\">value=</span><span class=\"s\">&quot;required&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;description</span> <span class=\"na\">value=</span><span class=\"s\">&quot;A human language.&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;valueSetUri</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://tools.ietf.org/html/bcp47&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/binding&gt;</span>\n</pre></div>\n\n\n<p>which doesn't use a FHIR valueset at all. Where are you looking?</p>",
        "id": 153813558,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1456761072
    },
    {
        "content": "<p>doesn't <code>valueSetUri</code> imply a valueset?</p>",
        "id": 153813559,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1456761101
    },
    {
        "content": "<p>It's a fair question :-)  But what I mean is, I don't see a FHIR <code>ValueSet</code> resource written down anywhere (let alone written down and stating \"this can't be used for validation because it doesn't implement the necessary grammar\")</p>",
        "id": 153813560,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1456761202
    },
    {
        "content": "<p>Hmm...Documentation&gt;System List uses <code>urn:ietf:bcp:47</code></p>",
        "id": 153813561,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1456761206
    },
    {
        "content": "<p>Yes, I just saw this in an example too, at <a href=\"http://hl7-fhir.github.io/patient-example-f001-pieter.json.html\" target=\"_blank\" title=\"http://hl7-fhir.github.io/patient-example-f001-pieter.json.html\">http://hl7-fhir.github.io/patient-example-f001-pieter.json.html</a></p>",
        "id": 153813562,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1456761235
    },
    {
        "content": "<p>Agree - there's nothing in the validation package for bcp47</p>",
        "id": 153813563,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1456761236
    },
    {
        "content": "<p>Do any of the servers validate these tags?</p>",
        "id": 153813564,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1456761261
    },
    {
        "content": "<p>Mine doesn't.</p>",
        "id": 153813565,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1456761273
    },
    {
        "content": "<p>I'd be surprised.</p>",
        "id": 153813566,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1456761278
    },
    {
        "content": "<p>ok...might consider a gForge</p>",
        "id": 153813567,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1456761331
    },
    {
        "content": "<p>although I'm not sure what to put in it!</p>",
        "id": 153813568,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1456761361
    },
    {
        "content": "<p>In the FHIR build at implementations/csharp/Hl7.Fhir.Model/Validation/xhtml/xml.xsd I love the following </p>\n<blockquote>\n<div class=\"codehilite\"><pre> Attempting to install the relevant ISO 2- and 3-letter\n  codes as the enumerated possible values is probably never\n  going to be a realistic possibility.\n</pre></div>\n\n\n</blockquote>",
        "id": 153813569,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1456761403
    },
    {
        "content": "<p>Huh...known issue, eh?</p>",
        "id": 153813570,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1456761441
    },
    {
        "content": "<p>Well, buried in a validation file in the c# implementation (which I didn't think was even maintained in the build anymore; that file is pretty orphaned)</p>",
        "id": 153813571,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1456761467
    },
    {
        "content": "<p>Yeah, for a GForge issue the question is basically <strong>How on earth do we use language tags in FHIR?</strong></p>",
        "id": 153813572,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1456761494
    },
    {
        "content": "<p>ok...I'll open one. Chime in as you see fit!</p>",
        "id": 153813573,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1456761525
    },
    {
        "content": "<p>Sure -- just share a link here if you would!</p>",
        "id": 153813574,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1456761970
    },
    {
        "content": "<p>Done. <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=9647\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=9647\">http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=9647</a></p>",
        "id": 153813575,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1456762124
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 153813576,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1456762132
    },
    {
        "content": "<p>Very clear -- I don't think I have anything to add :-)</p>",
        "id": 153813577,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1456762160
    },
    {
        "content": "<p>Maybe just a \"yeah!\" ;)</p>",
        "id": 153813578,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1456762185
    },
    {
        "content": "<p>Done!</p>",
        "id": 153813580,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1456762241
    },
    {
        "content": "<p>k. so the value set is implicit. e.g. it needs special case handling. I don't think I've done the special case handling for this yet</p>",
        "id": 153813586,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1456764140
    },
    {
        "content": "<p>there's no way to represent this complexity in an explicit value set, though you can make restricted enumeration value sets on the languages</p>",
        "id": 153813587,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1456764179
    },
    {
        "content": "<blockquote>\n<p>doesn't valueSetUri imply a valueset?</p>\n</blockquote>\n<p>Not in the sense of a ValueSet resource, the element value[x] is either a Uri or a Reference. In the latter case, this would point to a FHIR ValueSet resource, otherwise it's a more informal reference.</p>",
        "id": 153813588,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1456765847
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> Are you saying that the implied value set could be of any format then?</p>",
        "id": 153813602,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1456772333
    },
    {
        "content": "<p>When referenced to by valueUri, yes, indeed. In fact, you could leave out value[x] completely and just use 'description' to describe what you are referring to instead of having an actual reference - even more informal.</p>",
        "id": 153813603,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1456772647
    },
    {
        "content": "<p>O wow. Is there any language to discourage that? Or is this support for SVS, CTS2, Word, Excel and what have you to be more common than I would hope?</p>",
        "id": 153813605,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1456772760
    },
    {
        "content": "<p>we've only used it in 2 places, where we refer to w3c specs for language and mediatype</p>",
        "id": 153813606,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1456772806
    },
    {
        "content": "<p>since they're not really processible, I figure that we don't need to add any language around this; people that do it out of laziness will get beaten upon</p>",
        "id": 153813607,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1456772843
    },
    {
        "content": "<p>OK, so uncommon in the base spec, but a potential invitation for people not to invest in FHIR processable value set if and when possible. Some language on dos and donts is probably in order</p>",
        "id": 153813609,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1456772911
    },
    {
        "content": "<p>We should be more specific about the kind of punishment you will receive, yes.</p>",
        "id": 153813610,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1456773019
    },
    {
        "content": "<p>;-)</p>",
        "id": 153813611,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1456773032
    },
    {
        "content": "<p>you'll get dutch people screaming at you? </p>",
        "id": 153813612,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1456773059
    },
    {
        "content": "<p>Errr... not volunteering...</p>",
        "id": 153813613,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1456773907
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191351\">@Chris Grenz</span> I'm assuming you're thinking for the <code>Resource.language</code> property? HAPI doesn't validate that currently. That sounds.... painful to implement :)</p>",
        "id": 153813619,
        "sender_full_name": "James Agnew",
        "timestamp": 1456775284
    },
    {
        "content": "<p>Oops, I see I missed a bunch of the subsequent discussion.</p>",
        "id": 153813621,
        "sender_full_name": "James Agnew",
        "timestamp": 1456775337
    },
    {
        "content": "<p>Still getting used to Zulip :)</p>",
        "id": 153813622,
        "sender_full_name": "James Agnew",
        "timestamp": 1456775345
    },
    {
        "content": "<p>Sorry for delay in responding.  I'm wondering which is the right (best) one to use (only the first one resolves to anything).  Looking closer, I'm thinking that it only supports identifying a particular code system as being supported, but not which versions of that code system are supported (which is what I also need to do)</p>",
        "id": 153813726,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1456793557
    },
    {
        "content": "<p>Michael - what's the context of that?</p>",
        "id": 153813728,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1456794509
    },
    {
        "content": "<p>argh, I thought zulip did \"real\" threading and thus would attach my reply to the message I replied to, but I gather it just does topics</p>\n<p>The context was my (week old) question about the extensions to list supported code systems in the metadata Conformance Resource.</p>",
        "id": 153813730,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1456795039
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> Anywhere that the bcp47 binding is found.  Patient and practitioner communication is probably more immediately interesting.  I've opened a gForge.  My thought at this point is that it should look like a simple ValueSet binding if it's not simple!</p>",
        "id": 153813823,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1456843451
    },
    {
        "content": "<p>And I also missed some later comments...not sure it's very clear that a \"valueSetUri\" may not point to a ValueSet.</p>",
        "id": 153813824,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1456843599
    },
    {
        "content": "<p>@Michael Lawley The example in the spec states that this is \"a todo for a future version to standardise things like which versions are supported etc.\" One possibility is to include the version in the URI - where, like SNOMED CT, the Code System has this facility - although I'm not sure if that would be permissible?</p>",
        "id": 153813827,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1456871687
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191351\">@Chris Grenz</span> <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>  That file from the c# model is still there in the github code. Just no in the build process anymore. (I just checked)</p>",
        "id": 153813882,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1457026497
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> Sorry....which file?  The bcp47 sub-tag registry?</p>",
        "id": 153813886,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1457037636
    },
    {
        "content": "<p>The xsd file (Validation/xhtml/xml.xsd) that josh reference that is no longer in the build process (as its now external)</p>",
        "id": 153813889,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1457045167
    },
    {
        "content": "<p>what xsd file? </p>",
        "id": 153813917,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457139718
    },
    {
        "content": "<p>now that we're defining the CodeSystem resource, are we going to define standard code system resources for SNOMED CT, LOINC, etc? </p>",
        "id": 153814304,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457399775
    },
    {
        "content": "<p>in fact, for this list:</p>",
        "id": 153814305,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457399778
    },
    {
        "content": "<p><a href=\"http://hl7.org/fhir/terminologies-systems.html\" target=\"_blank\" title=\"http://hl7.org/fhir/terminologies-systems.html\">http://hl7.org/fhir/terminologies-systems.html</a></p>",
        "id": 153814306,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457399789
    },
    {
        "content": "<p>It would be a good idea</p>",
        "id": 153814313,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1457402246
    },
    {
        "content": "<p>does anyone want to volunteer to make some up? </p>",
        "id": 153814314,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457402506
    },
    {
        "content": "<p>Grahame: I assume you mean FHIR code system resource instances for those terminologies, but without their content (codes, descriptions, relationships, tec.) ?</p>",
        "id": 153814321,
        "sender_full_name": "Reuben Daniels",
        "timestamp": 1457408477
    },
    {
        "content": "<p>*etc</p>",
        "id": 153814322,
        "sender_full_name": "Reuben Daniels",
        "timestamp": 1457408480
    },
    {
        "content": "<p>yes. maybe a very few we'll carry the full code system, but that would have to come with careful consideration. (we do for DICOM, for instance)</p>",
        "id": 153814323,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457408645
    },
    {
        "content": "<p>well, with out the code,s, but with the definition of the properties</p>",
        "id": 153814324,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457408666
    },
    {
        "content": "<p>please no :(  We don't need another \"distribution format\" for SNOMED; I thought the whole idea of the termiology service support in FHIR was to avoid having to do this kind of thing</p>",
        "id": 153814703,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1457587953
    },
    {
        "content": "<p>no, not the content. Just the properties and filters. </p>",
        "id": 153814704,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457588386
    },
    {
        "content": "<p>oh ok, good to know. We almost started to extend a library of ours in order to import the whole ICD-10-GM-* dataset onto a fhir server. What OpenSource terminologyserver would you recommend</p>",
        "id": 153815844,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1458132802
    },
    {
        "content": "<p>well, ontoserver is probably the best. Or you can use mine (<a href=\"http://healthintersections.com.au/FhirServer\" target=\"_blank\" title=\"http://healthintersections.com.au/FhirServer\">healthintersections.com.au/FhirServer</a>) or Apelons</p>",
        "id": 153815890,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458161258
    },
    {
        "content": "<p>thx</p>",
        "id": 153815922,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1458167662
    },
    {
        "content": "<p>Definition of valuesets by both <code>inclusion</code> and <code>exclusion</code> with <code>imports</code> makes expansion not optimizable,  i.e. forces expansion to be sequential and depends on order of rules.  It's like problems with negation in logic or mess in security rules with allow &amp; deny. If we will take into account versions - efficient and correct implementation of terminology becomes really challenge.   Set of codes from different code-systems also induces some semantic doubts :)</p>",
        "id": 153859621,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1480606250
    },
    {
        "content": "<p>how does it make it sequential? I don't think the definition is sequential. </p>",
        "id": 153859648,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1480617789
    },
    {
        "content": "<p>I agree that it's much harder to optimise than it was. But reality doesn't go away even when you want to (and I really tried on this one!)</p>",
        "id": 153859649,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1480617816
    },
    {
        "content": "<p>The only \"sequential\" bit is that excludes happen after includes, but we compile the definition into a single query and send it off for evaluation.  This also includes complex things like the SNOMED CT Expression Constraint Language</p>",
        "id": 153859883,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1480677639
    },
    {
        "content": "<p>You could not compile value set into one non-nested query because import + exclude, because exclude has scope, to which it's applied</p>",
        "id": 153859905,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1480682566
    },
    {
        "content": "<p>Just for example vs2 (include:[c1], import: [vs1]) and vs1 (include[c1,c2], exclude:[c1]) - should vs2 contains c1?</p>",
        "id": 153859906,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1480682679
    },
    {
        "content": "<p>Without exclude we could implement efficient import, or even better without import we have less problems. Do we really need this inheritance in ValueSets? Could we replace it with composition in profiles? i.e. this element should be coded from VS1 or VS2</p>",
        "id": 153859920,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1480685104
    },
    {
        "content": "<p>we do need it, yes. And if we moved the problem to profiles, we would have to deal with and and or in profiles - messy. There's already a  proposal to complicate the binding and it's one of the most contentious parts of the typing system now</p>",
        "id": 153859998,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1480705883
    },
    {
        "content": "<p>and in your example, vs2 won't contain anything in c1</p>",
        "id": 153859999,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1480705898
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  do you mean vs2 should not contain c1, even after it's stated explicitly vs2(include: [c1])? </p>",
        "id": 153860046,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1480714622
    },
    {
        "content": "<p>well, you include it, but you also exclude it. So nothing from it will be present in the end. It's a bit redundant</p>",
        "id": 153860062,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1480727733
    },
    {
        "content": "<p>This behaviour could be confusing for designers of valuesets, because import/inheritance is implicit and you could build long chain of imports and after that get situation where the parent exclude rules will override children's includes  :(( But good news if <code>exclude</code> rules are  global for the chain, we could optimize expansion :)  I still have doubts that  imports is a good idea, because such ambiguity.</p>",
        "id": 153860114,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1480794459
    },
    {
        "content": "<p>'parent' and 'child' are the wrong words. By the stated rules,  excludes in an imported  values set will not override excludes in the value set that imports it</p>",
        "id": 153860119,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1480795903
    },
    {
        "content": "<p>I mean <code>excludes</code> in imported valuesets will override <code>includes</code> in VS that imports it ?!</p>",
        "id": 153860120,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1480796038
    },
    {
        "content": "<p>no</p>",
        "id": 153860121,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1480796264
    },
    {
        "content": "<p>But then vs2 would contain c1, since vs2 includes c1, which is not to be overriden by exclude:[c1] in the imported vs1 ?<br>\nWhich in fact seems more consistent to me, though making optimization harder ;-)</p>",
        "id": 153860122,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1480801548
    },
    {
        "content": "<p>Basically I would think of vs1 as readily processed when it \"arrives\"as an import into vs2, so whatever happens when generating vs2 is not influenced by the rules from which vs1 was generated but only by the final content of vs1. Right?</p>",
        "id": 153860123,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1480802375
    },
    {
        "content": "<p>That's what i call - \"sequential\" logic of expansion - i should expand included value sets and then compose - i could not change order of this proccess</p>",
        "id": 153860205,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1480865339
    },
    {
        "content": "<p>well, you can change the order within the include list, and within the exclude list, but not otherwise, no</p>",
        "id": 153860216,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1480880365
    },
    {
        "content": "<p>Per the VSD, \"included\" value sets are to pass expansions to the value set they are included in. In other words you SHALL expand from the inside out. The expression used to define an \"included\" value set is scoped FOR THAT VALUE SET ONLY. I.E.: No \"exclude\" in an \"included\" value set should ever dictate behavior in an \"including\" value set. If you want to do that DON\"T use an \"include value set\" function. Instead you should explictly craft a single expression for the value set you want. </p>",
        "id": 153860527,
        "sender_full_name": "Robert McClure",
        "timestamp": 1480913383
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191503\">@Robert McClure</span>  do you mean \"import\", not \"include\"?</p>",
        "id": 153860564,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1480928127
    },
    {
        "content": "<p>Ah, sorry  I did mean \"Import\". I'm assuming that \"import value set\" is the same as \"include\" it's expansion. Is that correct? BTW, where is the url for import? I don't see that operation in the value set resoure page.</p>",
        "id": 153861131,
        "sender_full_name": "Robert McClure",
        "timestamp": 1480997133
    },
    {
        "content": "<p>it's not an operation. It's this: </p>",
        "id": 153861132,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1480997677
    },
    {
        "content": "<p><a href=\"http://build.fhir.org/valueset-definitions.html#ValueSet.compose.include.valueSet\" target=\"_blank\" title=\"http://build.fhir.org/valueset-definitions.html#ValueSet.compose.include.valueSet\">http://build.fhir.org/valueset-definitions.html#ValueSet.compose.include.valueSet</a></p>",
        "id": 153861133,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1480997691
    },
    {
        "content": "<p>but it used to be called 'import' before the change Nicola is unhappy about (which we decided Wed Q1 in Baltimore0</p>",
        "id": 153861134,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1480997720
    },
    {
        "content": "<p>Ok - that makes sense because it certainly seems like an \"Include\". </p>\n<p>Do you agree with what I have noted above? That when a value set is \"included\" into another value set that resolving the definition of the included vs to determine an expansion set should done, essentially, from the inside out. And that each value set is \"resolved\" to an expansion set and then that result is passed to the value set that includes it. This makes things pretty straight forward IMO. <br>\nSo any concept in the expansion of an included value set can subsequently be excluded by the value set using it. Or the opposite, a concept excluded in an \"inner\" value set can be subsequently included. </p>\n<p>This means you should not try to create some uber-combined definition expression to determine the final expansion.</p>",
        "id": 153861207,
        "sender_full_name": "Robert McClure",
        "timestamp": 1481034950
    },
    {
        "content": "<p>I absolutely agree with that</p>",
        "id": 153861266,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481052249
    },
    {
        "content": "<p>agree</p>",
        "id": 153861322,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1481064646
    },
    {
        "content": "<p>was compose.import replaced with compose.include.valueSet?</p>",
        "id": 153861517,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1481102479
    },
    {
        "content": "<p>May be make it's type (VS.compose.import.valueSet) <code>Reference(ValueSet)</code> instead of <code>uri</code>? </p>",
        "id": 153861519,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1481102587
    },
    {
        "content": "<p>yes that's what happened. The data type was always uri, and so it stayed URI. we could replace uri with reference, or allow a choice...</p>",
        "id": 153861565,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481107706
    },
    {
        "content": "<p>coming back to this late @<strong>nicola (RIO)</strong> yes you need a form of nesting in the query so that in your example, the expansion of vs1 is {c2} and the expansion of vs2 is {c1,c2}</p>",
        "id": 153862643,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1481261137
    },
    {
        "content": "<p>Valueset expansions against the implicit SNOMED valueset, should these also include the nestings where appropriate?<br>\ne.g. <code>Expansion.contains.contains</code> to be populated with stuff</p>",
        "id": 153865396,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1483509593
    },
    {
        "content": "<p>can (not should)</p>",
        "id": 153865406,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1483518343
    },
    {
        "content": "<p>no problems. I am writing transforms from r2 to r3 for most resources, and have picked up quite a few issues</p>",
        "id": 153865408,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1483520943
    },
    {
        "content": "<p>Thanks Grahame.</p>",
        "id": 153865409,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1483521048
    },
    {
        "content": "<p>oops. that message was in the wrong topic</p>",
        "id": 153865410,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1483521075
    },
    {
        "content": "<p>I'm re-implementing terminology expansions in my server and wanted to check that my understanding is right.<br>\n<code>http://hl7.org/fhir/2017Jan/valueset-detectedissue-category.html</code><br>\nThis seems to not be expanding right.<br>\nThe <code>is-a</code> codes are not included in the expansion. (this looks like a <code>descendants-of</code> expansion.</p>",
        "id": 153865624,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1483577543
    },
    {
        "content": "<p>(Ontoserver is returning the values though)</p>",
        "id": 153865625,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1483577561
    },
    {
        "content": "<p><a href=\"http://ontoserver.csiro.au/baltimore/ValueSet/$expand?identifier=http://hl7.org/fhir/ValueSet/detectedissue-category\" target=\"_blank\" title=\"http://ontoserver.csiro.au/baltimore/ValueSet/$expand?identifier=http://hl7.org/fhir/ValueSet/detectedissue-category\">http://ontoserver.csiro.au/baltimore/ValueSet/$expand?identifier=http://hl7.org/fhir/ValueSet/detectedissue-category</a></p>",
        "id": 153865626,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1483577587
    },
    {
        "content": "<p>Is this related to the property <code>http://hl7.org/fhir/concept-properties#notSelectable</code> on the concept for the groupers? (as documented here <code>http://hl7.org/fhir/2017Jan/codesystem.html#status</code></p>",
        "id": 153865627,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1483578824
    },
    {
        "content": "<p>Having updated to process with this assumption, now getting the same values (think is an onto-server bug).<br>\nAlso wondering that there is <code>http://hl7.org/fhir/concept-properties#deprecationDate</code> but there is no concept for when it was introduced, anyone else had that need?</p>",
        "id": 153865633,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1483581794
    },
    {
        "content": "<p>I</p>",
        "id": 153865640,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1483589397
    },
    {
        "content": "<p>I'll have to investigate</p>",
        "id": 153865641,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1483589403
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> Why would \"not selectable\" affect expansion?  It's a directive about appropriate client use.</p>",
        "id": 153866408,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1484187167
    },
    {
        "content": "<p>Looking for reasons why could be a difference between what you have and what the spec's expansion has.<br>\n(One of them has a problem)</p>",
        "id": 153866409,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1484187612
    },
    {
        "content": "<p>hmm, if the expansion in the spec is the desirec contents, then it looks like the definition should be using <code>descendent-of</code> rather than <code>is-a</code>.  Ontoserver is expanding <code>is-a</code> so it includes the \"non-selectable\" codes.</p>",
        "id": 153866411,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1484192418
    },
    {
        "content": "<p>I'll have to debug the build to see waht is going on </p>",
        "id": 153866483,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1484253928
    }
]