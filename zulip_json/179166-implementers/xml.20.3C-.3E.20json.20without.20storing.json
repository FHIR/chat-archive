[
    {
        "content": "<p>Do any servers support an operation to simply convert a resource from XML to JSON without storing it?</p>",
        "id": 153908316,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1505414289
    },
    {
        "content": "<p>or vice versa?</p>",
        "id": 153908318,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1505414295
    },
    {
        "content": "<p>I don't think so, though it would be trivial</p>",
        "id": 153908321,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505414343
    },
    {
        "content": "<p>You could perform the conversion client side using the API?</p>",
        "id": 153908322,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1505414352
    },
    {
        "content": "<p>would be useful</p>",
        "id": 153908323,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1505414352
    },
    {
        "content": "<p>depends on if you're using a stack that has an API yet :)</p>",
        "id": 153908327,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1505414381
    },
    {
        "content": "<p>(ex: javascript)</p>",
        "id": 153908328,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1505414386
    },
    {
        "content": "<p>POST [base]/[type]/$convert  with Accept and Content-Type media types.. gets really interesting if the use version specific media types such as application/fhir.r3+xml  (discussed for the first time yesterday)</p>",
        "id": 153908329,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505414446
    },
    {
        "content": "<p>ehhh</p>",
        "id": 153908330,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1505414521
    },
    {
        "content": "<p>I don't know that I'd get too far into version specific media types</p>",
        "id": 153908331,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1505414529
    },
    {
        "content": "<p>suppose that could be up to the server</p>",
        "id": 153908332,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1505414559
    },
    {
        "content": "<p>on how far down that rabbit hole they want to support</p>",
        "id": 153908334,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1505414567
    },
    {
        "content": "<p>I just created #13888. Would that cover it?</p>",
        "id": 153908407,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1505417331
    },
    {
        "content": "<p>ok. live on <a href=\"http://test.fhir.org/r3/$convert\" target=\"_blank\" title=\"http://test.fhir.org/r3/$convert\">test.fhir.org/r3/$convert</a> - can convert formats (but not version conversion)</p>",
        "id": 153908408,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505417342
    },
    {
        "content": "<p>Discussions on SMART are too interesting to do this on Vonk during the session :-)</p>",
        "id": 153908409,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1505417401
    },
    {
        "content": "<blockquote>\n<p>ok. live on <a href=\"http://test.fhir.org/r3/$convert\" target=\"_blank\" title=\"http://test.fhir.org/r3/$convert\">test.fhir.org/r3/$convert</a> - can convert formats (but not version conversion)</p>\n</blockquote>\n<p>Grahame - I think you're a bit too fast - $convert is too generic and you'll surely end up needing the same name for other kinds of conversions. My GF calls it $convert-format.</p>",
        "id": 153908414,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1505417583
    },
    {
        "content": "<p>[I am guess you can implement that change even quicker] ;-)</p>",
        "id": 153908416,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1505417596
    },
    {
        "content": "<p>Tried to hit /$convert on your test server...</p>",
        "id": 153908426,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1505421116
    },
    {
        "content": "<p>Gives errors.thought I would look at the OperationDefinnition, but I don't find fso-convert anywhere</p>",
        "id": 153908427,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1505421132
    },
    {
        "content": "<p>nm, think I got it</p>",
        "id": 153908428,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1505421155
    },
    {
        "content": "<p>but, fso-convert still isn't found on the server</p>",
        "id": 153908429,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1505421162
    },
    {
        "content": "<p>fyi</p>",
        "id": 153908430,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1505421165
    },
    {
        "content": "<p>+1 for $convert-format</p>",
        "id": 153908432,
        "sender_full_name": "Reuben Daniels",
        "timestamp": 1505421366
    },
    {
        "content": "<p>hah who says it's too generic? I'm intending to see it used for more than just converting format</p>",
        "id": 153908487,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505423402
    },
    {
        "content": "<p>not that I mind if we change the name</p>",
        "id": 153908488,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505423419
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span> what errors?</p>",
        "id": 153908489,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505423446
    },
    {
        "content": "<blockquote>\n<p>hah who says it's too generic? I'm intending to see it used for more than just converting format</p>\n</blockquote>\n<p>I think an operation should do 1 thing, and do that well.  If we do all kinds of conversions (probably more involved than just the format), you'd run the risk that it gets implemented less since it will become more difficult to implement it....  CapabilityStatement has the power to express that you do or don't a function in its entirety, not whether you partially implement it... so I'd be cautious....</p>",
        "id": 153908510,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1505423753
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span> <a href=\"https://fhir-formats.github.io\" target=\"_blank\" title=\"https://fhir-formats.github.io\">https://fhir-formats.github.io</a> runs client-side in the browser</p>",
        "id": 153908706,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1505458499
    },
    {
        "content": "<p>If there's interest I can clean it up into a library</p>",
        "id": 153908707,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1505458537
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191363\">@Vadim Peretokin</span> , I can't seem to get it to work. I also don't see any downloads. Not sure I should rip off the code from the site, even if I could get it to work.</p>",
        "id": 153908849,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1505634533
    },
    {
        "content": "<p>well, how many transformations might there be?</p>",
        "id": 153909130,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505857782
    },
    {
        "content": "<p>here's another kind:</p>",
        "id": 153909131,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505857786
    },
    {
        "content": "<p><a href=\"https://motorcycleguy.blogspot.com.au/2017/09/comparing-dynamically-generated.html\" target=\"_blank\" title=\"https://motorcycleguy.blogspot.com.au/2017/09/comparing-dynamically-generated.html\">https://motorcycleguy.blogspot.com.au/2017/09/comparing-dynamically-generated.html</a></p>",
        "id": 153909132,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505857786
    },
    {
        "content": "<p>that would be generally useful for implementers if that was implemented well</p>",
        "id": 153909133,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505857800
    },
    {
        "content": "<p>another kind of transformation is trading between different coding systems, and codes on different elements</p>",
        "id": 153909134,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505857828
    },
    {
        "content": "<p>The Qvera Interface Engine includes the ability to convert FHIR XML &lt;-&gt; FHIR JSON without storing the FHIR Resource on a FHIR server and without using any type of schema or schematron validation.</p>\n<p>This is accomplished with a simple function call as follows:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">var</span> <span class=\"nx\">xmlMessage</span> <span class=\"o\">=</span> <span class=\"nx\">qie</span><span class=\"p\">.</span><span class=\"nx\">convertFHIRJSONtoXML</span><span class=\"p\">(</span><span class=\"nx\">jsonMessage</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>or to convert it the other way:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kd\">var</span> <span class=\"nx\">jsonMessage</span> <span class=\"o\">=</span> <span class=\"nx\">qie</span><span class=\"p\">.</span><span class=\"nx\">convertFHIRXMLtoJSON</span><span class=\"p\">(</span><span class=\"nx\">xmlMessage</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>An example FHIR Patient Resource as JSON:<br>\n<a href=\"/user_uploads/10155/BPLW51lvdt3QOVK0TZJtanCS/FHIR-JSON.png\" target=\"_blank\" title=\"FHIR-JSON.png\">FHIR-JSON.png</a> </p>\n<p>converted to XML:<br>\n<a href=\"/user_uploads/10155/biQn4Va1ENdpL4OAITG3oQW9/FHIR-XML.png\" target=\"_blank\" title=\"FHIR-XML.png\">FHIR-XML.png</a> </p>\n<p>Since this conversion is done without schema or schematron validation or knowledge, you will notice the &lt;!-- JSON array --&gt; and &lt;!-- JSON primitive --&gt; XML comments included in the XML version of the FHIR Patient resource.  These hints are added when converting from JSON to XML so that the interface engine knows to use JSON arrays and primitive values when converting back to JSON.  This means that if you have an existing XML FHIR Resource, you will need to decorate it with the correct hints in order to be able to convert it to a valid JSON FHIR Resource.  If you start with JSON, however, these are added for you.</p>\n<p>The Qvera Interface Engine is an enterprise grade integration engine used by thousands of healthcare organizations to achieve interoperability success.  Qvera offers a free version of the Qvera Interface Engine that can be used to solve low volume interfacing needs.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/BPLW51lvdt3QOVK0TZJtanCS/FHIR-JSON.png\" target=\"_blank\" title=\"FHIR-JSON.png\"><img src=\"/user_uploads/10155/BPLW51lvdt3QOVK0TZJtanCS/FHIR-JSON.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/10155/biQn4Va1ENdpL4OAITG3oQW9/FHIR-XML.png\" target=\"_blank\" title=\"FHIR-XML.png\"><img src=\"/user_uploads/10155/biQn4Va1ENdpL4OAITG3oQW9/FHIR-XML.png\"></a></div>",
        "id": 153909392,
        "sender_full_name": "Ron Shapiro",
        "timestamp": 1505930908
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span> it's for STU3, maybe that is the problem?</p>",
        "id": 153910175,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1506322257
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191485\">@Ron Shapiro</span> , this is good information. Thank you! In my case, I was trying to convert JSON to XML, but it wasn't working. I'll give it another try shortly.</p>",
        "id": 153910526,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1506362220
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191363\">@Vadim Peretokin</span> , I assume you mean that the website is based on STU3... STU3 resources is what I was attempting to convert. Even tried with just an example resource from <a href=\"http://build.fhir.org\" target=\"_blank\" title=\"http://build.fhir.org\">build.fhir.org</a>. When I pasted the resource into the left, it did nothing to the right.</p>",
        "id": 153910527,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1506362280
    },
    {
        "content": "<p>Although I may have just figured my problem out... I think I was pasting JSON on the left, not the right.</p>",
        "id": 153910528,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1506362373
    },
    {
        "content": "<p>Will play with it more and see what I come up with</p>",
        "id": 153910529,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1506362376
    },
    {
        "content": "<p>FYI - If anyone wants to try this on another server, I've implemented the $convert-format operation (experimental) in the WildFHIR server (<a href=\"http://wildfhir.aegis.net/fhir3-0-1\" target=\"_blank\" title=\"http://wildfhir.aegis.net/fhir3-0-1\">http://wildfhir.aegis.net/fhir3-0-1</a>). As this is purely experimental; i.e. no formal OperationDefinition yet, this is how it works:</p>\n<p>Request: POST <a href=\"http://wildfhir.aegis.net/fhir3-0-1/$convert-format\" target=\"_blank\" title=\"http://wildfhir.aegis.net/fhir3-0-1/$convert-format\">http://wildfhir.aegis.net/fhir3-0-1/$convert-format</a><br>\n  Headers:<br>\n  Accept [FHIR mime-type TO]<br>\n  Content-Type [FHIR mime-type FROM]<br>\n  Body:<br>\n  [FHIR resource instance in FHIR mime-type FROM format]</p>\n<p>Response:<br>\n  Status HTTP1.1 200 OK<br>\n  Headers:<br>\n  Content-Type [FHIR mime-type TO]<br>\n  Body:<br>\n  [Converted FHIR resource instance in mime-type TO format]</p>\n<p>If the conversion fails for any reason, the response will return a 4xx status code and an OperationOutcome.</p>",
        "id": 153910553,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1506374764
    },
    {
        "content": "<blockquote>\n<p>Do any servers support an operation to simply convert a resource from XML to JSON without storing it?</p>\n</blockquote>\n<p>If you're building in Node.js, the <code>fhir</code> npm package supports these operations natively, with <code>.jsonToXml()</code> and <code>.xmlToJson()</code> functions.<br>\n<a href=\"https://www.npmjs.com/package/fhir\" target=\"_blank\" title=\"https://www.npmjs.com/package/fhir\">https://www.npmjs.com/package/fhir</a><br>\n<a href=\"http://lantanagroup.github.io/FHIR.js/Fhir.html\" target=\"_blank\" title=\"http://lantanagroup.github.io/FHIR.js/Fhir.html\">http://lantanagroup.github.io/FHIR.js/Fhir.html</a></p>\n<p>Only issue with the above library is that the underlying library runs best on Mac/Linux, and one of it's dependencies (xml2js) needs a C compiler that's difficult to find on Windows.</p>",
        "id": 153913392,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1507673551
    }
]