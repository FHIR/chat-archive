[
    {
        "content": "<p>Quick question for the group about <a href=\"https://www.hl7.org/fhir/search.html#modifiers\">modifiers in searches</a> - do folks percent encode separators between search parameters and modifiers in search query strings (e.g. <code>?gender%3Amissing=true</code>) or use <code>:</code> the reserve character (e.g. <code>?gender:missing=true</code>)?</p>\n<p>The <a href=\"https://www.hl7.org/fhir/search.html#escaping\">escaping section</a> mentions percent encoding should be treated equivalently  as the unencoded version, but I'm not sure if that applies to this case as <code>:</code> has a special meaning. If <code>%3A</code> and <code>:</code> are treated equivalently, then how would a server differentiate between search parameter of <code>gender:missing</code> with no modifiers versus parameter of <code>gender</code> and modifier of <code>missing</code>? (I don't think there's any search parameters with <code>:</code> in it today, but I don't believe there's a restriction against it)</p>",
        "id": 201219181,
        "sender_full_name": "Weiyu Zhang",
        "timestamp": 1592442547
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span></p>",
        "id": 201220418,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1592444311
    },
    {
        "content": "<p>It seems to me like we should explicitly disallow <code>:</code> from search parameter names -- and it appears that we do: <a href=\"http://build.fhir.org/searchparameter-definitions.html#SearchParameter.name\">http://build.fhir.org/searchparameter-definitions.html#SearchParameter.name</a></p>",
        "id": 201221241,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1592445554
    },
    {
        "content": "<p>Given our requirement of</p>\n<div class=\"codehilite\"><pre><span></span><code>name.matches(&#39;[A-Z]([A-Za-z0-9_]){0,254}&#39;)\n</code></pre></div>\n\n\n<p>This seems safe; am I missing something?</p>",
        "id": 201221250,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1592445587
    },
    {
        "content": "<p>It's not about the names.  We <em>do</em> use \":\" to separate names from qualifiers.  The question is whether the separator needs to be escaped</p>",
        "id": 201222485,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1592447382
    },
    {
        "content": "<p>Escaped in what sense? The URL parameters need to be URL-encoded, which, AFAIK, does not require, but allows the use of %3A to represent :</p>\n<p>The FHIR spec is explicit that %3A is equivalent to :</p>\n<p>The other sense of \"escape\" is the use of \\ as in \\: to enable the use of : in a name. Based on the rules for names, : is not allowed in a name do no escaping in this sense is needed.</p>",
        "id": 201224561,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1592450337
    },
    {
        "content": "<p>Actually, after checking, \":\" is required to be URL encoded, so a proper URL parameters string will have it as %3A. Still, this is outside the FHIR spec, as a properly encoded URL is expected.</p>",
        "id": 201224956,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1592450894
    },
    {
        "content": "<p>Agreed -- the only thing that seemed like a question to me was whether there could be ambiguity in the search parameter names, and we prohibit this already.</p>",
        "id": 201267322,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1592486984
    },
    {
        "content": "<p>Got it - this was exactly what I was looking for. Thanks everyone!</p>",
        "id": 201341445,
        "sender_full_name": "Weiyu Zhang",
        "timestamp": 1592526168
    }
]