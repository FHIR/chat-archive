[
    {
        "content": "<p>Are batches with interdependencies considered non-conformant as a whole or does this refer to the individual operations within a batch?<br>\nIt's not clear if a dependency causes the batch to not process and return a 4xx or 5xx, or return a 200 with internal errors on operations with dependencies.<br>\n<a href=\"https://www.hl7.org/fhir/http.html#brules\" target=\"_blank\" title=\"https://www.hl7.org/fhir/http.html#brules\">https://www.hl7.org/fhir/http.html#brules</a></p>",
        "id": 170488762,
        "sender_full_name": "Eero Kelly",
        "timestamp": 1562704886
    },
    {
        "content": "<p>depends. what happens when the server processes the operations one at a time?</p>",
        "id": 170586924,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1562799407
    },
    {
        "content": "<p>as if you submitted them independently</p>",
        "id": 170586937,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1562799423
    },
    {
        "content": "<p>some interdependencies would work out ok, but others would not</p>",
        "id": 170586950,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1562799434
    },
    {
        "content": "<p>That seems to go against \"For a batch, there SHALL be no interdependencies between the different entries in the Bundle that cause change on the server.\" It sounds like any interdependencies are not okay.</p>\n<p>For example, say a resource is created and updated in the same batch, we fail them both internally because \"The success or failure of one change SHOULD not alter the success or failure or resulting content of another change.\" But in doing so, we're failing one change based on another change, which itself seems to go against the rule. It looks like the best option would be to fail processing the bundle as a whole for being a bad batch for having the interdependencies in the first place.</p>",
        "id": 170592656,
        "sender_full_name": "Eero Kelly",
        "timestamp": 1562805585
    },
    {
        "content": "<p>well, I guess we could be clearer in the wording there - we're really saying that the kind of interdependencies that a transaction caters for aren't supported. But you could post a resource that references another, and then put the other resource ... that could be descibred as an 'interdepedency' but isn't in the same sense</p>",
        "id": 170627066,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1562847547
    },
    {
        "content": "<p>I thought batch entries could be processed out of order or in parallel?</p>",
        "id": 170641767,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1562857515
    },
    {
        "content": "<p>I was expecting the difference between Transaction and Batch had more to do with success than to do with what is allowed to be placed into them. That is to say that a Transaction must succeeded totally or fail totally; where as Batch is allowed to partially succeed.   Seems the interdependencies within should be just as complex or simple. The processing flow is defined the same for both.</p>",
        "id": 170648279,
        "sender_full_name": "John Moehrke",
        "timestamp": 1562862151
    },
    {
        "content": "<p>the interdependencies depend on the integrity</p>",
        "id": 170668966,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1562876669
    },
    {
        "content": "<p>Does Batch presume in-order sequential processing <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>?</p>",
        "id": 170731278,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1562945383
    },
    {
        "content": "<p>This from the spec in the Batch section <a href=\"http://build.fhir.org/http.html#brules\" target=\"_blank\" title=\"http://build.fhir.org/http.html#brules\">http://build.fhir.org/http.html#brules</a><br>\n \" Note that it is considered that servers execute the batch in the same order as that specified below for transactions, though the order of execution should not matter given the previous rule\"</p>",
        "id": 170741522,
        "sender_full_name": "John Moehrke",
        "timestamp": 1562953603
    },
    {
        "content": "<p>If order shouldn't matter, then referencing something created in the  same batch sounds  like an error.</p>",
        "id": 170809653,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1563061131
    },
    {
        "content": "<p>The transaction order also puts all reads after all writes. Does that mean that in both cases (batch and transaction) all reads see all writes? At least that would mean that the order of execution for reads and writes does matter.</p>",
        "id": 170875730,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1563181706
    },
    {
        "content": "<blockquote>\n<p>Note that it is considered that servers execute the batch in the same order as that specified below for transactions</p>\n</blockquote>\n<p>I don't remember writing that, and that's not how my implementation works</p>",
        "id": 171807235,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564172545
    }
]