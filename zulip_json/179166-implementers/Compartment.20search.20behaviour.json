[
    {
        "content": "<div class=\"codehilite\"><pre><span></span>GET [base]/Patient/333/Condition\nGET [base]/Condition?patient=333\n</pre></div>\n\n\n<p>Where patient 333 is not found on the FHIR server, the two requests above will return an empty bundle, as per  <a href=\"https://www.hl7.org/fhir/compartmentdefinition.html#use\" target=\"_blank\" title=\"https://www.hl7.org/fhir/compartmentdefinition.html#use\">https://www.hl7.org/fhir/compartmentdefinition.html#use</a>.</p>\n<p>I have two questions regarding this:</p>\n<p>1.The first request's behaviour (the compartment based search) seems unintuitive since requesting a root of the compartment based search URL would return a 404 if patient 333 was not found.</p>\n<p>I.e. \"intuitively\" i would expect these two requests to behave in the same way if patient 333 was not found:</p>\n<div class=\"codehilite\"><pre><span></span>GET [base]/Patient/333\nGET [base]/Patient/333/Condition\n</pre></div>\n\n\n<p>Is there something I'm missing as to why the compartment based search returns an empty bundle when the patient is not found?</p>\n<ol start=\"2\">\n<li>The specification goes on to say:</li>\n</ol>\n<blockquote>\n<p>Some systems will include an operation outcome warning that there is no matching patient.</p>\n</blockquote>\n<p>Does this mean an OperationOutcome  resource return within the (empty) Bundle response?</p>",
        "id": 189100245,
        "sender_full_name": "Jonny Rylands",
        "timestamp": 1582711505
    },
    {
        "content": "<p>You cannot expect the same service is hosting both Patient and Condition</p>",
        "id": 189108964,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1582719602
    },
    {
        "content": "<p>If Condition and Patient is hosted on two different FHIR servers, you cannot traverse both resources on both servers</p>",
        "id": 189109013,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1582719674
    },
    {
        "content": "<p>you can however assume that (given some assumptions regarding referential integrity) that the server hosting Condition is able to find Conditions which have a reference to Patient</p>",
        "id": 189109138,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1582719776
    },
    {
        "content": "<p>Under the covers, the first URL is treated just like the second.  It's still a search, even though the URL isn't structured like one.</p>",
        "id": 189130393,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582734425
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> is that required by the spec?</p>",
        "id": 189140012,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1582740215
    },
    {
        "content": "<p>Because im pretty sure that wont hold in a sharded microservice setup</p>",
        "id": 189140114,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1582740270
    },
    {
        "content": "<p>The spec is pretty clear: <code>The outcome of a compartment search is the same as the equivalent normal search. For example, both these searches return the same outcome if there is no patient 333:\n  GET [base]/Patient/333/Condition\n  GET [base]/Condition?patient=333</code></p>",
        "id": 189140433,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582740458
    },
    {
        "content": "<p>While it may be 'semantically  equivalent', it is not 'syntactically equivalent' - a server only hosting the Patient resource would probably fail on <code>GET [base]/Patient/333/Condition</code> if it doesn't host the Condition resource - whereas a server hosting the Condition resource with stored references to patient resources would probably support <code>GET [base]/Condition?patient=333</code></p>",
        "id": 189196337,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1582793923
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span>  <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> FYI - in that case the HAPI implementation does not comply with compartments search.<br>\nwhile <br>\n<code>http://hapi.fhir.org/baseDstu3/Patient/2684442/Appointment</code>does not work, <br>\n<code>http://hapi.fhir.org/baseDstu3/Appointment?patient=Patient/2684442</code> does work</p>",
        "id": 189201120,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1582798476
    },
    {
        "content": "<p>Yup, that first syntax isn't currently supported in HAPI, although it is valid FHIR.</p>",
        "id": 189202597,
        "sender_full_name": "James Agnew",
        "timestamp": 1582799969
    },
    {
        "content": "<p>OK thanks all for your responses.</p>",
        "id": 189257000,
        "sender_full_name": "Jonny Rylands",
        "timestamp": 1582837606
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179166-implementers/topic/Compartment.20search.20behaviour/near/189140433\" title=\"#narrow/stream/179166-implementers/topic/Compartment.20search.20behaviour/near/189140433\">said</a>:</p>\n<blockquote>\n<p>The spec is pretty clear: <code>The outcome of a compartment search is the same as the equivalent normal search. For example, both these searches return the same outcome if there is no patient 333:\n  GET [base]/Patient/333/Condition\n  GET [base]/Condition?patient=333</code></p>\n</blockquote>\n<p>What constitutes a <code>normal search</code>? Is that defined anywhere? If not, I would avoid such term as <code>normal</code></p>",
        "id": 189261702,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1582840739
    },
    {
        "content": "<p>I just meant one not using the compartment syntax</p>",
        "id": 189267266,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582844769
    },
    {
        "content": "<p>Still - the term <code>normal</code>is ambiguous and context dependent.</p>",
        "id": 189297300,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1582884429
    },
    {
        "content": "<p>Question on compartment searches.  Can I search across all resources in a defined compartment with search parameters valid for all resources?<br>\nLike GET [base]/Patient/[id]?parameter(s)  Is this Valid?   I didn't see anything in the spec that would make it invalid.<br>\nSo a search like this might be useful:  Get [base]/Patient/[id]?_lastUpdated=ge2020-10-30 <br>\nTo get all patient related resources updated recently.</p>",
        "id": 215103143,
        "sender_full_name": "Dag Roppe",
        "timestamp": 1604068865
    },
    {
        "content": "<p>We haven't defined that that's allowed, though we haven't prohibited it either.  If it's functionality you'd like be explicitly supported, you could submit a change request</p>",
        "id": 215110582,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1604071987
    }
]