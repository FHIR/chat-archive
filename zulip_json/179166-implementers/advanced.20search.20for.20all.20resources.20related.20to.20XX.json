[
    {
        "content": "<p>Is it possible (or is something in the works) to do a search for anything that references a specific resource? I've taken a look at a global _search, but that would require me listing out all search parameters of type Reference in the query. I've also looked at GraphDefinition... not even sure how a server would search based on a GraphDefinition. Just wondering what direction I should start heading down, if any is even possible.</p>",
        "id": 184785424,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1578107847
    },
    {
        "content": "<p>It would mean the server would need to be able to index any arbitrary reference in any extension wherever it appeared.  And even that would only get references on that specific server.  I don't believe there are any current plans to define something like this...</p>",
        "id": 184785588,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1578108114
    },
    {
        "content": "<p>Revinclude * ?</p>",
        "id": 184787110,
        "sender_full_name": "Eric Haas",
        "timestamp": 1578111135
    },
    {
        "content": "<p>We can come up with a syntax.  The question is whether it's reasonable for implementers to index that way.</p>",
        "id": 184808254,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1578151567
    },
    {
        "content": "<p>Whether reasonable or not the logical search syntax would be:</p>\n<p><code>GET [base]/Observation?_id=xyz&amp;_revinclude=*:*</code></p>",
        "id": 184824915,
        "sender_full_name": "Eric Haas",
        "timestamp": 1578181729
    },
    {
        "content": "<p>which is not currently defined</p>",
        "id": 184824927,
        "sender_full_name": "Eric Haas",
        "timestamp": 1578181745
    },
    {
        "content": "<p>I'm inclined towards an extended operation on Resource, perhaps $references-to. It would be like a search in that it would return a searchset and support pagination.</p>\n<p>The major reason why I don't like revinclude for this is that a * in revinclude conceptually means \"all search parameters\" -- but not all references are necessarily the subject of a search parameter. As an implementer I don't expect to be using the search index internally for this operation.</p>",
        "id": 184825218,
        "sender_full_name": "Paul Church",
        "timestamp": 1578182308
    },
    {
        "content": "<p>How is $everything not sufficient?  <a href=\"https://www.hl7.org/fhir/operation-patient-everything.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/operation-patient-everything.html\">https://www.hl7.org/fhir/operation-patient-everything.html</a></p>",
        "id": 184862698,
        "sender_full_name": "John Moehrke",
        "timestamp": 1578254915
    },
    {
        "content": "<p>That gives you all data for a patient, not all references to a single resource.  Everything would provide orders of magnitude of unwanted data.  As well, it's possible that some referencing resources might not be part of the patient component.  In fact, the base resource might not be in the patient compartment either.</p>",
        "id": 184862841,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1578255169
    },
    {
        "content": "<p>so the desire is all resources that have a pointer to XYZ resource? That is _revinclude. Or is there a desire for both pointing TO and FROM?</p>",
        "id": 184867193,
        "sender_full_name": "John Moehrke",
        "timestamp": 1578261895
    },
    {
        "content": "<p>_revinclude requires enumerating the specific relationship.  It doesn't (currently) allow returning resources regardless of the nature of the relationship.</p>",
        "id": 184868096,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1578263277
    },
    {
        "content": "<p>yeah, that sounds like better handled by an operation specifically designed for that high resource need.</p>",
        "id": 184868403,
        "sender_full_name": "John Moehrke",
        "timestamp": 1578263796
    },
    {
        "content": "<p>No reason for it to be resource-specific.  Key thing is it means indexing arbitrary extensions</p>",
        "id": 184869729,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1578266000
    },
    {
        "content": "<p>I am sorry. Can someone teach me how to use _revinclude?  I mean I want to search observations from a diagnosticReport resource which id is 62714. And I use \"<a href=\"http://xxx/hapi-fhir-sample/baseDstu3/Observation?_revinclude=DiagnosticReport:result:specialty=62714&amp;_pretty=true\" target=\"_blank\" title=\"http://xxx/hapi-fhir-sample/baseDstu3/Observation?_revinclude=DiagnosticReport:result:specialty=62714&amp;_pretty=true\">http://xxx/hapi-fhir-sample/baseDstu3/Observation?_revinclude=DiagnosticReport:result:specialty=62714&amp;_pretty=true</a>\". But it doesn't work.</p>",
        "id": 184888449,
        "sender_full_name": "xiao dingding",
        "timestamp": 1578300080
    },
    {
        "content": "<p>'specialty' is not a search paremeter for DiagnosticReport. You probably want category, see bottom of the page <a href=\"http://build.fhir.org/diagnosticreport.html\" target=\"_blank\" title=\"http://build.fhir.org/diagnosticreport.html\">http://build.fhir.org/diagnosticreport.html</a></p>",
        "id": 184892510,
        "sender_full_name": "René Spronk",
        "timestamp": 1578304754
    },
    {
        "content": "<p>(remember to always check the 'self' link in the response bundle to see which parameters the server has actually used/applied - if different from the ones supplied by you as the client this is a clear indication you used some non-existing/non-supported query parameter)</p>",
        "id": 184899051,
        "sender_full_name": "René Spronk",
        "timestamp": 1578311123
    }
]