[
    {
        "content": "<p>In STU3 is the following legal:</p>\n<p><code>GET /Slot?_id=1&amp;_include=Slot:schedule:Schedule&amp;_include:recurse=Schedule:actor:Location&amp;_include:recurse=Location:managingOrganization:Organization</code></p>\n<p>To do the following:</p>\n<p>Return Slot with id=1<br>\n&amp; its associated Schedule<br>\n&amp; any Location actors in the Schedule<br>\n&amp; the managing Organizations of the Location actors</p>\n<p>I'm particularly interested if you can use _include:recurse on an resource which itself was included with _include:recurse.</p>\n<p>I can't see an example/question with an _include:recurse operating on the output of another _include:recurse.</p>\n<p>Thanks.</p>",
        "id": 154009551,
        "sender_full_name": "Jonny Rylands",
        "timestamp": 1539721976
    },
    {
        "content": "<p>I won't speak to the recurse question, but I think you want <code>_id=1</code> rather than <code>id=1</code></p>",
        "id": 154009552,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539722505
    },
    {
        "content": "<p>Updated :-)</p>",
        "id": 154009555,
        "sender_full_name": "Jonny Rylands",
        "timestamp": 1539723360
    },
    {
        "content": "<p>I believe it is legal. The recursive examples from <a href=\"http://hl7.org/fhir/STU3/search.html#include\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/search.html#include\">http://hl7.org/fhir/STU3/search.html#include</a> indicate it's possible.</p>\n<p>In R4, they changed the modifier to :iterate (i.e. <a href=\"http://build.fhir.org/search.html#include\" target=\"_blank\" title=\"http://build.fhir.org/search.html#include\">http://build.fhir.org/search.html#include</a>) but I'm not sure if the semantics are still the same as :recurse</p>",
        "id": 154009671,
        "sender_full_name": "Michael Calderero",
        "timestamp": 1539749256
    },
    {
        "content": "<p>you're iteratively expanding the result set (a set of resources), this seems like a good example thereof.</p>",
        "id": 154009717,
        "sender_full_name": "Ren√© Spronk",
        "timestamp": 1539760751
    },
    {
        "content": "<p>Thanks for your responses.</p>",
        "id": 154012312,
        "sender_full_name": "Jonny Rylands",
        "timestamp": 1540512707
    }
]