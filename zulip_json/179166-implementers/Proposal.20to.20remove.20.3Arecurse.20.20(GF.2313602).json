[
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13602\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13602\">GF#13602</a> relates to the definition of the :recurse modifier on the _include parameter. After discussion on the FHIR-I call about this, we would like to propose to remove the :recurse modifier and just make this the behavior. </p>\n<p>our resasoning is that this is something we have observed people to get tripped up by - even the definition is subtle. People just expect _include to work 'recursively' (though that possibly isn't the best word). And all of the potentially circular cascades where this is relevant (Organization.partOf, Observation.related, ValueSet.import, *.basedOn) are self-limiting (though you could imagine organizations that feel infinitely deep!). </p>\n<p>so it seems to us that this more complexity than justified; let's just toast the modifier and make it the default behavior. We'll do that if no one objects.</p>",
        "id": 153924353,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513025435
    },
    {
        "content": "<p>Note: this would be a breaking change to a FMM 5 artefact, so we'll need to do more consultation than just here.</p>",
        "id": 153924354,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513025488
    },
    {
        "content": "<p>To me it looks like :recurse is a way to \"Define a graph of resources to return in a query\", without the right semantics to ensure consistent behaviour.<br>\ne.g.: What if I ask for:</p>\n<div class=\"codehilite\"><pre><span></span>[base]/MedicationRequest?_include=requester&amp;_include=performer&amp;_include:recurse=Patient:general-practitioner.\n</pre></div>\n\n\n<p>Do I ask to include the GP's of the requester, the performer or both?<br>\nAnd does this implicitly limit both includes to Patient as well, like below, or do you just request the GP if the requester/performer happens to be a Patient?</p>\n<div class=\"codehilite\"><pre><span></span>[base]/MedicationRequest?_include=requester:Patient&amp;_include=performer:Patient&amp;_include:recurse=Patient:general-practitioner.\n</pre></div>\n\n\n<p>And as for the 'recursive' example in the spec:</p>\n<div class=\"codehilite\"><pre><span></span>[base]/Observation?_include:recurse=Observation:related-target&amp;criteria...\n</pre></div>\n\n\n<p>where \"The second search asks for the _include based on related parameter to be executed recursively\" - but to what depth then? And how am I to determine which _include:recurse is meant to be really recursive and which just to _include one link further down the chain?</p>\n<p>I deliberately chose the quote in the first sentence because it comes from GraphDefinition. My take would be: eliminate ':recurse' and specify a GraphDefinition if you want similar functionality.</p>",
        "id": 153925860,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1513588160
    },
    {
        "content": "<p>Apart from that I would love to hear experiences from people using :recurse this in real world scenarios.</p>",
        "id": 153925861,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1513588212
    },
    {
        "content": "<p>\"specify a GraphDefinition\" - that's a big thing to do if you \"just want the common simple case\".   Question is maybe: is there a common, simple case?</p>",
        "id": 153925928,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1513606076
    }
]