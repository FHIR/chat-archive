[
    {
        "content": "<p>If you are updating a resource using a transaction containing the updated resource and a provenance resource that refers to it, how can you ensure that Provenance.target will refer to the newly updated version on the server?</p>",
        "id": 170922132,
        "sender_full_name": "David Hay",
        "timestamp": 1563217797
    },
    {
        "content": "<p>Good question.  In a transaction, you can have the id resolve to a newly created id, but we haven't talked about how to have a reference resolve to a specific version...</p>",
        "id": 170928066,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1563221993
    },
    {
        "content": "<p>I'm having thee same problem <span class=\"user-mention\" data-user-id=\"191321\">@David Hay</span>  mentioned here. Just looking for more context, does anyone have a workaround or is it something that could be added to the standard?</p>",
        "id": 185715506,
        "sender_full_name": "Domenico Corapi",
        "timestamp": 1579106082
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 185716846,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1579106901
    },
    {
        "content": "<p>have you looked at the X-Provenance header?</p>",
        "id": 185880333,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1579225225
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I missed that. It looks like the the docs are not prescriptive on how target is populated so it could be a good place to enforce some implementation specific behaviour and link to a specific version.</p>",
        "id": 185944035,
        "sender_full_name": "Domenico Corapi",
        "timestamp": 1579286160
    },
    {
        "content": "<p>I looked at the documenation for Provenance <a href=\"https://www.hl7.org/fhir/provenance.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/provenance.html\">https://www.hl7.org/fhir/provenance.html</a>. <br>\n=================<br>\n\"For new resources that need to have a corresponding Provenance resource, the version-specific reference is often not knowable until after the target resource has been updated. This can create an integrity problem for the system - what if the Provenance resource cannot be created after the target resource has been updated? To avoid any such integrity problems, the target resource and the Provenance resources should be submitted as a pair using a transaction.<br>\n6.3.4.2.1 HTTP Header</p>\n<p>The custom header X-Provenance to provide a provenance resource when performing PUT or POST operations using the RESTful interface:</p>\n<p>POST [base]/Observation<br>\nContent-Type: application/fhir+?<br>\nX-Provenance: { \"resourceType\": \"Provenance\", \"location\": { \"reference\": \"Location/1\" },\" agent\" ... } \"<br>\n======================</p>\n<p>I also looked at the examples but didn't see an example for the above usecase. <br>\nI wanted to do this in atomic way i.e.<br>\n transaction bundle contains the following:<br>\n /resource 1  <br>\n/resource 2 <br>\n/provenance<br>\nI am not sure how should I use this X-Provenance?. Should I pass this when I post my transaction /bundle ?</p>\n<p>Can you please kindly share me full \"transaction bundle\" example or point me to a link ?. </p>\n<p>thanks for your help</p>",
        "id": 186128762,
        "sender_full_name": "Nath",
        "timestamp": 1579549711
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"257980\">@Nath</span> the idea of the X-Provenance header is to have a provenance object that specifies everything except the targets. The server should create a transaction that adds references to the specific version of resource 1 and resource 2 being created in the same transaction.</p>\n<p>Another way to see it is as if your provenance header was added to a new bundle request, where the target is populated with references to Resource/id/_history/newversion for both resources. Unfortunately there is no way for you to know newversion in advance and dynamic references in a bundle/transaction do not support versions. So you'll have to implement ad hoc behaviour for the performance header. </p>\n<p>Just realised the  explanation is a bit convoluted, let me know if that's not clear, I can give it another go :)</p>",
        "id": 186181497,
        "sender_full_name": "Domenico Corapi",
        "timestamp": 1579612888
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"220674\">@Domenico Corapi</span>. Let me read and digest this and ask if I have further questions. appreciate your help. thanks.</p>",
        "id": 186193918,
        "sender_full_name": "Nath",
        "timestamp": 1579620701
    },
    {
        "content": "<p>I was dealing with something similar and one way I worked around this was utilizing the Transaction Response bundle from the Post of the Transaction Bundle to construct the Provenance Record then submit this in a transaction.  It does essentially double your  HTTP Calls to the server but would give you the version specific URLs for the Targets. </p>\n<p>The issue I did run into with implementing this behavior in the HAPI FHIR Server was that the JSON/XML Parsers remove the versions from the References in Provenance Target so I lose them anyway.</p>",
        "id": 186413180,
        "sender_full_name": "Larry Shields",
        "timestamp": 1579800624
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"220674\">@Domenico Corapi</span> . <br>\nI went thru' the specs for Provenance and I understand the limitation of provenance.target cannot have /resource/id/_history/&lt;newversion&gt;. So, I have to pass X-Provenance in the header. <br>\nMy question is how to implement this:</p>\n<p>I wanted to do this in atomic way i.e.<br>\ntransaction bundle contains the following:<br>\n/resource 1<br>\n/resource 2<br>\n/provenance </p>\n<p>after the bundle is posted to the server, I want the /provenance to have the versioned resources(i.e. /resource/1/_history/&lt;newversion&gt;, /resource/2/_history/&lt;newversion&gt;) in the target. </p>\n<p>So, my question is this:</p>\n<ol>\n<li>what should I pass in X-Provenance ?. (Please note that I am posting the /bundle)</li>\n</ol>\n<p>Could you please kindly explain this ?</p>",
        "id": 186507900,
        "sender_full_name": "Nath",
        "timestamp": 1579883680
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"200218\">@Larry Shields</span> . So, you had 2 transactions?. 1. create the resources with a txn bundle and get the txn response in a txn. 2. create another txn and using the values from response bundle construct /provenace ?. So, in this case, the creation of resources and proveance are not in the same txn right ?</p>",
        "id": 186508308,
        "sender_full_name": "Nath",
        "timestamp": 1579883939
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"257980\">@Nath</span> <br>\nYes that's correct.  I had two separate transactions.  One that contained the resources and then a second one that contained the Provenance resource with the version specific references in the Target.</p>",
        "id": 186508986,
        "sender_full_name": "Larry Shields",
        "timestamp": 1579884267
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"200218\">@Larry Shields</span> for clarifying. In my case, trying to them in a single txn. thanks.</p>",
        "id": 186514679,
        "sender_full_name": "Nath",
        "timestamp": 1579887492
    },
    {
        "content": "<p>reading the spec again to understand how to pass X-Provenance. Is it I just need to pass <br>\nX-Provenance : {resourceType: \"provenance\", agent : {...other related fields of provenance .. } }  ?</p>\n<p>Also, I saw this thread <a href=\"#narrow/stream/179166-implementers/topic/x-provenance.20header\" title=\"#narrow/stream/179166-implementers/topic/x-provenance.20header\">https://chat.fhir.org/#narrow/stream/179166-implementers/topic/x-provenance.20header</a> and it says the workaround \"And if you don't like it.. then don't use it.. the alternative is to do all Create using a Batch/Transaction with the Bundle holding the resource you want to create and the Provenance. This x-provenance header is just an alternative to the same thing.\".  </p>\n<p>So, this workaround does not work for versioned resources right ?.</p>",
        "id": 186534057,
        "sender_full_name": "Nath",
        "timestamp": 1579900030
    },
    {
        "content": "<p>I tried passing X-Provenance in header of the transaction-bundle. It didn't create Provenance resource. I was not sure which release this header was added . I was using R4.0.0 and upgraded to 4.0.1 but still not working. I manually created /provenance resource and that worked but not thru' X-Provenance. </p>\n<p>Can someone point me to an example how to pass would be of great help. thanks.<br>\n<span class=\"user-mention\" data-user-id=\"220674\">@Domenico Corapi</span></p>",
        "id": 186557298,
        "sender_full_name": "Nath",
        "timestamp": 1579927646
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"257980\">@Nath</span> , what server are you using? If you use HAPI, there's no support for the header I believe (it's in the standard, just not supported by the implementation). You will have to build a custom interceptor that handles it.</p>",
        "id": 186772029,
        "sender_full_name": "Domenico Corapi",
        "timestamp": 1580209328
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"220674\">@Domenico Corapi</span> thanks.</p>",
        "id": 186790430,
        "sender_full_name": "Nath",
        "timestamp": 1580223671
    }
]