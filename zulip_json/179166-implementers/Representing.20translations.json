[
    {
        "content": "<p>One of the things on my roadmap for R5 was to see if we could come up with an improved representation for translations. </p>\n<p>At present, we handle translations using the translation extension, which looks like this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;resourceType&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;StructureDefinition&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;description&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;this is some text in the primary language&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;_description&quot;</span> <span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;extension&quot;</span> <span class=\"p\">:</span> <span class=\"p\">[{</span>\n      <span class=\"nt\">&quot;extension&quot;</span> <span class=\"p\">:</span> <span class=\"p\">[{</span>\n        <span class=\"nt\">&quot;url&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;lang&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;valueCode&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;nl-NL&quot;</span>\n      <span class=\"p\">},</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;url&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;content&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;valueString&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;The same text in dutch&quot;</span>\n      <span class=\"p\">}],</span>\n      <span class=\"nt\">&quot;url&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;http://hl7.org/fhir/StructureDefinition/translation&quot;</span>\n    <span class=\"p\">}]</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>And in XML:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;StructureDefinition</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://hl7.org/fhir&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;description</span> <span class=\"na\">value=</span><span class=\"s\">&quot;this is some text in the primary language&quot;</span><span class=\"nt\">&gt;</span>\n   <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/translation&quot;</span> <span class=\"nt\">&gt;</span>\n     <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;lang&quot;</span><span class=\"nt\">&gt;</span>\n       <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;nl-NL&quot;</span><span class=\"nt\">/&gt;</span>\n     <span class=\"nt\">&lt;/extension&gt;</span>\n     <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;content&quot;</span><span class=\"nt\">&gt;</span>\n       <span class=\"nt\">&lt;valueString&gt;</span> value=&quot;The same text in dutch&quot;/&gt;\n     <span class=\"nt\">&lt;/extension&gt;</span>\n   <span class=\"nt\">&lt;/extension&gt;</span>\n  <span class=\"nt\">&lt;/description&gt;</span>\n<span class=\"nt\">&lt;/StructureDefinition&gt;</span>\n</pre></div>",
        "id": 187752061,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581239737
    },
    {
        "content": "<p>It's almost like we set out to make the wire format as obtuse as we could</p>",
        "id": 187752066,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581239761
    },
    {
        "content": "<p>so what if we said 'the translation extension is actually special, and we should do something special with it - as convenient as possible'. </p>\n<p>the densest representation I could imagine would be something like this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;resourceType&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;StructureDefinition&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;description&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;this is some text in the primary language&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;description:nl-NL&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;The same text in dutch&quot;</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>And in xml:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;StructureDefinition</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://hl7.org/fhir&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;description</span> <span class=\"na\">value=</span><span class=\"s\">&quot;this is some text in the primary language&quot;</span> <span class=\"na\">value:nl-NL=</span><span class=\"s\">&quot;The same text in dutch&quot;</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/StructureDefinition&gt;</span>\n</pre></div>",
        "id": 187752161,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581239900
    },
    {
        "content": "<p>that's pretty simple, but as much as I like that, there's no way to define that in schema, and plenty of implementers work using schema. So that would lead to something like this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;resourceType&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;StructureDefinition&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;description&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;this is some text in the primary language&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;description-translations&quot;</span> <span class=\"p\">:</span> <span class=\"p\">[{</span>\n    <span class=\"nt\">&quot;lang&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;nl-NL&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;text&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;The same text in dutch&quot;</span>\n  <span class=\"p\">}]</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>and this</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;StructureDefinition</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://hl7.org/fhir&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;description</span> <span class=\"na\">value=</span><span class=\"s\">&quot;this is some text in the primary language&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;translation</span> <span class=\"na\">xml:lang=</span><span class=\"s\">&quot;nl-NL&quot;</span> <span class=\"na\">value=</span><span class=\"s\">&quot;The same text in dutch&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;/description&gt;</span>\n<span class=\"nt\">&lt;/StructureDefinition&gt;</span>\n</pre></div>",
        "id": 187752169,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581239994
    },
    {
        "content": "<p>honestly, I think that that json is not as convenient as this:</p>",
        "id": 187752252,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581240131
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;resourceType&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;StructureDefinition&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;description&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;this is some text in the primary language&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;description-translations&quot;</span> <span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;nl-NL&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;The same text in dutch&quot;</span>\n  <span class=\"p\">}</span><span class=\"err\">]</span>\n<span class=\"p\">}</span>\n</pre></div>",
        "id": 187752253,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581240155
    },
    {
        "content": "<p>but I can't see how to do that with json schema. If anyone can, I'm all ears.</p>",
        "id": 187752258,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581240173
    },
    {
        "content": "<p>note that all this is predicated on the idea that this is a special representation for the extension, and the standard extension way of representing is still valid in the general case.</p>",
        "id": 187752263,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581240207
    },
    {
        "content": "<p>I talked to a few European implementers about this while in Sydney, and they believed that we should have a wider discussion about this</p>",
        "id": 187752304,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581240246
    },
    {
        "content": "<p>so opinions please</p>",
        "id": 187752317,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581240342
    },
    {
        "content": "<p>What about making it core in the string, code and markdown data types?</p>",
        "id": 187752668,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1581241145
    },
    {
        "content": "<p>Can you expand on that Rob?  What would it look like?</p>",
        "id": 187763570,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1581264138
    },
    {
        "content": "<p>That's a good question.  As I look further at what I suggested, unfortunately I don't see any way to do it, since the string, code and markdown data types which are the context of the translation extension are all primitive themselves.  I hesitate to even mention it (because it would have huge ramifications and is almost certainly impossible), but the only way that I can think of that it could be done would be to change these to complex types instead of primitive, and include a 0..* 'translation' element.  So, there goes that idea.  Maybe there's something else, but if so I haven't thought of it yet.</p>",
        "id": 187891305,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1581408912
    },
    {
        "content": "<p>If we are able to use one of Grahame's extension simplifications, I think that would be helpful.</p>",
        "id": 187891401,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1581409058
    },
    {
        "content": "<p>In the JSON-LD world, there's a compact syntax using <a href=\"https://json-ld.org/spec/REC/json-ld/20140116/#dfn-language-map\" target=\"_blank\" title=\"https://json-ld.org/spec/REC/json-ld/20140116/#dfn-language-map\">\"langauge maps\"</a></p>\n<div class=\"codehilite\"><pre><span></span>  &quot;occupation&quot;:  {\n    &quot;ja&quot;: &quot;忍者&quot;,\n    &quot;en&quot;: &quot;Ninja&quot;,\n    &quot;cs&quot;: &quot;Nindža&quot;\n  }\n</pre></div>\n\n\n<p>in addition to an expanded syntax, which uses repeated nested objects.</p>",
        "id": 187977631,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1581476070
    },
    {
        "content": "<p>we could do something like that, if only we decided we didn't care about json-schema</p>",
        "id": 187978860,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581478249
    },
    {
        "content": "<p>yes, that looks pretty nice - but I assume we do caree about json-schema and that precludes it?</p>",
        "id": 187982373,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1581484682
    },
    {
        "content": "<p>well, json-schema doesn't work too well, but we get a steady stream of implementers asking about it</p>",
        "id": 187982512,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581484917
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191660\">@Harold Solbrig</span> I'm interested if you can ask the json-ld community about the language maps feature above, and the apparent reality that json-schema can't describe it, and whether that's been a problem for anyone?</p>",
        "id": 187982555,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581484962
    },
    {
        "content": "<p>No need to ask -- it is built into JSON-LD 1.1. See: <a href=\"https://w3c.github.io/json-ld-syntax/#string-internationalization\" target=\"_blank\" title=\"https://w3c.github.io/json-ld-syntax/#string-internationalization\">https://w3c.github.io/json-ld-syntax/#string-internationalization</a></p>",
        "id": 189740961,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1583359656
    },
    {
        "content": "<p>I really wish we had not folded and done JSON primitives the way we do. It would give us so many more options. But <span class=\"user-mention\" data-user-id=\"191660\">@Harold Solbrig</span> that missed my actual question: json schema can't describe this. has it ever been a problem in the json-ld community?</p>",
        "id": 189763991,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583389954
    },
    {
        "content": "<p>I've spent a bit of time contemplating translations of IG:s for the last couple of months and am putting thoughts out here for anyone to read and/or ridicule. My main focus has been on producing the same IG in two different languages, english being one.</p>\n<p>When it comes to localisation of a profile or an IG there are 5 areas to handle;</p>\n<ol>\n<li>Text in \"html template\" can be handled fairly easily trough jekyll, not really an issue.</li>\n<li>Snippets produced by the publisher (Name, Flags, Card. Type...etc.). Seems the boilerplate for this is in place, just needs a tad of code that looks up translations.</li>\n<li>CodeSystems - Designations covers the needs just fine.</li>\n<li>Texts created by author of new profiles; Definition, short, note.</li>\n<li>Inherited texts from the FHIR specification. Now this one is a hassle. To manage this one either has to modify each and every element inherited or start by creating a full translation of the FHIR standard.</li>\n</ol>\n<p>This thread mainly covers points 3 and to some extent 4 so I'll focus on that part.<br>\nI believe that whatever approach is taken should take into account a couple of issues; possibility of \"outsourcing\" the actual translation work, enabling translation to inherited content, avoiding repetition to whatever amount is possible and keeping the translations a part of the new IG.</p>\n<p>By the outsourcing part I mean that the author of the profile might not be the person doing the translation. Translations will possibly be done by local translators and domain specialists. Handing over a set of profiles and letting them dig through/editing the snapshots might not be efficient and or doable at all.</p>\n<p>Handling inherited content means that translation data needs to be supplied from \"outside\" the inherited profile. The avoidance of repetitions also points to this.</p>\n<p>The way we have been handling this is a three part process. We wrote a rather simple nodejs application that parses through the profiles (including the snapshot), extracts a distinct list of the contents of relevant elements and writing to an external csv file containing three columns; string found, a list of paths for each occurrence containing which profile and which element, and an empty column for translation. This has then be sent to local specialists who add translation to the empty column. When the file is sent back we then do a replacement in the same way we did the extraction, copying the results to a new input folder.<br>\nAll in all the process has a few moving parts, but does the job pretty well. The translators get a concise list of terms to translate, we can discover new texts needing translation by diffing the output csv files from part one while changes inherited content are discovered through the diff since we use the contents as keys. (I'll try to make the translation application available and add some documentation for the workflow once it has matured a tad)</p>\n<p>To sum it up; Given free hands I myself would be looking at adding a list of translation maps keyed by language to the root of a SD instead of adding them on the content level. Would make extraction, translation and reinsertion of data a lot simpler and allow for adding translations for inherited data.</p>",
        "id": 190234924,
        "sender_full_name": "Pétur Valdimarsson",
        "timestamp": 1583880841
    },
    {
        "content": "<p>non-english and multi-language IGs is on the todo list for this year. We have plans to place to finish what we have started, to leverage the translation element, and to make it easier to produce multi-language IGs</p>\n<p>We discussed the format of the translation files, and pretty much thought the way you do about it, but didn't choose an actual format</p>",
        "id": 190244507,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583892050
    },
    {
        "content": "<p>the one issue we hadn't really discussed is translating inherited content. That's a huge amount of that, and we wouldnt want to 'to having any fo that done at a per-IG level when it could be done once per-relam</p>",
        "id": 190244528,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583892086
    },
    {
        "content": "<p>does this mean that we (HL7) would have somethig like a java resourcebundle where we can ask for translations?</p>",
        "id": 190251119,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1583903331
    },
    {
        "content": "<p>we're half through making that the case now - probably the next release of the validator will support german</p>",
        "id": 190251128,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583903396
    },
    {
        "content": "<p>see <a href=\"https://github.com/hapifhir/org.hl7.fhir.core/tree/master/org.hl7.fhir.validation/src/main/resources\" target=\"_blank\" title=\"https://github.com/hapifhir/org.hl7.fhir.core/tree/master/org.hl7.fhir.validation/src/main/resources\">https://github.com/hapifhir/org.hl7.fhir.core/tree/master/org.hl7.fhir.validation/src/main/resources</a></p>",
        "id": 190251171,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583903423
    },
    {
        "content": "<p>anyone can add other languages</p>",
        "id": 190251172,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583903433
    },
    {
        "content": "<p>the publisher will be next - but this is not the same thing as you were asking about</p>",
        "id": 190251173,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583903446
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  Sounds resonable.<br>\nFor the work forward, it is nice keep in mind that inherited content can come from more sources than just hl7. It's easy to end up in a situation where a dependency on us-core, sdc or something else might mean having to translate a whole third-party IG, instead of only relevant parts.</p>",
        "id": 190273852,
        "sender_full_name": "Pétur Valdimarsson",
        "timestamp": 1583928240
    },
    {
        "content": "<p>I'll keep that in mind</p>",
        "id": 190277512,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583931417
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179166-implementers/topic/Representing.20translations/near/190251172\" title=\"#narrow/stream/179166-implementers/topic/Representing.20translations/near/190251172\">said</a>:</p>\n<blockquote>\n<p>anyone can add other languages</p>\n</blockquote>\n<p>is this  task that affiliates could start (if they wish) or it is too early ?<br>\n(it is better to wait for future more stable versions)</p>",
        "id": 190279556,
        "sender_full_name": "Giorgio Cangioli",
        "timestamp": 1583932776
    },
    {
        "content": "<p>The content that's normative is relatively stable, though we'll be tweaking/improving language for clarity for years.</p>",
        "id": 190286885,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1583936909
    },
    {
        "content": "<p>i think what <span class=\"user-mention\" data-user-id=\"191415\">@Giorgio Cangioli</span> asked is when everyone can contribute translations to the validator. <br>\nThe state here: <a href=\"https://github.com/hapifhir/org.hl7.fhir.core/tree/master/org.hl7.fhir.validation/src/main/resources\" target=\"_blank\" title=\"https://github.com/hapifhir/org.hl7.fhir.core/tree/master/org.hl7.fhir.validation/src/main/resources\">https://github.com/hapifhir/org.hl7.fhir.core/tree/master/org.hl7.fhir.validation/src/main/resources</a> is stable, but there are more properties/terms to come (<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/pull/153\" target=\"_blank\" title=\"https://github.com/hapifhir/org.hl7.fhir.core/pull/153\">https://github.com/hapifhir/org.hl7.fhir.core/pull/153</a>).</p>",
        "id": 190291765,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1583939305
    },
    {
        "content": "<p>I would wait for after the Merge of the PR. Even after that there probably will be some refactoring, joining different redundant terms together.</p>",
        "id": 190291833,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1583939352
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span></p>",
        "id": 190292832,
        "sender_full_name": "Giorgio Cangioli",
        "timestamp": 1583939802
    },
    {
        "content": "<p>I would love to see a simpler way to represent language translations as suggested in this thread. The extension approach  makes the payload quite clunky.</p>\n<p>I'm working on HealthcareService, The other approach we're considering is making a different resource for the different translations ... we don't love that idea, but with some fancy identifier footwork we might be able to make it work. </p>\n<p>Is adding an extension to every element the generally preferred way to handle translating this type of content? (e.g., service name, description, etc...).</p>",
        "id": 211564224,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1601336199
    },
    {
        "content": "<p>yes. though there's not generally that much purely textual content in a resource.</p>",
        "id": 211564502,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1601336418
    },
    {
        "content": "<p>more generally.... I think that there wasn't that much interest in this approach. If you wanted to push it along, you could join the json schema google group and ask about the json-ld language maps feature above. I'd really like to have something like that, but I can't imagine how to describe it in json-schema and I think that's a killer for us</p>",
        "id": 211564683,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1601336602
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span> this thread</p>",
        "id": 213747648,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603089444
    },
    {
        "content": "<p>Hope this is the correct thread.  Question - Is it allowed, and does it make any sense to add translation extension to narrative?  I'm not sure the spec is completely clear on this.  Thanks in advance.</p>",
        "id": 234216255,
        "sender_full_name": "Douglas DeShazo",
        "timestamp": 1618255798
    },
    {
        "content": "<p>Certainly, that makes sense. See <a href=\"http://build.fhir.org/languages.html##lang\">http://build.fhir.org/languages.html##lang</a> for specific guidance on using multiple languages in a narrative block.</p>",
        "id": 234275786,
        "sender_full_name": "René Spronk",
        "timestamp": 1618296124
    },
    {
        "content": "<p>To go back to the issue raised at the start of this thread: translations (on any narrative) could be done in a more elegant/shorter way, but on the other hand the 'pain' associated with the normal extension mechanism doesn't seem large enough for the international audience for them to request/demand a specific/optimized solution to deal with translations. I'm guessing the number of solutions that support multiple languages is still relatively low. </p>\n<p>Time to speak up if you have implemented a multi lingual FHIR API, and if you'd like to see a better solution for the support of multiple languages in a FHIR resource.</p>",
        "id": 234277317,
        "sender_full_name": "René Spronk",
        "timestamp": 1618297177
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191372\">@René Spronk</span> Where we're having difficulty is whether the translation extension itself should be in the narrative or whether using div is the acceptable way:  <br>\n\"text\": {<br>\n                                                \"status\": \"generated\",<br>\n                                                \"div\": \"&lt;div xmlns=http://www.w3.org/1999/xhtml&gt;<br>\n                                                                &lt;p&gt;&lt;b&gt;Encounter&lt;/b&gt;&lt;/p&gt;<br>\n                                                                &lt;p&gt;&lt;b&gt;Patient&lt;/b&gt;: SMART, NANCY&lt;/p&gt;<br>\n                                                                &lt;p&gt;&lt;b&gt;Location&lt;/b&gt;: Model Hospital, MX Hospital, NU05, 102, A&lt;/p&gt;<br>\n                                                &lt;/div&gt;\"<br>\n                                                \"div\": \"&lt;div lang=\"sv\" xmlns=http://www.w3.org/1999/xhtml&gt;<br>\n                                                                &lt;p&gt;&lt;b&gt;Vårdkontakt&lt;/b&gt;&lt;/p&gt;<br>\n                                                                &lt;p&gt;&lt;b&gt;Patient&lt;/b&gt;: SMART, NANCY&lt;/p&gt;<br>\n                                                                &lt;p&gt;&lt;b&gt;Plats&lt;/b&gt;: Model Hospital, MX Hospital, NU05, 102, A&lt;/p&gt;<br>\n                                                &lt;/div&gt;\"<br>\n        },<br>\nHere, it's just div and the expected translation representation is not present like we might see within the body of the resource.</p>",
        "id": 234315088,
        "sender_full_name": "Douglas DeShazo",
        "timestamp": 1618316737
    },
    {
        "content": "<p>In narrative, this seems to be the recommended way: multiple divs, no usage of extensions.</p>",
        "id": 234334821,
        "sender_full_name": "René Spronk",
        "timestamp": 1618324037
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191372\">René Spronk</span> <a href=\"#narrow/stream/179166-implementers/topic/Representing.20translations/near/234277317\">said</a>:</p>\n<blockquote>\n<p>To go back to the issue raised at the start of this thread: translations (on any narrative) could be done in a more elegant/shorter way, but on the other hand the 'pain' associated with the normal extension mechanism doesn't seem large enough for the international audience for them to request/demand a specific/optimized solution to deal with translations. I'm guessing the number of solutions that support multiple languages is still relatively low. </p>\n<p>Time to speak up if you have implemented a multi lingual FHIR API, and if you'd like to see a better solution for the support of multiple languages in a FHIR resource.</p>\n</blockquote>\n<p>As an implementer of international patient questionnaires for me the reason why I am not demanding a different solution is because the pain of simply duplicating a short questionnaire is relatively low. I.e. do it once in English, create a copy, translate it into German/Spanish/Klingon, etc. by just replacing the strings in the texts, answerOptions, etc. without any use of the extensions. That is simple enough that even a commercial translation service can do it. Then place all copies onto a web server as static files and let the Accept-Languages header do the rest. Anything more fancy adds extra complexity to the filler and the translation process.</p>",
        "id": 234412745,
        "sender_full_name": "Tilo Christ",
        "timestamp": 1618353493
    },
    {
        "content": "<p>There is no mechanism to put extensions within a div, which is why we have a different approach there.</p>",
        "id": 234889330,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1618592876
    }
]