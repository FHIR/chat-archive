[
    {
        "content": "<p>I'm trying to link to geoJSON files from the location resource (using the <a href=\"https://www.hl7.org/fhir/extension-location-boundary-geojson.html\">boundary-geojson extension</a>). </p>\n<p>If I use {fhir_base_url}/Location/123 for a specific location, and the extension points to a geojson file, would it be ok to use the following?:</p>\n<ol>\n<li>{fhir_base_url}/boundary-geo-json/456</li>\n</ol>\n<p>Other alternatives I've considered:</p>\n<ol>\n<li>{fhir_base_url}/attachments/geo-json/456</li>\n<li>{fhir_base_url}/files/boundary-geo-json/456</li>\n<li>{fhir_base_url}/other-resources/boundary-geo-json/456</li>\n<li>{another_subdomain_base_url}/boundary-geo-json/456</li>\n</ol>\n<p>A similar question applies for pointing to PDF files. What is the best approach for building a url path for non-fhir resources on a FHIR server?</p>",
        "id": 223146013,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1610990310
    },
    {
        "content": "<p>I don't think {fhir_base_url}/geo-json/456 is OK to use. I think any solution that does not include {fhir_base_url} is OK (e.g. 4), but not necessarily requiring another sub-domain in the URL.</p>\n<p>I would love to hear what others think...</p>",
        "id": 223146644,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1610990667
    },
    {
        "content": "<p>i think that it depends on how you are serving them up. It is actually possible to serve them up as Binary resources and then you could use FHIR URLs to point to them.  If they are pointed to as just http files, then you can use any URL you want, but I tend to agree with <span class=\"user-mention\" data-user-id=\"192685\">@Vassil Peytchev</span> that using the {fhir_base_url} would confuse your implementers since it would <em>seem</em> like they are FHIR resources when they are not.</p>",
        "id": 223150828,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1610993658
    },
    {
        "content": "<p>That's my sense too - that returning non-FHIR resources from a FHIR server might confuse implementers... but at the same time I feel like is a common enough scenario that there might be some kind of best practice for this (especially considering the attachment data type, which doesn't have a reference element so I can't point to a binary resource.)</p>",
        "id": 223151450,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1610994185
    },
    {
        "content": "<p>you could just put the URL to the Binary resource in the attachment datatype, but your point is still valid - it might be useful that anywhere there was an Attachment data element that the resource also have a Reference(Binary).</p>",
        "id": 223151699,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1610994429
    },
    {
        "content": "<p>Yes, I could put the binary in the attachment datatype - and I'd probably do that for small files, but this file can be a large so I'm forcing retrieving the attachment separately in this case.</p>",
        "id": 223153241,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1610995644
    },
    {
        "content": "<p>Technically, there's no rule that all paths beneath a fhir_base_url must be valid FHIR references.  However, the risk with having such paths is that it's possible they might collide with future FHIR capabilities.  They might also be confusing to implementers.  And you certainly can't point to them from FHIR as if they are anything other than arbitrary URLs.</p>",
        "id": 223171291,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611010880
    },
    {
        "content": "<p>you can be sure that we will never introduce resources that have characters such as -_.$@%^ etc in their name</p>",
        "id": 223177524,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1611018093
    },
    {
        "content": "<p>We do make use of $ -for operations. Are we confident we wouldn't ever introduce other constructs that use some of these things?</p>",
        "id": 223178544,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611019333
    },
    {
        "content": "<p>This seems like a clear case for putting the content into Binary, and having a DocumentReference describing that content and pointing at the Binary. Size is not an issue.  (Note that doing a GET on a Binary where the http negotiation includes the native mime-type would transmit the native content, not encapsulated in Binary and not base64 encoded)</p>",
        "id": 223225526,
        "sender_full_name": "John Moehrke",
        "timestamp": 1611063005
    }
]