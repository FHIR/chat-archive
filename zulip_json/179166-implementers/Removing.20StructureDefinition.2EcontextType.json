[
    {
        "content": "<p>So I had a go at removing this... it's not so easy. There's kind of 2 problems:<br>\n- the FHIRPath for type testing is problematic. <br>\n- it's much harder for me to build the spec</p>",
        "id": 153941165,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519832281
    },
    {
        "content": "<p>at the moment, I categorise extensions based on their context type and the string of the context.... it can be<br>\n- extension + uri<br>\n- type + a type name or a path into a type<br>\n- resource + a resource name or a path into a resource.</p>",
        "id": 153941166,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519832343
    },
    {
        "content": "<p>see:<br>\n- contextType = extension:  fhirpath = extension('uri')<br>\n- contextType = type: fhirpath = %this is [type], but a path into type... don't know how to do that..<br>\n- context type = resource - that's a straight forward fhirpath.... except that I have to process it to decide what possible paths could match, for indexing... I think I can do that... but I haven't tried because the type thing made me scared.</p>",
        "id": 153941167,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519832496
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> I kept wanting to bring back type... it's so much simpler.... maybe just repeat context type with context</p>",
        "id": 153941168,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519832533
    },
    {
        "content": "<p>there's a related issue: both ElementDefinition.fixed[x] etc and Extension.value have a type of * - so the same list of possible types... I do not think that this is what we want.</p>",
        "id": 153941180,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519833279
    },
    {
        "content": "<p>I'm fine with type if it's as part of a pair with context</p>",
        "id": 153941207,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1519836124
    },
    {
        "content": "<blockquote>\n<p>but a path into type... don't know how to do that..</p>\n</blockquote>\n<p>Hmm, the expression would need to verify that some (grand)parent element has the correct datatype, and that the relative path from below that node matches some specific path given by the expression. But (standard) fhirpath has no notion of element types...?</p>",
        "id": 153941217,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1519836845
    },
    {
        "content": "<p>fhirpath does have the notion of element type, but it is hard. And obtuse...</p>",
        "id": 153941286,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519852805
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> so I propose to turn it into a repeating pair instead of removing context. And change it a little:<br>\n- type = extension, context is a url <br>\n- element id = context is an id that matches an <a href=\"http://elementdefinition.id\" target=\"_blank\" title=\"http://elementdefinition.id\">elementdefinition.id</a><br>\n- path - context is a FHIRPath</p>",
        "id": 153941321,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519860333
    },
    {
        "content": "<p>ok</p>",
        "id": 153941326,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1519860755
    },
    {
        "content": "<p>ok. reorganized, and got the build working again.</p>",
        "id": 153941671,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519947629
    },
    {
        "content": "<p>.... and now it's built.... <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> you can check that</p>",
        "id": 153941702,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519955801
    },
    {
        "content": "<p>Not clear on what I'm being asked to check?</p>",
        "id": 153941703,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1519956504
    },
    {
        "content": "<p>the new set up for StructureDefinition.context: <a href=\"http://build.fhir.org/structuredefinition-definitions.html#StructureDefinition.context\" target=\"_blank\" title=\"http://build.fhir.org/structuredefinition-definitions.html#StructureDefinition.context\">http://build.fhir.org/structuredefinition-definitions.html#StructureDefinition.context</a></p>",
        "id": 153941722,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519974244
    },
    {
        "content": "<p>The display names for contextType don't match the new codes &amp; definitions</p>",
        "id": 153941774,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1520003040
    },
    {
        "content": "<p>where? look ok to me...</p>",
        "id": 153941824,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1520021677
    },
    {
        "content": "<p>Here: <a href=\"http://build.fhir.org/valueset-extension-context-type.html\" target=\"_blank\" title=\"http://build.fhir.org/valueset-extension-context-type.html\">http://build.fhir.org/valueset-extension-context-type.html</a><br>\nelement is called Datatype and fhirPath is called Resource</p>",
        "id": 153941826,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1520021870
    },
    {
        "content": "<p>The other question is whether elementId includes the possibility of sliced elementIds or not</p>",
        "id": 153941827,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1520021895
    },
    {
        "content": "<p>(And if not, how is elementId not a subset of fhirPath?)</p>",
        "id": 153941828,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1520021915
    },
    {
        "content": "<p>fixed. it differs from FHIRPath in 3 ways:<br>\n- includes slicing identifiers<br>\n- can start with a data type<br>\n- is limited to a very simple subset</p>",
        "id": 153941830,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1520022495
    },
    {
        "content": "<p>So how do we declare the profile that applies if we're allowing slice names in the Element id?</p>",
        "id": 153941842,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1520024744
    },
    {
        "content": "<p>(And I didn't realize that FHIRPath couldn't start with a data type)</p>",
        "id": 153941843,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1520024758
    },
    {
        "content": "<p>prefix with a profile uri#elementid</p>",
        "id": 153941844,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1520025611
    },
    {
        "content": "<p>That's not clear from the description</p>",
        "id": 153941858,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1520030724
    },
    {
        "content": "<p>Looks good, I'm OK with the proposed change. Let's try to provide detailed description of these rules and preferably some examples in the spec.</p>",
        "id": 153942353,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1520244322
    }
]