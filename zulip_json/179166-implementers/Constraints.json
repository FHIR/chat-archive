[
    {
        "content": "<p>When using the <code>ElementDefintion.Condition</code> within an element within a StructureDefinition. Does the ID of the condition need to reference a constraint defined on the same element, or can it use an id defined elsewhere within the same StructureDefinition</p>",
        "id": 153831983,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1465367492
    },
    {
        "content": "<p>the idea is that it's defined elsewhere. It's an advisory - hey, look at this constraint. You would generally expect to look at the constraints on the element itself</p>",
        "id": 153831992,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465373518
    },
    {
        "content": "<p>OK so the fact that Forge only allows you to enter a constraint that is defined on that element may not be ideal then.</p>",
        "id": 153832046,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1465404872
    },
    {
        "content": "<p>In Forge, the Conditions.Id property is bound to a drop-down list of constraint ID's that are in scope, i.e. from constraints defined on the current element and/or on any of the ascending elements, up to the root element. I thought this was the correct implementation, but if not (?), then I'm open for suggestions on how to improve this.</p>",
        "id": 153832127,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1465458212
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> I think that behavior is correct</p>",
        "id": 153832179,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1465477605
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> thank you for the clarification!</p>",
        "id": 153832329,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1465548148
    },
    {
        "content": "<p>In Observation.component.referenceRange, the FHIR DSTU2 resource does not give child elements of low, high, meaning, age, text as is given in Observation.referenceRange for the master test. How would a referenceRange low and high value be shown in a FHIR profile for a component test? Can anyone give me a link to a profile example where this is shown, if it is possible please?</p>",
        "id": 153832761,
        "sender_full_name": "Katie Wheatley",
        "timestamp": 1465914092
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191594\">@Katie Wheatley</span> The ElementDefinition of Observation.component.referenceRange includes a nameReference to \"referenceRange\". This expresses that the Observation.component.referenceRange element contains the same child elements as the Observation.referenceRange element. For example, an Observation<br>\nresource can contain a SimpleQuantity value for Observation.component.referenceRange.low and an Observation profile can express constraints on that element.</p>\n<p>Note that Forge does not support name references yet, i.e. the implied child elements are not expanded. This still needs to be implemented (note to self).</p>",
        "id": 153832766,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1465915763
    },
    {
        "content": "<p>Also see for example Questionnaire.group.question.group, which is recursively defined via a name reference to Questionnaire.group.</p>",
        "id": 153832767,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1465915968
    },
    {
        "content": "<p>Thanks for letting me know that, Michel. Do you have a timescale for the addition of the child elements to the component reference range element in Forge?</p>",
        "id": 153832768,
        "sender_full_name": "Katie Wheatley",
        "timestamp": 1465916214
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191594\">@Katie Wheatley</span> Coincidentally, this topic came up during a recent team discussion, so we are definitely aware that the application needs improvement in this area. The possible recursive nature of some name references make this a bit of a challenge to implement. I need to spend some more time thinking about UI design and application logic.</p>",
        "id": 153832769,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1465918018
    },
    {
        "content": "<p>Thanks for your feedback. It is something needed in Forge.</p>",
        "id": 153832770,
        "sender_full_name": "Katie Wheatley",
        "timestamp": 1465918167
    },
    {
        "content": "<p>Currently I'm focusing on some other areas that desperately need improvement, but I'll try and implement this as soon as I have time.</p>",
        "id": 153832771,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1465918191
    },
    {
        "content": "<p>Thank you for your feedback! We try to adapt our roadmap based on customer demand, so it's always very useful to know what limitations users are struggling with the most.</p>",
        "id": 153832772,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1465918274
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> : \"possible recursive nature of some name references \" - can you clarify? </p>",
        "id": 153832821,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465945908
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I was referring to e.g. the Questionnaire.group component that recursively contains another group.</p>",
        "id": 153832988,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1465976416
    },
    {
        "content": "<p>If Forge would expand these elements in a naive way, then the application would hang forever...</p>",
        "id": 153832989,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1465976459
    },
    {
        "content": "<p>ah ok thanks</p>",
        "id": 153832990,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465977111
    }
]