[
    {
        "content": "<p>Hi! I am working on a government contract that involves implementing a FHIR API for multiple mobile applications that provide the capability for patients to enter their own health-related data. Given the existing FHIR standard in meant for EHRs, we are encountering a challenge in identifying what resource or field(s) make the most sense to identify the \"source\" mobile application for incoming patient-generated data and then ensuring this data attribute is maintained through data updates from the mobile application. Also, we want to ensure that is more than one mobile application provides the same patient the ability to enter the same/similar data points that we are able to differentiate the data for analytical purposes. Ideally, we want to be able to go to the database schema and pull together all the data generated for a patient or patients from one mobile application vs. another mobile application. Long-term, we look to integrate web-based applications and wearable device data as well. At this time, we are early in development and can make changes as necessary. Any advice you can provide would be appreciated and thank you in advance for your assistance!</p>",
        "id": 153868949,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1485279833
    },
    {
        "content": "<p>You should be able to identify the application as a Device.. Such as Observation.device. If further attribution is needed, then a Provenance record can link ANY Resource to the authoring device. </p>",
        "id": 153868983,
        "sender_full_name": "John Moehrke",
        "timestamp": 1485287340
    },
    {
        "content": "<p>Thanks! This is helpful. We were considering Provenance, but not entirely clear on how this works given it does not appear to be directly referenced in the JSON. Also, the data model team actually plans to have Provenance as a field in each collection yet their justification for this method of use for Provenance is clear as mud. If you are familiar with this method could you or someone else here provide some insight?</p>",
        "id": 153868984,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1485287661
    },
    {
        "content": "<p>Yes, I am one of the core people working Provenance.  Provenance resource points at the resources it describes. So in order to find the provenance of any resource X, you ask for Provenance resources with target eq X...</p>",
        "id": 153868989,
        "sender_full_name": "John Moehrke",
        "timestamp": 1485291481
    },
    {
        "content": "<p>some blog articles of mine on the topic <a href=\"https://healthcaresecprivacy.blogspot.com/2016/03/provenance-vs-audit-it-is-not.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2016/03/provenance-vs-audit-it-is-not.html\">https://healthcaresecprivacy.blogspot.com/2016/03/provenance-vs-audit-it-is-not.html</a>  and   <a href=\"https://healthcaresecprivacy.blogspot.com/2016/07/extending-fhir-standard-to-handle.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2016/07/extending-fhir-standard-to-handle.html\">https://healthcaresecprivacy.blogspot.com/2016/07/extending-fhir-standard-to-handle.html</a>  </p>",
        "id": 153868990,
        "sender_full_name": "John Moehrke",
        "timestamp": 1485291643
    },
    {
        "content": "<p>Thanks! Again, very helpful!</p>",
        "id": 153868993,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1485292170
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"johnmoehrke@gmail.com\">@John Moehrke</span>  Another question based on the information in the first referenced blog. If Provenance only recording Create and Update, how do we ensure that any Read of data via FHIR resources is from one particular mobile application and not from multiple mobile applications? We would like to avoid the case where Patient A's data from App 1 appears in App 2 and vice versa. Is there something specific that has to be done to ensure the data integrity per source aka mobile application?</p>",
        "id": 153869088,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1485356640
    },
    {
        "content": "<p>Lauren, that would be access control rules. FHIR does not impose any security policy. Defining and implementing security (or any business rules) would be up to a service/application implementation/deployment. FHIR i just defining a data model and interaction model.</p>",
        "id": 153869102,
        "sender_full_name": "John Moehrke",
        "timestamp": 1485359596
    },
    {
        "content": "<p>Okay, this makes sense and helps with our refactoring efforts. We will be utilizing a combination of shared services and the HAPI FHIR API for each mobile application so we should be able to figure this out. Thank you!</p>",
        "id": 153869104,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1485359828
    },
    {
        "content": "<p>And the action of it occurring would be via AuditEvent resources</p>",
        "id": 153869824,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1486073284
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> Thanks! However, we are not implementing all available FHIR resources for our patient-generated FHIR API and database. In our particular situation, we are not looking to include AuditEvent resources and only plan to use Provenance. Our challenge is gaining a clear understanding of Provenance, how the data gets stored, what if anything we need to include in the JSON requests for each mobile application applet, etc. We are early in our refactoring work to change the mobile application endpoints to HAPI FHIR API with a MongoDB database backend. The MongoDB will also be FHIR compliant with a governance process included as well. Any other insights you all have would be helpful as we continue this effort over the next few months.</p>",
        "id": 153869903,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1486131713
    },
    {
        "content": "<p>Good Morning!</p>\n<p>Our team has done a great deal of research and still trying to solve this problem of patient-generated health data (PGHD) that is collected by mobile applications. We are using a HAPI FHIR API and have reconfigured it to use a MongoDB instead of the out of the box database server. This was done to stay in line with other existing shared services that the HAPI FHIR API cannot support that are necessary to various mobile applications.</p>\n<p>Our challenge still remains to determine the best method to identify PGHD records with the mobile application from which it is collected. Provenance will not work as it does not support the necessary pagination we need in our applications nor allow us to filter every request appropriately.</p>\n<p>Given this information, our next best option is to use the Identifier field (CodeableConcept array) and insert a coded concept to identify each mobile application for each PGHD record created/updated/deleted. It is our intention to use one HAPI FHIR API server and one MongoDb server to collect all the PGHD data from various mobile applications.</p>\n<p>What are you thoughts on this approach? It appears to work for our needs and does not require additional development for our API. The only other option we have entertained is adding an extension to every FHIR resource to collect this information. We would prefer not to use extensions and stay as closely as possible to the FHIR DSTU2 standard as possible for data governance and compliance reasons.</p>\n<p>Appreciate your thoughts on this!</p>",
        "id": 153880052,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1490705188
    },
    {
        "content": "<p>Lauren, Can you explain better what it is you want to do? I understand the that you have tried using Provenance, but I don't understand what you were trying to do that was not possible. You might have uncovered something we need to do to Provenance.  It is possible what you want to do is in scope for tags - e.g. the Integrity vocabulary from security-labels? It is hard to know what it is you are trying to do.</p>",
        "id": 153880054,
        "sender_full_name": "John Moehrke",
        "timestamp": 1490706293
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>! More specifically, we want to be able to specify the source, aka mobile application, of the PGHD that is stored in the MongoDB. The reason for this is because we have an aggregating mobile application that will be displaying PGHD from other PGHD applications and we need to be able to filter. For example, patient enter glucose test results into Mobile App A and Mobile App B. Provider then wants to see only glucose test results entered by the patient from Mobile App A. Another example would be for the patient as we only want records entered by that patient within the given mobile application to be returned and not display all records of that patient across mobile applications. Without the ability to filter the records within a resource by \"source\", we cannot limit the amount of data that is returned to the provider or the patient in either example. Our HAPI API developers have identified issues with using Provenance in this way at each request level. Does this help? I will see if I can invite our lead HAPI API developer as I am uncertain if he uses the FHIR chat area. Thanks!</p>",
        "id": 153880057,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1490706996
    },
    {
        "content": "<p>Provenance can be used to record the provenance of any data, identifying which application the data came from. In that case the application identity would be included as a Provenance.agent. Either by pointing to a defined Device using whoReference; or where that application isn't defined in a Device then use the whoUri with some locally defined URI as a unique identifier.  During search you can then filter on Provenance agent search parameter.</p>",
        "id": 153880060,
        "sender_full_name": "John Moehrke",
        "timestamp": 1490707891
    },
    {
        "content": "<p>so you want to do a query against something like Observation, for Observations recorded by Provenance.agent.whoReference==App-A.....</p>",
        "id": 153880061,
        "sender_full_name": "John Moehrke",
        "timestamp": 1490708269
    },
    {
        "content": "<p>you could do the Observation search using _revinclude=Provenance and then locally process the separation of App A from App B. I am not sure, ignorance, how you can add to your Observation search a Provenance specific search filter... </p>",
        "id": 153880062,
        "sender_full_name": "John Moehrke",
        "timestamp": 1490708419
    },
    {
        "content": "<p>The only way to filter on multiple resources simultaneously right now is with the <a href=\"http://hl7.org/fhir/search.html#_filter\" target=\"_blank\" title=\"http://hl7.org/fhir/search.html#_filter\">filter</a> search language, though that's not widely supported.</p>",
        "id": 153880070,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1490709049
    },
    {
        "content": "<p>Lloyd, I had hoped I as just not understanding <a href=\"http://build.fhir.org/search.html#revinclude\" target=\"_blank\" title=\"http://build.fhir.org/search.html#revinclude\">http://build.fhir.org/search.html#revinclude</a> properly... It is hard to read and grok.</p>",
        "id": 153880071,
        "sender_full_name": "John Moehrke",
        "timestamp": 1490710565
    },
    {
        "content": "<p>so, it seems Lauren could use filter search language? Thus add a requirement to their servers to implement filter? else do the filtering on the client as I uncovered.</p>",
        "id": 153880072,
        "sender_full_name": "John Moehrke",
        "timestamp": 1490710634
    },
    {
        "content": "<p>Right.  Or not use Provenance.  I agree that the documentation about _revinclude is a bit misleading as the inclusion of \"&amp;criteria...\" makes it appear that you can apply criteria to the included resource, but that's not what that means.  It just means additional criteria for the search on the primary resource.  There's no sequencing to search parameters so whether the criteria come before a given _include or _revinclude or after make no difference  to their meaning</p>",
        "id": 153880074,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1490712528
    },
    {
        "content": "<p>Third option, which is less good, is to define a set of tags for each App... And use the _tag search parameter.</p>",
        "id": 153880075,
        "sender_full_name": "John Moehrke",
        "timestamp": 1490712723
    },
    {
        "content": "<p>Might being able to specifically search by Provenance.agent be a useful enough capability that FHIR-I could add it globally somehow?</p>",
        "id": 153880077,
        "sender_full_name": "John Moehrke",
        "timestamp": 1490712871
    },
    {
        "content": "<p>You can do _has</p>",
        "id": 153880078,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1490712917
    },
    {
        "content": "<p>so in STU3 today the <a href=\"http://build.fhir.org/search.html#has\" target=\"_blank\" title=\"http://build.fhir.org/search.html#has\">http://build.fhir.org/search.html#has</a> does seem to support Lauren's use-case...</p>",
        "id": 153880081,
        "sender_full_name": "John Moehrke",
        "timestamp": 1490713111
    },
    {
        "content": "<p>GET [base]/Observation:_has:Provenance:agent=MyAppId</p>",
        "id": 153880082,
        "sender_full_name": "John Moehrke",
        "timestamp": 1490713190
    },
    {
        "content": "<p>right?</p>",
        "id": 153880083,
        "sender_full_name": "John Moehrke",
        "timestamp": 1490713196
    },
    {
        "content": "<p>yes, that should work</p>",
        "id": 153880085,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1490713740
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> &amp; <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>, Thank you for this insight! I will certainly share this with our developers. Are any of the options you provided supported in DSTU2? This is the version we are currently using until our client gives us the green light to move up to STU3.</p>",
        "id": 153880106,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1490721150
    },
    {
        "content": "<p>_has is not supported in STU2.  _filter is, but as mentioned is not widely supported - and it's unlikely anyone will look at implementing it for STU2 now that STU3 is out.</p>",
        "id": 153880108,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1490721460
    },
    {
        "content": "<p>Understood. Does our current approach make sense? We are considering just using the Identifier field to identify the source mobile application as this field is available in all Resources. Although our use case may not be ideal to fit into Identifier, it appears to be a feasible option given it is already a filterable field for majority/all Resources we are using to date. Thoughts?</p>",
        "id": 153880110,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1490721698
    },
    {
        "content": "<p>the identifier of the clinical Resource? I don't think that is a good solution. The identifier is to be an identifier of that data, not the source of that data. I might recommend either an extension, or the _tag solution. </p>",
        "id": 153880111,
        "sender_full_name": "John Moehrke",
        "timestamp": 1490721886
    },
    {
        "content": "<p>Right. We agree it is not the ideal use case or purpose of Identifier, however, it is our least path of resistance at this time. Of course, we will further investigate these other options. We prefer not to do extension unless absolutely necessary but this of course may be an exception.</p>\n<p>At some point in the near future, there are plans to eventually \"merge\" the PGHD and EHR data together thus making this need to identify the source of the information even more necessary. We do also fully appreciate we are trying to make FHIR fit for PGHD when it is meant to more formally support an EHR.</p>",
        "id": 153880126,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1490722682
    },
    {
        "content": "<p>It would be better to use an extension or a tag than to mis-use identifier</p>",
        "id": 153880128,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1490723070
    },
    {
        "content": "<p>Okay, I completely agree. I am reviewing tag as part of the meta data. Question: Where is this stored? For example, could an analyst query records from the MongoDB that contains the PGHD and filter on this meta data? My understanding was this meta data is not captured explicitly as the sited fields of each resource are in the standard specification. However, we are likely to use the API between applications.</p>",
        "id": 153880138,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1490723924
    },
    {
        "content": "<p>Tags are in the Resource <a href=\"http://hl7.org/fhir/DSTU2/resource.html\" target=\"_blank\" title=\"http://hl7.org/fhir/DSTU2/resource.html\">http://hl7.org/fhir/DSTU2/resource.html</a> . They are just common elements among all Resources. So they are just as much a part of the Resource as any element.</p>",
        "id": 153880139,
        "sender_full_name": "John Moehrke",
        "timestamp": 1490724959
    },
    {
        "content": "<p>Tags are often not part of the signature, so they work well for information that you want to attach in your local system distinct from what came in.</p>",
        "id": 153880142,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1490728036
    },
    {
        "content": "<p>Sounds good! Will let you know if I have questions.</p>",
        "id": 153880143,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1490728744
    },
    {
        "content": "<p>It would be a bit weird to use a tag to hold the source identifier, seeing as tags are Codings. In general, entities which can be identified get Identifiers, and concepts which can be enumerated get some kind of code/Coding/CodeableConcept. We used an extension for recording source info.</p>",
        "id": 153880161,
        "sender_full_name": "James Butler",
        "timestamp": 1490734757
    },
    {
        "content": "<p>So this sounds like all observation. What are you using Observation.device for? </p>",
        "id": 153880194,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490741532
    },
    {
        "content": "<p>That is what I originally thought, but <a href=\"http://build.fhir.org/observation-definitions.html#Observation.device\" target=\"_blank\" title=\"http://build.fhir.org/observation-definitions.html#Observation.device\">Observation.device</a> is described as the device that \"took the measurement\" .  Here it sounds more like a way to record and store it and send it.  So if I enter what I ate into my phone's app does teh phone app count as the device?  What about if entered a glucometer reading?  </p>",
        "id": 153880196,
        "sender_full_name": "Eric Haas",
        "timestamp": 1490747481
    },
    {
        "content": "<p>right. I'm not sure. there's a grey zone here </p>",
        "id": 153880197,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490747524
    },
    {
        "content": "<p>but this seems to come up fairly often in PGD - maybe we should add a core extension?</p>",
        "id": 153880198,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490747543
    },
    {
        "content": "<p>What did you do in the mHealth mappings ? - I was looking for them before responding.</p>",
        "id": 153880200,
        "sender_full_name": "Eric Haas",
        "timestamp": 1490747684
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13144\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13144\">GF#13144</a> logged to look at this</p>",
        "id": 153880201,
        "sender_full_name": "Eric Haas",
        "timestamp": 1490747955
    },
    {
        "content": "<p>I cna't find them</p>",
        "id": 153880203,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490752570
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> &amp; <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>, Thank you for this insight! We would not store this in Observation.device as in future efforts we will need to utilize this field to capture the remote monitoring medical device information. We are looking for a solution for every CRUD operation request to capture/keep the mobile application source so we can differentiate which mobile application the patient entered which type of information. Our mobile applications vary in what they collect. The flagship mobile application provides patients the ability to enter everything from self-assessments, daily events, glucose readings, sleep tracking, food consumption, exercise activity, surgeries, planning for appointments, hospitalizations, medications, and much more. The idea is to capture a complete picture of a patient's medical history and ongoing events in one place and then this data be displayed to providers both within the VA and in the private sector.</p>\n<p>I see the ticket  you created so wanted to be clear about our use case. This PGD would include both remote monitoring medical devices as well as self-entered medical information.</p>",
        "id": 153880240,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1490792577
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191536\">@James Butler</span> Yes, we are considering the extension to each resource as an option as well. Our API developers are still reviewing so I am assisting in getting additional information of potential options.</p>",
        "id": 153880241,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1490792791
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> &amp; <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> The challenge I see with using Resource.meta.tag is it appears to be an attribute of all records within a Resource. Please correct me if I am wrong here. If this is true, this would not work as we would need to differentiate records within a resource by mobile application source. For example: App A collects only glucose readings and this would be stored in Observation. App B collects cholesterol, glucose, weight, sleep, and more and would also be stored in Observation. How do you differentiate between Observation records with the same LOINC/SNOMED codes across mobile applications aka source of PGD?</p>\n<p>PS - I am still learning FHIR and schedule to take the fundamentals course next month. I am testing options in a public HAPI FHIR API server.</p>\n<p>Thanks again!</p>",
        "id": 153880242,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1490793072
    },
    {
        "content": "<p>My thinking was that you would create a set of codes, one for each App. Each App would tag the data they create with their value. Thus for any code X, would only appear in resources that application X created. I expect you would manage elsewhere what each application can do. I might still not understand the full details of your use-case.</p>",
        "id": 153880243,
        "sender_full_name": "John Moehrke",
        "timestamp": 1490793777
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193326\">@Lauren Wolejsza</span> Resource.meta.tag is specific to each instance.  Different Observations can (and will) often have different tags.</p>",
        "id": 153880249,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1490796963
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> , One of our developers actually tried the tag option and it appears to be working. I must of had something incorrect. He is using PostMan and more easily able to manipulate the request URL.</p>",
        "id": 153880250,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1490797001
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193326\">@Lauren Wolejsza</span>  Can you explain why the Provenance Resource is not being considered for recording the gateway appliance or mobile app? (too 'heavy',  not able to easily search?,  etc? I need to discuss <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13144\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13144\">GF#13144</a> to the work group and they have asked for more background on the use case.</p>",
        "id": 153885307,
        "sender_full_name": "Eric Haas",
        "timestamp": 1492712681
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> - Based on the discussion in this thread and the fact that we are utilizing a Mongo-based HAPI FHIR API, we are unable to search on Provenance. As I understand it, the search capability for Provenance we would utilize is available in STU3, however, we are using DSTU2 right now. We are utilizing the resource.meta.tag for now and this appears to be working beautifully. Ideally, we would prefer to use Provenance as this is most appropriate, however, it does not work for our use case of tracking the mobile application where the patient is editing information captured by our HAPI FHIR API and MongoDB backend. If you need more details, please let me know.</p>",
        "id": 153885330,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1492718382
    },
    {
        "content": "<p>so... you are stuck at DSTU2...and could use STU3 Provenance if you were able to use STU3? Please keep us informed if you find problems with STU3 Provenance. I really encourage use and improvement.</p>",
        "id": 153885474,
        "sender_full_name": "John Moehrke",
        "timestamp": 1492780569
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> - I agree that moving to STU3 would be better, however, its a government contract and we are confined to DSTU2 right now. I am actually going to do an impact analysis to determine the technical debt of moving from DSTU2 to STU3 which first and foremost would require us to develop a new HAPI FHIR API configured with a MongoDB backend.</p>",
        "id": 153885476,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1492780982
    }
]