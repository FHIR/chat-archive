[
    {
        "content": "<p>I am looking at building an operation that gives me a bundle of type \"history\" with CRUD entry.request filled that is like $everything  for a patient  - would anyone thought of how to go about something like that - or any advice?   Is there such as thing as an operation on _history?  or is this just a variation of the $everything operation... </p>",
        "id": 153852816,
        "sender_full_name": "Brett Esler",
        "timestamp": 1476405644
    },
    {
        "content": "<p>Would that include all the versions of the resources, and the deletions also?<br>\n(Issue with this is that history and deletions are usually not indexed anymore, maybe need to create an exception on the patient/encounter compartment to explicitly enable this to be possible)</p>",
        "id": 153852817,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1476407204
    },
    {
        "content": "<p>thinking it is like a _history on all resources associated with a patient in one bundle... </p>",
        "id": 153852823,
        "sender_full_name": "Brett Esler",
        "timestamp": 1476413549
    },
    {
        "content": "<p>is there a way to search for a resource associated with a patient that has been deleted?</p>",
        "id": 153852824,
        "sender_full_name": "Brett Esler",
        "timestamp": 1476413666
    },
    {
        "content": "<p>no, search is docunented as only on current resources</p>",
        "id": 153852856,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476472605
    },
    {
        "content": "<p>I personally would add a parameter to the $everything operation for this </p>",
        "id": 153852857,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476472622
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191757\">@Christiaan Knaap</span> <span class=\"user-mention\" data-user-id=\"191318\">@nicola (RIO/SS)</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span>  Anybody think more on this topic?  A client that wants to stay in sync (create, update, delete) with $everything for a particular patient would have a difficult time without this....</p>",
        "id": 153971652,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1529959581
    },
    {
        "content": "<p>I was thinking of a <code>_compartment</code> parameter to <code>_history</code>:<br>\n<code>[base]/_history?_since=2018-01-01&amp;_compartment=Encounter/1234</code></p>",
        "id": 153971653,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1529959799
    },
    {
        "content": "<p>or, maybe more intuitive would be:<br>\n<code>[base]/Encounter/1234/$everything?_history=true</code><br>\nalthough this would change the return from a searchset to a history with request elements</p>",
        "id": 153971654,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1529959901
    },
    {
        "content": "<p>also...$everything should have a _since parameter I think - start and end refer to the clinical timeline, but there's lots of use cases that want to poll for changes along the system timeline.</p>",
        "id": 153971655,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1529960020
    },
    {
        "content": "<p>we implemented transaction log of all cud operations, so potentially it looks like what you want. We number all transactions with increasing counter - so it can be used as logical clock (as well we use it as versionid)</p>",
        "id": 153971660,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1529962521
    },
    {
        "content": "<p>there's a task for adding _since to everything already</p>",
        "id": 153971701,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1529983322
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191318\">@nicola (RIO/SS)</span> Is you log exposed via FHIR or something proprietary?</p>",
        "id": 153971807,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1530024951
    },
    {
        "content": "<p>we expose it as custom operation usually, and sometimes we feed it into the kafka</p>",
        "id": 153971808,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1530025067
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> this one? <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13921\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13921\">GF#13921</a> Looks like this will make $everything allow all Resource-level search parameters (in addition to \"start\" and \"end\")? </p>\n<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> Any further discussion?  Looking to build this function this week and want to guess well at where we'll land!</p>",
        "id": 153971825,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1530029420
    },
    {
        "content": "<p>Doesn't cover DELETE still....</p>",
        "id": 153971826,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1530029438
    },
    {
        "content": "<p>HAPI has always had <code>_lastUpdated</code> as a supported \"bonus\" parameter on that operation as a result of the way we implemented it. I know I've heard of people using this as a cheap way of doing poll-synchronization..</p>",
        "id": 153972089,
        "sender_full_name": "James Agnew",
        "timestamp": 1530112144
    }
]