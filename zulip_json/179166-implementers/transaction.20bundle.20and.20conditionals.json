[
    {
        "content": "<p>As the FHIR spec tells, in a transaction bundle one can use conditional puts/creates with ressources containing conditional references. I wonder, if this is a feature the most FHIR server have already implemented or only a few. So is this a feature \"for future\" or \"state of the art\" for a FHIR server?</p>",
        "id": 278540760,
        "sender_full_name": "Thomas Zacher",
        "timestamp": 1649677321
    },
    {
        "content": "<p>I'd venture a guess that most have already implemented this. Certainly not a 'cutting edge' feature, it's part of the basic server functionality.</p>",
        "id": 278541099,
        "sender_full_name": "René Spronk",
        "timestamp": 1649677508
    },
    {
        "content": "<p>Thank you very much René. I asked because there´s this sentence in the spec:  \"Note that transactions and conditional create/update/delete are complex interactions and it is not expected that every server will implement them.\"<br>\nBut you think this is part of the basic server functionality. So it seems that the statement in the spec is a bit outdated.</p>",
        "id": 278545606,
        "sender_full_name": "Thomas Zacher",
        "timestamp": 1649680110
    },
    {
        "content": "<p>No, it's an optional feature, which is unlikely to be defined as 'required' at some future point in time. Some optional features are widely implemented, others are not. This one is probably fairly widely implemented, but by no means by all servers.</p>",
        "id": 278548127,
        "sender_full_name": "René Spronk",
        "timestamp": 1649681351
    },
    {
        "content": "<p>You mention Transaction Bundles, something that's supported by some servers, but not by others. This may even have technical reasons, e.g. on a NoSQL database it's hard to support transactional behaviour, whereas this is easy if one has a SQL backend.</p>",
        "id": 278548364,
        "sender_full_name": "René Spronk",
        "timestamp": 1649681465
    },
    {
        "content": "<p>I don't really agree. Most production servers do not support transactions at all, quite a lot of server actually do not support writing at all.</p>",
        "id": 278554999,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1649684580
    },
    {
        "content": "<p>Yeah there is a pretty sharp distinction between production servers that represent an interface on top of real world EHRs, and production servers that represent standalone FHIR native offerings. Michele is mainly describing the former category, and René is mainly describing the latter.</p>",
        "id": 278557188,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1649685484
    },
    {
        "content": "<p>Yes, the context of the question (Thomas seems to be using a server that accepts Transactions) leads me to believe he's using a server that has 'advanced' support for FHIR. If a server supports inbound transactions, then it's likely they'll also support conditional stuff. Similarly: if a server supports search, and that same server supports inbound updates, then it's likely they'll also support conditional stuff. </p>\n<p>But I agree, most usage of FHIR will be in clients, and server capabilities will be wildly varied. One would sincerely hope that real world EHRs (eventually) support a wide range of features as well.</p>",
        "id": 278650959,
        "sender_full_name": "René Spronk",
        "timestamp": 1649742818
    },
    {
        "content": "<p>I will implement a client in this case, and I´m working on architecture. Of course it makes a difference if the client has to implement the get/post stuff or not, because the server can do (conditionals). That´s why I asked. So as you described we´ll be confrontated with both situations (fhir facade and native fhir server) and I need a get/post fallback for the former. Thanks a lot!</p>",
        "id": 278654507,
        "sender_full_name": "Thomas Zacher",
        "timestamp": 1649746519
    }
]