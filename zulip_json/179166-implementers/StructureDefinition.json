[
    {
        "content": "<p>With regards to StructureDefinition.abstract. Is it a reasonable assumption that a LogicalModel would always be abstract? Or does abstract not have real value for LogicalModels?</p>",
        "id": 153826581,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1462913443
    },
    {
        "content": "<p>I had assumed that abstract in a logical model context is akin to abstract in a UML context; that's how we're using it at NEHTA.</p>",
        "id": 153826611,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1462920197
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191366\">@Stephen Royce</span> Alexander raised an interesting point. I've just implemented basic support for logical models in Forge, but I'm really looking for some feedback from users on how to develop this further. So are you suggesting that a Logical model could be abstract and/or concrete? i.e. it's up to the modeller to define this? In that case, we definitely shouldn't fix the property value but leave it up to the modeller to define this. Just looking for some guidance on tooling development.</p>",
        "id": 153826713,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1462939416
    },
    {
        "content": "<p>We leave it up to the modeller to define this.</p>",
        "id": 153826715,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1462940642
    },
    {
        "content": "<p>I'm not necessarily suggesting that's the best approach, it's just what we do.</p>",
        "id": 153826716,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1462940731
    },
    {
        "content": "<p>What does a concrete logical model mean versus an abstract logical model? The way that it is described now is unclear to me: \"If the structure is not abstract, or there's a constrained type, then there SHALL be a base\" and \"Whether structure this definition describes is abstract or not - that is, whether an actual exchanged item can ever be of this type.\"</p>\n<p>especially the second part makes me think that you always need an SD that profiles the stuff that onto the wire. You would exchange logical models just like you would not exchange XMI</p>",
        "id": 153826739,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1462962718
    },
    {
        "content": "<p>it would be good to create a task to clarify this. The language was written before we had logical models and could be improved, </p>",
        "id": 153826753,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462963647
    },
    {
        "content": "<p>A logical model is a structure that is not used as a resource or a data type in the FHIR specification. That doesn't mean it isn't concrete, doesn't have a wire format, or an object model.</p>",
        "id": 153826754,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462963691
    },
    {
        "content": "<p>whatever it is, it is a set of element definitions that describe an instance of data, and an abstract type is a type that cannot exist directly in the instance - only a specialization of it can exist</p>",
        "id": 153826755,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462963751
    },
    {
        "content": "<p>Created #9987 and added a link to this Zulip thread</p>",
        "id": 153826807,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1462971916
    },
    {
        "content": "<p>In our space, an abstract model, although it can be mapped to resources/profiles, is not to be implemented as is.  You must specialise it first to a concrete model and then complete the mappings and only those are to be implemented.</p>",
        "id": 153827130,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1463010077
    },
    {
        "content": "<p>Initially we actually disallowed mappings on abstract StructureDefinitions, but that makes it difficult to maintain consistency across concrete StructureDefinitions that specialise it.</p>",
        "id": 153827131,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1463010150
    },
    {
        "content": "<p>Again, I'm not suggesting that this is the way to go; it's just NEHTA's current practice.</p>",
        "id": 153827132,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1463010174
    },
    {
        "content": "<p>I think that makes sense and is in line with that Grahame says....</p>",
        "id": 153827629,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1463099663
    },
    {
        "content": "<p>The StructureDefinition resource appear to have been updated at some point to add \"title\" and change \"name\" to be ComputerFriendly. Yet there are a number of Extensions in the FHIR Extension Registry which were built according to the old StructureDefinition where \"name\" was an informal name (i.e. not Computer Friendly) for the resource. As a system consuming these extensions how are we to know what version of StructureDefinition the extension was built with? And, are all the extensions in the registry going to be updated according to the the new StructureDefinition?</p>",
        "id": 153868991,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1485292086
    },
    {
        "content": "<p>They should, but they probably won't unless the validator yells about them.  Can you create a tracker item for us to make sure the validator enforces that \"names\" are computer-friendly?  (no spaces, accents or characters other than what we'd allow in an id)</p>",
        "id": 153868994,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1485292334
    },
    {
        "content": "<p>I think this tracker describes the same issue: <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_id=677&amp;tracker_item_id=9810\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_id=677&amp;tracker_item_id=9810\">http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_id=677&amp;tracker_item_id=9810</a></p>",
        "id": 153869010,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1485296374
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> there appear to be resources which follow the new StructureDefinition format yet their values don't comply with the format: <a href=\"http://build.fhir.org/extension-encounter-primarydiagnosis.json.html\" target=\"_blank\" title=\"http://build.fhir.org/extension-encounter-primarydiagnosis.json.html\">http://build.fhir.org/extension-encounter-primarydiagnosis.json.html</a></p>",
        "id": 153869012,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1485297243
    },
    {
        "content": "<p>does the validator look at the values at all?</p>",
        "id": 153869013,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1485297254
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191606\">@Stefan Dimitrov</span> I think that tracker is something different.  Can you identify the specific issues you see in the extension you referenced?</p>",
        "id": 153869038,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1485303972
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> the name attribute of encounter-primarydiagnosis is not computer friendly</p>",
        "id": 153869091,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1485357106
    },
    {
        "content": "<p>Right.  But right now there's no regex on name to make it computer friendly, so I wouldn't expect the validator to complain about that.</p>",
        "id": 153869182,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1485394077
    },
    {
        "content": "<p>The purpose of your tracker item would be to add such a regex.</p>",
        "id": 153869183,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1485394094
    },
    {
        "content": "<p>Ok, thanks, this clarifies it, I will create a tracker now.</p>",
        "id": 153869234,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1485444088
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12710\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12710\">http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12710</a></p>",
        "id": 153869248,
        "sender_full_name": "Stefan Dimitrov",
        "timestamp": 1485446793
    },
    {
        "content": "<p>I'm firmly opposing this breaking change and have added that to the tracker item. name != short.</p>",
        "id": 153869341,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1485513838
    },
    {
        "content": "<p>Also mind that StructureDefinitions also encompass Logical Models. There is no intrinsic need to let Logical Models have computer friendly names.</p>",
        "id": 153869342,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1485513933
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span> If there's both a name element and a title element, it's clear they must have distinct purposes.  If you want to argue for loosening the cardinality either for logical models or for all, that's fine.  But forcing the name to be computable - when that's definitely its purpose - is quite reasonable.</p>",
        "id": 153869407,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1485574745
    },
    {
        "content": "<p><a href=\"http://StructureDefinition.name\" target=\"_blank\" title=\"http://StructureDefinition.name\">StructureDefinition.name</a> == Informal name for this StructureDefinition<br>\n<a href=\"http://ElementDefinition.name\" target=\"_blank\" title=\"http://ElementDefinition.name\">ElementDefinition.name</a> == Name for element to display with or prompt for element</p>\n<p>How would you reckon that \"name\" has a computability purpose?</p>",
        "id": 153869416,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1485617038
    },
    {
        "content": "<p>STU2 name maps to STU3 title</p>",
        "id": 153869418,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1485617883
    },
    {
        "content": "<p>I see. And makes <a href=\"http://StructureDefinition.name\" target=\"_blank\" title=\"http://StructureDefinition.name\">StructureDefinition.name</a> required no less. I also see <a href=\"http://ElementDefinition.name\" target=\"_blank\" title=\"http://ElementDefinition.name\">ElementDefinition.name</a> is now ElementDefinition.label (not title). I definitely missed a few motions to vote against. Too late now I guess. I've updated/retracted my comment for <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12710\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12710\">GF#12710</a></p>",
        "id": 153869511,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1485789984
    },
    {
        "content": "<p>All these metadata elements are aligned across the conformance resources and knowledge resources (we tried to make all metadata consistent), so changing this means changing 10+ resources....</p>",
        "id": 153869534,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1485811472
    },
    {
        "content": "<p>Can a StructureDefinition constrain the value of a string?  eg force an identifier to be a UUID</p>",
        "id": 153916253,
        "sender_full_name": "Ben Spencer",
        "timestamp": 1509006784
    },
    {
        "content": "<p>yes see the regex extension</p>",
        "id": 153916257,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1509011691
    },
    {
        "content": "<p>thanks</p>",
        "id": 153916259,
        "sender_full_name": "Ben Spencer",
        "timestamp": 1509011869
    }
]