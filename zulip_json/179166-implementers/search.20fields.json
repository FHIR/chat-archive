[
    {
        "content": "<p>In the profile <code>specialty</code> is defined as </p>\n<div class=\"codehilite\"><pre>&quot;path&quot;: &quot;Practitioner.practitionerRole.specialty&quot;,\n</pre></div>\n\n\n<p>In the conformance response from the server (<a href=\"http://fhirtest.uhn.ca/baseDstu2\" target=\"_blank\" title=\"http://fhirtest.uhn.ca/baseDstu2\">http://fhirtest.uhn.ca/baseDstu2</a>)<br>\nit is defined as</p>\n<div class=\"codehilite\"><pre>&quot;searchParam&quot;: [   \n     ...        \n{\n  &quot;name&quot;: &quot;specialty&quot;,\n  &quot;type&quot;: &quot;token&quot;,\n  &quot;documentation&quot;: &quot;The specialty that the referral is for&quot;\n},\n</pre></div>\n\n\n<p>without the full path.</p>\n<p>Isn't there some possibility that there is more than one <code>specialty</code> inside some any of the complex properties?</p>",
        "id": 153847331,
        "sender_full_name": "Günter Zöchbauer",
        "timestamp": 1473932316
    },
    {
        "content": "<p>Not sure why that would be.<br>\nThe spec clearly has the path defined.<br>\n<code>http://hl7.org/fhir/practitioner.html#search</code><br>\nAnd even with the right description</p>",
        "id": 153847497,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1474064145
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> missed your message previously<br>\nIt seems <a href=\"https://www.hl7.org/fhir/searchparameter-definitions.html#SearchParameter.xpath\" target=\"_blank\" title=\"https://www.hl7.org/fhir/searchparameter-definitions.html#SearchParameter.xpath\">https://www.hl7.org/fhir/searchparameter-definitions.html#SearchParameter.xpath</a> would provide that information.<br>\nAny idea why this is not included?</p>",
        "id": 153849510,
        "sender_full_name": "Günter Zöchbauer",
        "timestamp": 1474283138
    },
    {
        "content": "<p>That would be a question for the HAPI folk <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> any suggestions on what's going on here?</p>",
        "id": 153849512,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1474285701
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"192526\">@Günter Zöchbauer</span> , <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> , the answer is fairly simple.. The conformance statement is generated from code (ie. it comes from server code and not from the spec) and the code that generates it doesn't include the path.</p>\n<p>It wouldn't be too hard to add the path. Contributions welcome. :)</p>",
        "id": 153851128,
        "sender_full_name": "James Agnew",
        "timestamp": 1475097879
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> </p>\n<blockquote>\n<p>The conformance statement is generated from code</p>\n</blockquote>\n<p>thanks for the info,  it's helpful to know that the path is currently just missing.</p>\n<blockquote>\n<p>Contributions welcome. :)<br>\nI'm not into Java so I'll pass here for now (sorry). I hope to find some time to investigate the project eventually and perhaps contribute.</p>\n</blockquote>",
        "id": 153851233,
        "sender_full_name": "Günter Zöchbauer",
        "timestamp": 1475137133
    },
    {
        "content": "<p>Do we have style suggestions for defining resource search parameters for elements which are of type Resource and therefore may be referred to now using a reference (reference) or an identifier (token)? Should we take a reference-first stance such that:</p>\n<p>resource ...<br>\n   foo 0..1 Reference(FooResource)</p>\n<p>Search Parameters (name datatype element description):<br>\nfoo  reference resource.foo \"Search by reference\"<br>\nfooIdentifier token resource.foo \"Search by Identifier\"</p>",
        "id": 153851531,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1475476787
    },
    {
        "content": "<p>I'd rather you just define a reference type, and we resolve whatever we want to do as part of the reference search parameter type </p>",
        "id": 153851532,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475476881
    },
    {
        "content": "<p>because it's the same for every single reference search parameter</p>",
        "id": 153851534,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475477431
    },
    {
        "content": "<p>Currently I am just including the reference search.</p>\n<p>Then it would be: <br>\nGET [base]/Resource?foo=abc (resolve against reference or identifier.value) or<br>\nGET [base]/Resource?foo=Resource/abc (resolve against reference only) or<br>\nGET [base]/Resource?foo=[system]|[value] (resolve against identifier only)</p>\n<p>Probably need to include | for identifier searches to resolve amgibuity - will the reference argument validation permit | ?</p>",
        "id": 153851535,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1475477791
    },
    {
        "content": "<p>I think that's a workable approach - we'd need to update the documentation for it, though. Does anyone have any other opinion about this?</p>",
        "id": 153851536,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475478061
    },
    {
        "content": "<p>Also, INFORMATION: Resource.foo: Search parameter 'Resource.foo' had no found values in an example - isn't working - this message is resported even when there are instances of the element in examples (eg. required elements).</p>",
        "id": 153851538,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1475484670
    },
    {
        "content": "<p>Wondering what to do with sorting on those fields too, if at all.</p>",
        "id": 153851546,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1475494464
    },
    {
        "content": "<p>If you need to I'd sort on reference then on identifier (system,value).</p>",
        "id": 153851547,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1475495550
    }
]