[
    {
        "content": "<p>so... I'm poking about a seeing how far I can get with a CQL -&gt; JS transpiler</p>",
        "id": 153833230,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466053983
    },
    {
        "content": "<p>(with vision of an open-source component that will generate modules capable of running on server and in browser)</p>",
        "id": 153833231,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466054040
    },
    {
        "content": "<p>one of the requirements will be a set of module that can be injected into the transpiled CQL libraries that will handle the FHIR requests (<code>Retrieve</code> expressions)</p>",
        "id": 153833232,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466054116
    },
    {
        "content": "<p>the model for these requests is very tight:</p>",
        "id": 153833233,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466054144
    },
    {
        "content": "<div class=\"codehilite\"><pre>&quot;expression&quot; : {\n   &quot;dataType&quot; : &quot;{http://hl7.org/fhir}Encounter&quot;,\n   &quot;type&quot; : &quot;Retrieve&quot;,\n   &quot;codeProperty&quot; : &quot;type&quot;,\n   &quot;codes&quot; : {\n      &quot;name&quot; : &quot;Encounter Inpatient&quot;,\n      &quot;type&quot; : &quot;ValueSetRef&quot;\n   },\n   &quot;dateProperty&quot; : &quot;period.end.value&quot;,\n   &quot;dateRange&quot; : {\n      &quot;name&quot; : &quot;Measurement Period&quot;,\n      &quot;type&quot; : &quot;ParameterRef&quot;\n   }\n</pre></div>",
        "id": 153833234,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466054150
    },
    {
        "content": "<p>ie the retreive method will get only four basic parameters: \"resource type\", \"coded valueset\", \"date range\" and \"patient id\"</p>",
        "id": 153833235,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466054308
    },
    {
        "content": "<p>I reckon I'm about 1 &amp; 4 months of having a transpiler that will speak pigeon CQL so I'm looking to line up a server I can poke to get interesting test data</p>",
        "id": 153833236,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466054429
    },
    {
        "content": "<p>(pigeon CQL being defined as CQL that should be aquequate for me to encode some of the clinical expressions I want for the job at hand)</p>",
        "id": 153833237,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466054475
    },
    {
        "content": "<p>A server loaded with known good test data would be fantastic. We've been using the various sandboxes and just loading the data on an ad-hoc basis, but something with a predictable set would be great.</p>",
        "id": 153833238,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1466054817
    },
    {
        "content": "<p>and when I say \"CQL to Javascript transpiler\", what I really mean is \"ELM/JSON -&gt; javascript transpiler\" thanks to work already done by <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> etal <a href=\"https://github.com/cqframework/clinical_quality_language/blob/master/Src/java/README.md\" target=\"_blank\" title=\"https://github.com/cqframework/clinical_quality_language/blob/master/Src/java/README.md\">here</a></p>",
        "id": 153833239,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466054828
    },
    {
        "content": "<p>I'm winning over my hospital IT team to exposing our data ponds as FHIR resources...</p>",
        "id": 153833240,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466054894
    },
    {
        "content": "<p>but that will be months (at least) away :-)</p>",
        "id": 153833241,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466054909
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> yes I'm thinking almost need a set of \"standard patients\" </p>",
        "id": 153833242,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466055018
    },
    {
        "content": "<p>\"Alison Anderson\" the 32 mother of 2 who is due for a pap smear</p>",
        "id": 153833243,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466055061
    },
    {
        "content": "<p>\"Bruce Brannan\" the 55 overweight, smoking diabetic</p>",
        "id": 153833244,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466055095
    },
    {
        "content": "<p>\"Charles Clover\" a 4 year-old with a snotty nose</p>",
        "id": 153833245,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466055155
    },
    {
        "content": "<p>but what I'm really looking for is wee module I can use as the basis for an injectable FHIR client to handle <code>Retrieve</code> operations...</p>",
        "id": 153833246,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466055251
    },
    {
        "content": "<p><a href=\"https://www.npmjs.com/package/request-promise\" target=\"_blank\" title=\"https://www.npmjs.com/package/request-promise\">this</a> module works pretty well </p>",
        "id": 153833247,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466055412
    },
    {
        "content": "<p>I can smell awesomeness</p>",
        "id": 153833252,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466056785
    },
    {
        "content": "<p>I'm just not exactly sure if this is going to be one of those complex tasks that just melts away into \"done\" with a good poke... or if it is a rabbit hole</p>",
        "id": 153833253,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466056849
    },
    {
        "content": "<p>but it feels like just a case of getting a few clever, largely complete, components and just getting them to talk</p>",
        "id": 153833254,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466056931
    },
    {
        "content": "<p>but I've never written a transpiler before :-/</p>",
        "id": 153833255,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466056960
    },
    {
        "content": "<p>but I've been reading about Arden syntax and the 'curly braces problem' for decades</p>",
        "id": 153833256,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466057388
    },
    {
        "content": "<p>and it now seems very doable to make \"shareable knowledge artefacts\" doable - which would really set FHIR or fire</p>",
        "id": 153833257,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466057448
    },
    {
        "content": "<p>(in a good way, not in a \"reduce to pile ash\" way)</p>",
        "id": 153833258,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466057473
    },
    {
        "content": "<p>:-)</p>",
        "id": 153833259,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466057475
    },
    {
        "content": "<p>anyway if anyone want to assist let me know</p>",
        "id": 153833263,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466057817
    },
    {
        "content": "<p>otherwise I'll just keep chipping away</p>",
        "id": 153833264,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466057830
    },
    {
        "content": "<p>I'm wanting to a simple <code>Retrieve</code> interface operational early on because theres a few vague spots and its the thing that has taken 20 years to nut out</p>",
        "id": 153833267,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466057976
    },
    {
        "content": "<p>all the rest is just language details in the language (a lot of details but all seems pretty linear)</p>",
        "id": 153833269,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466058037
    },
    {
        "content": "<p>I think I have identified my first test case</p>",
        "id": 153833289,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466060125
    },
    {
        "content": "<p><a href=\"https://github.com/cqframework/clinical_quality_language/blob/master/Documents/Scratch/Test.cql\" target=\"_blank\" title=\"https://github.com/cqframework/clinical_quality_language/blob/master/Documents/Scratch/Test.cql\">https://github.com/cqframework/clinical_quality_language/blob/master/Documents/Scratch/Test.cql</a></p>",
        "id": 153833290,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466060127
    },
    {
        "content": "<p>Love the idea of an injectable Retrieve handler, that's exactly the point of the \"using\" statements within CQL, to support pluggable data model definitions.</p>",
        "id": 153833348,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1466097434
    },
    {
        "content": "<p>Happy to help however I can, though JS is not my native tongue, and there's the whole 200 hours thing :)</p>",
        "id": 153833349,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1466097454
    },
    {
        "content": "<p>Awesome. Help with some very simple cql scripts doing simple operations on constants would be a great help</p>",
        "id": 153833393,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466111945
    },
    {
        "content": "<p>And getting some simple stable fhir rest endpoints I could just point at would be a time saver. </p>",
        "id": 153833394,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466112013
    },
    {
        "content": "<p>I was happy with my progress yesterday and I have all day to work on it today </p>",
        "id": 153833395,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466112072
    },
    {
        "content": "<p>I've been using this one: <a href=\"http://fhirtest.uhn.ca/baseDstu3\" target=\"_blank\" title=\"http://fhirtest.uhn.ca/baseDstu3\">http://fhirtest.uhn.ca/baseDstu3</a> with the 1.4 model info in the CQL 1.1 DSTU branch, it's been working flawlessly since the connectathon.</p>",
        "id": 153833396,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1466112216
    },
    {
        "content": "<p>Do we have any simple cql that would make sense against that data set? </p>",
        "id": 153833397,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466112442
    },
    {
        "content": "<p>This one is quite simple: <a href=\"https://hl7-fhir.github.io/payerextract/library-cbp.cql\" target=\"_blank\" title=\"https://hl7-fhir.github.io/payerextract/library-cbp.cql\">https://hl7-fhir.github.io/payerextract/library-cbp.cql</a></p>",
        "id": 153833398,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1466112809
    },
    {
        "content": "<p>cool will poke that!</p>",
        "id": 153833399,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466114397
    },
    {
        "content": "<p>FYI, wip is <a href=\"https://bitbucket.org/erichbschulz/cql-compiler\" target=\"_blank\" title=\"https://bitbucket.org/erichbschulz/cql-compiler\">https://bitbucket.org/erichbschulz/cql-compiler</a></p>",
        "id": 153833400,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466114406
    },
    {
        "content": "<p>getting a compile error :-( <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> - issue <a href=\"https://jira.oncprojectracking.org/browse/CQLIT-6\" target=\"_blank\" title=\"https://jira.oncprojectracking.org/browse/CQLIT-6\">here</a></p>",
        "id": 153833401,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466118419
    },
    {
        "content": "<p>well I'm made some JS <a href=\"https://bitbucket.org/erichbschulz/cql-compiler/commits/ba6eed16da87e545674d80f5bd0c1a1beee804b0?at=master\" target=\"_blank\" title=\"https://bitbucket.org/erichbschulz/cql-compiler/commits/ba6eed16da87e545674d80f5bd0c1a1beee804b0?at=master\">and I can run it</a></p>",
        "id": 153833422,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466146191
    },
    {
        "content": "<p>which started out life as <a href=\"https://bitbucket.org/erichbschulz/cql-compiler/src/ba6eed16da87e545674d80f5bd0c1a1beee804b0/test_cds/test1.cql?at=master&amp;fileviewer=file-view-default\" target=\"_blank\" title=\"https://bitbucket.org/erichbschulz/cql-compiler/src/ba6eed16da87e545674d80f5bd0c1a1beee804b0/test_cds/test1.cql?at=master&amp;fileviewer=file-view-default\">this CQL</a></p>",
        "id": 153833424,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466146461
    },
    {
        "content": "<p>That's fantastic!</p>",
        "id": 153833551,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1466204208
    },
    {
        "content": "<p>I logged a comment on your issue report.</p>",
        "id": 153833552,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1466204224
    },
    {
        "content": "<p>heya</p>",
        "id": 153833553,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466204272
    },
    {
        "content": "<p>well I just managed to get 2 solid days on it to get something to show for myself</p>",
        "id": 153833554,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466204305
    },
    {
        "content": "<p>its a big job</p>",
        "id": 153833555,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466204309
    },
    {
        "content": "<p>but I'm pretty excited about the possibilities that CQL+FHIR opens up</p>",
        "id": 153833556,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466204333
    },
    {
        "content": "<p>I'm bit of node noob myself so daresay I'll be falling into all kind of noob holes</p>",
        "id": 153833557,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466204391
    },
    {
        "content": "<p>but all seems pretty doable</p>",
        "id": 153833558,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466204405
    },
    {
        "content": "<p>I was disapointed that GELLO never made it anywhere</p>",
        "id": 153833559,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466204429
    },
    {
        "content": "<p>I tried to encourage the folk behind it to publish and open-source version of their interpreter(or whatever it was) but they didnt want to play</p>",
        "id": 153833560,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466204469
    },
    {
        "content": "<p>I never thought that they had one. There were too many type/semantic errors in gello. After all, it's actually OCL, and I had an OCL implementation then. Such as you could (weird hybrid typing system that was only partially resolved by OCL2) but GELLO made it worse</p>",
        "id": 153833565,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466204869
    },
    {
        "content": "<p>tbh I never looked below the surface because without an available interpreter I couldn't see it flying</p>",
        "id": 153833567,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466204943
    },
    {
        "content": "<p>it is really the \"shareable knowledge artefacts\" that seriously floats my boat</p>",
        "id": 153833568,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466204983
    },
    {
        "content": "<p>and with the JS ecosystem becoming so mature over the last few years the possibility of being able to nail server *and* browser execution in a single chunk is pretty handy</p>",
        "id": 153833569,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466205084
    },
    {
        "content": "<p>I really shouldn't be writing a compiler :-)</p>",
        "id": 153833570,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466205129
    },
    {
        "content": "<p>it is going to be very bad :-)</p>",
        "id": 153833571,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466205136
    }
]