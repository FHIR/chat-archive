[
    {
        "content": "<p>I can't find any discussion about yaml for fhir, but it seems logical to add following content-types to fhir spec: </p>\n<ul>\n<li>application/fhir+yaml</li>\n<li>appliaction/yaml</li>\n</ul>\n<p>yaml subset  isomorphic to json (can be converted from one format to another and vice versa without any additional meta-information) and adding yaml support will be very cheap, but yaml less verbose and therefore more human-readable. In additional to compactness and readability yaml is used in many huge opensource projects like kubernetes and also, pretty popular among web developers.</p>\n<p>Here example of the same resource in both formats:</p>\n<p>application/json:</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"p\">{</span>\n   <span class=\"nt\">&quot;resource&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n     <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;given&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n       <span class=\"s2\">&quot;Peter&quot;</span>\n      <span class=\"p\">]</span>\n     <span class=\"p\">}</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1882cce7-dd00-4c9d-a1f5-adc5f6747955&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;resourceType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Patient&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;meta&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n     <span class=\"nt\">&quot;lastUpdated&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;2018-09-19T17:44:01.252Z&quot;</span><span class=\"p\">,</span>\n     <span class=\"nt\">&quot;versionId&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;167&quot;</span><span class=\"p\">,</span>\n     <span class=\"nt\">&quot;tag&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"p\">{</span>\n       <span class=\"nt\">&quot;system&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://aidbox.io&quot;</span><span class=\"p\">,</span>\n       <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;created&quot;</span>\n      <span class=\"p\">}</span>\n     <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n   <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n</pre></div>\n\n\n<p>application/yaml:</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">resource</span><span class=\"p p-Indicator\">:</span>\n      <span class=\"l l-Scalar l-Scalar-Plain\">name</span><span class=\"p p-Indicator\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">given</span><span class=\"p p-Indicator\">:</span>\n            <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">Peter</span>\n      <span class=\"l l-Scalar l-Scalar-Plain\">id</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">1882cce7-dd00-4c9d-a1f5-adc5f6747955</span>\n      <span class=\"l l-Scalar l-Scalar-Plain\">resourceType</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Patient</span>\n      <span class=\"l l-Scalar l-Scalar-Plain\">meta</span><span class=\"p p-Indicator\">:</span>\n        <span class=\"l l-Scalar l-Scalar-Plain\">lastUpdated</span><span class=\"p p-Indicator\">:</span> <span class=\"s\">&#39;2018-09-19T17:44:01.252Z&#39;</span>\n        <span class=\"l l-Scalar l-Scalar-Plain\">versionId</span><span class=\"p p-Indicator\">:</span> <span class=\"s\">&#39;167&#39;</span>\n        <span class=\"l l-Scalar l-Scalar-Plain\">tag</span><span class=\"p p-Indicator\">:</span>\n          <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">system</span><span class=\"p p-Indicator\">:</span> <span class=\"s\">&#39;https://aidbox.io&#39;</span>\n            <span class=\"l l-Scalar l-Scalar-Plain\">code</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">created</span>\n</pre></div>\n\n\n<p>To play with both formats visit <a href=\"https://www.json2yaml.com/\" target=\"_blank\" title=\"https://www.json2yaml.com/\">https://www.json2yaml.com/</a></p>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> Is it possible that yaml will appear in fhir spec in near future?<br>\n<span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> yaml supports comments and multiline strings ;)</p>",
        "id": 154007381,
        "sender_full_name": "Andrew Tropin",
        "timestamp": 1539181015
    },
    {
        "content": "<p>All things are possible.  However, every new syntax imposes an additional burden on implementers and/or further fragments the interoperability community.  Our objective is to drive standardization, which in most situations means <em>reducing</em> the number of available options.  The syntaxes we support right now are there because they address the needs of different communities and/or their technology stacks have capabilities that can't be easily replicated elsewhere.  It's not clear whether those criteria apply to YAML.  If we were to introduce it, it would need to be something we'd explore in R5.  The door is closed for such major enhancements for R4.</p>",
        "id": 154007415,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539183501
    },
    {
        "content": "<p>it's possible... if enough people ask for it. It's not disallowed.</p>",
        "id": 154007519,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539190645
    },
    {
        "content": "<p>yaml is popular for API- human interaction - kubernetes, ansible, OpenAPI use it.<br>\nIt's almost free because of isomorphism with json and mature libraries for all languages - so it's easy for implementers add one dependency and couple  lines  of code to support it :)</p>",
        "id": 154007644,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539199799
    },
    {
        "content": "<p>technically it's just json dialect :)</p>",
        "id": 154007645,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539199849
    },
    {
        "content": "<p>not heavyweight new format like xml or rdf</p>",
        "id": 154007646,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539199872
    },
    {
        "content": "<p>it's more than a couple of lines of code for me to support it</p>",
        "id": 154007648,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539200058
    },
    {
        "content": "<p>Why?</p>",
        "id": 154007650,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539200097
    },
    {
        "content": "<p>I don't have a YAML parser at hand.</p>",
        "id": 154007652,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539200136
    },
    {
        "content": "<p>Do you mean delphi?</p>",
        "id": 154007654,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539200209
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  yaml has comments!</p>",
        "id": 154007655,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539200256
    },
    {
        "content": "<p>The question for me is: \"What community does it give us access to that the existing formats don't; or What capabilities does it enable that the other formats don't?\"  The benefit provided would need to outweigh the additional impact on the implementer community to support another syntax.  \"It's easy\", \"It's close to JSON\" and \"It's popular\" don't answer those questions.  \"It's more concise than JSON\" is a possible benefit, but it's not clear to me that the byte reduction on a compressed stream would be more than a percentage point or so, if that.  If that plus the slight improvement in human-readability are the only benefits, it's not clear to <em>me</em> that it'd be worth it. However, I'm just one opinion.  Are there other benefits YAML would bring to the table that wouldn't be supported by the other syntaxes?</p>",
        "id": 154007659,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539200395
    },
    {
        "content": "<p><a href=\"http://sangsoonam.github.io/2017/03/13/yaml-vs-json.html\" target=\"_blank\" title=\"http://sangsoonam.github.io/2017/03/13/yaml-vs-json.html\">http://sangsoonam.github.io/2017/03/13/yaml-vs-json.html</a> - it's machine readable format for human. I predict, it will be actively used in all education tracks and materials because of readability and less-type. It looks not big deal at first glance - but it is!</p>",
        "id": 154007664,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539200562
    },
    {
        "content": "<p>For example, all kubernetes tutorials switched to yaml from json.</p>",
        "id": 154007667,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539200875
    },
    {
        "content": "<p>Or checkout this - <a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md\" target=\"_blank\" title=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md\">https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.1.md</a>. In less formal Open API docs you will see only yaml</p>",
        "id": 154007668,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539200951
    },
    {
        "content": "<p>I'm pretty sure we have to sell FHIR to modern web developers. And yaml is a small but sweet feature, they will expect from API specification.</p>",
        "id": 154007670,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539201246
    },
    {
        "content": "<p>Aren't the serialization formats going to be normative in R4 ? ...and so no additions / changes to the existing JSON and XML?</p>",
        "id": 154007748,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1539206270
    },
    {
        "content": "<p>We do not need make yaml normative - let it be draft forever :)</p>",
        "id": 154007749,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539206385
    },
    {
        "content": "<p>we can still add new formats if we want</p>",
        "id": 154007755,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539207934
    },
    {
        "content": "<p>In theory we could deprecate a format at some point too.  And different formats will be at different stages.  JSON and XML are going Normative, but RDF is still STU in R4.</p>",
        "id": 154007801,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539210959
    },
    {
        "content": "<p>.. and will be for a long time....</p>",
        "id": 154007802,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539210983
    },
    {
        "content": "<p>I find YAML very useful because of the comments.. so for config files or examples - even though these are going to end up in an object model that is no more complex than json/xml (i.e. the comments are not part of the serialization).. having the ability to add comments is fantastic for documentation</p>",
        "id": 154007850,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1539227342
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> I think YAML would be interesting for the genomics research community. I am part of the GA4GH Clinical &amp; Phenotypic Data Capture Work Stream and I've been pushing the use of FHIR as a potential replacement of other standards such as Phenopackets (<a href=\"http://phenopackets.org/\" target=\"_blank\" title=\"http://phenopackets.org/\">http://phenopackets.org/</a>). Most of the arguments against using FHIR are around complexity (which by the way I don't agree with). I think a YAML rendering of FHIR would bring the perceived complexity down and might make it easier to author small snippets of information by hand (which apparently is something that some users want to do).</p>",
        "id": 154007861,
        "sender_full_name": "Alejandro Metke",
        "timestamp": 1539229157
    },
    {
        "content": "<p>it's a classic trade-off. Working with other users brings the advantage of collaboration but also means you deal with their uses as well as your own.</p>",
        "id": 154007863,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539229257
    },
    {
        "content": "<p>Hey Alejandro,<br>\nKeep me in the loop re Genomics. Would be good to understand where this is heading.</p>",
        "id": 154007867,
        "sender_full_name": "Philip Wilford",
        "timestamp": 1539229382
    },
    {
        "content": "<blockquote>\n<p>Hey Alejandro,<br>\nKeep me in the loop re Genomics. Would be good to understand where this is heading.</p>\n</blockquote>\n<p>Sure, will do.</p>",
        "id": 154007871,
        "sender_full_name": "Alejandro Metke",
        "timestamp": 1539229509
    },
    {
        "content": "<p>Thanks</p>",
        "id": 154007879,
        "sender_full_name": "Philip Wilford",
        "timestamp": 1539229749
    },
    {
        "content": "<p>I understand that there are converters back and forth between JSON and YAML but the thing I don't like about YAML is that the spacing matters and it's hard to see that 'by eye'.   So, if you are hand-creating YAML files or even editing an existing one (by hand), it is very easy to 'mess it up' and then get some nondescript error when you go to use this.   This has happened to me many times with YAML files for docker-compose!   So, other than comments in YAML, I'm not sure of it's benefits compared to JSON.</p>",
        "id": 154007974,
        "sender_full_name": "John Silva",
        "timestamp": 1539258235
    }
]