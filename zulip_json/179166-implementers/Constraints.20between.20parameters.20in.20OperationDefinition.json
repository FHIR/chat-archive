[
    {
        "content": "<p>We have a custom operation for which different subsets of the output parameters are returned depending on the input. That is, we have constraints between the optional output parameters A, B, and C of the form \"Either (A AND B) are returned OR C is returned\". Going further, the constraints actually depend on the value passed in the input parameters. Is there any (machine-readable) way to encode one of both of such constraints in the <code>OperationDefinition</code> resource, as one would do with FHIRPath constraints for a profile?</p>",
        "id": 153972351,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1530186625
    },
    {
        "content": "<p>is your \"input\" a static thing (i.e. something that you define once and always behaves in a similar way or \"dynamic\", (e.g. it depends on a previous step in the sequence)?</p>",
        "id": 153972352,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530186925
    },
    {
        "content": "<p>We have a challenge about dynamic behaviour when looking at \"workflow profiling\". <br>\nexample:<br>\nAfter receiving a medicationRequest, and after administration is given, the medicationAdministrationResource <br>\na) MUST contain a .request value filled in<br>\nb) the value of the .request MUST be the same as the request ID that was received</p>",
        "id": 153972353,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1530187033
    },
    {
        "content": "<p>The constraints linked to input would roughly be of the form</p>\n<p><em>If input parameter X has value\"y\", then the return <code>Parameters</code> resource must contain parameters A and B, otherwise it must contain parameter C.</em> </p>\n<p>(actually, these would be constraints on the possible parts of a multi-part parameters). Here, \"y\" would be a fixed value from a ValueSet, so I guess that would make it \"static\" in your parlance?</p>\n<p>For us, even just having fixed constraints with no input dependence to specify possible consistent subsets of return parameters would also be interesting.</p>",
        "id": 153972381,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1530194064
    },
    {
        "content": "<p>Of course, I suppose any such constraints would be of limited value if there is no way to automatically check them (i.e. to validate a <code>Parameters</code>instance against the corresponding <code>OperationDefinition</code>) and I am not aware of any way to do that. If there was a way to specify constraints in <code>OperationDefinition</code>, I suppose it would be possible to convert it into a profile on <code>Parameters</code>and validate using that.</p>",
        "id": 153972382,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1530194138
    },
    {
        "content": "<p>In R4, you can use Parameters.inputProfile to specify the profile that applies to the inbound Parameters instance.  And you can declare a constraint on the root that reflects your invariant.  In R3 and R2 you'll need an extension, though we should soon be publishing a standard extension for that purpose.</p>",
        "id": 153972423,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530210899
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> Perfect, thanks!</p>",
        "id": 153972514,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1530271168
    }
]