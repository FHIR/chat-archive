[
    {
        "content": "<p>Question about <a href=\"https://build.fhir.org/documentreference-operation-generate.html\">DocumentReference/$generate</a>:<br>\nIt sounds as if the <code>persist</code> parameter should be boolean but it is Binary. What's the sematics here? If a Binary is provided in the persists parameter, it will be persisted? But then why is the <code>url</code> parameter mandatory if submitting the input as Binary is an option...?<br>\nDoes <code>persist</code> include persisting the resulting DocumentReference or just the submitted Binary?</p>",
        "id": 254579401,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1632420616
    },
    {
        "content": "<p>I think I have always read that as Boolean.. but it clearly doesn't say that, it says Binary.</p>",
        "id": 254580717,
        "sender_full_name": "John Moehrke",
        "timestamp": 1632421208
    },
    {
        "content": "<p>Yep. I was confused too, Booleans are kind of binary...</p>",
        "id": 254583187,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1632422221
    },
    {
        "content": "<p>It's to allow 0 (No) 1(yes) 2(I guess) 3(could do) 4(If I have to) and 5(you tell me).  Boolean just didn't cover the possibilities well enough</p>",
        "id": 254591371,
        "sender_full_name": "David Pyke",
        "timestamp": 1632425501
    },
    {
        "content": "<p>It's binary, just a very short binary. 0 = no, 1 = yes. But you have to base64 encode it first.</p>",
        "id": 254595878,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1632427386
    },
    {
        "content": "<p>Boolean is actually insufficient because I still don't know whether this persists the (FHIR/CDA-)Document I put into the operation or the DocumenteReference it returns .<br>\nSo the options are at least as follows:<br>\n0 - none<br>\n1 - document only<br>\n2 - DocumentReference only<br>\n3 - both<br>\n4 - document + OperationOutcome in case of error</p>",
        "id": 254608390,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1632432489
    },
    {
        "content": "<p>I would really like to see this advance, and would like to be involved. There is clearly a linkage to IHE OnDemand and Deferred Creation.</p>",
        "id": 254703229,
        "sender_full_name": "John Moehrke",
        "timestamp": 1632490008
    },
    {
        "content": "<p>Assuming that persist=true not only creates a DR but also persists both the original (CDA-/FHIR-)Document AND the DR, that would be the most efficient \"Provide Document\" interaction possible <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 254709457,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1632492364
    },
    {
        "content": "<p>Basically just yeeting the document at the Repo <span aria-label=\"rolling on the floor laughing\" class=\"emoji emoji-1f923\" role=\"img\" title=\"rolling on the floor laughing\">:rolling_on_the_floor_laughing:</span></p>",
        "id": 254709940,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1632492531
    },
    {
        "content": "<p>Currently the in-parameter only allows to submit a url. I think this should be broardened to also allow for the submission of a Composition resource as an input  parameter. Having to expose the Composition on a restful endpoint before calling the operation seems unnecessarily complicated.<br>\nI wonder if the error with the persist (Binary) parameter happened because it got tangled up with the intention to also allow the input of CDAs as Binaries...?</p>",
        "id": 255594939,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1633016086
    },
    {
        "content": "<p>I added <a href=\"https://jira.hl7.org/browse/FHIR-34043\">https://jira.hl7.org/browse/FHIR-34043</a> for the improvement of this operation.</p>",
        "id": 255596794,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1633016809
    },
    {
        "content": "<p>I'll be needing an implementable $generate-Operation for a current project. So I have spent some time thinking about this.</p>\n<p>Here's my suggestion:<br>\nInput-Parameters for $generate:<br>\n<strong>fhir-document</strong> 0..1: Bundle (for FHIR-Documents) or alternatively<br>\n<strong>non-fhir-document</strong> 0..1: Binary (for non FHIR Documents such as CDA or other non FHIR-Data to generate the DocRef from maybe IHE-XDS-Metadata). <br>\n<strong>non-fhir-document-type</strong> 0..1 code: In case of Binary input an additional parameter might be needed to indicate how to interpret the input.  Binary.contentType might be insufficent here...? Binding to a VS could be used to indicate what sorts of Binary data are allowed here.<br>\n<strong>targetEndpoint</strong> 0..1 uri: Beyond the plain Field mapping I would expect the operation to also attempt to resolve things like Patient democraphics, Author information or Encounter information from the Bundle/CDA/ebXML to actual FHIR Resources on the Server and fill the references in DocumentReference accordingly. (Although the OperationDefinition should not make any assumtions on what the matching criteria are, since they might differ between use cases and jurisdictions)<br>\nAssuming that the $generate Operation could be provided by third party services other than the Server that eventually processes the resulting DocumentReference, an additional parameter will be needed to provide the Endpoint of the Server where the matching Patient/Ancounter/Author should be searched.</p>\n<p>The return parameter can remain unchanged:<br>\n*docRef: DocumentReference 1..1 </p>\n<p>Any opinions on whether that sounds like a good idea? I wonder if this is still in the spirit of what the $generate-Operation was initially intended to be. Documentation is sparse, so I'm basically guessing what it was intended to do...<br>\n<span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> <br>\nI'd be happy to create and test drive an OperationDefinition accordingly.</p>",
        "id": 273223603,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1645792884
    },
    {
        "content": "<p>IHE did accept the new work item to look at these kind of improvements to MHD. I hope you can join that effort, and thus I would be happy to see anything you propose.</p>",
        "id": 273223828,
        "sender_full_name": "John Moehrke",
        "timestamp": 1645793024
    },
    {
        "content": "<p>I am not exactly understanding your  proposal here.  In normal XDS today there is a On-Demand documentReference type, where the potential-publisher advertises the set of document types it is willing to create on-demand. Thus a consumer that wants one, just asks for one to be created. In this scenario, as part of a FHIR $operation, one would just pass in the on-demand documentReference, and get back the document created. I think there is a proposal for this kind of operation.</p>",
        "id": 273224255,
        "sender_full_name": "John Moehrke",
        "timestamp": 1645793304
    },
    {
        "content": "<p>There is work in the IPS space to do this, not exactly this same way, but rather compatible.</p>",
        "id": 273224322,
        "sender_full_name": "John Moehrke",
        "timestamp": 1645793361
    },
    {
        "content": "<p>I could see a $operation (patient, profile[, timeframe])</p>",
        "id": 273224437,
        "sender_full_name": "John Moehrke",
        "timestamp": 1645793448
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191478\">@Oliver Egger</span> ?</p>",
        "id": 273224465,
        "sender_full_name": "John Moehrke",
        "timestamp": 1645793473
    },
    {
        "content": "<p>I believe, on demand document creation is a different thing. I am dealing with a situation of  \"I already have a structured document (CDA, FHIR or other) and need a DocumentReference, so I need someone to do the field mapping for me, presumably some terminology-lookups an figure out the correct patient/author references f√ºr the DocumentReference. </p>\n<p>The next step could be to POST the document with the newly created DocumentReference to a simple FHIR Server for Storage, of - if sufficent Metadata has been provided/added - submit to an MHD Endpoint.</p>",
        "id": 273226651,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1645794734
    },
    {
        "content": "<p>Basically a Service that does this: <a href=\"http://hl7.org/fhir/composition-mappings.html#fhirdocumentreference\">http://hl7.org/fhir/composition-mappings.html#fhirdocumentreference</a><br>\n(plus some searching/resolving....)</p>",
        "id": 273226720,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1645794780
    },
    {
        "content": "<p>The same service could be used to map ebXML to DocumentReference or create DocumentReferences based on CDA header information</p>",
        "id": 273226902,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1645794880
    },
    {
        "content": "<p>oh, that would be a nice service.   More detail in the PCC technical framework. It would also need to be informed by the metadata mapping rules of the community -- ala the IHE Metadata Handbook.</p>",
        "id": 273227404,
        "sender_full_name": "John Moehrke",
        "timestamp": 1645795138
    },
    {
        "content": "<p>I would like to see that written up as an issue we consider this quarter.</p>",
        "id": 273227433,
        "sender_full_name": "John Moehrke",
        "timestamp": 1645795158
    },
    {
        "content": "<p>I'm trying to keep it somewhat IHE/XDS agnostic for now, just assume we need a plain old DocumentReference based on a plain old Document-Bundle.  But I am hoping, that the operation can be adopted into FHIR core and from there be constrained to serve more specific mapping requirements, such as XDS</p>",
        "id": 273228450,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1645795762
    },
    {
        "content": "<p>hence the ping</p>",
        "id": 273228527,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1645795806
    },
    {
        "content": "<p>understood. the generic operation could be less  specifically defined... but profiled into MHD it could add more specifics</p>",
        "id": 273228554,
        "sender_full_name": "John Moehrke",
        "timestamp": 1645795820
    },
    {
        "content": "<p>Yes. For example you could profile the input Bundle and specify the minimum requirements for the Composition metadata in order for the mapping to work. Same for the output DocRef: Could be constrained to comply to MHD minimal Metadata requirements</p>",
        "id": 273228735,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1645795929
    },
    {
        "content": "<p>I was just looking at the $generate operation, and it doesn't make sense.   I assume the input url is meant to point to the \"document\", but are there any expectations around what that document is? I'm guessing the description doesn't mean to say \"FHIR Document (i.e. Bundle)\" and is purposely using \"document\" loosely, but I'm not sure. </p>\n<p>The description of the persist parameter talks about storing the \"document at the document end-point (/Document).\" First of all, I don't think there is a /Document endpoint; the closest we come is the /Bundle endpoint, but then if we accept that, does it change the interpretation of \"document\" throughout?</p>\n<p>Finally, I don't see how the operation has enough information to work. I give the server an arbitrary URL and it's suppose to be able to retrieve whatever \"document\" is there and extract enough information to fill out a DocumentReference? (a) Good luck filling out more than contentType and size when the url is for a plain text file, and (b) If the document itself has enough information in it to fill out a DocumentReference, why am I bothering with the operation, or with DocumentReference itself?</p>\n<p>I think I'm missing some fundamental concept here of how this is supposed to work.</p>",
        "id": 273780228,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1646214564
    },
    {
        "content": "<p>Yes, there are CR already pointing that out. What we are trying to do is figure out who originally crafted the operation to understand what they were thinking, and if anyone has implemented it. Otherewise we were thinking of changing it as Simone has recommended.</p>",
        "id": 273796476,
        "sender_full_name": "John Moehrke",
        "timestamp": 1646222778
    },
    {
        "content": "<p>The example given on the page differs from the formal definition, but is more logical.  So it seems the definition is wrong.</p>",
        "id": 274865414,
        "sender_full_name": "John Moehrke",
        "timestamp": 1646932082
    },
    {
        "content": "<p>I don't think it was me</p>",
        "id": 274884922,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646941059
    },
    {
        "content": "<p>But I think the 'document' has to be a FHIR Document, so that it generate a matching DocumentReference</p>",
        "id": 274885034,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646941096
    },
    {
        "content": "<p>IHE is considering an option like this, but more flexible yet linked to IHE defined mapping and IHE defined metadata handbook guidance.</p>",
        "id": 274888728,
        "sender_full_name": "John Moehrke",
        "timestamp": 1646942906
    }
]