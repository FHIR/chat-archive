[
    {
        "content": "<p>All the conformance resources that have canonical uris. There are a few valueSetUri elements that explicitly use them, but many places are still Reference(StructureDefinition).</p>",
        "id": 153829346,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1464036698
    },
    {
        "content": "<p>?</p>",
        "id": 153829347,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464036741
    },
    {
        "content": "<p>Question: is it expected that a server *ever* try to search canonical URIs to resolve a Reference.reference?</p>",
        "id": 153829348,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1464036782
    },
    {
        "content": "<p>no</p>",
        "id": 153829351,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464036807
    },
    {
        "content": "<p>it's not disallowed, but it's not expected</p>",
        "id": 153829352,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464036818
    },
    {
        "content": "<p>So if only Reference(StructureDefinition) is available, the canonical URI can't be reliably used?</p>",
        "id": 153829354,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1464036834
    },
    {
        "content": "<p>if you publish at that address, as we recommend, then yes. Otherwise, no for your given value of 'reliable'</p>",
        "id": 153829357,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464036902
    },
    {
        "content": "<p>Is there any use case discussion on this in the wiki or something? The canonical URIs seem pretty ham-strung if they're not used whenever referencing, unless this is a \"feature\" for which I'm not understanding the utility....</p>",
        "id": 153829362,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1464037101
    },
    {
        "content": "<p>I thnk it's all in our past dicussion tracks...</p>",
        "id": 153829364,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464037175
    }
]