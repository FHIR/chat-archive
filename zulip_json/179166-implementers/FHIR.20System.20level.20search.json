[
    {
        "content": "<p>Hello,</p>\n<p>What are the HTTP Verbs supporting for FHIR system level search? I have seen only a GET URL in FHIR website for system level search. Is there any option for POST?</p>",
        "id": 154026905,
        "sender_full_name": "Swathy Parameswaran",
        "timestamp": 1545390631
    },
    {
        "content": "<p>It is right there in the introduction for search... <a href=\"http://build.fhir.org/search.html#Introduction\" target=\"_blank\" title=\"http://build.fhir.org/search.html#Introduction\">http://build.fhir.org/search.html#Introduction</a></p>",
        "id": 154026911,
        "sender_full_name": "John Moehrke",
        "timestamp": 1545399849
    },
    {
        "content": "<blockquote>\n<p>It is right there in the introduction for search... <a href=\"http://build.fhir.org/search.html#Introduction\" target=\"_blank\" title=\"http://build.fhir.org/search.html#Introduction\">http://build.fhir.org/search.html#Introduction</a></p>\n</blockquote>\n<p>but it is type level search, not system level right?  System-level search only supports GET<br>\n method, Am I correct?</p>",
        "id": 154026919,
        "sender_full_name": "Swathy Parameswaran",
        "timestamp": 1545402248
    },
    {
        "content": "<p>All levels require support for GET and permit the use of POST.</p>",
        "id": 154026920,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1545402506
    },
    {
        "content": "<p>It's fine to do a system-level search of <code>GET [base]?identifier=foo</code></p>",
        "id": 154026921,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1545402530
    },
    {
        "content": "<blockquote>\n<p>It's fine to do a system-level search of <code>GET [base]?identifier=foo</code></p>\n</blockquote>\n<p>suppose I have a create resource api with below url<br>\nPOST :    base/{type}<br>\nand I have one system-level search operation with POST: base/_search?identifier=foo </p>\n<p>is these URLs are valid. it will create conflict right? because if I call a post api for search, it may go to create a resource by taking   _search as a resource type.</p>",
        "id": 154026923,
        "sender_full_name": "Swathy Parameswaran",
        "timestamp": 1545403120
    },
    {
        "content": "<p>It is possible that your server implementer didn't recognize _search as a reserved word... but it is certainly not a type of resource. So it either will work, or you will get a failure to create.</p>",
        "id": 154026924,
        "sender_full_name": "John Moehrke",
        "timestamp": 1545403556
    },
    {
        "content": "<p>If you're using POST for search, you have to use x-www-form-urlencoded submission.  You can't put the parameters on the URL</p>",
        "id": 154026925,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1545403898
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>, the specification here, <a href=\"http://build.fhir.org/http.html#search\" target=\"_blank\" title=\"http://build.fhir.org/http.html#search\">http://build.fhir.org/http.html#search</a>, states:</p>\n<div class=\"codehilite\"><pre><span></span>POST  [base]/[type]/_search{?[parameters]{&amp;_format=[mime-type]}}\nContent-Type: application/x-www-form-urlencoded\n\nparam1=value&amp;param2=value\n</pre></div>\n\n\n<p>This has exactly the same semantics as the equivalent GET command. Note that in the POST variant, <strong>parameters may appear in both the URL and the body</strong>. Parameters have the same meaning in either place. Since parameters can repeat, putting them in both places is the same as repeating them (which is valid for some parameters and not for others).</p>",
        "id": 154026969,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1545415026
    },
    {
        "content": "<p>Thanks Richard - I missed that nuance.</p>",
        "id": 154026971,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1545415802
    }
]