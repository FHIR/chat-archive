[
    {
        "content": "<p>Hi all.. Where would U say that the tenantid would be recorded in an AuditEvent given a multi-tenant system?</p>",
        "id": 218566528,
        "sender_full_name": "Veliyan Georgiev",
        "timestamp": 1606920669
    },
    {
        "content": "<p>Can you give a definition of tenantid?</p>",
        "id": 218566880,
        "sender_full_name": "David Pyke",
        "timestamp": 1606920792
    },
    {
        "content": "<p>the unique id of a single customer system instance in a product where multiple customer instances are supported</p>",
        "id": 218567764,
        "sender_full_name": "Veliyan Georgiev",
        "timestamp": 1606921145
    },
    {
        "content": "<p>So, if I understand this, you are having one audit log for multiple instances?  If that is the case, there are several options.  If you need to tie that record to one tenant, you could extend the AuditEvent to have a tenantid element extension, alternately, you could add the tenantid to that tenant's Organization record if it only matters when that tenant is the source and/or actor.</p>",
        "id": 218568779,
        "sender_full_name": "David Pyke",
        "timestamp": 1606921545
    },
    {
        "content": "<p>Without more detail of your use case, it's hard to give specific recommendation</p>",
        "id": 218568810,
        "sender_full_name": "David Pyke",
        "timestamp": 1606921558
    },
    {
        "content": "<p>Thanks..yes..I guess I missed that part. I have a multi-tenant system that produces audit events routed to an s3 bucket. currently the tenant info is in the envelope of the audit event but I needed it moved into the audit event prior to storing.</p>",
        "id": 218570584,
        "sender_full_name": "Veliyan Georgiev",
        "timestamp": 1606922279
    },
    {
        "content": "<p>THen it's safest to extend the AuditEvent to have a tenantid element.</p>",
        "id": 218570713,
        "sender_full_name": "David Pyke",
        "timestamp": 1606922324
    },
    {
        "content": "<p>no</p>",
        "id": 218590294,
        "sender_full_name": "John Moehrke",
        "timestamp": 1606930016
    },
    {
        "content": "<p>The tenantid would be another .agent.</p>",
        "id": 218590847,
        "sender_full_name": "John Moehrke",
        "timestamp": 1606930233
    },
    {
        "content": "<p>there is not a good code for this type of agent, but you can define your own code</p>",
        "id": 218590908,
        "sender_full_name": "John Moehrke",
        "timestamp": 1606930255
    },
    {
        "content": "<p>I would like you to enter a Change Request to add a code for this kind of agent</p>",
        "id": 218591017,
        "sender_full_name": "John Moehrke",
        "timestamp": 1606930314
    },
    {
        "content": "<p>So you'd see it as an actor, not simply a sort mechanism?</p>",
        "id": 218591100,
        "sender_full_name": "David Pyke",
        "timestamp": 1606930339
    },
    {
        "content": "<p>a tenant definitely is part of the transaction, so they certainly are an agent</p>",
        "id": 218591208,
        "sender_full_name": "John Moehrke",
        "timestamp": 1606930385
    },
    {
        "content": "<p>That makes sense.  I chose the wrong my three suggestions.</p>",
        "id": 218592745,
        "sender_full_name": "David Pyke",
        "timestamp": 1606931030
    },
    {
        "content": "<p>I see the case for .agent. <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> great suggestion. I'd put an RFC</p>",
        "id": 218596015,
        "sender_full_name": "Veliyan Georgiev",
        "timestamp": 1606932423
    }
]