[
    {
        "content": "<p>I have validated some example FHIR resources with <a href=\"https://ajv.js.org\">https://ajv.js.org</a> and the HL7 FHIR JSON Schemas .  It seems the validation could produce some better results.  So far, in my testing, AJV never returned valid when I sent it an invalid FHIR resource, so that was good.  It just seemed like the errors were cascading instead of the usual error, warning, info motif with a line number and a description unique for each error.  It very well maybe a tool issue but I don't know I am just getting started with JSON Schema Validation with FHIR.  The first tool I tried failed to function with our FHIR json schemas. Avj was better but not great, so wondering if anyone on the channel has some experiences with JSON schema they would like to share.  I realize that JSON schema is in draft not IETF RFC yet so this is experimental.</p>",
        "id": 202727158,
        "sender_full_name": "Richard Braman",
        "timestamp": 1593714498
    },
    {
        "content": "<p>You need discriminator extension for schema - <a href=\"https://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/\">https://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/</a></p>",
        "id": 202728453,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1593715080
    },
    {
        "content": "<p>How does OpenAPI apply to HL7's FHIR JSON schemas? Can you reference the schema from OpenAPI?  Not sure why I need that.  What I would lI would like to do is instance validation of FHIR resources using the Hl7 FHIR JSON schema on the command line.  Does anyone know of. better tool than AJV?</p>",
        "id": 202741162,
        "sender_full_name": "Richard Braman",
        "timestamp": 1593721735
    },
    {
        "content": "<p>Note that JSON schema only gets you so far with validation - it won't test invariants or most vocabulary bindings and has a few other limitations - so you may want to look at the Java or .NET validators if validation is your primary objective.</p>",
        "id": 202742130,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1593722494
    },
    {
        "content": "<p>because openAPI deviates from the JSON schema spec, I think we're going to need 2 sets of JSON schema, one for JSON schema compliant tools and one for openAPI</p>",
        "id": 202746036,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1593724849
    },
    {
        "content": "<p>but JSON schema won't ever generate simple error messages because of how the Json Schema validation works, and I can't magically fix that. It's because of the way we use the resourceType property - a resource is always invalid against all the schemas all at once</p>",
        "id": 202746123,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1593724909
    },
    {
        "content": "<p>I had much better luck with the GO Json schema validator <a href=\"https://github.com/xeipuuv/gojsonschema\">https://github.com/xeipuuv/gojsonschema</a>.  Its error messages were concise when validating a few real world resources from our server.  I am looking for straight FHIR resource schema validation some other way than HAPI, preferably something standard and fast :).  I tried to convert the Hl7 java validatdaion classes into a webservice last year but could never get it running.  I think that would be a valuable tool for the community.  Are there things we can ask the JSON Schema working group that would help us make our validator better?</p>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> what do you mean by testing \"invariants\"?  Also what other limitations?</p>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Does HL7 have open api 3 file for FHIR?  IS that something you are working on?</p>",
        "id": 202901152,
        "sender_full_name": "Richard Braman",
        "timestamp": 1593916076
    },
    {
        "content": "<p>Code im using for a service <a href=\"https://github.com/NHSDigital/fhir-validation-service\">https://github.com/NHSDigital/fhir-validation-service</a> <br>\nI'm looking at using this instead of schemas which we currently are using</p>",
        "id": 202903956,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1593921725
    },
    {
        "content": "<p>Invariants are all of the constraints asserted in the 'constraints' section for any resource.  JSON schema also can't handle certain types of slicing or handle checking of declared profiles.  I don't think it supports some of the extensions that constrain things like regular expressions or minimum length, though it could probably be extended to.    <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> would know best.   You can certainly choose to just use JSON schema validation if you wish, but be aware that just because you pass schema validation, that doesn't mean your instances will be valid.  You can tune the FHIR Java validator to be faster - for example bypassing calls to an external terminology service.  That might give you more complete validation with performance that is still acceptable.</p>",
        "id": 202922287,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1593956697
    },
    {
        "content": "<p>We don't generate an openAPI file for all of FHIR. We do generate one for any capability statement in an implementation guide - e.g. <a href=\"https://www.hl7.org/fhir/us/core/CapabilityStatement-us-core-server.html\">https://www.hl7.org/fhir/us/core/CapabilityStatement-us-core-server.html</a> has <a href=\"https://www.hl7.org/fhir/us/core/us-core-server.openapi.json\">https://www.hl7.org/fhir/us/core/us-core-server.openapi.json</a></p>",
        "id": 202937065,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1593981107
    },
    {
        "content": "<p>with regard to slicing, json schema can generally only handle slicing based on fixed values - that's only a portion of slicing.</p>",
        "id": 202937117,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1593981156
    },
    {
        "content": "<p>Lloyd covered the other high points though no doubt there's more.</p>",
        "id": 202937122,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1593981171
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191687\">@Kevin Mayfield</span> Is your service basically a stripped down version of HAPI that just supports $validate for every resource?</p>",
        "id": 203380530,
        "sender_full_name": "Richard Braman",
        "timestamp": 1594298750
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span>  has anyone benchmarked the HL7 FHIR Validation classes vs what HAPI provides in terms of speed?</p>",
        "id": 203380696,
        "sender_full_name": "Richard Braman",
        "timestamp": 1594298857
    },
    {
        "content": "<p>Yes stripped down, no JPA and just supports one $validate operation</p>",
        "id": 203392619,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1594305103
    },
    {
        "content": "<p>HAPI uses the exact same validator code that the Validator CLI does, so the performance should be comparable. HAPI uses its own built-in terminology services unlike the CLI so there are differences, but TBH I'm not sure how much difference that makes in terms of speed.</p>",
        "id": 203398647,
        "sender_full_name": "James Agnew",
        "timestamp": 1594307684
    },
    {
        "content": "<p>could make quite a lot - the latency of the network is usually the biggest factor.</p>",
        "id": 203434796,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1594325909
    },
    {
        "content": "<p>of course the other factor is start up time; the validator has to load, and you can do this in advance if you're using HAPI</p>",
        "id": 203435762,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1594326384
    },
    {
        "content": "<p>Time is going to vary significantly by how many profiles need to get validated, how deeply those profiles set requirements.  Validating documents and other Bundles can get relatively time intensive.</p>",
        "id": 203436765,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1594326876
    },
    {
        "content": "<p>to help, the next release of the validator will support a parameter  -show-times that reports how long various things take</p>",
        "id": 203437319,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1594327166
    },
    {
        "content": "<p>We have several challenges with JSON schema, and growing interest in this. Should we create a stream specifically for json schema?</p>",
        "id": 206532288,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597109391
    }
]