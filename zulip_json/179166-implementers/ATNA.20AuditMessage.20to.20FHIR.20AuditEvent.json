[
    {
        "content": "<p>Hello experts. I was wondering if any of you have had the need to translate ATNA (DICOM) AuditMessage to FHIR AuditEvent. The mapping is here <a href=\"https://www.hl7.org/fhir/auditevent-mappings.html#dicom\">https://www.hl7.org/fhir/auditevent-mappings.html#dicom</a> but I'm curious if someone has actually done it and potential feedback associated with it.</p>",
        "id": 214874235,
        "sender_full_name": "Veliyan Georgiev",
        "timestamp": 1603907560
    },
    {
        "content": "<p>Have you looked at the <a href=\"https://www.ihe.net/uploadedFiles/Documents/ITI/IHE_ITI_Suppl_RESTful-ATNA.pdf\">IHE supplements using AuditEvent</a>?</p>",
        "id": 214875144,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1603907863
    },
    {
        "content": "<p>If you have recommendations, I would be glad to field them. I manage the specifications in IHE, HL7, and DICOM on this topic.</p>",
        "id": 214877440,
        "sender_full_name": "John Moehrke",
        "timestamp": 1603908839
    },
    {
        "content": "<p>so ... here is my challenge..and it is probably more technical than anything else. For legacy apps (non-FHIR) we use ATNA (DICOM) AuditMessage.. for FHIR ones -&gt; FHIR AuditEvent. The challenge with the ATNA one is parsing it out later. Here is an example -&gt; in a hosted AWS app those events are generated from a K8S cluster/pod through stdout (which BTW there is a 16K limit on a container stdout entry that is a separate topic) and then picked up and stored in CloudWatch. The tools that are available are notoriously bad when dealing with XML (i.e. Grok, Regex etc). The options are -&gt; 1. do ETL in the cloud (it will cost money) or convert from ATNA to FHIR JSON (either via transform or directly from code. <br>\nSo nothing wrong with the spec/standard really - just curious if someone has tried to convert ATNA to FHIR and how well it went. I;'m trying to avoid having the non FHIR apps change internal logic to generate FHIR events when they already have code to generate ATNA</p>",
        "id": 214884689,
        "sender_full_name": "Veliyan Georgiev",
        "timestamp": 1603912485
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> may have done that</p>",
        "id": 214905128,
        "sender_full_name": "John Moehrke",
        "timestamp": 1603923853
    },
    {
        "content": "<p>you might also find some help on the IHE discussion forums - like <a href=\"https://groups.google.com/g/ihe-xds-implementors\">https://groups.google.com/g/ihe-xds-implementors</a></p>",
        "id": 214905193,
        "sender_full_name": "John Moehrke",
        "timestamp": 1603923905
    },
    {
        "content": "<p>I couldn't find what i needed  so I decided to write a library yesterday. It is here currently but I'll put it on NPM soon <a href=\"https://github.com/upmc-enterprises/ATNA2FHIR\">https://github.com/upmc-enterprises/ATNA2FHIR</a><br>\nI started validating the generated resource and I'm having a predicament with \".recorded\" The instructions here <a href=\"https://www.hl7.org/fhir/auditevent-mappings.html#dicom\">https://www.hl7.org/fhir/auditevent-mappings.html#dicom</a> don't have anything on it but it is a required field. I see the case for being a timestamp when the event is generated but why not being the same as \".period\" - equal to the DICOM's EventDateTime since it is mapped?</p>",
        "id": 215710460,
        "sender_full_name": "Veliyan Georgiev",
        "timestamp": 1604582799
    },
    {
        "content": "<p>the concept of .recorded is not found in the DICOM schema. you could replicate the eventDateTime, but it is not the same concept. I would expect your tooling would just set .recorded to the time that you are creating the FHIR AuditEvent instance... as that is more aligned with the meaning of .recorded.</p>",
        "id": 215712849,
        "sender_full_name": "John Moehrke",
        "timestamp": 1604584013
    },
    {
        "content": "<p>I would very much like to promote your open source project on this.  thanks for doing this</p>",
        "id": 215712960,
        "sender_full_name": "John Moehrke",
        "timestamp": 1604584079
    },
    {
        "content": "<p>That makes sense. Thanks John. Much appreciated. I could use a sanity check when it is somewhat done in the next few days.</p>",
        "id": 215714385,
        "sender_full_name": "Veliyan Georgiev",
        "timestamp": 1604584724
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>  npm install @upmc-enterprises/atna2fhir     promote away :-)</p>",
        "id": 216273356,
        "sender_full_name": "Veliyan Georgiev",
        "timestamp": 1605041886
    },
    {
        "content": "<p>could you describe in the readme what problem this is trying to solve? I would like to promote something that is self promoting.</p>",
        "id": 216274693,
        "sender_full_name": "John Moehrke",
        "timestamp": 1605042519
    },
    {
        "content": "<p>i did it once but the code is long gone</p>",
        "id": 216449593,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1605176264
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>  readme updated and added bunch of more mappings. Thanks for the feedback. Keep it coming</p>",
        "id": 216472384,
        "sender_full_name": "Veliyan Georgiev",
        "timestamp": 1605190200
    }
]