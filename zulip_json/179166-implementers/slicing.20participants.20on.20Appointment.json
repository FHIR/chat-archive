[
    {
        "content": "<p>is it possible to construct a (set of) discriminator(s) on a Appointment profile so that Appointment.participant is eg. limited to a max of eg. 2 patients and 3 practitioners?</p>",
        "id": 163055079,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1554938105
    },
    {
        "content": "<p>Yes, though be careful about enforcing business rules like that in a profile - that seems like the sort of thing where there'll inevitably be a weird exception.  However, if that's the max your system can handle, you could certainly create a profile that enforced that.</p>",
        "id": 163064722,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1554950363
    },
    {
        "content": "<p>That was a bad example. Let's say that there are minimal requirements instead - eg. at least one patient and at least one location is required among participants and that the references are Reference.reference, not identifier. I've tried with both discriminators of type 'type' and 'profile' but that doesn't seem to be of much assistance - unless that requires me to profile the Reference.reference?</p>",
        "id": 163076105,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1554966919
    },
    {
        "content": "<p>You'd need to do Appointment.participant.resolve()</p>",
        "id": 163105058,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1554993271
    },
    {
        "content": "<p>pretty sure I've tried that but I'll give it a go -thx</p>",
        "id": 163138971,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1555018294
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> so back to this: what are you exactly saying? what should the value on the type of the discriminator and what should the path be? I would have expected it to be the following: type: type, and , path: actor.reference.resolve()</p>",
        "id": 210259601,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1600262333
    },
    {
        "content": "<p>and a detail - im on dstu3 so references do not have a type</p>",
        "id": 210259639,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1600262356
    },
    {
        "content": "<p>at least not directly - but I can assume that the type is part of the url referening to the resource - eg. /Patient/1 is a Patient</p>",
        "id": 210259828,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1600262444
    },
    {
        "content": "<p>I think so, y</p>",
        "id": 210271139,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1600267116
    }
]