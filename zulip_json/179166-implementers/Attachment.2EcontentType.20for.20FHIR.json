[
    {
        "content": "<p>Is there any recommendation on how to set Attachment.contentType if the Attachment.url points to a FHIR-Resource (e.g. a Bundle) which could be retrieved in either xml or json? <br>\nIs <code>application/fhir</code> a thing?</p>",
        "id": 273238706,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1645800850
    },
    {
        "content": "<p>We don't have a notion of a URL that supports content negotiation for different mime types.  Feel free to submit a change request</p>",
        "id": 273238885,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1645800950
    },
    {
        "content": "<p>So, currently all I could do is wrap a fixed representation of the Bundle into an Binary and set Attachment.contentType according to Binary.contentType ?</p>",
        "id": 273239729,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1645801264
    },
    {
        "content": "<p>No, you could point to a FHIR endpoint, but the mime type you declare needs to be whatever you'll get from that endpoint by default (without content negotiation)</p>",
        "id": 273241485,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1645802075
    },
    {
        "content": "<p>For some servers, that's JSON, for some it's XML, for some it's HTML.  For some, it'll be an error.</p>",
        "id": 273241536,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1645802108
    },
    {
        "content": "<p>Alternatively, could a Server expose one DocumentReference.content each for every representation it supports? One with an application/fhir+xml Attachment, the other with an application/fhir-json attachment?</p>",
        "id": 273241794,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1645802251
    },
    {
        "content": "<p>If you include the _format in the URL - and the server supports it.</p>",
        "id": 273241972,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1645802324
    },
    {
        "content": "<p>I have recommended that .contentType when a .url is used be specified as the preferred mime-type at that url; but that the http negotiate can be used to get a different mime-type that the client would prefer. normal http mime-type negotiation</p>",
        "id": 273247670,
        "sender_full_name": "John Moehrke",
        "timestamp": 1645805255
    },
    {
        "content": "<p>thus, I could have a url that I indicate contentType is fhir/json... but if  a client wants PDF, and that server can provide PDF, then PDF can be returned.</p>",
        "id": 273247822,
        "sender_full_name": "John Moehrke",
        "timestamp": 1645805325
    },
    {
        "content": "<p>I think this is defined in Binary... so I expected it to apply everywhere Binary can be used, and attachment.url is one of those places.</p>",
        "id": 273247866,
        "sender_full_name": "John Moehrke",
        "timestamp": 1645805356
    },
    {
        "content": "<p>thus .contentType is simply the mime-type that you are guaranteed you can get, but you are free to use http negotiate to ask for anything you prefer.</p>",
        "id": 273247977,
        "sender_full_name": "John Moehrke",
        "timestamp": 1645805408
    },
    {
        "content": "<p>That's also my understanding of Binary, IMHO one DocRef would suffice, one can always try and request a different mime type. However, if a server wishes to make it known that it can resturn a PDF, a HTML and a fhir+json version, you may need multiple DocRefs.</p>",
        "id": 273249459,
        "sender_full_name": "Ren√© Spronk",
        "timestamp": 1645806123
    },
    {
        "content": "<p>Why would you need multiple DocRefs when you can have multiple DocRef.content elements?</p>",
        "id": 273249779,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1645806294
    },
    {
        "content": "<p>in FHIR core... yes multiple .content could be used... in IHE-MHD one uses multiple DocumentReference</p>",
        "id": 273252207,
        "sender_full_name": "John Moehrke",
        "timestamp": 1645807429
    }
]