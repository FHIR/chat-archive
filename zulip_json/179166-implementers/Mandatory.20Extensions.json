[
    {
        "content": "<p>We are currently building a profile for the CapabilityStatement resource and need some extensions. We've looked at the standard HL7 extensions as we do not want to create our own if they already exist. The extension-capabilitystatement-expectation at face value looked perfect and we set out to use it.</p>\n<p>We have however met a problem. The extension has been built with a root cardinality of 1:1 which (according to Forge) means that when you use this extension it becomes mandatory - you can't use this extension and have it as optional.</p>\n<p>For our purposes we need it to be optional, which means that we will have no choice but to create a copy of the extension with the root as 0:1 - is this is what is expected with the HL7 extensions? It seems strange to have these mandatory HL7 extensions which are not flexible enough to support a wider variety of use cases.</p>\n<p>Have I missed something here?</p>",
        "id": 153925513,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1513338264
    },
    {
        "content": "<p>I think the expectation was that if you introduced it in a profile, it wouldn't be useful to have some elements that didn't bother to declare SHOULD/SHALL/MAY when others did not.  What's your use-case for doing that?</p>",
        "id": 153925531,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513355460
    },
    {
        "content": "<p>I must admit, I always thought that it was the <strong>use</strong> of an extension in a profile that would be made mandatory, rather than the definition of it...</p>",
        "id": 153925548,
        "sender_full_name": "David Hay",
        "timestamp": 1513364906
    },
    {
        "content": "<p>The definition of the extension sets the maximum (can this extension repeat or not?) as well as the minimum (if used in a profile, must it be mandatory?)</p>",
        "id": 153925551,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513366177
    },
    {
        "content": "<p>It's very rare for the minimum to be set to 1.  Doing so is a declaration that \"we don't think it makes any sense to support this extension at all unless you're going to require that it be present\".  This was one of the few situations where we thought that actually made sense.</p>",
        "id": 153925552,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513366230
    },
    {
        "content": "<p>If you're going to assert SHALL/SHOULD/MAY on some elements, leaving the others as totally undefined (because there's no default) didn't make a lot of sense to me when I designed the extension.  That doesn't mean that an error wasn't made though.  We could certainly loosen it in a future release if there's a use-case for making it optional.</p>",
        "id": 153925554,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513366324
    },
    {
        "content": "<p>I think it makes sense to say 'expect to see this extension in your capability statements' but not want to say 'since we said you should expect to see it, everyone must always populate it'</p>",
        "id": 153925565,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513369009
    },
    {
        "content": "<p>I guess I don't unerstand a situation where the notion of the extension would apply, but you <em>wouldn't</em> expect it to always be populate.</p>",
        "id": 153925649,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513374983
    },
    {
        "content": "<p>what, like an optional element?</p>",
        "id": 153925655,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1513379479
    },
    {
        "content": "<p>I'm speaking of this extension specificly - the SHALL/SHOULD/MAY one</p>",
        "id": 153925680,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513439773
    },
    {
        "content": "<p>I don't understand the use-case for including it but making it optional</p>",
        "id": 153925681,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513439788
    },
    {
        "content": "<p>I might be not understanding, as I have on my TODO to use this extension in IHE but have not yet started to use it. But it seems to me it is not uncommon for a profile to constrain a few elements that are critical to the use-case while having no compelling motivation to set all the other elements. This enables two profiles to be used together that have constants on non-overlapping sets of elements.</p>",
        "id": 153925684,
        "sender_full_name": "John Moehrke",
        "timestamp": 1513442792
    },
    {
        "content": "<p>So is this why the US-CORE has this extension absolutely everywhere? I was wondering why they seem to be so opinionated about everything.</p>",
        "id": 153925685,
        "sender_full_name": "John Moehrke",
        "timestamp": 1513442853
    },
    {
        "content": "<p>So what does it mean if you say 2 elements are SHALL, 3 elements are SHOULD, 1 element is MAY and 4 elements have nothing listed?</p>",
        "id": 153925689,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513450920
    },
    {
        "content": "<p>it means for the usecase that the StructureDefinitno is solving that those last 4 are not used. I guess they could be marked MAY, but why.</p>",
        "id": 153925691,
        "sender_full_name": "John Moehrke",
        "timestamp": 1513454367
    },
    {
        "content": "<p>Because the default isn't \"MAY\"</p>",
        "id": 153925721,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513471366
    },
    {
        "content": "<p>If you don't specify the extension, the interpretation is \"it's unknown whether there's an expection that systems need to support this element or not\" - which isn't a terribly useful thing to say.</p>",
        "id": 153925722,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513471422
    },
    {
        "content": "<p>For us, we want all of our CapabilityStatements to abide by one profile. Some of our solutions use that extension, some don't. As it stands we now have to either force some of the solutions to use an extension they don't need, create two profiles or create our own version of the extension that is less opinionated. We will probably go for the last option.</p>",
        "id": 153925728,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1513509144
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> - given that there's also a min/max on the Profile  ElementDefinition that refers to the extension SD - what happens if they are different? It seems odd that that the min/max of the elements in the Profile SD determine the multiplicity of all elements except extensions...</p>",
        "id": 153925740,
        "sender_full_name": "David Hay",
        "timestamp": 1513529901
    },
    {
        "content": "<p>Generally, profiles are only allowed to constrain. This also holds for cardinality. So if a datatype (incl. extension) specifies a minimum cardinality, then referencing profiles will automatically inherit that constraint. This is a fundamental design choice and I'm very reluctant to change these rules.<br>\nHowever for this specific extension, the responsible WG could reconsider the existing minimum cardinality constraint.</p>",
        "id": 153925741,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1513530671
    },
    {
        "content": "<p>So the intention of the master profile is to \"Create awareness\" of the extension (and perhaps require support for rendering/understanding it), rather than profiling a system that declares the profiles.  That makes sense as a use-case.  Please submit a change request to loosen the cardinality.  For STU3, you may have to define your own extension</p>",
        "id": 153925806,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513568305
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191321\">@David Hay</span> The min/max of the root element of every resource, data type and profile-there-on set the boundaries of what the cardinalities can be when they are referenced.  All data types and resources are thus defined with min of 0 and max of * because those artifacts are contextless and their cardinality needs to be unconstrained.  However, profiles on data types (and on resources) can place different cardinality limits.  We do this all the time with maxOccurs, indicating that certain extensions are not permitted to repeat.  It's done less often with minimum cardinality on extensions.  But it's in no way limited to extensions.  You could just as easily define a profile on PersonName called \"preferred name\" and place a constraint that there can only be one of them (though that wouldn't necessarily be wise as it doesn't take into account the possibility of \"old\" preferred names).</p>",
        "id": 153925807,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513568519
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  Sorry - I think I'm being obscure. Suppose I create a profile on, say, Patient . Then in the ElementDefinition for the path <a href=\"http://Patient.name\" target=\"_blank\" title=\"http://Patient.name\">Patient.name</a> I can set the .max  element  to 1 - meaning that there can only be one name in the profile. Now I want to add an extension to Patient (say religion). I create an ED with the path Patient.extension to set the discriminator, then another ED with the path Patient.extension, and set type.code to 'Extension' and type.profile to the url of the SD that defines the religion extension.  </p>\n<p>Now, this ED (that defines the Patient.extension element) has min/mix properties, and I've been using those to indicate the multiplicity of the extension in my profile (exactly as for <a href=\"http://Patient.name\" target=\"_blank\" title=\"http://Patient.name\">Patient.name</a>). So I could set .max to * to allow a patient to have multiple religions. But this thread suggests that I should instead use the min/max element from the extension definition - not the one in the patient profile, which is ignored.</p>\n<p>Does that make sense?</p>",
        "id": 153925979,
        "sender_full_name": "David Hay",
        "timestamp": 1513616244
    },
    {
        "content": "<p>The cardinality in your profile isn't ignored - it just has to be a proper constraint on the cardinality of the base type.  If the extension is defined with a cardinality of 1..1 and you reference it in a profile and give it a cardinality of 0..<em>, your profile is invalid.  On the other hand, if the extension is defined with a cardinality of 0..</em> and you reference it in your profile with a cardinality of 1..1, the validator will enforce the 1..1</p>",
        "id": 153925980,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513616758
    },
    {
        "content": "<p>Ah - in this case the 'base type' is the Extension Definition (the SD) that I'm referencing from the profile? And it's up to the profile author to ensure that the cardinality to that extension in the profile is a proper constraint on what the extension definition itself has. That makes sense.  My confusion arose because the base type of the profile (in this case Patient) has a Patient.extension element with a cardinality of 0..* ...</p>",
        "id": 153925981,
        "sender_full_name": "David Hay",
        "timestamp": 1513618163
    },
    {
        "content": "<p>Right.  And 0..* is aligned with the cardinality of the base type it's pointing to - which is the Extension data type which also has 0..* cardinality</p>",
        "id": 153925982,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513620605
    },
    {
        "content": "<p>But if you constrain to a more refined type (an extension profile), then the cardinality of the referencing element is constrained by the cardinality of the root element of that profile.</p>",
        "id": 153925983,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513620639
    },
    {
        "content": "<p>Bit late to the party but have added FHIR Change Request [#14378]. For STU3 purposes NHSD we will create a copy of the  extension and relax the root cardinality.</p>",
        "id": 153927424,
        "sender_full_name": "Simon Knee",
        "timestamp": 1514899860
    },
    {
        "content": "<p>And submit a change request for the cardinality of the official extension to be loosened in a future release?</p>",
        "id": 153927430,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1514905851
    },
    {
        "content": "<p>Sorry.  Not fully awake.  Thanks for the CR :)</p>",
        "id": 153927431,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1514905918
    },
    {
        "content": "<p>No problem. Hope it was completed correctly. HNY to you</p>",
        "id": 153927432,
        "sender_full_name": "Simon Knee",
        "timestamp": 1514907240
    },
    {
        "content": "<p>Looks good.  And HNY to you too :)</p>",
        "id": 153927433,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1514907494
    }
]