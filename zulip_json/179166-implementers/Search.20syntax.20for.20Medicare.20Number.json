[
    {
        "content": "<p>In Australia the 10th digit of an 11 digit medicare number for an individual is subject to change for each card renewal. Using the correct RESTful syntax, how would one perform this type of soft match on a FHIR server when trying to use the 10th digit as a wildcard to search for a patient by this id?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">&lt;</span><span class=\"n\">Patient</span> <span class=\"s2\">&quot;http://hl7.org/fhir&quot;</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">text</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">status</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">&quot;generated&quot;</span> <span class=\"o\">/&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">div</span><span class=\"o\">&gt;</span><span class=\"n\">John</span> <span class=\"n\">Smith</span><span class=\"o\">.</span> <span class=\"n\">MedicareNo</span><span class=\"p\">:</span><span class=\"mi\">34091594141</span><span class=\"o\">&lt;/</span><span class=\"n\">div</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;/</span><span class=\"n\">text</span><span class=\"o\">&gt;</span>\n    <span class=\"o\">&lt;</span><span class=\"n\">identifier</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">use</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">&quot;official&quot;</span> <span class=\"o\">/&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"nb\">type</span><span class=\"o\">&gt;</span>\n            <span class=\"o\">&lt;</span><span class=\"n\">coding</span><span class=\"o\">&gt;</span>\n                <span class=\"o\">&lt;</span><span class=\"n\">system</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">&quot;http://hl7.org/fhir/v2/0203&quot;</span> <span class=\"o\">/&gt;</span>\n                <span class=\"o\">&lt;</span><span class=\"n\">code</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">&quot;MC&quot;</span> <span class=\"o\">/&gt;</span>\n                <span class=\"o\">&lt;</span><span class=\"n\">display</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">&quot;Patients Medicare Number&quot;</span> <span class=\"o\">/&gt;</span>\n            <span class=\"o\">&lt;/</span><span class=\"n\">coding</span><span class=\"o\">&gt;</span>\n            <span class=\"o\">&lt;</span><span class=\"n\">text</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">&quot;Medicare Number&quot;</span> <span class=\"o\">/&gt;</span>\n        <span class=\"o\">&lt;/</span><span class=\"nb\">type</span><span class=\"o\">&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">system</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">&quot;http://ns.electronichealth.net.au/id/hi/mc&quot;</span> <span class=\"o\">/&gt;</span>\n        <span class=\"o\">&lt;</span><span class=\"n\">value</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s2\">&quot;34091594198&quot;</span> <span class=\"o\">/&gt;</span>\n    <span class=\"o\">&lt;/</span><span class=\"n\">identifier</span><span class=\"o\">&gt;</span>\n<span class=\"s1\">&#39;&#39;&#39;</span>\n</pre></div>",
        "id": 153890333,
        "sender_full_name": "Paul Barry",
        "timestamp": 1495078232
    },
    {
        "content": "<p>I don't think that there's way to do this right now</p>",
        "id": 153890335,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1495086817
    },
    {
        "content": "<p>Would you think this a fairly good reason to make the 11th digit a separate element?</p>",
        "id": 153890337,
        "sender_full_name": "Brett Esler",
        "timestamp": 1495088580
    },
    {
        "content": "<p>I don't know. Need to do something, I think</p>",
        "id": 153890338,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1495088845
    },
    {
        "content": "<p>agree..</p>",
        "id": 153890343,
        "sender_full_name": "Brett Esler",
        "timestamp": 1495090595
    },
    {
        "content": "<p>Would you not do a period on it, so that when you search you get a list of patients back with that identifier ordered by most recent? Then in your search only pass in the 10 digits to search on (non-exact match)</p>",
        "id": 153890345,
        "sender_full_name": "Nate Walker",
        "timestamp": 1495091841
    },
    {
        "content": "<p>We have a jurisdiction or two in Canada that also have a \"version\" for their jurisdictional health number.  However, it's seen as a distinct data element.  Out plan was to use a Canadian-specific extension for that, but it sounds like it may make sense to define it as an extension at the international level?  Would Australian systems be able to treat the final digit as a distinct element?</p>",
        "id": 153890382,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1495119417
    },
    {
        "content": "<p>it's not the same thing. </p>",
        "id": 153890414,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1495130346
    },
    {
        "content": "<p>what this is a use case for left most matching on the identifier but that is not described</p>",
        "id": 153890415,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1495130413
    },
    {
        "content": "<p>When you say it's not the same thing, what do you think the difference is?</p>",
        "id": 153890431,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1495132732
    },
    {
        "content": "<p>Ok so maybe we cant do a soft search in the way described but how would I do a partial match on just the first 9 digits of the medicare number for example. I have been unsuccessful  trying a partial matches (:contains) on the Hapi server</p>",
        "id": 153890596,
        "sender_full_name": "Paul Barry",
        "timestamp": 1495265801
    },
    {
        "content": "<p>@<strong>Brian Postlethwaite (new)</strong> any luck with this?</p>",
        "id": 153890828,
        "sender_full_name": "Paul Barry",
        "timestamp": 1495486559
    },
    {
        "content": "<p>I'll add it to the Agenda for the next PA Australian conference call.</p>",
        "id": 153892227,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1496580837
    },
    {
        "content": "<p>added this for review on the AU PA call</p>",
        "id": 153892229,
        "sender_full_name": "Brett Esler",
        "timestamp": 1496582782
    },
    {
        "content": "<p>Another option is to define a custom search parameter:<br>\n- on Patient <br>\n- of searchparametertype String<br>\n- with the expression <code>Patient.identifier.value.substring(0,9)</code>, </p>\n<p>and then search exact on that.</p>",
        "id": 153914412,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1508243327
    },
    {
        "content": "<p>I think would be token, as want exact, not starts-with (no need to have the :exact)</p>",
        "id": 153918836,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1510313176
    }
]