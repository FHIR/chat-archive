[
    {
        "content": "<p>Hi! I've been following this blog post <a href=\"https://fhirblog.com/2017/01/10/extending-a-required-valueset-binding/\" target=\"_blank\" title=\"https://fhirblog.com/2017/01/10/extending-a-required-valueset-binding/\">https://fhirblog.com/2017/01/10/extending-a-required-valueset-binding/</a> since I want to add two more types to <code>Questionnaire.item.type</code>. From the blog it's easy to see how to use the extended values, but I can't find any info about how the extension should be defined (or how to use it in a profile). At the moment I have this extension (just noticed that forge doesn't escape double quotes in strings):</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;StructureDefinition</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://hl7.org/fhir&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;url</span> <span class=\"na\">value=</span><span class=\"s\">&quot;https://duodecim.fi/fhir/stu3/extensions/symptom-checker-item-type&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;name</span> <span class=\"na\">value=</span><span class=\"s\">&quot;SymptomCheckerItemType&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;status</span> <span class=\"na\">value=</span><span class=\"s\">&quot;draft&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;description</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Add types &quot;</span><span class=\"err\">subtitle&quot;</span> <span class=\"err\">and</span> <span class=\"err\">&quot;feedback&quot;</span> <span class=\"err\">to</span> <span class=\"err\">Questionnaire.item.type.&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;fhirVersion</span> <span class=\"na\">value=</span><span class=\"s\">&quot;3.0.0&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;kind</span> <span class=\"na\">value=</span><span class=\"s\">&quot;primitive-type&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;abstract</span> <span class=\"na\">value=</span><span class=\"s\">&quot;false&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;contextType</span> <span class=\"na\">value=</span><span class=\"s\">&quot;resource&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;context</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Questionnaire.item.type&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;type</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Extension&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;baseDefinition</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/Extension&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;derivation</span> <span class=\"na\">value=</span><span class=\"s\">&quot;constraint&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;differential&gt;</span>\n    <span class=\"nt\">&lt;element&gt;</span>\n      <span class=\"nt\">&lt;path</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Extension.url&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;fixedUri</span> <span class=\"na\">value=</span><span class=\"s\">&quot;https://duodecim.fi/fhir/stu3/extensions/symptom-checker-item-type&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/element&gt;</span>\n    <span class=\"nt\">&lt;element&gt;</span>\n      <span class=\"nt\">&lt;path</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Extension.valueString&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;short</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Expanded Questionnaire item type&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;definition</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Extend allowed item types to include &quot;</span><span class=\"err\">feedback&quot;</span> <span class=\"err\">and</span> <span class=\"err\">&quot;subtitle&quot;.&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;type&gt;</span>\n         <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;string&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/type&gt;</span>\n      <span class=\"nt\">&lt;binding&gt;</span>\n         <span class=\"nt\">&lt;strength</span> <span class=\"na\">value=</span><span class=\"s\">&quot;required&quot;</span><span class=\"nt\">/&gt;</span>\n         <span class=\"nt\">&lt;valueSetUri</span> <span class=\"na\">value=</span><span class=\"s\">&quot;https://duodecim.fi/fhir/stu3/ValueSet/symptom-checker-questionnaire-item-type&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/binding&gt;</span>\n    <span class=\"nt\">&lt;/element&gt;</span>\n  <span class=\"nt\">&lt;/differential&gt;</span>\n<span class=\"nt\">&lt;/StructureDefinition&gt;</span>\n</pre></div>\n\n\n<p>where I've defined a ValueSet that includes a CodeSystem that contains my two new types. Is this even close to correct? <code>type</code> is a string field bound to the value set <a href=\"https://www.hl7.org/fhir/valueset-item-type.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/valueset-item-type.html\">https://www.hl7.org/fhir/valueset-item-type.html</a> .</p>",
        "id": 153892691,
        "sender_full_name": "Ville Lindholm",
        "timestamp": 1496855704
    },
    {
        "content": "<p>The no quotes in strings is an XML thing, not a Forge thing.  You can use &quot;.  For examples of how to use extensions on Questionnaire, take a look at the <a href=\"http://hl7.org/fhir/us/sdc/sdc-questionnaire.html\" target=\"_blank\" title=\"http://hl7.org/fhir/us/sdc/sdc-questionnaire.html\">SDC profile</a></p>",
        "id": 153892694,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1496857399
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"193725\">@Ville Lindholm</span>, if you save the XML and inspect the file in a text editor, you will notice that the quote actually is encoded as \"&quot;\". So attribute values are correctly encoded, however you cannot see the encoding in the Forge XML tab.</p>",
        "id": 153892758,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1496870987
    },
    {
        "content": "<p>Concerning extensions; first you need to define the extension itself (as above). Then you create a profile, add an extension element and map it to the previously created extension definition.</p>",
        "id": 153892760,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1496871342
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> Thanks, it seems like examples are the easiest way to go :)</p>\n<p>And <span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> yes, I'm aware of the workflow, but what actually goes into the extension and how it's attached to the element correctly is less clear :D You seem to work for Furore, are there any \"user stories\" type of guides for Forge? As in, \"this is the exact set of steps to do task X\". The general documentation does provide an overview of the user interface, but it's sometimes hard to know which buttons to push / text boxes to fill to get to the same XML that some FHIR tutorial shows as an example! :) And good to know about the double quotes, I just assumed that the XML tab contains whatever will be written to disk.</p>",
        "id": 153892866,
        "sender_full_name": "Ville Lindholm",
        "timestamp": 1496895420
    },
    {
        "content": "<p>Of course, if one can find good example files, it's possible to open them in Forge and try to reverse engineer from there. But getting the documentation straight from the source is of course preferable.</p>",
        "id": 153892868,
        "sender_full_name": "Ville Lindholm",
        "timestamp": 1496895521
    }
]