[
    {
        "content": "<p>Hello,<br>\nThe US Core server CapabilityStatement for Patient (<a href=\"http://hl7.org/fhir/us/core/CapabilityStatement-us-core-server.html#patient\">http://hl7.org/fhir/us/core/CapabilityStatement-us-core-server.html#patient</a>) requires that the server support a search by identifier where the system is not supplied. We're concerned that this could lead to inaccurate patient searches.</p>\n<p>For example, a user might search by ?identifier=333224444, thinking that this identifier will correspond to social security number. However, since no system is supplied, we need to return <em>any</em> identifier with this value. If this value matches an ID from our lab system, for example, we must return that patient. This means we'll be returning the wrong match for the user's search, and the user would only notice if they specifically checked that the system OID/URL is correct, which also requires knowing the OID/URL in the first place.</p>\n<p>Because of this, we'd like to require system to ensure that users are actually doing the search they think they are doing. But we can't as per US Core specifications (and this is explicitly validated by Inferno). Would it be reasonable for servers to require a system for Patient identifier searches?</p>",
        "id": 245857318,
        "sender_full_name": "James Jahns",
        "timestamp": 1626196697
    },
    {
        "content": "<p>in US Core, we nailed down the search for token to at least a code ( value for Identifer),  because most clients will only send identifiers. Also for an authorized client app with a patient read scopes for labs,  I would never expect labs for another patient, that is the point of authorization, right? US Core's intent is to set a <em>minimum bar</em>  it is silent on tightening the rules.   <span class=\"user-mention\" data-user-id=\"192576\">@Robert Scanlon</span>  does inferno prohibit  tighter rules by an implementer?</p>",
        "id": 245866000,
        "sender_full_name": "Eric Haas",
        "timestamp": 1626200382
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> US Core requires servers to support token search by <code>code</code> and by <code>system|code</code>, so we test them both.  I'm unsure what you mean 'tightening the rules' in this context -- we just test what US Core says is required of servers.</p>",
        "id": 245870517,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1626202448
    },
    {
        "content": "<blockquote>\n<p>I'm unsure what you mean 'tightening the rules' in this context </p>\n</blockquote>\n<p>The way we define it  doesn't allow for an implementer to tighten the rules to only support code|system.</p>",
        "id": 245872397,
        "sender_full_name": "Eric Haas",
        "timestamp": 1626203261
    },
    {
        "content": "<p>not saying it is bad, just clarifying</p>",
        "id": 245872620,
        "sender_full_name": "Eric Haas",
        "timestamp": 1626203359
    },
    {
        "content": "<p>Then yes, Inferno's US Core tests do prohibit tighter rules imposed by the server on the client in this case.</p>",
        "id": 245872767,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1626203417
    },
    {
        "content": "<p>If the client queries by 333224444 and expect to only get patients with SSAN 333224444 w/o specifying system=SSAN isn't that a client problem not for the server to resolve? If you force the user to specify the system then when all they know is the Driver's license number but not the system url that means VA (or doesn't know the state at all) then they can't search via the value they do have.</p>",
        "id": 245882798,
        "sender_full_name": "Daniel Venton",
        "timestamp": 1626208197
    }
]