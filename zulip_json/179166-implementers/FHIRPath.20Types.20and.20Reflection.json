[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span>  In the FHIRPath specification, there is an example of ListInfoType:</p>\n<p><code>Patient.address.type()</code></p>\n<p>that produces:</p>\n<div class=\"codehilite\"><pre><span></span>{\n  ListTypeInfo { elementType: &#39;FHIR.Address&#39; }\n}\n</pre></div>\n\n\n<p>But then in the next example:</p>\n<p><code>Patient.contact.type()</code></p>\n<p>which produces:</p>\n<div class=\"codehilite\"><pre><span></span>{\n  TupleTypeInfo {\n    element: {\n      TupleTypeInfoElement { name: &#39;relationship&#39;, type: &#39;List&lt;FHIR.CodeableConcept&gt;&#39;, isOneBased: false },\n      TupleTypeInfoElement { name: &#39;name&#39;, type: &#39;FHIR.HumanName&#39;, isOneBased: false },\n      TupleTypeInfoElement { name: &#39;telecom&#39;, type: &#39;List&lt;FHIR.ContactPoint&gt;&#39;, isOneBased: false },\n      TupleTypeInfoElement { name: &#39;address&#39;, type: &#39;FHIR.Address&#39;, isOneBased: false },\n      TupleTypeInfoElement { name: &#39;gender&#39;, type: &#39;FHIR.code&#39;, isOneBased: false },\n      TupleTypeInfoElement { name: &#39;organization&#39;, type: &#39;FHIR.Reference&#39;, isOneBased: false },\n      TupleTypeInfoElement { name: &#39;period&#39;, type: &#39;FHIR.Period&#39;, isOneBased: false }\n    }\n  }\n}\n</pre></div>\n\n\n<p>Since both Patient.address and Patient.contact are 0..* I'm wondering if either the first example should show the ClassInfo for FHIR.Address or if the second example should be ListTypeInfo. There seems to be a disagreement between the two examples of when ListInfoType is produced. IMO, ListInfoType isn't that useful. I'd rather get type info about the List element type.</p>",
        "id": 174387904,
        "sender_full_name": "John Timm",
        "timestamp": 1567016030
    },
    {
        "content": "<p>it's certainly not useful in FHIR, where we've deliberately restricted the use of list variants in the content model itself. Really all there is to know is whether it's a list or not.  I think it might be more useful wen your doing FHIRPath with other content models that FHIR, where there is more metdata floating around</p>",
        "id": 174394418,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1567020917
    },
    {
        "content": "<p>There is definitely an inconsistency in the example there, thank you for pointing that out <span class=\"user-mention\" data-user-id=\"192334\">@John Timm</span> . Do you mind submitting a tracker to correct that? What we say in the spec is that the operation produces a collection with the type for each element of the input collection. So the <code>Patient.contact.type()</code> example is consistent with that, but the <code>Patient.address.type()</code> example is not.</p>",
        "id": 174952224,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1567669736
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span>   Tracker item submitted:<br>\n<a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23857&amp;start=0\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23857&amp;start=0\">https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23857&amp;start=0</a></p>",
        "id": 174973438,
        "sender_full_name": "John Timm",
        "timestamp": 1567690271
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 174986328,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1567698128
    }
]