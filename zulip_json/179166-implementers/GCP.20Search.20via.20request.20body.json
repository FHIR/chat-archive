[
    {
        "content": "<p>Hi, My name is Hue.<br>\nI'm using GCP Healthcare API<br>\nI wanna do FHIR <a href=\"https://cloud.google.com/healthcare/docs/reference/rest/v1/projects.locations.datasets.fhirStores.fhir/search\">search</a> via request body. <br>\nFor example, I have 100 <code>Patient IDs</code> from 1 to 100  and <code>name= Jame</code> condition. How can I search on 1 request?</p>\n<ul>\n<li>Id is uuid with 36 character. That mean 100 ids will be 3600 character</li>\n<li>maximum URL length is <a href=\"https://serpstat.com/blog/how-long-should-be-the-page-url-length-for-seo/#:~:text=The%20maximum%20length%20of%20a,address%20bar%20is%202048%20characters.\">2048</a><br>\nIf we can not search via request body, do you have any solution for it?<br>\nLooping: <span class=\"user-mention\" data-user-id=\"197072\">@Paul Church</span></li>\n</ul>",
        "id": 209871510,
        "sender_full_name": "Hue Nguyen",
        "timestamp": 1599900114
    },
    {
        "content": "<p>Did you try searching using POST?<br>\n<a href=\"http://build.fhir.org/search.html#Introduction\">http://build.fhir.org/search.html#Introduction</a></p>",
        "id": 209881294,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1599916807
    },
    {
        "content": "<p>You can also consider using Batch.</p>",
        "id": 209882698,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1599919143
    },
    {
        "content": "<p>We don't support POST search parameters in the request body at the moment. We support read but not search in a batch bundle - search is feasible but we haven't seen much demand for it yet.</p>\n<p>In general I suggest designing the search to use an attribute of the resources instead of a large list. If there isn't a criterion that selects these 100 patients, perhaps an artificial attribute like meta.tag. If you need to retrieve a lot of resources by ID alone, a batch bundle of read operations will work and can be very large.</p>",
        "id": 209884309,
        "sender_full_name": "Paul Church",
        "timestamp": 1599922000
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197072\">@Paul Church</span> <br>\nI wanna make a search query with <code>Patient.name, Patient.phone, Encounter.practitioner</code>.<br>\nQuery will like <code>&lt;basepath&gt;/Encounter?practitioner={id}&amp;subject:Patient:name=xxx&amp;subject:Patient:phone=xxx</code><br>\nBut GCP has a problem when search with Japanese characters (jp characters is too short and can't set index for it).<br>\nSo, I'm trying to use Elastic search for Japanese characters search =&gt; and will get list of IDs<br>\nThen, new query will be:<br>\n<code>&lt;basepath&gt;/Encounter?practitioner={id}&amp;subject:Patient:_id=111,222,43333....</code><br>\nDo you have any suggestion for this case</p>",
        "id": 209884800,
        "sender_full_name": "Hue Nguyen",
        "timestamp": 1599922818
    },
    {
        "content": "<p>Sorry for the delay. My only suggestion for this case is to split into smaller queries.</p>\n<p>We are tracking POST _search with the parameters in the request body as a future enhancement but it's likely that substring search on 1-2 character words will be fixed earlier than that.</p>",
        "id": 210441573,
        "sender_full_name": "Paul Church",
        "timestamp": 1600372187
    },
    {
        "content": "<p>Thank you. Let's me try</p>",
        "id": 210966276,
        "sender_full_name": "Hue Nguyen",
        "timestamp": 1600845467
    },
    {
        "content": "<p>I have a sort of related question regarding 2048 character limit on URLs. I understand that using POST based search could avoid that on the way into the server, but wouldn't this still cause problem for bundle link entries (self, prev, next, etc) in the returned bundle?</p>",
        "id": 219525316,
        "sender_full_name": "Brian Forbis",
        "timestamp": 1607630185
    },
    {
        "content": "<p>Yes, I would think we'd have to give you a <a href=\"http://link.next\">link.next</a> URL with query parameters that is too long, but you could reinterpret it into a POST body. Not sure what other servers do about this.</p>",
        "id": 219541478,
        "sender_full_name": "Paul Church",
        "timestamp": 1607638403
    },
    {
        "content": "<p>I think returning a URL that cannot be served by a GET request is invalid? Is that correct?</p>",
        "id": 219541704,
        "sender_full_name": "Brian Forbis",
        "timestamp": 1607638538
    },
    {
        "content": "<p>The only language I'm aware of is \"In the case of a search, the initial request may be made via a POST, but the follow up page requests will be made via GET requests. However servers SHOULD allow for a client to convert the follow up requests to be made via a POST.\"</p>\n<p>This seems unhelpful in the case where the search parameters are too long to be served by a GET.</p>",
        "id": 219542107,
        "sender_full_name": "Paul Church",
        "timestamp": 1607638734
    },
    {
        "content": "<p>Perhaps this is something that just needs to be documented by each individual implementation? It seems that most servers support somewhere between 4k-8k max header size (which also applies to query args), so the 2048 limit is just for browser URLs which I think doesn't really apply here since these are APIs. Here's a list of <a href=\"https://www.tutorialspoint.com/What-is-the-maximum-size-of-HTTP-header-values\">popular servers and their default size limits</a>. These settings are usually adjustable, but they are set to that size specifically to avoid DoS attacks.</p>\n<p>As far as returning a link that the server would reject if it was made via GET, but accept if it was made via POST, I'd still like to know whether that could be considered acceptable per conformance standards.</p>",
        "id": 219995604,
        "sender_full_name": "Brian Forbis",
        "timestamp": 1608046600
    }
]