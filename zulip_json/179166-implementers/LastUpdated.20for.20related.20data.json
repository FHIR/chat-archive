[
    {
        "content": "<p>Got a question today about a use case where a client of our FHIR server would like to regularly query our server for clinical data for patients. For efficiency, they would first like to query for a list of patients whose related data has changed since a particular date. And iterate over the list that comes back to retrieve the clinical data (using $everything).</p>\n<p>Now, I know the _lastUpdated meta property is useful for finding a particular resource by its update date, but again, this is particular to a patient's clinical data and you will certainly have a case where the Patient resource hasn't change for a long time, but observations, conditions, medications, encounters, etc. are happening and being updated as time goes on. </p>\n<p>So, long story short, has anyone addressed this use case yet?</p>",
        "id": 153899773,
        "sender_full_name": "Peter Bernhardt",
        "timestamp": 1501540911
    },
    {
        "content": "<p>S4S does, but probably not as efficiently as you are imagining</p>",
        "id": 153899778,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501541047
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> thanks. I haven't been keeping up-to-date on that project. Do you have link handy for that use case?</p>",
        "id": 153899792,
        "sender_full_name": "Peter Bernhardt",
        "timestamp": 1501541716
    },
    {
        "content": "<p>Found this : <a href=\"http://syncfor.science/api-calls/\" target=\"_blank\" title=\"http://syncfor.science/api-calls/\">http://syncfor.science/api-calls/</a></p>",
        "id": 153899793,
        "sender_full_name": "Peter Bernhardt",
        "timestamp": 1501541812
    },
    {
        "content": "<p>Well, looks like the S4S <em>periodic update</em> approach is to just query discrete resources using a _lastUpdated query. Not what I was hoping for.</p>",
        "id": 153899794,
        "sender_full_name": "Peter Bernhardt",
        "timestamp": 1501542012
    },
    {
        "content": "<p>hah so it turns out the spec itself contains your answer, though I don't know how many servers would implement this:</p>",
        "id": 153899795,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501542211
    },
    {
        "content": "<p>GET [base]/Patient/*?_lastpdated=ge[date]</p>",
        "id": 153899796,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501542250
    },
    {
        "content": "<p>Yahtzee! Maybe we'll be the first, then <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>?  ;)</p>\n<p>Thanks</p>",
        "id": 153899797,
        "sender_full_name": "Peter Bernhardt",
        "timestamp": 1501542308
    },
    {
        "content": "<p>you can try my server ;-)</p>",
        "id": 153899798,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501542324
    },
    {
        "content": "<p>typo:</p>\n<div class=\"codehilite\"><pre><span></span>GET [base]/Patient/[id]/*?_lastpdated=ge[date]\n</pre></div>",
        "id": 153899799,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501542597
    },
    {
        "content": "<p>that changes everything, my friend</p>",
        "id": 153899800,
        "sender_full_name": "Peter Bernhardt",
        "timestamp": 1501542622
    },
    {
        "content": "<p>sorry.</p>",
        "id": 153899801,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501542636
    },
    {
        "content": "<p>np ... ;) And if we follow through on this use case, Iâ€™ll report back to this group.</p>",
        "id": 153899803,
        "sender_full_name": "Peter Bernhardt",
        "timestamp": 1501542677
    }
]