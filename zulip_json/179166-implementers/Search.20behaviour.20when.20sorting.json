[
    {
        "content": "<p>When performing a search it is possible to set the sort order using something along the lines of </p>\n<div class=\"codehilite\"><pre><span></span><code>/Patient?_sort=xxx,yyy,zzz\n</code></pre></div>\n<p>What is the expected behaviour if:</p>\n<p>1) A search parameter is encountered that is not supported? - Is it just ignored by the server?<br>\n2) The number of search parameters provided exceeds those that the server supports?</p>",
        "id": 223548366,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1611252670
    },
    {
        "content": "<p>I don't think we've defined expected behavior.  At minimum, the 'self' link should indicate what sorting actually happened.</p>",
        "id": 223550063,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611253491
    },
    {
        "content": "<p>I would think unsupported search parameters in a sort clause would be treated the same as in the search itself, potentially ignored unless strict handling has been specified.</p>",
        "id": 223550170,
        "sender_full_name": "Paul Church",
        "timestamp": 1611253551
    },
    {
        "content": "<p>You get 400s from our server</p>",
        "id": 223554208,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1611255310
    },
    {
        "content": "<p>We ignore unrecognized params and do not support ordering. The ordering of data seems easier to implement client side (given number of data sources).</p>",
        "id": 223772172,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611431960
    },
    {
        "content": "<p>Ordering on the client side only works if you bring down all of the data first, which doesn't work well if the set of data is large...</p>",
        "id": 223772295,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611432012
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>, I am not sure of the use case here. But for claims data we added a last Updated param. We are hoping that consumers pull all data and then only pull for updates. The data can be quite large, as you say.</p>",
        "id": 223772482,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611432191
    },
    {
        "content": "<p>If you have a light-weight client (e.g. a phone), you're not going to have any local persistence and will query data as you need it - and will generally query one page at a time - just what's needed to populate the current screen on the phone to ensure good performance and low memory use.</p>",
        "id": 223774272,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611434465
    },
    {
        "content": "<p>Even apps that might be able to store more won't necessarily want to store everything, nor want to wait the length of time it would take for everything to be retrieved.</p>",
        "id": 223774284,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611434502
    },
    {
        "content": "<p>CommonHealth and Apple health only support local device storage. If you make an app on their stores you cannot run direct queries. When we asked the app devs they said they prefer local storage.</p>",
        "id": 223786083,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611447338
    },
    {
        "content": "<p>If you're running a web app, you won't necessarily have <em>any</em> storage.  And even if you do, you might not want to wade through 'all' of the patient's lab Observations.  You want the most recent and the user will traverse back to older ones if/when they want them.  With sort, you can do a quick call, get back 100 rows and display them.  If you needed to bring back all of the rows before you could display the 'latest', you could be looking at several minutes time just to get the data over the wire.</p>",
        "id": 223791664,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611456507
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>, great point regarding local storage. I imagine an EMR will have a wide variety of use cases. We are green with FHIR claims data so far and have not yet begin B2B use cases. If I developed a client app for claims data, I would not use local storage either.</p>",
        "id": 223795308,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611462731
    },
    {
        "content": "<p>Patient apps aggregate data from multiple source, they won't query &amp; display. No sort is fine.</p>",
        "id": 223821578,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1611505325
    }
]