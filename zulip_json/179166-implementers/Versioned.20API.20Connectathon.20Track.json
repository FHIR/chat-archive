[
    {
        "content": "<p>This track hasn't got any registered participants, though discussions about this at WGMs are always passionate. So this is a ping to prompt people - who's interested?</p>",
        "id": 153926970,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514069048
    },
    {
        "content": "<p>btw, my server does scenarios 1 and 2 right now, but not 3 or 4</p>",
        "id": 153926971,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514069072
    },
    {
        "content": "<p>Versioning like how Aegis/Touchstone recommends?  Within the URL?</p>",
        "id": 153927049,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1514340442
    },
    {
        "content": "<p>Presumably, 1, 2, 3, and 4 are references to this:<br>\n<a href=\"http://wiki.hl7.org/index.php?title=201801_Versioned_API\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=201801_Versioned_API\">http://wiki.hl7.org/index.php?title=201801_Versioned_API</a></p>",
        "id": 153927050,
        "sender_full_name": "Joel Schneider",
        "timestamp": 1514340617
    },
    {
        "content": "<blockquote>\n<p>Presumably, 1, 2, 3, and 4 are references to this:<br>\n<a href=\"http://wiki.hl7.org/index.php?title=201801_Versioned_API\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=201801_Versioned_API\">http://wiki.hl7.org/index.php?title=201801_Versioned_API</a></p>\n</blockquote>\n<p>So, according to this:<br>\n<a href=\"https://www.hl7.org/fhir/directory.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/directory.html\">https://www.hl7.org/fhir/directory.html</a></p>\n<p>We're talking about long term support for <code>v0.0.82</code>, <code>v1.0.2</code>, and <code>v3.0.1</code>?  </p>\n<p>I ask because we've implemented most of our stack on <code>v1.6.0</code> and <code>v3.0.1</code>.  We're in a position to do testing between r2 and r3, and would like to formalize our r2 spec to conform with Epic2015.  But we'd like to be specific about whether to peg to <code>v1.0.2</code> or <code>v1.6.0</code>.  Downgrading to <code>v1.0.2</code> is fine if it means clarity and alignment with Epic2015.</p>",
        "id": 153927051,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1514341584
    },
    {
        "content": "<p>I'm interested in the topic, but can't make Vonk support multiple versions before the Connectathon. So while I could probably make it support scenario's 1&amp;2, I doubt it is useful when supporting only R3.</p>",
        "id": 153927060,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1514359976
    },
    {
        "content": "<p>1.6.0 isn't on the list of supported releases; the Java reference implementation supports it, but that's the only one. And I'm not sure how  long it will - it's existence continues to cost.</p>",
        "id": 153927062,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514367242
    },
    {
        "content": "<p>I only support scenarios 1 and 2 at present; I have't decided about 3</p>",
        "id": 153927063,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514367286
    },
    {
        "content": "<p>Will support scenario 2 - scenarios 1 and 3 won't be applicable until/unless there are any breaking changes to the Terminology Module in R4.</p>",
        "id": 153927086,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1514410429
    },
    {
        "content": "<p>code system supplements are new in R4</p>",
        "id": 153927087,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514410741
    },
    {
        "content": "<p>Should have qualified that with \"my current implementation\"! Certainly true that returning supplements (and content=content-mode.supplement) might break an R3 client. I'll create a test CodeSystem resource on my server that implements this for the Connectathon.</p>",
        "id": 153927088,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1514412441
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I'm interested in this track.  I think there is also another variant of scenario 1, where the client sends an 'Accept' header with a value like 'json+fhir; fhirVersion=1.6.0' and then using content type negotiation to figure out what to return.</p>",
        "id": 153927450,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1514920904
    },
    {
        "content": "<p>well, we're trying to not support 1.6.0 anymore - my server won't, that's for sure</p>",
        "id": 153927456,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514922479
    },
    {
        "content": "<p>The idea was to put an explicit, semantic version number in the header.    It could be <code>Accept: application/fhir+json; fhirVersion=3.0.1, application/json+fhir; fhirVersion=1.0.2</code> and then the server would respond with a <code>Content-Type: application/json+fhir; fhirVersion=1.0.2</code> and the proper payload if it couldn't handle the 3.0.1 version.</p>",
        "id": 153927457,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1514923150
    },
    {
        "content": "<p>we certainly don't want the revision number in the version</p>",
        "id": 153927461,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514925195
    },
    {
        "content": "<p>3.0.0 and 3.0.1 and 3.0.x are all compatible</p>",
        "id": 153927462,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514925210
    },
    {
        "content": "<p>that's why the connectathon write up specifies r2 / r3 / r4 instead of the semver version</p>",
        "id": 153927463,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514925248
    },
    {
        "content": "<p>and on the negotiation... I think most people would prefer and error than stuff from the wrong version</p>",
        "id": 153927464,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514925271
    },
    {
        "content": "<p>I'm ok with just doing 1.0, or 3.0 without the patch version since the differences are so minor, I just prefer to be explicit and the official release version has a patch level number in it.    Regarding the negotiation, you would only pass versions you can handle in the <code>Accept</code> header.  The server would pick the first one in the list that it can handle and return that one.  The client would then determine which one to use based on the <code>Content-Type</code> header that is returned.  You would never get the wrong version because you told the server which ones you want.  Of course if the server didn't handle any of the versions, that would return an error.</p>",
        "id": 153927467,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1514926115
    },
    {
        "content": "<p>so ok, that's just content negotiation as envisaged in the connectathon write up</p>",
        "id": 153927468,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514926284
    },
    {
        "content": "<p>Yes, similar to scenario 1 with some minor differences from what I saw.  The wiki page specified a custom header, but I don't think we need a custom header.  I found this article helpful when we were trying to sort this out in our systems... <a href=\"https://www.troyhunt.com/your-api-versioning-is-wrong-which-is/\" target=\"_blank\" title=\"https://www.troyhunt.com/your-api-versioning-is-wrong-which-is/\">https://www.troyhunt.com/your-api-versioning-is-wrong-which-is/</a></p>",
        "id": 153927469,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1514926657
    },
    {
        "content": "<p>wiki specifies a content type parameter</p>",
        "id": 153927470,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514926873
    },
    {
        "content": "<p>Ah, I see.  The wording in the writeup confused me a little.  We are, in fact, violently agreeing about scenario 1.</p>",
        "id": 153927472,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1514928132
    },
    {
        "content": "<p>except for r3 vs 3.0</p>",
        "id": 153927473,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514928151
    },
    {
        "content": "<p>Yes.  Personally I think there should be one and only one way of specifying a particular version of the standard.</p>",
        "id": 153927474,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1514928327
    },
    {
        "content": "<p>unfortunately we'll never get to that point because of external constraints. Though we at least have r3 = 3.0 now</p>",
        "id": 153927475,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514928693
    },
    {
        "content": "<p>feel free to add clarifying text to the wiki btw</p>",
        "id": 153927476,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514928858
    },
    {
        "content": "<p>Why did you call the version <code>r3</code> instead of just <code>3</code> or <code>3.0</code>?</p>",
        "id": 153927477,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1514929958
    },
    {
        "content": "<p>that's the official product name now</p>",
        "id": 153927478,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1514930701
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/T3M7FFHJsi4PsHGt6Nukmtg-/C17_Versioned_API.pptx\" target=\"_blank\" title=\"C17_Versioned_API.pptx\">C17_Versioned_API.pptx</a></p>",
        "id": 153928073,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515464240
    },
    {
        "content": "<p>FYI</p>",
        "id": 153928074,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515464244
    },
    {
        "content": "<p>I have upgraded <a href=\"http://test.fhir.org\" target=\"_blank\" title=\"http://test.fhir.org\">test.fhir.org</a> to better support the versioned API track.</p>",
        "id": 153929794,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516478989
    },
    {
        "content": "<p><a href=\"http://test.fhir.org\" target=\"_blank\" title=\"http://test.fhir.org\">test.fhir.org</a> runs 3 end-points:</p>\n<ul>\n<li><a href=\"http://test.fhir.org/r3\" target=\"_blank\" title=\"http://test.fhir.org/r3\">http://test.fhir.org/r3</a></li>\n<li><a href=\"http://test.fhir.org/r2\" target=\"_blank\" title=\"http://test.fhir.org/r2\">http://test.fhir.org/r2</a></li>\n<li><a href=\"http://test.fhir.org/r4\" target=\"_blank\" title=\"http://test.fhir.org/r4\">http://test.fhir.org/r4</a></li>\n</ul>",
        "id": 153929795,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516479016
    },
    {
        "content": "<p>each has it's own set if resources, starting with the example resources defined in the relevant version of the spec, and then diverging based on whatever people have posted since I installed the test set.</p>",
        "id": 153929796,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516479074
    },
    {
        "content": "<p>When you specify the Accept and Content-Type headers, by default the version is the base version for the end-point. But now, you can also do this:</p>",
        "id": 153929797,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516479116
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>GET http://test.fhir.org/r3/Patient/example\nAccept: application/fhir+xml; fhir-version=r4\n</pre></div>",
        "id": 153929798,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516479155
    },
    {
        "content": "<p>and you'll get the r3 patient resource converted to r4</p>",
        "id": 153929799,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516479173
    },
    {
        "content": "<p>The conversion is performed by the Java version conversion code in the Java reference implementation</p>",
        "id": 153929800,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516479201
    },
    {
        "content": "<p>It's important to note: <a href=\"http://test.fhir.org\" target=\"_blank\" title=\"http://test.fhir.org\">test.fhir.org</a> will convert between versions of the resource, but it will not (and cannot, given the architecture) support search parameters from a different version than the specified end-point</p>",
        "id": 153929801,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516479258
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> is it possible to make requests like</p>\n<div class=\"codehilite\"><pre><span></span>GET http://test.fhir.org/Patient/example\n</pre></div>\n\n\n<p>to get the latest version?</p>",
        "id": 153929818,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1516484122
    },
    {
        "content": "<p>it would be possible for me to configure the server like that, yes. it would be exactly the same as /r4/Patient/example - what would be the benefit?</p>",
        "id": 153929819,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516484341
    },
    {
        "content": "<p>If I record the canonical URL for a resource in a system, I can always go back and get it without having to know or care what version it was at the time I saved it.  I would prefer to use the versionless url (because it represents the resource) and then specify which version I wanted in the Accept header.  This is easier for server operators.  If a client has stored a url of '<a href=\"http://test.fhir.org/r2/Patient/example\" target=\"_blank\" title=\"http://test.fhir.org/r2/Patient/example\">http://test.fhir.org/r2/Patient/example</a>' then I will have to honor that URL forever or clients won't be able to reliably find the resource when they need it.  If they store '<a href=\"http://test.fhir.org/Patient/example\" target=\"_blank\" title=\"http://test.fhir.org/Patient/example\">http://test.fhir.org/Patient/example</a>' then they will always be able to get the resource, but they might run into trouble if they don't know how to handle the latest version.</p>",
        "id": 153929820,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1516485100
    },
    {
        "content": "<p>I think this is moving the deck chairs around. It's painful one way or the other. For the test server, in particular, where the R4 end-point is a rolling one, I think it's better not to try and offer that.</p>",
        "id": 153929821,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516485333
    },
    {
        "content": "<p>In what way is the versionless-url variety painful?  A client can always make a request like </p>\n<div class=\"codehilite\"><pre><span></span>GET http://test.fhir.org/Patient/example\nAccept: application/fhir+json; fhir-version=r2\n</pre></div>\n\n\n<p>and they will most likely get a reasonable response, even years from now.<br>\nIf clients store the URL as '<a href=\"http://test.fhir.org/r2/Patient/example\" target=\"_blank\" title=\"http://test.fhir.org/r2/Patient/example\">http://test.fhir.org/r2/Patient/example</a>' then we are forever required to maintain that URL because some client will expect it to be there.  Also it makes it harder for clients to recognize when records are identical.  '<a href=\"http://test.fhir.org/r2/Patient/example\" target=\"_blank\" title=\"http://test.fhir.org/r2/Patient/example\">http://test.fhir.org/r2/Patient/example</a>' points to the record for the same patient as '<a href=\"http://test.fhir.org/r3/Patient/example\" target=\"_blank\" title=\"http://test.fhir.org/r3/Patient/example\">http://test.fhir.org/r3/Patient/example</a>', but the URLs are not the same.  If we go that route we might as well do something like '<a href=\"http://test.fhir.org/r3/xml/Patient/example\" target=\"_blank\" title=\"http://test.fhir.org/r3/xml/Patient/example\">http://test.fhir.org/r3/xml/Patient/example</a>' (which would perpetually tie the client to the serialization format AND the fhir-version).<br>\n(see <a href=\"https://www.troyhunt.com/your-api-versioning-is-wrong-which-is/\" target=\"_blank\" title=\"https://www.troyhunt.com/your-api-versioning-is-wrong-which-is/\">https://www.troyhunt.com/your-api-versioning-is-wrong-which-is/</a> for some discussion of this).</p>",
        "id": 153929822,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1516486099
    },
    {
        "content": "<p>so I am not sure whether you are specifically asking about my choices for <a href=\"http://test.fhir.org\" target=\"_blank\" title=\"http://test.fhir.org\">test.fhir.org</a>, or making a general policy point.</p>",
        "id": 153929823,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516486234
    },
    {
        "content": "<p>my choices for <a href=\"http://test.fhir.org\" target=\"_blank\" title=\"http://test.fhir.org\">test.fhir.org</a> are not the same as 'these are the rules for everyone'.</p>",
        "id": 153929824,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516486261
    },
    {
        "content": "<p>having said that, I personally don't see any difference between support R2 by header or by end-point for the read operation. But there's a big difference for search</p>",
        "id": 153929825,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516486274
    },
    {
        "content": "<p>I agree that there is some benefit for version-less URLs... just as there is a cost. My choice not to provide that on <a href=\"http://test.fhir.org\" target=\"_blank\" title=\"http://test.fhir.org\">test.fhir.org</a> (for now) does not mean that no one else should make that choice</p>",
        "id": 153929826,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516486371
    },
    {
        "content": "<p>I was more making a point about the general policy than your specific choices for the test servers.</p>",
        "id": 153929827,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1516487561
    },
    {
        "content": "<p>well, it's something people can choose to do, if the connectathon test track goes ok</p>",
        "id": 153929829,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516487857
    },
    {
        "content": "<p>Cerner staging test url: <a href=\"https://fhir-open.stagingcerner.com/stu3/fb8067d7-e012-4703-8888-17b86d11f0f8/\" target=\"_blank\" title=\"https://fhir-open.stagingcerner.com/stu3/fb8067d7-e012-4703-8888-17b86d11f0f8/\">https://fhir-open.stagingcerner.com/stu3/fb8067d7-e012-4703-8888-17b86d11f0f8/</a></p>",
        "id": 153931132,
        "sender_full_name": "Bradley Strecker",
        "timestamp": 1517068383
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191577\">@Bradley Strecker</span> :  why list 'r3' and '3.0'?</p>",
        "id": 153931142,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517068682
    },
    {
        "content": "<p>also, when the mime type is application/fhir+json, you should return - as you do:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n    <span class=\"nt\">&quot;resourceType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Parameters&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;parameter&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;fhir-version&quot;</span><span class=\"p\">,</span>\n            <span class=\"nt\">&quot;valueString&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;r3&quot;</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;fhir-version&quot;</span><span class=\"p\">,</span>\n            <span class=\"nt\">&quot;valueString&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;3.0&quot;</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre></div>",
        "id": 153931143,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517068782
    },
    {
        "content": "<p>but when the accept type is application/json, the return should be</p>",
        "id": 153931144,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517068803
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n   <span class=\"nt\">&quot;versions&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;r3&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;3.0&quot;</span><span class=\"p\">]</span>\n <span class=\"p\">}</span>\n</pre></div>",
        "id": 153931145,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517068825
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  Yeah, that was listed as \"bonus points\" and I didn't get to it, planned on working on that today. As for listing r3 and 3.0, thats from the track description: \"where X is the formal release (<code>r2</code>,<code>r3</code>, or <code>r4</code> for the current build at this time) (alternately X could be a semantic version number <code>1.0</code>, <code>1.6</code> or <code>3.0</code>\"</p>",
        "id": 153931148,
        "sender_full_name": "Bradley Strecker",
        "timestamp": 1517068925
    },
    {
        "content": "<p>ok. thx. so we need to decide whether it's going to be \"r3' or \"3.0\". but the real comment was - I expected you to list r2 and r3</p>",
        "id": 153931152,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517069143
    },
    {
        "content": "<p>The servers use \"3.0.x' - for simplicity we should use that. This way the clients don't get confused.</p>\n<blockquote>\n<p>ok. thx. so we need to decide whether it's going to be \"r3' or \"3.0\". but the real comment was - I expected you to list r2 and r3</p>\n</blockquote>",
        "id": 153931154,
        "sender_full_name": "Ioana Singureanu",
        "timestamp": 1517069217
    },
    {
        "content": "<p>no we should not use the revision - technical corrections cause a change to the revision number but we definitely don't want those to be relevant here</p>",
        "id": 153931155,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517069271
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> - We have separate servers for each version and won't be supporting on the fly conversions any time in the near future. I can add r2 for connectathon testing purposes, but you'll still only be able to get r3 resources</p>",
        "id": 153931158,
        "sender_full_name": "Bradley Strecker",
        "timestamp": 1517069385
    },
    {
        "content": "<p>ok; understand. well, the, what's a resource I can fetch on that server? a patient?</p>",
        "id": 153931162,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517069442
    },
    {
        "content": "<p>Any of the resources listed in the metadata should return r3 resources. Give me a sec and I'll dig up a test patient with encounters</p>",
        "id": 153931165,
        "sender_full_name": "Bradley Strecker",
        "timestamp": 1517069579
    },
    {
        "content": "<p>thx</p>",
        "id": 153931166,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517069596
    },
    {
        "content": "<p>yay: </p>\n<p>GET <a href=\"https://fhir-open.stagingcerner.com/stu3/fb8067d7-e012-4703-8888-17b86d11f0f8/Patient/1153923\" target=\"_blank\" title=\"https://fhir-open.stagingcerner.com/stu3/fb8067d7-e012-4703-8888-17b86d11f0f8/Patient/1153923\">https://fhir-open.stagingcerner.com/stu3/fb8067d7-e012-4703-8888-17b86d11f0f8/Patient/1153923</a><br>\nAccept: application/fhir+json; fhir-version=r4</p>",
        "id": 153931173,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517069756
    },
    {
        "content": "<p>The Accept fhir-version is invalid. It must be one of: r3, 3.0</p>",
        "id": 153931174,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517069761
    },
    {
        "content": "<p>It would be better if this was an OperationOutcome</p>",
        "id": 153931175,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517069778
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <a href=\"https://fhir-open.stagingcerner.com/stu3/fb8067d7-e012-4703-8888-17b86d11f0f8/Encounter?patient=4330902\" target=\"_blank\" title=\"https://fhir-open.stagingcerner.com/stu3/fb8067d7-e012-4703-8888-17b86d11f0f8/Encounter?patient=4330902\">https://fhir-open.stagingcerner.com/stu3/fb8067d7-e012-4703-8888-17b86d11f0f8/Encounter?patient=4330902</a></p>",
        "id": 153931188,
        "sender_full_name": "Bradley Strecker",
        "timestamp": 1517070195
    },
    {
        "content": "<p>Conversion java code: <a href=\"https://gforge.hl7.org/gf/project/fhir/scmsvn/?action=browse&amp;path=%2Ftrunk%2Fbuild%2Fimplementations%2Fjava%2Forg.hl7.fhir.convertors%2Fsrc%2Forg%2Fhl7%2Ffhir%2Fconvertors%2F\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/scmsvn/?action=browse&amp;path=%2Ftrunk%2Fbuild%2Fimplementations%2Fjava%2Forg.hl7.fhir.convertors%2Fsrc%2Forg%2Fhl7%2Ffhir%2Fconvertors%2F\">https://gforge.hl7.org/gf/project/fhir/scmsvn/?action=browse&amp;path=%2Ftrunk%2Fbuild%2Fimplementations%2Fjava%2Forg.hl7.fhir.convertors%2Fsrc%2Forg%2Fhl7%2Ffhir%2Fconvertors%2F</a></p>",
        "id": 153931228,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1517072530
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> a question about cloning date times:</p>",
        "id": 153931242,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517073420
    },
    {
        "content": "<p>thanks.</p>",
        "id": 153931243,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517073420
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>org.hl7.fhir.dstu3.model.DateType tgt = new org.hl7.fhir.dstu3.model.DateType(src.getValue());\n</pre></div>",
        "id": 153931244,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517073420
    },
    {
        "content": "<p>this changes the timezone of the date - why?</p>",
        "id": 153931245,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517073420
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>{\n    &quot;resourceType&quot;: &quot;Patient&quot;,\n    &quot;name&quot;: [\n        {  &quot;text&quot;: &quot;Eve Everywoman&quot;,\n            &quot;family&quot;: [\n                &quot;Everywoman1&quot;\n            ],\n            &quot;given&quot;: [\n                &quot;Eve&quot;\n            ]\n     }]}\n</pre></div>",
        "id": 153931281,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1517076180
    },
    {
        "content": "<p>^^^^. Very simple r2 content to POST</p>",
        "id": 153931282,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1517076214
    },
    {
        "content": "<p>In r2, name.family is an array, in r3+ it's a string</p>",
        "id": 153931284,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1517076235
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Java Date objects don't hold a timezone, so that way of cloning would switch to the system local timezone.. I'm really thinking about moving to using one of the Java 8 Date replacements instead of Date in the R4 model for this and a bunch of other reasons...</p>\n<p>You can work around this by doing:</p>\n<div class=\"codehilite\"><pre><span></span>org.hl7.fhir.dstu3.model.DateType tgt = new org.hl7.fhir.dstu3.model.DateType(src.getValueAsString());\n</pre></div>",
        "id": 153931347,
        "sender_full_name": "James Agnew",
        "timestamp": 1517083607
    },
    {
        "content": "<p>+1 for switching to java.time.*</p>",
        "id": 153931350,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1517083828
    },
    {
        "content": "<p>Yeah it would be a huge improvement... I've held back for a long time only because HAPI currently officially supports Java 7, with Android being the main driver for that.</p>\n<p>These days though, I'd say the proportion of android devices that can't support Java 8 is getting pretty small</p>",
        "id": 153931358,
        "sender_full_name": "James Agnew",
        "timestamp": 1517084122
    },
    {
        "content": "<p>+1</p>",
        "id": 153931359,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1517084200
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>Proposed Accept Header rules:\n1. Specify preferred FHIR versions, in order of preference\n2. Don&#39;t return an error status for unknown versions\n3. Ignore the patch version number (3rd in a semantic version string)\n4. If no version is specified use a default version\n5. Don&#39;t use the `q` parameter.\n\nExample Accept Header:\napplication/fhir+json; fhir-version=3.0, application/fhir+json; fhir-version=1.0.2, application/fhir+json, application/json+fhir, application/json\n\nNotes:\n|-------------------------------------------+-------------|\n| application/fhir+json; fhir-version=3.0   | FHIR 3.0    |\n| application/fhir+json; fhir-version=1.0.2 | FHIR 1.0    |\n| application/fhir+json                     | FHIR &gt;= 1.8 |\n| application/json+fhir                     | FHIR &lt; 1.8  |\n| application/json                          | Any version |\n|-------------------------------------------+-------------+\n\nServer should pick the first one in the list that it can handle, respond appropriately, and always return the version number in the Content-Type header of the response.\n</pre></div>",
        "id": 153931405,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1517087449
    },
    {
        "content": "<p>I don't understand rule  2</p>",
        "id": 153931411,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517087728
    },
    {
        "content": "<p>if someone were to specify <code>application/fhir+json; fhir-version=DSTU2</code> (or any unrecognized version), the server should ignore it, not return a 406 status code.</p>",
        "id": 153931412,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1517087788
    },
    {
        "content": "<p>well, it just seems odd - the normal rules are that you pick the accept format you want to from the list in the headers.</p>",
        "id": 153931415,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517087887
    },
    {
        "content": "<p>2 makes sense as you describe it, excpt that you haveto return an error if that's the only one</p>",
        "id": 153931416,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517087904
    },
    {
        "content": "<p>ok, that's probably true.  Although you might treat that as if no Accept header had been passed at all.</p>",
        "id": 153931417,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1517087944
    },
    {
        "content": "<p>This is a neat Stream, I hadn't really given this idea much thought, but now that I'm here..... This would probably be pretty easy to implement using the converters and a HAPI interceptor. I'm gonna give that a whirl.</p>",
        "id": 153931434,
        "sender_full_name": "James Agnew",
        "timestamp": 1517088634
    },
    {
        "content": "<p>The $versions operation to discover supported versions will fail (probably with a 404) on servers that haven't implemented multiple version support.  In this case we should probably fall back to using the version specified in the <code>/metadata</code> endpoint.</p>",
        "id": 153931529,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1517093173
    },
    {
        "content": "<p>so do we want to do a break out today to discuss progress? (<span class=\"user-mention\" data-user-id=\"191351\">@Chris Grenz</span> <span class=\"user-mention\" data-user-id=\"193229\">@Kevin Olbrich</span> <span class=\"user-mention\" data-user-id=\"191577\">@Bradley Strecker</span> <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span>  <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> )</p>",
        "id": 153931731,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517148047
    },
    {
        "content": "<p>I'm booked from 10-11ish, but available otherwise</p>",
        "id": 153931737,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1517148960
    },
    {
        "content": "<p>yes we'll do a stand up meeting outside immediately after the announcements end <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span></p>",
        "id": 153931759,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517151225
    },
    {
        "content": "<p><a href=\"https://makandracards.com/makandra/36457-angularjs-how-to-force-content-type-on-get-and-delete-requests\" target=\"_blank\" title=\"https://makandracards.com/makandra/36457-angularjs-how-to-force-content-type-on-get-and-delete-requests\">https://makandracards.com/makandra/36457-angularjs-how-to-force-content-type-on-get-and-delete-requests</a></p>",
        "id": 153931763,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517152052
    },
    {
        "content": "<p>Seems to be at least some consensus on Kevin's summary above.  Here's open questions remaining (that I've heard, maybe from the small voice in my head!):</p>\n<p>Mapping/Content:</p>\n<ul>\n<li>Should there be a \"standard\" mapping between versions, and how strongly should we encourage/require the use of the standard mappings?</li>\n<li>How should content added/removed in versions be represented? Seems like the logical answer is standard extensions for elements and contained resources for \"split out\" resources.  Ex. r2 Practitioner with roles becomes an r3 Practitioner with contained PractitionerRole resources, or, ValueSets with contained CodeSystems.</li>\n<li>In the (not few) cases where mapping is largely nonsensical or with with exceptionally poor semantics, should a lowest common denominator approach be taken or should the request simply be rejected?</li>\n<li>There is an implicit (I think?) requirement that any resource (esp. Bundle) be consistently a single version. While there's been some pushback on this, I think this rule remains generally accepted?</li>\n</ul>\n<p>API:</p>\n<ul>\n<li>Today, versioning applies ONLY to the content accepted and/or returned.  The operation of the API itself (query parameters, validation logic, etc.) remain tied to the endpoint.  Implementation of a complete API versioning is very problematic in most current implementations, especially those that use POJO/POCO serialization, indexing, etc.</li>\n<li>The content negotiation method with multiple versions prevents proper application of API versioning since the client wouldn't be able to craft a correct URL/query string, operation call, or even server conformance request without knowing the version.</li>\n</ul>",
        "id": 153931989,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1517159521
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193229\">@Kevin Olbrich</span> can you write up a summary of what we talked about this morning? That will address some of Chris's open issues</p>",
        "id": 153931992,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517159664
    },
    {
        "content": "<p>working on that now.</p>",
        "id": 153932138,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1517166736
    },
    {
        "content": "<p>One area I think we overlooked is the <code>_format</code> query parameter.</p>",
        "id": 153932230,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1517171154
    },
    {
        "content": "<p>oh?</p>",
        "id": 153932243,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517171754
    },
    {
        "content": "<p>I feel like _format should act the same as application/fhir+json w/o version</p>",
        "id": 153932244,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1517171758
    },
    {
        "content": "<p>why without?</p>",
        "id": 153932246,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1517171874
    },
    {
        "content": "<p>More clarification: I think it shouldn't be possible for the \"json\" and \"xml\" values. Full mime type option - maybe?</p>",
        "id": 153932256,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1517172215
    },
    {
        "content": "<p>our server doesn't currently support the full mime type in the _format, mostly because I've never seen someone try that instead of just \"json\" and \"xml\"</p>",
        "id": 153932260,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1517172414
    },
    {
        "content": "<p>IMO _format should accept exactly the same as Accept (GET/HEAD) or Content-Type (POST/PUT)</p>",
        "id": 153932299,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1517173393
    },
    {
        "content": "<p>I have actually been successful.. Still redeploying to the public server, but I have a working implementation of this pattern going.</p>",
        "id": 153932357,
        "sender_full_name": "James Agnew",
        "timestamp": 1517176854
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193229\">@Kevin Olbrich</span> do we want to repeat this track in Cologne. (I do)</p>",
        "id": 153938020,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518741261
    },
    {
        "content": "<p>any differences now that we've done it once?</p>",
        "id": 153938021,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518741269
    },
    {
        "content": "<p>I think it's worth another round.  We may identify a few more edge cases.  I would want to try and get a few people with servers and a few with clients to try out some scenarios and try to find out where the approach falls over.</p>",
        "id": 153938022,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1518741378
    },
    {
        "content": "<p>do you have any idea whether you'll be there?</p>",
        "id": 153938023,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518741410
    },
    {
        "content": "<p>Not confirmed yet, but leaning towards yes.</p>",
        "id": 153938024,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1518741430
    },
    {
        "content": "<p>great.</p>",
        "id": 153938025,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518741443
    },
    {
        "content": "<p>I'll let you know when I have confirmation.</p>",
        "id": 153938026,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1518741449
    },
    {
        "content": "<p>ok</p>",
        "id": 153938027,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518741456
    },
    {
        "content": "<p>I guess we should write the +fhir-version parameter into the spec before we ballot normative</p>",
        "id": 153938028,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518741474
    },
    {
        "content": "<p>I agree</p>",
        "id": 153938029,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1518741506
    }
]