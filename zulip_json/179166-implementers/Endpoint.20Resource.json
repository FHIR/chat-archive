[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> , <span class=\"user-mention\" data-user-id=\"191940\">@Kevin Paprocki</span> will definitely be interested in this.</p>",
        "id": 153825929,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1462807448
    },
    {
        "content": "<p><a href=\"http://hl7-fhir.github.io/endpoint.html\" target=\"_blank\" title=\"http://hl7-fhir.github.io/endpoint.html\">http://hl7-fhir.github.io/endpoint.html</a></p>",
        "id": 153825930,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1462807451
    },
    {
        "content": "<p>Initial thoughts:</p>",
        "id": 153825933,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1462808091
    },
    {
        "content": "<ul>\n<li>endpoint is the right name</li>\n<li>payloadType should be 0..*</li>\n<li>a valuable status would be one to indicate an endpoint isn't ready yet</li>\n</ul>",
        "id": 153825937,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1462808194
    },
    {
        "content": "<p>The last would be when you want clients to know about your endpoint and be ready to use it as soon as it goes online. </p>",
        "id": 153825940,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1462808216
    },
    {
        "content": "<p>To that end, a date when it becomes active would be useful.  (This comes from experience with Epic's Care Everywhere Phone Book which has and uses that feature.)</p>",
        "id": 153825943,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1462808255
    },
    {
        "content": "<p>Our customers have separate test and production instances.  They have their own endpoints and certificates.  We are extremely careful to avoid contamination between the two.  Is that concept worth including?</p>",
        "id": 153825945,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1462808480
    },
    {
        "content": "<p>So another value in the status type that is in preparation/testing stage or something like that?</p>",
        "id": 153825946,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1462808496
    },
    {
        "content": "<p>We do have the period on there so that you can forecast de-activating, or indicating will become available.<br>\nBut would like some feeback on this. Was just a sugestion for intiial discussions</p>",
        "id": 153825947,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1462808546
    },
    {
        "content": "<p>endpoint == metadata. Why not just include this info in the conformance statement? Is there a good rationale for having another level of abstraction for meta information about service capabilities?</p>",
        "id": 153825948,
        "sender_full_name": "Peter Bernhardt",
        "timestamp": 1462808607
    },
    {
        "content": "<p>We'd also want to be able to handle the use case of a planned downtime, we could probably use status for that</p>",
        "id": 153825949,
        "sender_full_name": "Kevin Paprocki",
        "timestamp": 1462808614
    },
    {
        "content": "<p>This is an example of this type of resource as defined in use in the MiHN system (live in DSTU2) and would be replaced by this resource<br>\n<a href=\"http://sqlonfhir-may.azurewebsites.net/fhir/Basic/ElectronicService-12182/_history/1?_format=html\" target=\"_blank\" title=\"http://sqlonfhir-may.azurewebsites.net/fhir/Basic/ElectronicService-12182/_history/1?_format=html\">http://sqlonfhir-may.azurewebsites.net/fhir/Basic/ElectronicService-12182/_history/1?_format=html</a></p>",
        "id": 153825950,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1462808698
    },
    {
        "content": "<p>The difference between conformance and this resource is that conformance is more about a complete picture of me, and endpoint is details for others (for purposes, and not just FHIR services)</p>",
        "id": 153825951,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1462808744
    },
    {
        "content": "<p>Peter, from my perspective endpoint is more than just metadata, it's also a URL for where to engage that service.</p>",
        "id": 153825952,
        "sender_full_name": "Kevin Paprocki",
        "timestamp": 1462808822
    },
    {
        "content": "<p>There's a difference between a tesing *status* and a tesing *endpoint*.  The test and prod servers exist in parallel in perpetuity.  </p>",
        "id": 153825955,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1462808906
    },
    {
        "content": "<p>I think we'd need a 'type' element to track that. where type can be 'for testing' or 'for production'</p>",
        "id": 153825957,
        "sender_full_name": "Kevin Paprocki",
        "timestamp": 1462809260
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> I don't quite understand this Endpoint vs. Conformance distinction. In your description, it sounds like (a summarized version of) Conformance should be usable for this purpose.</p>",
        "id": 153825958,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462809371
    },
    {
        "content": "<p>Other than date, does <a href=\"http://hl7.org/implement/standards/fhir/conformance.html\" target=\"_blank\" title=\"http://hl7.org/implement/standards/fhir/conformance.html\">http://hl7.org/implement/standards/fhir/conformance.html</a> have any required elements?</p>",
        "id": 153825964,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1462809517
    },
    {
        "content": "<p>I'd like to retain the drafting as seperate resource and get everything we need in it documented, and then consider what that would look like if was done as a conformance resource. And have a full definition of everywhere it links to/from</p>",
        "id": 153825965,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1462809528
    },
    {
        "content": "<p>(Yes, not against using conformance, just want to ensure all the needs are pre-captured - and why it isn't linked anywhere until this stuff is clarified)</p>",
        "id": 153825966,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1462809584
    },
    {
        "content": "<p>Just to confirm where this is going: Do we replace all the DICOM WADO-RS urls in e.g, ImagingObjectSelection with Endpoints?</p>",
        "id": 153825967,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1462809607
    },
    {
        "content": "<p>I would hope that anywhere we are including details for connecting to another system, it should be using this resource.<br>\nNot just an un-informative URL on some other resource. Then you have all the other information about statuses, contactin details when something goes wrong, security details..... </p>",
        "id": 153825971,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1462809717
    },
    {
        "content": "<p>Is there an element that says this endpoint is a FHIR server, WADO-RS server, or XDS Repository? I see an element that says that the endpoint serves up \"XDS Discharge summaries\", but not that it is an XDS Doc Repository.</p>",
        "id": 153825973,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1462809777
    },
    {
        "content": "<p>Can be able to describe more than jsut FHIR services (so you can include connection details for an XDS service, or others..)</p>",
        "id": 153825974,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1462809806
    },
    {
        "content": "<p>Yes, but how do you code the service offered at that endpoint?</p>",
        "id": 153825975,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1462809839
    },
    {
        "content": "<p>This is ony a first draft, and yes will want to cover this.</p>",
        "id": 153825976,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1462809871
    },
    {
        "content": "<p>I wanted to ensure that I got all the relevant interested parties involved in the conversation.</p>",
        "id": 153825980,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1462810048
    },
    {
        "content": "<p>For, e.g., a RESTful service, the url <a href=\"http://www.server.com/myService/AResource/1234/SubResources/5678\" target=\"_blank\" title=\"http://www.server.com/myService/AResource/1234/SubResources/5678\">http://www.server.com/myService/AResource/1234/SubResources/5678</a>, would be coded in a resources as an Endpoint reference (pointing to an Endpoint describing <a href=\"http://www.server.com/myService\" target=\"_blank\" title=\"http://www.server.com/myService\">http://www.server.com/myService</a>) and a uri/string/???? with a value of \"AResource/1234/SubResources/5678\"?</p>",
        "id": 153825988,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1462810277
    },
    {
        "content": "<p>The current thinking is that it describes a place where you will send/find information.<br>\nIn the case of a FHIR server, the address would be the baseURL of the service, the format(s) supported (json/xml) and which resource types to interact with.<br>\nNot sure how the complete URL fits into the picture, that's just a resoruce that you might find at that location.<br>\nIn messaging could just be a POST only thing.</p>",
        "id": 153826002,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1462810796
    },
    {
        "content": "<p>Splitting out the endpoint from the variable part of the URL would be useful in cases where a server moves (or two servers get merged). Just update the endpoint resource, rather than having to modify all, e.g, DocumentReferences that reference that server. Or, if you do need to modify the variable part, then you can find all the relevant resources by doing a _reverseInclude on the Endpoint.</p>",
        "id": 153826017,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1462811152
    },
    {
        "content": "<p>That's compelling, <span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span> </p>",
        "id": 153826019,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1462811311
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> , would it be appropriate to use conformance for endpoints that are not FHIR resources?</p>",
        "id": 153826020,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1462811385
    },
    {
        "content": "<p>But <span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span>, <a href=\"https://www.w3.org/Provider/Style/URI.html\" target=\"_blank\" title=\"https://www.w3.org/Provider/Style/URI.html\">cool URIs don't change</a> ;-)</p>",
        "id": 153826022,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462811610
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191936\">@Michael Donnelly</span> I don't think it would be great to use a conformance endpoint to describe something other than a FHIR implementation.</p>",
        "id": 153826023,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462811638
    },
    {
        "content": "<p>So I guess that's a +1 for it not being conformance then.</p>",
        "id": 153826024,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1462811676
    },
    {
        "content": "<p>Where does <code>Endpoint</code> say whether it's a FHIR server, or an XDS server, or whatever?</p>",
        "id": 153826025,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462811788
    },
    {
        "content": "<p>Some combination of payload format/type would be used, needs to be fleshed out in terms of defining the valueset bindings etc there.</p>",
        "id": 153826031,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1462813776
    },
    {
        "content": "<p>Has there been discussion whether we need FHIR to move into this space?  We could use Conformance registries to do FHIR service discovery - do we really need to cover entereprise-wide discovery for services as well in FHIR?  I am not strictly against it, but every resource added does have a cost in maintenance....</p>",
        "id": 153826037,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1462814884
    },
    {
        "content": "<p>I don't think payload format/type works to describe the service type. An FTP server, or XDS server, or UNC path can return any type of payload. Actually, I think coding the service type is more useful than coding the payload type.</p>",
        "id": 153826038,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1462814997
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> agree, but mine do. :-(</p>",
        "id": 153826039,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1462815139
    },
    {
        "content": "<p>This has come from the folks that are all working in the provider directory space (for the use cases listed in the draft resource - and sure there are more than I put in)</p>",
        "id": 153826040,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1462815439
    },
    {
        "content": "<p>And we have 1 implementation of it using Basic running in the USA<br>\n(In Australia we have another partial standard that covers this topic, and has been running for many years) </p>",
        "id": 153826042,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1462815497
    },
    {
        "content": "<p>It could be that we move some information out of Conformance and hang \"FHIRConformance\" as a resource off of EndPoint (allowing for the possibility of other things hanging off it in the future)</p>",
        "id": 153826258,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462844100
    },
    {
        "content": "<p>Hmm.</p>",
        "id": 153826259,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1462844781
    },
    {
        "content": "<p>That makes some sense, <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> </p>",
        "id": 153826291,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1462885048
    },
    {
        "content": "<p>In terms of WADO-RS URLs (or WADO-URI or WADO-WS, for that matter), it's at the moment strategically unclear whether we would use Endpoint to point to study/series level only - or go all the way down to instance level (same discussions as been had in II previously).</p>",
        "id": 153826308,
        "sender_full_name": "Brad Genereaux",
        "timestamp": 1462889426
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191960\">@Brad Genereaux</span> , that sounds like a uri, not an endpoint.</p>",
        "id": 153826312,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1462889505
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191936\">@Michael Donnelly</span> No - it's a bit more complicated than that - as from that \"endpoint\", there's a lot that still can be tweaked by the caller (i.e., if we want just the metadata or a specific frame - which is tweaked on the URI itself). There's a \"just the right level\" that is still being worked out (how to be closest to endpoint and furthest away from uri).</p>",
        "id": 153826314,
        "sender_full_name": "Brad Genereaux",
        "timestamp": 1462889797
    },
    {
        "content": "<p>Interesting.  I hadn't thought about it that way.</p>",
        "id": 153826315,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1462889824
    },
    {
        "content": "<p>I want to ask the community some pressing questions in my mind about the Endpoint resource.  Maybe hopefully this discussion will make interop better or at least let me understand the current practice.</p>\n<p>First let me say that there is an effort by several organizations to publish a directory of Endpoints of all the FHIR servers in the clinical, payer, and other realms.  FLY Health is developing an Endpoints resource that serves as such a directory: <a href=\"https://api.fhirfly.io/network/Endpoint\">https://api.fhirfly.io/network/Endpoint</a>.  This is very much as WiP, but could become a resource for the community.  I think there are many issues with having a single source of truth for endpoints; however we can broach that subject later/</p>\n<ol>\n<li>\n<p>If My App has different client id (and maybe secret) for each different API vendor (Cerner, Epic, Allscripts, Humana, Aetna, etc) how would Endpoint discovery tell the app which clientid to use to connect to an .address?</p>\n</li>\n<li>\n<p>If my app looked to the Endpiont resource (maybe using .payloadType), could it understand that an endpoint was serving clinical data, payer data, SANER data,  or something else?</p>\n</li>\n</ol>",
        "id": 237898528,
        "sender_full_name": "Richard Braman (FLY.HEALTH)",
        "timestamp": 1620425886
    },
    {
        "content": "<p>Your (1) above suggests we have very different concepts of what an Endpoint directory is meant to accomplish. Why would an endpoint directory be in charge of \"tell[ing an] app which client id to use\"?</p>",
        "id": 237905407,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1620430686
    },
    {
        "content": "<p>How else would the app know which client id to use?  Enlighten me please.....</p>",
        "id": 237907139,
        "sender_full_name": "Richard Braman (FLY.HEALTH)",
        "timestamp": 1620432065
    },
    {
        "content": "<p>If the app knew server x was epic, the app would use its epic app client id.</p>",
        "id": 237907290,
        "sender_full_name": "Richard Braman (FLY.HEALTH)",
        "timestamp": 1620432158
    },
    {
        "content": "<p>here's some spec reference: <a href=\"https://www.hl7.org/fhir/managing.html#discovery\">https://www.hl7.org/fhir/managing.html#discovery</a> \"Client systems discover the 'current' set of relevant servers by querying a central location for the Endpoints for servers that carry relevant data for a particular community. As servers join or leave the community, the list of potential endpoints would change. Clients would discover relevant servers by querying for endpoints of particular types and then retrieve more information by looking up the CapabilityStatements for each server\"</p>",
        "id": 237908480,
        "sender_full_name": "Richard Braman (FLY.HEALTH)",
        "timestamp": 1620433045
    },
    {
        "content": "<p>But if its a secure server that requires auth, how does the client app  know which client id to use?  I think this is a very straightforward question.</p>",
        "id": 237908585,
        "sender_full_name": "Richard Braman (FLY.HEALTH)",
        "timestamp": 1620433128
    },
    {
        "content": "<p>For example in current registration schemes, apps receive (from the vendor portal / registration process) a list of FHIR servers and client IDs/secrets at registration time. If new endpoints come online later, they'll need to request new secrets.</p>",
        "id": 237911783,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1620435876
    },
    {
        "content": "<p>Josh,  I think we are misunderstanding each other.  I have registered my app with Epic , Cerner, Allscripts, and 20 other vendors.  They each gave the app a client id for a sandbox.  Are you saying that in production, each instance of an Epic FHIR server requires its own client id ?  How would that ever be manageable for the app?  If there are 5000 healhcare providers with 5000 fhir servers, how does an app manage 5000 client ids to let a user connect to the server of their choice?</p>",
        "id": 237957341,
        "sender_full_name": "Richard Braman (FLY.HEALTH)",
        "timestamp": 1620481816
    },
    {
        "content": "<p>This varies by vendor; with Epic a client gets a distinct secret for every endpoint it connects to.</p>",
        "id": 237963620,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1620487649
    },
    {
        "content": "<p>So at the end of the day you need to choose an ID and a secret based on the actual fhir server URL. Generally that server URL will host metadata with additional information about the vendor; I could see populating the end point with something like that too.</p>",
        "id": 237963724,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1620487745
    },
    {
        "content": "<p>Thats a real bummer Josh.  This scales horribly for a Patient Access app with a large number of potential endpoints, especially when there is such a small number of vendors and this could be simplified.  Is there any desire from other HL7 members to improve this?</p>",
        "id": 238068213,
        "sender_full_name": "Richard Braman (FLY.HEALTH)",
        "timestamp": 1620601264
    },
    {
        "content": "<p>That's a big component of what \"FAST\" is looking at; would check <a href=\"http://UDAP.org\">UDAP.org</a> as an example example in this area.</p>",
        "id": 238068966,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1620602082
    },
    {
        "content": "<p>I have read both FHIR at scale and UDAP.  The problem with the former is that its findings haven't been mandated as final rules.  And while FAST specifically addressed the Endpoint discovery question, it did not consider the client_id problem.  UDAP has no teeth, even though DCRP would solve the client id problem if the app can specify its client id.  But UDAP is not in any mandate, and as anyone in Health IT knows, the only things that get done are the things that are mandated by ONC or CMS, and even then, as in the case of C32 transitions of care, here we are 10 years after it started and it still has no meaningful use.  The main problem is that no one really wants to share data, and these little blocks go unnoticed by most regulators who aren't technically proficient enough to identify them.  Orgs can say \"Look how open we are!\", all the time realizing that connecting to their data is not going to happen at any real scale because of the blocks that are in place.  I have designed a Patient Access app that works just like a browser.  It has the World's greatest privacy policy (<a href=\"https://fhirfly.app/privacy\">https://fhirfly.app/privacy</a>) and doesn't store any user data other than on the user's local device.  It is designed the way I would want it designed as a user to keep my health data private and between me and my doctor/insurance company. It will likely be years before it sees the light of day, because connecting to whatever health care provider I want as a user is not possible because of the very real blockers I mentioned in this thread.  With all the time and money we have invested in this, that seems crazy, and honestly quite maddening.  Sorry for the rant.</p>",
        "id": 238133742,
        "sender_full_name": "Richard Braman (FLY.HEALTH)",
        "timestamp": 1620650701
    },
    {
        "content": "<p>Forgive me if I'm misunderstanding something here, but wouldn't each application need to maintain its own lookup of servers it can communicate with and the details it needs to do so? <br>\nThe client IDs will be specific to an application and could be rotated or expired. URLs could change, etc. Seems like each app will need to maintain it's own list. <br>\nThat's not to say that a repository that has ALL known FHIR servers would not be useful to the community - it would. But you'd still need to maintain your own subset for the servers your app can communicate with.</p>",
        "id": 238153127,
        "sender_full_name": "Craig McClendon",
        "timestamp": 1620657637
    },
    {
        "content": "<p>craig , at scale interoperability means my app can communicate with any server that adheres to the FHIR standard.  It is understood the app need to have a client id for the API, but the point is if there are 5000 client ids and secrets for one app, it wont scale.  If the Endpoint could provide a hint as to what vendor backs the API, and the vendors agreed to have one client id for all the FHIR server endpoints they have in their stable, then the problem becomes much more manageable...</p>",
        "id": 238154753,
        "sender_full_name": "Richard Braman (FLY.HEALTH)",
        "timestamp": 1620658152
    },
    {
        "content": "<p>Josh, the only field I see in the Endpoint resource that could be used is Endpoint.header.  If we could specify a server header like <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Server\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Server</a> for the vendor it would solve one part of the problem.  Then vendors would just need to agree to assign one client id across all their client's APIs.</p>",
        "id": 238155214,
        "sender_full_name": "Richard Braman (FLY.HEALTH)",
        "timestamp": 1620658302
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>Server: Allscripts Sunrise 18.4\n</code></pre></div>",
        "id": 238155407,
        "sender_full_name": "Richard Braman (FLY.HEALTH)",
        "timestamp": 1620658359
    },
    {
        "content": "<p>I don't see the scalability problem. When the user chooses a server in the app, it calls your central API to get the current connection details and uses those for the session to query the FHIR server.  If you are trying to avoid the need for a central API to store those details - I don't think that is realistic or likely secure.  You'll want the ability to update things quickly - such as may be the case if an app id was compromised.</p>",
        "id": 238155678,
        "sender_full_name": "Craig McClendon",
        "timestamp": 1620658453
    },
    {
        "content": "<p>The question is how to make it more managable.  Again, no doubt that the client has to maintain a configuration.  Its about the manageability of that configuration .</p>",
        "id": 238156158,
        "sender_full_name": "Richard Braman (FLY.HEALTH)",
        "timestamp": 1620658647
    },
    {
        "content": "<p>What is unmanageable about making an API call like:<br>\nGET /myserverregistry/?server=stmarys787676313<br>\nWhich checks your db and returns back the client ID and baseURL for that provider the user chose?</p>",
        "id": 238156878,
        "sender_full_name": "Craig McClendon",
        "timestamp": 1620658920
    },
    {
        "content": "<p>Well craig, there are almost 1 million active MDs in the US (nevermind internationally,  plus 6,090 hospitals, plus plus plus).  If each one is expected to have a FHIR server for 21c cures, and every vendor assigns a unique client  id and secret for every app, that is a configuration problem.</p>",
        "id": 238157668,
        "sender_full_name": "Richard Braman (FLY.HEALTH)",
        "timestamp": 1620659209
    },
    {
        "content": "<p>The question is really are going to scale this thing we have all worked on so hard, or is it just a dream?  I have 10 years invested in this. Community over Competition?</p>",
        "id": 238158310,
        "sender_full_name": "Richard Braman (FLY.HEALTH)",
        "timestamp": 1620659436
    },
    {
        "content": "<p>Craig if we used a server header in the Endpoint.header that identified the EHR vendor like GET /myserverregistry/?server=Allscripts+Sunrise+18.4, then the problem becomes much more manageable.  Then a simple policy like Vendors shall only issue one client id to a registered app for all their production FHIR APIs, we actually have scale.</p>",
        "id": 238158787,
        "sender_full_name": "Richard Braman (FLY.HEALTH)",
        "timestamp": 1620659631
    },
    {
        "content": "<p>Well almost scale.  The next issue is Source of Truth for Endpoints.  Vendors are publishing their FHIR Endpoints on deep linked web pages , git hub repos (have a look at this one <a href=\"https://github.com/cerner/ignite-endpoints/issues/2\">https://github.com/cerner/ignite-endpoints/issues/2</a> ), the information is out of date, wont be updated til next year.  Come on guys, we can do better.</p>",
        "id": 238159401,
        "sender_full_name": "Richard Braman (FLY.HEALTH)",
        "timestamp": 1620659863
    },
    {
        "content": "<p>Having endpoints online and providing a way for apps to connect is a <em>huge</em> start, which is why it has been my focus for this first phase. By the time ONC's current rules are in effect, each vendor will have a list of endpoints published, and a process in place to register apps.  I'm pretty confident in the ability of app developers to manage connections (at least that's something they <em>can do</em> without relying on outside parties to take action).</p>",
        "id": 238171228,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1620664025
    },
    {
        "content": "<p>What do you think about the Server header in Endpoint.header?<br>\n  It seems to fit the use of the field as described in the spec..</p>",
        "id": 238226182,
        "sender_full_name": "Richard Braman (FLY.HEALTH)",
        "timestamp": 1620688661
    },
    {
        "content": "<p>The UDAP work is currently being brought into HL7. Thus you should engage with the UDAP sub-workgroup of the Security WG and help develop this into a system that you  would agree with and that would function. The next tcon is today <a href=\"https://confluence.hl7.org/pages/viewpage.action?pageId=111124331\">https://confluence.hl7.org/pages/viewpage.action?pageId=111124331</a></p>",
        "id": 238297306,
        "sender_full_name": "John Moehrke",
        "timestamp": 1620735893
    },
    {
        "content": "<p>John, I went on the meeting yesterday but the call was cut off before the floor was open to ask about this.</p>",
        "id": 238503137,
        "sender_full_name": "Richard Braman (FLY.HEALTH)",
        "timestamp": 1620836578
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"193261\">craig mcclendon</span> <a href=\"#narrow/stream/179166-implementers/topic/Endpoint.20Resource/near/238156878\">said</a>:</p>\n<blockquote>\n<p>What is unmanageable about making an API call like:<br>\nGET /myserverregistry/?server=stmarys787676313<br>\nWhich checks your db and returns back the client ID and baseURL for that provider the user chose?</p>\n</blockquote>\n<p>Hey Craig,  instead of using a non FHIR endpoint to hold the client id of the app registered to a Server,  I used the FHIR Device Resource:<br>\n<a href=\"https://api.fhirfly.io/network/Device/FHIRFLY\">https://api.fhirfly.io/network/Device/FHIRFLY</a></p>\n<p>FHIRFLY comes from the Server Header set in Endpoint.<br>\n<a href=\"https://api.fhirfly.io/network/Endpoint?name=FHIRFLY\">https://api.fhirfly.io/network/Endpoint?name=FHIRFLY</a></p>",
        "id": 238519877,
        "sender_full_name": "Richard Braman (FLY.HEALTH)",
        "timestamp": 1620843339
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195299\">@Luis Maas</span> ?</p>",
        "id": 238529217,
        "sender_full_name": "John Moehrke",
        "timestamp": 1620846969
    }
]