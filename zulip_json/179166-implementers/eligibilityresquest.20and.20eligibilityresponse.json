[
    {
        "content": "<p>How to implement eligibilityresquest and eligibilityresponse resource access for a FHIR server? Should an FHIR resource request \"eligibilityresquest\" get \"eligibilityresponse\" resources back?</p>",
        "id": 153842695,
        "sender_full_name": "jassy",
        "timestamp": 1470425649
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191430\">@Paul Knapp</span> should comment - but in a messaging solution, yes. </p>",
        "id": 153842702,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1470431598
    },
    {
        "content": "<p>in REST, you would post the request and poll looking for a response unless the response will be posted elsewhere (e.g. to you)</p>",
        "id": 153842703,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1470431631
    },
    {
        "content": "<p>So assume it makes sense for doing it in REST, the flow could be:   <br>\n  client POST an eligibilityrequest  to server and later client GET an eligibilityresponse (related to the eligibilityrequest POSTed earlier) from server. Can we confirm this is one expected work flow in respect to FHIR standard?!  </p>",
        "id": 153842719,
        "sender_full_name": "jassy",
        "timestamp": 1470436647
    },
    {
        "content": "<p>I think it is. Though I think most of the participants in the connnectathons have focused on req/resp by messaging or an operation</p>",
        "id": 153842720,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1470436713
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>. We will look into operation and messaging as well.</p>",
        "id": 153842723,
        "sender_full_name": "jassy",
        "timestamp": 1470436964
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192318\">@jassy</span> Take a look at the <a href=\"http://workflow\" target=\"_blank\" title=\"http://workflow\">http://hl7-fhir.github.io/workflow.html</a> page in the spec.  It identifies a number of different mechanisms for handling request/response situations and identifies some of the trade-offs in the different approaches.</p>",
        "id": 153842736,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1470450225
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"jassy.snow.place@gmail.com\">@jassy</span> You are correct, in FHIR REST you would POST an EligibilityRequest and then Get (Poll) for an EligibilityResponse, from the target server (normmaly) or your local server (if there is an arrangeent whereby the target server is allowed to Post the EligibiliyResponse) at a later time. <br>\nIn a Request/Response paradigm you would sent the Eligibility as a Request and receive the  EligibilityResponse as the Response.<br>\nWe have demonstrated both approaches in Connectathons, including multiple Request/Response transports (TCP, http (rest), WSI web services), but the connectathon activity tends to focus on the Request/Response style given the immediate response nature and effeciency of the exchange.</p>",
        "id": 153842852,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1470546735
    },
    {
        "content": "<p>There's several other possibilities too - using publish subscribe, using Task or even dropping outside HTTP and using something like SMTP for a non-immediate response.</p>",
        "id": 153842857,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1470548559
    },
    {
        "content": "<p>There are lots of possiblities, especially important can be consideration of using existing transports so that you don't have to re-engineer your transport layer(s) just because you want to upgrade your content models.</p>\n<p>Pub/Sub is excess machinery, not the way the business flows and inefficient if the answer can come in the response. However, if this was the coutry-wide decision as to how content models would be exchanged then it would be more efficient to support that model than oppose.</p>\n<p>Task is a content model rearraingement, not a transport level change.</p>\n<p>Existing model are often Request/Response based and not necessarily TCP or HTMP based. SMTP would work too - just not effcient - unless that's all you have or is better than what you have. </p>",
        "id": 153842861,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1470550957
    },
    {
        "content": "<p>Thanks for those info. I am thinking on using Messaging with $process-message over our FHIR REST service for eligibilityresquest and eligibilityresponse.</p>",
        "id": 153843428,
        "sender_full_name": "jassy",
        "timestamp": 1470862200
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"jassy.snow.place@gmail.com\">@jassy</span>: are you a provider or a payor?</p>",
        "id": 153843560,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1470897920
    }
]