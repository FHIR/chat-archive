[
    {
        "content": "<p>Hello Everyone,</p>\n<p>State(a random string for CSRF) in OAuth2 must be unique per user request/session?<br>\nIf it is per session I'm using web API whose definition said it should be stateless(Server has no clue about client state) then how can i achieve that?</p>",
        "id": 176111500,
        "sender_full_name": "Shahzeb Jadoon",
        "timestamp": 1568907338
    },
    {
        "content": "<p>The state token I'm aware of is per session as part of getting the auth code.<br>\n1. You pass a state token to the EHR when you <a href=\"http://www.hl7.org/fhir/smart-app-launch/#step-1-app-asks-for-authorization\" target=\"_blank\" title=\"http://www.hl7.org/fhir/smart-app-launch/#step-1-app-asks-for-authorization\">request an auth code</a>.<br>\n2. The EHR <a href=\"http://www.hl7.org/fhir/smart-app-launch/#step-2-ehr-evaluates-authorization-request-asking-for-end-user-input\" target=\"_blank\" title=\"http://www.hl7.org/fhir/smart-app-launch/#step-2-ehr-evaluates-authorization-request-asking-for-end-user-input\">returns your state token with your auth code</a><br>\nHow does that mismatch with the API you're using?</p>",
        "id": 176112179,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568907746
    },
    {
        "content": "<p><strong>Michael Donnelly</strong> question is not about mismatching . <br>\nQuestion 1: When an app causes the browser  to navigate the browser to the EHRâ€™s authorization URL, state already present there. But if same user send again a request in this case state will be change or same? <br>\nQuestion 2: And if a user refresh authorization URL then state will be same or change?</p>",
        "id": 176122771,
        "sender_full_name": "Shahzeb Jadoon",
        "timestamp": 1568914575
    },
    {
        "content": "<p>The requesting app sets the state when it begins any given OAuth interaction -- so it (the app) is in charge of determining whether it's the same or different. But from a security perspective, a best practice is for the app to make these <code>state</code> values unguessable and unique.</p>",
        "id": 176123220,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568914877
    },
    {
        "content": "<p>When you say \"request\" are you only talking about the request to the authorization URL?</p>",
        "id": 176127656,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568917494
    },
    {
        "content": "<p>That's right.</p>",
        "id": 176130681,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568919533
    },
    {
        "content": "<p>Heh.  I know you are; I'm asking <span class=\"user-mention\" data-user-id=\"240477\">@Shahzeb Jadoon</span></p>",
        "id": 176134300,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568922046
    },
    {
        "content": "<p>Yes <strong>Michael Donnelly</strong>.</p>",
        "id": 176186085,
        "sender_full_name": "Shahzeb Jadoon",
        "timestamp": 1568980951
    },
    {
        "content": "<p>I am confused, when a user get authorization code on behalf of state. If a request comes from same state again, should we allow that user as new login or reject the request ?</p>",
        "id": 176186824,
        "sender_full_name": "Shahzeb Jadoon",
        "timestamp": 1568981653
    },
    {
        "content": "<p>Enforcing unique states is not the responsibility of a server --</p>",
        "id": 176192597,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568986265
    },
    {
        "content": "<p>It is a best practice for the client developer. A server just passes the client-supplied states through the interaction, from the authorized step through the redirect.</p>",
        "id": 176192650,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568986291
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>  <br>\nI think he may be asking that, he should maintain that particular state or every request will have unique State parameter. If yes then how will he know to which request he will send response.</p>",
        "id": 176193264,
        "sender_full_name": "Ali Haider",
        "timestamp": 1568986710
    },
    {
        "content": "<p><del>Basically the requirement is that the server will mint an authorization code that it associates with the request's <code>state</code> value, so that it can return the <code>state</code> in the final access token response. You could accomplish that in a stateless (for the server!) way by creating the authorization code as an encrypted and authenticated blob that internally includes this state value. But one of the requirements for the server is to reject token requests with authorization codes that a client attempts to use more than once-- so you at least need to keep a cache of recently used authorization codes with a time-to-live that is greater than your authorization code usage window</del></p>\n<p>(I was answering without enough sleep; please ignore ;-))</p>",
        "id": 176194144,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568987320
    },
    {
        "content": "<blockquote>\n<p>I am confused, when a user get authorization code on behalf of state. If a request comes from same state again, should we allow that user as new login or reject the request ?</p>\n</blockquote>\n<p>A server need not persist the state beyond that single interaction.  The only thing the server needs to do with the state is return it with the auth code.  It never looks at it, thinks about it, or retains it beyond that.</p>",
        "id": 176198753,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568990532
    },
    {
        "content": "<p>It would be insecure for a client to reuse a state token, but the server doesn't enforce that.</p>",
        "id": 176198785,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568990554
    },
    {
        "content": "<p><strong>Josh Mandel</strong> what you meant by that ? Have you got enough sleep now <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> ?</p>",
        "id": 176260640,
        "sender_full_name": "Shahzeb Jadoon",
        "timestamp": 1569064509
    }
]