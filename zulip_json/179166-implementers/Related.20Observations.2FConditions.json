[
    {
        "content": "<p>We (the german fhir user group) are about to enter a change request affecting the Observation and Condition resource.<br>\nOur proposal aims to<br>\n# Harmonize the way Observations and Conditions express relationships to other resources<br>\n# Offer an extensible ValuSet of relationship types, that may not all be in the 80% but cover a range of relationships that occur in realms such as cancer registries (It should be up to the int. community to decide which types are in the 80%)<br>\n# offer mechanisms that - in the spirit of extensible ValueSets - cover most people's use cases, but can also be extended to cover an even wider spectrum without fringing out into different extensions, that are all identical in shape (or, at least, should be!) but differ in semantic nouances.</p>\n<p>Here's the full text of our proposal: <a href=\"http://wiki.hl7.de/index.php?title=FHIR-Kritzelblock_CRQ_Verlinkte_Diagnosen\" target=\"_blank\" title=\"http://wiki.hl7.de/index.php?title=FHIR-Kritzelblock_CRQ_Verlinkte_Diagnosen\">http://wiki.hl7.de/index.php?title=FHIR-Kritzelblock_CRQ_Verlinkte_Diagnosen</a><br>\nBefore we submit to GForge, we'd like to hear a couple of opinions from the community.</p>",
        "id": 153820152,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1460020137
    },
    {
        "content": "<p>I'm not currently working on these issues so have little of substance to contribute. But I want to throw in another type of relationship that we've used in a pilot project (currently on hold) that might become more important in the future:</p>\n<p>We have a <code>Condition</code> expressing a  cancer diagnosis, and 1 or more <code>Observation</code> resources that describe gene expressions in samples of said cancer. We're using a <strong>http://.../gene-expression-in</strong> <code>modifierExtension</code> on the _Observation_ in this case. Short of not having a proposed code, the proposal looks like it could support such a relationship, except maybe for the timing restriction.</p>",
        "id": 153820161,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1460020971
    },
    {
        "content": "<p>We had evaluated the notion of generic relationship + vocabulary for Condition relationships - in fact, we started out with that.  However, we decided that it didn't really offer significantly different behavior (or act much lighter weight) than just using specific extensions.  And extensions give you easier control when profiling and are more easily discoverable than people creating custom relationship types.</p>",
        "id": 153820323,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1460044812
    },
    {
        "content": "<p>What was the rationale  to keep the generic approach in Observations?</p>",
        "id": 153820334,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1460055058
    },
    {
        "content": "<p>It looks like the proposal only would change the way Condition relates to other resources.   We never discussed an alternative approach.  OO vs PC thing and I'm usually on the PC call but don't remember that.    Additionally the type list is really contextual to what is being referenced.  In fact you would need a matrix of resource and type if you referenced more than single resource</p>",
        "id": 153820335,
        "sender_full_name": "Eric Haas",
        "timestamp": 1460057419
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 153820336,
        "sender_full_name": "Eric Haas",
        "timestamp": 1460057546
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> Different group of people responsible for the resource - so there was no discussion from an OO perspective.  As well, I suspect the 80% evaluation would have been a bit different.  Certainly \"component\" would fall within the 80% for Observation.</p>",
        "id": 153820397,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1460063156
    },
    {
        "content": "<p>If there is consense that at least some types of relations (like the mentioned \"component\" or Condition.evidence) are within the 80% and as such part of the base standard, I would consider it highly inconsistent to force other types of relations into extensions.<br>\nFrom an implementer's view, this would mean two completely different representations of the same technical mechanism (\"X is related to Y\") while the difference is only in semantics.</p>",
        "id": 153820457,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1460114150
    },
    {
        "content": "<p>Not really.  Some relationships would have a specific name - e.g. \"component\" or \"fulfills\" and be part of core.  Others would be extensions instead.  That's no different than how we treat \"subject\" or \"author\" as opposed to \"data enterer\" or \"supervisor\".  Having coded relationships is a little odd in FHIR.  We needed to do it in v3 because we needed to allow for everything.  With FHIR, it only really makes sense when you've got a structure more complex than\"code + relationship\"</p>",
        "id": 153820473,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1460122307
    },
    {
        "content": "<p>I see the point.<br>\nFollowing the paradigma of not coding relationship types it would be more appropriate to propose new elements (e.g. \"causedBy\" or \"manifestationOf\"), followed by an evaluation whether they are in the 80%, right?<br>\nHas that evaluation been done earlier, especially for equivalents of V3 CAUS, MFST and SPRT?</p>\n<p>To refine Simone's question: what was the rationale to keep Observation.related, given the above paradigma is global for FHIR?<br>\nCorrect me if I'm wrong, but shouldn't that better be transformed into a set of separate elements and/or extensions then?</p>",
        "id": 153820484,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1460127676
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span> I don't think there is a \"global paradigm\" for FHIR yet.  There was an assertion in a change request (which I think I might have originated) that was discussed and agreed within the Patient Care work group but which didn't propagate to Orders &amp; Observations.  I think it's probably a good idea to have a policy here and would welcome a change request pointing out the inconsistency (and perhaps identifying other places where this appears).  I'd also welcome viewpoints here as to whether there's agreement on aiming for distinct relationship elements (and extensions) vs. having generic (and potentially extensible) coded relationship types.</p>",
        "id": 153820525,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1460138494
    },
    {
        "content": "<p>I agree with Lloyd. </p>",
        "id": 153820539,
        "sender_full_name": "Eric Haas",
        "timestamp": 1460187113
    },
    {
        "content": "<p>I think that's exactly why we put the current state of the proposal for discussion here.<br>\nIt already contains the intention to clean up the inconsistency and (naturally) chose one of the existing ways to add the type of relations we are currently missing. If it turns out that the \"distinct elements\" variant is the way to go, it would be pointless to propose the \"generic\" variant.</p>",
        "id": 153820545,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1460195263
    },
    {
        "content": "<p>I just did a quick check for further inconsistencies. Except for Observation.related, every other relation I found within the clinical context uses distinct elements.<br>\nThe generic way is more common when it comes to roles, as with Contract.agent, Contract.signer, AuditEvent.agent, Appointment.participant and AppointmentResponse. These might be out of the scope of the proposal but worth a review.</p>\n<p>A different type of inconsistency seems to be Immunization.reaction, which points forward in time while I remember someone (I believe it was <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> ) stating that relations should always point to the past.</p>",
        "id": 153820550,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1460202097
    },
    {
        "content": "<p>Roles tend to be more open-ended and larger in terms of the allowed values.  There's a lot less need for interoperability there.  So I think I'm comfortable with a difference in how we model things.  Immunization does indeed violate the guideline.  However, industry convention is to update the Immunization record with an explicit link.  And in this case, you can think of the reference as a \"potential causality\" assertion - which would logically happen after the existence of the reaction was recorded.  We might raise the question with the PHER group, but unless there's significant pushback from the implementer community, I'm comfortable with it as it is.</p>",
        "id": 153820558,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1460213081
    },
    {
        "content": "<p>Funny thing about Immunization it is a hybrid of Immunization and ImmunizationStatement so it could be referring to something that has already occurred.  </p>",
        "id": 153820561,
        "sender_full_name": "Eric Haas",
        "timestamp": 1460221969
    },
    {
        "content": "<p>I would not be inclined to reverse that reference.</p>",
        "id": 153820562,
        "sender_full_name": "Eric Haas",
        "timestamp": 1460222141
    },
    {
        "content": "<p>Observation related observations are a tricky beast. You absolutely need component and panel (member). I don't have a strong feeling for the others </p>",
        "id": 153820615,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460351523
    },
    {
        "content": "<p>...Then the others could be extensions.</p>",
        "id": 153820629,
        "sender_full_name": "Eric Haas",
        "timestamp": 1460355837
    }
]