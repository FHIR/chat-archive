[
    {
        "content": "<p>I have not found any clear text that tells me what the logical id is that is assigned to a newly created resource. For example, I upload a resource with a create operation and the response gives me<br>\n \"location\": \"Patient/12423/_history/1\",<br>\nIf I retrieve that resource will the logical id be <br>\n12423<br>\nor<br>\n12423/_history/1?</p>\n<p>What will happen if I do a search based on Patient/12423  vs Patient/12423/_history/1?</p>",
        "id": 157775381,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1549545275
    },
    {
        "content": "<p>What server is returning that?</p>",
        "id": 157778936,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1549548581
    },
    {
        "content": "<p>logial id is 12423.  1 is the version.  If you do a version-specific GET, you'll get that version, even if it isn't the current version.  If you do a GET with only the logical id, you'll get the current version of the resource.</p>",
        "id": 157785921,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1549554148
    },
    {
        "content": "<p>? wouldn't the logical Id be Patient/12432, to distinguish between itself and e.g. Observation/12432 ?</p>",
        "id": 157921966,
        "sender_full_name": "René Spronk",
        "timestamp": 1549701831
    },
    {
        "content": "<p>Logical id is within the scope of the resource type</p>",
        "id": 157935388,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1549728412
    },
    {
        "content": "<p>So 'logical Id' is only unique (as an identifier for a particular resource instance) if combined with the Resource type and the Base URL. Note that the concept of resources having a URL  next to a business identifier is a hard thing to understand for non-web programmers. What's the purpose (if any) of the Logical id besides it being part of a resource URL? <br>\nIn entry level training courses we've switched to use the terms \"location id\" (=URL, id of the storage location, the locker number, like the id of a web page) and business id (the id of the thing contained in the locker).</p>",
        "id": 157968083,
        "sender_full_name": "René Spronk",
        "timestamp": 1549791366
    },
    {
        "content": "<p>indeed, that's a very good question. And initially, we didn't have the id as part of the resource, since it's only function was to duplicate the resource id implicit in the URL. But implementers strongly preferred it to be present for convenience (and it mostly is in other RESTful APIs), so we added it. You should describe it as a denormalization for convenience</p>",
        "id": 157968606,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1549792470
    },
    {
        "content": "<p>I think of it like a primary key.  Like a primary key, it's only unique within a specific table (resource) and database (server).</p>",
        "id": 157981599,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1549816508
    }
]