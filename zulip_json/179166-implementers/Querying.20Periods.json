[
    {
        "content": "<p>I'm going to use the Schedule resource but this applies to querying across all \"Period\" data types.</p>\n<p>If I have the query   http://[domain]/Schedule?date=ge2010-01-01&amp;date=le2011-12-31 which of the following (if any) is true...</p>\n<p>1) Return all Schedule resources where the planningHorizon wholly lies between 01-Jan-20101 and  31-Dec-2011</p>\n<p>2) Return all Schedule resources where the planningHorizon peiod overlaps the time period on  between 01-Jan-20101 and  31-Dec-2011</p>\n<p>Assuming it is one of the above, how would you do the other?</p>",
        "id": 153817920,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1458828398
    },
    {
        "content": "<p>I believe it would be (2)</p>\n<p>To do (1) you're looking for <code>http://[domain]/Schedule?date=sa2010-01-01&amp;date=eb2011-12-31</code> if I'm reading the explanations <a href=\"http://hl7-fhir.github.io/search.html#prefix\" target=\"_blank\" title=\"http://hl7-fhir.github.io/search.html#prefix\">here</a> correctly</p>",
        "id": 153818161,
        "sender_full_name": "James Agnew",
        "timestamp": 1458941897
    },
    {
        "content": "<p>I think there is some inconsistent language in the spec regarding how date queries work with periods.  Rather than start a new topic, this one seems appropriate.  Here are the inconsistent statements:</p>\n<p>A description of the <code>date</code> parameter from <a href=\"http://hl7-fhir.github.io/encounter.html\" target=\"_blank\" title=\"http://hl7-fhir.github.io/encounter.html\">Encounter</a></p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Type</th>\n<th>Description</th>\n<th>Paths</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>date</td>\n<td>date</td>\n<td>A date within the period the Encounter lasted</td>\n<td>Encounter.period</td>\n</tr>\n</tbody>\n</table>\n<p>This corresponds with what is implied by some of the examples on the search page too -- and is generally what I expect is the intended approach.</p>\n<p>That said, the <a href=\"http://hl7-fhir.github.io/search.html#prefix\" target=\"_blank\" title=\"http://hl7-fhir.github.io/search.html#prefix\">Prefixes</a> section of the search page states that the default prefix is <code>eq</code> and defines <code>eq</code> as such for ranges (which include periods):</p>\n<blockquote>\n<p>the range of the search value fully contains the range of the target value</p>\n</blockquote>\n<p>This definition does not mix well with the former descriptions.  In the former case, the search value must <strong>be contained by</strong> the target period.  In the latter case, the search value must <strong>fully contain</strong> the target period.</p>\n<p>So, which is it?  If I say <code>Encounter?date=2016-05-15</code> does it match an Encounter with a period from 2016-05-10 to 2016-05-20?</p>",
        "id": 153827399,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463071778
    },
    {
        "content": "<p>Once we have a consensus on the answer, I'm glad to file a change request (if one is deemed necessary)</p>",
        "id": 153827400,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463071891
    },
    {
        "content": "<p>This also leads to the followup question, which correlates to the original question on this thread: If the search param value is an implicit range (e.g., <code>Encounter?date=2016</code>) that only partially overlaps the actual period (say <code>2015-12-29</code> - <code>2016-01-4</code>), then is it a match?  The spec seems to indicate that the <code>ap</code> prefix indicates an overlap, so I guess maybe not?</p>",
        "id": 153827402,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463073096
    },
    {
        "content": "<p>firstly, I agree that the definition is the wrong way around . </p>",
        "id": 153827445,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463077882
    },
    {
        "content": "<p>secondly, I think that it is not a match, and you need ap</p>",
        "id": 153827446,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463077891
    },
    {
        "content": "<p>Thanks, <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>.  So you're saying that the definition should be:</p>\n<blockquote>\n<p>the range of the search value is fully contained by the range of the target value</p>\n</blockquote>\n<p>Correct?  To be clear, this means that <code>Encounter?date=2016</code> doesn't even match an encounter which happened entirely in 2016 (e.g., 2016-05-10 thru 2016-05-20).  Is that the intent?</p>",
        "id": 153827455,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463078574
    },
    {
        "content": "<p>That would be a very surprising result (i.e. that should not be the answer).</p>",
        "id": 153827456,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1463078622
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>:  I only mention it because that result (matching on <code>Encounter?date=2016</code>) might be exactly how servers who implemented the spec definition as written might behave today.  I wanted to be sure that the inverse really is the <strong>intended</strong> behavior.</p>",
        "id": 153827457,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463078764
    },
    {
        "content": "<p>My server responds returns resources with dates like \"2010-05-02\" in response to a query for \"date=2010\".</p>",
        "id": 153827459,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1463078879
    },
    {
        "content": "<p>Are you saying this is different for periods?</p>",
        "id": 153827460,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1463078932
    },
    {
        "content": "<p>Ah.  OK.  I misunderstood what you were saying was unexpected.  My server is currently implemented the same way!  So I hear you.</p>",
        "id": 153827461,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463078958
    },
    {
        "content": "<p>And</p>\n<div class=\"codehilite\"><pre>curl &quot;http://fhirtest.uhn.ca/baseDstu2/Encounter?_id=5728&amp;date=2016&quot;\ncurl &quot;http://fhir3.healthintersections.com.au/open/Encounter?_format=json&amp;_pretty=true&amp;_id=87&amp;date=2016&quot;\n</pre></div>\n\n\n<p>return encounters that occurred with start and end entirely in 2016, etc.</p>",
        "id": 153827464,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1463079043
    },
    {
        "content": "<p>sigh. this is too hard for this time in the meeting</p>",
        "id": 153827465,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463079114
    },
    {
        "content": "<p>I'm saying that there seems to be some confusion in the spec around periods.  I can see why <code>date=2010</code> should return anything that happened in 2010.  But, according to the definition of Encounter, the date param represents a date that occurred during the Encounter period.  But I <strong>think</strong> the spec indicates that <code>date=2016</code> implicitly means the range from 2016-01-01 to 2016-12-31.  That range did not fully occur during the encounter period.</p>",
        "id": 153827466,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463079165
    },
    {
        "content": "<p>It overlapped.  But according to spec, overlap is <code>ap</code>, not <code>eq</code>.</p>",
        "id": 153827468,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463079202
    },
    {
        "content": "<p>I'm not sure what the right answer should be.  Unlike my contributions to some other topics, I actually don't have a predetermined opinion here -- I'm just trying to figure out how it is supposed to work.</p>",
        "id": 153827470,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463079264
    },
    {
        "content": "<p>;-)</p>",
        "id": 153827471,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463079276
    },
    {
        "content": "<p>BTW-- reversing the definition would have serious implications for number too.  If <code>eq</code> is defined as \"the range of the search value is fully contained by the range of the target value\", then <code>value=4</code> would not match <code>4.0</code>, because \"4\" has implicit range [3.5, 4.5) and \"4.0\" has implicit range [3.95,4.05).  So I don't think we can/should reverse the definition like that.</p>",
        "id": 153827473,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463079504
    },
    {
        "content": "<p>So, back to the original question.  Should <code>Encounter?date=2016-05-15</code> match an Encounter with period 2016-05-10 to 2016-05-20?  According to definition of <code>eq</code>, it should not -- but some aspects of the spec imply otherwise.</p>",
        "id": 153827475,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463079646
    },
    {
        "content": "<p>BTW -- HAPI seems to <strong>not</strong> match it.  So maybe it's just a matter of the wording in some of the search param descriptions (like Encounter.date).</p>",
        "id": 153827476,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463080098
    },
    {
        "content": "<p>Really? I just tried this in a unit test and it matches for me. Any chance you have a URL you can point to?</p>",
        "id": 153827480,
        "sender_full_name": "James Agnew",
        "timestamp": 1463081332
    },
    {
        "content": "<p>Shoot.  I lied.  It was Health Intersections that didn't match it.  Sorry.  I have the wrong base path.</p>",
        "id": 153827501,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463082617
    },
    {
        "content": "<p>I thought I tested both (with my curl commands above) and both behaved the same.</p>",
        "id": 153827502,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1463082647
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>: I was talking about testing if a date within in a period matches on the period.  You were testing if a date representing a superset of the period matches the period.</p>",
        "id": 153827503,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463082713
    },
    {
        "content": "<p>Gotcha!</p>",
        "id": 153827504,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1463082729
    },
    {
        "content": "<p>For example, this one matches on a period from 11:30am to 12:30pm, even though the date param is for 12:00pm:<br>\n<a href=\"http://fhirtest.uhn.ca/baseDstu2/Encounter?date=2016-02-23T12:00:00-04:00\" target=\"_blank\" title=\"http://fhirtest.uhn.ca/baseDstu2/Encounter?date=2016-02-23T12:00:00-04:00\">http://fhirtest.uhn.ca/baseDstu2/Encounter?date=2016-02-23T12:00:00-04:00</a></p>",
        "id": 153827505,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463082900
    },
    {
        "content": "<p>But this violates the currently documented definition of <code>eq</code> for ranges:</p>\n<blockquote>\n<p>the range of the search value fully contains the range of the target value</p>\n</blockquote>",
        "id": 153827506,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463082962
    },
    {
        "content": "<p>But satisfies definition of <code>Encounter.date</code> search param:</p>\n<blockquote>\n<p>A date within the period the Encounter lasted</p>\n</blockquote>",
        "id": 153827507,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463083024
    },
    {
        "content": "<p>Therein lies the rub.</p>",
        "id": 153827508,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463083045
    },
    {
        "content": "<p>Conversely, on Health Intersections, a similar query does *not* match on a date <strong>inside</strong> the period:<br>\n<a href=\"http://fhir3.healthintersections.com.au/open/Encounter?_format=json&amp;_pretty=true&amp;_id=87&amp;date=2016-01-17T16:15:00%2B10:00\" target=\"_blank\" title=\"http://fhir3.healthintersections.com.au/open/Encounter?_format=json&amp;_pretty=true&amp;_id=87&amp;date=2016-01-17T16:15:00%2B10:00\">http://fhir3.healthintersections.com.au/open/Encounter?_format=json&amp;_pretty=true&amp;_id=87&amp;date=2016-01-17T16:15:00%2B10:00</a><br>\n(16:15 is inside the period of 16:00 - 16:30 defined in encounter with ID 87)</p>",
        "id": 153827510,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463083199
    },
    {
        "content": "<p>Ahh interesting. I don't remember that definition being there last time I looked... I wonder if it's new.</p>\n<p>One way or the other, I would say HAPI is doing the wrong thing.</p>",
        "id": 153827511,
        "sender_full_name": "James Agnew",
        "timestamp": 1463083358
    },
    {
        "content": "<p>If that's the intended definition then (and I think it needs to be, especially considering the issue with numbers and implicit ranges), then I think it would be good to figure out a better way of describing search parameters that go against periods.  The current definition on Encounter.date is quite misleading.</p>",
        "id": 153827512,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463083586
    },
    {
        "content": "<p>While we're here, I think that maybe the period definitions (3rd column) for <code>sa</code> and <code>eb</code> might be backwards.  What do you think?</p>\n<table>\n<thead>\n<tr>\n<th>prefix</th>\n<th></th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>sa</td>\n<td>the value for the parameter in the resource starts after the provided value</td>\n<td>the range of the search value does not overlap with the range of the target value, and the range below the search value contains the range of the target value</td>\n</tr>\n<tr>\n<td>eb</td>\n<td>the value for the parameter in the resource ends before the provided value</td>\n<td>the range of the search value does overlap not with the range of the target value, and the range above the search value contains the range of the target value</td>\n</tr>\n</tbody>\n</table>\n<p>Shouldn't <code>sa</code> indicate that the range <strong>above</strong> the search value contains the range of the target value?</p>",
        "id": 153827515,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463084100
    },
    {
        "content": "<p>Yeah, I'm pretty sure that's wrong.  I'll file a bug for that.</p>",
        "id": 153827519,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1463084268
    }
]