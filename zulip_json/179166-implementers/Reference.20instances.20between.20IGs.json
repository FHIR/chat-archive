[
    {
        "content": "<p>Hi, we have a problem which concerns referencing instances created in one IG (1) in Bundle.entry.resource from another IG (2) in FSH. Â <br>\n<span class=\"user-mention\" data-user-id=\"192155\">@Anders Jensen</span> <br>\nIn IG (2) we have declared dependencies to (1) in the sushi-config.yaml file. <br>\nIn IG (1) is the following Organization-instance is created: <br>\n<a href=\"/user_uploads/10155/vpHGHAFs_Ol2n5KFo4UR4IjS/Instance.png\">Instance.png</a> <br>\nIn IG (2) we want to reference the above-mentioned Organization from the Bundle.entry.resource element. <br>\n<a href=\"/user_uploads/10155/aEo5QD9Ll1ne_HGTkP26UklK/ReferenceToInstance.png\">ReferenceToInstance.png</a><br>\nIt work just fine in the Bundle.entry.fullUrl element, but not in the resource element and we get the following error.  <br>\n<a href=\"/user_uploads/10155/-p23J1vOhMYlU8sWCa1_On0-/Error.png\">Error.png</a> <br>\nWe would really appreciate any input on how to solve this problem. <br>\nThank you in advance.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/vpHGHAFs_Ol2n5KFo4UR4IjS/Instance.png\" title=\"Instance.png\"><img src=\"/user_uploads/10155/vpHGHAFs_Ol2n5KFo4UR4IjS/Instance.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/10155/aEo5QD9Ll1ne_HGTkP26UklK/ReferenceToInstance.png\" title=\"ReferenceToInstance.png\"><img src=\"/user_uploads/10155/aEo5QD9Ll1ne_HGTkP26UklK/ReferenceToInstance.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/10155/-p23J1vOhMYlU8sWCa1_On0-/Error.png\" title=\"Error.png\"><img src=\"/user_uploads/10155/-p23J1vOhMYlU8sWCa1_On0-/Error.png\"></a></div>",
        "id": 265284497,
        "sender_full_name": "Thea Mentz Soerensen",
        "timestamp": 1639740636
    },
    {
        "content": "<p>seems like a question for <a class=\"stream\" data-stream-id=\"215610\" href=\"/#narrow/stream/215610-shorthand\">#shorthand</a></p>",
        "id": 265291263,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639745478
    },
    {
        "content": "<p>You're creating these as examples (when <code>Usage:</code> is not specified, it defaults to <code>#example</code> for <em>Instances</em>).  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> -- should one IG be able to reference <em>examples</em> from another IG?  Or is the expectation that only the non-example resources can be referenced and used by other IGs?</p>",
        "id": 265298116,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1639749441
    },
    {
        "content": "<p>would be nice to be able to use examples from dependencies (core + IGs) as if they were part of your IG. I keep having to create core examples to build the story in my IG, these get copy/pasted around.</p>",
        "id": 265298790,
        "sender_full_name": "John Moehrke",
        "timestamp": 1639749724
    },
    {
        "content": "<p>I think a challenge is that examples don't necessarily have a canonical URL, and therefore don't necessarily have a unique id.  For example (no pun intended), the reference <code>Patient/Patient1</code> could exist in multiple dependency IGs; which one should be used?</p>",
        "id": 265299798,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1639750260
    },
    {
        "content": "<p>yup, but it does exist within an IG (or core); which do have a canonical root</p>",
        "id": 265299894,
        "sender_full_name": "John Moehrke",
        "timestamp": 1639750314
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> -- that's a good point.  I suppose we could try appending the IG canonical w/ <code>/{type}/{id}</code> to see if that gets us anywhere.  I can experiment a little to see if/how the IG Publisher handles this situation.  I have no idea if it is supported or not.</p>",
        "id": 265300276,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1639750491
    },
    {
        "content": "<p>Examples from the core spec can be used - <a href=\"#narrow/stream/179252-IG-creation/topic/Unable.20to.20resolve.20Core.20Spec.20Example.20Link/near/260759235\">see here</a></p>",
        "id": 265303843,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1639752120
    },
    {
        "content": "<p>certainly structureDefinition from core; I didn't know (and that chat stream doesn't make it clear) that example resources from core can be used. I admit, I tried once and it was easier to copy/paste than try to figure it out</p>",
        "id": 265305187,
        "sender_full_name": "John Moehrke",
        "timestamp": 1639752697
    },
    {
        "content": "<p>There is a separate package for core examples that needs to be included as a dependency, that is what the other stream is showing</p>",
        "id": 265305962,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1639753052
    },
    {
        "content": "<p>Thanks for the pointer <span class=\"user-mention\" data-user-id=\"192685\">@Vassil Peytchev</span>.  That will help as I try to figure out how this should work.  Hopefully whatever works for FHIR core examples would also work for IG examples...</p>",
        "id": 265313513,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1639755925
    },
    {
        "content": "<p>ah, I missed that</p>",
        "id": 265314984,
        "sender_full_name": "John Moehrke",
        "timestamp": 1639756446
    },
    {
        "content": "<p>Just a heads up: I'm running into weirdness trying to declare the examples packages as a dependency in my SUSHI project.  For some reason it is forcing it to try to re-download FHIR R4 core (not sure why) and then failing.  I'm just reporting it now before <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> reports it. ;-)</p>",
        "id": 265315757,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1639756637
    },
    {
        "content": "<p>drat...</p>",
        "id": 265315934,
        "sender_full_name": "John Moehrke",
        "timestamp": 1639756670
    },
    {
        "content": "<p>What's weird is if I declare it as a dependency, the first time I run SUSHI it actually runs fine!  But then the next time it encounters errors.  If I then delete the examples from the FHIR cache, it runs fine again!  But then running it after that (once again) causes errors.  Sigh.  I guess I'll break out the debugger!</p>",
        "id": 265316910,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1639756829
    },
    {
        "content": "<p>OK.  I see what is happening here (sort of).  The main problem is that the <code>hl7.fhir.r4.examples</code> package also happens to contain all of the FHIR core resource definitions.  So SUSHI loads that up and then tries to load up the actual FHIR R4 core and gets confused because it seems like nothing happened (since all of the core resources were already loaded).  That's an interesting one, but I think that some changes that <span class=\"user-mention\" data-user-id=\"255031\">@Julia Afeltra</span> is working on might fix that (maybe).  BUT... <em>should</em> the examples package contain all of the FHIR core resources too?  That means we have two different packages (w/ different ids) that provide resources with <em>the same canonicals and versions</em>.</p>",
        "id": 265320819,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1639757874
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 265329349,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1639761550
    },
    {
        "content": "<p>I experimented with this by creating a simple IG that depends on the mCODE IG.  In my IG, I created a Patient instance that depends on <a href=\"http://hl7.org/fhir/us/mcode/STU1/Practitioner-mCODEPractitionerExample01.html\">mCODEPractitionerExample01</a> from mCODE.</p>\n<p>I separately tried each of the following variations:</p>\n<ul>\n<li>reference by id: <code>\"reference\": \"mCODEPractitionerExample01\"</code></li>\n<li>reference by type/id: <code>\"reference\": \"Practitioner/mCODEPractitionerExample01\"</code></li>\n<li>reference by canonical/type/idL <code>\"reference\": \"http://hl7.org/fhir/us/mcode/Practitioner/mCODEPractitionerExample01\"</code></li>\n</ul>\n<p>In all cases, the IG Publisher reported an error that it couldn't resolve the reference and the link in the generated example narrative was broken.  So... it seems to me that you can't reference examples from other IGs (or if you can, someone needs to tell me how).</p>",
        "id": 265360747,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1639775355
    },
    {
        "content": "<p>Are the example instances in the package?</p>",
        "id": 265361421,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1639775694
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span> - YES, in the package's <code>examples</code> folder.  I double-checked that.</p>",
        "id": 265361594,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1639775767
    },
    {
        "content": "<p>BUT... I just looked at <span class=\"user-mention\" data-user-id=\"431942\">@Thea Mentz Soerensen</span>'s original question and now realize that they were not trying to use a reference.  They were trying to <em>inline</em> an example from another IG as a Bundle <code>entry.resource</code> (since <code>entry.resource</code> is <em>not</em> a Reference).  OK.  So that's a little different, but I expect we'd still run into issues if that inlined instance referenced any other examples from the IG.</p>\n<p>So... SUSHI is not allowing an example from another IG to be <em>inlined</em> into an example in the current IG.  Looking at the SUSHI code and how we load dependencies, this does not surprise me.  Honestly, it will be a bit of work to support something like this because we currently <em>drop</em> most examples when we load the package.  In fact, we even drop some non-examples (like ConceptMap) when we load dependencies -- so we do need to make some improvements here anyway.</p>",
        "id": 265361611,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1639775779
    },
    {
        "content": "<blockquote>\n<p>SUSHI is not allowing an example from another IG to be inlined into an example in the current IG</p>\n</blockquote>\n<p>and it shouldn't. There is a proposal to allow inlining descriptions of a resource from another IG, and I'm working on that at some stage, but I think it's mainly not FSH business. It'll probably be a parameter in the IG resource.</p>",
        "id": 265435077,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639852732
    },
    {
        "content": "<blockquote>\n<p>should the examples package contain all of the FHIR core resources too?</p>\n</blockquote>\n<p>Good question, and you're welcome to raise that for R4B/R5, but the packages are published now, so we have to deal with what I did there, and I agree that it's challenging. I have a special rule, that I don't load examples over core. (and someone just found a place where I'm still am, so I need to make another fix in that regard)</p>",
        "id": 265435159,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639852834
    },
    {
        "content": "<blockquote>\n<p>should the examples package contain all of the FHIR core resources too?</p>\n</blockquote>\n<p>totally. Just refer to them by {canonical-root}/{type}/{id} and they should totally work for both validation and presentation. If someone wants to make up an example that shows how they're not working, I'll add it to my todo list</p>",
        "id": 265435196,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639852899
    },
    {
        "content": "<p>Thank you so much for your answers - they were very helpful!</p>",
        "id": 265531753,
        "sender_full_name": "Thea Mentz Soerensen",
        "timestamp": 1639987821
    }
]