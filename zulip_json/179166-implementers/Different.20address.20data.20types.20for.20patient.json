[
    {
        "content": "<p>We are looking at how a Swedish profile for a patient could look like and particularly address formats. </p>\n<p>In the core profile we have this:<br>\naddress Î£   0..*    Address An address for the individual</p>\n<p>Address formats seem to differ slightly between different countries, so other countries seem to have created their own address data types:<br>\nNetherlands: <a href=\"https://simplifier.net/NictizSTU3-Zib2017/nl-core-address\" target=\"_blank\" title=\"https://simplifier.net/NictizSTU3-Zib2017/nl-core-address\">https://simplifier.net/NictizSTU3-Zib2017/nl-core-address</a><br>\nNorway: <a href=\"https://simplifier.net/HL7Norwayno-basis/no-basis-Address\" target=\"_blank\" title=\"https://simplifier.net/HL7Norwayno-basis/no-basis-Address\">https://simplifier.net/HL7Norwayno-basis/no-basis-Address</a></p>\n<p>This seems to be a good way to define national requirements for an address. </p>\n<p><strong>Question</strong><br>\nA patient can according to the patient resource have multiple addresses, that is correct and good! But a patient can also have addresses in different countries. All the national profiles we have looked at only support one address data type. </p>\n<p>Is there a way to profile so that a patient can have 0..* addresses, where each address is of different address data types? Maybe in our Swedish profile we want to have 0..* address of data type <strong>swe-core-address</strong>, but <em>also</em> 0..* address of data type <strong>address</strong>?</p>\n<p>I know from working with Patient data in the UK that there were different address formats for \"UK address\" and \"non-UK address\", and we would want something similar here \"Swe address\" and \"non-Swe address\".</p>",
        "id": 158620255,
        "sender_full_name": "Martin Grundberg",
        "timestamp": 1550243005
    },
    {
        "content": "<p>The requirement seems to be a mix of slicing and how you can choose data type based on your requirement using <em>attribute</em>[x]</p>",
        "id": 158620481,
        "sender_full_name": "Martin Grundberg",
        "timestamp": 1550243179
    },
    {
        "content": "<p>You can define a must-support slice of address that's 0..* of addresses complying to your national profile and leave it open, which allows for other types of addresses too.  It's up to you whether you create an \"everything\" profile that defines minimum must-support expectations for arbitrary addresses.</p>",
        "id": 158622998,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1550245171
    },
    {
        "content": "<p>Can you slice on the country and require the swe-core-address when the country is Sweden, but leave it open otherwise?</p>",
        "id": 158638248,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1550256244
    },
    {
        "content": "<p>That's tricky.  If you have a Swedish address captured in a Canadian system, there's no guarantee it's going to comply with the Swedish profile.</p>",
        "id": 158651193,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1550266259
    },
    {
        "content": "<p>I'm not sure that I follow what's going on here. A patient can have only one address from Sweden?</p>",
        "id": 158672604,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1550286644
    },
    {
        "content": "<p>The slice would be 0..*.  It would just say there's a need to support Swedish-formatted addresses.</p>",
        "id": 158676063,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1550292144
    },
    {
        "content": "<p>Ah, is it that simple?</p>\n<p>Create a slice on Address, set that slice to 0..* and change the data type to the Swedish address data type?</p>\n<p>Do you need a second slice for the 0..* address?</p>\n<p>What I would want (or potentially want) is something like this:</p>\n<p>Address<br>\n0..* swe-core-address (where this is a new data type for the national Swedish address format)<br>\n0..* address (where this is the standard address data type)</p>\n<p>There are lots of patients in Sweden who will live in the country for half the year, and then move to a nicer sunnier country in winter. And in that second country, the Swedish address format doesnt apply, but of course, correspondance might need to go to either their Swedish or foreign address. </p>\n<p>Ideally, and maybe that was what Elliot was getting at, you would want the address data type to correspond to the country in which the address is. Need to think a bit more about that :)</p>",
        "id": 158978235,
        "sender_full_name": "Martin Grundberg",
        "timestamp": 1550672304
    },
    {
        "content": "<p>There's no need for a second slice if the base is already 0..<em>.  That would say \"you can have 0..</em> addresses.  Within that, you must support 0..* addresses that comply with the swedish profile.</p>",
        "id": 158988225,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1550678636
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197234\">@Martin Grundberg</span> Yes, that was exactly what I was getting at -- for the systems that this applies to, there are no restrictions on international addresses, but if the address is in Sweden, then your Swedish profile applies.</p>",
        "id": 158999876,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1550687214
    },
    {
        "content": "<p>If you wanted to apply the rule to all Swedish addresses, you could slice by country - though you'd have to constrain country to a value set for that to work well</p>",
        "id": 159000590,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1550687706
    },
    {
        "content": "<p>How would you discriminate the different Address slices conforming to different address profiles?<br>\nI have tried this for the Norwegian master person index, and the validator can not understand what profile it should validate against, It just tries out the first one in the list of allowed profiles and throws errors at me because the address given is actually conforming to another profile. I have not done any slicing, just given an option of more than one address profile in the profile definition like this: <br>\n&lt;element id=\"Person.address\"&gt;<br>\n      &lt;path value=\"Person.address\" /&gt;<br>\n      &lt;definition value=\"Grunndata uses Five different address content types expressed in gd-Address profiles that further restricts the use of the <a href=\"http://hl7.no/fhir/StructureDefinition/no-basis-Address\" target=\"_blank\" title=\"http://hl7.no/fhir/StructureDefinition/no-basis-Address\">http://hl7.no/fhir/StructureDefinition/no-basis-Address</a> to contain information from the norwegian Master person index.&#xD;&#xA;&#xD;&#xA;Based on: <a href=\"http://hl7.no/fhir/StructureDefinition/no-basis-Address\" target=\"_blank\" title=\"http://hl7.no/fhir/StructureDefinition/no-basis-Address\">http://hl7.no/fhir/StructureDefinition/no-basis-Address</a>\" /&gt;<br>\n      &lt;type&gt;<br>\n        &lt;code value=\"Address\" /&gt;<br>\n        &lt;profile value=\"<a href=\"http://ehelse.no/fhir/StructureDefinition/gd-Address-cadastral\" target=\"_blank\" title=\"http://ehelse.no/fhir/StructureDefinition/gd-Address-cadastral\">http://ehelse.no/fhir/StructureDefinition/gd-Address-cadastral</a>\" /&gt;<br>\n        &lt;profile value=\"<a href=\"http://ehelse.no/fhir/StructureDefinition/gd-Address-international\" target=\"_blank\" title=\"http://ehelse.no/fhir/StructureDefinition/gd-Address-international\">http://ehelse.no/fhir/StructureDefinition/gd-Address-international</a>\" /&gt;<br>\n        &lt;profile value=\"<a href=\"http://ehelse.no/fhir/StructureDefinition/gd-Address-street\" target=\"_blank\" title=\"http://ehelse.no/fhir/StructureDefinition/gd-Address-street\">http://ehelse.no/fhir/StructureDefinition/gd-Address-street</a>\" /&gt;<br>\n        &lt;profile value=\"<a href=\"http://ehelse.no/fhir/StructureDefinition/gd-Address-box\" target=\"_blank\" title=\"http://ehelse.no/fhir/StructureDefinition/gd-Address-box\">http://ehelse.no/fhir/StructureDefinition/gd-Address-box</a>\" /&gt;<br>\n        &lt;profile value=\"<a href=\"http://ehelse.no/fhir/StructureDefinition/gd-Address-freeform\" target=\"_blank\" title=\"http://ehelse.no/fhir/StructureDefinition/gd-Address-freeform\">http://ehelse.no/fhir/StructureDefinition/gd-Address-freeform</a>\" /&gt;<br>\n      &lt;/type&gt;<br>\n      &lt;mustSupport value=\"true\" /&gt;<br>\n    &lt;/element&gt;</p>",
        "id": 182761052,
        "sender_full_name": "Thomas Tveit Rosenlund",
        "timestamp": 1575639723
    },
    {
        "content": "<p>Is it possible to state what profile I try to conform to in the person instance somehow?</p>",
        "id": 182761129,
        "sender_full_name": "Thomas Tveit Rosenlund",
        "timestamp": 1575639800
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197234\">@Martin Grundberg</span> How did you discriminate the address types? Did you post a profile somewhere?</p>",
        "id": 182761924,
        "sender_full_name": "Thomas Tveit Rosenlund",
        "timestamp": 1575640413
    },
    {
        "content": "<p>How are you validating?</p>",
        "id": 182785671,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575654593
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> I use my for-validation catalog: <a href=\"https://github.com/HL7Norway/Grunndata-profiles/tree/gd-Person21/for-validation-gd-r4\" target=\"_blank\" title=\"https://github.com/HL7Norway/Grunndata-profiles/tree/gd-Person21/for-validation-gd-r4\">https://github.com/HL7Norway/Grunndata-profiles/tree/gd-Person21/for-validation-gd-r4</a><br>\nTo validate my examples: <a href=\"https://github.com/HL7Norway/Grunndata-profiles/tree/gd-Person21/examples\" target=\"_blank\" title=\"https://github.com/HL7Norway/Grunndata-profiles/tree/gd-Person21/examples\">https://github.com/HL7Norway/Grunndata-profiles/tree/gd-Person21/examples</a><br>\nIn particular the gd-person: <a href=\"https://github.com/HL7Norway/Grunndata-profiles/blob/gd-Person21/examples/gd-Person-04021950128-version-2.xml\" target=\"_blank\" title=\"https://github.com/HL7Norway/Grunndata-profiles/blob/gd-Person21/examples/gd-Person-04021950128-version-2.xml\">https://github.com/HL7Norway/Grunndata-profiles/blob/gd-Person21/examples/gd-Person-04021950128-version-2.xml</a><br>\nfails running the official validator like this: <br>\njava -jar C:\\Users\\Thomas\\Downloads\\org.hl7.fhir.validator.jar gd-Person-04021950128-version-2.xml -ig C:\\GitRepo\\grunndata-r4\\for-validation-gd-r4 -version 4.0.1</p>",
        "id": 182787666,
        "sender_full_name": "Thomas Tveit Rosenlund",
        "timestamp": 1575655900
    },
    {
        "content": "<p>I can understand the codesystem error, as the definition of 3402 codesystem does'nt actually contain any codes. The validator seems to think that the address should be conforming to the gd-Address-cadastral profile, even though I try to actually provide a gd-Address-street type address.</p>\n<p>Detected Java version: 1.8.0_31 from C:\\Program Files\\Java\\jre1.8.0_31 on amd64 (64bit). 3636MB available<br>\nArguments: gd-Person-04021950128-version-2.xml -ig E:\\GitRepo\\grunndata-r4\\for-validation-gd-r4 -version 4.0.1<br>\nDirectories: Current = E:\\GitRepo\\Grunndata-R4\\examples, Package Cache = C:\\Users\\Thomas\\.fhir\\packages<br>\n  .. FHIR Version 4.0, definitions from hl7.fhir.r4.core#4.0.1<br>\n  .. connect to tx server @ <a href=\"http://tx.fhir.org\" target=\"_blank\" title=\"http://tx.fhir.org\">http://tx.fhir.org</a><br>\n    (v4.0.1)<br>\n+  .. load IG from E:\\GitRepo\\grunndata-r4\\for-validation-gd-r4<br>\n  .. validate [gd-Person-04021950128-version-2.xml]<br>\n<em>FAILURE</em> validating gd-Person-04021950128-version-2.xml:  error:1 warn:0 info:4<br>\n  Error @ Person.address[0].extension[0].extension[0].value.ofType(Coding) (line 77, col18) : Unknown Code urn:oid:2.16.578.1.12.4.1.1.3402#0238 in urn:oid:2.16.578.1.12.4.1.1.3402 for 'urn:oid:2.16.578.1.12.4.1.1.3402#0238'<br>\n  Information @ Person.extension[0].extension[1] (line 10, col78) : This element does not match any known slice for the profile <a href=\"http://ehelse.no/fhir/StructureDefinition/gd-person-status\" target=\"_blank\" title=\"http://ehelse.no/fhir/StructureDefinition/gd-person-status\">http://ehelse.no/fhir/StructureDefinition/gd-person-status</a><br>\n  Information @ Person.address[0].extension[4] (line 128, col80) : This element does not match any known slice for the profile <a href=\"http://ehelse.no/fhir/StructureDefinition/gd-Address-cadastral\" target=\"_blank\" title=\"http://ehelse.no/fhir/StructureDefinition/gd-Address-cadastral\">http://ehelse.no/fhir/StructureDefinition/gd-Address-cadastral</a><br>\n  Information @ Person.address[0].line[0].extension[0] (line 143, col86) : This element does not match any known slice for the profile <a href=\"http://ehelse.no/fhir/StructureDefinition/gd-Address-cadastral\" target=\"_blank\" title=\"http://ehelse.no/fhir/StructureDefinition/gd-Address-cadastral\">http://ehelse.no/fhir/StructureDefinition/gd-Address-cadastral</a><br>\n  Information @ Person.address[0].line[0].extension[1] (line 146, col103) : This element does not match any known slice for the profile <a href=\"http://ehelse.no/fhir/StructureDefinition/gd-Address-cadastral\" target=\"_blank\" title=\"http://ehelse.no/fhir/StructureDefinition/gd-Address-cadastral\">http://ehelse.no/fhir/StructureDefinition/gd-Address-cadastral</a></p>",
        "id": 182787914,
        "sender_full_name": "Thomas Tveit Rosenlund",
        "timestamp": 1575656082
    },
    {
        "content": "<p>Hmm.  It should be happy so long as one of the profiles is valid.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ?</p>",
        "id": 182788126,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575656277
    },
    {
        "content": "<p>so I understand saying that the address could be one of 5 different profiles, but why slice it?</p>",
        "id": 182788199,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575656315
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I did not actually slice it, just gave five different options for possible profiles the Address can conform to. Sorry if the first post was confusing on that point.</p>",
        "id": 182788604,
        "sender_full_name": "Thomas Tveit Rosenlund",
        "timestamp": 1575656589
    },
    {
        "content": "<p>I haven't had any luck reproducing this. can you turn this into a simple test case - a single set of profiles and examples - the demonstrates the problem?</p>",
        "id": 182794912,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575660573
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Just made a quick testproject to demonstrate the problem without any confusing other artifacts. Uploaded it here: <a href=\"https://github.com/thomiz/TestAddressTypes\" target=\"_blank\" title=\"https://github.com/thomiz/TestAddressTypes\">https://github.com/thomiz/TestAddressTypes</a></p>\n<p>When I try to validate the Person example that should be conformant to the complex address type, it succeeds, but the validator do not understand that there is in fact another Address type where this behaviour is defined.</p>\n<div class=\"codehilite\"><pre><span></span>E:\\GitRepo\\testing&gt;java -jar c:\\Users\\Thomas\\Downloads\\org.hl7.fhir.validator.jar Person-test.xml -ig . -version 4.0.1\nFHIR Validation tool Version 4.1.19-SNAPSHOT - Built 2019-12-06T08:56:29.651+11:00 - Git 89195efad312\nDetected Java version: 1.8.0_31 from C:\\Program Files\\Java\\jre1.8.0_31 on amd64 (64bit). 3636MB available\nArguments: Person-test.xml -ig . -version 4.0.1\nDirectories: Current = E:\\GitRepo\\testing, Package Cache = C:\\Users\\Thomas\\.fhir\\packages\n  .. FHIR Version 4.0, definitions from hl7.fhir.r4.core#4.0.1\n  .. connect to tx server @ http://tx.fhir.org\n    (v4.0.1)\n+  .. load IG from .\n  .. validate [Person-test.xml]\nTerminology server: Check for supported code systems for urn:iso:std:iso:3166\nSuccess...validating Person-test.xml:  error:0 warn:0 info:1\n  Information @ Person.address[0].extension[1] (line 23, col81) : This element does not match any known slice for the profile http://example.org/fhir/StructureDefinition/AddressWithExtension\n</pre></div>",
        "id": 182857364,
        "sender_full_name": "Thomas Tveit Rosenlund",
        "timestamp": 1575745674
    },
    {
        "content": "<p>Seems the validator always tries out the first profile, but don't test if the example conforms to the second one. I would expect the validator not to ouput the Information text if it finds the second Address profile.</p>",
        "id": 182857440,
        "sender_full_name": "Thomas Tveit Rosenlund",
        "timestamp": 1575745784
    },
    {
        "content": "<p>ok so I'm committing a fix for this, but the information message has not gone away. it has changed a little:</p>",
        "id": 182926887,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575871327
    },
    {
        "content": "<p>Information @ Person.address[0].extension[1] (line 23, col81) : This element does not match any known slice for the profile <a href=\"http://example.org/fhir/StructureDefinition/AddressWithExtension\" target=\"_blank\" title=\"http://example.org/fhir/StructureDefinition/AddressWithExtension\">http://example.org/fhir/StructureDefinition/AddressWithExtension</a> (validating against <a href=\"http://example.org/fhir/StructureDefinition/AddressWithExtension\" target=\"_blank\" title=\"http://example.org/fhir/StructureDefinition/AddressWithExtension\">http://example.org/fhir/StructureDefinition/AddressWithExtension</a> [AddressWithExtension])</p>",
        "id": 182926911,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575871433
    },
    {
        "content": "<p>this is valid.</p>",
        "id": 182926912,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575871437
    },
    {
        "content": "<p>Warning @ Person.address[0] (line 16, col11) : Found multiple matching profiles among choices: ; [http://example.org/fhir/StructureDefinition/AddressWithTwoExtensions, <a href=\"http://example.org/fhir/StructureDefinition/AddressWithExtension]\" target=\"_blank\" title=\"http://example.org/fhir/StructureDefinition/AddressWithExtension]\">http://example.org/fhir/StructureDefinition/AddressWithExtension]</a></p>",
        "id": 182926952,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575871444
    },
    {
        "content": "<blockquote>\n<p>Warning @ Person.address[0] (line 16, col11) : Found multiple matching profiles among choices: ; [http://example.org/fhir/StructureDefinition/AddressWithTwoExtensions, <a href=\"http://example.org/fhir/StructureDefinition/AddressWithExtension]\" target=\"_blank\" title=\"http://example.org/fhir/StructureDefinition/AddressWithExtension]\">http://example.org/fhir/StructureDefinition/AddressWithExtension]</a></p>\n</blockquote>\n<p>OK, so the profile still matches even though one includes a definition for the profile, and the other does not. I would probably have to declare one of the two mandatory to achieve a singular match then.</p>\n<p>Thanks for your help <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 182947841,
        "sender_full_name": "Thomas Tveit Rosenlund",
        "timestamp": 1575891760
    },
    {
        "content": "<p>yes</p>",
        "id": 182949296,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575893270
    }
]