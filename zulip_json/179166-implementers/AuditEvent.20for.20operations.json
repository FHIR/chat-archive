[
    {
        "content": "<p>In the case of executing an operation that implies multiple actions, how should an AuditEvent be mapped so that it contains for each resource that has been modified the corresponding action?<br>\nExample: Let's say we have an operation that: updates a Schedule and creates multiple Slots.  How can we map that the Schedule was UPDATED and the slots were CREATED? Can the field \"detail\" of Entity be used to this purpose?</p>",
        "id": 164971363,
        "sender_full_name": "Ariadna Roman",
        "timestamp": 1557139262
    },
    {
        "content": "<p>I would expect that you would have multiple entities in this case, with different roles on the different resources</p>",
        "id": 164971444,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557139353
    },
    {
        "content": "<p>And how can we present the action (create, update, delete) that was executed on each resource using the roles?</p>",
        "id": 164972456,
        "sender_full_name": "Ariadna Roman",
        "timestamp": 1557140409
    },
    {
        "content": "<p>life cycle looks appropriate to me</p>",
        "id": 164973474,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557141675
    },
    {
        "content": "<p>Got it! Thank you!</p>",
        "id": 164974049,
        "sender_full_name": "Ariadna Roman",
        "timestamp": 1557142233
    },
    {
        "content": "<p>I would expect that you just record one auditEvent describing the Operation. It is known what the operation does, so it doesn't seem important to record each micro-activity.</p>",
        "id": 164982673,
        "sender_full_name": "John Moehrke",
        "timestamp": 1557150462
    }
]