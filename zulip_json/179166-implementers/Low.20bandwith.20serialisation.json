[
    {
        "content": "<p>Is there currently anywork going on with regards to looking at more efficient serialisation options for FHIR? For systems with high transaction throughput there is a current perception that the current XML/JSON ITS is a little on the heavy side.</p>",
        "id": 153814153,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1457343242
    },
    {
        "content": "<p>there's been some occasional talk about it, but nothing is currently active. </p>",
        "id": 153814155,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457343280
    },
    {
        "content": "<p>what about it is on the heavy side? </p>",
        "id": 153814156,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457343318
    },
    {
        "content": "<p>however, there's no silver bullet. Each option where people vary manifests as a choice that must appear in the instance</p>",
        "id": 153814157,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457343340
    },
    {
        "content": "<p>Predominatly its message size that is causing concern. We have system that currently have very high transaction rates and we are looking to expose some FHIR end points - we would expect in due course to hit equally high transaction rates on them as well. The size of message has impact on server memory, cpu, bandwidth, storage etc </p>",
        "id": 153814165,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1457343927
    },
    {
        "content": "<p>well, there's a tension between a general purpose interop format and a high volume transaction system. </p>",
        "id": 153814167,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457344161
    },
    {
        "content": "<p>FHIR resources tend to be less granular than many bespoke restful interfaces, so I think that the difference isn't as big as people think</p>",
        "id": 153814168,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457344203
    },
    {
        "content": "<p>still, there is room for a more dense form - but we have been thinking of making it extremely dense indeed</p>",
        "id": 153814169,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457344257
    },
    {
        "content": "<p>at the cost of making it exquisitely fragile with regard to change. Is that really a good deal in the 1st world? </p>",
        "id": 153814170,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457344341
    },
    {
        "content": "<p>however, that's the equation you have to deal with</p>",
        "id": 153814171,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457344365
    },
    {
        "content": "<p>Yes - one of our suppliers has has proposed a very dense alternative - comprising predominantly of abbreviated element names, and collapsing child elements</p>",
        "id": 153814172,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1457344380
    },
    {
        "content": "<p>abbreviated element names will really make that much difference? </p>",
        "id": 153814173,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457344417
    },
    {
        "content": "<p>potentially some, but we need to quantify how this would achieve in real world scenarios.</p>",
        "id": 153814174,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1457344503
    },
    {
        "content": "<p>Do you mean message size as in Message paradigm or the REST <br>\npayload size?</p>",
        "id": 153814175,
        "sender_full_name": "Eric Haas",
        "timestamp": 1457344650
    },
    {
        "content": "<p>I'm seeing the FHIR equivalents to V3 messages to be significantly smaller. The next reduction I think would need to come from element names and system values.</p>",
        "id": 153814176,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1457346095
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"eric@w3.org\">@Eric Prud'hommeaux</span>: I think Richard means the number of bytes exchanged.</p>",
        "id": 153814177,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1457346215
    },
    {
        "content": "<p>I've thought about using Google Protocol Buffers to serialize FHIR messages into tiny packages in situations where there is significantly large message throughput... but I don't really have a need to do that right now. Plus, I figured it would be frowned upon.</p>",
        "id": 153814179,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1457354555
    },
    {
        "content": "<p>Sorry yes, I should be more precise - My issue is around the number of bytes exchanged. Messaging vs. REST is not really the issue.</p>",
        "id": 153814180,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1457354714
    },
    {
        "content": "<p>We have a use case in which we need to squeeze a medication plan into a 2D barcode. Here's what we came up with:<a href=\"http://wiki.hl7.de/index.php?title=IG:Ultrakurzformat_Patientenbezogener_Medikationsplan\" target=\"_blank\" title=\"http://wiki.hl7.de/index.php?title=IG:Ultrakurzformat_Patientenbezogener_Medikationsplan\">http://wiki.hl7.de/index.php?title=IG:Ultrakurzformat_Patientenbezogener_Medikationsplan</a></p>",
        "id": 153814181,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1457359648
    },
    {
        "content": "<p>Please ignore the German yadda yadda. Just look at tha code examples comparing actual fhir code with the collapsed format</p>",
        "id": 153814182,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1457359706
    },
    {
        "content": "<p>At least in our scenario, that is sufficient shrinkage. However, in order to be able to inflate/deflate without losing information, the resources have to validate against profiles that are very restrictive</p>",
        "id": 153814183,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1457359824
    },
    {
        "content": "<p>E.g. Some values are fixed in the profile and thus omitted in the short format.</p>",
        "id": 153814184,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1457359919
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span>  From what I understand of the document this is very much along the lines of what we have been discussing here in England.  Is this document a proposal for Germany? Is it being implemented.</p>",
        "id": 153814200,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1457370468
    },
    {
        "content": "<p>Yes, it's a proposal for Germany. \"Is it going o be implemented?\" Well, hopefully yes. At least, proving that there's a WAY to squeeze a FHIR Medication Plan into a Barcode, we have been able to make FHIR a candidate for the nationwide mandatory implementation of the medication plan! </p>",
        "id": 153814206,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1457373532
    },
    {
        "content": "<p>If you have a real use case for small payloads, formats like protcol buffers (or the many alternatives) seem like a good fit. I'd be surprised if simply shortening element names in json or XML has a big effect after gzip compression.</p>",
        "id": 153814208,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1457374489
    },
    {
        "content": "<p>That's part of what we hope to explore in a future Proof of Concept exercise . I think GZIP would only give bandwidth benefit. @Simone is this going to be adopted as a German localisation of FHIR?</p>",
        "id": 153814209,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1457374780
    },
    {
        "content": "<p>Just looking specifically at &lt;P g=\"Michaela\"/&gt; <br>\nThis format can't handle multiple given names. </p>",
        "id": 153814257,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1457385519
    },
    {
        "content": "<p>no. that's the point; you define in your profile what is possible, and then eliminate every redundant syntax </p>",
        "id": 153814258,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457385560
    },
    {
        "content": "<p>we called this 'profiled fhir' - it's written up in <a href=\"http://hl7-fhir.github.io/profiling.html\" target=\"_blank\" title=\"http://hl7-fhir.github.io/profiling.html\">http://hl7-fhir.github.io/profiling.html</a> but commented out</p>",
        "id": 153814259,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457385581
    },
    {
        "content": "<p>ok, thanks.</p>",
        "id": 153814268,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1457385841
    },
    {
        "content": "<p>I don't think that's allowed is it? - ie 'defaulting' a value from the profile (at least in the general case)</p>",
        "id": 153814300,
        "sender_full_name": "David Hay",
        "timestamp": 1457398913
    },
    {
        "content": "<p>not generally. but it is if you're doing 'propfiled FHIR', though I see that the write up of that completely disappeared. Perhaps a topic for Montreal</p>",
        "id": 153814303,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457399364
    },
    {
        "content": "<p>+1 on that Grahame - I'd like to be in a position where I can have more informed conversations with suppliers in this areas. </p>",
        "id": 153814336,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1457421768
    },
    {
        "content": "<p>I'd just like to throw in IoT / connected devices. In mobile health devices the message/payload size is not only an issue of bandwidth but also of battery drain.</p>",
        "id": 153814338,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1457433238
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"grahame@healthintersections.com.au\">@Grahame Grieve</span>: I'm getting an internal error 500 on your web server.</p>",
        "id": 153814340,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1457437547
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 153814341,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457437562
    },
    {
        "content": "<p>what URL?</p>",
        "id": 153814342,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457437571
    },
    {
        "content": "<p><a href=\"http://www.healthintersections.com.au/\" target=\"_blank\" title=\"http://www.healthintersections.com.au/\">http://www.healthintersections.com.au/</a></p>",
        "id": 153814343,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1457437584
    },
    {
        "content": "<p>oh. </p>",
        "id": 153814344,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457437627
    },
    {
        "content": "<p>cpanel hosted. I'll pass that along to the host</p>",
        "id": 153814345,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457437634
    },
    {
        "content": "<p>Can I confirm my understanding of the current state of play - when I think of 'profiled FHIR' I think of how profiles are currently applied in that they don't support defaults and don't change the wire syntax...</p>",
        "id": 153814460,
        "sender_full_name": "David Hay",
        "timestamp": 1457459693
    },
    {
        "content": "<p>profiles currently do not change the wire format. We've always been aware that you could use them to do so, and previously used the name 'profiled fhir' to describe doing so</p>",
        "id": 153814475,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457463589
    },
    {
        "content": "<p>hmmm. confusing terminology I think...</p>",
        "id": 153814479,
        "sender_full_name": "David Hay",
        "timestamp": 1457463701
    },
    {
        "content": "<p>But in essence the use of an 'ultra-short format' profile as described in the German link above would fit with accepted standards, if well defined and agreed of course, can offer the 'minimal textual form' of the information we may look to exchange within a high-transaction rate / limited bandwidth environment ?</p>",
        "id": 153814622,
        "sender_full_name": "Jason Careless",
        "timestamp": 1457550525
    },
    {
        "content": "<p>If we were talking about ultra-low bandwidth, then a profile would define what elements were in vs. out  and all such elements (extension or core) would be identified positionally or with a simple sequence byte or something.</p>",
        "id": 153814624,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1457550637
    },
    {
        "content": "<p>It would be extremely non-human friendly...</p>",
        "id": 153814625,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1457550661
    },
    {
        "content": "<p>I totally agree on the friendliness for plain-text reading by humans  </p>",
        "id": 153814626,
        "sender_full_name": "Jason Careless",
        "timestamp": 1457550872
    },
    {
        "content": "<p>The rationale behind the German short format is to minimize required storage for usage with QR codes or chip cards (the German insurance cards have only a few KB of data storage for all applications), while still using well formed XML to keep it smooth for implementers in terms of data validation.</p>",
        "id": 153814628,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1457552667
    },
    {
        "content": "<p>There is some proprietary format out there that has a strange delimiter based format and the \"ultra short format\" is an alternative draft to avoid that proprietary thing</p>",
        "id": 153814629,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1457553012
    },
    {
        "content": "<p>Concerning human-friendliness: I don't think this is of any importance in a low bandwidth / low capacity scenario</p>",
        "id": 153814631,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1457553099
    },
    {
        "content": "<p>I agree that human readability should not be a concern here. ...as long as one can bijectively transform back and forth from \"proper\" FHIR to lbs.</p>",
        "id": 153814737,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1457605911
    },
    {
        "content": "<p>I think this would be an alternate serialization, an ITS, rather than a profile., and that the profile should be separate from the serialization: xml, reduced-xml (the short name form),json, reduced-json, etc.</p>",
        "id": 153814738,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1457606108
    },
    {
        "content": "<p>the link with profile is that it's only when you have a useful profile that you can usefully reduce the wire format</p>",
        "id": 153814739,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457606223
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> Since the ultra short format as proposed follows a kind of \"convention over configuration\" paradigm, transformation from that format to proper FHIR would require injecting information about the convention used (e.g. there would be no information about any code system in the short format)</p>",
        "id": 153814746,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1457612770
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-email=\"grahame@healthintersections.com.au\">@Grahame Grieve</span>: Agreed. And if it is defaulting and it is a non-formulaic approach then that may move away from an ITS to a custom wire format tightly, maybe solely, attached to a profile.</p>",
        "id": 153814750,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1457614859
    },
    {
        "content": "<p>my current considerations about the USF Mapping:<br>\n- buildingprofiles  for the resources which should be mapped<br>\n- Elements which sould be mapped will contain an XPATH String in mapping.map with it's Destination in the UltraShortFormat<br>\n- to get the Long Form from USF you just have to map each element to the corresponding XPATH from the profile</p>",
        "id": 153821160,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460462270
    },
    {
        "content": "<p>the only downside if you just use XPATH Strings is that you are restricted in what you can do. String Concationation to merge different Elements into one Element or Attribute wouldn't be possible </p>",
        "id": 153821163,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460462342
    },
    {
        "content": "<p>if we would use XSLT instead of pure XPath concatinations and other fancy stuff would be possible</p>",
        "id": 153821167,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460462531
    },
    {
        "content": "<p>Quoting Martijns idea:</p>\n<p>Martijn: The thought I had yesterday (from the top of my head, so not researched) was this:<br>\n- we have to store in resource instance in as little bytes as possible.<br>\n- besides regular compression, there is stuff that we (the reader of the qr-code) knows. And we can reference that instead.</p>\n<p>Martijn: for example: a resource always matches some profile, which can be found online</p>\n<p>Martijn: We could reference each field in that profile by index. This index will probably fit in one byte. (less than 256 possible fields)</p>\n<p>Martijn: Since the order in FHIR is mandatory.</p>\n<p>Martijn: So Patient.humanName would be: 10.</p>",
        "id": 153821168,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1460462755
    },
    {
        "content": "<p>Martijn: For known data types you can think of a default format. Or use sub indexing.</p>\n<p>Martijn: So Patient.humanName.family would be 2 bytes: (10)(3)</p>",
        "id": 153821169,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1460462789
    },
    {
        "content": "<p>Simone Heckmann: ...using the mapping mechanism to assign index to fields...?</p>\n<p>Simone Heckmann: Sort of like this:<br>\n<a href=\"/user_uploads/10155/OdGnbJ-7r5v4R3_YsRt1wP6W/pasted_image.png\" target=\"_blank\" title=\"/user_uploads/10155/OdGnbJ-7r5v4R3_YsRt1wP6W/pasted_image.png\">pasted image</a> </p>\n<p>Simone Heckmann: \"USF\" meaning \"ultra short format\" :)</p>\n<p>Simone Heckmann: The implications of a field NOT having an associated index would be that this field is either not supported in the USF or hase a fixed value that can be added back by default when translating from USF to full FHIR. Does that make sense?</p>\n<p>Simone Heckmann: We'd have to add the information somewhere in the Barcode, what profile the USF is based on...</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/OdGnbJ-7r5v4R3_YsRt1wP6W/pasted_image.png\" target=\"_blank\" title=\"/user_uploads/10155/OdGnbJ-7r5v4R3_YsRt1wP6W/pasted_image.png\"><img src=\"/user_uploads/10155/OdGnbJ-7r5v4R3_YsRt1wP6W/pasted_image.png\"></a></div>",
        "id": 153821170,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1460462832
    },
    {
        "content": "<p>Simone Heckmann 1:44 PM  <br>\n\"Patient.humanName.family would be 2 bytes: (10)(3)\"<br>\n...that would mean that we'd have to profile every complex datatype to add the mappings to indices. Then the IG Property \"Profiles that apply globally\" would need to redirect all complex types to the profiled types...<br>\nFeasible or messy?</p>",
        "id": 153821172,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1460462877
    },
    {
        "content": "<p>with xslt transformations we would possibly run into problems in terms of bijection so i would prefer a plain XPATH approach</p>",
        "id": 153821173,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460463083
    },
    {
        "content": "<p>merging data fields would lead to bijection problems anyway</p>",
        "id": 153821174,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460463147
    },
    {
        "content": "<p>i personally prefer the proposal of HL7 Germany in the USF Format. It is still human readable (kind of) still XML -&gt; you can validate it against a schema</p>",
        "id": 153821176,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460463233
    },
    {
        "content": "<p>and you still can use the mappings if the resource or profile changes. If we would just count the data fields every minimal change of a resource structure leads to a complete remapping</p>",
        "id": 153821179,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460463384
    },
    {
        "content": "<p>Considering that especially in our QR scenario, size is crucial,  i think that the byte addressing could shrink the USF considerably more than the \"short XML\" approach...</p>",
        "id": 153821180,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1460463618
    },
    {
        "content": "<p>I am just trying to wrap my head around what that means in terms of implementation. Assuming we have an instance of Patient like </p>\n<div class=\"codehilite\"><pre><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n<span class=\"nt\">&lt;Patient</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://hl7.org/fhir&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;name&gt;</span>\n        <span class=\"nt\">&lt;use</span> <span class=\"na\">value =</span> <span class=\"s\">&quot;official&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;family</span> <span class=\"na\">value =</span> <span class=\"s\">&quot;Heckmann&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;given</span> <span class=\"na\">value =</span> <span class=\"s\">&quot;Simone&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/name&gt;</span>    \n<span class=\"nt\">&lt;/Patient&gt;</span>\n</pre></div>\n\n\n<p>and a profile that maps <br>\nname -&gt; 11 (being the eleveth field of Patient counting in all inherited fields )<br>\nuse-&gt;fixed to \"official\"<br>\nfamily-&gt;1103 (family being the third field of the complex type Human Name)<br>\ngiven-&gt;1104 (given being the fourth field of the complex type Human Name)</p>\n<p>What would the USF look like?<br>\n1103Heckmann1104Simone</p>\n<p>How'd we parse that?</p>",
        "id": 153821184,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1460464206
    },
    {
        "content": "<p>i think you would have to have a seperator for elementN°|Data</p>",
        "id": 153821187,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460464349
    },
    {
        "content": "<p>otherwise it would be hard to differenciate in between element number and numeric values</p>",
        "id": 153821188,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460464376
    },
    {
        "content": "<p>maybe \"|\"V ;) V2 here we come ;)</p>",
        "id": 153821189,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460464394
    },
    {
        "content": "<p>1103Heckmann1104Simone in the shortened XML -&gt; <br>\n&lt;p g=\"Simone\" f=\"Heckmann\"/&gt;</p>",
        "id": 153821191,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460464516
    },
    {
        "content": "<p>it would be interesting to compare the ziped size of both approaches, if i have some free time @conhit i'll give it a go</p>",
        "id": 153821193,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460464676
    },
    {
        "content": "<p>In any case we'd have to have the USF indicating the underlying profile, which would be 0203 (meta.profile) by my counting for every resource. So that would be the first thing to look for when decompressing a USF</p>",
        "id": 153821194,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1460464701
    },
    {
        "content": "<p>the profile definitly  must be part of a usf resource</p>",
        "id": 153821196,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460464822
    },
    {
        "content": "<p>I still wonder how messy all of this gets when we count in repeatable/optional field and all the implications of having hierarchical structures like a document bundle (which is essentially what the Medication plan is)...</p>",
        "id": 153821198,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1460465001
    },
    {
        "content": "<p>i just was thinking about the same problem. in particular repeatable fields would be a huge problem</p>",
        "id": 153821199,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460465070
    },
    {
        "content": "<p>Unless the Profile uses slices to assign unique indices / shorthands to every slice and thereby also restrict the number of repetitions (which probably makes sense for a USF...)  If we estimate that a QR can hold a maximum of 15 medications it would make sense for the profile to allow only a maximum of 15 slices and validation failing if someone tried to squeeze more data than possible into it.</p>",
        "id": 153821202,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1460465306
    },
    {
        "content": "<p>An index of course would refer to the index in the profile (or base resource). So repetitive elements would have the same index. </p>",
        "id": 153821204,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1460465763
    },
    {
        "content": "<p>And Patrick is of course right, that regardless of format, you will need a separator.</p>",
        "id": 153821205,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1460465791
    },
    {
        "content": "<p>(binary or not)</p>",
        "id": 153821207,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1460465841
    },
    {
        "content": "<p>The other suggestion I had yesterday, is that instead of a profile reference like a url, or canonical url, you could use a 2  or maybe 4 byte index number that can be found on some registry.</p>",
        "id": 153821209,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1460465897
    },
    {
        "content": "<p>So, let's say you have a Patient with only a name. <br>\n(4 bytes: profile reference id to Patient base profile)<br>\n(1 byte: value 0, field start code)<br>\n(1 byte: value: 10, index of of <a href=\"http://Patient.name\" target=\"_blank\" title=\"http://Patient.name\">Patient.name</a> in the base profile)<br>\n(12 bytes: value: f:John,l:Doe) </p>",
        "id": 153821213,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1460466101
    },
    {
        "content": "<p>(or something like that)</p>",
        "id": 153821214,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1460466168
    },
    {
        "content": "<p>If you want to be even tighter, you can do something like this: Algorithmically flatten the model so that you have no nesting of anything except repeating elements.  For example, if you limit <a href=\"http://Patient.name\" target=\"_blank\" title=\"http://Patient.name\">Patient.name</a> to only 1 repetition and support only family and given, then you would treat Patient as having birthdate, gender, name.family and name.given as \"root\" level elements.  Then in the first bytes (after profile identification), identify which optional elements in the instance are present using bit level flags.  Represent everything as binary, using the leading byte to identify the length of variable-length elements like strings &amp; date-times.  When you hit repeating elements, the first byte indicates the number of repetitions and the first few bytes in each repetition again indicates which optional elements are present.  Doing this would mean the data would be binary (non-human readable), but it would be as tight as it's possible to be.  You can then encode the binary as necessary to flow over SMS, bar-codes or other low-bandwidth situations.  Depending on the amount of data repetition your expecting to occur in numeric and string data, you might be able to benefit from compressing the instance too.</p>",
        "id": 153821264,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1460477150
    },
    {
        "content": "<p>the imaging formats have well established binary encoding formats, but for this use, I'd use ASN.1 BER. So the process would be:<br>\n- profile the resource<br>\n- assign the field ids in the profile (so they persist)<br>\n- write a converter that converts the profile to an ASN.1 syntax<br>\n- use ASN.1 BER for the exchange of the instances <br>\n- (optional) write a converter that inter converts instances from the ASN1. syntax to the normal FHIR format based on the profile</p>",
        "id": 153821290,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460488928
    },
    {
        "content": "<p>Seems we should evaluate this against the compression built into http/2</p>",
        "id": 153821314,
        "sender_full_name": "John Moehrke",
        "timestamp": 1460493684
    },
    {
        "content": "<p>sure, but not that a lot of the use of this form will be over http</p>",
        "id": 153821317,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460495364
    },
    {
        "content": "<p>compression only wont help for the imagined usecases (QR Code, SMS, etc). You have to have a procedure where you get rid of information which is already defined in a profile</p>",
        "id": 153821322,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460495987
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> for bringing up ASN1, seems to be a good idea if you just focus on size. Maybe ASN.1.PER could lead to even smaller files.<br>\nSimone and i will start profiling a medication plan usecase on friday. </p>",
        "id": 153821325,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460496293
    },
    {
        "content": "<p>A comparisson of sizes  between compressed resources, shortened XML, ASN.1 BER and PER will be interesting</p>",
        "id": 153821326,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460496383
    },
    {
        "content": "<p>Just a note that I pushed supprt onto our server overnight to support the gzip/deflate stuff and for the content I was testing with, 600k =&gt; 43k (xml) which is pretty good.</p>",
        "id": 153821330,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1460496756
    },
    {
        "content": "<p>Have the other reference servers got this already built in?</p>",
        "id": 153821331,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1460496790
    },
    {
        "content": "<p>yeah I have gzip support </p>",
        "id": 153821332,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460496843
    },
    {
        "content": "<p>Do you support that on processing the request also?</p>",
        "id": 153821333,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1460496900
    },
    {
        "content": "<p>yeah I think I do </p>",
        "id": 153821338,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460497851
    },
    {
        "content": "<p>it's pretty transparent for me </p>",
        "id": 153821339,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460497866
    },
    {
        "content": "<p>Grahame Grieve 9:22 PM  <br>\n- assign the field ids in the profile (so they persist)</p>\n<p>Is anyone opposed to the idea of using StructureDefinition.mapping for this?</p>",
        "id": 153821418,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1460535797
    },
    {
        "content": "<p>+ ElementDefinition.mapping. For XML flattening&amp; shrinking i would put the Xpath in mapping.map. For ASN.1 mapping.map would contain the ASN.1 Datatype</p>",
        "id": 153821420,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460536455
    },
    {
        "content": "<p>The gzip compression you have experimented with is what has been put into http/2; it is not only for images. It also uses the same dynamically built lookup table for all http sessions within the http/2 tunnel. So over many interactions with a FHIR server, you would find compression better than you are seeing with your gzip experiment. So much so that it even compresses out the http protocol overhead (and duplicate oauth credentials) too.</p>",
        "id": 153821444,
        "sender_full_name": "John Moehrke",
        "timestamp": 1460549034
    },
    {
        "content": "<p>this automatic compression was designed by people who are infrastructure experts, not healthcare data-modeling experts... re-inventing the wheel is not productive. You will end up at something generally round with a central pivot.</p>",
        "id": 153821445,
        "sender_full_name": "John Moehrke",
        "timestamp": 1460549140
    },
    {
        "content": "<p>this isn't about HTTP, its about serialise FHIR Resources for Barcodes, RFID, SMS Transmissions etc</p>",
        "id": 153821446,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460549197
    },
    {
        "content": "<p>so you want to make a fixed (pre-coordinated) compression lookup table?</p>",
        "id": 153821452,
        "sender_full_name": "John Moehrke",
        "timestamp": 1460549371
    },
    {
        "content": "<p>not just compression. Compression would be losless (like FLAC). We want to get rid of elements which are already defined in a profile, e.g. code systems so it would be a \"lossy\" compression (mp3, kind of....)</p>",
        "id": 153821453,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1460549522
    }
]