[
    {
        "content": "<p>I'm working with an implementer that has a need to use encrypted binaries. A binary is a binary, so encrypted is fine... but you need some minimal crypto metadata .... we don't really have space for this anywhere.</p>",
        "id": 153912965,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1507406434
    },
    {
        "content": "<p>has anyone looked at this before?</p>",
        "id": 153912966,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1507406439
    },
    {
        "content": "<p>Can you give me some context to the use-case? There are standards based solutions. However the choice of which of these will be dependent on the intended use-case. Specifically the use-case will drive key-management. For example how does the one encrypting know the keys to use so that only the targeted recipient can decrypt.</p>",
        "id": 153913304,
        "sender_full_name": "John Moehrke",
        "timestamp": 1507645691
    },
    {
        "content": "<p>The most re-usable is CMS (Like found in the IHE-Document Encryption (DEN) profile <a href=\"http://wiki.ihe.net/index.php/Document_Encryption\" target=\"_blank\" title=\"http://wiki.ihe.net/index.php/Document_Encryption\">http://wiki.ihe.net/index.php/Document_Encryption</a>   This is also the core standard used in S/MIME</p>",
        "id": 153913305,
        "sender_full_name": "John Moehrke",
        "timestamp": 1507645717
    },
    {
        "content": "<p>why does that make any difference? let's assume that there's some way to know</p>",
        "id": 153913306,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1507645749
    },
    {
        "content": "<p>There are efforts now in HTTP workgroup to add targeted Digital Rights Management methods... Is that what this person is looking for? It is a very different architecture than content encryption to a pre-known targeted identity.</p>",
        "id": 153913310,
        "sender_full_name": "John Moehrke",
        "timestamp": 1507646239
    },
    {
        "content": "<p>the context of use here is pre-known targetted identity</p>",
        "id": 153913311,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1507646508
    },
    {
        "content": "<p>okay, known identities certificate or Oauth?  Would drive use of CMS vs JWE..</p>",
        "id": 153913312,
        "sender_full_name": "John Moehrke",
        "timestamp": 1507646627
    },
    {
        "content": "<p>OAuth is not in the picture here.</p>",
        "id": 153913313,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1507646654
    },
    {
        "content": "<p>I might ask why transport encryption is not sufficient? That might tease out 'requirements' that are not being said.</p>",
        "id": 153913314,
        "sender_full_name": "John Moehrke",
        "timestamp": 1507646682
    },
    {
        "content": "<p>because there are multiple hops - both routing and storage- between source and target, and this breaks transport continuity, but the intermediaries are not authorized to view the content</p>",
        "id": 153913315,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1507646780
    },
    {
        "content": "<p>Hence why I wondered about DRM... as many people get excited about DRM and want to use it... DRM is very helpful 'access control' model...</p>",
        "id": 153913316,
        "sender_full_name": "John Moehrke",
        "timestamp": 1507646799
    },
    {
        "content": "<p>Okay, then CMS seems a good choice .. CMS is widely implemented. And if you have either secret key (password), or certificate based identities; it is a good choice for end-to-end encryptjon.</p>",
        "id": 153913317,
        "sender_full_name": "John Moehrke",
        "timestamp": 1507646814
    },
    {
        "content": "<p>Take a look at the IHE profile. I think it would be re-usable here.</p>",
        "id": 153913318,
        "sender_full_name": "John Moehrke",
        "timestamp": 1507646836
    },
    {
        "content": "<p>cms as in <a href=\"https://en.wikipedia.org/wiki/Cryptographic_Message_Syntax\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Cryptographic_Message_Syntax\">https://en.wikipedia.org/wiki/Cryptographic_Message_Syntax</a>?</p>",
        "id": 153913319,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1507646847
    },
    {
        "content": "<p>Yes</p>",
        "id": 153913320,
        "sender_full_name": "John Moehrke",
        "timestamp": 1507646895
    },
    {
        "content": "<p>it does look like the right base. What do we need to do to support it with Binary?</p>",
        "id": 153913321,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1507646917
    },
    {
        "content": "<p>I will have to look</p>",
        "id": 153913322,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1507647017
    },
    {
        "content": "<p>So the idea you have is that a Bundle would contain a set of Resources and an encrypted Binary? Or would the whole Bundle be encrypted? I am trying to figure out why this is unique to Binary.</p>",
        "id": 153913323,
        "sender_full_name": "John Moehrke",
        "timestamp": 1507647185
    },
    {
        "content": "<p>Would we have a need to create a Bundle mechanism for 'any' resource to be encapsulated in a CMS envelope? (We are re-inventing SOAP... you know that, right?)</p>",
        "id": 153913324,
        "sender_full_name": "John Moehrke",
        "timestamp": 1507647267
    },
    {
        "content": "<p>Note that SOAP already has this ability, using XML-Encryption....</p>",
        "id": 153913325,
        "sender_full_name": "John Moehrke",
        "timestamp": 1507647315
    },
    {
        "content": "<p>Considering that there are \"untrusted\" intermediaries involved, signing the content so the recipient can authenticate the source would make sense, in addition to encrypting it for the ultimate data consumer. CMS/S/MIME supports this. This is essentially Direct Messaging without the SMTP transport, so existing Direct tools (and potentially existing endpoints and trust frameworks) could be adapted for this.</p>",
        "id": 153913375,
        "sender_full_name": "Julie Maas",
        "timestamp": 1507667600
    },
    {
        "content": "<p>I don't know whether this applies outside binary or not.</p>",
        "id": 153913591,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1507805595
    },
    {
        "content": "<p>what makes this different to SOAP/S-MIME is that the question is around persisting, not just sending.</p>",
        "id": 153913592,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1507805631
    },
    {
        "content": "<p>That sounds like the CMS (like profiled in IHE-DEN profile) is the best choice. This is the kind of use-case that drove the IHE-DEN profile. Where the content needed to be encrypted/signed in a transport agnostic way. The content can be anything, mime-type described. The transport can be anything, including mixed mode transport (http --&gt; email --&gt; usb-stick --&gt; SOAP...). The CMS survives all those conversions between transports. Key management can be as simple as a shared secret, or as complete as PKI.  ((( Note that CMS is the underlying standard of S/MIME too)))</p>",
        "id": 153913614,
        "sender_full_name": "John Moehrke",
        "timestamp": 1507813551
    },
    {
        "content": "<p>indeed that sounds like the case - do we need to do anything in FHIR for this? It seems to me that we do, for binary at least.</p>",
        "id": 153913920,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1508012041
    },
    {
        "content": "<p>another question that arises is whether anyone has used element level encryption as defined in <a href=\"https://www.w3.org/TR/xmlenc-core/\" target=\"_blank\" title=\"https://www.w3.org/TR/xmlenc-core/\">https://www.w3.org/TR/xmlenc-core/</a>, and whether we should think about that</p>",
        "id": 153913921,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1508012091
    },
    {
        "content": "<p>I would be glad to add a note on the security pages about encapsulating encryption. I would like to see a few more that indicate that this is a proper guidance.</p>",
        "id": 153914659,
        "sender_full_name": "John Moehrke",
        "timestamp": 1508343658
    },
    {
        "content": "<p>element level encryption is fraught with ways to fail... More so than partial signatures... that is to say when one does element level encryption or signatures you must do it really-really correct.   element level encryption can fail to fully encrypt due to lack of well implemented initialization vectors.  I would certainly recommend that that this is well beyond any implementation today in anything other than academic prototypes.</p>",
        "id": 153914661,
        "sender_full_name": "John Moehrke",
        "timestamp": 1508343810
    },
    {
        "content": "<p>I agree. Was just checking</p>",
        "id": 153915236,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1508702890
    }
]