[
    {
        "content": "<p>Hi! Since I just joined the chat and I'm working quite a bit with  FHIR and with Ruby on Rails I'm interested: why is there no server implementation with Rails. I think it a very scalable environment with good tools. Are there any concerns? </p>",
        "id": 153814941,
        "sender_full_name": "Hannes Ulrich",
        "timestamp": 1457649585
    },
    {
        "content": "<p>no one has proposed to do one</p>",
        "id": 153814944,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457649605
    },
    {
        "content": "<p>generally, the concerns for any open source implementation are - can you support it, what's your scope and focus. but it's not because we don't like rails</p>",
        "id": 153814946,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457649639
    },
    {
        "content": "<p>I see the point of supporting and maintaining the server system. I was just wondering. So just a general question: are there people interested in developing a Rails version? </p>",
        "id": 153814951,
        "sender_full_name": "Hannes Ulrich",
        "timestamp": 1457649891
    },
    {
        "content": "<p>looks like crucible is written in rails</p>",
        "id": 153814953,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457649951
    },
    {
        "content": "<p>Can you describe your concerns ?</p>",
        "id": 153814957,
        "sender_full_name": "Hannes Ulrich",
        "timestamp": 1457650120
    },
    {
        "content": "<p>There is a server implementation done in Rails, I haven't open-sourced the generation code yet</p>",
        "id": 153815010,
        "sender_full_name": "Andy Stechishin",
        "timestamp": 1457653068
    },
    {
        "content": "<p>Most of the ORM is specific to a PostgreSQL based storage system. I am currently working on the polishing up the generators so that rather than a complete reference implementation it gives you the ability to pick and choose your resources</p>",
        "id": 153815011,
        "sender_full_name": "Andy Stechishin",
        "timestamp": 1457653218
    },
    {
        "content": "<p>Looks like Crucible is done in rails</p>",
        "id": 153815014,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457653678
    },
    {
        "content": "<p><a href=\"http://projectcrucible.org\" target=\"_blank\" title=\"http://projectcrucible.org\">Crucible</a> is written in rails, but it tests server implementations against the specification --- we do not [yet?] implement a rails FHIR server... though we have the DSTU2 mongoid models to do so, if rails/mongo stack was of interest as a starting point.</p>",
        "id": 153815172,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1457701027
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191369\">@Andy Stechishin</span> if you open source your ruby model generation let us know.  We currently have ruby model generation at: <a href=\"https://github.com/fhir-crucible/fhir_dstu2\" target=\"_blank\" title=\"https://github.com/fhir-crucible/fhir_dstu2\">crucible model generation</a>.  Since you are PostgresSQL based and we're mongo based maybe that's an impass, but maybe there's a way we could work with a common core. </p>",
        "id": 153815178,
        "sender_full_name": "Andre Quina",
        "timestamp": 1457703530
    },
    {
        "content": "<p>I'm also about to generate the STU3 models from the StructureDefinition files directly, and do everything outside of the Java build tools.</p>",
        "id": 153815179,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1457703621
    },
    {
        "content": "<p>When you get to that <span class=\"user-mention\" data-user-id=\"191381\">@Jason Walonoski</span> the dotnet client is generated from the StructureDefinition files too, Namely: expansions.xml, profiles-resources.xml, profiles-types.xml and search-parameters.xml</p>",
        "id": 153815552,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458010775
    },
    {
        "content": "<p>(and code generation is on github too - though is done with t4 templates - an MS compiler tool)</p>",
        "id": 153815553,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458010809
    },
    {
        "content": "<p>That file list is actually useful for me too, thanks Brian</p>",
        "id": 153815554,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1458010827
    },
    {
        "content": "<p>(And my server code generates off the dotnet client using reflection on the model classes)</p>",
        "id": 153815556,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458010878
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> thanks for pointing out expansions.xml and search-parameters.xml -- I missed those files. Does expansions.xml just contain all the content in valuesets.xml that has already been recursively included? Or is it something more?</p>",
        "id": 153815658,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1458045897
    },
    {
        "content": "<p>Jason, it contains all the value sets used in enumerations, expanded and ready to go so that there's no need to use terminological reasoning on the value sets</p>",
        "id": 153815678,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458062357
    },
    {
        "content": "<p>We use it to generate the pascal and c# versions, and it's the best approach. The java RI is still generated the other way,  but that's a process issue for me</p>",
        "id": 153815680,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458062450
    }
]