[
    {
        "content": "<p>In the Dutch realm, senders sometimes do not want (or are not allowed) to include a persons national identification number (BSN in Dutch, like the US SSN). Organizations like quality registries however, do require a unique identifier to be sent. Often hashed identifiers are used. What would be the recommended way of representing a hashed identifier in FHIR? </p>\n<p>I would expect using the .type element makes sense, but the referenced <a href=\"https://www.hl7.org/fhir/stu3/valueset-identifier-type.html\">ValueSet</a> does not contain a code that matches anything like \"hashed identifier\". This ValueSet is however extensible so I could just add my own, but I am looking for a more international approach.</p>",
        "id": 238756405,
        "sender_full_name": "Niek van Galen",
        "timestamp": 1620994199
    },
    {
        "content": "<p>is there a reason to decorate these with a type? Seems to me the intent of these pseudo identifiers are as a placeholder to fulfil a requirement that an identifier exists. To indicate that it is a hashed identifier is to invite brute force attack. What downstream actor needs to know it was a hashed real identifer vs just knowing it is a globally unique id?</p>",
        "id": 238756723,
        "sender_full_name": "John Moehrke",
        "timestamp": 1620994354
    },
    {
        "content": "<p>Good point <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>. The receiver of the data wants to know what is a real identifier (bsn) and what is not (hashed), because a <em>check digit</em> is performed on the real identifiers to confirm validity of the number.</p>",
        "id": 238756970,
        "sender_full_name": "Niek van Galen",
        "timestamp": 1620994482
    },
    {
        "content": "<p>that is easy... those identifiers that it can recognize are what they are claiming to be... those that it can't recognize is something it is not intended to recognize.</p>",
        "id": 238757230,
        "sender_full_name": "John Moehrke",
        "timestamp": 1620994598
    },
    {
        "content": "<p>imagine a USA SSN being dropped in there... it would not be useful or recognized.... but it would be carried just the same.</p>",
        "id": 238757273,
        "sender_full_name": "John Moehrke",
        "timestamp": 1620994630
    },
    {
        "content": "<p>and to carry on with that USA SSN example... it is useless for it to be taged so that it could be understood as it is a number of no use in the Dutch environment..   much like the pseudo-identifier created from the hash.</p>",
        "id": 238757417,
        "sender_full_name": "John Moehrke",
        "timestamp": 1620994695
    },
    {
        "content": "<p>I see your point, which does raise another question. When including a Dutch BSN conform the <a href=\"https://simplifier.net/nictizstu3-zib2017/nl-core-patient\">nl-core-patient</a> profile the .system element has a fixed value. In that way, receiving systems know that it's a BSN. I would expect that one would have to use a different .system value (maybe even \"hospital specific\") for a hashed BSN/identifier?</p>",
        "id": 238758314,
        "sender_full_name": "Niek van Galen",
        "timestamp": 1620995173
    },
    {
        "content": "<p>I would expect the same: an identifier with .system \"BSN\" SHALL have a value that actually is a BSN. A hashed thing therefor SHALL NOT have a \"BSN\" system.</p>",
        "id": 238758661,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1620995386
    },
    {
        "content": "<p>The main requirement here is likely that upon sending the same person/patient, you have the same identifier, regardless of what that identifier is.</p>",
        "id": 238758809,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1620995455
    },
    {
        "content": "<p>You have conflicting requirements then, sounds like. Cannot put BSN in, Must put BSN in so we can do patient matching. Which requirements group has force of law? That's who I'd go with.</p>",
        "id": 238758925,
        "sender_full_name": "Daniel Venton",
        "timestamp": 1620995523
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"335936\">@Daniel Venton</span> The receiver is entitled to process BSN by Dutch regulations, however can not enforce that. Senders are encouraged to include a real BSN but are not always willing to because of their organization policy.</p>",
        "id": 238759318,
        "sender_full_name": "Niek van Galen",
        "timestamp": 1620995712
    },
    {
        "content": "<p>If the organization doesn't want to send the BSN and the consumer can't force you to send the BSN but can force you to send a unique identifier. Send any ole unique identifier you have laying around. Patient ID. MRN. Why even hash BSN unless BSN is the only unique value you have? With other unique items you get to set the system value to yourself. One problem with hashing the BSN, I suspect, the BSN is probably a relatively simple number say 9-digit numeric. If your hash formula was ever \"discovered\" then creating a rainbow table of all possible hashes would be easy. Then you decide to prevent rainbow attack, you salt the value. If you salt the value then you have to track which salt you used with each BSN so you can use the same salt again tomorrow. </p>\n<p>Seems simplest just to send a different unique value, perhaps hospital/facility assigned, and be done with it.</p>",
        "id": 238760571,
        "sender_full_name": "Daniel Venton",
        "timestamp": 1620996394
    },
    {
        "content": "<p>This seems potentially dangerous - if the receiving systems will sometimes receive the hashed and sometimes the unhashed identifiers for the same patient and they can match on either, does that imply they  are storing both identifiers? If that was the case then anyone who stole the data would have the crosswalk between the two identifiers.</p>",
        "id": 238772392,
        "sender_full_name": "Craig McClendon",
        "timestamp": 1621001288
    }
]