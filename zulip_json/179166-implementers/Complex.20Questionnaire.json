[
    {
        "content": "<p>I was hoping to get some guidance towards complex questionnaire construction. I'm working on the PRAPARE Survey (pdf is here: <a href=\"https://www.nachc.org/wp-content/uploads/2018/05/PRAPARE_One_Pager_Sept_2016.pdf\">https://www.nachc.org/wp-content/uploads/2018/05/PRAPARE_One_Pager_Sept_2016.pdf</a>). The second question gives a codified list of choices (that part is straight forward), what I'm not sure how to do is \"other\". Using the form builder (<a href=\"https://lhcformbuilder.nlm.nih.gov/\">https://lhcformbuilder.nlm.nih.gov/</a> -&gt; Add Item -&gt; Search for Prapare -&gt; import) it displays the options as you would expect. Any choice (or multiple) can be selected, and even \"other\" has a code associated with it. However, in the actual survey, if you select \"other\" you have the option to enter free text. Does FHIR have a way to specify this kind of answer? I can certainly create logic to, for instance, anytime there is an \"other\" codified answer, if it's chosen by the user display a text box. However, that would be idiosyncratic to my renderer, and not following official FHIR specifications. I've looked through the FHIR documents online (including advanced form rendering and advanced form behavior and calculation), and I couldn't find this kind of behavior defined anywhere. Does anyone have experience with this?</p>",
        "id": 216905477,
        "sender_full_name": "Grey Faulkenberry",
        "timestamp": 1605548512
    },
    {
        "content": "<p>I think an open-choice question type supports this.</p>",
        "id": 216933162,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1605561274
    },
    {
        "content": "<p>That was my impression as well, but I couldn't find an example of implementation. Is it supposed to be understood by the renderer that if the type is open-choice, they should provide a free-text option? Or is there another way to specify this in FHIR? Also, if I want to cascade so that only if \"other\" is chosen does it provide the text box, am I going to have to have each answer as a separate item and then use enableWhen?</p>",
        "id": 216934602,
        "sender_full_name": "Grey Faulkenberry",
        "timestamp": 1605561983
    },
    {
        "content": "<p>My expectation (without proof) is that an open-choice gets rendered as:</p>\n<ul>\n<li>(_) Option 1</li>\n<li>(_) Option 2</li>\n<li>(_) Other: [_______]<br>\nAnd the result goes into a CodeableConcept, which supports either the coded options or the text other option.<br>\n<span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>?</li>\n</ul>",
        "id": 216937326,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1605563356
    },
    {
        "content": "<p>I don't think a separate \"other\" item is needed.</p>",
        "id": 216937489,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1605563425
    },
    {
        "content": "<p>Typically you'd represent this with a child question that had an enableWhen based on the answer being 'Other'.  I'm pretty sure there's an example of that in the SDC implementation guide somewhere, but I don't remember exactly where.  <span class=\"user-mention\" data-user-id=\"217312\">@Joee Garcia</span>, you've been digging in them more recently than I :)</p>",
        "id": 216937776,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1605563607
    },
    {
        "content": "<p>OK, so then the idea would be something like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>&quot;item1&quot;: [\n  &quot;type&quot;: &quot;choice&quot;,\n  &quot;linkId&quot;: &quot;firstQuestion&quot;,\n  &quot;answerOption&quot;: [\n       AnswerOption 1,\n       AnswerOption 2,\n      AnswerOption Other\n  ],\n  &quot;item1.1&quot;: [\n      {\n        &quot;type&quot;: &quot;string&quot;,\n        &quot;enableWhen&quot;: [\n            {\n              &quot;answerCoding&quot;: Other,\n              &quot;question&quot;: &quot;firstQuestion&quot;,\n              &quot;operator&quot;: &quot;=&quot;\n            }\n          ],```\n</code></pre></div>",
        "id": 216939169,
        "sender_full_name": "Grey Faulkenberry",
        "timestamp": 1605564333
    },
    {
        "content": "<p>Exactly</p>",
        "id": 216941541,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1605565566
    },
    {
        "content": "<p>And if the first question is repeating, there'd potentially be a child question for each answer (provided it was enabled for that answer)</p>",
        "id": 216941587,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1605565606
    },
    {
        "content": "<p>Oh, that's not what I was expecting at all. What's the value of open-choice vs. choice then?</p>",
        "id": 216941883,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1605565791
    },
    {
        "content": "<p>So there's no reason a child item's enableWhen can't refer to the parent item? I only ask because the lhc form builder (<a href=\"https://lhcformbuilder.nlm.nih.gov/\">https://lhcformbuilder.nlm.nih.gov/</a>) won't allow it (I realize that's not the official FHIR spec, but I still wanted to be sure).</p>",
        "id": 216942154,
        "sender_full_name": "Grey Faulkenberry",
        "timestamp": 1605565932
    },
    {
        "content": "<p>Also, another question about preferred syntax. I have the following question:<br>\nHow many family members, including yourself, do you currently live with? ____________<br>\n[ ] I choose not to answer this question</p>\n<p>The answer is an integer. But there is also an option to choose not to answer. Would this be best represented by a group (the question) and then two sub-items (one for the integer answer and one to allow choosing not to answer). Or would it be better to represent this as a single question, with an integer answer, and then a sub-item to allow the choice not to answer?</p>",
        "id": 216945448,
        "sender_full_name": "Grey Faulkenberry",
        "timestamp": 1605567915
    },
    {
        "content": "<p>Open choice allows you to just have an answer where you convey a string instead of one of the choices (rather than as a sub-answer to a specific choice)</p>",
        "id": 216945782,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1605568121
    },
    {
        "content": "<p>EnableWhen can absolutely refer to a parent element</p>",
        "id": 216945821,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1605568149
    },
    {
        "content": "<p>My leaning would be a group.  But it's more a question of style.  I don't think there's a clear right/wrong.</p>",
        "id": 216945933,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1605568204
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179166-implementers/topic/Complex.20Questionnaire/near/216945782\">said</a>:</p>\n<blockquote>\n<p>Open choice allows you to just have an answer where you convey a string instead of one of the choices (rather than as a sub-answer to a specific choice)</p>\n</blockquote>\n<p>So, open choice gives you this?:</p>\n<ul>\n<li>(_) A</li>\n<li>(_) B</li>\n<li>(_) [__________]</li>\n</ul>",
        "id": 216945996,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1605568258
    },
    {
        "content": "<p>Yes</p>",
        "id": 216946040,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1605568294
    },
    {
        "content": "<p>Well neither choice nor open-choice look like great solutions. With choice, if you have an answer value set, then it needs to contain an \"other\" value, which I've been led to believe is bad from a terminology point of view. If you use open-choice, then there is no lead-in text for the string, which is poor user interface.</p>",
        "id": 216946346,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1605568500
    },
    {
        "content": "<p>I wouldn</p>",
        "id": 216947789,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1605569481
    },
    {
        "content": "<p>I wouldn't worry about terminology practice in a Questionnaire.  You're going to do all sorts of things that are focused on user interface.  You can (and should) transform data when migrating it to resources</p>",
        "id": 216947877,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1605569543
    },
    {
        "content": "<p>I think it's not so binary</p>",
        "id": 216947896,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1605569569
    },
    {
        "content": "<p>Well, using choice then means I either include an \"Other\" value in my base valueset or I define a new valueset, just for use in the questionnaire, that includes my base valueset plus one \"Other\" value. Neither seem pretty. And neither allow me to use SDC observation data extraction.</p>",
        "id": 216948128,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1605569747
    }
]