[
    {
        "content": "<p>Hi all - I'm trying to understand the best way to attach \"helper text\" to Questionnaire items.</p>\n<p>It seems like using display items is the way to go here, and in particular I'm interested in leveraging the questionnaire-display-category extension (<a href=\"https://www.hl7.org/fhir/codesystem-questionnaire-display-category.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/codesystem-questionnaire-display-category.html\">https://www.hl7.org/fhir/codesystem-questionnaire-display-category.html</a>) to classify my helper text as code \"help\".</p>\n<p>If I want to ask a question, e.g. \"When was your last visit?\" and I want to attach helper text to that question, e.g. \"If you don't remember, enter a best guess\", which of these approaches is the correct way to model this?</p>\n<p>1) Display item for helper text at the root, with a nested item for the actual question item.</p>\n<div class=\"codehilite\"><pre><span></span>{\n  &quot;resourceType&quot;: &quot;Questionnaire&quot;,\n  &quot;item&quot;: [\n    {\n      &quot;linkId&quot;: &quot;last-visit-helper&quot;,\n      &quot;text&quot;: &quot;If you don&#39;t remember, enter a best guess&quot;,\n      &quot;type&quot;: &quot;display&quot;,\n      &quot;extension&quot;: [\n        {\n          &quot;url&quot;: &quot;http://hl7.org/fhir/StructureDefinition/questionnaire-displayCategory&quot;,\n          &quot;valueCodeableConcept&quot;: {\n            &quot;coding&quot;: {\n              &quot;code&quot;: {\n                &quot;system&quot;: &quot;http://hl7.org/fhir/questionnaire-display-category&quot;,\n                &quot;code&quot;: &quot;help&quot;,\n                &quot;display&quot;: &quot;Help&quot;\n              }\n            }\n          }\n        }\n      ],\n      &quot;item&quot;: [\n        {\n          &quot;linkId&quot;: &quot;last-visit&quot;,\n          &quot;text&quot;: &quot;When was your last visit?&quot;,\n          &quot;type&quot;: &quot;dateTime&quot;\n        }\n      ]\n    }\n  ]\n}\n</pre></div>\n\n\n<p>2) Actual question item at the root, with a nested display item for the helper text</p>\n<div class=\"codehilite\"><pre><span></span>{\n  &quot;resourceType&quot;: &quot;Questionnaire&quot;,\n  &quot;item&quot;: [\n    {\n      &quot;linkId&quot;: &quot;last-visit&quot;,\n      &quot;text&quot;: &quot;When was your last visit?&quot;,\n      &quot;type&quot;: &quot;dateTime&quot;,\n      &quot;item&quot;: [\n        {\n          &quot;linkId&quot;: &quot;last-visit-helper&quot;,\n          &quot;text&quot;: &quot;If you don&#39;t remember, enter a best guess&quot;,\n          &quot;type&quot;: &quot;display&quot;,\n          &quot;extension&quot;: [\n            {\n              &quot;url&quot;: &quot;http://hl7.org/fhir/StructureDefinition/questionnaire-displayCategory&quot;,\n              &quot;valueCodeableConcept&quot;: {\n                &quot;coding&quot;: {\n                  &quot;code&quot;: {\n                    &quot;system&quot;: &quot;http://hl7.org/fhir/questionnaire-display-category&quot;,\n                    &quot;code&quot;: &quot;help&quot;,\n                    &quot;display&quot;: &quot;Help&quot;\n                  }\n                }\n              }\n            }\n          ],\n        }\n      ]\n    }\n  ]\n}\n</pre></div>\n\n\n<p>3) Create a group item that contains the question item and the display item</p>\n<p>Omitting example because this seems wrong to me, because enforcing this group -&gt; question + display model would require a profile of some kind. </p>\n<p>I understand that one alternative would be to rely on Questionnaires' ordering guarantees, and put \"helper text\" display items before the questions where the text is relevant - but I want to explicitly tie the helper text to specific questions.</p>\n<hr>\n<p>#2 seems like the most obvious approach to me, but my main concern: it suggests that _every_ nested display item is \"secondary text\" to its parent question item. What if I have a deeply nested Questionnaire and sometimes I want \"secondary text\" but other times I just want a normal inline display item that isn't simply supporting the parent question item -- especially in the case where the parent question item is a group.</p>\n<p>#1 seems like it might avoid the above issue, but also seems to suggest that we should avoid having any more than one question item nested immediately inside the display item, which feels odd.</p>\n<p>Can someone please point me in the right direction for what the intended approach is, and any bad assumptions I'm making here?</p>\n<p>Thanks!</p>",
        "id": 179667300,
        "sender_full_name": "Tadas Antanavicius",
        "timestamp": 1572643696
    },
    {
        "content": "<p>Just so you know, there's a <a class=\"stream\" data-stream-id=\"179255\" href=\"/#narrow/stream/179255-questionnaire\">#questionnaire</a> stream that may be a better target for some of these questions :)<br>\nThere isn't a right or wrong answer.  It's really a question of style.  #2 makes clear that the display applies to the question (or items within that question).  #1 could apply to pretty much anything.  #3 is really just a special case of #1.</p>",
        "id": 179667557,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572643935
    },
    {
        "content": "<p>Key thing is to think about how you want things to render.  Typically things listed beneath a question will appear below or on the same line as the question.  Display items listed prior to a question will appear before the question.</p>",
        "id": 179667593,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572643995
    },
    {
        "content": "<p>(That's not a strict rule as rendering engines have some degree of flexibility in how they render content with different display categories</p>",
        "id": 179667614,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572644042
    },
    {
        "content": "<p>Thanks! Helpful to know that there isn't some specific preferred approach.</p>\n<blockquote>\n<p>Just so you know, there's a #questionnaire stream that may be a better target for some of these questions :)</p>\n</blockquote>\n<p>Sorry, I did ask my other question in there, and realize now this question made sense to ask there as well. I am both implementing the rendering engine and using it, if that might affect the perspective you can offer here.</p>\n<p>I think I'm going to go with #2, and have my engine assume that all \"help\" categorized display items are intended to serve as \"helper text\" to their parent (hidden in tooltips as appropriate, etc.). I can continue to have non-\"help\" display items render alongside all other questionnaire items.</p>\n<p>In my implementation, I'm considering wrangling display items tagged as \"help\" into a data representation that is akin to the questionnaire-instruction extension that last existed in DSTU2 (<a href=\"https://hl7.org/fhir/DSTU2/extension-questionnaire-instruction.html\" target=\"_blank\" title=\"https://hl7.org/fhir/DSTU2/extension-questionnaire-instruction.html\">https://hl7.org/fhir/DSTU2/extension-questionnaire-instruction.html</a>). Do you recall the reason for that extension's removal, or could point me to any discussion that covered it? I'd like to make sure I'm not re-creating some modeling mistake that I'll regret later.</p>",
        "id": 179868637,
        "sender_full_name": "Tadas Antanavicius",
        "timestamp": 1572897053
    },
    {
        "content": "<p>It got removed because we decided that having instructions of some sort was part of core</p>",
        "id": 179878770,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572903085
    },
    {
        "content": "<p>There is also the extension <a href=\"http://hl7.org/fhir/StructureDefinition/questionnaire-itemControl\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/questionnaire-itemControl\">http://hl7.org/fhir/StructureDefinition/questionnaire-itemControl</a> (with code \"help\") which can be used for help.  Issue <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=24117\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=24117\">GF#24117</a> was raised to resolve the apparent duplication.</p>",
        "id": 179888336,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1572910494
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"242509\">@Tadas Antanavicius</span>  Since you mentioned writing a form renderder, I wanted to mention our open-source <a href=\"https://lhcforms.nlm.nih.gov/\" target=\"_blank\" title=\"https://lhcforms.nlm.nih.gov/\">LHC-Forms</a> widget which renders FHIR forms.  (Just FYI.)</p>",
        "id": 179888581,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1572910742
    },
    {
        "content": "<p>LHC-Forms, BTW, follows your approach in #2, except that it uses the questionnaire-itemControl extension.  #1 does not look right to me, and I am not sure what <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> meant by \"#1 could apply to pretty much anything\".  It is probably an area that could use some clarification in the spec.</p>",
        "id": 179889034,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1572911242
    }
]