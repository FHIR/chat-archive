[
    {
        "content": "<p>I'm implementing a server using the HAPI FHIR server. One of the neat features of this server is that it automatically generates a Capability Statement based on your particular implementation.</p>\n<p>I also need to provide the OAuth endpoints in the Rest -&gt; Security -&gt; Service sections of this resource, but I'm not sure how to include this in the auto-generated CS resource. Is there a way to amend the auto-generated resource to do this?</p>",
        "id": 203119220,
        "sender_full_name": "Peter Bernhardt",
        "timestamp": 1594136257
    },
    {
        "content": "<p>You might ask on <a class=\"stream\" data-stream-id=\"179167\" href=\"/#narrow/stream/179167-hapi\">#hapi</a></p>",
        "id": 203122141,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1594137602
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179166-implementers/topic/HAPI.20server.20-.20Capability.20Statement.20and.20security.20service/near/203122141\">said</a>:</p>\n<blockquote>\n<p>You might ask on <a class=\"stream\" data-stream-id=\"179167\" href=\"/#narrow/stream/179167-hapi\">#hapi</a></p>\n</blockquote>\n<p>Thanks. Subscribed and reposted.</p>",
        "id": 203126077,
        "sender_full_name": "Peter Bernhardt",
        "timestamp": 1594139245
    },
    {
        "content": "<p>Good Morning/Good Evening. </p>\n<p>I am looking to understand about the implementation of capability statement. I went through the HL7 FHIR documentation but in business use case stand point...when should we use capability statement? and does this solve the problem to restricting the users access to specific resource...</p>\n<p>Trying to understand the workflow here....lets say client wants to access patient resource. Does this user/client request hits the capability statement resource data to validate the level of permissions defined for this user/client and then proceed with allowing access to the actual resource (lets say patient resource)?</p>\n<p>Looking forward to hearing from you. Thanks in Advance.</p>",
        "id": 204641042,
        "sender_full_name": "PKumar",
        "timestamp": 1595406531
    },
    {
        "content": "<p>CapabilityStatement doesn't constrain users.  CapabilityStatement declares what a server is capable of doing.  It's possible for a server to expose distinct CapabilityStatements to each user based on their permissions.  So if you hit a server without authenticating, you would see what the server can do \"in general\".  If you hit it after authenticating as a user, the server would expose a CapabilityStatement constrained to the operations you're actually allowed to invoke.</p>",
        "id": 204672928,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1595428132
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> ,I understand it now, Thank You!</p>\n<p>Is it <strong>mandatory</strong> to implement capability statements when I create FHIR server? or it is a best practice to create and expose to the potential/existing clients to ensure they are aware of what actions they can perform?</p>",
        "id": 204796236,
        "sender_full_name": "PKumar",
        "timestamp": 1595510698
    },
    {
        "content": "<p>Exposing the CapabilityStatement through the capabilities interaction ([base url]/metadata) is required for RESTful FHIR servers.  See <a href=\"https://www.hl7.org/fhir/capabilitystatement.html#notes\">https://www.hl7.org/fhir/capabilitystatement.html#notes</a></p>",
        "id": 204796937,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1595511080
    },
    {
        "content": "<p>Thats interesting to know. So, it falls under best practice of implementation then. Thanks <span class=\"user-mention\" data-user-id=\"192576\">@Robert Scanlon</span></p>",
        "id": 204809932,
        "sender_full_name": "PKumar",
        "timestamp": 1595516913
    },
    {
        "content": "<p>I believe is stronger than best practice, and is a mandatory requirement for RESTful servers.  \"RESTful servers are required to provide this resource on demand. Servers SHALL specify what resource types and operations are supported, and SHOULD also specify profiles for each resource type.\"</p>",
        "id": 204810280,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1595517067
    },
    {
        "content": "<p>Ok, now I got more clarity to it. <span class=\"user-mention\" data-user-id=\"192576\">@Robert Scanlon</span>   What <strong>other resources</strong> fall under this bucket of mandatory requirements?</p>",
        "id": 204811435,
        "sender_full_name": "PKumar",
        "timestamp": 1595517544
    },
    {
        "content": "<p>For a FHIR server, the only mandatory thing is CapabilityStatement at the metadata endpoint.  You are a fully conformant FHIR system if you expose metadata and you have a CapabilityStatement that declares that you support no RESTful resources, no messages and no documents.  (You're not a useful system, but you're FHIR-conformant :&gt;)  Beyond meta, the only requirement is that you do whatever your CapabilityStatement says that you do.</p>",
        "id": 204813332,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1595518414
    },
    {
        "content": "<p>Great!! Thanks for the details <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span></p>",
        "id": 204823460,
        "sender_full_name": "PKumar",
        "timestamp": 1595523190
    },
    {
        "content": "<p>Has there been any concern expressed about the amount of times an application or client may access the metadata endpoint as it is unsecured?  On Demand, as the spec says, means to me it is available at all times regardless of timing, number of accesses, etc.</p>",
        "id": 210136471,
        "sender_full_name": "Douglas DeShazo",
        "timestamp": 1600179979
    },
    {
        "content": "<p>Why do you presume that it's unsecured?  I don't think there's any language that would prevent a system from appropriately responding to DoS attacks or something similar.</p>",
        "id": 210138888,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1600181010
    },
    {
        "content": "<p>I was referring to the language in the spec that says 'should' return a CapabilityStatement before authorization/authentication.</p>",
        "id": 210155587,
        "sender_full_name": "Douglas DeShazo",
        "timestamp": 1600188491
    },
    {
        "content": "<p>Right, but that doesn't mean you can't put in place denial of service protections</p>",
        "id": 210156062,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1600188714
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> for some reason there was an expectation coming out of Connecathon on my side that authorization/authentication was required and I wanted to double check.</p>",
        "id": 210161811,
        "sender_full_name": "Douglas DeShazo",
        "timestamp": 1600191190
    },
    {
        "content": "<p>or rather that the metadata endpoint was to always remain open/unsecured.</p>",
        "id": 210161984,
        "sender_full_name": "Douglas DeShazo",
        "timestamp": 1600191259
    },
    {
        "content": "<p>One common behavior is that if someone hits the endpoint without authentication, it provides basic capability information (including how to authenticate) and if you hit it <em>with</em> authentication, it tells you what you're allowed to do with your current authorization.</p>",
        "id": 210165046,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1600192602
    }
]