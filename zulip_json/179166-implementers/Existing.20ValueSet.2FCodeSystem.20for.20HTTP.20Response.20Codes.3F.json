[
    {
        "content": "<p>Wondering if there is an existing ValueSet/CodingSystem that captures the HTTP response codes. The closest I found was <a href=\"https://www.hl7.org/fhir/valueset-assert-response-code-types.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/valueset-assert-response-code-types.html\">https://www.hl7.org/fhir/valueset-assert-response-code-types.html</a>, but the intent of these codes isn't quite the same as representing the response codes themselves (and is also incomplete, e.g. 401). Would prefer not to create a new ValueSet/CodeSystem if there is an existing one.</p>",
        "id": 187415156,
        "sender_full_name": "Ken Sinn",
        "timestamp": 1580862947
    },
    {
        "content": "<p>wouldn't HTTP response codes be considered an external code set / value set?</p>",
        "id": 187415708,
        "sender_full_name": "Scott Robertson",
        "timestamp": 1580863575
    },
    {
        "content": "<p>Is there an established URN for <a href=\"https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml\" target=\"_blank\" title=\"https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml\">https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml</a> , the same way we have for IETF or ISO codes?</p>",
        "id": 187416059,
        "sender_full_name": "Ken Sinn",
        "timestamp": 1580863992
    },
    {
        "content": "<p>Alternately, could someone use \"urn:ietf:rfc:7231|403\" and \"urn:ietf:rfc:7235|401\", with the RFC system changing depending on the HTTP response code? More onerous to manage, and it would only handle the codesystem and not the valueset.</p>",
        "id": 187416634,
        "sender_full_name": "Ken Sinn",
        "timestamp": 1580864696
    },
    {
        "content": "<p>what's the use case?</p>",
        "id": 187422242,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1580872977
    },
    {
        "content": "<p>I would argue that urn:ietf:rfc:7231 identifies the spec, not the code system (which is why you run into the RFC system changing depending on the code).  With this style of approach, then I'd use the urn for the very first description of HTTP response codes as the system, and then use the subsequent rfc's as versions.<br>\nHowever, see <a href=\"https://confluence.hl7.org/display/TA/External+Code+System+Owner+Engagement+Process\" target=\"_blank\" title=\"https://confluence.hl7.org/display/TA/External+Code+System+Owner+Engagement+Process\">https://confluence.hl7.org/display/TA/External+Code+System+Owner+Engagement+Process</a> (being discussed by Vocab and HTA right now as I write this) about how to answer this question</p>",
        "id": 187423138,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1580874541
    },
    {
        "content": "<p>Use case is for a composite FHIR service that calls multiple underlying FHIR services. For example, if this front-end FHIR service A calls two other services B and C, I want Service A to be able to return the HTTP response codes from B and C, say in OperationOutcome.issue[0].details.coding.system+code and OperationOutcome.issue[1].details.coding.system+code. Service A itself may have been successful in executing its own procedures, even though B may have been successful with a HTTP-200 while C returned a HTTP-405.</p>",
        "id": 187423656,
        "sender_full_name": "Ken Sinn",
        "timestamp": 1580875394
    },
    {
        "content": "<p>So I guess this means that there hasn't been an established URI for the IANA list of http status codes yet.<br>\nWondering if using system=\"<a href=\"http://www.iana.org/assignments/http-status-codes\" target=\"_blank\" title=\"http://www.iana.org/assignments/http-status-codes\">http://www.iana.org/assignments/http-status-codes</a>\" would be a reasonable interim solution, as opposed to the ur:ietf:rfc:... above.</p>",
        "id": 187467470,
        "sender_full_name": "Ken Sinn",
        "timestamp": 1580919074
    },
    {
        "content": "<p>That would definitely be my starting point</p>",
        "id": 187499942,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1580940266
    },
    {
        "content": "<p>major defect in that codeSystem is that it is missing 418...   :-)</p>",
        "id": 187502436,
        "sender_full_name": "John Moehrke",
        "timestamp": 1580942120
    },
    {
        "content": "<p>Worse, it is listed as unassigned!</p>",
        "id": 187502712,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1580942380
    },
    {
        "content": "<p>For Bundle.response.status, we just treat it as a string - because whether you get a code or code + string (and how that's formatted) can vary.</p>",
        "id": 187502865,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1580942512
    }
]