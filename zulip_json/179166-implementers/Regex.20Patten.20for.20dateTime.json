[
    {
        "content": "<p>Its been brought to my attention that the regex pattern for dateTime differs from that declared in the schema files to that on the data type definition pages<br>\n<a href=\"http://hl7.org/fhir/STU3/datatypes.html#dateTime\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/datatypes.html#dateTime\">http://hl7.org/fhir/STU3/datatypes.html#dateTime</a><br>\nRegex: <br>\n-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5]<a href=\"http://\\.[0-9]+\" target=\"_blank\" title=\"http://\\.[0-9]+\">0-9</a>?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?<br>\nIn HL7 fhir schema<br>\n-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5]<a href=\"http://\\.[0-9]+\" target=\"_blank\" title=\"http://\\.[0-9]+\">0-9</a>?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?<br>\nWhich is correct (I'm assuming the schema?)</p>",
        "id": 158607173,
        "sender_full_name": "Dave Barnet",
        "timestamp": 1550229522
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192158\">@Dave Barnet</span>  - I don't know the answer but I used <a href=\"https://text-compare.com/\" target=\"_blank\" title=\"https://text-compare.com/\">https://text-compare.com/</a> to see that the difference is the fourth question mark from the end.    <strong>?</strong>)?)?)?</p>\n<p>Maybe this RegEx online parser page would be useful to test out which of the above is 'correct' with sample FHIR date/times:  <a href=\"https://regex101.com/\" target=\"_blank\" title=\"https://regex101.com/\">https://regex101.com/</a></p>",
        "id": 158616424,
        "sender_full_name": "John Silva",
        "timestamp": 1550239875
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192158\">@Dave Barnet</span>   <br>\nTop one from the spec is correct.<br>\nIn FHIR spec, 'If hours and minutes are specified, a time zone SHALL be populated' so it's:<br>\n-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5]0-9?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00)))?)?)?</p>\n<p>-?[0-9]{4}(-(0[1-9]|1[0-2])(-(0[0-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5]0-9?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))?)?)?)?<br>\nleaves the offset part of a dateTime optional by lazy matching the group starting (Z|...)</p>\n<p>p.s. It's only the STU3 schema that's off. The R4 version has got it correct.</p>",
        "id": 158620263,
        "sender_full_name": "Marcus Fearnett",
        "timestamp": 1550243017
    },
    {
        "content": "<p>Can you submit a change request?  We're doing an R3 patch soon and we might be able to fix this.</p>",
        "id": 158623167,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1550245266
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193430\">@Alexander Zautke</span></p>",
        "id": 158743574,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1550409851
    },
    {
        "content": "<p>looking @ R4:<br>\nwhat about the regex for time:  <code>([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]+)?</code></p>",
        "id": 158750236,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1550422194
    },
    {
        "content": "<p>i think the last capture group is wrong? What is the purpose of it?<br>\nNow something like: 08:23:12.2234323434534646234485767843756872980 would be valid</p>",
        "id": 158750323,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1550422293
    },
    {
        "content": "<p>not sure what the limits are on decimal places. I support up to 9</p>",
        "id": 158750525,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1550422627
    },
    {
        "content": "<p>spec says: <code>A time during the day, in the format hh:mm:ss</code> whereas the regex allows infinite milliseconds</p>",
        "id": 158750580,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1550422703
    },
    {
        "content": "<p>fractions are allowed</p>",
        "id": 158750583,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1550422719
    },
    {
        "content": "<p>ok. Couldn't find it in the spec here: <a href=\"http://build.fhir.org/datatypes.html#time\" target=\"_blank\" title=\"http://build.fhir.org/datatypes.html#time\">http://build.fhir.org/datatypes.html#time</a></p>",
        "id": 158750654,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1550422817
    },
    {
        "content": "<p>would be nice to have it explicitly stated to avoid misunderstandings</p>",
        "id": 158750678,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1550422897
    },
    {
        "content": "<p>Wow, where is that time machine that supports 'infinite milliseconds'  ? :-)</p>",
        "id": 158759992,
        "sender_full_name": "John Silva",
        "timestamp": 1550439297
    },
    {
        "content": "<p>i made a ticket: <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20400\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20400\">GF#20400</a>]</p>",
        "id": 158803623,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1550500051
    },
    {
        "content": "<p>What are infinite milliseconds? There are either milliseconds ([0-9]{1,3}) or infinite precision ([0-9]+).</p>",
        "id": 158912776,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1550605629
    },
    {
        "content": "<p>please excuse my fuzzy language, i meant infinitely accurate fractions of a second = infinite precision</p>",
        "id": 158914737,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1550606903
    }
]