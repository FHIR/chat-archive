[
    {
        "content": "<p>Hi,</p>\n<p>I d'like to be able to only retrieve one element or two elements of a resource. For example <br>\n\"give me the names of the patient having 30 years old\".<br>\nFor now, the spec looks only able to answer :<br>\n\"give me all the elements of the patient having 30 years old\".</p>\n<p>Is this possible to extend the spec in order to allow fetching a subset of the element of a resource ?</p>\n<p>The main advantage is to  get only the information needed, and decreasing drastically the network load.</p>\n<p>Thanks</p>",
        "id": 153903159,
        "sender_full_name": "natus",
        "timestamp": 1503385517
    },
    {
        "content": "<p>This would also decrease the backend database IO, because fetching less data in the tables. All this would lead to mutch better performances in special cases, and extend the FHIR uses cases</p>",
        "id": 153903160,
        "sender_full_name": "natus",
        "timestamp": 1503386378
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193729\">@natus</span> check this out: <a href=\"http://hl7.org/fhir/search.html#elements\" target=\"_blank\" title=\"http://hl7.org/fhir/search.html#elements\">http://hl7.org/fhir/search.html#elements</a></p>",
        "id": 153903164,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1503386822
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191363\">@Vadim Peretokin</span>  thanks, this is exactly what I was looking for.</p>",
        "id": 153903176,
        "sender_full_name": "natus",
        "timestamp": 1503391290
    },
    {
        "content": "<p>Have you looked at GraphQL in the developmental build?  <a href=\"http://build.fhir.org/graphql.html\" target=\"_blank\" title=\"http://build.fhir.org/graphql.html\">http://build.fhir.org/graphql.html</a></p>",
        "id": 153903333,
        "sender_full_name": "Eric Haas",
        "timestamp": 1503449795
    },
    {
        "content": "<p>and Grahames server has an implementation of GraphQL that I added to clinFHIR - <a href=\"https://fhirblog.com/2017/08/17/graphql/\" target=\"_blank\" title=\"https://fhirblog.com/2017/08/17/graphql/\">https://fhirblog.com/2017/08/17/graphql/</a></p>\n<p>If anyone else has an implementation I'd be delighted to add it as well!</p>",
        "id": 153903352,
        "sender_full_name": "David Hay",
        "timestamp": 1503466840
    },
    {
        "content": "<p>HAPI servers should have one once they're next upgraded</p>",
        "id": 153903354,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1503469327
    },
    {
        "content": "<p>Hurrah!  (btw - is there an entry in the CapabilityStatement that indicates this?)</p>",
        "id": 153903370,
        "sender_full_name": "David Hay",
        "timestamp": 1503477592
    },
    {
        "content": "<p>FYI - Touchstone now has support for GraphQL testing with some initial TestScripts deployed for Connectathon 16.<br>\n<a href=\"/user_uploads/10155/t4qAyernpi4u16bSGf4dXA_B/Touchstone_GraphQL.jpg\" target=\"_blank\" title=\"Touchstone_GraphQL.jpg\">Touchstone_GraphQL.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/t4qAyernpi4u16bSGf4dXA_B/Touchstone_GraphQL.jpg\" target=\"_blank\" title=\"Touchstone_GraphQL.jpg\"><img src=\"/user_uploads/10155/t4qAyernpi4u16bSGf4dXA_B/Touchstone_GraphQL.jpg\"></a></div>",
        "id": 153903409,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1503497349
    },
    {
        "content": "<p>hi<br>\nThe subset method is still very verbose<br>\n<a href=\"http://fhirtest.uhn.ca/baseDstu3/Patient?_elements=id&amp;_count=1\" target=\"_blank\" title=\"http://fhirtest.uhn.ca/baseDstu3/Patient?_elements=id&amp;_count=1\">http://fhirtest.uhn.ca/baseDstu3/Patient?_elements=id&amp;_count=1</a><br>\n {<br>\n      \"fullUrl\": \"<a href=\"http://fhirtest.uhn.ca/baseDstu3/Patient/32754\" target=\"_blank\" title=\"http://fhirtest.uhn.ca/baseDstu3/Patient/32754\">http://fhirtest.uhn.ca/baseDstu3/Patient/32754</a>\",<br>\n      \"resource\": {<br>\n        \"resourceType\": \"Patient\",<br>\n        \"id\": \"32754\",<br>\n        \"meta\": {<br>\n          \"versionId\": \"7\",<br>\n          \"lastUpdated\": \"2017-09-28T07:54:35.154-04:00\",<br>\n          \"tag\": [<br>\n            {<br>\n              \"system\": \"<a href=\"http://projectcrucible.org\" target=\"_blank\" title=\"http://projectcrucible.org\">http://projectcrucible.org</a>\",<br>\n              \"code\": \"testdata\"<br>\n            },<br>\n            {<br>\n              \"system\": \"<a href=\"http://example.org/codes/tags\" target=\"_blank\" title=\"http://example.org/codes/tags\">http://example.org/codes/tags</a>\",<br>\n              \"code\": \"entered-by-hand\",<br>\n              \"display\": \"Patient File entered by hand\"<br>\n            },<br>\n            {<br>\n              \"system\": \"<a href=\"http://hl7.org/fhir/v3/ObservationValue\" target=\"_blank\" title=\"http://hl7.org/fhir/v3/ObservationValue\">http://hl7.org/fhir/v3/ObservationValue</a>\",<br>\n              \"code\": \"SUBSETTED\",<br>\n              \"display\": \"Resource encoded in summary mode\"<br>\n            }<br>\n          ]<br>\n        }<br>\n      },<br>\n      \"search\": {<br>\n        \"mode\": \"match\"<br>\n      }<br>\n    }</p>\n<p>Any chance to introduce a _compact verb resulting:<br>\n<a href=\"http://fhirtest.uhn.ca/baseDstu3/Patient?_elements=id&amp;_count=1&amp;_compact=true\" target=\"_blank\" title=\"http://fhirtest.uhn.ca/baseDstu3/Patient?_elements=id&amp;_count=1&amp;_compact=true\">http://fhirtest.uhn.ca/baseDstu3/Patient?_elements=id&amp;_count=1&amp;_compact=true</a><br>\n{<br>\n        \"id\": \"32754\",<br>\n}</p>\n<p>This would allow many new uses cases that are not very efficient right now.<br>\nGraphQL looks like a good workaround, but maybe to much complicated</p>",
        "id": 153911523,
        "sender_full_name": "natus",
        "timestamp": 1506728572
    },
    {
        "content": "<p>GraphQL sounds like the answer to me.</p>",
        "id": 153911525,
        "sender_full_name": "Eric Haas",
        "timestamp": 1506728841
    },
    {
        "content": "<p>I wonder if we would serialize all the Meta.tag data too.......  <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> ?</p>",
        "id": 153911803,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1506956830
    },
    {
        "content": "<p>We do now (after that last change i put in recently)<br>\nAnd i don't think removing the meta is a good idea, should really always be there regardless.</p>",
        "id": 153911873,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1506972530
    }
]