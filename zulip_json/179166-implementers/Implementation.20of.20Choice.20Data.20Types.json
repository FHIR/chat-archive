[
    {
        "content": "<p>Example: Patient properties <code>deceased[x]</code> and <code>multipleBirth[x]</code></p>\n<p>My reading of <a href=\"http://build.fhir.org/formats.html#choice\" target=\"_blank\" title=\"http://build.fhir.org/formats.html#choice\">http://build.fhir.org/formats.html#choice</a> [ref: \"Elements that have a choice of data type cannot repeat - they must have a maximum cardinality of 1. When constructing an instance of an element with a choice of types, the authoring system must create a single element with a data type chosen from among the list of permitted data types.\"] implies to me that the implementation of choice data types should result in only one choice property (e.g., single polymorphic <code>deceased</code> property as opposed to the multiple <code>deceasedBoolean</code> and <code>deceasedDataTime</code> properties). Am I reading this correctly? Should the implementation be:</p>\n<ul>\n<li>a single <code>deceased</code> property that can support either a boolean data type or a dateTime data type</li>\n<li>two properties of <code>deceasedBoolean</code> and <code>deceasedDataTime</code> where only one of these fields can be used at a time</li>\n<li>something else that I'm missing...</li>\n</ul>\n<p>Looking at the generated <code>fhir.schema.json</code> from the downloads (JSON SCHEMA), the schema definition for \"Patient\" specifically defines the following (ignoring the \"underscored prperties\"): <code>deceasedBoolean</code>, <code>deceasedDateTime</code>. If the requirement is for a single polymorphic property, the \"Patient\" JSON Schema should have a single <code>deceased</code> property having a <code>oneOf</code> for type definitions for <code>boolean</code> and <code>dataTime</code> (string).</p>\n<p>If the intent is to implement choice fields as one per data type (e.g., <code>deceasedBoolean</code>, <code>deceasedDateTime</code>), then based on the requirement to allow only one of these, the JSON Schema should have a \"oneOf\" for <code>deceasedBoolean</code> or <code>deceasedDateTime</code>.</p>\n<p>I'd appreciate any insight on the underlying intent and how other folks are handling this in real implementations.</p>\n<p>Thanks!</p>",
        "id": 166362752,
        "sender_full_name": "Joe Paquette",
        "timestamp": 1558619833
    },
    {
        "content": "<blockquote>\n<p>Example: Patient properties <code>deceased[x]</code> and <code>multipleBirth[x]</code></p>\n<ul>\n<li>two properties of <code>deceasedBoolean</code> and <code>deceasedDataTime</code> where only one of these fields can be used at a time</li>\n</ul>\n</blockquote>\n<p>This.</p>",
        "id": 166362856,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1558619918
    },
    {
        "content": "<p>OK, thanks...<br>\nSo, shouldn't the JSON Schema enforce this by using \"oneOf\" for <code>deceasedBoolean</code> and <code>deceasedDateTime</code>? Or is the intent that an implementer must add appropriate logic on how to handle the specific uses?</p>",
        "id": 166364086,
        "sender_full_name": "Joe Paquette",
        "timestamp": 1558620746
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 166367779,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1558622973
    },
    {
        "content": "<p>and again  ;) choice types in fhir json are represented in a wrong way - you will have combinatorial problems with more than one union in resource,  you could not have collection of union attributes, search problems etc. I will bomb until we fix it!</p>",
        "id": 166744054,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1559067276
    },
    {
        "content": "<blockquote>\n<p>the intent that an implementer must add appropriate logic on how to handle the specific uses</p>\n</blockquote>\n<p>Json schema can't represent all the rules. So we add the ones to schema that people find useful, based on feedback. There's a tradeoff for different uses of the schema . for XML, we publish 2 different schema, for different purposes.</p>",
        "id": 166756954,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559075890
    }
]