[
    {
        "content": "<p>We have been looking at how to implement paging through search bundles in STU3 and it's proving hard to understand what the FHIR says about this. We've looked at a few of the public test servers and they seem quite inconsistent.</p>\n<p><a href=\"http://test.fhir.org/r3/Patient\" target=\"_blank\" title=\"http://test.fhir.org/r3/Patient\">http://test.fhir.org/r3/Patient</a><br>\n<a href=\"http://sqlonfhir-stu3.azurewebsites.net/fhir/Patient\" target=\"_blank\" title=\"http://sqlonfhir-stu3.azurewebsites.net/fhir/Patient\">http://sqlonfhir-stu3.azurewebsites.net/fhir/Patient</a><br>\n<a href=\"http://wildfhir.aegis.net/fhir1-8-0/Patient\" target=\"_blank\" title=\"http://wildfhir.aegis.net/fhir1-8-0/Patient\">http://wildfhir.aegis.net/fhir1-8-0/Patient</a><br>\n<a href=\"http://fhirtest.uhn.ca/baseDstu3/Patient\" target=\"_blank\" title=\"http://fhirtest.uhn.ca/baseDstu3/Patient\">http://fhirtest.uhn.ca/baseDstu3/Patient</a></p>\n<p>They all seem to support the self, first, next &amp; last links (not 100% consistently but close enough). <br>\nHowever, across the servers, there are mixed ways of doing paging involving the use of the following query constructs</p>\n<p>&amp;page=xx<br>\n&amp;_page=xx<br>\n&amp;search-offset=xx<br>\n&amp;_getpagesoffse=xx</p>\n<p>So, two questions;</p>\n<p>1) How should paging be performed?<br>\n2) Where is this described in the spec?</p>\n<p>thanks</p>",
        "id": 153922317,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1512061021
    },
    {
        "content": "<p>Richard, paging support is described here <a href=\"http://hl7.org/fhir/http.html#paging\" target=\"_blank\" title=\"http://hl7.org/fhir/http.html#paging\">http://hl7.org/fhir/http.html#paging</a>.  The RFC 5005 spec uses the &amp;page=xx format which is what I followed for wildfhir.</p>",
        "id": 153922318,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1512061466
    },
    {
        "content": "<p>There's no constraints on what the links look like.  They could use page numbers, record numbers, GUIDs or anything else.  All an implementer can count on is the links will do what they say they'll do.  You can't count on being able to parse them.</p>",
        "id": 153922365,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1512074889
    },
    {
        "content": "<p>\"The client must use the server supplied links in order to traverse the pages\" - only the server needs to understand the links</p>",
        "id": 153922396,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1512076534
    },
    {
        "content": "<p>Ah I see - thanks..</p>",
        "id": 153922443,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1512079588
    }
]