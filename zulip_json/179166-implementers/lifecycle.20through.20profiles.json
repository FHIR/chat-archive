[
    {
        "content": "<p>Is there anyone having experience expressing the lifecycle of resources through the use of profiles. What I was thinking about was to use profiles as a way of maintaining business rules. Eg. one patient profile may be useful during the start of an episode of care and the constraints may be at bit loose. Now later on, when the data on the patient may have been further enriched one might not allow that some cardinality is allowed to go back to 0 - eg. managingOrganization. As a way of not allowing such updates, one could now let the resource be compliant to a more strict profile - based of the originial patient profile. Has anyone got experience with such usage?</p>",
        "id": 160011143,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551799053
    },
    {
        "content": "<p>Interesting question! Resembles a state machine with well-defined transitions from one profile to another.</p>",
        "id": 160011813,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1551799521
    },
    {
        "content": "<p>indeed - and it keeps business rules on the server where they belong</p>",
        "id": 160014526,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551801496
    },
    {
        "content": "<p>The Task resource is designed to model (clinical) workflows. Maybe you can leverage this resource to define conversion operations that transform instance data from one profile to another?</p>",
        "id": 160014915,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1551801788
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> - I can't say I have much experience with Task so I can't say if it could deliver the flexibility that would be required with this profiles-as-states-design. I also can't believe I'm the first one to have this thought - or am I wrong?</p>",
        "id": 160015395,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551802129
    },
    {
        "content": "<p>Task doesn't model the workflows, it allows execution of them.  (The definitions of the workflows are handled with PlanDefinition).</p>",
        "id": 160015436,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1551802165
    },
    {
        "content": "<p>I'm not familiar with anyone else to propose using profiles for workflow business rules</p>",
        "id": 160015466,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1551802192
    },
    {
        "content": "<p>So the (sort of maybe obvious) question is why not?</p>",
        "id": 160015572,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551802247
    },
    {
        "content": "<p>Lots of implementers don't have FHIR-based back ends, so they often have other ways to tackle business rules.  Also creating profiles isn't a widespread skill.</p>",
        "id": 160015704,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1551802355
    },
    {
        "content": "<p>My own reaction is that it may result in validation messages that are a bit clunky/non-intuitive.  Also it might not be the most efficient way to enforce business rules on a transition.</p>",
        "id": 160015762,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1551802410
    },
    {
        "content": "<p>I'll agree to the fact that the error messages may be a bit clumsy</p>",
        "id": 160015850,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551802463
    },
    {
        "content": "<p>But it should be a clean way of expressing the business rules - in a vendor-neutral format</p>",
        "id": 160015883,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551802495
    },
    {
        "content": "<p>and it does not require a FHIR based backend ... al least not for full state regular updates</p>",
        "id": 160015934,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551802529
    },
    {
        "content": "<p>the validation runs on the wire-format which means that the backend can be whatever</p>",
        "id": 160016027,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551802592
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span>  so the FHIR server would have a business rules section in its conformance statement? How do you expose the operations? Are you suggesting an IG for business rules operations?</p>",
        "id": 160016040,
        "sender_full_name": "Bret H",
        "timestamp": 1551802604
    },
    {
        "content": "<p>I'm merely pitching an idea here. The capabilitystatement (<a href=\"https://www.hl7.org/fhir/capabilitystatement-definitions.html#CapabilityStatement.rest.resource.supportedProfile\" target=\"_blank\" title=\"https://www.hl7.org/fhir/capabilitystatement-definitions.html#CapabilityStatement.rest.resource.supportedProfile\">https://www.hl7.org/fhir/capabilitystatement-definitions.html#CapabilityStatement.rest.resource.supportedProfile</a>)  already has some sort of room for this. I don't know where business rules section should be located - but it would be a fair assumption for a system having an IG to express its business rules somewhere in its documentation</p>",
        "id": 160016614,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551802981
    },
    {
        "content": "<p>I do this in the MHD profile. I have one set of StructureDefinition for when a document source is submitting new documents, and a different StructureDefinition for the future query results. It is clunky, but it does somewhat follow. There are some intermediate steps I didn't model, mostly because they are less critical and are usually states transition.</p>",
        "id": 160016774,
        "sender_full_name": "John Moehrke",
        "timestamp": 1551803097
    },
    {
        "content": "<p>It might also be a non trivial task to figure out when a transition happens - eg. a resource now conforms \"to a more strict version of a given profile and should stay that way\"</p>",
        "id": 160016805,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551803121
    },
    {
        "content": "<p>yes, and at that transition it stops conforming to the previous.</p>",
        "id": 160016838,
        "sender_full_name": "John Moehrke",
        "timestamp": 1551803150
    },
    {
        "content": "<p>why is it clunky?</p>",
        "id": 160016841,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551803153
    },
    {
        "content": "<p>I suspect my statement of clunky is more related to the tooling I have today. I suspect it could eventually work very well.</p>",
        "id": 160016966,
        "sender_full_name": "John Moehrke",
        "timestamp": 1551803206
    },
    {
        "content": "<p>my thought was that you start with being compatible with eg. a sparse profile ... and then some way down the road you restrict it further - meaning that the resource conforms to both</p>",
        "id": 160017031,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551803251
    },
    {
        "content": "<p>tooling in that I am using IHE limited tooling, but also because right now I am trying to move to R4 and there is limited tooling to create StructureDefinitions there. And visualizing the transition between the two is not obvious, so you just have before and after snapshots.</p>",
        "id": 160017172,
        "sender_full_name": "John Moehrke",
        "timestamp": 1551803283
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> I guess you're talking about the actual work on the profiles.</p>",
        "id": 160017283,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551803333
    },
    {
        "content": "<p>in the case of MHD, it isn't just going from relaxed to strict. There are some strict rules on submission, because the server fills them.</p>",
        "id": 160017286,
        "sender_full_name": "John Moehrke",
        "timestamp": 1551803336
    },
    {
        "content": "<p>yes I am mostly focused on IG writting and reading. For that it is clunky. But it does mirror the original IHE concepts of a Transaction-&gt;Message-Encoding. So for IHE it is logical.</p>",
        "id": 160017419,
        "sender_full_name": "John Moehrke",
        "timestamp": 1551803419
    },
    {
        "content": "<p>(lets imagine that creating profiles in R4 would be just as easy as in STU3 - which will happen eventually) - in terms of lifecycle of the actual resource I was actually hoping to gather some knowhow on whether it would be a good idea or not with this design and the caveats between going from either a) relaxed to strict (where the strict would derive from the relaxed) - or b) going from relaxed to something not directly derived from the relaxed - ... if y'all follow</p>",
        "id": 160017685,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551803612
    },
    {
        "content": "<p>from top of my head I could imagine that it might not be the greatest idea to let the strict derive from relaxed as it will impose restrictions that might not be beneficial in all cases ...</p>",
        "id": 160017837,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551803723
    },
    {
        "content": "<p>The MHD structureDefinitions for STU3 are at <a href=\"https://github.com/IHE/fhir/tree/master/StructureDefinition\" target=\"_blank\" title=\"https://github.com/IHE/fhir/tree/master/StructureDefinition\">https://github.com/IHE/fhir/tree/master/StructureDefinition</a>      (I await new Forge before working on the R4 flavors)</p>",
        "id": 160017965,
        "sender_full_name": "John Moehrke",
        "timestamp": 1551803798
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> does your strict profiles derive from the relaxed?</p>",
        "id": 160018026,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551803838
    },
    {
        "content": "<p>and do you have any feeling with the cumbersome details of actually implementing it?</p>",
        "id": 160018050,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551803873
    },
    {
        "content": "<p>a benefit of this design is that it changes very little on the resource (only the metadata) and you get to distribute your business logic to the freaking clients</p>",
        "id": 160018253,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551804003
    },
    {
        "content": "<p>no, they are all written from FHIR Core STU3. The concept of including and further restricting was not well supported or obvious at the time.</p>",
        "id": 160018320,
        "sender_full_name": "John Moehrke",
        "timestamp": 1551804047
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> as in derived profiles?</p>",
        "id": 160018362,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551804083
    },
    {
        "content": "<p>I think that mCSD did this for the distance option on Location. (also in that same github)</p>",
        "id": 160018453,
        "sender_full_name": "John Moehrke",
        "timestamp": 1551804145
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193299\">@Luke Duncan</span> was more willing to live on the edge</p>",
        "id": 160018477,
        "sender_full_name": "John Moehrke",
        "timestamp": 1551804166
    },
    {
        "content": "<p>I see - the restriction was to require a position - which makes sense i guess</p>",
        "id": 160018602,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551804297
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192123\">@Bret H</span> I also guess parts of the operations are already exposed in <a href=\"http://hl7.org/fhir/resource-operations.html#meta\" target=\"_blank\" title=\"http://hl7.org/fhir/resource-operations.html#meta\">http://hl7.org/fhir/resource-operations.html#meta</a></p>",
        "id": 160018729,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551804398
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> I'm a bit surprised you haven't seen this sort of design since I thought you had seen all what FHIR could offer ;)</p>",
        "id": 160018872,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551804515
    },
    {
        "content": "<p>Keeping track of what everyone's doing with FHIR is next to impossible.  V3 was so much easier - much less uptake and no-one had a hope of getting up and running without help of a small number of people...</p>",
        "id": 160018940,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1551804591
    },
    {
        "content": "<p>(So I guess v3 does have some advantages :))</p>",
        "id": 160018993,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1551804605
    },
    {
        "content": "<p>(I'd rather have a harsh rash in my buthole than having to go back to working with V3)</p>",
        "id": 160019102,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551804719
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> spawn more McKenzies then</p>",
        "id": 160019176,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551804759
    },
    {
        "content": "<blockquote>\n<p>the validation runs on the wire-format which means that the backend can be whatever</p>\n</blockquote>\n<p>Mind that validation requires access to all referenced external resources (profiles, valuesets etc.). External references not included in the exchange (Bundle) must be resolved from somewhere, i.e. the back end.</p>",
        "id": 160021878,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1551806710
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> you're right - the idea is not totally flawless ;)</p>",
        "id": 160076100,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551860437
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> catching up: If i read correctly, this could be similar to what we will have in medication workflows:<br>\n1. there is a prescription (this is a medicationrequest)<br>\n2. bla<br>\n3. there is a medication administration plan - the list of all medications and respective hours of adminisrtation, to set the nurse's schedule. this is also a medicationRequest, but with different constraints</p>",
        "id": 160132047,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1551904504
    },
    {
        "content": "<p>I am trying to get some time to experiment a bit on \"workflow conformance\" - which is, defining the fhir constraints along a workflow.</p>",
        "id": 160132151,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1551904573
    },
    {
        "content": "<p>fwiw, in good old V2 there was a big variance of which message people used to express the same thing. For prescriptions it was random OMP or RDE. For dispenses it was RDS, RGV or RDE. Administrations being RAS or ORU... and in IHE that is the first problem to address.</p>",
        "id": 160132367,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1551904752
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> keep us posted on your findings if this is something that you dig deeper into</p>",
        "id": 160179548,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551948881
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span>  Very late to the party, but I just wanted to add one more class of use case we have seen which can also be modeled as transitions between profiles:  In some flows for setting up data sharing based on patient consent, it may be necessary to handle resources entities which, for reasons of data privacy, <em>cannot</em> contain certain information - information which, however, is allowed later on. For instance, for consents it might be desirable to not have both the Patient and the Practitioner referenced before the patient has actually signed the consent, because one otherwise exposes (without consent) the fact that the Patient is associated with a given doctor. Or there may be stages in an on-boarding process where a \"dummy\" Patient resource is needed because the actual personal information can only be added  later (once consent has been given). In these cases, one effectively imposes a (very) strict profile on resources early on in their life-cycle and then later reverts to more relaxed profiles. In other words, the direction of motion in the \"strictness-space\" is (at least initially) the opposite of what was discussed above.</p>",
        "id": 160239412,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1551994221
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194703\">@Morten Ernebjerg</span> - you can never be too late to a party. Your case is definitely interesting as well - and certainly proves that the state transitions at not limited to continuous strictness but can just as well (as in your case) be about loosening up. One very interesting aspect in this sort of design or usage is that the backend would hold the transition definitions (structure definitions) - but the client would/or could be the one that actually is in charge of stating what transitions it intends to through - and any transition can in principle lead to any other transition as they are not required to be derivatives of each other - which in turn probably means that state machine might not be spot on ... maybe <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 160242631,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551996620
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> Hm, I'm not quite sure I'm following here. I thought the idea was that the profiles/structure definitions would define the <em>states</em> and the allowed <em>transitions</em> would be specified somewhere else, e.g the CapabilityStatement (i.e. <em>\"if  a Patient resource conforms to profile X, it may only be changed such that it afterwards either conforms to profile Y or  to profile Z\"</em>). At that level, the state machine metaphor seem to fit quite well. Or did you mean that the profiles themselves would also imply transition rules, e.g. that you can only \"move downwards\" in a re-profiling hierarchy? Anyway, once we talk about resources, I think you're right about the metaphor being strained a bit, since a resource can simultaneously conform to multiple profiles and so would not map to a unique profile state. Unless, I suppose, the profile is always explicit in <code>meta.profile</code>, in which case the server could apply the state machine logic to the \"profile before\" --&gt; \"profile after\" transition of a requested update request. But I still imagine that for set-ups with multiple unrelated profiles that do not exclude each other (i.e. a resource can conform to more than one of them), it would be fiendishly hard (but possibly interesting <span aria-label=\"nerd\" class=\"emoji emoji-1f913\" role=\"img\" title=\"nerd\">:nerd:</span>  ) to ensure  that the transition rules are actually consistent.</p>",
        "id": 160303142,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1552062259
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194703\">@Morten Ernebjerg</span> </p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191427\">Jens Villadsen</span> Hm, I'm not quite sure I'm following here. I thought the idea was that the profiles/structure definitions would define the <em>states</em> and the allowed <em>transitions</em> would be specified somewhere else, e.g the CapabilityStatement (i.e. <em>\"if  a Patient resource conforms to profile X, it may only be changed such that it afterwards either conforms to profile Y or  to profile Z\"</em>)</p>\n</blockquote>\n<p>yep - What is important to me is the ability to express rules about valid states and for that structuredefs seems capable.</p>",
        "id": 160356036,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1552117184
    },
    {
        "content": "<p>This isn't so much a lifecycle question as a concurrent perspectives question, but it could be both.</p>\n<p>Our Pharmacy team is populating resources to support Pharmacy order processing, including some 1:2 cases where a single legacy Pharmacy file will spawn a MedicationOrder (e.g., date written) and a MedicationDispense (e.g., IV composition). I believe the Pharmacy order resource will contain, in addition to the reference to the clinician order file record, two identifiers: one from the Pharmacy file and one from the Order file.</p>\n<p>There will be other teams generating MedicationOrder from the clinician order system side. Now we have, potentially, two different resource profiles out there for a single order: one view from the ordering side, and one view from the processing side. For our use cases, that's not a problem: Pharmacy client systems will request one profile; ordering client systems the other. Synchronization rules live in the legacy system.</p>\n<p>That sure complicates the idea of a resource. Is that a problem?</p>",
        "id": 160659813,
        "sender_full_name": "Jay Lyle",
        "timestamp": 1552481650
    },
    {
        "content": "<p>Well - this is not necessarily a problem. One aspect of this is a state machine. Another aspect is to maintain business rules. I imagine that since you have multiple different systems they may all have their own view of what parts of the data that is required and what isn't -and that you can maintain in structuredefs. Having multiple structuredefs would then make you aware of how the systems differ and thereby also be aware of what staes that are needed in order to be compliant with each other.</p>",
        "id": 160661315,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1552482795
    }
]