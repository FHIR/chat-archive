[
    {
        "content": "<p>All smart on FHIR samples I've seen are about retrieving resources. Is there any to write a resource back to EHR? (Assuming permission to write is in the scopes.)</p>",
        "id": 153867578,
        "sender_full_name": "Shamil Nizamov",
        "timestamp": 1484583126
    },
    {
        "content": "<p>yes and no. For the yes, see the FHIR spec for writing. But as yet, this is not supported in most EHR implementations </p>",
        "id": 153867594,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1484586336
    },
    {
        "content": "<p>Cerner's FHIR server support writes on many resources. We have SMART apps today performing writes back to our EHR. You can see the details of what resources we support at <a href=\"http://fhir.cerner.com/dstu2/\" target=\"_blank\" title=\"http://fhir.cerner.com/dstu2/\">http://fhir.cerner.com/dstu2/</a> - this is a living document and we are always documenting new resources &amp; capabilites as we add them.</p>",
        "id": 153867595,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1484586488
    },
    {
        "content": "<p>You can play around in our self-service public Sandbox with your SMART app to do both reads &amp; writes at <a href=\"https://code.cerner.com/developer/smart-on-fhir\" target=\"_blank\" title=\"https://code.cerner.com/developer/smart-on-fhir\">https://code.cerner.com/developer/smart-on-fhir</a></p>",
        "id": 153867596,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1484586556
    },
    {
        "content": "<p>Would be nice to see support for writing the Diagnostic Orders. These tend to be less complex compared to med orders and a nice way to start exploring writing orders.</p>",
        "id": 153867597,
        "sender_full_name": "Alex DeJong",
        "timestamp": 1484586675
    },
    {
        "content": "<p>Hi Kevin, that's exactly what I'm trying to do, i.e., write MedicationStatement (just as an example) back to the Cerner test server. The problem is JavaScript tutorial on the SMART page lacks explaining write() API call.</p>",
        "id": 153867855,
        "sender_full_name": "Shamil Nizamov",
        "timestamp": 1484669033
    }
]