[
    {
        "content": "<p>We are working on Creating the FHIR Central services for New York State.. Where different RHIOs will be Queried to pull the data for a patient. Single query fan-out to multiple based on the patient existence in multiple RHIOs i.e. single query will have multiple response (bundle) from different sources. We would like to aggregate these responses in one single bundle as it is (nested bundle). It seems FHIR do not support nested bundle. What is recommendation for this use case.</p>",
        "id": 215455066,
        "sender_full_name": "Dheeraj Kumar Pal",
        "timestamp": 1604411456
    },
    {
        "content": "<p>Nested bundles is supported. IHE uses that in a few of their implementation guides... Can you point at the place in the FHIR specification where you see a restriction?</p>",
        "id": 215455682,
        "sender_full_name": "John Moehrke",
        "timestamp": 1604411757
    },
    {
        "content": "<p>Thank you John !! That's based on my communication with other implementers .. Would you please share IHE implementation link</p>",
        "id": 215462947,
        "sender_full_name": "Dheeraj Kumar Pal",
        "timestamp": 1604415063
    },
    {
        "content": "<p>If by query you mean <a href=\"http://build.fhir.org/search.html\">FHIR RESTful search</a> then I think a search result Bundle is not expected to contain other Bundles. If you define a specific operation, however, you can define the result to contain multiple Bundles.</p>",
        "id": 215465322,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1604416105
    },
    {
        "content": "<p>FHIR central service is HUB , which can take a query from one if the participant and queries back all other participant. Each participants returns a bundle against the query. Now FHIR central service needs to bundle all these search responses and create a super bundle that means bundle contains the multiple bundles as entries </p>\n<p>Bundle <br>\nentry<br>\n --0 <br>\n     -- bundle<br>\n -- 1 <br>\n   -- bundle </p>\n<p>Is this possible?</p>",
        "id": 215466469,
        "sender_full_name": "Dheeraj Kumar Pal",
        "timestamp": 1604416591
    },
    {
        "content": "<p>It depends on what you mean by \"query\"</p>",
        "id": 215466624,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1604416674
    },
    {
        "content": "<p>No, a search cannot return bundles, you have to combine the bundle received from the participants</p>",
        "id": 215466637,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1604416680
    },
    {
        "content": "<p>Yes, that is possible but does not happen automatically.  You'd create the bundle and the receiver of the information would need to customize a handler to debundle the responses.</p>",
        "id": 215466820,
        "sender_full_name": "David Pyke",
        "timestamp": 1604416765
    },
    {
        "content": "<p>That was my understanding ... but the challenge is that .. We are HUB and are not permitted to aggregate the different source data in one bundle .. We have to pass on all the bundles separately in another container. What we have done is created a super bundle where each entry of the super bundle is response from each source.  Just would like to confirm if this aligns with FHIR specification?</p>",
        "id": 215467377,
        "sender_full_name": "Dheeraj Kumar Pal",
        "timestamp": 1604417003
    },
    {
        "content": "<p>Yes, a Bundle of Bundles is legal syntax</p>",
        "id": 215467416,
        "sender_full_name": "David Pyke",
        "timestamp": 1604417024
    },
    {
        "content": "<p>Perfect !! Thank you</p>",
        "id": 215467526,
        "sender_full_name": "Dheeraj Kumar Pal",
        "timestamp": 1604417051
    },
    {
        "content": "<p>No, it is not</p>",
        "id": 215467535,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1604417054
    },
    {
        "content": "<p>There is no restriction on the type of resource allowed in a bundle.</p>",
        "id": 215467709,
        "sender_full_name": "David Pyke",
        "timestamp": 1604417125
    },
    {
        "content": "<p>If you receive a request /Condition?patient=xxxx to get all Conditions for a patient the response MUST be a Bundle of Condtion resources, not a bundle of bundlers</p>",
        "id": 215467727,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1604417139
    },
    {
        "content": "<p>Yes, that is true. However, in the situation he's describing, he's passing through the request to many endpoints and they each return a response.  THe receiver will need to know that they're receiving a bundle and debundle it prior to processing the query response.</p>",
        "id": 215467964,
        "sender_full_name": "David Pyke",
        "timestamp": 1604417246
    },
    {
        "content": "<p>It's a custom process, absolutly, but you can put bundles in bundles, as long as the receiver knows to expect and can process that</p>",
        "id": 215468113,
        "sender_full_name": "David Pyke",
        "timestamp": 1604417301
    },
    {
        "content": "<p>The receiver is issuing a FHIR search, the response should match what FHIR specifies- that is a bundle of the resources being searched, not a bundle of bundles</p>",
        "id": 215468140,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1604417314
    },
    {
        "content": "<p>Absolutely true, as I said, it will require that the receiver of the query response knows this will happen and will need to debundle each individual response prior to processing.</p>",
        "id": 215468250,
        "sender_full_name": "David Pyke",
        "timestamp": 1604417370
    },
    {
        "content": "<p>That would not be a FHIR server any more then</p>",
        "id": 215468390,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1604417417
    },
    {
        "content": "<p>Technically, the FHIR server would have a front end process, that handles the debundling.  THe FHIR server would be behind it</p>",
        "id": 215468547,
        "sender_full_name": "David Pyke",
        "timestamp": 1604417495
    },
    {
        "content": "<p>That's my understanding.. behind such use cases..</p>",
        "id": 215468819,
        "sender_full_name": "Dheeraj Kumar Pal",
        "timestamp": 1604417604
    },
    {
        "content": "<p>Yes, sometimes you need to bend rules to handle use cases.  Really, there should be a FHIR IG that defines a custom operation that outline all of this so that it all can be done in a standard way</p>",
        "id": 215469011,
        "sender_full_name": "David Pyke",
        "timestamp": 1604417683
    },
    {
        "content": "<p>I agree .. we are working on IG for New York state and would like to request FHIR team to advise the right way to discuss this use case... and conclude in standard way</p>",
        "id": 215469260,
        "sender_full_name": "Dheeraj Kumar Pal",
        "timestamp": 1604417792
    },
    {
        "content": "<p>Likely you'll need to create a custom operation that, instead of receiving the actual query, you receive a transaction bundle that you push to the RHIOs.  The originator of the query, knows that the response will be a bundle of bundles and will process it appropriately.</p>",
        "id": 215470085,
        "sender_full_name": "David Pyke",
        "timestamp": 1604418135
    },
    {
        "content": "<p>As I said, it's a very custom process/operation but it is legal to bundle Bundles.</p>",
        "id": 215470300,
        "sender_full_name": "David Pyke",
        "timestamp": 1604418219
    },
    {
        "content": "<p>You should also look at alternatives. For example, the HUB can provide a service to return the endpoints for a particular search. That way you can let the initiator of the query do the searches and combine the results as they need to.</p>",
        "id": 215470570,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1604418325
    },
    {
        "content": "<p>FHIR Central  service is state initiative and we would like to keep all the request and response flowing through central service. Also , would like to keep everyone's response separate in our final response to requestor. In case IHE there will more such scenarios .. where you are querying different FHIR servers but do not want to consolidate the response but would like to pass on as it.   Is there possibility to have one level of nesting for bundle.</p>",
        "id": 215471292,
        "sender_full_name": "Dheeraj Kumar Pal",
        "timestamp": 1604418604
    },
    {
        "content": "<p>as Dave indicates, you can do this with an $operation. You can define an operation that takes Parameters resource for the query, and returns a bundle of bundles. But, as Vassil points out, this would not be natural for a typical FHIR \"RESTful\" client, that is going to just do a RESTful GET with parameters.</p>",
        "id": 215474026,
        "sender_full_name": "John Moehrke",
        "timestamp": 1604419652
    },
    {
        "content": "<p>so, you have a choice.. a FHIR Operation, which can be defined. Or the hub does more of a federation of configuration endpoints, and let clients do what comes natural. The centeral authority could handle OAuth authorizations, and thus smooth the authorization pathway. This authorization pathway does give it ability to manage and record audit logs (to the granularity of the authorization request)</p>",
        "id": 215474401,
        "sender_full_name": "John Moehrke",
        "timestamp": 1604419792
    },
    {
        "content": "<p>As long as you realize that you are asking clients to do something that is not part of the core specification, you can go that route. You will probably need to consider why clients would find a need to do something custom.</p>",
        "id": 215475640,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1604420250
    },
    {
        "content": "<p>We are working as Trusted entities and not going through the OAUTH . We might go that route in future when we open up this as an API. Our Current implementation is within trusted entities (RHIOs) and we would like to keep it </p>\n<ol>\n<li>All queries going thorough HUB and HUB making call to other RHIOS </li>\n<li>HUB also, Aggregate the data and return one response against the query received from requestor.</li>\n</ol>\n<p>I am writing the scenario and  will post here in some time.. It's bit complicated use case and scenario and Policy adds more complication to it it. That's why we are seeking if it is use case that can be considered for change in bundle definition and allow at-least one level nesting for bundle?</p>",
        "id": 215475802,
        "sender_full_name": "Dheeraj Kumar Pal",
        "timestamp": 1604420308
    },
    {
        "content": "<p>It is legal to put bundles in bundles.  YOU'll just need to have a custom operation to deal with it</p>",
        "id": 215475908,
        "sender_full_name": "David Pyke",
        "timestamp": 1604420361
    },
    {
        "content": "<p>and... what you are doing is NOT \"http REST\", so not the natural core use of FHIR... not wrong, just not on the beaten path.</p>",
        "id": 215476110,
        "sender_full_name": "John Moehrke",
        "timestamp": 1604420443
    },
    {
        "content": "<p>It is  httsp rest service (FHIR central service)..</p>",
        "id": 215476313,
        "sender_full_name": "Dheeraj Kumar Pal",
        "timestamp": 1604420541
    },
    {
        "content": "<p>We need our participant to Query Central service to get the patient data across state i.e. from all other RHIOs. we are also using the State MPI to know where all patient exists.</p>",
        "id": 215476450,
        "sender_full_name": "Dheeraj Kumar Pal",
        "timestamp": 1604420621
    },
    {
        "content": "<p>I have the architecture diagram that will help you all to see the actual scenario .. but not sure . if I can send here in chat</p>",
        "id": 215476753,
        "sender_full_name": "Dheeraj Kumar Pal",
        "timestamp": 1604420753
    },
    {
        "content": "<p>I'm very familiar with the NYeC SHINNY use case.  We can discuss it off-line if you like</p>",
        "id": 215476873,
        "sender_full_name": "David Pyke",
        "timestamp": 1604420788
    },
    {
        "content": "<p>Sure David !! I know we worked together in past under SHINNY</p>",
        "id": 215477285,
        "sender_full_name": "Dheeraj Kumar Pal",
        "timestamp": 1604420974
    },
    {
        "content": "<p>Give me a call and we'll work through this</p>",
        "id": 215477583,
        "sender_full_name": "David Pyke",
        "timestamp": 1604421092
    },
    {
        "content": "<blockquote>\n<p>we would like to keep all the request and response flowing through central service. </p>\n</blockquote>\n<p>You can accomplish this with the central service acting as a proxy, allowing clients to interact in a \"normal FHIR REST API fashion \" with the different endpoints. The more you can make your implementation look/feel like a regular FHIR server (or a collection of regular FHIR servers) the better, in my opinion.</p>",
        "id": 215489386,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1604426331
    },
    {
        "content": "<p>Requesting Source does not know where all patient exists in community. FHIR central service (HUB) is integrated with State Wide MPI which is again managed centrally. Also, we would have requirement to create a central service to avoid multiple infrastructure build for the same thing.</p>",
        "id": 215491934,
        "sender_full_name": "Dheeraj Kumar Pal",
        "timestamp": 1604427561
    },
    {
        "content": "<p>Was walking through this and I have a question: is the hub going to rewrite all links/urls?</p>\n<ul>\n<li>within resources themselves</li>\n<li>within Bundles (e.g., paging on bundles from the sites)</li>\n</ul>\n<p>If you're already parsing and changing data, why not consolidate all of the resources into the same bundle too?  Then everything is standard.  If you're not planning on rewriting links, I think there will be problems.</p>",
        "id": 215495719,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1604429468
    },
    {
        "content": "<p>no problem for a hub to be a patient identity manager... we are all speaking about the queries for observations, those should go direct to the FHIR Servers that are custodians of that data. The Patient resource that is managed centerally would just have a bunch of <a href=\"http://Patient.link\">Patient.link</a> (see also) that itemize each of these FHIR Servers.</p>",
        "id": 215498023,
        "sender_full_name": "John Moehrke",
        "timestamp": 1604430656
    },
    {
        "content": "<p>If the hub insists on being the ONLY endpoint for REST queries, then it will need to do what Gino just mentioned and need to be fiddeling with ALL of the data returned to re-write all references to be hosted at the central hub.... If that is done, then there needs to be Provenance of that fiddeling... and many will question this level of messing with ALL data</p>",
        "id": 215498209,
        "sender_full_name": "John Moehrke",
        "timestamp": 1604430753
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span>  -- We are not re-writing anything.. We are putting each response as it is in a bundle (we call it as super bundle).. For e.g. <br>\nIf we make call to 5 different sources and receive  5 bundle... HUB response to requestor is going to be super bundle with 5 bundle (response) from sources. I am not sure what problem you are referring to? Why we have to re-write the links?  Our requirement is to keep the responses as it is.</p>",
        "id": 215504892,
        "sender_full_name": "Dheeraj Kumar Pal",
        "timestamp": 1604434578
    },
    {
        "content": "<p>At any place in a resource that you a have a <code>Reference</code>, there can potentially be a URL to get that referenced resource. The URL will likely point to the server of the responding system. The requester now has a link they can either not able to access, or they can access without going through the hub.</p>",
        "id": 215505475,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1604434912
    },
    {
        "content": "<p>THe FHIR requester would have to know to route follow-up queries through the HUB or the RHIOs would need to use a URL for the references that points to the HUB that the HUB would know to forward to the data source RHIO</p>",
        "id": 215505604,
        "sender_full_name": "David Pyke",
        "timestamp": 1604434984
    },
    {
        "content": "<p>You would need to re-write the Reference.... else it looks like the Resource is on your hub....    <br>\nFor example a Observation.subject = \"Patient/1234\" would be looked for in the bundle, and when not found in the bundle would be looked for at the URL root of the bundle... thus all relative references would appear to be at your HUB.</p>",
        "id": 215505933,
        "sender_full_name": "John Moehrke",
        "timestamp": 1604435161
    },
    {
        "content": "<p>and there is no way to assure uniqueness in that case</p>",
        "id": 215505986,
        "sender_full_name": "John Moehrke",
        "timestamp": 1604435172
    },
    {
        "content": "<p>even if you replaced all relative URI to full original source URL.. then you end up with the issue Dave is outlining</p>",
        "id": 215506058,
        "sender_full_name": "John Moehrke",
        "timestamp": 1604435222
    },
    {
        "content": "<p>which would give a consuming client an impression that they can retrieve (GET) that full original source URL... and if they can do that,  then you have a trust framework that would allow the client to do original http query direct to that endpoint.</p>",
        "id": 215506228,
        "sender_full_name": "John Moehrke",
        "timestamp": 1604435333
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>  In our implementation , Client needs to extract the all bundles from super bundle and parse the those bundles .. which are maintained as it is. As an requirement , we are not proposing to include super path in XPATH or FHIRPATH.. we are saying requestor in receipt of response needs to extract the bundles from super bundle and parse each one of them</p>",
        "id": 215506634,
        "sender_full_name": "Dheeraj Kumar Pal",
        "timestamp": 1604435569
    },
    {
        "content": "<p>okay, but in the  sub-bundle are resources (e.g. Observations) with reference values (e.g. Observation.patient) that is dereferencable to a fully specified URL.</p>",
        "id": 215506739,
        "sender_full_name": "John Moehrke",
        "timestamp": 1604435641
    },
    {
        "content": "<p>see The fantastic screen cast from <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>   <a href=\"https://youtu.be/ZK0AKB5PqGM\">https://youtu.be/ZK0AKB5PqGM</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"ZK0AKB5PqGM\" href=\"https://youtu.be/ZK0AKB5PqGM\"><img src=\"https://i.ytimg.com/vi/ZK0AKB5PqGM/default.jpg\"></a></div>",
        "id": 215506899,
        "sender_full_name": "John Moehrke",
        "timestamp": 1604435695
    },
    {
        "content": "<blockquote>\n<p>we are saying requestor in receipt of response needs to extract the bundles from super bundle and parse each one of them</p>\n</blockquote>\n<p>The question is <em>why</em> do you want to create these special processing rules and obligations? This approach is likely to cause  confusion and development mistakes for clients; what is the problem you're trying to solve here?</p>",
        "id": 215508786,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1604436869
    },
    {
        "content": "<p>The key thing to know is that no existing systems will be able to use your interface.  It won't work for SMART on FHIR apps, CDS Hooks services, etc.  It'll be a pure custom interface.  Because the data will be pure FHIR, it won't be as hard for someone to write an adapter to use your interface, but they'll still have to write an adapter.  As well, if you're not touching any of the 'self' links or fullUrls in the bundled search Bundles, then when the recipient of the results tries to hit those URLs - which will point back to the original services, not the hubs, you may have an issue.</p>\n<p>The reality is that a hub that can't aggregate the data and finesse differences in identity across the servers behind the scenes isn't necessarily going to provide a lot of value.  It may be worth expending some energy to try to get the \"thou shalt not touch the search bundles\" requirement revisited, because it's severely limiting the value of the interface you're trying to provide.</p>",
        "id": 215511697,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1604438530
    },
    {
        "content": "<p>Thank you all for your valuable input ... I am taking this input to share with team .... and will come back with next steps or questions</p>",
        "id": 215602817,
        "sender_full_name": "Dheeraj Kumar Pal",
        "timestamp": 1604506125
    }
]