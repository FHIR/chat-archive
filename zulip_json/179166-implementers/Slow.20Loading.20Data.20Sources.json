[
    {
        "content": "<p>Outside the context of primary clinical systems (i.e. EHRs), it is common to have slow loading sources of data. This is particularly true with HIEs where data sources like eHealth Exchange or public health database queries can often take several seconds to respond. If that data is being aggregated and presented as FHIR to a client system/application, then the Server has two options:<br>\n1) Wait for all data to return (or time out) and then serve resources to client<br>\nor <br>\n2) Return immediately available data at query time and continue to background load slow data sources</p>\n<p>Option 1 presents challenges in that it's violating the \"F\" in FHIR, and would potentially delay load times as we wait for the complete record to be available. </p>\n<p>Option 2 is much faster because we can immediately respond with the data that is already on-hand. However, there is the challenge of how to indicate to the client that slower data sources are still loading and the record is incomplete.</p>\n<p>There is nothing in the standard to accommodate something like Option 2 which means that if the application only fetches data one time, it will never get the new stuff and if it does refresh from the server periodically, new data may unexpectedly appear. </p>\n<p>Has anyone implemented an operation or some other kind of flag to either indicate that data is still loading or that new data is available on the server for a particular patient?</p>",
        "id": 153910986,
        "sender_full_name": "Matthew Spielman",
        "timestamp": 1506521392
    },
    {
        "content": "<p>#2 seems like a UI issue, which is outside FHIR's scope.  There are lots of UI cues you could use to indicate that data is still being retrieved - and hour glass, a slightly greyed-out screen, etc.  The real trick is letting the user know they can interact with the data before the load is \"complete\".  The other is a clinical safety issue which is \"is it safe to let the user interact with the data before they have the full picture?\" - and that you're going to have to seek guidance from your clinicians and your legal team...</p>",
        "id": 153911011,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1506524235
    },
    {
        "content": "<p>Well it's both a UI issue and a backend issue. The UI needs something to let it know that data is still loading. It's not a question of data being sent slowly to the client, it's a slow load to the server where it's stored in an ephemeral cache specific to the client \"session\".</p>",
        "id": 153911013,
        "sender_full_name": "Matthew Spielman",
        "timestamp": 1506524384
    },
    {
        "content": "<p>So the issue is that the data the client queries could be out-of-date a minute or so later?  In that case, the client would either need to repeatedly poll based on lastUpdated or would need to set up a subscription.</p>",
        "id": 153911015,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1506524587
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191921\">@Matthew Spielman</span> , as part of the ONC's request to add new capabilities to FHIR to support bulk datasets, we are researching and proposing an asynchronous option for some/most/all FHIR operations and interactions. You can read more about this here: <a href=\"http://www.healthintersections.com.au/?p=2689\" target=\"_blank\" title=\"http://www.healthintersections.com.au/?p=2689\">http://www.healthintersections.com.au/?p=2689</a></p>",
        "id": 153911035,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1506526969
    },
    {
        "content": "<p>That mechanism would allow for asynchronous processing, but wouldn't support continuous updating - except by polling.</p>",
        "id": 153911068,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1506546017
    },
    {
        "content": "<p>Or subscription. Client can register subscription for certain resources and server push notification when changes happens.<br>\nOh never mind. <span class=\"user-mention\" data-user-email=\"lloyd@lmckenzie.com\" data-user-id=\"14\">@Lloyd McKenzie</span> already mentioned that in one of his posts</p>",
        "id": 153911235,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1506605057
    }
]