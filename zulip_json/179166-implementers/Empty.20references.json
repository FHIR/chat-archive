[
    {
        "content": "<p><a href=\"http://hl7-fhir.github.io/references.html\" target=\"_blank\" title=\"http://hl7-fhir.github.io/references.html\">http://hl7-fhir.github.io/references.html</a> seems to suggest it's valid to have a Reference with neither <code>.display</code> nor <code>.reference</code> present. Should we specify a constraint to prevent this, or is there a use case (like, extensions-only references)?</p>",
        "id": 153832533,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1465844285
    },
    {
        "content": "<p>It would be great to have some clarity on empty strings and null values in Reference objects as well.  We've been running into some confusion with this in our schema definitions (we use the SimpleSchema from Meteor) when we initialize an object.  Say we want to generate a QuestionnaireResponse, that hasn't been filled out yet and are implementing form-building workflow.  We may know the author of a response is <code>{display: \"Jane Tech, reference: \"12345\"}</code> but the subject hasn't been selected yet.  So, does the subject reference stay empty?  Do we put empty strings in as placeholders?  Null values as placeholders?  etc.</p>\n<p>Or a more specific use case might be an admin looking at a tech's partially completed resource.  </p>",
        "id": 153832536,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1465844655
    },
    {
        "content": "<p>In those cases it's also worth saying that the reference itself could be omitted (vs. present and empty).</p>",
        "id": 153832539,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1465845217
    },
    {
        "content": "<p>I have a situation where I use an extension to specify a business identifier.  While \"display\" could be present, my client sees that element as noise and would rather not include it.</p>",
        "id": 153832560,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1465852393
    },
    {
        "content": "<p>firstly: in json, objects must always have properties, and string properties can never be just an empty string</p>",
        "id": 153832631,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465861019
    },
    {
        "content": "<p>this is documented in the json page. </p>",
        "id": 153832632,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465861024
    },
    {
        "content": "<p>there's a similar rule for XML</p>",
        "id": 153832633,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465861034
    },
    {
        "content": "<p>both display and reference are optional, but the element cannot be empty</p>",
        "id": 153832634,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465861055
    },
    {
        "content": "<p>and that missing quote wont help much</p>",
        "id": 153832650,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1465865726
    },
    {
        "content": "<p>FWIW, we have a use case that may result in the display populated, but not the reference.  This can happen when we track things more generically than the FHIR resource types (e.g. a subset of appointment participants where resource type isn't known).</p>",
        "id": 153832756,
        "sender_full_name": "Michelle (Moseman) Miller",
        "timestamp": 1465908366
    },
    {
        "content": "<p>Don't you mean the location of the FHIR resource isn't known (or not required)</p>",
        "id": 153832757,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1465909374
    },
    {
        "content": "<p>For some appointment participants, we don't know whether the resource is a location (e.g. room) or practitioner role (e.g. any nurse on duty).  For other participants (e.g. named practitioners, patient, device), we will know the appropriate FHIR resource to use. </p>",
        "id": 153832782,
        "sender_full_name": "Michelle (Moseman) Miller",
        "timestamp": 1465923775
    },
    {
        "content": "<p>Objects must alway having properties and no empty strings is consistent with how SimpleSchema works.  And given the problems we've had with Reference object fields being required, I'm leaning towards setting them as optional in our schema definitions.</p>",
        "id": 153832793,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1465939558
    },
    {
        "content": "<p>So, put another way:  reference fields should/could be optional, but cannot be empty.  </p>",
        "id": 153832794,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1465939832
    }
]