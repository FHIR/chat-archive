[
    {
        "content": "<p>We wanted to use URI's as identifiers- but it seems current FHIR identifiers don't allow for characters like colon often used in URI's... Is it possible to override this somehow?  <br>\nAlternatively, why don't we allow/encourage CURIE identifiers in FHIR (which enables URI's)? <a href=\"https://www.w3.org/TR/curie/\" target=\"_blank\" title=\"https://www.w3.org/TR/curie/\">https://www.w3.org/TR/curie/</a><br>\nCURIEs is W3C standard like PROV used for provenance resource...</p>",
        "id": 153904029,
        "sender_full_name": "Fan Lin",
        "timestamp": 1504102287
    },
    {
        "content": "<p>Do you mean the \"id\" element or the Identifier.value element?  The latter shouldn't have any restrictions.  The former can't have URIs because it is itself used as part of a URI.</p>",
        "id": 153904033,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1504106664
    },
    {
        "content": "<p>In the URI , if we put the colon into the  string , inusually it should be encode to UTF8</p>",
        "id": 153904037,
        "sender_full_name": "Fan Lin",
        "timestamp": 1504107839
    },
    {
        "content": "<p>I think what you means is the id is the part of URL ,it cannot support any special character that incompatible with browser and URL standard.<br>\nQuestion(2) is,that  can each ID  map to each identifier string ( the URN string), one-to-one correspondence? Could we assign this string to URL as the part of URL path string for replacing the id . If so ,we have to encode the special char .</p>",
        "id": 153904038,
        "sender_full_name": "Fan Lin",
        "timestamp": 1504109214
    },
    {
        "content": "<p>Question(3)- So, if our id is curie uri, what do you  recommend?</p>",
        "id": 153904039,
        "sender_full_name": "Fan Lin",
        "timestamp": 1504109742
    },
    {
        "content": "<p>Our intention with the rules for \"id\" is to ensure that they work easily as part of a URL where we need them to appear and that they will also work well as primary keys in most database systems.  That led to the constraints on the characters and lengths.  So CURIE ids aren't going to work terribly well.  You could certainly replace the non-permitted characters with permitted characters but I don't know you'll be able to go the other way - so you might have to define some escaping convention.  And you may run into issues with the length limits.</p>",
        "id": 153904100,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1504118722
    },
    {
        "content": "<p>You may need to maintain a separate id and do a lookup.</p>",
        "id": 153904101,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1504118785
    }
]