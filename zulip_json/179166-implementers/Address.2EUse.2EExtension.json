[
    {
        "content": "<p>Hello!</p>\n<p>I am trying to map a FHIR format PatiÃ«nt XML file to a set of java classes. When i tried to do the following ( patient.Address.getUse.getExtension ) it could not work because Use does not have extensions according to HAPI, while the option for an extension should be open seen the Use element is <del>not</del> primitive. (Edit: Use is a primitive datatype)</p>\n<p>This page (<a href=\"https://simplifier.net/NictizSTU3-Zib2017/nl-core-address\" target=\"_blank\" title=\"https://simplifier.net/NictizSTU3-Zib2017/nl-core-address\">https://simplifier.net/NictizSTU3-Zib2017/nl-core-address</a>) will further elaborate my point. I need the Use.Extension to define some parameters.</p>\n<p>I have tried using 3.5.0 and 3.6.0. but both do not contain an extension for the use element.</p>\n<p>With kind regards,</p>\n<p>Yuri Bonanno</p>",
        "id": 154025923,
        "sender_full_name": "Yuri Bonanno",
        "timestamp": 1545053671
    },
    {
        "content": "<p>i neither see an option in hapi to do this with the hapi client. Adress.use is a Enum (Java Datatype) and not a FHIR Datatype. We would need an encapsulation for these primitive datatypes to add an extension. But maybe i miss something important. <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> ?</p>",
        "id": 154025935,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1545058582
    },
    {
        "content": "<p>Address use is a FHIR primitive (<code>code</code>) with a <em>required</em> value set.  Are you trying to add additional meaning/data to one of the existing codes in the value set, or are you trying to use extension as a workaround to add another type (which you can't do via the value set because it's <code>required</code> not <code>extensible</code>)?</p>",
        "id": 154025948,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1545064143
    },
    {
        "content": "<p>Either way, extensions on primitives is always tricky business in FHIR.  I try to avoid it as much as possible.  Are there other ways to represent what you're going for?</p>",
        "id": 154025950,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1545064294
    },
    {
        "content": "<blockquote>\n<p>Are you trying to add additional meaning/data to one of the existing codes in the value set, or are you trying to use extension as a workaround to add another type (which you can't do via the value set because it's <code>required</code> not <code>extensible</code>)?</p>\n</blockquote>\n<p>None of the above,  I am trying to extract data from an XML file which is (presumably) in FHIR format.<br>\n<a href=\"https://simplifier.net/NictizSTU3-Zib2017/nl-core-address\" target=\"_blank\" title=\"https://simplifier.net/NictizSTU3-Zib2017/nl-core-address\">Here</a> it says Use would indeed have an extension. Values in this extension should map to a (dutch) HCIM. I am trying to automate the process of data extraction and therefore I was looking for a HAPI-function which would extract specifically Address.Use.Extension . It seems no such function exists and I thought posting this here was the best course of action.</p>",
        "id": 154025955,
        "sender_full_name": "Yuri Bonanno",
        "timestamp": 1545065310
    },
    {
        "content": "<p>Ah.  Got it.  Looking at the HAPI documentation, it looks to me like you want <code>Address.getUseElement()</code>.  The doc says it should contain the extensions.  See: <a href=\"http://hapifhir.io/apidocs-dstu3/org/hl7/fhir/dstu3/model/Address.html#getUseElement--\" target=\"_blank\" title=\"http://hapifhir.io/apidocs-dstu3/org/hl7/fhir/dstu3/model/Address.html#getUseElement--\">http://hapifhir.io/apidocs-dstu3/org/hl7/fhir/dstu3/model/Address.html#getUseElement--</a></p>",
        "id": 154025957,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1545066067
    },
    {
        "content": "<p>Wow, thanks a lot! I totally missed the element part.</p>",
        "id": 154025958,
        "sender_full_name": "Yuri Bonanno",
        "timestamp": 1545066557
    }
]