[
    {
        "content": "<p>In OperationOutcome, we have two elements that serve the same purpose.  <code>OperationOutcome.location</code> was the original and uses a limited XPath + some hokey stuff for http parameters.  <code>OperationOutcome.expression</code> is newer and, to the best of my knowledge, doesn't support http parameter identification.  When we first introduced 'expression', the intention was to eventually fade away 'location' so that we'd only have a single non-syntax-specific mechanism for identifying the location of the issue described by the OperationOutcome.  However, we haven't yanked it yet and we're approaching the point where we won't be able to yank it.  Also, because the functionality of both elements isn't identical, yanking location is problematic.</p>\n<p>We need to decide two things:<br>\n1. What should we do with OperationOutcome.location?<br>\na) Remove it prior to R4 publication<br>\nb) Mark it as deprecated and as STU allowing for removal in R5 or some other future release<br>\nc) Leave it as is (and set expectations as to when it should be populated in addition to/instead of expression<br>\n2. For those who are using the 'expression' element, how do we want to handle identifying http search parameters?  Options include doing the same thing we did for location or adding a separate element (allowing the expression to remain 'pure' FHIRPath)</p>\n<p>Opinions welcome - but we need to land this in the next 4 weeks...</p>",
        "id": 153975838,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531861002
    },
    {
        "content": "<p>I think we should move to a single location, a simple fhirpath, with a %http context to address the headers</p>",
        "id": 153975860,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531863034
    }
]