[
    {
        "content": "<p>Hello all, I am looking to understand how Provenance resources should be returned with the target resource. I would like to return related provenance when an instance history request is made (ie for immunizations), is that possible?  </p>\n<p>I understand with Search you can use _revinclude does that exists for history? <br>\nThanks!</p>",
        "id": 231489581,
        "sender_full_name": "Calum Turner",
        "timestamp": 1616513244
    },
    {
        "content": "<p>We haven't defined support for _revinclude for the history operation.  You could submit a change request suggesting that we add it - for this specific use-case.</p>",
        "id": 231490532,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1616513573
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  so is the expected behaviour for a rest API that an application calls the history for an instance, then makes another call to search for related Provenances?</p>",
        "id": 231492183,
        "sender_full_name": "Calum Turner",
        "timestamp": 1616514167
    },
    {
        "content": "<p>At the moment, yes.</p>",
        "id": 231498059,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1616516086
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 231498440,
        "sender_full_name": "Calum Turner",
        "timestamp": 1616516237
    },
    {
        "content": "<p>On a related note, we have observed that if your provenance target reference includes the instance version, most servers will not include the provenance  when searching the base resource and using _revinclude=Provenance:target.  In our specific use case we search by identifier and are only interested in the provenance for the current version of the base resource.  Our workaround is to have the provenance point to the base resource (without version info), use _revinclude=Provenance:target in our search, and then apply additional client logic to determine the provenance(s) relevant to the latest version of the resource.</p>",
        "id": 231508570,
        "sender_full_name": "Brian Wright",
        "timestamp": 1616519876
    },
    {
        "content": "<p>Brian, my understanding is that _revinclude will return all Provenance that point at the resource, regardless of if the <a href=\"http://Provenance.target\">Provenance.target</a> was version specific or not. Is that what you are describing?</p>",
        "id": 231512182,
        "sender_full_name": "John Moehrke",
        "timestamp": 1616521289
    },
    {
        "content": "<p>Although the US Core Provenance Target comments state that \"Target references are usually version specific\", and US Core states that retrieval of resources and associated provenance SHALL be supported using _revinclude=Provenance:target, in our testing, support for returning version specific provenance with _revinclude is not widely supported by servers.</p>",
        "id": 231555946,
        "sender_full_name": "Brian Wright",
        "timestamp": 1616539701
    },
    {
        "content": "<p>Oh that's interesting, I don't think we ever considered that in our implementation. That might be fixable.</p>",
        "id": 231644604,
        "sender_full_name": "Paul Church",
        "timestamp": 1616596616
    },
    {
        "content": "<p>Should Bundle.entry.search.mode for included Provenance resources due to \"_revinclude\" have the value \"match\"? The spec is not clear if \"_revinclude\" should be treated same as \"_include\" or not. Since the user is not really \"searching\" for Provenance in this case, is \"match\" is the appropriate choice?</p>",
        "id": 232023984,
        "sender_full_name": "Doug Pratt",
        "timestamp": 1616788958
    },
    {
        "content": "<p>No, it should be 'include'</p>",
        "id": 232024338,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1616789126
    },
    {
        "content": "<p>Thanks Michele. We weren't sure how to interpret .mode for revinclude.</p>",
        "id": 232025194,
        "sender_full_name": "Doug Pratt",
        "timestamp": 1616789499
    },
    {
        "content": "<p>If you think clarification is needed in the spec, feel free to submit a change request</p>",
        "id": 232028933,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1616791368
    }
]