[
    {
        "content": "<p>Moving this discussion from gForge to Zulip for broader discussion (<a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20531&amp;start=0\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20531&amp;start=0\">https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20531&amp;start=0</a>)</p>\n<p>As we are mapping V2-to-FHIR, we noticed ambiguity on when to use/update a single Provenance instance or create a new one.  When mapping ORC-10, Entered By, for certain OCR-1 Order Action Codes, a Provenance instance would be created.  When the ServiceRequest is then verified, e.g., 2 hours later, is one expected to update that first Provenance instance with another Provenance.agent?  Or create a new Provenance instance?  If the first, Provenance.location seems to be required within Provenance.agent.  If the latter, that is not clear.  Either way therefore clarification and/or update is required to understand the intended use of Provenance.</p>\n<p>Note that in the v2 world, not every Provenance event generates a v2 message. For example, a new order v2 message might have both been entered and verified by different folks at different times. Does this warrant two Provenance records or just a single one with multiple agents?</p>",
        "id": 161086920,
        "sender_full_name": "Craig Newman",
        "timestamp": 1552936194
    },
    {
        "content": "<p>some input from John Moehrke from the gForge ticket:<br>\nI don't think the core specification should define this. The two alternatives are reasonable, so they should be defined in implementation guides.<br>\nI think, but need to confirm, that the expectation would be that you never 'update' a Provenance record, you create a new Provenance record for the validation activity.</p>",
        "id": 161087004,
        "sender_full_name": "Craig Newman",
        "timestamp": 1552936229
    },
    {
        "content": "<p>And a response from Hans:<br>\nIf the expectation is that certain actions always yield a new Provenance instance, that the description be updated to reflect that, and that then the reason for Provenance.agent to be 1..* is that that reflects the person and/or organization and/or etc. that are involved at the same time to change the target resource, thus reasonably expected to be in the same location based on the \"primary\" agent (e.g., the person rather than perhaps a remotely controlled device that is also involved).  If that cannot be reasonable assumed, the location should be within agent.  It does not seem that these variances would be appropriate for an implementation guide, i.e., subject to varying approaches for essentially the same purpose.</p>",
        "id": 161087033,
        "sender_full_name": "Craig Newman",
        "timestamp": 1552936244
    },
    {
        "content": "<p>I am unclear on what is being asked as a question here, and what is background.   <br>\nThe reason for .agent to be 1..* is to support someone needing to record multiple participants in one act that resulted in one change. An example might be a adhoc team of people working together on a patient problem,  producing one update of a set of resources.  Another example would be a single individual, using a specified device, using a specified service, to carry out an act that results in a change to a set of resources.</p>",
        "id": 161088197,
        "sender_full_name": "John Moehrke",
        "timestamp": 1552937114
    },
    {
        "content": "<p>If the question is around the use of the .location, vs moving the .location into .agent.location.... I don't think much discussion has gone into the current location of the .location element.   It might be very helpful to have a use-case that can be used to drive the right placement of the location</p>",
        "id": 161088416,
        "sender_full_name": "John Moehrke",
        "timestamp": 1552937294
    },
    {
        "content": "<p>Each 'action' performed at a distinct time should generally drive a separate Provenance.  If authoring and verification happen simultaneously, one Provenance is fine.  If they're done at different times, then that should be two separate provenance events</p>",
        "id": 161090754,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1552939067
    },
    {
        "content": "<p>I think Lloyd's clarification is what we were after. Every action is a provenance record even if multiple actions contribute to a single output (in this case a v2 message that is only triggered after the second action, but with a data relating to the first action)</p>",
        "id": 161166501,
        "sender_full_name": "Craig Newman",
        "timestamp": 1553013300
    },
    {
        "content": "<p>Essentially all actions in some way contribute to an output.  Every change since the original creation 'contributes' to what gets shared \"now\".</p>",
        "id": 161169654,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1553015239
    }
]