[
    {
        "content": "<p>Task 8779 (<a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=8779&amp;start=50\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=8779&amp;start=50\">http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=8779&amp;start=50</a>) says that the result of a conditional delete that fails should be changed from a 404 to a 204. </p>",
        "id": 153817534,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458713580
    },
    {
        "content": "<p>it also says: \"Since this is a breaking change we will consult the community about this change.\"</p>",
        "id": 153817535,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458713592
    },
    {
        "content": "<p>well, here you go, being consulted</p>",
        "id": 153817536,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458713597
    },
    {
        "content": "<p>I have a problem with this - it's the only way to find out whether a delete happened or not. It was deliberately different so you could tell whether it succeeded or not</p>",
        "id": 153817540,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458713735
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> - comment from you...</p>",
        "id": 153817541,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458713744
    },
    {
        "content": "<p>I'd say it succeeded if all matching resources were deleted. The fact that there were 0 or 100 matches doesn't change the fact that it was a success.</p>\n<p>Is there a use case for wanting to do a conditional delete but needing to know that it didn't find any matches? The use case for the opposite is Simone's work around turning V2 messages with allergy lists into transactions, which seems valid to me</p>",
        "id": 153817597,
        "sender_full_name": "James Agnew",
        "timestamp": 1458724563
    },
    {
        "content": "<p>Well, I think that users see a comfort factor in knowing that something was deleted or not. They know whether they got the Target details correct</p>",
        "id": 153817616,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458728172
    },
    {
        "content": "<p>Let's recap... is the proposal this?<br>\n<strong>Conditional Delete</strong></p>\n<ul>\n<li><strong>No Matches</strong> Server returns <code>204 No Content</code></li>\n<li><strong>One Match</strong> Server deletes the match and returns <code>204 No Content</code></li>\n<li><strong>Multiple Matches</strong> Server returns <code>412 Precondition Failed</code></li>\n</ul>\n<p>In this case, you can't differentiate between no match and one match.</p>",
        "id": 153817638,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1458735043
    },
    {
        "content": "<p>yes that's the proposal. One of the goals of introducing conditional delete was to allow a client to know whether delete happened or not. transactionally. (as opposed to simple delete). THis proposal would mean you couldn't find at that way either </p>",
        "id": 153817640,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458735153
    },
    {
        "content": "<p>I'd agree that a <strong>no matches</strong> should not be an error, i.e. <code>&lt; 400</code>. From a client perspective I don't think I'd care how many things were deleted (even if zero) since I just want to be sure they are gone in case they are there. If I get a 404 I'm assuming something went wrong, I'd handle the error simply to discover that nothing needed to be deleted.<br>\nOtherwise, if I cared, I could first search for them and then individually delete them. Or an <code>OperationOutcome</code> could be returned?</p>",
        "id": 153817669,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1458746689
    },
    {
        "content": "<p>Pascal, that is not transactionally safe. If you simply want to delete, you can use the normal delete operation, that works as you say. Conditional delete was imagined as a way to find out whether you deleted or not</p>",
        "id": 153817711,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458760454
    },
    {
        "content": "<p>I suppose we could profile OperationOutcome, yes. but it seems ways more complex. </p>",
        "id": 153817712,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458760478
    },
    {
        "content": "<p>I'm not sure what the driver for this change is?</p>",
        "id": 153817713,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458760486
    },
    {
        "content": "<p>I guess I interpreted the target use case for the conditional delete wrong, then. The change request mentions “This means that you can't have a transaction which deletes a collection of AllergyIntolerances for a patient and replaces it with a new list”. I can see how in this case a <code>404</code> is suboptimal.<br>\nI'd have thought along the same lines, e.g. an app that for whatever reason needs to replace a month's worth of glucose readings with values from another source. I'd see how you can do a conditional delete and don't actually care whether zero or 1,345 readings were deleted, you just want to be sure all those are gone.<br>\nIf the idea is to only delete one certain resource I'd go the other route and search for it first, then delete if it exists. I'm probably missing a common use case for this envisioned conditional delete, one match and you need to know whether this one match was deleted.</p>",
        "id": 153817811,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1458766867
    },
    {
        "content": "<p>\"earch for it first, then delete if it exists\" - transactional problem.</p>",
        "id": 153817814,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458767405
    },
    {
        "content": "<p>I don't understand why 404 means you can't do that </p>",
        "id": 153817818,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458767531
    },
    {
        "content": "<p>If a client wants to purge and replace Items in one transaction as Pascal describes, the fact that there was nothing to purge shouldn't cause the transaction to fail. The client would still want the new items to be added. I think the \"purge and replace\"-scenario is going to be very common. That's also why we changed the sequence of the transaction processing to DELETE-POST-PUT-GET . </p>",
        "id": 153817921,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1458828414
    },
    {
        "content": "<p>Ok. So a 404 means transaction fail... I'll think about that </p>",
        "id": 153817940,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458844195
    },
    {
        "content": "<p>need a 209 deleted...</p>",
        "id": 153817953,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458849145
    },
    {
        "content": "<p>Too bad there is no <code>2xx No Change</code> nor the <code>209 Deleted</code> indeed. Could change to a <code>200 OK</code> and an <code>OperationOutcome</code> if one absolutely must know what was deleted, which I think is mostly needed when only 1 resource should be deleted, so one could just as well do a get/search first, then a delete.<br>\nI still think _conditional delete_ is for “delete anything that matches and let me continue”, so <code>204 No Content</code> sounds good to me. If you need to know what was deleted, do a search and the standard _delete_. But my view is heavily biased on client side flows.</p>",
        "id": 153818064,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1458909667
    },
    {
        "content": "<p>Search and delete has transactional problems</p>",
        "id": 153818105,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458926107
    },
    {
        "content": "<p>Right, best case you'll get optimisitic concurrency failures, worst case, deadlocks.</p>",
        "id": 153818106,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458926153
    },
    {
        "content": "<p>Best case it'll work! You're a pessimist?..</p>",
        "id": 153818107,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458926196
    },
    {
        "content": "<p>Back online after a few days of spotty wifi.. Could we solve this with a code in the OperationOutcome returned by the server? Like, the server could return an OO with a code of \"MSG_NO_MATCH\" if it didn't find anything to delete.</p>",
        "id": 153818158,
        "sender_full_name": "James Agnew",
        "timestamp": 1458941278
    },
    {
        "content": "<p>We could. For me, it raises the question of defining content specific error magic values. There's been several other use cases for this, and I'm starting to see them in implementation guides. I don't know whether we should get I to that or not</p>",
        "id": 153818168,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458943430
    },
    {
        "content": "<p>Well, I mean it's kind of splitting hairs but to me this isn't an error condition.. It's just a clarification about the success.</p>\n<p>I would see \"just delete anything that matches this search and I don't care how many that is\" as the most likely way this would be used...</p>",
        "id": 153818170,
        "sender_full_name": "James Agnew",
        "timestamp": 1458943643
    },
    {
        "content": "<p>Agree. Error wasn't the right word. Special magic values for OperationOutcome.issue.details</p>",
        "id": 153818177,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458952450
    }
]