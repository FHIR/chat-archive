[
    {
        "content": "<p>regarding <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17258\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17258\">GF#17258</a>,  I believe that we've agreed to remove the $meta-add/$meta-delete operations applicabilityto history entries from the spec. Is this other people's memory (<span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> )?</p>",
        "id": 153969244,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528931175
    },
    {
        "content": "<p>It's in my memory because I was told it was happening, but not because I was part of the decision.  If we're going to do that, what our expectations about security tags with respect to historical versions?  Tags of the current version apply to all versions?  (And be aware that access to the current version will (for most tags) also grant access to historical versions?)</p>",
        "id": 153969249,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528931906
    },
    {
        "content": "<p>Yes, this has come up a few times now.  I am all for removing it from the spec, it adds complexity and I have not heard strong usecases.  Since the history is mostly there for auditing purposes (not for tracking actual medical developments in the patient), changing history does not sit well with me.</p>",
        "id": 153972779,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1530523464
    },
    {
        "content": "<p>Access control to the historical versions is the only reason here for me.</p>",
        "id": 153973297,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1530686807
    },
    {
        "content": "<p>So the base questions are: Does anyone need the access control to a historical version to be different from that for the current version?; and are we comfortable that when you process a GET for a historical version you always have to grab the access control information from the current version to decide whether to expose that historical version?</p>",
        "id": 153973324,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1530709711
    },
    {
        "content": "<p>The only use-case that comes up is where someone HAD access to the historic, but is now forbidden access to current. They should be denied on request for current, but might be allowed to access the old version that the had access to at one time. This is an edge case, that is also potentially dangerous.  Thus I am not going to advocate that it be supported.<br>\nThe reverse might be considered, where only current version is accessible,  but not historic (because they are not valid).... this likely is done for all resources, not a specific instance.<br>\nThat said, the Consent resource can point at a version specific instance...</p>",
        "id": 153973720,
        "sender_full_name": "John Moehrke",
        "timestamp": 1530800020
    },
    {
        "content": "<p>actually, the use case is where you change your mind about access to specific history entries in either direction (permit | deny)</p>",
        "id": 153973858,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1530817804
    }
]