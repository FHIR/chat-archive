[
    {
        "content": "<p>Hi all,</p>\n<p>I'm looking for some guidance on constructing a RESTFul URL to search for <code>Observations</code> based on a number of criteria, namely a reference to the <code>Encounter</code> resource (<code>period.start</code> and <code>period.end</code>) through the <code>context</code> attribute.</p>\n<p>For example, I believe the following is considered valid as a search based on <code>Encounter.status</code> :</p>\n<p><code>Observation?context:Encounter.status=finished</code></p>\n<p>However, I am having trouble figuring out the correct way to structure a query wherein I want to filter the results based on the context (Encounter) as well as the date period of said Encounter:</p>\n<p><code>Observation?context:Encounter.period.start=2006-06-27T00:00:00-06:00</code></p>\n<p>I've tried the above on the <a href=\"https://sandbox.hspconsortium.org\" target=\"_blank\" title=\"https://sandbox.hspconsortium.org\">https://sandbox.hspconsortium.org</a> sandbox and it always comes back as an invalid parameter chain. I'm sure it's because I've structured it incorrectly. Any help is greatly appreciated!</p>",
        "id": 153955008,
        "sender_full_name": "Matthew Koch",
        "timestamp": 1525099095
    },
    {
        "content": "<p>You can't search by paths, you can only use defined (or custom) search parameters.  There are no search parameters for start or end on Encounter, just a search for 'date' which will match on any date that falls between start and end.  So what you want is something like this: Observation?context:Encounter.status=finished&amp;context:Encounter.date=le2006-06-30&amp;context:Encounter.date=ge2006-06-20</p>\n<p>Note that the only reason this works is because Observation is only allowed a maximum of one context because chaining filters are independent of each other.</p>",
        "id": 153955025,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1525101796
    },
    {
        "content": "<blockquote>\n<p>You can't search by paths, you can only use defined (or custom) search parameters.  There are no search parameters for start or end on Encounter, just a search for 'date' which will match on any date that falls between start and end.  So what you want is something like this: Observation?context:Encounter.status=finished&amp;context:Encounter.date=le2006-06-30&amp;context:Encounter.date=ge2006-06-20</p>\n<p>Note that the only reason this works is because Observation is only allowed a maximum of one context because chaining filters are independent of each other.</p>\n</blockquote>\n<p>Interesting, so the date parameter on Encounter translates to the period start/end dates?</p>",
        "id": 153955046,
        "sender_full_name": "Matthew Koch",
        "timestamp": 1525108785
    },
    {
        "content": "<p>When you search on a 'date' parameter that's mapped to a Period, it matches on any resource whose period overlaps with the period represented by the search value.  (Because technically all date and dateTime values are themselves intervals, whether it's a whole day down to just being a whole second.</p>",
        "id": 153955059,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1525112863
    },
    {
        "content": "<p>I see. The only part that confuses me is that period is not mentioned anywhere in your example GET call - it appears that it implicitly refers to it instead of explicitly.</p>",
        "id": 153955080,
        "sender_full_name": "Matthew Koch",
        "timestamp": 1525119448
    },
    {
        "content": "<p>The Encounter 'date' search parameter refers to Encounter.period</p>",
        "id": 153955083,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1525120228
    },
    {
        "content": "<p>(so that's your linkage)</p>",
        "id": 153955084,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1525120240
    }
]