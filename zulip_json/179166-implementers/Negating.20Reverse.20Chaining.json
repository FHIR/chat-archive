[
    {
        "content": "<p>I have a problem trying to make the correct query using Reverse Chaining, for example if I have this query: <code>/DiagnosticReport?_has:Task:based-on:status:not=requested</code> it returns the DiagnosticReport that have at least one Task with status not requested, if instead of that I want the DiagnoticReport where there is not Task based-on it with status requested how could I make this query?</p>",
        "id": 167789041,
        "sender_full_name": "Yosbel Esper칩n Gonz치lez",
        "timestamp": 1560195238
    },
    {
        "content": "<p>I don't think there's a mechanism to say \"_has-not\".  You could submit a change request proposing something like that - though we're really trying to draw a line around increasing the complexity of the base RESTful search capabilities.  Have you explored doing this with GraphQL?</p>",
        "id": 167790298,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560196147
    },
    {
        "content": "<blockquote>\n<p>I don't think there's a mechanism to say \"_has-not\".  You could submit a change request proposing something like that - though we're really trying to draw a line around increasing the complexity of the base RESTful search capabilities.  Have you explored doing this with GraphQL?</p>\n</blockquote>\n<p>Sorry, I can see this as a duplicate of <a href=\"#narrow/stream/179166-implementers/topic/REST.20API/near/166814890\" title=\"#narrow/stream/179166-implementers/topic/REST.20API/near/166814890\">https://chat.fhir.org/#narrow/stream/179166-implementers/topic/REST.20API/near/166814890</a> . I haven't tried with GraphQL since we are not using it.</p>",
        "id": 167790793,
        "sender_full_name": "Yosbel Esper칩n Gonz치lez",
        "timestamp": 1560196533
    }
]