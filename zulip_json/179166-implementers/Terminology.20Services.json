[
    {
        "content": "<p>Grahame does your server support the Concept Lookup operation? I am getting an error: \"Lookup does not take an identified value set\"</p>",
        "id": 153814481,
        "sender_full_name": "Jon Zammit",
        "timestamp": 1457464046
    },
    {
        "content": "<p>yes it does. it sounds like you are invoking it wrongly</p>",
        "id": 153814483,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457464283
    },
    {
        "content": "<p>Sorry I was trying to follow the example in the spec, i.e.) GET [base]/ValueSet/$lookup?system=http://loinc.org&amp;code=1963-8<br>\nBut I am using a concept from your Clinical Finding value set.</p>",
        "id": 153814486,
        "sender_full_name": "Jon Zammit",
        "timestamp": 1457464411
    },
    {
        "content": "<p><a href=\"http://fhir2.healthintersections.com.au/open/ValueSet/$lookup?system=http://loinc.org&amp;code=1963-8\" target=\"_blank\" title=\"http://fhir2.healthintersections.com.au/open/ValueSet/$lookup?system=http://loinc.org&amp;code=1963-8\">http://fhir2.healthintersections.com.au/open/ValueSet/$lookup?system=http://loinc.org&amp;code=1963-8</a> works, yes?</p>",
        "id": 153814487,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457464749
    },
    {
        "content": "<p>Yes it does and I have corrected my syntax. Turns out, I misunderstood the parameters. Thanks for your help!</p>",
        "id": 153814489,
        "sender_full_name": "Jon Zammit",
        "timestamp": 1457466215
    },
    {
        "content": "<p>great</p>",
        "id": 153814490,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457466431
    },
    {
        "content": "<p>so the current build has now fully separated code system and value set. There's still some publishing issues. but I need to take a break and work on other things</p>",
        "id": 153814514,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457476681
    },
    {
        "content": "<p>comments are welcome</p>",
        "id": 153814515,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457476696
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> on the topic of Subsumption testing... I see the example in which you check if one concept is subsumed by another. Is there a query to retrieve all concepts subsumed by another? i.e. the \"is a\" relationship? I believe there is, just trying to nail down the syntax.</p>",
        "id": 153814773,
        "sender_full_name": "Jon Zammit",
        "timestamp": 1457624697
    },
    {
        "content": "<p>instead of validating the value set, expand it  using the same basic principle</p>",
        "id": 153814876,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457641224
    },
    {
        "content": "<p>Are you saying that all supertype concepts in SNOMED CT are represented as value sets?<br>\nI was under the impression you created clinical-findings as an example.</p>",
        "id": 153814877,
        "sender_full_name": "Jon Zammit",
        "timestamp": 1457641573
    },
    {
        "content": "<p>there's a implicit value set for each concept that includes all it's children. So you can expand that implicit value set </p>",
        "id": 153814878,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457641637
    },
    {
        "content": "<p>but if you want to the concept itself, it's not a value set</p>",
        "id": 153814879,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457641651
    },
    {
        "content": "<p>I want to list all children with a filter applied. Will try again based on your latest information...</p>",
        "id": 153814880,
        "sender_full_name": "Jon Zammit",
        "timestamp": 1457642084
    },
    {
        "content": "<p>y expand e.g.</p>",
        "id": 153814881,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457642116
    },
    {
        "content": "<p>GET [base]/ValueSet?identifier=[sct implicit url]&amp;filter=[your text]</p>",
        "id": 153814882,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457642183
    },
    {
        "content": "<p>shouldn't that be  GET [base]/ValueSet/$expand?identifier=[sct implicit url]&amp;filter=[your text]  ?</p>",
        "id": 153814883,
        "sender_full_name": "David Hay",
        "timestamp": 1457642256
    },
    {
        "content": "<p>In looking at <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> 's VSTool, I thought he was doing something with \"is a\" in the query, against your server, Grahame.</p>",
        "id": 153814886,
        "sender_full_name": "Jon Zammit",
        "timestamp": 1457642443
    },
    {
        "content": "<p>will have to wait for Michael to comment</p>",
        "id": 153814887,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457642467
    },
    {
        "content": "<p>yes, that's right. The second example valueset uses an isa/{sctid} style implicit ValueSet - you can substitute in any SCTID and the $expand will use the ISA relationships to compute the members of the ValueSet</p>",
        "id": 153814916,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1457645978
    },
    {
        "content": "<p>e.g., [base]/ValueSet/$expand?_format=json&amp;count=10&amp;filter=aaa&amp;identifier=http:%2F%2Fsnomed.info%2Fsct%3Ffhir_vs%3Disa%2F138875005</p>",
        "id": 153814918,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1457646041
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> I've managed to implement subsumption queries, but would also like to be able to query for immediate parent and child concepts. I'm assuming that this requires an expression query - but cannot see how this can be done in the SNOMED CT Expression Constraint Language itself.</p>",
        "id": 153814935,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1457648820
    },
    {
        "content": "<p>what is it you want? </p>",
        "id": 153814937,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457649403
    },
    {
        "content": "<p><a href=\"http://fhir2.healthintersections.com.au/open/ValueSet/$lookup?system=http://snomed.info/sct&amp;code=609618002\" target=\"_blank\" title=\"http://fhir2.healthintersections.com.au/open/ValueSet/$lookup?system=http://snomed.info/sct&amp;code=609618002\">http://fhir2.healthintersections.com.au/open/ValueSet/$lookup?system=http://snomed.info/sct&amp;code=609618002</a></p>",
        "id": 153814938,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457649499
    },
    {
        "content": "<p>The immediate parent concepts of a passed Concept ID and the immediate child concepts of a passed Concept ID. Subsumptions give me all the child concepts down to the bottom of the tree.</p>",
        "id": 153814940,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1457649576
    },
    {
        "content": "<p>well, check that link</p>",
        "id": 153814942,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457649593
    },
    {
        "content": "<p>What in that query is telling the server to lookup anything other than that particular code?</p>",
        "id": 153814947,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1457649768
    },
    {
        "content": "<p>I don't want to sound like a broken recod here but I'm going to be a stickler that we must keep the exchange from a service that when you obtain a subset of the value set exapnsion s defined by the value set definition, that thing you get <em>is not representitive of the value set</em>, it is a subset of that expansion. So <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> , you are computing the members of <em>a value set expansion subset</em>, not the members of the value set.</p>",
        "id": 153814948,
        "sender_full_name": "Robert McClure",
        "timestamp": 1457649826
    },
    {
        "content": "<p>I don't follow the distinction you are making here. </p>",
        "id": 153814949,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457649870
    },
    {
        "content": "<p>Peter, it returns information about the code, including the parents and children</p>",
        "id": 153814950,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457649887
    },
    {
        "content": "<p>Grahame, the examples in the spec don't have the parent and child concepts, and  what if I only want information about that particular code - .e.g. for validation purposes, or to obtain the description?</p>",
        "id": 153814952,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1457649937
    },
    {
        "content": "<p>? you use that operation</p>",
        "id": 153814954,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457649977
    },
    {
        "content": "<p>Note that if you create an \"implicit\" value set - a name I'm not happy with - that is simply a query for concepts that happens to have a URI you can stick to it, I see that not as a value set but simply a query result.</p>",
        "id": 153814955,
        "sender_full_name": "Robert McClure",
        "timestamp": 1457650092
    },
    {
        "content": "<p>Grahame - ok, validate-code for validate operations!  But just to lookup the description for a particular code - would I need to pass child and parent concepts - isn't something more explicit required here?</p>",
        "id": 153814958,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1457650203
    },
    {
        "content": "<p>you have a better name? </p>",
        "id": 153814959,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457650243
    },
    {
        "content": "<p>you get back the value set expansion, not the value set definition. that's because you asked for an expansion. </p>",
        "id": 153814960,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457650273
    },
    {
        "content": "<p>we haven't defined an operation to get the definition, since the definition can be built from url </p>",
        "id": 153814961,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457650290
    },
    {
        "content": "<p>Peter - don't know what you mean - I look up a code, and get it's display and parents and children back</p>",
        "id": 153814962,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457650328
    },
    {
        "content": "<p>Grahame - the specification doesn't tell me that I'm getting that back....http://hl7-fhir.github.io/terminology-service.html.</p>",
        "id": 153814963,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1457650401
    },
    {
        "content": "<p>no. but I added it to my server by request. You could make a task to add that to the description of the operation</p>",
        "id": 153814966,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457650784
    },
    {
        "content": "<p>which would be timely since I'm about to edit that operation - move it to code system from value set</p>",
        "id": 153814968,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457650807
    },
    {
        "content": "<p>I'm about to update my stu3 server to split value set and code system</p>",
        "id": 153814975,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457651001
    },
    {
        "content": "<p>OK - but, IMHO, it would still be preferable to have a filter that enables a client to request just the passed code and not the parent and child concepts...and, of course, not all code systems have hierarchies.</p>",
        "id": 153814979,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1457651060
    },
    {
        "content": "<p>is it a problem to get back extra information? </p>",
        "id": 153814982,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457651104
    },
    {
        "content": "<p>Grahame - If the client only wants a description for the passed code, it's another overhead (in terms of DB querying), and why pass back more than is strictly necessary - particularly if that concept has a lot of children?</p>",
        "id": 153814993,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1457651679
    },
    {
        "content": "<p>...but I am liking the fact that I won't have to engage with SNOMED CT Expression Language to get this information, when it's requested!</p>",
        "id": 153814996,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1457651753
    },
    {
        "content": "<p>well, yes, there could be a lot of children, I guess. Make that part of the task</p>",
        "id": 153815013,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457653663
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span> in fact the SNOMED CT Expression Constraint Language does not support what you want (it was actually explicitly excluded from the scope of that language despite my protests)</p>",
        "id": 153815030,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1457656831
    },
    {
        "content": "<p>The $lookup option (non-standard behaviour) is all you get for this</p>",
        "id": 153815031,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1457656868
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> yes, especially with parts of teh AMT there might be &gt;10000 immediate children</p>",
        "id": 153815032,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1457656901
    },
    {
        "content": "<p>sounds like we should standardise this. I'm going to be redefining look up in terms of the code system resource this weekend</p>",
        "id": 153815033,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457656929
    },
    {
        "content": "<p>so when I do this - I'll allow a client to indicate what properties it wants back for a code. If it doesn't say, the server can choose what to return</p>",
        "id": 153815034,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457656989
    },
    {
        "content": "<p>sounds reasonable? </p>",
        "id": 153815035,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457656992
    },
    {
        "content": "<p>fine-grained control over populated properties an a FHIR response is a good way to manage this and also could go some way to addressing other issues that people have with the size of the payloads</p>",
        "id": 153815036,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1457657107
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> That sounds good to me and I've included that point in the gForge Task. Will you also be moving the $validate-code operation to the CodeSystem Resource?  <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span>  pity that IHTSDO didn't agree with you!</p>",
        "id": 153815040,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1457657644
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span> It was pushed to being in-scope for the greater \"SNOMED CT Query Language\".  The cost of that is the delay in delivering the QL - there are several other pieces of work to be delivered before the QL stuff will arrive.</p>",
        "id": 153815057,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1457659100
    },
    {
        "content": "<p>If the IHTSDO had more visibility on the desire for such a feature in the ECL, then that would be a good thing, so I encourage you to raise it directly with them</p>",
        "id": 153815058,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1457659194
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> I might get the chance to mention it at the SNOMED Expo in Wellington later this year. I'm also interested in anything out there that might parse ECL into SQL and/or the upcoming SCT QL. I almost feel like cheating and have clients pass SQL, rather than ECL, in FHIR...almost!</p>",
        "id": 153815059,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1457659932
    },
    {
        "content": "<p>I wouldn't know what to do with SQL and I'm not writing a sql parser and I don't have SCT in tables </p>",
        "id": 153815060,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457660221
    },
    {
        "content": "<p>I'm not suggesting that you write one <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> and appreciate that there are alternative ways of persisting SNOMED-CT data. It's really implementation-specific, but might be useful for those who need to query relational DB sources...and I did say 'almost'. :) Incidentally, what are you doing with ECL?</p>",
        "id": 153815062,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1457661167
    },
    {
        "content": "<p>nothing with ECL at the moment </p>",
        "id": 153815063,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457661382
    },
    {
        "content": "<p>Question for terminology service implementers:</p>",
        "id": 153815064,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457662961
    },
    {
        "content": "<p>at the moment we say that you indicate what code systems you support by looking for an extension in the conformance statement. </p>",
        "id": 153815065,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457662988
    },
    {
        "content": "<p>now that we've defined the code system resource, we could change that. Here's the options I can think of:<br>\n- leave it as is - the extension declares the system uris that you support<br>\n- change the extension so it's a reference to a code system resource instead<br>\n- chance the extension so it can be one or the other<br>\n- drop the extension, and list code system resources directly as a property of the conformance statement<br>\n- drop it from the conformance stateement altogether, and assume that GET [base]/CodeSystem returns a list of all the code systems the server supports</p>",
        "id": 153815066,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457663127
    },
    {
        "content": "<p>There is a doc that describes the semantics of ECL in terms of the underlying RF2 tables (up to be not including concrete domain data).  I can't recall if that made it into the spec or not.</p>",
        "id": 153815068,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1457664106
    },
    {
        "content": "<p>Grahame: I'm assuming you are referring to the \"<a href=\"https://hl7-fhir.github.io/extension-conformance-supported-system.html\" target=\"_blank\" title=\"https://hl7-fhir.github.io/extension-conformance-supported-system.html\">https://hl7-fhir.github.io/extension-conformance-supported-system.html</a>\" extension. If so, can you please clarify what is meant by the word \"supported\" in the statement \"A code system that is supported by the system that is not defined in a value set resource.\"</p>",
        "id": 153815071,
        "sender_full_name": "Reuben Daniels",
        "timestamp": 1457664908
    },
    {
        "content": "<p>one that you can refer to in value sets and then do an expand on, or one that you do a $lookup on </p>",
        "id": 153815072,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457667039
    },
    {
        "content": "<p><a href=\"http://fhir3.healthintersections.com.au/\" target=\"_blank\" title=\"http://fhir3.healthintersections.com.au/\">http://fhir3.healthintersections.com.au/</a> is now up and running a terminology service with code system separated out from value set</p>",
        "id": 153815073,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457667081
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> If ValueSet $expansions can still be filtered by CodeSystem, then I'd be inclined to 'leave it as is'...because that extension could refer to either resource. I'd definitely leave it as an extension as 80% of FHIR servers probably won't directly support terminology services. It would also be good to include the version in the URI where, like SNOMED CT, the code system supports that syntax. I like the fact that it's in the Conformance Statement - a one-stop shop for implementation details.</p>",
        "id": 153815076,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1457668534
    },
    {
        "content": "<p>the extension can only refer to code systems</p>",
        "id": 153815077,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457668877
    },
    {
        "content": "<p>Grahame: thank you for clarifying. In that case, I would support the idea of making this field a part of the core Conformance resource (i.e. not an extension) . Further, it would be nice to support assertions that you support multiple versions of a particular system (unless the expectation that you simply use multiple  versioned URIs in which the version of the system is part of the URI). I don't necessarily see that the FHIR CodeSystem is necessary for assertions like this, but happy to be convinced :)</p>",
        "id": 153815078,
        "sender_full_name": "Reuben Daniels",
        "timestamp": 1457668964
    },
    {
        "content": "<p>you don't think that listing all the code system resources should achieve the same thing? </p>",
        "id": 153815079,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457669036
    },
    {
        "content": "<p>I think it would. I just need to understand how it would work in practice. In particular, does this impose the need to have FHIR CodeSystem resource instances available (or created) for all the code systems you would like to assert support for. And if so, is that practical for all users of a deployed FHIR terminology server. That said, I would have no issues in allowing the new field to support both kinds of assertions of supported code systems: i.e.  URI | Reference .</p>",
        "id": 153815080,
        "sender_full_name": "Reuben Daniels",
        "timestamp": 1457669573
    },
    {
        "content": "<p>well, it constrains both ways - you have to declare the code systems, potentially in depth, and you can't carry code system definitions for things you don't implement. it would make it active. but I think, for a terminology server, why would you have a code system but not implement it? </p>",
        "id": 153815081,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457669765
    },
    {
        "content": "<p>I'd have to filter out and not upload the cpt-4 code system resource, but I know what I do support and can do that ok</p>",
        "id": 153815082,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457669795
    },
    {
        "content": "<p>well, I guess I'm thinking of terminologies like LOINC and SNOMED CT. You may support (for value set expansion) SCT or LOINC because you've stored/indexed it. Does this now mean you need to create separate CodeSystem resource purely to assert that it is available instead of simply asserting the URI for the terminology as supported.</p>",
        "id": 153815084,
        "sender_full_name": "Reuben Daniels",
        "timestamp": 1457670008
    },
    {
        "content": "<p>I take your point for stored/indexed FHIR Code Systems of course.</p>",
        "id": 153815085,
        "sender_full_name": "Reuben Daniels",
        "timestamp": 1457670033
    },
    {
        "content": "<p>*FHIR CodeSystem resources.</p>",
        "id": 153815086,
        "sender_full_name": "Reuben Daniels",
        "timestamp": 1457670042
    },
    {
        "content": "<p>not purely to assert that is available; you also get to declare the version, the properties you support, the filters you support, and whether you are capable of post-coordination</p>",
        "id": 153815087,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457670128
    },
    {
        "content": "<p>I think those things are pretty useful </p>",
        "id": 153815088,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457670144
    },
    {
        "content": "<p>Changed my mind! If the CodeSystem resource describes all this stuff, it probably makes the extension in the Conformance Statement redundant. So one vote for GET [base]/CodeSystem.</p>",
        "id": 153815091,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1457671505
    },
    {
        "content": "<p>Grahame: Now I'm wondering whether another option could be a TerminologyServerCapability resource which FHIR Terminology Servers can expose (alongside the conformance statement) to assert those supported capabilities ?</p>",
        "id": 153815092,
        "sender_full_name": "Reuben Daniels",
        "timestamp": 1457672441
    },
    {
        "content": "<p>Well, what else would it say?</p>",
        "id": 153815142,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457693342
    },
    {
        "content": "<p>Hmm.  Maybe I'm not thinking about this correctly, but if I post a CodeSystem resource to your server, Grahame, say for cpt-4, does that mean that you \"support\" it (obviously not)?  Or am I somehow not allowed to post CodeSystem resources to your server for terminologies that you don't support (and then where is that defined and exposed)?  It's seeming to me that this belongs in the conformance statement in one way or another - and I think core would be preferable to extension.</p>",
        "id": 153815176,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1457703094
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> When expanding a SNOMED CT implicit value set and applying a text filter, what concept metadata does the text filter apply to? Just terms or other metadata associated with a concept? (i.e.parents &amp; children)</p>",
        "id": 153815232,
        "sender_full_name": "Jon Zammit",
        "timestamp": 1457716520
    },
    {
        "content": "<p>Jon, that's up to the server</p>",
        "id": 153815271,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457730104
    },
    {
        "content": "<p>rob, I would not allow you to post a code system resource unless content= complete </p>",
        "id": 153815272,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457730139
    },
    {
        "content": "<p>ok - I haven't seen anything in the documentation for CodeSystem.content or the resource in general that specifies that behavior<br>\nand does that mean that CodeSystem is being treated \"specially\" in that regard compared to other resources?</p>",
        "id": 153815275,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1457730974
    },
    {
        "content": "<p>Grahame: to your question,  some of the things this resource could assert include a) code systems (and specific versions of them) which are available to support expansions of value sets with codes from said code systems b) whether post-coordination is supported c) which expansion profiles are supported for value set expansion d) policies around paging e) which implicit value sets are supported for expansion. Probably a few more, but you get the idea.</p>",
        "id": 153815346,
        "sender_full_name": "Reuben Daniels",
        "timestamp": 1457914561
    },
    {
        "content": "<p>In a ValueSet  I can \"import\" the codes from another ValueSet, but I cannot \"exclude\" the codes from another ValueSet.<br>\nAs an example of when I want to do this, see SNOMED CT's \"Grouper Exclusion\" reference set - this is a collection of codes that you might use in retrieval queries or for analytics, but you wouldn't normally want to appear in the patient record</p>",
        "id": 153815347,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1457917995
    },
    {
        "content": "<p>well, you can, by excluding codes based on the ref set membership</p>",
        "id": 153815358,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457939776
    },
    {
        "content": "<p>that works if it starts as a refset, but what if I have a \"better\"/alternate version that's only a refset?<br>\nif \"import\" were a child of include/exclude then we'd be okay</p>",
        "id": 153815361,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1457939984
    },
    {
        "content": "<p>there is a task for this in the system somewhere. From Lloyd</p>",
        "id": 153815362,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457940917
    },
    {
        "content": "<p>not sure what you 'only a refset' </p>",
        "id": 153815363,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457940930
    },
    {
        "content": "<p>Maybe I'm out of context here, but under what conditions am I filtering where I don't have a valueset as the context to search on?<br>\nAll resource definitions bindings go to a valueset, not the codesystem directly.</p>",
        "id": 153815575,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458020922
    },
    {
        "content": "<p>\"A code system specifies a set of codes drawn from one or more code systems.\" (on the new CodeSystem page) - cool recursive defintion ;-)</p>",
        "id": 153815576,
        "sender_full_name": "René Spronk",
        "timestamp": 1458029136
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> In the ValueSet $expansion operations, it's possible to use SNOMED CT and LOINC in their entirety (and possibly other code systems) as implicit ValueSets and filter on them...e.g. <code>ValueSet/$expand?identifier=http://snomed.info/sct?fhir_vs&amp;filter=midlife</code> and <code>ValueSet/$expand?identifier=http://loinc.org/vs&amp;filter=diastolic</code></p>",
        "id": 153815577,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1458029706
    },
    {
        "content": "<p>It might be possible to do, but from a usage point of view to aply to use in other fhir resoures, will always have the context. Unless I'm missing something.</p>",
        "id": 153815579,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458029916
    },
    {
        "content": "<p>Not sure that I understand, do you have an example Brian?</p>",
        "id": 153815585,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1458030401
    },
    {
        "content": "<p>I hope the code system page says \"A code system RESOURCE specifies a set of codes drawn from one or more code systems.\" </p>",
        "id": 153815672,
        "sender_full_name": "Robert McClure",
        "timestamp": 1458059819
    },
    {
        "content": "<p>it does now</p>",
        "id": 153815681,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458062486
    },
    {
        "content": "<p>oops, I meant \"only a ValueSet\" ie., is not a refset</p>",
        "id": 153815713,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1458074929
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  wrote: The terminology service - the current build - does have relationships etc in the code system resource, and so that part of CTS2 is now possible in the FHIR terminology service.</p>",
        "id": 153815828,
        "sender_full_name": "René Spronk",
        "timestamp": 1458129232
    },
    {
        "content": "<p>Help me - where's the documentation on that?</p>",
        "id": 153815829,
        "sender_full_name": "René Spronk",
        "timestamp": 1458129247
    },
    {
        "content": "<p><a href=\"http://hl7-fhir.github.io/codesystem-definitions.html#CodeSystem.property\" target=\"_blank\" title=\"http://hl7-fhir.github.io/codesystem-definitions.html#CodeSystem.property\">http://hl7-fhir.github.io/codesystem-definitions.html#CodeSystem.property</a></p>",
        "id": 153815832,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458129711
    },
    {
        "content": "<p>So you define properties like \"can-be-combined-with\" or \"excludes\" and so on in CodeSystem.property and use these in CodeSystem.concept.property (and it's concept children)?</p>",
        "id": 153815834,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1458130051
    },
    {
        "content": "<p>yes</p>",
        "id": 153815836,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458130073
    },
    {
        "content": "<p>Not being a terminologist, so I could define a property \"is-anatomically-related-to\", and create a property value for the code \"arm\" to be the tuple (\"is-anatomically-related-to\", code for \"hand\") ? That would indeed allow for any ontological relationship to be represented.</p>",
        "id": 153815839,
        "sender_full_name": "René Spronk",
        "timestamp": 1458130520
    },
    {
        "content": "<p>i'm not sure about the scope of FHIR in the Terminology Services context. in  <strong>terminology</strong> topic it was stated, that putting the content of a Terminology onto a FHIR server would be bad practice, it would be better to just link an external terminolgy service. But now codesystems got extended in FHIR to store the contents of a terminology. I'm really confused (not an terminology expert).</p>",
        "id": 153815864,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1458141742
    },
    {
        "content": "<p>the content of the terminology services page needs adjustment for adding code system, so it might be a bit out of sync </p>",
        "id": 153815882,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458160906
    },
    {
        "content": "<p>I'm still dealing with tehcnical broken bits </p>",
        "id": 153815883,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458160919
    },
    {
        "content": "<p>but we shouldn't say anything like that anywhere. </p>",
        "id": 153815884,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458160933
    },
    {
        "content": "<p>what we do say is that you shouldn't represent bit terminologies in the CodeSystem resource - they should be implicit. But you could try generating ICD-10-gm into a code system resource and see how you go. </p>",
        "id": 153815885,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458160987
    },
    {
        "content": "<p>OntoServer and my FHIR reference server will support that out of the box if you do, and Apelon will soon</p>",
        "id": 153815886,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458161007
    },
    {
        "content": "<p>Looking forward to implementing the new CodeSystem/$lookup operation with the various properties that can be returned - including parent and child. Nice one Grahame! :)</p>",
        "id": 153815972,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1458180614
    },
    {
        "content": "<p>the $lookup concept is nice, is there a concept how to lookup equivalent Codes over different versions of a Codesystem like changed ICD Codes over time? Same question for includse/excludes?</p>",
        "id": 153816068,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1458213718
    },
    {
        "content": "<p>you know, that's never come up. but it sounds.... yucky</p>",
        "id": 153816069,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458213791
    },
    {
        "content": "<p>I can't even imagine what you mean with includes/excludes</p>",
        "id": 153816070,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458213808
    },
    {
        "content": "<p>simplified excludes means \"these two codes shouldnt be used together\" <br>\n<a href=\"http://www.hcpro.com/HIM-276496-865/Understand-ICD10CM-excludes-notes.html\" target=\"_blank\" title=\"http://www.hcpro.com/HIM-276496-865/Understand-ICD10CM-excludes-notes.html\">http://www.hcpro.com/HIM-276496-865/Understand-ICD10CM-excludes-notes.html</a></p>",
        "id": 153816071,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1458213923
    },
    {
        "content": "<p>ah well, we could define properties for that in the ICD-X code system resources, and then you could query for them in the $lookup operation</p>",
        "id": 153816072,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458213990
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span> can you tell me the context in which you want the child/parent codes for a SNOMED CT code?  I'm putting together a case to get this into the ECL</p>",
        "id": 153816447,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1458283214
    },
    {
        "content": "<p>I added parent and child to $lookup</p>",
        "id": 153816448,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458284918
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span>  I'm mainly thinking from the UI perspective where being able to view parent and child nodes is a valuable aid to searching and selecting using any control that presents data in hierarchical structure. <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I'm looking forward to implementing the new parameters on the $lookup operation, but it would be nice if SNOMED CT ECL also had this feature. A few other scripting &amp; query languages have it (e.g. jQuery, Xpath, etc.).</p>",
        "id": 153816457,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1458285942
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span> it makes sense to have these in graph-based languages, but not so much in a Description Logic (DL)-based environent because there is no intrinsic meaning to there being no (named) class sitting between a 'parent' and 'child'.  The link to the DL is really why this was originally omitted, but I'm now hopeful we can get it added in.</p>",
        "id": 153817289,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1458646461
    },
    {
        "content": "<p>Question on Valueset expansion &amp; filter - I searched the documentation and chats here, but couldn't figure out how filter should be applied. For eg. Let's take..  ValueSet/condition-code/$expand?filter=Lung Cancer. Looking at <a href=\"http://fhir3.healthintersections.com.au/open/ValueSet/condition-code/$expand?filter=Lung%20Cancer\" target=\"_blank\" title=\"http://fhir3.healthintersections.com.au/open/ValueSet/condition-code/$expand?filter=Lung%20Cancer\">http://fhir3.healthintersections.com.au/open/ValueSet/condition-code/$expand?filter=Lung%20Cancer</a>  it seems like its not strictly a text search, since I see \"Secondary malignant neoplasm of lung\" in results.. If it does subsumption, what is the logic? </p>",
        "id": 153817495,
        "sender_full_name": "Gana Pemmanda",
        "timestamp": 1458694697
    },
    {
        "content": "<p>we  just talked about that here...</p>",
        "id": 153817496,
        "sender_full_name": "Eric Haas",
        "timestamp": 1458694770
    },
    {
        "content": "<p><a href=\"https://chat.fhir.org/#narrow/stream/implementers/subject/code.20search.20with.20hierarchical.20values\" target=\"_blank\" title=\"https://chat.fhir.org/#narrow/stream/implementers/subject/code.20search.20with.20hierarchical.20values\">https://chat.fhir.org/#narrow/stream/implementers/subject/code.20search.20with.20hierarchical.20values</a></p>",
        "id": 153817497,
        "sender_full_name": "Eric Haas",
        "timestamp": 1458694773
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span>.. I just saw that. But my question was more along the lines of ValueSet expansion rather than searching within the resource itself.</p>",
        "id": 153817500,
        "sender_full_name": "Gana Pemmanda",
        "timestamp": 1458695229
    },
    {
        "content": "<p>Yeah, Eric's thing is different. The rule is that the server can apply the text filter by whatever method it thinks best serves the user. In my case (the server you are referencing), I stem the search filter words, and then matches against all the words associated with the concept, weighting for distance from preferred display</p>",
        "id": 153817502,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458695377
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ! I wish that I asked the question a bit earlier.. Would have saved me some time :)</p>",
        "id": 153817504,
        "sender_full_name": "Gana Pemmanda",
        "timestamp": 1458695959
    },
    {
        "content": "<p>Do we have a list somewhere of terminology servers that support a FHIR interface ? I'd like to add such a list to the 'terminology' module we present in our FHIR training course..</p>",
        "id": 153817653,
        "sender_full_name": "René Spronk",
        "timestamp": 1458739044
    },
    {
        "content": "<p>Did you see the servers listed in Michael's VSTool? <a href=\"http://ontoserver.csiro.au/vstool/\" target=\"_blank\" title=\"http://ontoserver.csiro.au/vstool/\">http://ontoserver.csiro.au/vstool/</a></p>",
        "id": 153817662,
        "sender_full_name": "Jon Zammit",
        "timestamp": 1458745189
    },
    {
        "content": "<p>May not be a complete list.</p>",
        "id": 153817663,
        "sender_full_name": "Jon Zammit",
        "timestamp": 1458745209
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191489\">@Jon Zammit</span>  That's the Australian list I see ;-) ... others at <a href=\"http://wiki.hl7.org/index.php?title=201601_FHIR_Terminology_Services\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=201601_FHIR_Terminology_Services\">http://wiki.hl7.org/index.php?title=201601_FHIR_Terminology_Services</a> </p>",
        "id": 153817670,
        "sender_full_name": "René Spronk",
        "timestamp": 1458747250
    },
    {
        "content": "<p>Current list in my slide deck: Apelon, <a href=\"http://apelon.com\" target=\"_blank\" title=\"http://apelon.com\">apelon.com</a><br>\nCSIRO Ontoserver, <a href=\"http://ontoserver.csiro.au\" target=\"_blank\" title=\"http://ontoserver.csiro.au\">ontoserver.csiro.au</a><br>\nHealth Intersections<br>\nHealthConnex, <a href=\"http://healthconnex.com.au\" target=\"_blank\" title=\"http://healthconnex.com.au\">healthconnex.com.au</a><br>\nIMO - Intelligent Medical Objects, <a href=\"http://e-imo.com\" target=\"_blank\" title=\"http://e-imo.com\">e-imo.com</a><br>\nNLM Value Set Authority Center (VSAC)</p>",
        "id": 153817671,
        "sender_full_name": "René Spronk",
        "timestamp": 1458747533
    },
    {
        "content": "<p>Ok thanks for the clarification, Rene!</p>",
        "id": 153817673,
        "sender_full_name": "Jon Zammit",
        "timestamp": 1458748528
    },
    {
        "content": "<p>I would add art-decor. </p>",
        "id": 153817716,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458760565
    },
    {
        "content": "<p>some of these are very far along the path of implementing a real production service, and others are on the path</p>",
        "id": 153817717,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458760584
    },
    {
        "content": "<p>Hi all, I'm looking for a Valueset to reference that can represent the service-types that you could book an appointment for.<br>\nSo far I've come across these valuesets which seem to describe bits n pieces of these.<br>\n<a href=\"http://hl7.org/fhir/valueset-service-pharmacy.html\" target=\"_blank\" title=\"http://hl7.org/fhir/valueset-service-pharmacy.html\">http://hl7.org/fhir/valueset-service-pharmacy.html</a><br>\n<a href=\"http://hl7.org/fhir/valueset-service-product.html\" target=\"_blank\" title=\"http://hl7.org/fhir/valueset-service-product.html\">http://hl7.org/fhir/valueset-service-product.html</a><br>\n<a href=\"http://hl7.org/fhir/valueset-service-provision-conditions.html\" target=\"_blank\" title=\"http://hl7.org/fhir/valueset-service-provision-conditions.html\">http://hl7.org/fhir/valueset-service-provision-conditions.html</a><br>\n<a href=\"http://hl7.org/fhir/valueset-service-uscls.html\" target=\"_blank\" title=\"http://hl7.org/fhir/valueset-service-uscls.html\">http://hl7.org/fhir/valueset-service-uscls.html</a><br>\n<a href=\"http://hl7.org/fhir/ValueSet/encounter-type\" target=\"_blank\" title=\"http://hl7.org/fhir/ValueSet/encounter-type\">http://hl7.org/fhir/ValueSet/encounter-type</a></p>\n<p>Is there a more comprehensive list anywhere, or is this too jurisdiction specific?<br>\nand also looking for a ServiceCategory that could segment this list - or is that just a grouper in the valueset - how can I represent this Have currently mapped as an example binding:<br>\n<a href=\"http://hl7.org/fhir/v2/0265/index.html\" target=\"_blank\" title=\"http://hl7.org/fhir/v2/0265/index.html\">http://hl7.org/fhir/v2/0265/index.html</a></p>",
        "id": 153818349,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1459141478
    },
    {
        "content": "<p>I would gladly add additional (public, working mostly) endpoints to VSTool for anyone who would like to provide me with theirs.</p>",
        "id": 153820048,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1459950436
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191492\">@Gana Pemmanda</span> Ontoserver by default uses a word-prefix, any order strategy for matching and a custom scoring function for rankingthe matches</p>",
        "id": 153820049,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1459950498
    },
    {
        "content": "<p>A group at HSPC have identified something that is apparently missing on the FHIR terminology service</p>",
        "id": 153824190,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462221587
    },
    {
        "content": "<p>say I have a SNOMED CT concept ID, 123456789. I want to know whether the  code - post-coordinated or not - has a laterality</p>",
        "id": 153824192,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462221686
    },
    {
        "content": "<p>that's ok - is it in the value set 'codes with laterality'</p>",
        "id": 153824193,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462221706
    },
    {
        "content": "<p>but what if I want to know what the SNOMED CT laterality actually is?</p>",
        "id": 153824194,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462221767
    },
    {
        "content": "<p>So you're asking for a coded expression to be de-constructed and extract a specific piece?  </p>",
        "id": 153824286,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462230402
    },
    {
        "content": "<p>It sounds to me like to do this completely you would ultimately need to be able to fully parse arbitrary SNOMED CT compositional grammar expressions.  For example, in the US extension there are concepts such as \"Closed fracture of left upper limb\" (446601000124102.  That concept is fully defined with a Finding site of \"Structure of left half of body\" (31156008).  And \"Structure of left half of body\"  in turn has \"Laterality \" (272741003) = \"Left\" (7771000).   It wouldn't necessarily be too hard to pull laterality out of that , but it's definitely not limited to a single level of nesting.  And I suspect that it would get even more complicated in some cases - especially if full post-coordination is supported.</p>",
        "id": 153824293,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1462231029
    },
    {
        "content": "<p>Can't you filter by using a SNOMED CT query expression as per...http://hl7.org/fhir/2016May/snomedct.html ... assuming, of course, that the concepts with the laterality attribute values are held on the relevant Terminology Server - either as fully-defined concepts or post-coordinated concepts in extensions.</p>",
        "id": 153824294,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1462231036
    },
    {
        "content": "<p>The real challenge is that if we're going to define this as a generic service, it should function with an arbitrary post-coordination/knowledge model.  And that sounds pretty ugly to me.</p>",
        "id": 153824295,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462231320
    },
    {
        "content": "<p>well, I don't think that we need to get too involved in the details. We have code system properties, so, it's an operation on the server: give the server a code, and ask for a property back (or perhaps a property with a value), and get back the property for that code. </p>",
        "id": 153824299,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462245676
    },
    {
        "content": "<p>you could see a use for that in LOINC, RxNorm, SCT, ICD-X, PBS, MIMS</p>",
        "id": 153824300,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462245710
    },
    {
        "content": "<p>sorry for random Australian terminologies in that list ;-)</p>",
        "id": 153824301,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462245727
    },
    {
        "content": "<p>and you could also do the other - give a whole lot of properties, and ask for a single code that includes them all - if one exists</p>",
        "id": 153824302,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462245748
    },
    {
        "content": "<p>none of that means that the API buys into the messy details of the actual work in the background, which, yes, you need to be parse sct grammar. but the existing terminology servers can mostly do anyway - that's what we do</p>",
        "id": 153824303,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462245791
    },
    {
        "content": "<p>Grahame, I still get an internal server error attempting snomed code $lookup on your server, e.g. <a href=\"http://fhir3.healthintersections.com.au/open/CodeSystem/$lookup?system=http://snomed.info/sct&amp;code=404684003\" target=\"_blank\" title=\"http://fhir3.healthintersections.com.au/open/CodeSystem/$lookup?system=http://snomed.info/sct&amp;code=404684003\">http://fhir3.healthintersections.com.au/open/CodeSystem/$lookup?system=http://snomed.info/sct&amp;code=404684003</a></p>",
        "id": 153824388,
        "sender_full_name": "Dave Carlson",
        "timestamp": 1462310420
    },
    {
        "content": "<p>Graham has this right I believe. I assume that you all agree since there was no reply to his comment. What I take him to mean is that the sort of detailed terminology service function needed to support something like \"Give me all the concepts that are a descendent of \"disease\" that have \"laterality: \"Left\"\" would not be a FHIR terminology service function. Instead this would be something that could be done by an \"external\" terminology service that has the functionality noted. BTW, the just about to be published Characteristics of a Value Set Definition (VSD) STU has an HL7 Expression for defining a value set definition (based on MIF) where this sort of \"request\" could be defined. See <a href=\"http://wiki.hl7.org/index.php?title=Value_Set_Definition_Standard_Project\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=Value_Set_Definition_Standard_Project\">http://wiki.hl7.org/index.php?title=Value_Set_Definition_Standard_Project</a></p>",
        "id": 153824489,
        "sender_full_name": "Robert McClure",
        "timestamp": 1462378570
    },
    {
        "content": "<p>why do you think it would not be a FHIR terminology service function? </p>",
        "id": 153824490,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462378634
    },
    {
        "content": "<p>Because there are other choices available. But I understand that someone could propose that it's fully defined in FHIR. </p>",
        "id": 153824491,
        "sender_full_name": "Robert McClure",
        "timestamp": 1462378730
    },
    {
        "content": "<p>I do agree that FHIR would benefit from clarifying the syntax for the request. I assume the returned set is just a list of oncept representations (codes). </p>",
        "id": 153824492,
        "sender_full_name": "Robert McClure",
        "timestamp": 1462378791
    },
    {
        "content": "<p>more than one code? </p>",
        "id": 153824493,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462378815
    },
    {
        "content": "<p>My example would bring back multiple concepts that satisfy the request</p>",
        "id": 153824494,
        "sender_full_name": "Robert McClure",
        "timestamp": 1462378850
    },
    {
        "content": "<p>I think that it makes sense to define the API: given a code, get a property value from it. But we shouldn't be the ones that define the termnological functionality that this is a window to</p>",
        "id": 153824495,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462378854
    },
    {
        "content": "<p>agreed</p>",
        "id": 153824496,
        "sender_full_name": "Robert McClure",
        "timestamp": 1462378867
    },
    {
        "content": "<p>great. Is defining the terminological functionality in scope of the vsd? it's beyond that isn't? </p>",
        "id": 153824497,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462378936
    },
    {
        "content": "<p>Existing VSD PSS is limited to semantics of of the metatdata needed to define a value set, including the sematics of how to characterize the expression that identifies concepts to be included in the expansion set. I suspect our next PSS will focus on the informative parts we touched on in VSD: 1) How to define what should be included in an expansion *in addition to* the list of concept representations (codes).  i.e.: how to specify I want the description, the code system ID and name, etc. We also need to define a syntax for the VSD metatdata - perhaps we can use FHIR - to support exchange. I suspect what you are asking for is not in either of those portions of work. </p>",
        "id": 153824498,
        "sender_full_name": "Robert McClure",
        "timestamp": 1462380015
    },
    {
        "content": "<p>no I didn't think it was. or should be. Just making sure</p>",
        "id": 153824499,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462380256
    },
    {
        "content": "<p>we could look at using FHIR for VSD metadata syntax</p>",
        "id": 153824500,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462380272
    },
    {
        "content": "<p>a discussion for elsewhere, but requirements and options would be my first question</p>",
        "id": 153824501,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462380299
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197476\">@Dave Carlson</span>  fixed the lookup problem</p>",
        "id": 153824539,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462382697
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  just tested lookup and working, thanks!  See you on Saturday.</p>",
        "id": 153824541,
        "sender_full_name": "Dave Carlson",
        "timestamp": 1462382878
    },
    {
        "content": "<p>great</p>",
        "id": 153824542,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462382918
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> One \"problem\" with asking for the laterality property is that in the general case there may be more than one - eg a postcoordinated expression talking about a closed fracture of left leg and open fracture of right leg.  Or, more immediately, the ingredient(s) of a medication.<br>\nNote that the SNOMED expression constraint language can be used to query for the laterality: &lt;&lt; |side| : |laterality| R= 123456789</p>",
        "id": 153824704,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1462468128
    },
    {
        "content": "<p>yes. it means that the cardinality is &gt;1. </p>",
        "id": 153824739,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462485499
    },
    {
        "content": "<p>It seems nearly half of the 836 example CodeSystems have an asserted profile of <a href=\"http://hl7.org/fhir/StructureDefinition/valueset-shareable-definition\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/valueset-shareable-definition\">http://hl7.org/fhir/StructureDefinition/valueset-shareable-definition</a> - e.g.,  codesystem-questionnaire-display-category.canonical.json codesystem-teeth.json<br>\n<a href=\"http://fhir3.healthintersections.com.au/open/CodeSystem/questionnaire-display-category\" target=\"_blank\" title=\"http://fhir3.healthintersections.com.au/open/CodeSystem/questionnaire-display-category\">http://fhir3.healthintersections.com.au/open/CodeSystem/questionnaire-display-category</a></p>",
        "id": 153824912,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1462597126
    },
    {
        "content": "<p>only half?</p>",
        "id": 153824914,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462598869
    },
    {
        "content": "<p>nearly all of them should</p>",
        "id": 153824915,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462598874
    },
    {
        "content": "<p>360 by my rough calculation, but am I missing something?  How can a CodeSystem satisfy the profile for a ValueSet?</p>",
        "id": 153824916,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1462599118
    },
    {
        "content": "<p>right, that's an error. I'm fixing that in the current build. </p>",
        "id": 153824919,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462599639
    },
    {
        "content": "<p>Can I ask  Terminology question? If I need a term and I happen to find the term I want  in a value set and that value set has sourced the term from a known code system, maybe LOINC. Then what system do I use in formig my coding, the ValueSet referance or the known codesystem. Is it true to say I could uses either depending on my policy?  </p>",
        "id": 153825144,
        "sender_full_name": "Angus Millar",
        "timestamp": 1462635997
    },
    {
        "content": "<p>It must always be the URL for the code system.</p>",
        "id": 153825158,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462636687
    },
    {
        "content": "<p>The value set URL can be conveyed in the Coding as well with an extension, but the meaning of the code is conveyed by the code system URL + the code value.</p>",
        "id": 153825161,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462636716
    },
    {
        "content": "<p>Thanks Lloyd</p>",
        "id": 153825162,
        "sender_full_name": "Angus Millar",
        "timestamp": 1462636753
    },
    {
        "content": "<p>Question about the ConceptMap resource. Let's say I have a concept map for RxNorm to NCD (or any vocabularies that may represent a very large number of maps). This would have thousands of elements, wouldn't it? And that would make it virtually impossible to exchange data. What am I missing about how mappings should be constructed and/or how they may be represented between a client and server?</p>",
        "id": 153826177,
        "sender_full_name": "Peter Bernhardt",
        "timestamp": 1462831085
    },
    {
        "content": "<p>yep they can be very large. We haven't really come to terms with all the ramifications of that, but as far as the client is concerned, just use $translate</p>",
        "id": 153826179,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462831612
    },
    {
        "content": "<p>I wouldn't use $translate for large-scale data mappings (e.g. READ to SNOMED CT over a primary care data set), but certainly for individual codes and reasonably-sized collections of codes. From a client perspective, I'd probably persist the results if the query was unlikely to be one-off.</p>",
        "id": 153826186,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1462831918
    },
    {
        "content": "<p>well, if you're gong to be doing large scale data mappings - not what I intended to address - I don't really understand the point of a subset..</p>",
        "id": 153826188,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462831983
    },
    {
        "content": "<p>It's entirely possible, in an exchange use case, for an endpoint system to receive a small number of codes, from a system they don't implement and wish to translate those to a system that they do implement. I can certainly foresee this happening in NZ when a new system that has never implemented Read Codes receives them in a legacy record and wishes to translate them to SNOMED CT. There might be fewer than a dozen, so why request the entire map?</p>",
        "id": 153826192,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1462832449
    },
    {
        "content": "<p>well, use $translate with multiple codes then</p>",
        "id": 153826193,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462832483
    },
    {
        "content": "<p>Yes, a subset of the codes that need to be translated at that time?</p>",
        "id": 153826194,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1462832610
    },
    {
        "content": "<p>well, just ask for translations on all the codes you want - see <a href=\"http://hl7-fhir.github.io/terminology-service.html#2.5.1.9\" target=\"_blank\" title=\"http://hl7-fhir.github.io/terminology-service.html#2.5.1.9\">http://hl7-fhir.github.io/terminology-service.html#2.5.1.9</a></p>",
        "id": 153826195,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462832713
    },
    {
        "content": "<p>Indeed. That was the whole intention of my reply - but perhaps I didn't use the correct terminology...and you've provided a translation!</p>",
        "id": 153826198,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1462832873
    },
    {
        "content": "<p>Is it expected that a :above or :below search for a code will take ConceptMap into account or only the nesting in CodeSystem?</p>",
        "id": 153826455,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1462907781
    },
    {
        "content": "<p>I don't think it's expected </p>",
        "id": 153826465,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462909099
    },
    {
        "content": "<p>it's allowed</p>",
        "id": 153826466,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462909101
    },
    {
        "content": "<p>Is there any way to know?</p>",
        "id": 153826546,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1462910638
    },
    {
        "content": "<p>not at the moment. Do you really need to know? (you who complained about the size of the conformanr resource!) </p>",
        "id": 153826734,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462962446
    },
    {
        "content": "<p>This is the kind of \"feature\" conformance that may be valuable. Can think of a few...supporting of @profile slicing, support of search by (new) profile, etc....</p>",
        "id": 153826808,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1462972164
    },
    {
        "content": "<p>yay for more features ;-0</p>",
        "id": 153826901,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462981688
    },
    {
        "content": "<p>Did we ever get to deciding on if we should add Operations to CodeSystem (Think I requested on Valueset before was seperated) for adding/removing concepts to a codesystem?</p>",
        "id": 153830640,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1464657288
    },
    {
        "content": "<p>given the stated scope of code system, I don't think we'd add that to the spec</p>",
        "id": 153830642,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464657461
    },
    {
        "content": "<p>ok. Might have a private implementation then for internal maintenance of internal codesystems.</p>",
        "id": 153830643,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1464657515
    },
    {
        "content": "<p>you could still consider publishing it - I would probably implement it before next month in Sydney</p>",
        "id": 153830644,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464657560
    },
    {
        "content": "<p>this statement in Scope and Usage addresses that: \"The Code system resource is not intended to support the process of maintaining a code system.\"</p>",
        "id": 153830646,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1464657604
    },
    {
        "content": "<p>and I guess we need to change that to \"The CodeSystem resource ...\"</p>",
        "id": 153830648,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1464657740
    },
    {
        "content": "<p>Maybe it's a PATCH operation?</p>",
        "id": 153831378,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1464914625
    },
    {
        "content": "<p>the problem with path is that it's offset dependent. You can only patch if you have current. So it doesn't save that much. unless we beef up patch. and interest in that is pretty tepid</p>",
        "id": 153831379,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464914680
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> How come the <code>v3/RoleCode</code> codesystem on <a href=\"http://fhir3.healthintersections.com.au/open/CodeSystem?url=http://hl7.org/fhir/v3/RoleCode\" target=\"_blank\" title=\"http://fhir3.healthintersections.com.au/open/CodeSystem?url=http://hl7.org/fhir/v3/RoleCode\">your server</a> doesn't include the <code>_PersonalRelationshipRoleType</code> code?</p>\n<p>The <a href=\"http://hl7-fhir.github.io/v3/PersonalRelationshipRoleType/vs.html\" target=\"_blank\" title=\"http://hl7-fhir.github.io/v3/PersonalRelationshipRoleType/vs.html\">PersonalRelationshipRoleType</a> ValueSet references this code, but this is failing for me because that code can't be found. Am I missing something?</p>",
        "id": 153831922,
        "sender_full_name": "James Agnew",
        "timestamp": 1465338947
    },
    {
        "content": "<p>because it's not in the generated code system in the spec </p>",
        "id": 153831934,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465342780
    },
    {
        "content": "<p>I guess my question is why isn't it there?</p>",
        "id": 153831935,
        "sender_full_name": "James Agnew",
        "timestamp": 1465342809
    },
    {
        "content": "<p>yeah, debugging that now</p>",
        "id": 153831936,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465342886
    },
    {
        "content": "<p>a typo in a string constant in the v3 MIF processing code</p>",
        "id": 153831937,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465343561
    },
    {
        "content": "<p>looking for the heirarchy as \"Sompecializes\" instead of \"Specializes\"</p>",
        "id": 153831938,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465343594
    },
    {
        "content": "<p>Ah cool. That's very sompecial of you to fix it.</p>",
        "id": 153831939,
        "sender_full_name": "James Agnew",
        "timestamp": 1465343634
    },
    {
        "content": "<p>lol</p>",
        "id": 153831941,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465343682
    },
    {
        "content": "<p>Now that a $subsumes operation has been added to the CodeSystem resource, is the subsumption test (isa) part of the ValueSet$validate-code operation redundant?</p>",
        "id": 153831965,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1465362507
    },
    {
        "content": "<p>notionally, but the $subsumes operation is not approved yet...</p>",
        "id": 153831970,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465363479
    },
    {
        "content": "<p>Thanks, I'll implement CodeSystem$subsumes and leave the $validate-code functionality as is...just in case. Looking at the operation definitions, CodeSystem looks like its natural home.</p>",
        "id": 153831974,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1465363956
    },
    {
        "content": "<p>Looking at this example in the latest version of the spec <code>GET [base]/CodeSystem/$subsumes?system=http://snomed.info/sct&amp;codeSub=3738000&amp;codeSuper=235856003</code> <br>\nI'm not sure why the outcome code is<code>subsumes</code>  rather than <code>subsumed-by</code>. </p>",
        "id": 153832253,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1465528035
    }
]