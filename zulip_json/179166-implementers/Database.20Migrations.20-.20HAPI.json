[
    {
        "content": "<p>I've created a HAPI server using the hapi-fhir-jpaserver-base as a dependency. My project is following closely with the jpaserver-example project that exists in the fhir repo. I've noticed that that project uses the hibernate auto gen mode <code>auto</code>. This is not something I am comfortable using in a production environment due to its adverse results. I can't seem to find any docs or anyone else with a better migration plan for the built in hapi server. Are people really using <code>auto</code> mode in their environments?<br>\nAlso, after much testing and attempts at generating liquibase logs for an initial database it seems like the project is rather weird with hibernate.<br>\nFor example, if you run with hibernate.ddl mode <code>create</code>, and then immediately stop and run with mode <code>validate</code> - it will fail to startup. This is very alarming to me personally, as that means hibernate is not validating and or updating properly when there are changes to the schema in the entity models.<br>\nHas no one released how they use HAPI in a production environment that needs more stable database migrations? I feel like I am missing something important.</p>",
        "id": 153904104,
        "sender_full_name": "Joshua Bell",
        "timestamp": 1504121539
    },
    {
        "content": "<p>We use flyway for migrations, with jpa/hibernate, but not (yet) in exactly the same context as you describe</p>",
        "id": 153904130,
        "sender_full_name": "Jim Steel",
        "timestamp": 1504131658
    },
    {
        "content": "<p>How did you generate your original initial database? Was it used hibernate create, then take a snapshot/dump of the database? I have been unsuccessful with this approach using liquibase, which is how it would normally be done. It seems to miss some index/foreign key related things.</p>",
        "id": 153904132,
        "sender_full_name": "Joshua Bell",
        "timestamp": 1504133989
    },
    {
        "content": "<p>Yeah. We switch it to update to create it, turn on the hibernate sql logging to get the table/constraint definitions (or pull them out of the database itself) to get the migrations, then turn it back to validate mode. (still need to test the migrations on different databases, since the sql often isn't portable)</p>",
        "id": 153904156,
        "sender_full_name": "Jim Steel",
        "timestamp": 1504160975
    },
    {
        "content": "<p>its finicky</p>",
        "id": 153904157,
        "sender_full_name": "Jim Steel",
        "timestamp": 1504160985
    },
    {
        "content": "<p>i think the initial database schema we pulled out of the database itself, rather than relying on the hibernate ddl logging</p>",
        "id": 153904158,
        "sender_full_name": "Jim Steel",
        "timestamp": 1504161063
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191376\">@Jim Steel</span> Did you guys end up just turning ddl auto mode to <code>none</code>? I would of liked to use <code>validate</code> mode, but it seems that doesn't even properly work on it's own (if you use create mode then validate immediately after it fails, seems like a bad thing with the base jpa server and how it uses hibernate)</p>",
        "id": 153904237,
        "sender_full_name": "Joshua Bell",
        "timestamp": 1504211411
    },
    {
        "content": "<p>No, we still use <code>validate</code>. Once again, though, we don't use HAPI's base JPA server, so I can't comment on how it uses hibernate.</p>",
        "id": 153904538,
        "sender_full_name": "Jim Steel",
        "timestamp": 1504656275
    }
]