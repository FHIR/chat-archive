[
    {
        "content": "<p>I'm currently converting the ECG data provided by the Apple Watch into a FHIR Observation using Swift on iOS. Has anyone defined a proper structure for ECG observations made by the Apple Watch yet? I feel like the example given in the FHIR documentation (<a href=\"https://www.hl7.org/fhir/observation-example-sample-data.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/observation-example-sample-data.html\">https://www.hl7.org/fhir/observation-example-sample-data.html</a>) is not suitable.</p>",
        "id": 186476520,
        "sender_full_name": "Yannick Börner",
        "timestamp": 1579859327
    },
    {
        "content": "<p>Can you expand on what you find unsuitable?</p>",
        "id": 186488494,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1579870456
    },
    {
        "content": "<p>Also, see here for a discussion around EKG (in PDF form): <a href=\"#narrow/stream/179166-implementers/topic/PDF.20instance.20of.20Observation\" title=\"#narrow/stream/179166-implementers/topic/PDF.20instance.20of.20Observation\">https://chat.fhir.org/#narrow/stream/179166-implementers/topic/PDF.20instance.20of.20Observation</a></p>",
        "id": 186507408,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1579883354
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> Yes, absolutely! The device used in the example has three components for instance, whereas the Apple Watch has only one component. In addition, I could not find a code for the Apple Watch (any input is greatly appreciated here). </p>\n<p>Looking at the values themselves, the example provides variables such as 'system', 'code null', 'period' and 'factor'. My expertise with regards to medical devices is very limited to non-existent, so I don't really know if these variables are needed in the first place and if they are needed, how to substitute them coming from an Apple Watch. </p>\n<p>I attached a CSV from an ECG made by the Apple Watch, hopefully that'll help understanding my troubles. <a href=\"/user_uploads/10155/roRHYlD4VSQi7xzqndqbto7E/ecg_2019-12-18_1.csv\" target=\"_blank\" title=\"ecg_2019-12-18_1.csv\">ecg_2019-12-18_1.csv</a></p>\n<p>My plan was to include the following information under device --&gt; component --&gt; value: </p>\n<ol>\n<li>Sample Rate</li>\n<li>Unit </li>\n<li>Every data point in the CSV's left column (Without time stamps)<br>\nDo you see any issues going forward like this? </li>\n</ol>\n<p>Thank you for your reply!</p>",
        "id": 186572435,
        "sender_full_name": "Yannick Börner",
        "timestamp": 1579956964
    },
    {
        "content": "<p>If you only have 1 lead, you'd only convey the data for one lead.  The notion of \"Apple Watch\" would be conveyed as a device manufacturer and a device model number (presume the different apple watches have one of these, though I don't know off the top of my head what they would be).  It may be that you can just convert Watch4,1 into that (there's a slot on Device to capture the software version too)</p>\n<p>Within FHIR, whenever you have a code, you also need a system.  The code '1' could mean all sorts of different things - in one code system it mean \"yes\", in another it might mean \"diabetes\" or \"not applicable\".  So in FHIR we always identify the code system so that the combination of code + system is globally unique.  Ideally, we try to use 'standard' code systems such as LOINC, SNOMED, one of the IEEE code systems, etc.  I believe this example uses one of the latter.  It's not clear from the spreadsheet what your origin value is.  It might be 0 or it might be something else.  (I'm not a clinical expert, so I can't say what's reasonable.)</p>\n<p>In terms of there not being a unit code or system for the origin, that's actually something that's an issue with the example.  It <em>should</em> have been specified, though it's not technically mandatory.  For the first lead, we know that the origin is 2048.  But we <em>don't</em> know 2048 \"what\".  It's possible that the units can be inferred from the code for the observation - i.e. all components with code '131329' from code system 'urn:oid:2.16.840.1.113883.6.24' are always known to be millivolts.  However, stating it explicitly is good practice.  Feel free to submit a change request by clicking on the \"propose a change\" link at the bottom of any page in the spec.  You'll need to register your first time.  (That's free, but it may take a couple of days because we have a real human review your registration request to make sure you're not signing up to hawk Viagra or timeshares or something :&gt;)  In your case, it looks like the code should be \"uV\" and the system to be \"<a href=\"http://units-of-measure.org\" target=\"_blank\" title=\"http://units-of-measure.org\">http://units-of-measure.org</a>\" (which is a widely used code system for units that happens to have a code for micro-volts).</p>\n<p>Period is the amount of time between samples in milliseconds.  You can calculate that from the frequency.  So 68 Hz would be one sample every 147ms</p>\n<p>Factor allows for situations where the measured values aren't expressible as quantized integers.  It looks like that's not an issue for your data so you can ignore it.</p>\n<p>It looks like you've got values for two leads, even though it only says you've got 1.  I don't know what the meaning is for the two columns, but presumably you'll want to have a component for each.</p>",
        "id": 186581479,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1579973512
    },
    {
        "content": "<p>Thank you so much for the input! This definitely clears up a lot of things. I'll look into everything tomorrow and then get back to you.</p>",
        "id": 186623344,
        "sender_full_name": "Yannick Börner",
        "timestamp": 1580047762
    },
    {
        "content": "<blockquote>\n<p>My plan was to include the following information under device --&gt; component --&gt; value: </p>\n<ol>\n<li>Sample Rate</li>\n<li>Unit </li>\n<li>Every data point in the CSV's left column (Without time stamps)<br>\nDo you see any issues going forward like this? </li>\n</ol>\n</blockquote>\n<p>I presume you mean observation.component.value, <br>\nnot \"device.component.value\"</p>\n<p>right?</p>",
        "id": 186624534,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1580049785
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span>  Yes, you are absolutely right. I'll follow up with my results as soon as I am done.</p>",
        "id": 186685164,
        "sender_full_name": "Yannick Börner",
        "timestamp": 1580134770
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span></p>\n<p>First of all, thank you both for replying and helping me navigate this. I'm very grateful for your insights and really appreciate you doing this. This is what I came up with: </p>\n<p>I created a JSON template for an ECG observation made on the  Apple Watch. The template is loaded within my app and the corresponding data is filled into it programmatically.  I attached the template as well as two printouts of an observation with data. Feel free to look it over and critique, though I don't want to hog your time. </p>\n<p>My next steps are the following: </p>\n<ol>\n<li>Submit a new LOINC Code for ECG observations made on the Apple Watch</li>\n<li>Add the sample rate programmatically</li>\n<li>Submit <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> 's proposed change request for the ekg example</li>\n</ol>\n<p>I hope other people can benefit from this then. </p>\n<p><a href=\"/user_uploads/10155/IYpY-9XbzYEPX61ymg2_UaDJ/ECG-Observation-Apple-Watch-JSON-Template.rtf\" target=\"_blank\" title=\"ECG-Observation-Apple-Watch-JSON-Template.rtf\">ECG-Observation-Apple-Watch-JSON-Template.rtf</a> <a href=\"/user_uploads/10155/roriQ8cd95D75LFTcRta5VzP/ECG-Observation-JSON-print.rtf\" target=\"_blank\" title=\"ECG-Observation-JSON-print.rtf\">ECG-Observation-JSON-print.rtf</a> <a href=\"/user_uploads/10155/RD4bqkIwwmv2MC9vv-Cfmtrq/ECG-Observation-Console-print.rtf\" target=\"_blank\" title=\"ECG-Observation-Console-print.rtf\">ECG-Observation-Console-print.rtf</a></p>",
        "id": 187077421,
        "sender_full_name": "Yannick Börner",
        "timestamp": 1580472564
    },
    {
        "content": "<p>\"note\" has a type of Annotation - which doesn't have an element called \"symptoms\".  (Symptoms would typicallly be captured as additional Observations - which you could link to your ECG Observation.  You might also use the workflow-reasonCode extension if the reason for capturing the 'symptoms' is a reason for the EKG.  (Not sure what the meaning is for capturing they symptoms with the watch?)</p>\n<p>code and display values are still strings - and must be delimited by quotes</p>\n<p>The structure of the valueSampledData is incorrect.  The actual data should be sent in 'data', not 'origin'.</p>\n<p>You can't have empty strings for <em>any</em> element</p>\n<p>Don't use 'display' for anything you expect to be computable - e.g. patient identity</p>",
        "id": 187130062,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1580509934
    },
    {
        "content": "<p>interpretation doesn't have an element called classification</p>\n<p>status should be delimited by quotes</p>\n<p>In general, try validating your instances against one of the test servers to make sure your JSON instance is legal</p>",
        "id": 187130195,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1580510042
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> Thank you so much yet again. I was busy writing a paper the past couple of days but I'll proceed with the implementation today. </p>\n<p>To answer your question: After finishing an ECG on the Apple Watch you can manually add symptoms. They are not checked against anything and are written freely by the user. That's basically the reason why I opted to include them in 'notes' as they are nothing more than that. Great suggestion with the extension! I'll have a look into that tomorrow.</p>",
        "id": 187547650,
        "sender_full_name": "Yannick Börner",
        "timestamp": 1580995999
    },
    {
        "content": "<p>The proper way would probably be to use Observation.component</p>",
        "id": 187574505,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1581013618
    },
    {
        "content": "<p>Excellent, will do so!</p>",
        "id": 187624754,
        "sender_full_name": "Yannick Börner",
        "timestamp": 1581067943
    }
]