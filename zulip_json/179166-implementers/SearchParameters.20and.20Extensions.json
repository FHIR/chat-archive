[
    {
        "content": "<p>Any insight into how I am misusing the SearchParameter would be greatly appreciated.</p>\n<p>I'm trying to develop a SearchParameter that will allow me to search against data in extension fields.<br>\nThe extensions are valueBooleans.<br>\nI have two MedicationInformation Objects, one with the extension data, one without:  (see <a href=\"http://hapi.fhir.org/baseR4/MedicationKnowledge\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/MedicationKnowledge\">http://hapi.fhir.org/baseR4/MedicationKnowledge</a>)<br>\n1) <a href=\"http://hapi.fhir.org/baseR4/MedicationKnowledge/SaulExperimentMK1\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/MedicationKnowledge/SaulExperimentMK1\">http://hapi.fhir.org/baseR4/MedicationKnowledge/SaulExperimentMK1</a>   -- has extensions<br>\n2) <a href=\"http://hapi.fhir.org/baseR4/MedicationKnowledge/SaulExperimentMK2\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/MedicationKnowledge/SaulExperimentMK2\">http://hapi.fhir.org/baseR4/MedicationKnowledge/SaulExperimentMK2</a></p>\n<p>The quantityLimit extension looks like this:<br>\n                    {<br>\n                        \"url\": \"<a href=\"https://api-v8-r4.hspconsortium.org/DrugFormulary2/open/StructureDefinition/usdrugformulary-QuantityLimit-extension\" target=\"_blank\" title=\"https://api-v8-r4.hspconsortium.org/DrugFormulary2/open/StructureDefinition/usdrugformulary-QuantityLimit-extension\">https://api-v8-r4.hspconsortium.org/DrugFormulary2/open/StructureDefinition/usdrugformulary-QuantityLimit-extension</a>\",<br>\n                        \"valueBoolean\": true<br>\n                    }</p>\n<p>I have defined a SearchParameter:    <a href=\"http://hapi.fhir.org/baseR4/SearchParameter/quantityLimit\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/SearchParameter/quantityLimit\">http://hapi.fhir.org/baseR4/SearchParameter/quantityLimit</a><br>\n{<br>\n    \"resourceType\": \"SearchParameter\",<br>\n    \"id\": \"quantityLimit\",<br>\n    \"meta\": {<br>\n      \"versionId\": \"1\",<br>\n      \"lastUpdated\": \"2019-02-22T08:37:56.297+00:00\"<br>\n    },<br>\n    \"title\": \"quantityLimit\",<br>\n    \"status\": \"active\",<br>\n    \"code\": \"quantityLimit\",<br>\n    \"base\": [<br>\n      \"MedicationKnowledge\"<br>\n    ],<br>\n    \"type\": \"string\",<br>\n    \"expression\": \"MedicationKnowledge.extension(\\\" <a href=\"https://api-v8-r4.hspconsortium.org/DrugFormulary2/open/StructureDefinition/usdrugformulary-QuantityLimit-extension.valueBoolean\" target=\"_blank\" title=\"https://api-v8-r4.hspconsortium.org/DrugFormulary2/open/StructureDefinition/usdrugformulary-QuantityLimit-extension.valueBoolean\">https://api-v8-r4.hspconsortium.org/DrugFormulary2/open/StructureDefinition/usdrugformulary-QuantityLimit-extension.valueBoolean</a>    \\\")\",<br>\n    \"xpathUsage\": \"normal\",<br>\n    \"comparator\": [<br>\n        \"eq\"<br>\n      ],<br>\n    \"search\": {<br>\n        \"mode\": \"match\"<br>\n      }<br>\n  }</p>\n<p>The SearchParameter is recognized by the server, but doesn't work (as intended).</p>\n<p>Searching:<br>\n1) <a href=\"http://hapi.fhir.org/baseR4/MedicationKnowledge?quantityLimit\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/MedicationKnowledge?quantityLimit\">http://hapi.fhir.org/baseR4/MedicationKnowledge?quantityLimit</a>   - returns two MedicationKnowledge objects... only one object has the quantityLimit extension, <strong>so this should return only one object, right?</strong><br>\n2) http://hapi.fhir.org/baseR4/MedicationKnowledge?quantityLimit=\"true\" returns zero objects,<strong> but should return one object, right?</strong></p>",
        "id": 166870522,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1559177506
    },
    {
        "content": "<p>I don't think that HAPI automatically implements search parameter definitions- you should ask on the HAPI stream</p>",
        "id": 166871054,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559178072
    },
    {
        "content": "<p>HAPI (I've tested 3.7 and 3.8) implement search parameter definitions.<br>\nSee <a href=\"http://hapi.fhir.org/baseR4/MedicationKnowledge?productType\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/MedicationKnowledge?productType\">http://hapi.fhir.org/baseR4/MedicationKnowledge?productType</a>  for a search parameter that allows search against the MedicationKnowledge productType field.<br>\nA sample query is:<br>\n<a href=\"http://hapi.fhir.org/baseR4/MedicationKnowledge?productType=BRANDX\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/MedicationKnowledge?productType=BRANDX\">http://hapi.fhir.org/baseR4/MedicationKnowledge?productType=BRANDX</a></p>\n<p>Moving to #HAPI stream.</p>",
        "id": 166910027,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1559224955
    },
    {
        "content": "<p>Is there a precedence/hierarchy in the order of search result parameters ie. should _sort always go before _count? I'm trying to understand the implementation of the search results parameters.</p>",
        "id": 168093041,
        "sender_full_name": "Glory Kim",
        "timestamp": 1560467596
    },
    {
        "content": "<p>Order doesn't matter - and should have no impact on results.</p>",
        "id": 168093139,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560467723
    },
    {
        "content": "<p>(Though that's not true for multiple repetitions of the _sort parameter - there order matters)</p>",
        "id": 168093150,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560467756
    },
    {
        "content": "<blockquote>\n<p>Order doesn't matter - and should have no impact on results.</p>\n</blockquote>\n<p>I'll agree with you but it is conceivable that _sorting first and then _counting could give you different results from _counting and then _sorting.  If the server retrieved 1000 results in some random order and returned the first 100 sorted by X, that's different than retrieving 1000 results, sorting by X, and returning the first 100.  If we're saying that order <em>SHALL not</em> have an impact on results, then I think we need to define a parameter precedence, i.e. sort first and then count.</p>",
        "id": 168093259,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1560467863
    },
    {
        "content": "<p>To clarify, I mean the order of implementation. For example, w/ AllergyIntolerance?_sort=AAA&amp;_count=AAA&amp;_include=AAA, it seems that the resources first get sorted, and then the count applies to the primary resource, and then the include works upon the resource afterwards. There doesn't seem to be any written precedence on fhir spec stating which param should be enacted first. </p>\n<p><span class=\"user-mention\" data-user-id=\"192166\">@Jean Duteau</span>  I agree - i think there should definitely be a parameter precedence.</p>",
        "id": 168093401,
        "sender_full_name": "Glory Kim",
        "timestamp": 1560467992
    },
    {
        "content": "<p>Perhaps there already is a written document, and I just missed it?</p>",
        "id": 168093488,
        "sender_full_name": "Glory Kim",
        "timestamp": 1560468093
    },
    {
        "content": "<blockquote>\n<p>Perhaps there already is a written document, and I just missed it?</p>\n</blockquote>\n<p>I just read the page on search parameters and there is nothing really there.  There is this one line that implies that sorting occurs first and then paging:</p>\n<blockquote>\n<p>Note: The combination of _sort and _count can be used to return only the latest resource that meets a particular criteria - set the criteria, and then sort by date in descending order, with _count=1. This way, the last matching resource will be returned.</p>\n</blockquote>\n<p>Is it only really _sort and _count that need a precedence?</p>",
        "id": 168093761,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1560468396
    },
    {
        "content": "<blockquote>\n<p>To clarify, I mean the order of implementation. For example, w/ AllergyIntolerance?_sort=AAA&amp;_count=AAA&amp;_include=AAA, it seems that the resources first get sorted, and then the count applies to the primary resource, and then the include works upon the resource afterwards. There doesn't seem to be any written precedence on fhir spec stating which param should be enacted first. </p>\n</blockquote>\n<p>One thing I did find was that _include only occurs after paging:</p>\n<blockquote>\n<p>When search results are paged, each page of search results should include the matching includes for the resources in each page, so that each page stands alone as a coherent package.</p>\n</blockquote>",
        "id": 168093899,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1560468540
    },
    {
        "content": "<p>I would say all of the results parameters should/could have a precedence</p>",
        "id": 168094593,
        "sender_full_name": "Glory Kim",
        "timestamp": 1560469337
    },
    {
        "content": "<p>Also, does anyone know how multiple _includes would work without :iterate?</p>",
        "id": 168095072,
        "sender_full_name": "Glory Kim",
        "timestamp": 1560469926
    },
    {
        "content": "<p>I don't understand the precendence issue. Sort and count are unrelated - sorting does not change the count</p>",
        "id": 168098269,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560474364
    },
    {
        "content": "<p>..and _count does not apply to includes</p>",
        "id": 168101581,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1560478930
    },
    {
        "content": "<p>Okay, thank you. So then, the order is to _sort &amp; _count on the main resources, and then _includes resources is tacked on at the end (not sorted) ?</p>",
        "id": 168101788,
        "sender_full_name": "Glory Kim",
        "timestamp": 1560479351
    },
    {
        "content": "<p>yes. includes is only the includes for the page being returned. Count is the size of the page; the order returned will obviously change which page contains which result but that isn't related to the order the parameters are specified in, and the only rule on the server side is that search has to work as specified</p>",
        "id": 168102267,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560480140
    },
    {
        "content": "<blockquote>\n<p>I don't understand the precendence issue. Sort and count are unrelated - sorting does not change the count</p>\n</blockquote>\n<p>I gave you the example.  _sort:name&amp;_count:100  : does this mean that I sort the resources by name and then give you back the first 100?  Okay, then _count:100&amp;_sort:name : does this mean that I take the first 100 resources returned randomly and then sort by name within that 100?  We are mostly silent on which you do first.  And if the answer is that you always _sort first and then _count, then there is an implicit precedence that we should probably state.  I mean, it's pretty self-evident, but it might bear stating.</p>",
        "id": 168106689,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1560488050
    },
    {
        "content": "<p>Order of operations is not driven by order in the URL - with the exception of sort.  First all filters are applied, then the result set is sorted, then paging is applied, and includes/revincludes are returned for each page.  Agree we should make that explicit in the spec.  Can you submit a change request <span class=\"user-mention\" data-user-id=\"192166\">@Jean Duteau</span> ?</p>",
        "id": 168140321,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560523050
    },
    {
        "content": "<p>well, we could be explicit that sorting is applied before paging, but I really thought this was super obvious</p>",
        "id": 168173095,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560547773
    },
    {
        "content": "<p>we are explicit about includes already btw</p>",
        "id": 168173155,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560547804
    }
]