[
    {
        "content": "<p>Note: This question is quite UCUM-specific, but also could have \"what do we want?\" implications for implementers, so I hope it's considered on-topic. If not let me know.</p>\n<p>I have been looking into UCUM Gaps- where units are in use in UK Pathology practice that don't appear to be expressible in UCUM. There is one type that raises some interesting questions.</p>\n<p>We have labs reporting results in units of      <strong>log(copies) / L</strong>     This particular unit is used in situations like reporting viral load in infectious diseases. There are other situations where the log of a measured value is used, drug overdose tests being one I believe.</p>\n<p>A user/implementer can't create a logarithmic unit  in a UCUM expression. UCUM can handle logarithmic units (e.g. Bel, dBel) but they have to be defined as \"special\" unit atoms in the core UCUM data file (ucum essence.xml), by the Regenstrief  / UCUM team.</p>\n<p><strong>copy</strong> or <strong>copies</strong> is one of the infinite set of countable items whose unit/dimension is \"1\", so if we were to ask Regenstrief for a <strong>[log_copies]</strong> unit atom, we would also potentially and up asking for <strong>[log_redbloodcells]</strong>, <strong>[log_whitebloodcells]</strong>, <strong>[log_basepairs]</strong> etc. ad infinitum.</p>\n<p>It seems to me the better option would be to see if either one or two general-purpose logarithmic unit atoms could be defined in UCUM.</p>\n<p>I believe a unit of the form <strong>[log_number]</strong> (where \"number\" implies an integer (countable) value was fed to the log(10) calculation)</p>\n<p>and potentially-</p>\n<p><strong>[log_amount]</strong>    where \"amount\" allows for any (positive) real number (a double in reality?) as the value</p>\n<p>Would allow any dimensionless quantity (where the dimension of the starting value is 1) to be expressed.</p>\n<p>I must admit i'm not sure if this approach can be extended to values of non-Unity dimension (e.g. \"moles per litre\"), my maths rather runs out of puff at that point.</p>\n<p>I'd be interested in views/comments. Are other countries / disciplines using logarithmic results, and if so how are you implementing them?</p>",
        "id": 253635211,
        "sender_full_name": "Colin E.",
        "timestamp": 1631819681
    },
    {
        "content": "<p>I'm not familiar with units like this. But I can see the underlying rationale. On the other hand, the conversion maths sounds a bit scary once it mixes in with other units  (btw <span class=\"user-mention\" data-user-id=\"193853\">@Swapna Abhyankar</span> )</p>",
        "id": 253636148,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631820079
    },
    {
        "content": "<p>I'm no great shakes as a software developer myself, so i'm cautious about making claims about what would be easy vs. hard to implement, but the logic seems straightforward.</p>\n<p>in UCUM non- ratio scale units are implemented by having a pair of mapping functions defined, so the user-side unit (U) is transformed into a ratio scale equivalent (U'), the required conversions and calculations are done in \"ratio space\" using U', and then the result is converted back to the original non-ratio scale U using the inverse mapping function. In this case the mapping functions would be 10^x and log10(x)</p>\n<p>That all sounds reasonable. What I don't know is, from an implementation perspective, whether keeping track of an incoming value that came in as the log of a value (which is itself just a number) and was then mapped to a different number (=10^value) for internal calculation purposes would make it hard to keep track of the \"logginess\" of the value for re-conversion of the return value. That would need someone with knowledge of the internal workings of one or more of the s/w implementations to comment I think.</p>",
        "id": 253956394,
        "sender_full_name": "Colin E.",
        "timestamp": 1632069601
    },
    {
        "content": "<p>As an extension to this idea, if Regenstrief were prepared to countenance the creation of <strong>{log_number]</strong> and <strong>[log_amount]</strong> type units (denoting integer and real dimensionless values respectively) then it would seem resonable to propose creating units of<strong> [number]</strong> and <strong>[amount]</strong> as well.</p>\n<p>I'm thinking these might satisfy the desire to put SOMETHING in the units field, as people seem to shy away from the unit \"1\" which is formally the proper unit for dimensionless values. Meanwhile we could get off the slippery slope implied by the units already in UCUM of [CFU] and [PFU], which are themselves just alternate names for \"1\", but seem to imply to possibility for naming every possible countable value with its own unit.</p>",
        "id": 253964247,
        "sender_full_name": "Colin E.",
        "timestamp": 1632077799
    },
    {
        "content": "<p>I maintain the formal test cases and the java reference implementation so I'm kind of interested in the implementation question.</p>",
        "id": 253976507,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1632090796
    }
]