[
    {
        "content": "<p>Hi all,</p>\n<p>According to the spec (<a href=\"https://www.hl7.org/fhir/subscription.html#2.46.6.1\" target=\"_blank\" title=\"https://www.hl7.org/fhir/subscription.html#2.46.6.1\">https://www.hl7.org/fhir/subscription.html#2.46.6.1</a>), a FHIR server may send the complete resource content as the HTTP POST body to the REST hook endpoint directly when the “payload” field of the subscription is set. </p>\n<p>We are concerned that sending full resource content to an endpoint URL may introduce unwanted risk to the ePHI. In our case, we check authentication and authorization when interacting with subscription resources, but we cannot guarantee the security of the subscribed endpoint. For example, if we validate domain ownership when the subscription is created, it’s still possible that ownership of the endpoint URLs might change and thus leak sensitive information.</p>\n<p>We would like to propose an option to include only the resource type and resource Id in the body; API consumers could then issue a GET request to get the content of the resource after receiving the subscription. This proposal adds an additional API call but avoids leaking additional sensitive information and helps enforce authorization and authentication logic against the FHIR server.</p>\n<p>Thanks,</p>\n<p>Da</p>",
        "id": 154015776,
        "sender_full_name": "Da Huang",
        "timestamp": 1541455633
    },
    {
        "content": "<p>Seems sane - but if it is to be altered/extended/changed it might be worth the trouble to have a look if other fields would be worth exposing - all in control of the client creating the subscription by pointing out the wanted fields using FHIRPath expression as part the url- <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> ?</p>",
        "id": 154015799,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1541464970
    },
    {
        "content": "<p>that's why we say that servers might not allow this at all, or only allow it to whitelisted servers - see <a href=\"http://build.fhir.org/subscription.html#safety\" target=\"_blank\" title=\"http://build.fhir.org/subscription.html#safety\">http://build.fhir.org/subscription.html#safety</a></p>",
        "id": 154015839,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1541486488
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> while all kind of distribution of information in some perspective can be considered a security risk, would you classify the distribution a resource ID and resource type a security risk?</p>",
        "id": 154015864,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1541500303
    },
    {
        "content": "<p>Risk is one of those things that does not have a TRUE/FALSE answer.  There is little risk if the resource ID is appropriately created. But yes if there is a pattern to the GUID that exposes some information, then the risk is higher.</p>",
        "id": 154015895,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541510274
    },
    {
        "content": "<p>And if the id is a social security number or other well known real-world resource, the risk would be quite high indeed (which is one of the many reasons why real-world ids shouldn't be used for resource ids...)</p>",
        "id": 154015912,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1541513107
    },
    {
        "content": "<p>Or if you've built your subscription in a way that makes that notification itself give away PHI</p>",
        "id": 154015919,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1541515245
    },
    {
        "content": "<p>EG: subscribe to positive HIV results for patients... (again, servers may not allow this)</p>",
        "id": 154015920,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1541515283
    },
    {
        "content": "<p>Thanks. In our case, the resource ID is a random UUID.</p>",
        "id": 154015929,
        "sender_full_name": "Da Huang",
        "timestamp": 1541517306
    },
    {
        "content": "<p>I think the key thing we're trying to guard against is the case where domain ownership changes (for whatever reason) and thus a payload gets sent to an invalid entity. It's clear that server users want to receive some data (e.g. to support monitoring apps) and receive notifications for one or more subscriptions on a single endpoint so we'd like to support populated payloads. At the same time, we're trying to limit the risk of what's exposed -- e.g. by masking the payload to id/type. It's not perfect -- as others have mentioned -- but it helps de-risk the operation. (Perhaps masking with FHIRPath would be the way to go?) If someone created an endpoint like <a href=\"https://.../update-when-john-has-hiv\" target=\"_blank\" title=\"https://.../update-when-john-has-hiv\">https://.../update-when-john-has-hiv</a> it would clearly leak phi under a lot of logging/domain transfer scenarios.</p>",
        "id": 154015950,
        "sender_full_name": "Kurt Ericson",
        "timestamp": 1541526858
    },
    {
        "content": "<p>There are subscription types that don't leak any information in the notification. If you are concerned about the risk that rest-hook presents, then use websockets, which is client initiated connection with only a ping.</p>",
        "id": 154015966,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541529846
    },
    {
        "content": "<p>Another risk that we have not talked about is that the resource ID is a unique identifier that will show up in many places. link all those places together and you start to create a re-identification risk. This has been mentioned in the FHIR spec, most specifically on <a href=\"http://build.fhir.org/person.html#security\" target=\"_blank\" title=\"http://build.fhir.org/person.html#security\">http://build.fhir.org/person.html#security</a>  and also the Security page <a href=\"http://build.fhir.org/security.html#SecPrivConsiderations\" target=\"_blank\" title=\"http://build.fhir.org/security.html#SecPrivConsiderations\">http://build.fhir.org/security.html#SecPrivConsiderations</a></p>",
        "id": 154015967,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541529968
    },
    {
        "content": "<p>Even with rest-hook, the resource server calling the rest-hook endpoint should be validating the TLS server identity. Following IETF Best Current Practice for TLS (BCP195) it would also be confirming the Server Name Indication <a href=\"https://tools.ietf.org/html/bcp195#section-3.6\" target=\"_blank\" title=\"https://tools.ietf.org/html/bcp195#section-3.6\">https://tools.ietf.org/html/bcp195#section-3.6</a>... So the risk of domain ownership change is mitigated by good TLS (https) use. I would recommend a resoruce server not accept a rest-hook subscription that is not using a secured endpoint.</p>",
        "id": 154015970,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541531436
    },
    {
        "content": "<p>I have identified this gap in explanation of rest-hook security risk in <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19621\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19621\">GF#19621</a></p>",
        "id": 154015972,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541531831
    },
    {
        "content": "<p>I think the question becomes: does the endpoint nominated by the user who has proved his/her authentication and authorization of the FHIR API automatically gets the authentication and authorization to receive FHIR resource content? I think the answer should be NO in most cases. Domain ownership change is only one of the potential problems, and I am afraid there are more other hidden security issues.</p>\n<p>As a secure FHIR API, I think it should always check the user(endpoint)’s authentication and authorization before sending data out.</p>",
        "id": 154015998,
        "sender_full_name": "Da Huang",
        "timestamp": 1541535914
    },
    {
        "content": "<p>For the domain ownership change problem, it looks to me the solution requires the FHIR server to remember the TLS certificate of the endpoint when the subscription is created or updated, which sounds over complicated.</p>",
        "id": 154016009,
        "sender_full_name": "Da Huang",
        "timestamp": 1541538091
    },
    {
        "content": "<p>Certificate pinning is what you are describing. It is an additional best practice. What Server Name Indication checks is that the site identified in the certificate (the certifcate was previously validated algorithmically and does chain to a trusted root) is the site you were attempting to connect to.</p>",
        "id": 154016015,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541539866
    },
    {
        "content": "<p>Sorry, I don’t quite understand how can Server Name Indication solve the domain lapse problem. I think certificate spinning could also not guarantee the owner of the endpoint always have the authentication and authorization to read resource content. A system that tries to tie endpoint control to data ownership is going to be brittle and seems especially problematic for PHI. Besides, there are certificates (e.g., Let's Encrypt) that change every 60-90 days, which makes (leaf) certificate spinning not practical to implement.</p>\n<p>In addition, pushing resource content to an endpoint may cause authorization/permission issues, for example, the user who creates the subscription resource does not necessarily have the permission to read the resource content that is going to be pushed to the endpoint. Besides, the permission/role of the user could also change in time, which makes the FHIR server hard to check whether the endpoint has the right permission to receive the resource content. </p>\n<p>All the above problems could be solved by just sending some (well created) pointer (e.g., resource ID) in the notification, and let the endpoint do another request to FHIR server with proper authentication and authorization check.</p>",
        "id": 154016709,
        "sender_full_name": "Da Huang",
        "timestamp": 1541691386
    },
    {
        "content": "<p>indeed, which is why you can say not to send the payload</p>",
        "id": 154016837,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1541702559
    },
    {
        "content": "<p>I wonder if there is room for a proposal about some kind of middle-ground between send nothing (no payload) and send everything (the full resource). Clearly not intended for R4. :) I think we'd like to find a way to, long-term, have something in the middle too, even if just  id and resourceType (or perhaps flexible like a resource mask with FHIRpath defined at subscription-time). Is that kind of idea something we could detail further and propose?</p>",
        "id": 154016853,
        "sender_full_name": "Kurt Ericson",
        "timestamp": 1541706069
    },
    {
        "content": "<p>sure. a profile? or _elements?</p>",
        "id": 154016990,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1541725003
    },
    {
        "content": "<p>So depending on your subscription needs and how long-lived they are ... - ain't this possible with the current design omitting payload? If you as the client create the subscription you are also in control of the endpoint. Since you can define the endpoint (and let that eg. end on something unique that you define - something session-like) AND you define the criteria and thereby the return type, you effectively know at the time the subscription triggers your client endpoint what the type is. Now, it is correct that you still do not know the resource ID, but that is found reissusing the &amp;_since=:last as described in the documentation. This would at least get you half the way</p>",
        "id": 154017249,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1541794461
    }
]