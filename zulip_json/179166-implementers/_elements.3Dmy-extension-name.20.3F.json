[
    {
        "content": "<p>Hi</p>\n<p>This topic is analog to <a href=\"#narrow/stream/4-implementers/topic/Extensions.20when.20_summary.3Dtrue.3F\" title=\"#narrow/stream/4-implementers/topic/Extensions.20when.20_summary.3Dtrue.3F\">https://chat.fhir.org/#narrow/stream/4-implementers/topic/Extensions.20when.20_summary.3Dtrue.3F</a><br>\nbut focused on _elements (and not _summary) </p>\n<p>Is there a specification on how to get extensions from a \"Search\" API call ? Right now AFAIK there is only a way<br>\nto fetch official elements.</p>\n<p>Thanks</p>",
        "id": 153963830,
        "sender_full_name": "natus",
        "timestamp": 1526892772
    },
    {
        "content": "<p>right. we don't have a way to do that</p>",
        "id": 153963831,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526893921
    },
    {
        "content": "<p>First of all, is there a convention for name of the extensions (from there <a href=\"https://www.google.com/url?q=https%3A%2F%2Fwww.hl7.org%2Ffhir%2Fextensibility-registry.html&amp;sa=D&amp;sntz=1&amp;usg=AFQjCNES0M0fNNXxWfNT1xlXBFeoZY-S5g\" target=\"_blank\" title=\"https://www.google.com/url?q=https%3A%2F%2Fwww.hl7.org%2Ffhir%2Fextensibility-registry.html&amp;sa=D&amp;sntz=1&amp;usg=AFQjCNES0M0fNNXxWfNT1xlXBFeoZY-S5g\">https://www.google.com/url?q=https%3A%2F%2Fwww.hl7.org%2Ffhir%2Fextensibility-registry.html&amp;sa=D&amp;sntz=1&amp;usg=AFQjCNES0M0fNNXxWfNT1xlXBFeoZY-S5g</a>)<br>\nI can see that the <code>id</code> of the extension may be camel case or dash case. Then coming to the <code>name</code> of the extension it can also get space separated word.</p>\n<p>When one want to implement a search predicate (say for extension id = \"patient-mothersMaidenName\" there is no consensus on what he should use : <code>Patient?mothersMaidenName:exact=Grieve</code>OR <code>Patient?mothers-maiden-name:exact=Grieve</code> .<br>\nIf there were a rule on that, then it would be easy to extend the way to fetch the extension with elements just by using that:</p>\n<p><code>Patient?mothers-maiden-name:exact=Grieve&amp;_elements=mothers-maiden-name</code></p>",
        "id": 153963837,
        "sender_full_name": "natus",
        "timestamp": 1526898733
    },
    {
        "content": "<p>Convention wouldn't fix the issues as there's no guarantee of uniqueness.  To support filtering extensions using elements, we'd need to be able to specify the URL.</p>",
        "id": 153963842,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1526909420
    },
    {
        "content": "<p>Does this mean searching by extension is also not standard right now ? (it would need to use the URL too)<br>\n<code>Patient?mothers-maiden-name=McKenzie</code> is not standard ?</p>",
        "id": 153963844,
        "sender_full_name": "natus",
        "timestamp": 1526910012
    },
    {
        "content": "<p>Searching is ok because you can define your own custom SearchParameter instance and in your CapabilityStatuement you define what search string corresponds to a particular SearchParameter url on your server</p>",
        "id": 153963845,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1526910300
    },
    {
        "content": "<p>So what about passing the url in the query ? Why is this solution not in the spec ?</p>",
        "id": 153963848,
        "sender_full_name": "natus",
        "timestamp": 1526910720
    },
    {
        "content": "<p>Filtering using 'elements' is already somewhat of an edge case and isn't widely implemented.  You're the first person who's asked for the ability to filter on extensions too.  Feel free to submit a change proposal (use the 'propose a change' link at the bottom of any page in the spec).</p>",
        "id": 153963849,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1526911231
    },
    {
        "content": "<p>Grahame Grieve: just you don't search by path in the resource, you don't search by extension url either. The server defines what you can search by by defining parameters and preparing for them to be searchable somehow</p>\n<p>Grahame Grieve: you can search on extensions by defining parameters the way you define extensions - I'm not sure what else you are looking for</p>",
        "id": 153963857,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526916529
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  search based on extension is ok. <br>\n<code>_elements=</code> based on extension is not.</p>\n<p>The main problem is to make something ok for the network. I do not wan't to share the whole resource with jpeg, pdf and  all stuff over the network each time a client ask for an extension. </p>\n<p>I d'like to be able to choose the element I need, and the elmenet might be an extension, that shouldn't matter</p>\n<p>Am I wrong ?</p>",
        "id": 153963861,
        "sender_full_name": "natus",
        "timestamp": 1526916951
    },
    {
        "content": "<p>FHIR is designed to return resources, not individual elements.  If that's too heavy, then returning the \"summary\" view gives something much lighter.  Filtering a list of elements is a further (and rarer) exception.  And the intention there is you'd return many elements.  FHIR is not really set up to allow you to query one field at a time - at least not efficiently.</p>",
        "id": 153963863,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1526917100
    },
    {
        "content": "<p>there's always graphQL - see <a href=\"http://build.fhir.org/graphql.html\" target=\"_blank\" title=\"http://build.fhir.org/graphql.html\">build.fhir.org/graphql.html</a></p>",
        "id": 153963864,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526917145
    },
    {
        "content": "<blockquote>\n<p>FHIR is designed to return resources, not individual elements</p>\n</blockquote>\n<p>The <code>_elements</code> allows to choose some individual elements by design. It allows both network and database backend to limit their charge. There is many use case when the client only need an id to then ask to an other resource. I guess FHIR without the _elements ability is something not viable from an implementation perspective and would lead to unoptimized systems and global warming.</p>\n<blockquote>\n<p>there's always graphQL</p>\n</blockquote>\n<p>Well .. graphQL is not FHIR, it is an other paradigm.</p>\n<p>The point is it is right now feasible to make use of this:</p>\n<p><code>Patient?identifier=123&amp;_elements=id,extension</code></p>\n<p>However, it would return all extensions defined in the profile. What I d'like to come with is something that would allow:<br>\n<code>Patient?identifier=123&amp;_elements=id,extension,mother-maiden-name</code><br>\nThis is also feasible with HAPI-FHIR, just not standard from your answers </p>\n<p>Thanks</p>",
        "id": 153963866,
        "sender_full_name": "natus",
        "timestamp": 1526917595
    },
    {
        "content": "<p>GraphQL is a defined mechanism for querying FHIR</p>",
        "id": 153963868,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1526917740
    },
    {
        "content": "<p>right. we've discussed the limitations of the _elements approach before - it has many . When we discussed it, and realised that we needed a better language, we decided that  the right answer is not to invent our own language when a good one already exists. Hence, graphql</p>",
        "id": 153963869,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526917743
    },
    {
        "content": "<p>you can certainly do what you're suggesting, but I'm sceptical that it will get added to the spec</p>",
        "id": 153963871,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526917791
    },
    {
        "content": "<p>I will take a deeper look into graphql. My thought was it is not yet implemented anywhere, or very mature. Isn'it ?<br>\nThanks</p>",
        "id": 153963872,
        "sender_full_name": "natus",
        "timestamp": 1526917855
    },
    {
        "content": "<p>it's implemented on my server, and on HAPI, and it's fairly mature in itself. but I agree that the use of graphQL on FHIR is not widely adopted</p>",
        "id": 153963873,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526917906
    },
    {
        "content": "<p>On a slightly different, but still related topic, is there a way to do a search and indicate to the server that you only want the elements that are defined in a profile?  Is that implied in the _profile search parameter?</p>",
        "id": 153963874,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1526918000
    },
    {
        "content": "<p>no it's not implied. and there's currently no way to specify that, though <span class=\"user-mention\" data-user-id=\"191351\">@Chris Grenz</span> has done it before</p>",
        "id": 153963875,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526918074
    },
    {
        "content": "<p>anyway I hope to come back here with good insight on how graphQL will handle that usecase. Thanks again for your answers.</p>",
        "id": 153963877,
        "sender_full_name": "natus",
        "timestamp": 1526918681
    }
]