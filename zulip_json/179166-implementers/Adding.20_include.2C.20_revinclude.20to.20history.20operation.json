[
    {
        "content": "<p><a href=\"http://jira.hl7.org/browse/FHIR-32367\">FHIR#32367</a> proposes adding support for _revinclude and _include to allow retrieving Provenance and possibly Provenance-associated entities (e.g. Practitioner) back with the history items so the recipient wouldn't need to invoke separate queries for each to see who had made the change, why, etc.  Feedback from the community is welcome.</p>",
        "id": 254801806,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1632538754
    },
    {
        "content": "<p>This sounds cool</p>",
        "id": 257399450,
        "sender_full_name": "Brendan Keeler",
        "timestamp": 1634143977
    },
    {
        "content": "<p>and useful</p>",
        "id": 257399457,
        "sender_full_name": "Brendan Keeler",
        "timestamp": 1634143981
    },
    {
        "content": "<p>Didn't get a whole lot of response (thanks <span class=\"user-mention\" data-user-id=\"200498\">@Brendan Keeler</span> for at least providing one :&gt;).  Pinging to see if we can get some more feedback before FHIR-I makes a decision on whether this would be a good thing to add.</p>",
        "id": 263927259,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1638826198
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> <span class=\"user-mention\" data-user-id=\"193430\">@Alexander Zautke</span> <span class=\"user-mention\" data-user-id=\"197072\">@Paul Church</span> <span class=\"user-mention\" data-user-id=\"191318\">@nicola (RIO/SS)</span> <span class=\"user-mention\" data-user-id=\"191676\">@Lee Surprenant</span> <span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span> <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> - please respond to this one too</p>",
        "id": 263937578,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1638831896
    },
    {
        "content": "<p>I'm not against it, but don't see it as being used that often.<br>\nI'd normally expect that you'd already have the initial content and then going back to review history, at which point you'd likely only be wanting to grab the stuff you don't already have.<br>\nAnd these would be usually current versions of the referenced resources, not the version at the time that instance was grabbed - so may not be what you were after either.<br>\nWould want to think more about the use cases and if this is really the data that you would want to be getting back.</p>",
        "id": 263942543,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1638835565
    },
    {
        "content": "<p>We should think twice before \"searchable history\". This feature looks so attractive,  but i fill it's a trap ;) Looks like Provenance is from \"meta\" world, i.e. not an ordinary resource.  I'm definitely against  including other resources than Provenance. For me specialized parameter aka _with_provenance would be more appropriate.</p>",
        "id": 263945200,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1638837737
    },
    {
        "content": "<p>I don't think it's implying additional search on history, I think it's just grab other stuff along with the history content (not changing the core of the request at all)</p>",
        "id": 263950081,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1638842357
    },
    {
        "content": "<p>(and I too would be against further extending the \"searchable\" part of history)</p>",
        "id": 263950100,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1638842391
    },
    {
        "content": "<p>it has a subtle difficulty that is pretty important - search doesn't work on history; you'd get back the current resources for the agents. That could be problematic</p>",
        "id": 263950897,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1638843170
    },
    {
        "content": "<p>or not</p>",
        "id": 263950898,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1638843172
    },
    {
        "content": "<p>I'd be fine with limiting it to Provenance - though the Practitioners, Devices, Organizations, etc. that the Provenance points to could also be useful.</p>",
        "id": 263954189,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1638847298
    },
    {
        "content": "<p>What is the use case for _history with provenance - Audit?</p>",
        "id": 263957714,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1638851966
    },
    {
        "content": "<p>When a user wants to look at \"what happened in the past\", they typically want to see \"what changed\" as well as \"who did it and why?\".  History only answers the former question.  You need Provenance for the latter part.</p>",
        "id": 263957816,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1638852106
    },
    {
        "content": "<p>Don't you think,  that good place for this info is resource.meta? :)</p>",
        "id": 263958003,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1638852304
    },
    {
        "content": "<p>Resource.meta isn't the place we store that information.  Provenance is.</p>",
        "id": 263958215,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1638852568
    },
    {
        "content": "<p>Which version of the referenced resource would you get back? The latest / current, or the one that was current at the time the history entry was created?</p>",
        "id": 263964404,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1638859346
    },
    {
        "content": "<p>To me, this doesn't seem so compelling to warrant the additional complexity.<br>\nIf it was added, would we also add a field for it in CapabilityStatement so that clients can determine if its supported?</p>",
        "id": 263996112,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1638881677
    },
    {
        "content": "<p>History returns all versions.  Provenance links to a specific version, so you'd get back the Provenance entry for each version.  We could certainly define an extension to flag it in CapabilityStatement.  (Don't know it would be common enough to justify a core element.)</p>",
        "id": 264007930,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1638886949
    },
    {
        "content": "<p>I lean against adding this capability. I do see the use for it - primarily for Provenance, but maybe other cases like AuditEvent? Or some cases where _include is a useful convenience.</p>\n<p>But this is only a convenience. The client could already call _history, get back the names version1, version2, version3, and then search Provenance?target=version1,version2,version3 as a separate call. Adding include/revinclude further complicates the history API and will open up a hundred little decisions about the details for something that is almost like search but not quite - can you :iterate? where is support for this declared in the capability statement? what happens in various error cases?</p>\n<p>On balance I don't see this as a compelling enough feature to justify tackling all of this complexity.</p>",
        "id": 264040411,
        "sender_full_name": "Paul Church",
        "timestamp": 1638899233
    },
    {
        "content": "<p>Agree with Paul. Batch read requests are another way to let clients control inclusion.</p>",
        "id": 264089500,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1638919827
    }
]