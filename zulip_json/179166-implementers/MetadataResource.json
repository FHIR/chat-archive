[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> what is the 'MetadataResource' for, and why isn't it documented?</p>",
        "id": 153933239,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1517284355
    },
    {
        "content": "<p>It's a tooling artifact that helps us maintain consistency across a bunch of the infrastructure resources more easily.  It appears in the source, but not in the published build.</p>",
        "id": 153933248,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1517285394
    },
    {
        "content": "<p>FYI, not documenting it makes life more difficult for people trying to use the definitions for code generation</p>",
        "id": 153933255,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1517285595
    },
    {
        "content": "<p>hmm. where did you run into it?</p>",
        "id": 153933258,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517285639
    },
    {
        "content": "<p>I'm refining my code generation tools for Ruby and happened to notice it.</p>",
        "id": 153933260,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1517285738
    },
    {
        "content": "<p>I think you should generally ignore it</p>",
        "id": 153933263,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517285813
    },
    {
        "content": "<p>I can't really or several resources would be missing attributes that appear in the spec.</p>",
        "id": 153933266,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1517285851
    },
    {
        "content": "<p>that definitely should not be the  case. what attributes?</p>",
        "id": 153933267,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517285900
    },
    {
        "content": "<p>If I don't account for it in my code generation tools then all the attributes that appear on MetadataResource (like <code>experimental</code>, <code>publisher</code>, <code>status</code>) don't show up.</p>",
        "id": 153933268,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1517286051
    },
    {
        "content": "<p>It's easy for me to do in ruby, however, since I can just mixin that resource.</p>",
        "id": 153933269,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1517286090
    },
    {
        "content": "<p>Are you generating code from the source or from the published structure definitions?  The latter should have it.  The former is super dangerous to rely on...</p>",
        "id": 153933273,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1517287403
    },
    {
        "content": "<p>Getting them from here... <a href=\"http://hl7.org/fhir/2018Jan/definitions.json.zip\" target=\"_blank\" title=\"http://hl7.org/fhir/2018Jan/definitions.json.zip\">http://hl7.org/fhir/2018Jan/definitions.json.zip</a></p>",
        "id": 153933279,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1517287594
    },
    {
        "content": "<p>this is because they're not shown on the actual resources? surely not?</p>",
        "id": 153933298,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517289117
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> It looks like there are a lot of resources that use the MetadataResource extension but still have all of the same elements defined (e.g. CapabilityStatement, ActivityDefinition, etc...) .  The only difference I see is that the <code>short</code> and <code>definition</code> elements of those resources' reference the name of the resource.  If I understand how you are using this, it might be possible to alter the <code>short</code> and <code>definition</code> texts to just say something like <code>Logical URI to reference this resource (globally unique)</code>.  This would let you remove the duplicate sections from all the other resources and keep the definition in one place without substantially altering the descriptions.</p>",
        "id": 153934548,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1517497854
    },
    {
        "content": "<p>there's deeper differences than that. And we didn't want to have abstract descriptions like that. The descriptions differ by more than that too</p>",
        "id": 153934556,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517498290
    },
    {
        "content": "<p>ok, then why include the MetadataResource in those resources at all if you are just going to override them?</p>",
        "id": 153934557,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1517498355
    },
    {
        "content": "<p>it's a way of enforcing as much consistency as we can without having it completely (since we can't)</p>",
        "id": 153934560,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517498519
    },
    {
        "content": "<p>Does your tooling do something special in this case or does redefining the elements in the resource effectively ignore the ones in the MetadataResource?</p>",
        "id": 153934562,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1517498636
    },
    {
        "content": "<p>metadataresource is just a template of a resource. you can override anything in the actual resource</p>",
        "id": 153934563,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517498906
    },
    {
        "content": "<p>What's the story with MetadataResource?  It's structure definition exists in the resources bundle but there's no page at <a href=\"http://hl7.org/fhir/StructureDefinition/MetadataResource\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/MetadataResource\">http://hl7.org/fhir/StructureDefinition/MetadataResource</a> and there's no corresponding ResourceTypeCode</p>",
        "id": 178409303,
        "sender_full_name": "Nick George",
        "timestamp": 1571337739
    },
    {
        "content": "<p>hmm I see the old discussion - have similar issue, that code-genning on all resources makes metadataresource cause problems.  Maybe just drop it from the resources bundle?</p>",
        "id": 178409420,
        "sender_full_name": "Nick George",
        "timestamp": 1571337837
    },
    {
        "content": "<p>something to consider anyway, not a big deal one way or the other</p>",
        "id": 178409616,
        "sender_full_name": "Nick George",
        "timestamp": 1571337942
    },
    {
        "content": "<p>we need to so something with it so it's not a special case. But I think that the reference libaries use it extensively, so it's not going to go away</p>",
        "id": 178423596,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1571347891
    }
]