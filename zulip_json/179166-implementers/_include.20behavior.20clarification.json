[
    {
        "content": "<p>Can a search using the  <code>_include</code> return either :<br>\n 1. a bundle with the  target resource and the included resource<br>\n 2.  the target resource with the included resources as contained resources?  (I was not able to find a reference to this behavior in the spec)</p>",
        "id": 153844315,
        "sender_full_name": "Eric Haas",
        "timestamp": 1471536351
    },
    {
        "content": "<p>e..g.</p>\n<p>GET [base]/MedicationOrder?_include=MedicationOrder:patient&amp;criteria...</p>",
        "id": 153844316,
        "sender_full_name": "Eric Haas",
        "timestamp": 1471536455
    },
    {
        "content": "<p>_include doesn't make any difference to the contained resources</p>",
        "id": 153844332,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471547618
    },
    {
        "content": "<p>#1 - the search returns a bundle. I'm not sure what you're asking</p>",
        "id": 153844333,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471547634
    },
    {
        "content": "<p>What if a server stores the Practitioner.role.endpoint as a contained resource. If a query with _include is sent, is it acceptable to return as contained?</p>",
        "id": 153844345,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1471549682
    },
    {
        "content": "<p>if you're returning the practitioner, you have to return the contained resource whether it's in the _include or not</p>",
        "id": 153844346,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471549734
    },
    {
        "content": "<p>Agreed. </p>",
        "id": 153844347,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1471549789
    },
    {
        "content": "<p>Let me try again.  can you return the referenced resource as contained resource in the  target resource  (container resource) instead of as a bundle?  I/e add the contained stuff to the resource in response to the query?</p>",
        "id": 153844352,
        "sender_full_name": "Eric Haas",
        "timestamp": 1471550389
    },
    {
        "content": "<p>If the contained stuff is already there then the _include doesn't matter.  I get that.</p>",
        "id": 153844353,
        "sender_full_name": "Eric Haas",
        "timestamp": 1471550460
    },
    {
        "content": "<p>but say I don't care about the Medication then all I want is medicationstatement.    But then I do care so i add the  _include and the medication is contained in medicationstatement.  Is that clearer?</p>",
        "id": 153844354,
        "sender_full_name": "Eric Haas",
        "timestamp": 1471550573
    },
    {
        "content": "<p>No -- That's not part of the specification for how <code>_include</code> currently works.</p>",
        "id": 153844355,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1471550586
    },
    {
        "content": "<p>I mean, your question is clear, but the reason  you're looking for this behavior is not clear. Can you help explain the use case where <code>?_include=...</code>is failing you?</p>",
        "id": 153844356,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1471550621
    },
    {
        "content": "<p>Thanks that was my understanding.... The PD folks were discussing this behavior for endpoint.  But I'll let Brett chime in here.  I am interested to see if a need exists.  </p>",
        "id": 153844357,
        "sender_full_name": "Eric Haas",
        "timestamp": 1471550727
    },
    {
        "content": "<p>Use case: Server always contains Enpoint within Practitioner</p>",
        "id": 153844358,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1471552505
    },
    {
        "content": "<p>If you submit a _include query, do I have to move that resource out as a referenced resource</p>",
        "id": 153844359,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1471552539
    },
    {
        "content": "<p>No, you *can't*</p>",
        "id": 153844367,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471557075
    }
]