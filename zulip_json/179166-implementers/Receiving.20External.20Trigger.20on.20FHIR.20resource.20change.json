[
    {
        "content": "<p>We have an external application (server) which requires to perform a procedure based on a newly added or modified FHIR resource.<br>\nHow do servers outside the FHIR server be notified of such a change. We found <a href=\"http://hl7.org/fhir/trigger-type\" target=\"_blank\" title=\"http://hl7.org/fhir/trigger-type\">http://hl7.org/fhir/trigger-type</a>  which seems close to our needs. Details on how to set and receive trigger seems to be missing.<br>\nAny pointers are appreciated.</p>",
        "id": 153913912,
        "sender_full_name": "Sanjay Chadha",
        "timestamp": 1508006222
    },
    {
        "content": "<p>That code system is used by the TriggerDefinition data type which is currently used by EventDefinition, PlanDefinition and ServiceDefinition</p>",
        "id": 153913922,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1508013230
    },
    {
        "content": "<p>EventDefinition may be used by subscriptions, message definitions and potentially other things</p>",
        "id": 153913923,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1508013270
    },
    {
        "content": "<p>Explore those and see if your needs are met, if not, provide more details about what you're looking for.  This area of the spec is fairly immature, so it wouldn't be terribly surprising if we were missing something.</p>",
        "id": 153913924,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1508013322
    },
    {
        "content": "<p>Maybe a bit hidden in Lloyds answer is that Subscription is the primary way to address this. Or simply poll frequently for changes with the <a href=\"http://www.hl7.org/implement/standards/fhir/http.html#history\" target=\"_blank\" title=\"http://www.hl7.org/implement/standards/fhir/http.html#history\">history</a> interaction on system or resourcetype level.</p>",
        "id": 153914037,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1508145306
    },
    {
        "content": "<p>In the Clinical Meteor release track of the Meteor.js framework, we use the <code>matb33/meteor-collection-hooks</code> package to kick off subsequent pipelines.  The syntax looks like <code>Patients.after.insert(function(userId, doc){...})</code> and <code>`Patients.before.update(function(userId, doc){...})</code> and so forth.  We'll write to the HIPAA log, kick off processing scripts, and do denormalization in those functions.  </p>\n<p>We also support the pub/sub data distribution protocol (DDP) which supports subscriptions over websockets.</p>",
        "id": 153914153,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1508182510
    },
    {
        "content": "<p>Thanks for your comments. After research starting from Lloyd's reply this is what I found:<br>\nCDS Hooks is a solution which addresses our requirements - There is a good quorum of experts backing this concept - much effort has gone into CDS hooks and its seems a promising direction:</p>\n<p>CDS Hooks Wiki Page: <a href=\"http://wiki.hl7.org/index.php?title=201701_CDS_Hooks\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=201701_CDS_Hooks\">http://wiki.hl7.org/index.php?title=201701_CDS_Hooks</a><br>\nCDS Hooks page: <a href=\"http://cds-hooks.org\" target=\"_blank\" title=\"http://cds-hooks.org\">http://cds-hooks.org</a><br>\nCDS Git Hub: <a href=\"https://github.com/cds-hooks\" target=\"_blank\" title=\"https://github.com/cds-hooks\">https://github.com/cds-hooks</a><br>\nCDS Proposed Hooks: <a href=\"https://github.com/cds-hooks/docs/wiki/Proposed-Hooks\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/wiki/Proposed-Hooks\">https://github.com/cds-hooks/docs/wiki/Proposed-Hooks</a></p>\n<p>Here is what we would like to add (although I can add, I do not have enough knowledge to do this right), hence we need hand holding:</p>\n<p>Request to add to Proposed Hooks page (<a href=\"https://github.com/cds-hooks/docs/wiki/Proposed-Hooks\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/wiki/Proposed-Hooks\">https://github.com/cds-hooks/docs/wiki/Proposed-Hooks</a>)</p>\n<p>procedure-request-create <br>\nPurpose: This hook informs an external CDS service that the clinician has created a procedure request. The CDS service schedules procedures to performed based on the created procedure request.<br>\nContextual data: Required Patient, procedure request being created.<br>\n{<br>\n  \"name\": \"context\",<br>\n  \"resource\": procedurerequest/123<br>\n}</p>\n<p>procedure-request-modify (this should include delete) <br>\nPurpose: This hook informs an external CDS service that the clinician has modified a procedure request. The CDS service modifies the scheduled procedures based on the modified procedure request.<br>\nContextual data: Required Patient, procedure request being created.<br>\n{<br>\n  \"name\": \"context\",<br>\n  \"resource\": procedurerequest/123; <br>\n}</p>\n<p>Abigail - I was not able to locate - matb33/meteor-collection-hooks. Is  Meteor's implementation based on CDS Hooks?</p>\n<p>Thank you for your replies.</p>",
        "id": 153914668,
        "sender_full_name": "Sanjay Chadha",
        "timestamp": 1508345518
    }
]