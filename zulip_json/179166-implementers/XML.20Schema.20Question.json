[
    {
        "content": "<p>I was looking around at the spec the other day and noticed that <code>StructureDefinition.snapshot.element</code> is an <code>ElementDefinition</code> (nothing new in that) which inherits from <code>Element</code> (which also may not be new, but I'd not picked up on it before).  Anyway <code>Element</code> has an <code>id</code> element and so I added IDs to all the elements in my StructureDefinitions and they all immediately failed schema validation because I'd used an (XML) element instead of an (XML) attribute.  This seems to be a deviation from the practice everywhere else and I'm just wondering why?  Wouldn't it be better to be consistent with <code>DomainResource</code>?</p>",
        "id": 153845193,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1472192824
    },
    {
        "content": "<p>in the last 3 years (since it changed to be like this) you're the first person to comment on it </p>",
        "id": 153845194,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472193164
    },
    {
        "content": "<p><a href=\"http://resource.id\" target=\"_blank\" title=\"http://resource.id\">resource.id</a> is important. And we used an element because that's what's done on other XML REST APIs</p>",
        "id": 153845195,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472193207
    },
    {
        "content": "<p>other than that, we had always used attribute for the id since it has the same function as ithe xml id attribute - target of references. </p>",
        "id": 153845197,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472193247
    },
    {
        "content": "<p>That's fine; I was just curious; and, in fact, it did occur to me that actually <code>Resource.id</code> might be the odd one out since I have often wondered why that's an (XML) element instead of an attribute because that's not typical XML schema design.  </p>",
        "id": 153845198,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1472193804
    },
    {
        "content": "<p>and it would be a little odd to reference #id as a subelement of the actual element </p>",
        "id": 153845199,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472193837
    },
    {
        "content": "<p>and <a href=\"http://resource.id\" target=\"_blank\" title=\"http://resource.id\">resource.id</a> is *not* the same in meaning as XML id attribute</p>",
        "id": 153845200,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472193856
    },
    {
        "content": "<p>I don't understand why that is.  Wouldn't it be better to do it that way too?  Or does the ReST thing cause problems then?</p>",
        "id": 153845201,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1472193934
    },
    {
        "content": "<p>that it's meaing is different? </p>",
        "id": 153845202,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472193963
    },
    {
        "content": "<p>Yeah.  It's still just an ID, right?</p>",
        "id": 153845203,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1472193997
    },
    {
        "content": "<p>not in the same sense. it doesn't identify the element. It's an external identifier </p>",
        "id": 153845204,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472194031
    },
    {
        "content": "<p>So why not represent it as an (xml:)id?</p>",
        "id": 153845205,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1472194035
    },
    {
        "content": "<p>because no one else does. and we introduced that specifically to match expectations of simlarity</p>",
        "id": 153845206,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472194067
    },
    {
        "content": "<p>So that depends on what you think the id attribute is; is it the id of the element or is an XML serialisation of id of the concept?</p>",
        "id": 153845207,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1472194108
    },
    {
        "content": "<p>The former is not very useful.</p>",
        "id": 153845208,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1472194150
    },
    {
        "content": "<p>Especially because then 2 serialisation of the same thing in 2 different places need different IDs and that's a huge pain because now you've got to use other data as the ID.</p>",
        "id": 153845209,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1472194241
    },
    {
        "content": "<p>If you actually use <code>xml;id</code>, of course, then you have no choice, but <code>id</code> in your own namespace can be more flexible.</p>",
        "id": 153845210,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1472194324
    },
    {
        "content": "<p>Anyway, it's a moot point, and hardly worth the effort debating; I really was just curious.</p>",
        "id": 153845211,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1472194441
    }
]