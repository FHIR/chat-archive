[
    {
        "content": "<p>Is there anyway that we add loopback/call back  url into the any request, for example post /appointment which requires a bit of processing which then needs to inform the caller. This is differ from sync asynchronous type translations but merely a way that the resource update can be then fed back to the caller</p>",
        "id": 217033789,
        "sender_full_name": "Medi Harsini",
        "timestamp": 1605633644
    },
    {
        "content": "<p>Typically there's either a \"please store\", which is a simple RESTful POST/PUT and the only information to be passed back is \"what it stored, and if so, what's the URL\".; or there's \"please execute\", which is generally handled using Task.  The Task gets updated at various points to indicate process, and sometimes what comes back.  It sounds like your use-case is the latter?</p>",
        "id": 217034411,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1605633894
    },
    {
        "content": "<p>I’m thinking about subscription now, because my case can’t fit task really</p>",
        "id": 217048247,
        "sender_full_name": "Medi Harsini",
        "timestamp": 1605640228
    },
    {
        "content": "<p>There are a whole bunch of approaches to using workflow (which is the process of saying \"please execute\") in the <a href=\"https://build.fhir.org/workflow-communications.html\">core spec</a>.  Most of them use Task because that's the only way to allow communicating yes or no and indicating progress.  However, if you don't need to close the loop at all or the presumed answer is always \"yes\" (at in-band), there are other approaches that can work.</p>",
        "id": 217052446,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1605642360
    },
    {
        "content": "<p>What would you suggest of the latter is the case</p>",
        "id": 217072926,
        "sender_full_name": "Medi Harsini",
        "timestamp": 1605652548
    },
    {
        "content": "<p>Simplest would be the 'tag' approach where you post the 'request' and the filler eventually posts the 'event' with a basedOn link to the 'request'.</p>",
        "id": 217073465,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1605652892
    },
    {
        "content": "<p>Use <code>$process-message</code> ?</p>",
        "id": 217073978,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1605653225
    },
    {
        "content": "<p>That's also possible, but it requires custom implementation on both sides.</p>",
        "id": 217074034,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1605653261
    }
]