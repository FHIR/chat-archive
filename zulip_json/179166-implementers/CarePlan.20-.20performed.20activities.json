[
    {
        "content": "<p>I need to track the date a patient abandoned treatment, and the date the patient was transferred and initiated another careplan.</p>",
        "id": 220771187,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1608713823
    },
    {
        "content": "<ol>\n<li>Why does CarePlan only mention planned activities?  I'd expect it to support unplanned / past activities</li>\n</ol>",
        "id": 220771330,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1608713997
    },
    {
        "content": "<p>By definition it's about future (planned) activities. A planned activity may result in a resource which captures the 'event'. That can be assigned an aborted status. Referrals is a ServiceRequest, which has a date. A new CarePlan also has a date.</p>",
        "id": 220771952,
        "sender_full_name": "Ren√© Spronk",
        "timestamp": 1608714575
    },
    {
        "content": "<p>A CarePlan is not only for future, but also to follow up (at least, it was, until R4)</p>",
        "id": 220773475,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1608715987
    },
    {
        "content": "<p>(this is why the CarePlan is somewhat similar to Taskl in terms of workflow). <br>\nIf something unplanned is added to a patient's care activities, I'd expect the CarePlan to capture that.</p>",
        "id": 220773593,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1608716095
    },
    {
        "content": "<p>in R5 I see a performedActivity where I can indeed put the other activities, but this feels strange and I think i will require several extensions.</p>",
        "id": 220773974,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1608716451
    },
    {
        "content": "<ol start=\"2\">\n<li>Do we  still need CarePlan.activity.plannedActivityDetail.product? If the careplan is to give a medication, or a device, or a nutrition, we should have that covered by now. I don't think we need to repeat that. If I want to order a medication then I'd most likely need a MedRequest anyway, because I need to put dosage etc in there.</li>\n</ol>",
        "id": 220774172,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1608716640
    },
    {
        "content": "<p>(I wouldn't have thought of these issues until I had to implement - it's now my 3rd projects where I see gaps in CarePlan and I want to help make this more mature. We need a good CarePlan)</p>",
        "id": 220774357,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1608716779
    },
    {
        "content": "<p>(unless i'm missing something obvious)</p>",
        "id": 220782380,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1608724616
    },
    {
        "content": "<p>plannedActivityDetail is for when you don't want to break out details into a separate resource.</p>",
        "id": 220795123,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1608735118
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191403\">@Michelle (Moseman) Miller</span> for the question on unplanned activities</p>",
        "id": 220795183,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1608735134
    },
    {
        "content": "<p>By \"unplanned activities\" do you mean \"Interventions Performed\"? Unplanned activities would not exist on a care plan except if it was contraindicated interventions, or goals to not do something. Performed Activities - The PerformedActivity you see in R5 is a more appropriately renamed \"outcomeActivityObervation (I think - need to check JIRA ) can be supported. I recommend NOT using activity detail, as you will ultimately be creating the need of double documentation inside some Care Plan app or module.  Bringing things into the Care Plan by reference providing a holistic view if Care Planning activities else where described is better. Otherwise it is an additional burden. However, it is quite opaque just how FHIR Care Plan CAN do everything a real Care Plan does. I will attach a diagram that should help you</p>",
        "id": 220803605,
        "sender_full_name": "Gay Dolin",
        "timestamp": 1608740985
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/4Q6T25reX2XSkNGQ66LBdZaC/ExampleInstanciatedFHIR_CarePlan_Goal.png\">ExampleInstanciatedFHIR_CarePlan_Goal.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/4Q6T25reX2XSkNGQ66LBdZaC/ExampleInstanciatedFHIR_CarePlan_Goal.png\" title=\"ExampleInstanciatedFHIR_CarePlan_Goal.png\"><img src=\"/user_uploads/10155/4Q6T25reX2XSkNGQ66LBdZaC/ExampleInstanciatedFHIR_CarePlan_Goal.png\"></a></div>",
        "id": 220804360,
        "sender_full_name": "Gay Dolin",
        "timestamp": 1608741474
    },
    {
        "content": "<p>Let me know if you would like to chat. I am curious as to what you are working on. will you be participating in the Care Coordination track @ the upcoming FHIR Connectathon?</p>",
        "id": 220804524,
        "sender_full_name": "Gay Dolin",
        "timestamp": 1608741584
    },
    {
        "content": "<p>BTW - this conversation seem like it would be better in the Care Plan zulip stream: <a href=\"#narrow/stream/220328-Care-Plan.2FCare.20Coordination\">https://chat.fhir.org/#narrow/stream/220328-Care-Plan.2FCare.20Coordination</a></p>",
        "id": 220804628,
        "sender_full_name": "Gay Dolin",
        "timestamp": 1608741641
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191991\">Gay Dolin</span> <a href=\"#narrow/stream/179166-implementers/topic/CarePlan.20-.20performed.20activities/near/220803605\">said</a>:</p>\n<blockquote>\n<p>Unplanned activities would not exist on a care plan except if it was contraindicated interventions, or goals to not do something. </p>\n</blockquote>\n<p>That is what is puzzling. CarePlan could be a request (just for planned activities and follow up), or a \"mixed (request/event)\" workflow resource that tracks the evolution. What it feels is that CarePlan is a mixed workflow resource but only for those tasks that were planned. Care Coordination is not only about planned stuff, I think.</p>",
        "id": 220819613,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1608751594
    },
    {
        "content": "<p>ok I will follow up on the other stream</p>",
        "id": 220819634,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1608751611
    },
    {
        "content": "<blockquote>\n<p>The PerformedActivity you see in R5 is a more appropriately renamed \"outcomeActivityObervation (I think - need to check JIRA ) can be supported</p>\n</blockquote>\n<p>It's just the opposite.  R4's CarePlan.activity.outcomeCodeableConcept and outcomeReference was renamed/merged in R5 to CodeableReference CarePlan.activity.performedActivity as part of a broader change (<a href=\"http://jira.hl7.org/browse/FHIR-26064\">J#26064</a>) related to the clarification of the planned activities (requests) vs performed activities (events).  Additionally, the rename also helps separate the evaluation of what activities were done vs actual outcomes.  Per <a href=\"http://jira.hl7.org/browse/FHIR-28546\">J#28546</a>, we discussed:</p>\n<ul>\n<li>Evaluation - CarePlan.activity.performedActivity</li>\n<li>Actual Outcome - Goal.outcome</li>\n</ul>\n<p>For example, the requested/planned activities might be diet and exercise.  The evaluation of completed activities might be specific to caloric intake or minutes of exercise.  The outcome (for a goal of losing weight) would be the patient's weight observation.  It's possible to complete the activities, but not achieve the desired outcome (or vice versa).</p>\n<p>CC:  <span class=\"user-mention\" data-user-id=\"191991\">@Gay Dolin</span>  <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span></p>",
        "id": 221802036,
        "sender_full_name": "Michelle (Moseman) Miller",
        "timestamp": 1609956977
    },
    {
        "content": "<p>Thanks for tracing this back, Michelle. I like the existence of performedActivity. <br>\nMy point #1 is that while plannedActivityDetail has many details, performedActivity has none....</p>",
        "id": 221803484,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609957621
    },
    {
        "content": "<p>Point #2 is a discussion about removing plannedActivityDetail.product, and use a reference to any of the product requests (medication, device, nutrition).</p>",
        "id": 221803707,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609957725
    },
    {
        "content": "<blockquote>\n<p>My point #1 is that while plannedActivityDetail has many details, performedActivity has none....</p>\n</blockquote>\n<p>There is an invariant that says you either have CarePlan.activity.plannedActivityReference (reference to a request resource) OR CarePlan.activity.plannedActivityDetail (inline activity definition).  When using the reference to a request resource, it has full detail of the request.  Likewise, when using the CarePlan.activity.performedActivity, it references an event resource with full detail about that event.  What is missing or what don't you think you can convey with the CarePlan.activity.performedActivity reference?</p>",
        "id": 221808948,
        "sender_full_name": "Michelle (Moseman) Miller",
        "timestamp": 1609960310
    },
    {
        "content": "<blockquote>\n<p>Point #2 is a discussion about removing plannedActivityDetail.product, and use a reference to any of the product requests (medication, device, nutrition).</p>\n</blockquote>\n<p>You don't have to use the inline plannedActivityDetail - instead, you can use CarePlan.activity.plannedActivityReference and reference the MedicationRequest, DeviceRequest, or NutritionOrder.</p>",
        "id": 221809273,
        "sender_full_name": "Michelle (Moseman) Miller",
        "timestamp": 1609960463
    },
    {
        "content": "<p>#1: Just looking at the resource: for performedActivity we don't have goal, reason, performer, possibly others</p>",
        "id": 221810960,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609961269
    },
    {
        "content": "<p>#2: I understand we have 2 ways of doing it, which actually summarizes my challenge: If i want to see what drugs is the patient planned to take, I need to look in 2 places. Is there a reason for that ambiguity?</p>",
        "id": 221811164,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609961378
    },
    {
        "content": "<p>Regarding #1, performedActivity is a reference to any resource....most will be events that follow the event pattern, which usually do support reason and performer.  There is an extension <a href=\"http://build.fhir.org/extension-resource-pertainstogoal.html\">http://build.fhir.org/extension-resource-pertainstogoal.html</a> for relating goals to event resources.</p>",
        "id": 221828292,
        "sender_full_name": "Michelle (Moseman) Miller",
        "timestamp": 1609969874
    },
    {
        "content": "<p>Regarding #2, that is correct -- think of it like a choice of data types -- that happens many places throughout FHIR and isn't unique to CarePlan</p>",
        "id": 221828444,
        "sender_full_name": "Michelle (Moseman) Miller",
        "timestamp": 1609969951
    },
    {
        "content": "<p>on #2 I don't see it as a choice of data types. The meaning is rather different - it is an actionable item</p>",
        "id": 221840251,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609977447
    },
    {
        "content": "<p>I think (my opinion after yet another attempt at understanding and pointing out issues) that the CarePlan resource is unnecessarily ambiguous.</p>",
        "id": 221840736,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609977739
    },
    {
        "content": "<p>The planned activity has a lot of information, duplicating information that can be provided by other resources (ambiguity can harm interoperability). OTOH, the performed activity, given its position in the resource, seems a new stub for which not sufficient use cases hae been found - which is what I was trying to stimulate.</p>",
        "id": 221840910,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609977860
    },
    {
        "content": "<p>I tried to use CarePlan and provided feedback to make it simpler for a few cases:</p>\n<ol>\n<li>CarePlan representing a Medication Treatment item</li>\n<li>CarePlan representing a long-term care with new and unexpected activities</li>\n</ol>",
        "id": 221841091,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609977994
    },
    {
        "content": "<p>I could just make extensions, but I think that now is the time to provide feedback and I hope that is found somehow useful - even if it is corrective feedback.</p>",
        "id": 221841236,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609978100
    },
    {
        "content": "<p>Generally, I am of the opinion that we should have richer examples for how our resources work in broader scenarios and workflows - considering dynamic changes, evaluating overlap with other resources. The CarePlan resource really needs that IMO.</p>",
        "id": 221841323,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609978181
    },
    {
        "content": "<p>cpl-3 invariant does act like a choice of data types since you can have one or the other, but not both</p>\n<blockquote>\n<p>Provide a plannedActivityReference or plannedActivityDetail, not both   plannedActivityDetail.empty() or plannedActivityReference.empty()</p>\n</blockquote>",
        "id": 221998487,
        "sender_full_name": "Michelle (Moseman) Miller",
        "timestamp": 1610052460
    },
    {
        "content": "<p>Your initial comments for #2 seemed focused on the plannedActivity (choice of reference vs detail) vs your most recent comments might be switching topics to a discussion about plannedActivity* vs performedActivity?  <br>\nI agree that planned activities are different from performed activities.... and yes, there is a choice of planned activities being references or inline detail.<br>\nRegardless, I don't think we have found any examples of attributes that are missing or not supported.  What are the specific extensions you are needing?<br>\nI hear you saying that there is complexity with the choice of how to represent a planned activity (as a reference to another resource vs inline detail).  If you want to log a change request to force all CarePlan implementers to use plannedActivityReference (thereby removing plannedActivityDetail), then feel free to log a change request and Patient Care can discuss further.</p>",
        "id": 222000335,
        "sender_full_name": "Michelle (Moseman) Miller",
        "timestamp": 1610053351
    },
    {
        "content": "<p>If this were a less complex resource, I could more easily indicate some changes or extensions.</p>",
        "id": 222004665,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1610055468
    },
    {
        "content": "<p>#2 is about ordering a product. What are the requirements for having 2 ways of doing it?</p>",
        "id": 222004925,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1610055577
    },
    {
        "content": "<p>Lloyd answered that above (and I agree):</p>\n<blockquote>\n<p>plannedActivityDetail is for when you don't want to break out details into a separate resource.</p>\n</blockquote>",
        "id": 222005378,
        "sender_full_name": "Michelle (Moseman) Miller",
        "timestamp": 1610055796
    },
    {
        "content": "<p>perhaps i'm on a different topic. What is the reason to have plannedActivityDetail.product[x]?</p>",
        "id": 222005510,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1610055862
    },
    {
        "content": "<p>To describe what is being requested or prescribed (the equivalent to request.code per <a href=\"https://www.hl7.org/fhir/careplan-mappings.html#workflow\">https://www.hl7.org/fhir/careplan-mappings.html#workflow</a>)</p>",
        "id": 222007636,
        "sender_full_name": "Michelle (Moseman) Miller",
        "timestamp": 1610056871
    },
    {
        "content": "<p>So, why 2 ways of doing that? <br>\nWhy can I have a reference to a MedicationRequest OR a product code?</p>",
        "id": 222007838,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1610056962
    },
    {
        "content": "<p>( and if I can have a product code, why not a service code, replacing a ServiceRequest? )</p>",
        "id": 222007924,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1610057011
    },
    {
        "content": "<p>There are two levels of complexities of systems.  Simple planning systems want a data structure that describes (in some degree of discrete detail, but not a lot) every kind of thing they might want to do.  Other planning systems allow you to bring to bear the full complexity of the interfaces for different types of interventions.  The model is intended to support both.  Even a system that supports complex details may allow for 'simple' things without invoking the complex interface.  But you absolutely <em>can't</em> define an activity using both at once.  That would be nearly impossible to render and build an interface for and would allow all sorts of confusing/contradictory statements.</p>",
        "id": 222024266,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1610068753
    },
    {
        "content": "<p>plannedActivityDetail.code <em>would</em> allow you to send a service code.  But if you do that, then you can't have a ServiceRequest.</p>",
        "id": 222024360,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1610068827
    },
    {
        "content": "<p>My point #2 is that product[x] is a good candidate for removal</p>",
        "id": 222043149,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1610088801
    },
    {
        "content": "<p>If you just want to say \"I plan to prescribe drug x\", then you need to capture that.  You also need code, because you might want to say \"I plan to stop drug X\".  So there's a need for an element to capture both the action and the product.</p>",
        "id": 222043226,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1610088913
    },
    {
        "content": "<p>Is product[x] semantically any different from medicationRequest?</p>",
        "id": 222043318,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1610089033
    },
    {
        "content": "<p>(or DeviceRequest?)</p>",
        "id": 222043326,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1610089065
    },
    {
        "content": "<p>My point #1 is that this resource could use some cleanup and a good amount of documentation. we could make planned activity and performed activity a bit more consistent in terms of structure and level of detail.</p>",
        "id": 222043470,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1610089205
    },
    {
        "content": "<p>I wouldn't expect 'performed' to have near as much detail as 'planned'.  The 'performed bit' is primarily about how to keep track of progress with the plan, not to convey the details of everything that's happened.  For that, the expectation is very much that you'll point to the individual event records.</p>",
        "id": 222075950,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1610115063
    },
    {
        "content": "<p>On the performed side, you either reference what's done or convey a code or text to give some kind of indication about what's been done or how much as been done.</p>",
        "id": 222076078,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1610115126
    },
    {
        "content": "<p>CarePlan is, fundamentally a description of \"what's planned\" and allows participants to 'manage the plan'.  It's <em>not</em> a grouper.</p>",
        "id": 222076140,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1610115176
    },
    {
        "content": "<p>given the principle of newer instances pointing at older instances... would the tracking of performed activities be more properly (RESTfully) have a way of pointing at the careplan that they are to be considered helping? Rather than always updating the careplan just to update an element pointing at these new (performed activities) resources.</p>",
        "id": 222076759,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610115514
    },
    {
        "content": "<p>The workflow would be that the CarePlan gets created, then a bunch of stuff happens, then someone comes along to update the CarePlan to reflect status.  There's a need to indicate which specific activities have progressed.  Merely linking an Event to the CarePlan (which can be done using Event.basedOn) wouldn't provide that.</p>",
        "id": 222078784,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1610116507
    },
    {
        "content": "<p>HI Lloyd, Jose and John,<br>\nI am following your discussion with a great interest and I hope you don't mind if I do that and if I ask a question.<br>\nLloyd you wrote: \"CarePlan is, fundamentally a description of \"what's planned\" and allows participants to 'manage the plan'. It's not a grouper.\"</p>\n<p>My question is, if the actual sequence of events, e.g. administering of a given medication is not in-line with the defined CarePlan, how one should capture that? E.g. if in a given day the medication was given off-schedule. And one needs to reflect this, what would be the best way to do that?<br>\nThank you!<br>\nOlga</p>",
        "id": 241148716,
        "sender_full_name": "Olga Vovk",
        "timestamp": 1622640689
    },
    {
        "content": "<p>The simplest is just to link the event resources and convey when they each happened within the resources themselves.  If you need to specifically highlight the deviation and provide a reason for the deviation (as distinct from the reason for the event itself), we're probably talking extension space, though it might be a candidate for a 'standard' extension.</p>",
        "id": 241151206,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1622641778
    },
    {
        "content": "<p>Hi Lloyd, <br>\nThank you!<br>\nYes, I need to highlight the deviation from the schedule and need to capture the reason for that deviation.<br>\nI will go ahead and create a JIRA ticket for a \"standard\" extension.</p>\n<p>Thank you!<br>\nOlga</p>",
        "id": 241152703,
        "sender_full_name": "Olga Vovk",
        "timestamp": 1622642402
    },
    {
        "content": "<p>Created JIRA <a href=\"https://jira.hl7.org/browse/FHIR-32830\">https://jira.hl7.org/browse/FHIR-32830</a></p>",
        "id": 241169613,
        "sender_full_name": "Olga Vovk",
        "timestamp": 1622649350
    },
    {
        "content": "<p>@olgavovk,</p>\n<p>Olga, what about also checking to ensure the correct medication was given (checking the medication name) and ensuring the correct does was given ?  also that the correct route was administered (oral, IV, intramuscular, etc) .  The time isn't the only check.</p>\n<p>Another check would be to ensure that the medication should be given (or shouldn't be given ) prior to a procedure - for instance an antibiotic prior to a procedure that should be given or a blood thinner prior to a procedure which shouldn't be given .  But this adds a layer of complexity.</p>",
        "id": 241172070,
        "sender_full_name": "Del D",
        "timestamp": 1622650435
    },
    {
        "content": "<p>Hi Del,<br>\nGood points, Thank you!<br>\nI will updated the JIRA ticket,<br>\nBest,<br>\nOlga</p>",
        "id": 241172477,
        "sender_full_name": "Olga Vovk",
        "timestamp": 1622650600
    }
]