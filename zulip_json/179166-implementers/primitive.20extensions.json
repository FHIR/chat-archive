[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> , <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> , <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> , <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> , <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span>  I want to ask again - is <code>extensions</code> for <code>primitives</code> good idea?<br>\nI think, definition of <code>primitive</code> is opposite to extensibility :) What problem do we solve by this original idea?</p>",
        "id": 153875762,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1489072812
    },
    {
        "content": "<p>Yes, e.g. we have translation extensions to use on  strings, I imagine you could specify the type of calender on a date, the inprecision on a decimal....</p>",
        "id": 153875765,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1489075690
    },
    {
        "content": "<p>Original text for a boolean.  There are lots of use-cases</p>",
        "id": 153875770,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1489078848
    },
    {
        "content": "<p>For me it looks like anti-pattern :(  If you need extension on primitive - something wrong with design - use complex type. <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  do we have list of use cases for primitive extensions?</p>",
        "id": 153875816,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1489086102
    },
    {
        "content": "<p>It's an 80/20 situation.  Most of the time all you need is a simple date, string, boolean, whatever.  But *sometimes* you need to represent that date in another calendar.  Or provide a rendered view of it.  Or express it as a calculation.  Or explain why it's not present.  Or you need to send the string in an alternate language.  So we can make them complex types all the time to allow for the possibility that edge cases exist that will require that, or we can do what we've done which is to make the \"typical\" case relatively painless in the wire form while still allowing for the complexity.  We could dig up the list of use-cases raised when we last addressed this issue a couple of years ago.  You can also look at the 10+ extensions that apply to simple types in the current extension registry.  However, neither is a complete list.</p>",
        "id": 153875823,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1489086785
    },
    {
        "content": "<p>We certainly didn't add extensions on primitives because we were bored or thought it would create significant joy for implementers.</p>",
        "id": 153875824,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1489086829
    },
    {
        "content": "<p>:)</p>",
        "id": 153875825,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1489086831
    },
    {
        "content": "<p>10% of our extensions are extensions on primitives. The alternative would be to kitchen sink the primitives too</p>",
        "id": 153875827,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1489086848
    },
    {
        "content": "<p>10 % is not 80 % :)</p>",
        "id": 153875828,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1489086890
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  additional info you described could be added just as extension, not primitive extension.</p>",
        "id": 153875830,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1489086963
    },
    {
        "content": "<p><code>{ extension: [{url: 'dateCalendar', value:....}], date: \"2017-....\"}</code></p>",
        "id": 153875831,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1489087018
    },
    {
        "content": "<p>we certainly looked hard at that. But it has 2 genuinely big downsides: <br>\n- if you have a repeating element that is a primitive, then your extension has to repeat, and somehow link to it <br>\n- as a processor, instead of handing around just the type, that might have extensions, you have to carry around the type, and the extensions list. </p>\n<p>Of course, in the JSON format we have now, if you work in the json directly, you get the second anyway. That's why I voted against it in the beginning. </p>",
        "id": 153875833,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1489087267
    }
]