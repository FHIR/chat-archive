[
    {
        "content": "<p>We have a need to perform bulk validation of codes. For example when validating  an incoming HL7 v2 message we want to be sure that the values of coded elements match those we are expecting (as we're going to map the message to FHIR resources). There are a large number to check per message, so wondering if a batch operation will improve performance by reducing the number of calls.  Was thinking of a custom operation against ValueSet that could take in 'sets' of ValueSet url, code and system - but not sure if that's feasible in the operation definition..</p>",
        "id": 153941572,
        "sender_full_name": "David Hay",
        "timestamp": 1519932079
    },
    {
        "content": "<p>we've talked about this before and said, 'just use batch'</p>",
        "id": 153941602,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519936657
    },
    {
        "content": "<p>You can batch an operation? I did not know that!</p>",
        "id": 153941647,
        "sender_full_name": "David Hay",
        "timestamp": 1519941716
    },
    {
        "content": "<p>you can batch an operation yes.</p>",
        "id": 153941652,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519943774
    },
    {
        "content": "<p>see <a href=\"http://build.fhir.org/terminology-service.html#4.6.7\" target=\"_blank\" title=\"http://build.fhir.org/terminology-service.html#4.6.7\">http://build.fhir.org/terminology-service.html#4.6.7</a></p>",
        "id": 153941653,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519943830
    },
    {
        "content": "<p>Yeah - just tested out. cool!</p>",
        "id": 153941654,
        "sender_full_name": "David Hay",
        "timestamp": 1519943840
    },
    {
        "content": "<p>(makes sense when you stop and think about it of course)...</p>",
        "id": 153941655,
        "sender_full_name": "David Hay",
        "timestamp": 1519943861
    },
    {
        "content": "<p>Yeah, we did this with Ontoserver for this kind of use-case.  Only real downside over GET requests is that you lose HTTP-level caching.<br>\nDetermining the cut-off for when batch is faster than lots of concurrent requests is something we've yet to do</p>",
        "id": 153941734,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1519980613
    },
    {
        "content": "<p>The other issue is if your client is a web browser then it normally limits the # of concurrent connections to the same endpoint so batch is a better option quite quickly unless you have proper HTTP/2 support at both ends (also requires TLS from memory)</p>",
        "id": 153941735,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1519980833
    }
]