[
    {
        "content": "<p>one of the things I intended to work on in the lead in to Baltimore is using the mapping language for v2 --&gt; FHIR mapping (or reverse)</p>",
        "id": 153844383,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471573631
    },
    {
        "content": "<p>to do that, I need a FHIR logical model for v2. (actually, it doesn't need to be explicit, but making it explicit helps us communicate)</p>",
        "id": 153844384,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471573740
    },
    {
        "content": "<p>there's 2 choices for the logical model. The first is some structure like this:</p>",
        "id": 153844385,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471573761
    },
    {
        "content": "<div class=\"codehilite\"><pre>message\n  segment 0..*\n    code 1..1\n    field 0..*\n      element 1..1\n        component 0..*\n          subcomponent 0..*\n</pre></div>",
        "id": 153844386,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471573767
    },
    {
        "content": "<p>the alternative is something like this: </p>",
        "id": 153844387,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471573801
    },
    {
        "content": "<div class=\"codehilite\"><pre>ADT_A01\n  MSH\n    MSH-1\n  EVN\n    EVN-1\n    EVN-2\n      EVN-2-1\n</pre></div>",
        "id": 153844388,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471573871
    },
    {
        "content": "<p>etc</p>",
        "id": 153844389,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471573874
    },
    {
        "content": "<p>in the first, the message structures would be constraint profiles on the generic structure. Whereas in the second, you make the message structures explicit</p>",
        "id": 153844390,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471573972
    },
    {
        "content": "<p>I think that the first approach is superior. I say that because this makes any v2 infrastructure we build more robust against variations from the spec - which are uibiqutious, and because the mappings would be robust across versions, even though it does make the mapping language a little more indirect</p>",
        "id": 153844391,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471574156
    },
    {
        "content": "<p>this was kind of thinking out loud, but wanted to see if anyone had any opinions on this.</p>",
        "id": 153844392,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471574173
    },
    {
        "content": "<p>Seems like the first might make it easier to express the uses of particular Z-segments, which would be nice</p>",
        "id": 153844393,
        "sender_full_name": "James Butler",
        "timestamp": 1471574389
    },
    {
        "content": "<p>yes first option would be more friendly to z segments</p>",
        "id": 153844394,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471575084
    },
    {
        "content": "<p>I prefer the first because it properly expresses a metamodel.  I would have thought that would be more useful.</p>",
        "id": 153844395,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1471576803
    },
    {
        "content": "<p>it may be useful, but it's possible to have both models, and map on the basis of the second </p>",
        "id": 153844396,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471577288
    },
    {
        "content": "<p>still, I prefer the first</p>",
        "id": 153844397,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471577296
    },
    {
        "content": "<p>From an OO perspective, the first looks like a class definition, the second an instance of that class. Which one is easier to use for mapping might depend on whether you're mapping to/from another class or another instance artifact - and whether the instances have additional attributes.</p>",
        "id": 153844407,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1471584676
    },
    {
        "content": "<p>well, the instances can't have additional attributes. Not in v2. It is the classical Reference Model/Constraint pattern. In v3 that had multiple layers and you picked which layer you wanted to treat as concrete. </p>",
        "id": 153844409,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471585987
    },
    {
        "content": "<p>in v2, there's only 2 choices</p>",
        "id": 153844410,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471585999
    },
    {
        "content": "<p>I suppose there's more, really, because you could define your own profile on the messages and make that concrete....</p>",
        "id": 153844411,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471586019
    },
    {
        "content": "<p>Looking at my old v2 message readers, I took a 2-stage approach. The first created a generic message object similar to your first model, the second parsed the message elements into recognisable business layer objects - patient, provider, observation, referral, etc. Those handlers work on the segment type which seemed more efficient than being concerned about the structure of the 100+ message types. However, if you're mapping to v2 then, of course, you have to create those structures. Still an each-way bet from me.</p>",
        "id": 153844412,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1471587512
    },
    {
        "content": "<p>I think the first is the only thing that's going to support z-messages, which we want to support too.  It'll also easily work across past and future versions.</p>",
        "id": 153844462,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1471625209
    },
    {
        "content": "<p>Here is the FHIR logical model for v2 <br>\n<a href=\"/user_uploads/10155/U4qH6IG-FygQdc6uraViAT8_/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/U4qH6IG-FygQdc6uraViAT8_/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\"><img src=\"/user_uploads/10155/U4qH6IG-FygQdc6uraViAT8_/pasted_image.png\"></a></div>",
        "id": 153845176,
        "sender_full_name": "Eric Haas",
        "timestamp": 1472172372
    },
    {
        "content": "<p>credits go to GG.   </p>",
        "id": 153845177,
        "sender_full_name": "Eric Haas",
        "timestamp": 1472172428
    },
    {
        "content": "<p>thx Eric. So that's a candidate. I've generated profiles for all the segments for all the versions. I can send them to any one who's interested. In a couple of days time, I'll work on the data types. and then I'll look at doing standard mappings</p>",
        "id": 153845178,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472172857
    },
    {
        "content": "<p>.component is a reference back to .content</p>",
        "id": 153845179,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472172912
    },
    {
        "content": "<p>I've posted this model <a href=\"http://healthedatainc.com/go-ftp/v2map/\" target=\"_blank\" title=\"http://healthedatainc.com/go-ftp/v2map/\">here</a></p>",
        "id": 153845292,
        "sender_full_name": "Eric Haas",
        "timestamp": 1472278008
    },
    {
        "content": "<p>click on the differential tab</p>",
        "id": 153845293,
        "sender_full_name": "Eric Haas",
        "timestamp": 1472278135
    },
    {
        "content": "<p>Grahame - I'd be interested to have a look at those profiles you have generated. I'd be very grateful if you could send me a link.</p>",
        "id": 153845851,
        "sender_full_name": "David Fallas",
        "timestamp": 1472586150
    },
    {
        "content": "<p>sent</p>",
        "id": 153845859,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472590606
    }
]