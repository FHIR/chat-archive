[
    {
        "content": "<p>I am reading the following section regarding SMART scopes:</p>\n<blockquote>\n<p><a href=\"http://hl7.org/fhir/smart-app-launch/scopes-and-launch-context/index.html#scopes-for-requesting-identity-data\" target=\"_blank\" title=\"http://hl7.org/fhir/smart-app-launch/scopes-and-launch-context/index.html#scopes-for-requesting-identity-data\">http://hl7.org/fhir/smart-app-launch/scopes-and-launch-context/index.html#scopes-for-requesting-identity-data</a></p>\n</blockquote>\n<p>It mentions</p>\n<blockquote>\n<p>\"Note that Person is only used if the other resource type do not apply to the current user, for example, the “authorized representative” for &gt;1 patients\"</p>\n</blockquote>\n<p>While the Person resource enables linking of, in this case, an authorized representative + &gt;1 patients, the Person specification states that</p>\n<blockquote>\n<p>These linkages assert that all the records relate to the <strong>same individual</strong>. </p>\n</blockquote>\n<p>Is the Person resource still applicable for this usecase?</p>",
        "id": 176271736,
        "sender_full_name": "Severin Skillman",
        "timestamp": 1569084094
    },
    {
        "content": "<p>Yes -- there's a difference between using the Person resource to atand in for the authorized representative (which is what we do in SMART) versus asserting that the a given Person resource is the same individual as one or more Patients (which we don't do -- and which seems to be the thing you are asking about above).</p>",
        "id": 176275655,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1569090904
    },
    {
        "content": "<p>Ah that makes sense and would satisfy the condition for it to be the same individual.<br>\nFollowing on from that then, if a user logged in as a Person (the stand in) the assumption is they would have a combination of their own perms and the perms of the Patient(s) they represent. How would one a) associate the person to the patients and b) declare this persons relationship to be the auth individual for the patient(s)?</p>",
        "id": 176301355,
        "sender_full_name": "Severin Skillman",
        "timestamp": 1569142154
    },
    {
        "content": "<p>Typically internally in the system - not via FHIR or an API</p>",
        "id": 176322492,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1569179267
    },
    {
        "content": "<p>I decided I'll add a \"fhirPatient\" scope/claim like how the \"fhirUser\" works and then give the authenticating Person following scopes:  </p>\n<p>patient/&ast;.&ast;<br>\nuser/Person<br>\nuser/RelatedPerson</p>\n<p>where RelatedPerson is the authorized individual being referenced in the Person resource.</p>\n<p>That should work right?</p>",
        "id": 176323869,
        "sender_full_name": "Severin Skillman",
        "timestamp": 1569181914
    },
    {
        "content": "<p>Not sure what you mean. Those would be non-standard scopes and no app would use / understand them</p>",
        "id": 176333060,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1569200635
    },
    {
        "content": "<p>True. I suppose as an alternative the access control decision engine could determine which patient's data they have access to.</p>\n<ol>\n<li>Person abc123 is linked to RelatedPerson xyx123 (authorized individual) who is related to Patient asd456.</li>\n<li>User authenticates as Person abc123 and granted scopes  patient/&ast;.read, user/Person.&ast;, user.RelatedPerson.&ast;</li>\n<li>Access control decision engine determines the relationship in 1 above and applies ABAC rules to requests for data about Patient asd456</li>\n</ol>",
        "id": 176339475,
        "sender_full_name": "Severin Skillman",
        "timestamp": 1569213215
    },
    {
        "content": "<p>Why does an app need to know whether the Person is the Patient?  The server needs to know since it might have access to different information, of course.</p>",
        "id": 176401799,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1569267512
    },
    {
        "content": "<p>It might be one way for an app to detect that they want to abort the whole exchange.  I.e. Apple Health could detect that the Person isn't the Patient and prevent mixing the proxy data they just got with patient data they might already have on the device.  There are of course other ways to solve that.</p>",
        "id": 176408692,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1569272084
    }
]