[
    {
        "content": "<p>Hello all!</p>\n<p>I'm trying to separate out a DateTime into both a Date and a Time. It looks like I can go from a DT -&gt; D (<a href=\"http://hl7.org/fhirpath/2018Sep/index.html#todate-date\" target=\"_blank\" title=\"http://hl7.org/fhirpath/2018Sep/index.html#todate-date\">http://hl7.org/fhirpath/2018Sep/index.html#todate-date</a>), but it doesn't look like I can go from a DT -&gt; T (<a href=\"http://hl7.org/fhirpath/2018Sep/index.html#totime-time\" target=\"_blank\" title=\"http://hl7.org/fhirpath/2018Sep/index.html#totime-time\">http://hl7.org/fhirpath/2018Sep/index.html#totime-time</a>). The alternative seems to turn the DT into a string, then split, then turn that string into a time (which is not ergonomic to me).</p>\n<p>Is there an easier way to do this?</p>\n<p>Thank you,<br>\nPreston</p>",
        "id": 190235237,
        "sender_full_name": "Preston TW",
        "timestamp": 1583881201
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span></p>",
        "id": 190235408,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1583881329
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"240854\">@Preston TW</span> , operators to support date/time component extraction didn't make the cut in the first round, so we don't have a first-class way to do this. There's a thread <a href=\"#narrow/stream/179166-implementers/topic/FHIRPath.20date.20math\" title=\"#narrow/stream/179166-implementers/topic/FHIRPath.20date.20math\">here</a> that suggests using a <code>.toString().substring().toTime()</code> approach. I've also logged a tracker <a href=\"http://jira.hl7.org/browse/FHIR-26554\" target=\"_blank\" title=\"http://jira.hl7.org/browse/FHIR-26554\">J#26554</a>.</p>",
        "id": 190237057,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1583882943
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> , it seemed a little inconsistent to me to have a <code>toDate</code> method for DateTime but not a <code>toTime</code> method. In the meantime I'll use the substring approach.</p>\n<p>Thank you!</p>",
        "id": 190238607,
        "sender_full_name": "Preston TW",
        "timestamp": 1583884812
    }
]