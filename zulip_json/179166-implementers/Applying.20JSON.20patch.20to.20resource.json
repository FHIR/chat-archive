[
    {
        "content": "<p>I have a JSON patch that I want to apply to a resource. Is there any code in, say, fhir-net-api for helping with this? My initial problem is that I have a path and a value, and I want to parse the value into some fhir object (say, with FhirJsonParser.Parse). But if it's a BackboneElement then there's no resourceType member. The only way to determine the type of object to parse is by looking at the root resource type and the path attribute of the patch. I'd rather not have to implement all of that by myself.</p>",
        "id": 153886949,
        "sender_full_name": "Mattias Flodin",
        "timestamp": 1493879913
    },
    {
        "content": "<p>I made an element like this to reflect a json patch, but I'm pretty sure FhirJsonParser.Parse is not going to be able to figure out which type to instantiate for Value when parsing a json patch.</p>\n<div class=\"codehilite\"><pre><span></span>public class Patch : Hl7.Fhir.Model.BackboneElement\n{\n    public string Op;\n    public string Path;\n    public Base Value;\n}\n</pre></div>",
        "id": 153886950,
        "sender_full_name": "Mattias Flodin",
        "timestamp": 1493880591
    },
    {
        "content": "<p>in my server, I apply the json/xml patches to XML/JSON directly, and then parse to objects - for exactly the reason you identified </p>",
        "id": 153886962,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1493890109
    },
    {
        "content": "<p>Actually, how do I even serialize <em>to</em> a JSON patch? If I make a class to represent a patch item, which in turn contains a Resource as its value, I can't just call FhirSerializer.SerializeResourceToJson on the patch object since it isn't marked as an Fhir type for the introspection and doesn't inherit from Base.</p>",
        "id": 153886986,
        "sender_full_name": "Mattias Flodin",
        "timestamp": 1493898364
    },
    {
        "content": "<p>FhirJsonParser.Parse() lets you pass in a JsonReader as argument so you can have contained Fhir resources in a larger Json structure. But FhirSerializer.SerializeToJson does not seem to provide a similar way to pass in a JsonWriter?</p>",
        "id": 153886988,
        "sender_full_name": "Mattias Flodin",
        "timestamp": 1493898459
    },
    {
        "content": "<p>oh wait yes there is, SerializeResource does that. But what if it's a BackboneElement?</p>",
        "id": 153886989,
        "sender_full_name": "Mattias Flodin",
        "timestamp": 1493898606
    },
    {
        "content": "<p>so I handle Json patch as pure JSON. THe language has no representation as a resource. </p>",
        "id": 153887012,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1493901448
    },
    {
        "content": "<p>If you want a resource based patch, look at FHIRPath patch</p>",
        "id": 153887013,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1493901461
    },
    {
        "content": "<p>perhaps I could make some minor changes to the reference implementation</p>",
        "id": 153887057,
        "sender_full_name": "Mattias Flodin",
        "timestamp": 1493902784
    },
    {
        "content": "<p>How have you gone <span class=\"user-mention\" data-user-id=\"193772\">@Mattias Flodin</span>, interested if you'ev managed to get any of this working, and if you're likely to contribute it back ot the fhir-net-api project.</p>",
        "id": 153892291,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1496660255
    },
    {
        "content": "<p>Yes <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> I have some modifications and it's working, but it's not pretty. I intend to contribute them back to fhir-net-api but I doubt they can be used as-is. They will need to be improved on by someone who knows the architecture better.</p>",
        "id": 153892659,
        "sender_full_name": "Mattias Flodin",
        "timestamp": 1496838918
    },
    {
        "content": "<p>The architecture of fhir-net-api serialization is such that you always have to know the container resource in order to serialize a single attribute. This complicates things a lot, sometimes you have to create dummy objects just to get serialization working for nested elements. I think it would be possible to do something better using <a href=\"http://json.net\" target=\"_blank\" title=\"http://json.net\">json.net</a> converters and possibly some context information passed into the converter.</p>",
        "id": 153892660,
        "sender_full_name": "Mattias Flodin",
        "timestamp": 1496839516
    },
    {
        "content": "<p>But doing that would require pretty serious refactoring / redesign and it's not really my place to do that.</p>",
        "id": 153892661,
        "sender_full_name": "Mattias Flodin",
        "timestamp": 1496839558
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span>, I would be interested in having a method that applies a FHIRPath Patch, i.e., a Parameters resource, to a resource. Is that something that is planned for the fhir-net-api?</p>",
        "id": 153894545,
        "sender_full_name": "Theo Stolker",
        "timestamp": 1497961529
    },
    {
        "content": "<p>We'd like to add this yes, but no-one I know of has it working on .net yet (and not at the top of the priority list yet)</p>",
        "id": 153895917,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1498991555
    },
    {
        "content": "<p>I would welcome a PR ;-)</p>",
        "id": 153895956,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1499076241
    },
    {
        "content": "<p>I stumbled across a dotnetcore jsonpatch bit of code I'll take a look at.<br>\n<a href=\"https://docs.microsoft.com/en-us/aspnet/core/api/microsoft.aspnetcore.jsonpatch.jsonpatchdocument\" target=\"_blank\" title=\"https://docs.microsoft.com/en-us/aspnet/core/api/microsoft.aspnetcore.jsonpatch.jsonpatchdocument\">https://docs.microsoft.com/en-us/aspnet/core/api/microsoft.aspnetcore.jsonpatch.jsonpatchdocument</a><br>\n(and this older one, don't recall if I found it last time I looked <a href=\"https://michael-mckenna.com/how-to-add-json-patch-support-to-asp-net-web-api/\" target=\"_blank\" title=\"https://michael-mckenna.com/how-to-add-json-patch-support-to-asp-net-web-api/\">https://michael-mckenna.com/how-to-add-json-patch-support-to-asp-net-web-api/</a>)</p>",
        "id": 153895987,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1499141608
    },
    {
        "content": "<p>So, that library seems to be a Microsoft product?  I was thinking about FhirPatch, which is a bit harder to find libraries for....but yes, this library would help.</p>",
        "id": 153896011,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1499166161
    },
    {
        "content": "<p>Yes, not till one of us does it ;)</p>",
        "id": 153896055,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1499233560
    }
]