[
    {
        "content": "<p>We believe to have a use-case for multiple flags on List entries. One flag would be workflow information around a distributed transaction like <code>pending</code>, <code>final</code> because we put things on the list which have to be acted upon in another system. The other flag would be a status flag which encodes the status of the referenced item at the time of list addition. We have to encode the status directly in the FHIR List because the other system has no history. So we couldn't use something linke versioned references.</p>\n<p>Currently List.entry.flag is 0..1 to CodeableConcept. Would it be possible to that that to 0..* in future versions? Are there other use-cases which require multiple flags? If my use-case is somewhat special, I can just use an extension.</p>",
        "id": 203822436,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1594726262
    },
    {
        "content": "<p>\"Workflow information\" and \"distributed transaction\" seem to indicate a use case that is pushing the limits on List. Can you provide more details?</p>",
        "id": 203840234,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1594737238
    },
    {
        "content": "<p>One case that requires multiple \"tags\" like you have <span class=\"user-mention\" data-user-id=\"197470\">@Alexander Kiel</span> is indeed in workflows: we can have different statuses for workflows: e.g. \"performed\" and \"not billed\" can co-exist.</p>",
        "id": 203863482,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594748310
    },
    {
        "content": "<p>..and I could swear that task.businessStatus was 0..* because of that, but it isn't... <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> was that a decision or something missed?</p>",
        "id": 203863758,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594748437
    },
    {
        "content": "<p>I don't think a use-case for 0..* was ever raised.  And I'm not sure I understand that in this context.  How could a single Task have multiple business states simultaneously?  If we were talking about sub-tasks, then each would have their own independent status.</p>",
        "id": 203865168,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1594749145
    },
    {
        "content": "<p>Say a Task holds information about the overall procedure (mother of all tasks for that workflow)</p>",
        "id": 203865621,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594749410
    },
    {
        "content": "<p>from a clinical perspective, the status can be \"done\". From a hospitalizationperspective, the status is \"done\" but from the billing perspective can be \"hold on a minute...\"</p>",
        "id": 203865805,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594749493
    },
    {
        "content": "<p>Even for simple/simplified workflows the number of combinations \"dispensed\" \"administration started\"  and \"change requested\" explodes. And those statuses are orthogonal.</p>",
        "id": 203866198,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594749702
    },
    {
        "content": "<p>I had this very clearly impacting our BI system a few years ago: something as simple as \"how long the patient is waiting\" depends if you consider the status waiting when the patient arrives, or when the procedure was supposed to start.</p>",
        "id": 203866356,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594749775
    },
    {
        "content": "<p>The Task being 'done' is driven by who's doing the performing</p>",
        "id": 203866883,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1594750082
    },
    {
        "content": "<p>If the filler has completed what they intended to do, then it's \"complete\" - whether the filler thinks it is or not</p>",
        "id": 203866966,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1594750114
    },
    {
        "content": "<p>I have always assumed in our discussion that some tasks may not have a performer but may be split into sub-tasks, those having a performer (or split into sub-sub-tasks)</p>",
        "id": 203868253,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594750733
    },
    {
        "content": "<p>As I delegate a task into 2 sub-tasks, I need to keep a state for my parent task</p>",
        "id": 203868423,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594750820
    },
    {
        "content": "<p>The state on the parent task represents the overall state.  It doesn't aggregate up the states of sub-tasks</p>",
        "id": 203869323,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1594751267
    },
    {
        "content": "<p>I don't understand the meaning of aggregate in this case.</p>",
        "id": 203875357,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594754444
    },
    {
        "content": "<p>simple scenario: if for some reason you need to report \"status of a prescription\" or better \"status of a treatment triggered by a prescription\", <br>\nand that status is composed of \"billing status\" or \"distribution status\" or \"administration/clinical status\".</p>",
        "id": 203875552,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594754563
    },
    {
        "content": "<p>that is the scenario I would see a businessStatus 0..*:<br>\nstatus 1 is for billing, 2 for distribution, 3 for clinical</p>",
        "id": 203875608,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594754609
    },
    {
        "content": "<p>the overall status I agree (that is our premise) cannot be calculated. But there are conclusions you can take from different perspectives, and those matter to be kept somewhere.</p>",
        "id": 203875706,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594754654
    },
    {
        "content": "<p>This a good topic for a monday workflow call?</p>",
        "id": 203879465,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594756507
    },
    {
        "content": "<p>Task doesn't reflect \"status of a prescription\".  It reflects \"status of fulfillment of prescription\".  So if sent to a pharmacy, it would reflect whether it's been dispensed.  Whether they've billed for it isn't really relevant.</p>",
        "id": 203881886,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1594757750
    },
    {
        "content": "<p>one level higher or lower: what is the status of \"dispensed\" when the dispenser needs to create different tasks like supply, unpack, mix, repack, label, deliver?</p>",
        "id": 203883152,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594758362
    },
    {
        "content": "<p>I expect to have a placeholder for things like \"in progress, pending external delivery\"</p>",
        "id": 203883323,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594758455
    },
    {
        "content": "<p>(i mean, this can be handled by an extension, but the notion that a task can be split in subtasks seems core, and I think this is a good way to fulfill the requirement of capturing the different perspectives of the status of performing an activity when that activity is subtasked)</p>",
        "id": 203885428,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594759358
    },
    {
        "content": "<p>That would be fine text for the business status.  But that's still a single status.</p>",
        "id": 203912057,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1594781744
    },
    {
        "content": "<p>the problem with that is that from one perspective we need \"in progress, pending external delivery\", but others will need \"in progress\" - and those are orthogonal</p>",
        "id": 203920648,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594794655
    },
    {
        "content": "<p>\"in progress\" is the base Task.status.  \"pending external delivery\" would be the business status.</p>",
        "id": 203984903,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1594833501
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"192685\">Vassil Peytchev</span> <a href=\"#narrow/stream/179166-implementers/topic/Allow.20Multiple.20Flags.20in.20List.2Eentry/near/203840234\">said</a>:</p>\n<blockquote>\n<p>\"Workflow information\" and \"distributed transaction\" seem to indicate a use case that is pushing the limits on List. Can you provide more details?</p>\n</blockquote>\n<p>Sorry for the late answer. </p>\n<p>We have a biobank management system holding specimen and containers were specimen are located. For a use case of tracking the relocation of specimen, we decided not to enhance the original system. Instead we decided to use List resources stored on a FHIR server. </p>\n<p>In case the user starts such a relocation process, a new List resource is created. If the user decides to relocate a specimen, we have to do two things. First we have to remove the specimen from the container in the original system and second, we have to put the specimen on the List. That's a distributed transaction. To handle it, we first put the specimen on the list with a flag with a concept of <code>pending</code>, second we remove the specimen from the container and lastly we update the flag to <code>final</code>. </p>\n<p>The second flag we need is that of a missing information. A specimen not found during the relocation process should be put onto the List with an additional information that it was actually missing in the process.</p>",
        "id": 203998305,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1594839730
    },
    {
        "content": "<p>Is there any reason you don't just track the location of the Specimen on the Specimen instance itself?  That would seem simpler...</p>",
        "id": 203998965,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1594840049
    },
    {
        "content": "<p>And if you need to track the \"steps\" of the process, why not use Task, with a focus referencing the Specimen?</p>",
        "id": 203999594,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1594840359
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179166-implementers/topic/Allow.20Multiple.20Flags.20in.20List.2Eentry/near/203998965\">said</a>:</p>\n<blockquote>\n<p>Is there any reason you don't just track the location of the Specimen on the Specimen instance itself?  That would seem simpler...</p>\n</blockquote>\n<p>The Specimen doesn't exist as a resource in the FHIR server. I use a reference with identifier to reference it in the original system.</p>",
        "id": 204069466,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1594897319
    },
    {
        "content": "<p>if this is about transporting items, don't you want to use the Supply... stuff? that is what it was designed for.</p>",
        "id": 204069590,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594897400
    },
    {
        "content": "<p>the whereabouts of the items - that is inventory status, and we started looking at that recently</p>",
        "id": 204069661,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1594897446
    }
]