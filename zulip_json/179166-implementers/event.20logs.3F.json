[
    {
        "content": "<p>I need to track device event information such as last sync time, etc. </p>\n<p>Eventually, this information may be used in an automated workflow of some sort. <br>\nFor instance, a user may have a CarePlan that dictates they measure their blood pressure daily. <br>\nThe device in question may connect to sync regularly whether there are new Observations or not. <br>\nThe absence of data could trigger different actions depending on this information. <br>\nA stale \"last sync time\" might indicate connectivity problems rather than patient compliance with the care protocol, for instance. </p>\n<p>Anyway, I'm trying to determine the most appropriate way to track these things which will (hopefully) also be amenable to an automated workflow process. </p>\n<p>Can someone provide some guidance on the most appropriate resources for this?</p>",
        "id": 154018062,
        "sender_full_name": "Craig McClendon",
        "timestamp": 1542128931
    },
    {
        "content": "<p>What would a \"sync\" look like?  A post of an empty Batch?  If so, you might look at Provenance or AuditEvent</p>",
        "id": 154018071,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1542129507
    },
    {
        "content": "<p>All the information will be coming in via a proprietary 3rd party APIs. We will take the information and create FHIR resources from it (Device, Observation, etc.) which will be processed downstream and persisted. But there is other information beyond just the device readings. And \"syncs\" with no readings will also come in.   So think of it as a json blob with sync time, and if present the device readings captured during that sync. A sync here being the device communicating to a hub/mobile app of some sort (PHG)  which is sending the data up to the \"cloud\".  If that makes sense..   I've considered AuditEvent, but am wondering if Communication would lend itself better to future uses as it's part of the workflow specification.</p>",
        "id": 154018075,
        "sender_full_name": "Craig McClendon",
        "timestamp": 1542130282
    },
    {
        "content": "<p>Communication is intended to represent information sharing at the person-to-person level, not so much the system to system level.  <span class=\"user-mention\" data-user-id=\"191403\">@Michelle (Moseman) Miller</span>, perhaps we need to add some guidance that differentiates Communication from something like AuditEvent</p>",
        "id": 154018077,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1542130648
    },
    {
        "content": "<p>IHE has profiled AuditEvent for the purposes of tracking various events with the intent on being able to analyze those events for efficiency and workflow improvements. This sounds similar to what you are describing. See the SOLE profile  <a href=\"https://wiki.ihe.net/index.php/Standardized_Operational_Log_of_Events\" target=\"_blank\" title=\"https://wiki.ihe.net/index.php/Standardized_Operational_Log_of_Events\">https://wiki.ihe.net/index.php/Standardized_Operational_Log_of_Events</a></p>",
        "id": 154018080,
        "sender_full_name": "John Moehrke",
        "timestamp": 1542130899
    },
    {
        "content": "<p>Thanks guys. The intent of AuditEvent appears solely focused on security rather than general operational events or logging - which gives me pause to use it here. Am I misunderstanding it?</p>",
        "id": 154018085,
        "sender_full_name": "Craig McClendon",
        "timestamp": 1542131430
    },
    {
        "content": "<p>that is not correct. can you point at the specific wording that leads you to that? As you can see from IHE, they are using it well beyond security. It is a general purpose AuditEvent resource. Yes, the initial use-cases were security. Yes there are no examples, yet, beyond that.</p>",
        "id": 154018087,
        "sender_full_name": "John Moehrke",
        "timestamp": 1542131839
    },
    {
        "content": "<p>\"A record of an event made for purposes of maintaining a security log\"</p>\n<p>\"The content of an AuditEvent is intended for use by Security System Administrators, Security and Privacy Information Managers, and Records Management personnel. This content is not intended to be accessible or used directly by other healthcare users...\"</p>\n<p>But reading more closely I see this, which seems to give an \"out\" for other uses  :)<br>\n\"The primary purpose of this resource is the maintenance of security audit log information. <strong>However, it can also be used for any audit logging needs and simple event-based notification.</strong>\"</p>",
        "id": 154018088,
        "sender_full_name": "Craig McClendon",
        "timestamp": 1542132077
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 154018091,
        "sender_full_name": "Robert Ussery III",
        "timestamp": 1542132605
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 154018093,
        "sender_full_name": "Robert Ussery III",
        "timestamp": 1542133121
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 154018094,
        "sender_full_name": "Robert Ussery III",
        "timestamp": 1542133129
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>  - I don't see anything in the SOLE page linked that discusses FHIR or AuditEvent.</p>",
        "id": 154018095,
        "sender_full_name": "Craig McClendon",
        "timestamp": 1542133141
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 154018102,
        "sender_full_name": "Robert Ussery III",
        "timestamp": 1542133915
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 154018103,
        "sender_full_name": "Robert Ussery III",
        "timestamp": 1542133926
    },
    {
        "content": "<p>sorry about that. The wiki page for SOLE should have had a link to the formal specification. It seems that committee has not kept their wiki page up-to-date... Here is the formal supplement <a href=\"https://www.ihe.net/uploadedFiles/Documents/Radiology/IHE_RAD_Suppl_SOLE.pdf\" target=\"_blank\" title=\"https://www.ihe.net/uploadedFiles/Documents/Radiology/IHE_RAD_Suppl_SOLE.pdf\">https://www.ihe.net/uploadedFiles/Documents/Radiology/IHE_RAD_Suppl_SOLE.pdf</a></p>",
        "id": 154018113,
        "sender_full_name": "John Moehrke",
        "timestamp": 1542138731
    },
    {
        "content": "<p>They have also not created FHIR conformance or vocabulary resources.  <span class=\"user-mention\" data-user-id=\"194118\">@Kinson</span> do you have a plan to provide these?</p>",
        "id": 154018120,
        "sender_full_name": "John Moehrke",
        "timestamp": 1542139514
    },
    {
        "content": "<blockquote>\n<p>\"A record of an event made for purposes of maintaining a security log\"</p>\n<p>\"The content of an AuditEvent is intended for use by Security System Administrators, Security and Privacy Information Managers, and Records Management personnel. This content is not intended to be accessible or used directly by other healthcare users...\"</p>\n<p>But reading more closely I see this, which seems to give an \"out\" for other uses  :)<br>\n\"The primary purpose of this resource is the maintenance of security audit log information. <strong>However, it can also be used for any audit logging needs and simple event-based notification.</strong>\"</p>\n</blockquote>\n<p>good catch. I guess I am too close to this to see such blunt text. Yes, this should be softened.</p>",
        "id": 154018121,
        "sender_full_name": "John Moehrke",
        "timestamp": 1542139630
    },
    {
        "content": "<p>I created <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19644\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19644\">GF#19644</a> to drive for softening of that language. It is historic, but is not representative of current intent.</p>",
        "id": 154018126,
        "sender_full_name": "John Moehrke",
        "timestamp": 1542139836
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> , thanks for letting me know. SOLE is first IHE Radiology profile that uses a FHIR resource and we are just starting learning what it all means to profile FHIR resources. I will bring this up during Radiology Technical Committee meeting this week and we will discuss how to proceed.</p>\n<p>IHE Rad is starting to have new profiles using FHIR resources. So learning how to do it properly is important for us.</p>",
        "id": 154018294,
        "sender_full_name": "Kinson",
        "timestamp": 1542169109
    },
    {
        "content": "<p>I submitted an IHE RAD CP earlier today to add the FHIR conformance resources to SOLE.</p>",
        "id": 154018295,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1542169183
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> you had commented earlier:</p>\n<blockquote>\n<p>Communication is intended to represent information sharing at the person-to-person level, not so much the system to system level. @Michelle (Moseman) Miller, perhaps we need to add some guidance that differentiates Communication from something like AuditEvent</p>\n</blockquote>\n<p>I don't think Communication is limited to person-to-person since sender and recipient can reference Device (for CDS).  FYI --  I think the boundaries section does have some guidance on boundaries between Communication and AuditEvent as follows:</p>\n<blockquote>\n<p>While AuditEvent can track electronic disclosures of information, it cannot track conversations, phone calls, letters and other interactions that are not system-to-system. And even for system-to-system communications, the specific end recipients might not be known. As well, AuditEvents are not considered to be \"part\" of the patient record, while Communication instances are. The Communication resource is not used as a general audit mechanism to track every disclosure of every record. Rather, it is used when a clinician or other user wants to ensure a record of a particular communication is itself maintained as part of the reviewable health record.</p>\n</blockquote>",
        "id": 154019098,
        "sender_full_name": "Michelle (Moseman) Miller",
        "timestamp": 1542359962
    },
    {
        "content": "<p>I agree that it can handle sharing between devices, but it's not intended as a substitute for logging of data exchange.  I'm happy with the quoted language from the spec in terms of setting appropriate boundaries</p>",
        "id": 154019103,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1542360728
    },
    {
        "content": "<p>Thinking out loud.. It seems like a more generic resource could be useful. AuditEvent is still heavily security focused. All of the Valuesets are security related. And while they are defined with an Extensible binding, trying to fit non-security related events into it feels very much like a hack (to me). <br>\nIt might make sense to have AuditEvent be defined more generically and have security profiles defined for it instead, although possibly too late for that. It might also be useful if there was some sort of generic event as part of the FHIR Workflow spec.</p>",
        "id": 154019169,
        "sender_full_name": "Craig McClendon",
        "timestamp": 1542379696
    },
    {
        "content": "<p>Feel free to submit a change request with that feedback.  It may be that the current value sets are overly tight.  The resource has relatively low maturity, so changes are absolutely possible.</p>",
        "id": 154019177,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1542382199
    },
    {
        "content": "<p>I agree with Lloyd, both of these resources need more clarity. I have failed at keeping AuditEvent scope and description up-to-date with how it is intended to be used. I would disagree with an assertion that AuditEvent is not part of the patient record. The events associated with a patient record are part of that patient record. For example the AuditEvents that make up an 'accounting of disclosures', or 'access report' are clearly patient relevant. I am not sure what the quoted text is trying to distinguish. I would say that AuditEvent and Communication clearly are different intent. Please submit comments with your perspective to help us differentiate, distinguish, and clarify.</p>",
        "id": 154019229,
        "sender_full_name": "John Moehrke",
        "timestamp": 1542393735
    },
    {
        "content": "<p>Several objects in VistA (mostly orders but not all) have \"activity log\" subfiles for capturing certain changes for clinical users. They contain dates, users, reasons, and sometimes the old content.<br>\nFollowing John's clarification, I think AuditEvent is the right tool; we need to extend the resources to contain AuditEvents. We'd profile it with a less regulatory-sounding name - ChangeEvent, perhaps, or Redaction. (We'd also need to add a few extensions for old content, comments,  etc.)<br>\nDoes this sound reasonable?</p>",
        "id": 167668021,
        "sender_full_name": "Jay Lyle",
        "timestamp": 1560028439
    },
    {
        "content": "<p>Provenance gives you all changes to data.  AuditEvent adds read accesses.  Provenance is more typically exposed than AuditEvent</p>",
        "id": 167668228,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560028722
    },
    {
        "content": "<p>That's the other solution we considered. I take it the term \"adds\" suggests they are both acceptable in the areas of overlap? <br>\nThe tooling we have produces the core object container, and it can point out, but it can't produce ancillary resources pointing back in.<br>\nNot the kind of thing you want determining your design but there it is.</p>",
        "id": 167669029,
        "sender_full_name": "Jay Lyle",
        "timestamp": 1560029926
    },
    {
        "content": "<p>Cases where we did specify Provenance (not for edits but for signers &amp; verifiers) look like they'll be handled with extensions.</p>",
        "id": 167704810,
        "sender_full_name": "Jay Lyle",
        "timestamp": 1560094909
    },
    {
        "content": "<p>I would like to dig deeper. Given what you have said, I don't know if it is more of a Provenance or AuditEvent. I would tend to say anything that is going to be used for clinical practice, should focus on Provenance. AuditEvent tends to be more for operations oversight (privacy, security, efficiency, safety, etc)... but this is just overall trend. But because of this trend, the AuditEvent is often filtered over time.</p>",
        "id": 167758071,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560172788
    },
    {
        "content": "<p>note that a change that is approved but that I have not yet put into the specification is to recognize that Provenance.activity valueset should include all of the EHR lifecycle events.</p>",
        "id": 167758170,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560172851
    },
    {
        "content": "<p>It seems that there are clear cases where a thing is Provenance and not an AuditEvent (creation, transfer), and other cases that are AuditEvents and not Provenance (all the system-level stuff that's explicit in the definition). And there are things that could be either, like changes.</p>\n<p>We have lots of MedicationOrder (DSTU2) record metadata, roughly in 2 categories:<br>\n1. Signer, cosigner, verifier: name, title, date, organization (not signature, just the metadata)<br>\n2. Changes: date, action, reason, person, object, old, new, action status<br>\n(These are all for the Pharmacist UI, though maybe a click or two deep.)</p>\n<p>My assumptions were that the first was Provenance, the second AuditEvent. </p>\n<p>I'm profiling the second as AuditEvent. It's a little more elaborate than I assumed, but it seems to work.</p>\n<p>But I can't even start include Provenance in the profile because of the navigability: it points the wrong way. So the first batch may wind up being AuditEvents as well, less because of semantic intent than feasibility. Maybe they should just be extensions until this is worked out.</p>",
        "id": 167871984,
        "sender_full_name": "Jay Lyle",
        "timestamp": 1560274619
    },
    {
        "content": "<p>These both look like Provenance to me.</p>",
        "id": 167873279,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560275574
    },
    {
        "content": "<p>can you explain your concern on navigability?</p>",
        "id": 167873323,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560275607
    },
    {
        "content": "<p>Because the Provenance points at the Order, not vice-versa, we can't specify the required elements in an Order profile; we'll have to create a second profile for the Provenance, and we'll need some robust and clear natural language in the IG to make sure it's built right. (Or something more exotic, like a GraphDefinition.) Also, the integration engine may not support generating resources outside the top node of the Order; still looking into that.</p>",
        "id": 167974347,
        "sender_full_name": "Jay Lyle",
        "timestamp": 1560364189
    },
    {
        "content": "<p>I am still missing something, especially when you say AuditEvent does not have this problem. Provenance and AuditEvent both would point AT the things involved, so there is no difference here. I really want to understand as I really think there is some misunderstanding. I am responsible for Provenance and AuditEvent, so I have a vested interest in them being used properly and am very concerned if there is a defect found that is preventing them from being used as intended.</p>",
        "id": 167975992,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560365420
    },
    {
        "content": "<p>The direction of pointers in REST is related to which resource likely came second, and thus more naturally can point at the thing that came before, or said another way the older resource does not need to be updated each time some new resource points at it. Yet all pointers can be followed in either direction, one via dereferencing (the easy one), the other by a query by referenced value (slightly more hard).</p>",
        "id": 167976277,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560365578
    },
    {
        "content": "<p>Even if the order pointed at Provenance, you'd still have to define a profile on Provenance separately from the Order profile.  You can't nest across references when defining profiles.</p>",
        "id": 167977376,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560366154
    },
    {
        "content": "<p>John: right, the fact that AuditEvent has the same design intent has been brought to my attention. (But not the same constraint.)<br>\nLloyd: right; defining another profile isn't the issue; it's instantiating two top-node resources from one container. The notional design on slide 8 uses an extension of type Reference profiled to point at the profiled AuditEvent.<br>\nI am unclear on the concept behind the MedicationRequest.eventHistory. If it can only refer to prior versions, it can't tell you how the resource got into its current state. <br>\nI've tried to digest our options in a slide deck. Maybe this could be a topic on a Security call? <a href=\"/user_uploads/10155/aCh9cnrUGUulD9y7ZjORvw6E/ChangeEventDesign.pptx\" target=\"_blank\" title=\"ChangeEventDesign.pptx\">ChangeEventDesign.pptx</a></p>",
        "id": 167993378,
        "sender_full_name": "Jay Lyle",
        "timestamp": 1560377530
    },
    {
        "content": "<p>Which constraint is different?</p>",
        "id": 168042661,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560431249
    },
    {
        "content": "<p>In the case of the pattern used (for example MedicationRequest.eventHistory), this is a sub-set of the Provenance that the author of the MedicationRequest 'feels' is most relevant. There will be many other Provenance instances, and ALL of the Provenance instances are discoverable by just looking for Provenance  resources with target equal to the MedicationRequest id.   The fact that the 'last' Provenance is not included is simply because the Provenance can't exist before it exists, and the last Provenance is discoverable as I mentioned above. So there is easy access to the last one, and the list found in eventHistory.<br>\nI was not involved in the creation of this eventHistory mechanism, and just found out about it a month ago. I have questions and concerns about it.<br>\nAre you trying to do something like is defined in eventHistory?</p>",
        "id": 168043114,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560431604
    },
    {
        "content": "<p>Sort of. What I'm suggesting is a way around a design constraint I believe the integration tool is imposing, but let me re-confirm my understanding before spending more of your time.</p>",
        "id": 168087550,
        "sender_full_name": "Jay Lyle",
        "timestamp": 1560462111
    },
    {
        "content": "<p>Regarding different constraints, Provenance has target min cardinality of 1;  AuditEvent doesn't.</p>",
        "id": 168087689,
        "sender_full_name": "Jay Lyle",
        "timestamp": 1560462235
    },
    {
        "content": "<p>This is because AuditEvent is intended to be used to record things like \"User Login successful\", etc... it is about an event... Where as Provenance is about a Create or Update of some Resource. And this C/R has been updated a bit to include some modifiers such as Verify or Sign (the addition of .activity vocabulary from EHR Lifecycle events is approved but not yet applied to the current build).  But always there is a target that is being addressed. Yes, this is a difference.  But in the use-cases you have expressed here, there was a target resource. So this is why I am confused.</p>",
        "id": 168131345,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560516003
    },
    {
        "content": "<p>OK, constraint confirmed. We'd like to use Provenance or AuditEvent as designed, but right now the tooling does not support that. We cannot implement as designed. But we still have all this log data to handle. </p>\n<p>I understand that AuditEvent is intended to refer to its target when it has one. But the fact that there's no conformance requirement for that makes it handy.</p>\n<p>I think it would be preferable to write an extension that leverages the AuditEvent design in a way that will make the AuditEvents recognizable in the near term and easier to migrate to the correct design in the long term, than to write a bunch of extensions that won't do either. Am I wrong?</p>",
        "id": 168420843,
        "sender_full_name": "Jay Lyle",
        "timestamp": 1560877519
    },
    {
        "content": "<p>I am still very confused on what it is that you are struggling with. Lets work backward from the best-case... Given the current build of FHIR, what changes are you thinking are needed on Provenance to enable it to be used as you desire?</p>",
        "id": 168521929,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560961757
    },
    {
        "content": "<p>One:  is the appropriate resource Provenance or AuditEvent? I still don't see any  explanation of the distinction that's clear enough for me to assign our cases. <br>\nTwo: I'm not proposing changing any existing specification designs. And I have not given up on getting the tools to support the intended design, but that might not work.<br>\nSo, if it doesn't (because the data container has  to contain ancillary objects; it can't refer to independent objects) , what are the implications of implementing a modified design that is conformant but not identical to the design intent (and should support migration to the intended design in the future), versus just creating a bunch of extensions.  For the former, AuditEvent does the trick: I can put an extension on a resource and contain those events.</p>",
        "id": 168525661,
        "sender_full_name": "Jay Lyle",
        "timestamp": 1560964411
    },
    {
        "content": "<p>I would really like to understand the problem that you are having.<br>\nI get the impression that your problem might be being caused by your tool? What tool? What problem is it causing?<br>\nBut I also get the impression that you are thinking of some modifications... what are those modifications? If I could understand these modifications, then I might be able to understand the problem you are having.</p>",
        "id": 168526036,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560964646
    },
    {
        "content": "<p>does this article help you understand Provenance vs AuditEvent? <a href=\"https://healthcaresecprivacy.blogspot.com/2016/03/provenance-vs-audit-it-is-not.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2016/03/provenance-vs-audit-it-is-not.html\">https://healthcaresecprivacy.blogspot.com/2016/03/provenance-vs-audit-it-is-not.html</a></p>",
        "id": 168526276,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560964799
    }
]