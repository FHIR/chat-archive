[
    {
        "content": "<p>What strategy are PMS/EHR vendors using when providing a FHIR interface to their data, where the backend data may change between invocations. For example, a  Patient query endpoint where the demographic details may change? Are you using versions, some kind of tag to indicate that the resource may be different is invoked again or neither?</p>",
        "id": 153912133,
        "sender_full_name": "David Hay",
        "timestamp": 1507061525
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191321\">@David Hay</span> Can you clarify the concern or use case?</p>",
        "id": 153912664,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1507225965
    },
    {
        "content": "<p>In general, all data can change, FHIR or not, after you query/retrieve</p>",
        "id": 153912665,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1507225979
    },
    {
        "content": "<p>We do use the meta.versionId in our FHIR resources. If it's different than the last time you queried, something has changed.</p>",
        "id": 153912675,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1507230191
    },
    {
        "content": "<p>Hi Jenni - I think you answered my question - ie it sounds like you track the changes specifically supporting versioning...  The context of the question was what if you are generating resources off of a data store but not tracking versions explicitly? ie the the contents of a given resource could be different on subsequent invokations? How best to let the consumer know that subsequent calls mag give different results? a tag of some sort or a random version that can't subsequently be retrieved? Or maybe it doesn't matter as the consumer should just know that it could be different...</p>",
        "id": 153912795,
        "sender_full_name": "David Hay",
        "timestamp": 1507242279
    },
    {
        "content": "<p>I think the latter (\"the consumer should just know that it could be different\") is what the thought is for servers that don't support versioning, David.  At least that's my take.</p>",
        "id": 153912805,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1507250210
    },
    {
        "content": "<p>those that don't maintain version histories, but do track a last modified date can put that in the version id field, and get the same behaviour (they just can't retrieve the older versions)</p>",
        "id": 153918839,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1510314472
    }
]