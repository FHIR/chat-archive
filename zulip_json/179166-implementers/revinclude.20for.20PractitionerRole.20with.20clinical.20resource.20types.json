[
    {
        "content": "<p>What is syntax to get Bundle containing all of the following?<br>\nConditions for a given patient<br>\nPractitioners for these Conditions where Practitioner.id=Condition.asserter<br>\nPractitionerRoles where PractitionerRole.practitioner = Conditioner.asserter</p>\n<p>What does the following do? Look at 3rd parameter.<br>\nCondition?patient=[patient_id]&amp;_include=Condition:asserter:Practitioner&amp;_revinclude=PractitionerRole:practitioner<br>\nAll Conditions for specified patient<br>\nplus include Practitioners referenced in Condition.asserter<br>\nplus include PractitionerRoles where practitioner references what?<br>\nShould this revinclude all PractitionerRolre resources where PractitionerRole.practitioner = Condition.asserter and Condition.recorder?<br>\nIs there a syntax to revinclude only the PractitionerRoles that link to Condition.asserter?</p>",
        "id": 246287970,
        "sender_full_name": "Torin Shepard",
        "timestamp": 1626474454
    },
    {
        "content": "<p>The _revinclude will grab all PractitionerRole instances that point to any Practitioners that are the direct result of the searchset - which in this case would be none.  You'd need to do _revinclude:iterate=PractitionerRole:practitioner to get PractitionerRoles that pointed to the included Pracitioners from Contiion.asserter.  However, typically, you don't want all PractitionerRoles.  Instead, what you actually want is to grab the Practitioner (and perhaps the Organization) pointed to by PractitionerRole in those cases where Condition.asserter is a PractitionerRole rather than a Practitioner.</p>",
        "id": 246288726,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1626475074
    },
    {
        "content": "<p>If you only want PractitionerRoles for asserter, you'd say <code>Condition?_include=Condition:asserter:PractitionerRole</code></p>",
        "id": 246288809,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1626475149
    },
    {
        "content": "<p>I suspect what you want is:<br>\n<code>Condition?patient=[some_id]&amp;_include=Condition:asserter&amp;include:iterate=PractitionerRole:practitioner</code></p>\n<p>Knowing all of the PractitionerRoles for a practitioner irrespective of how they were acting and what organization they might work for doesn't seem too useful.</p>",
        "id": 246288915,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1626475258
    },
    {
        "content": "<p>Thank you for responding!  I'm trying to solve a problem caused by R4 having PractitionerRole separate from Practitioner.  With DSTU2, _include=Condition.asserter would give me Practitioner which included practitionerRole element.  With R4, I need an additional parameter on the Condition query to be able to get PractitionerRole resource.</p>\n<p>In our update for R4, we have implemented Condition.asserter and recorder as reference to only Practitioner.  We will not be supporting these Condition elements as reference to PractitionerRole.<br>\nWe will be able to support _include=Condition:asserter:Practitioner and/or _include=Condition:recorder:Practitioner</p>\n<p>If I understand correctly, adding _include:interate=PractitionerRole:practitioner should cause our FHIR Server to include all PractitionerRoles that point to the Practitioners in Condition.asserter and recorder.</p>",
        "id": 246289439,
        "sender_full_name": "Torin Shepard",
        "timestamp": 1626475866
    },
    {
        "content": "<p>The issue is that if asserter points to Practitioner, you have no idea what role applied - and there could be lots of candidates (and lots of organizations).  All you know is \"this was asserted by Dr. Smith on behalf of one of the many organizations they work for wearing one of the many hats they work for each organization.</p>",
        "id": 246298379,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1626487697
    }
]