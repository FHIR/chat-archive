[
    {
        "content": "<p>Hi all,<br>\nFirst of all a big thanks for the HAPI library, looks very cool! I'm part of a health company and leading the effort on being FHIR-ready.<br>\nOur stack is Kotlin, with Gradle, and I've had no problems coding a few providers so far.<br>\nHowever I am at a loss when it comes to booting up the server, I'm very new to servlets in general, so I took inspiration from <a href=\"https://github.com/FirelyTeam/fhirstarters/tree/master/java/hapi-fhirstarters-rest-server-skeleton\">https://github.com/FirelyTeam/fhirstarters/tree/master/java/hapi-fhirstarters-rest-server-skeleton</a> and created a matching minimal \"src/main/webapp/web.xml\" file.<br>\nI installed tomcat locally and pulled the appropriate dependencies, following from the Kotlin guide to servlets: <a href=\"https://kotlinlang.org/docs/tutorials/httpservlets.html\">https://kotlinlang.org/docs/tutorials/httpservlets.html</a><br>\nThe war plugin indeed offers a \"war\" task, but it doesn't seem to do much - I'm sure I'm missing something but I can't figure out what Googling around, the war plugin help page (<a href=\"https://docs.gradle.org/current/userguide/war_plugin.html\">https://docs.gradle.org/current/userguide/war_plugin.html</a>) outlines how to configure the task but I couldn't get it to do anything so far.<br>\nBig thanks for any hints,<br>\nThéo</p>",
        "id": 197249109,
        "sender_full_name": "Théo Matussière",
        "timestamp": 1589274089
    },
    {
        "content": "<p>If you haven't already, you need to update your POM packaging to \"war\" as well: <a href=\"https://github.com/FirelyTeam/fhirstarters/blob/master/java/hapi-fhirstarters-rest-server-skeleton/pom.xml#L7\">https://github.com/FirelyTeam/fhirstarters/blob/master/java/hapi-fhirstarters-rest-server-skeleton/pom.xml#L7</a></p>",
        "id": 197251660,
        "sender_full_name": "James Agnew",
        "timestamp": 1589275869
    },
    {
        "content": "<p>there aren't POM files in a gradle project though, I assumed the gradle equivalent configuration to be the one described here <a href=\"https://kotlinlang.org/docs/tutorials/httpservlets.html\">https://kotlinlang.org/docs/tutorials/httpservlets.html</a> with the war plugin, maybe this isn't enough?</p>",
        "id": 197255141,
        "sender_full_name": "Théo Matussière",
        "timestamp": 1589278071
    },
    {
        "content": "<p>Ah sorry, missed the fact that you are using Gradle. Unfortunately I have no experience building WARs with Gradle..</p>",
        "id": 197265043,
        "sender_full_name": "James Agnew",
        "timestamp": 1589285139
    },
    {
        "content": "<p>Do you know of someone who would?</p>",
        "id": 197272701,
        "sender_full_name": "Théo Matussière",
        "timestamp": 1589289116
    },
    {
        "content": "<p>Hmm.. <span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> possibly?</p>",
        "id": 197272939,
        "sender_full_name": "James Agnew",
        "timestamp": 1589289209
    },
    {
        "content": "<p>Excellent, thanks a lot! Can we expect them to see this conversation or should I try to reach out directly?</p>",
        "id": 197273236,
        "sender_full_name": "Théo Matussière",
        "timestamp": 1589289357
    },
    {
        "content": "<p>Jens is pretty active on here, i'm sure he'll see it.</p>",
        "id": 197282087,
        "sender_full_name": "James Agnew",
        "timestamp": 1589292866
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"301138\">@Théo Matussière</span>  You do not need to compile it down to a war, in order to run the HAPI FHIR server. You can easily embed it into an application with an embedded HTTP server, like eg. spring boot which works fine  in kotlin, AFAIK. Now, some questions:<br>\n1) Do you really need to pack it into a war?<br>\n2) Have you had a look at eg. <a href=\"https://guides.gradle.org/building-java-web-applications/#add_a_gradle_build_file\">https://guides.gradle.org/building-java-web-applications/#add_a_gradle_build_file</a>?</p>",
        "id": 197338462,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1589317125
    },
    {
        "content": "<p>hi <span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> thanks a lot for the pointers<br>\n1) I'm new enough to servlets to have no opinion on this, reading through guides and tutorials I thought I picked up that this was necessary - I'd gladly go for something simpler.<br>\n2) I did, that translates into this diff for me:<br>\n<a href=\"/user_uploads/10155/w6SauHLVUJnvpqFGaopA3Ly-/Screenshot-2020-05-13-at-10.03.22.png\">Screenshot-2020-05-13-at-10.03.22.png</a> <br>\nSo I guess all in all I misunderstood the need for tomcat, will look into spring boot. In my setting if I could run it with ktor that would be ideal, do you know if that is feasible?</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/w6SauHLVUJnvpqFGaopA3Ly-/Screenshot-2020-05-13-at-10.03.22.png\" title=\"Screenshot-2020-05-13-at-10.03.22.png\"><img src=\"/user_uploads/10155/w6SauHLVUJnvpqFGaopA3Ly-/Screenshot-2020-05-13-at-10.03.22.png\"></a></div>",
        "id": 197380272,
        "sender_full_name": "Théo Matussière",
        "timestamp": 1589357587
    },
    {
        "content": "<p>Have a look at <a href=\"https://kotlinlang.org/docs/tutorials/httpservlets.html\">https://kotlinlang.org/docs/tutorials/httpservlets.html</a> / <a href=\"https://github.com/Kotlin/kotlin-examples/tree/master/tutorials/servlet-web-applications\">https://github.com/Kotlin/kotlin-examples/tree/master/tutorials/servlet-web-applications</a> and <a href=\"https://github.com/hapifhir/hapi-fhir-jpaserver-starter/blob/master/src/main/java/ca/uhn/fhir/jpa/starter/JpaRestfulServer.java\">https://github.com/hapifhir/hapi-fhir-jpaserver-starter/blob/master/src/main/java/ca/uhn/fhir/jpa/starter/JpaRestfulServer.java</a></p>\n<ul>\n<li>and eg. annotate your JpaRestfulServer with </li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>@WebServlet(\n        name = &quot;FhirServlet&quot;,\n        urlPatterns = &quot;/&quot; + CONTEXT_PATH + &quot;/*&quot;\n        )\n\n class JpaRestfulServer : RestfulServer {\n...\n}\n</code></pre></div>\n\n\n<p>that should get you going ;)</p>",
        "id": 197383948,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1589360112
    },
    {
        "content": "<p>Indeed! I'm getting a servlet to run, but alas it doesn't seem to have registered the HAPI service. Followed the kotlin tutorial which uses gretty with jetty as a backend, whereas the hapi example uses spring, is there a known incompatibility with jetty that means I should use the spring framework? no strong preference either way. <br>\nuploading a few code screens in order to give you more context, maybe I'm just missing something...<br>\nthanks again for the attention!<br>\n<a href=\"/user_uploads/10155/uwi6lVewtzhNwkA0gILpssZ0/Screenshot-2020-05-13-at-19.56.03.png\">Screenshot-2020-05-13-at-19.56.03.png</a> <a href=\"/user_uploads/10155/MHofRPw8fxDkRvU1ivWmVhTJ/Screenshot-2020-05-13-at-19.55.39.png\">Screenshot-2020-05-13-at-19.55.39.png</a> <a href=\"/user_uploads/10155/9pFuhAJtKmo5VCQfeMnhLcGt/Screenshot-2020-05-13-at-19.55.35.png\">Screenshot-2020-05-13-at-19.55.35.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/uwi6lVewtzhNwkA0gILpssZ0/Screenshot-2020-05-13-at-19.56.03.png\" title=\"Screenshot-2020-05-13-at-19.56.03.png\"><img src=\"/user_uploads/10155/uwi6lVewtzhNwkA0gILpssZ0/Screenshot-2020-05-13-at-19.56.03.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/10155/MHofRPw8fxDkRvU1ivWmVhTJ/Screenshot-2020-05-13-at-19.55.39.png\" title=\"Screenshot-2020-05-13-at-19.55.39.png\"><img src=\"/user_uploads/10155/MHofRPw8fxDkRvU1ivWmVhTJ/Screenshot-2020-05-13-at-19.55.39.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/10155/9pFuhAJtKmo5VCQfeMnhLcGt/Screenshot-2020-05-13-at-19.55.35.png\" title=\"Screenshot-2020-05-13-at-19.55.35.png\"><img src=\"/user_uploads/10155/9pFuhAJtKmo5VCQfeMnhLcGt/Screenshot-2020-05-13-at-19.55.35.png\"></a></div>",
        "id": 197451996,
        "sender_full_name": "Théo Matussière",
        "timestamp": 1589392711
    },
    {
        "content": "<p>HAPI uses spring as IoC</p>",
        "id": 197519641,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1589442339
    },
    {
        "content": "<p>you can use tomcat, undertow, jetty and a lot of other containers with spring</p>",
        "id": 197519888,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1589442530
    },
    {
        "content": "<p>You could have a look at this (old) example of combining webservlet with gretty: <a href=\"https://github.com/akhikhl/example-uploadr\">https://github.com/akhikhl/example-uploadr</a></p>",
        "id": 197520191,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1589442738
    },
    {
        "content": "<p>I'm not seeing differences in either the gradle file or the server registration part though.</p>",
        "id": 197522494,
        "sender_full_name": "Théo Matussière",
        "timestamp": 1589444443
    },
    {
        "content": "<p>Hah ok I found it, it was the <code>loadOnStartup</code> thing that was missing, with <code>@WebServlet(name = \"FhirServlet\", value = [\"/fhir/*\"], loadOnStartup = 1)</code> it indeed runs the server</p>",
        "id": 197524688,
        "sender_full_name": "Théo Matussière",
        "timestamp": 1589445712
    },
    {
        "content": "<p>big thanks <span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> !</p>",
        "id": 197524728,
        "sender_full_name": "Théo Matussière",
        "timestamp": 1589445722
    }
]