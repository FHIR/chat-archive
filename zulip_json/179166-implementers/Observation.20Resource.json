[
    {
        "content": "<p>Hi all, <br>\nWe created many profiles using Observation resource just changing category(like vitalsigns, social history, etc..) and codes. We are not changing any structure. Should we create so many java objects at server side or we can use observation? How to handle this?<br>\nThank you.</p>",
        "id": 153999899,
        "sender_full_name": "Lakshmi Thrivarna",
        "timestamp": 1537956524
    },
    {
        "content": "<p>We're working on a solution to that problem where we'd combine a smaller number of profiles with a simple catalog that sets values for things like Observation.code and value units of measure.  However, that's not done yet.  For now, you can either create a lot of profiles or create a small number of profiles and add extra custom logic that defines the details.</p>",
        "id": 154000005,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1537977965
    },
    {
        "content": "<p>We are implementing a FHIR server where the logical ID of the resource is a GUID that correlates a record in our EHR database. For example, the id of an AllergyIntolerance resource will be the ID of a patient allergy record in our table. However, I am not sure how to implement GET [base]/Observation/{id} because the data for an observation resource is from different tables depending on the category type or code. To implement  GET with search parameters, GET [base]/Observation?patient=[id]&amp;category=vital-signs , I can go to the table has the vital signs data and get the ID of the resource. However,  when implementing the route to get a resource by ID, how do I go about it? Thank you.</p>",
        "id": 173578968,
        "sender_full_name": "Lakshmi Bhamidipati",
        "timestamp": 1566248559
    },
    {
        "content": "<p>Instead of using the straight GUID as the FHIR logical ID use a prefixed version, where the prefix indicates the table - eg 1.&lt;GUID&gt; is the FHIR id of a vital sign, 2.&lt;GUID&gt; is a lab etc.</p>",
        "id": 173581545,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1566250445
    },
    {
        "content": "<p>(we do this in our server where we have that exact same problem)</p>",
        "id": 173581560,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1566250460
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> . That should work for us too.</p>",
        "id": 173621049,
        "sender_full_name": "Lakshmi Bhamidipati",
        "timestamp": 1566263495
    }
]