[
    {
        "content": "<p>I've been reading up on security labels and Oath scopes to see how one could support the necessity to convey 'PurposeOfUse' (GDPR art.6) in a request/query to a FHIR server.  Oauth scope (see <a href=\"https://healthcaresecprivacy.blogspot.nl/2016/01/fhir-oauth-scope.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.nl/2016/01/fhir-oauth-scope.html\">https://healthcaresecprivacy.blogspot.nl/2016/01/fhir-oauth-scope.html</a>) seems to be an obvious candidate, but currently that's not how SMART (and FHIR itself) recommend that it be done. I'm more familiar with SAML tokens, PurposeOfUse would definitely be a SAML token, so the question is where this would end up using OAuth.</p>\n<p>For break-glass we have a  solution in the HTTP header (see <a href=\"http://build.fhir.org/security-labels.html#break-the-glass\" target=\"_blank\" title=\"http://build.fhir.org/security-labels.html#break-the-glass\">http://build.fhir.org/security-labels.html#break-the-glass</a> ) - this seems totally out of whack with a desired general solution for PurposeOfUse. It seems to encourage us to ignore OAuth and convey the PurposeOfUse (whatever it may be) in the HTTP header. Which puts the burden on the FHIR server (instead of upon OAuth) to verify if this user is allowed to use the supplied value for PurposeOfUse. I'm not a security pundit, but it seems this simply wouldn't scale.</p>\n<p>So would this use case indeed be best served by using OAuth scopes? If using SAML, would you agree that this would be a SAML token? <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span></p>",
        "id": 153917722,
        "sender_full_name": "René Spronk",
        "timestamp": 1509955874
    },
    {
        "content": "<p>One perspective is that with GDPR two things are much closer:  \"normal\" use and \"break glass\" ( in the sense that \"break glass\" means \"I want to have access to data that I did not have before and here is whatever-you-need-to-give-me-that-data).</p>",
        "id": 153917726,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1509959017
    },
    {
        "content": "<p>Ihave no idea about oauth and saml, but whatever brings this to the use of personal data is a step forward, I think</p>",
        "id": 153917727,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1509959092
    },
    {
        "content": "<p>Btw, in GDPR, the use of Purpose is more restricted when handling sensitive data (like healthcare data) but the mechanism is the same.</p>",
        "id": 153917728,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1509959241
    },
    {
        "content": "<p>I mean, \"Legitimate interest\" is not a valid purpose to access healthcare data. But it is one among the purposes,and the machine should behave the same way for all purposes.</p>",
        "id": 153917729,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1509959325
    },
    {
        "content": "<p>My initial goal is to resolve how \"PurposeOfUse\" is identified (as  code) in a request/query. If one (under GDPR) tries to use \"legitimate interest\" as a purpose of use related to a clinical resource, access (or: a token to access) simply won't be provided. But that's of later concern - first we need to find out how to convey the PurposeOfUse.</p>",
        "id": 153917732,
        "sender_full_name": "René Spronk",
        "timestamp": 1509963950
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span></p>",
        "id": 153917744,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1509967602
    },
    {
        "content": "<p>There are plenty of things that could make sense here, depending on requirements. Are you doing this in the context of an existing SMART on FHIR implementation?  Would you want to rely on the user to assert the purpose use, or the app, or both together, or either alone? Would you want to capture this purpose at the time of the authorization, or capture it anew with each data query?</p>",
        "id": 153917762,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1509970126
    },
    {
        "content": "<p>Two examples of a potential solution: 1) just ask the user a question on the authorization screen, and capture the response, associating it internally with the access token -- in which case, no changes to the SMART protocol are needed because the implementation is entirely within the EHR system. Or 2) ask the app to pass along an additional parameter as part of the initial authorization request.</p>",
        "id": 153917763,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1509970286
    },
    {
        "content": "<p>But if you simply want to log this information without needing to review it in a real-time gating fashion, then 3) putting it in a header for each API call would allow the  FHIR Server to log it (and logging/audit event generation <em>is</em> a FHIR Server concern).</p>",
        "id": 153917764,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1509970385
    },
    {
        "content": "<p>The purpose is determined at the time of defining what is data used for (say, per each use case) and the it is used in every query that is meant for that purpose.</p>",
        "id": 153917769,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1509973389
    },
    {
        "content": "<p>Option 3 makes sense.</p>",
        "id": 153917771,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1509973420
    },
    {
        "content": "<p>Idd, <span class=\"user-mention\" data-user-id=\"191372\">@René Spronk</span> the purpose should be conveyed somehow. I diverged :)</p>",
        "id": 153917773,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1509973478
    },
    {
        "content": "<p>According to (my working interpretation of) the GDPR, you have to provide the purpose you claim to have, and also you need to show that the purpose is lawful. For example if the purpose is \"consent\", you may have to show evidence of the consent. But I don't think this would be in an API call, right?</p>",
        "id": 153917775,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1509973639
    },
    {
        "content": "<p>Is there a standard way to put the value of purpose in arequest? Is a header there best choice? I don't know how that works.</p>",
        "id": 153917776,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1509973744
    },
    {
        "content": "<p>The where to put PurposeOfUse is not an obvious thing in an OAuth world. Just like it is not clear where one would put the security ROLE of the user. In neither case would one prompt the user. But, it is not clear. In normal business logic the purpposeOfUse and the user-role come from the context of the interaction. Usually from business relationships (the user is a cardiologist at this organization [static role], and right now is the treating cardiologist [functional role], with the purposeOfUse of treatment), ( the user is a clinical data analysis at blah-organization with the purposeOfUse of treatment quality and timeleness analysis).</p>",
        "id": 153917781,
        "sender_full_name": "John Moehrke",
        "timestamp": 1509975084
    },
    {
        "content": "<p>In IHE-IUA (IHE's OAuth profile), we put these as attributes in the token.  <a href=\"http://wiki.ihe.net/index.php/Internet_User_Authorization\" target=\"_blank\" title=\"http://wiki.ihe.net/index.php/Internet_User_Authorization\">http://wiki.ihe.net/index.php/Internet_User_Authorization</a>   We however never addressed where they came from (Yes, IUA is a bit too thin to be useful).</p>",
        "id": 153917782,
        "sender_full_name": "John Moehrke",
        "timestamp": 1509975181
    },
    {
        "content": "<p>In SMART, I would expect PurposeOfUse to become an attribute of the context. As I point out above it is 'context', like the organization the request is onbehalf of, or the user-role, etc.</p>",
        "id": 153917783,
        "sender_full_name": "John Moehrke",
        "timestamp": 1509975262
    },
    {
        "content": "<p>As Rene also points out, I did model purposeOfUse into scope <a href=\"https://healthcaresecprivacy.blogspot.com/2016/01/fhir-oauth-scope.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2016/01/fhir-oauth-scope.html\">https://healthcaresecprivacy.blogspot.com/2016/01/fhir-oauth-scope.html</a></p>",
        "id": 153917784,
        "sender_full_name": "John Moehrke",
        "timestamp": 1509975339
    },
    {
        "content": "<p>That proposal was included in my comments on SMART. The ConfidentialityCode part of that post is part of the HEART scope specification.  <a href=\"http://openid.net/specs/openid-heart-fhir-oauth2-1_0-ID1.html\" target=\"_blank\" title=\"http://openid.net/specs/openid-heart-fhir-oauth2-1_0-ID1.html\">http://openid.net/specs/openid-heart-fhir-oauth2-1_0-ID1.html</a></p>",
        "id": 153917785,
        "sender_full_name": "John Moehrke",
        "timestamp": 1509975460
    },
    {
        "content": "<p>What is important to include in the model is that the declaration of PuposeOfUse must be an assertion of truth that all parties can trust is accurate and will be upheld. (Just like the user, user-role, user-organization, etc...) This is why I put it into the token, rather than into the scope.</p>",
        "id": 153917786,
        "sender_full_name": "John Moehrke",
        "timestamp": 1509975573
    },
    {
        "content": "<p>Lastly, yes we know that the break-glass that is in the spec today is problematic. It exists because it was written, not because it was a consensus decision. However, we don't have a better consensus yet. The results of this PurposeOfUse experiment will inform us.</p>",
        "id": 153917787,
        "sender_full_name": "John Moehrke",
        "timestamp": 1509975793
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> This is not in the context of SMART, it is a generic question, not even limited to OAuth but also to SAML. How in general would we convey PurposeOfUse ?</p>",
        "id": 153917789,
        "sender_full_name": "René Spronk",
        "timestamp": 1509978604
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> So in a SAML world the pruposeOfUse would be a SAML token; in an OAuth world this could be done using a scope or some other OAuth thingy (Oauth is no my strong point). HTTP header is plain ugly and unreliable, so I'm fully prepared to ignore any use of it as currently in the FHIR spec (for break glass).</p>",
        "id": 153917790,
        "sender_full_name": "René Spronk",
        "timestamp": 1509978785
    },
    {
        "content": "<p>In GDPR the PurposeOfUse may not be wholly derivable from the context of the exchange. After all under GDPR it is a classification defined by a law, which may not have a clearly defined (or 1-to-1) relationship with PurposeOfUse (as a value set) as currently defined in FHIR.</p>",
        "id": 153917791,
        "sender_full_name": "René Spronk",
        "timestamp": 1509978959
    },
    {
        "content": "<p>I haven't looked at IHE IUA as of yet (well not at a detailed level, that is) so I'll have a look at that as well.</p>",
        "id": 153917792,
        "sender_full_name": "René Spronk",
        "timestamp": 1509979118
    },
    {
        "content": "<p>IUA looks pretty similar to XUA, so to someone with a SAML background it 'feels' quite intuitive. But that doesn't mean this would be the ebst solution in the context of OAuth. How would someone, not from the healthcare IT industry, who only knows about OAuth (and not SAML) solve this ussue? Whats'the most Oauth-ish way of solving this?</p>",
        "id": 153917793,
        "sender_full_name": "René Spronk",
        "timestamp": 1509979363
    },
    {
        "content": "<p>I still don't have clarity on 1)<em>who</em> is asserting the purpose of use: an individual, or a business partner, or...? and 2) whether the purpose of use is associated with a whole session of interactions, or with individual API calls</p>",
        "id": 153917795,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1509979605
    },
    {
        "content": "<p>on 1): There may be cases where the _intended_ purpose can be asserted by an individual, or determined by the individual/role/... combination. the _allowed_ purposes can be defined at design time.</p>",
        "id": 153917801,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1509983956
    },
    {
        "content": "<p>One example (let me know if I am off track): Patient 1 is visiting Dr. D. <br>\nDr. D gets the history of Patient 1's medications from another system. 2 minutes later, Dr. D gets the history of patient 2's medication.</p>",
        "id": 153917802,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1509984248
    },
    {
        "content": "<p>the 2 API calls above (same mechanism, different patients) can go under the same purpose or not.</p>",
        "id": 153917804,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1509984574
    },
    {
        "content": "<p>However, some(/most?) systems are not designed to consider the purpose. So the 2 API calls above are identical except for patientID.</p>",
        "id": 153917806,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1509984633
    },
    {
        "content": "<p>I think it's one step forward if we add the Purpose to the calls. Then we can look at how the machines determine the purpose to put in the request.</p>",
        "id": 153917807,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1509984667
    },
    {
        "content": "<p>Josh, PurposeOfUse is a claim/assertion of how the data that would be communicated will be used. For most of our uses today \"Treatment\"+\"Payment\"+\"normal Operations\" would be the PuposeOfUse. In treatment scenarios it is often 'implied' by the interaction (The HL7 v2 messages come from X organzation so are \"Treatment\", or Y organization so \"Payment\").</p>",
        "id": 153917808,
        "sender_full_name": "John Moehrke",
        "timestamp": 1509984674
    },
    {
        "content": "<p>anyway: heck, we are already talking purpose, which is good.</p>",
        "id": 153917811,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1509984705
    },
    {
        "content": "<p>PurposeOfUse gets used more when use-cases beyond \"Treatment\" are needed.</p>",
        "id": 153917814,
        "sender_full_name": "John Moehrke",
        "timestamp": 1509984757
    },
    {
        "content": "<p>Some systems treat PurposeOfUse just like user-role... this is why I brought up the question of how are we handling user-role in OAuth?  How do we know the GP (who is allowed to make observations), from a dietitian that is only allowed to view data to assure meal ordered fits dietary requirements?  I ask, because the assertion of the role of the user is just as critical to be a claim/assertion. Different in that user roles tend to get converted easily into scopes, thus don't need to persist into the security token scope.</p>",
        "id": 153917818,
        "sender_full_name": "John Moehrke",
        "timestamp": 1509984968
    },
    {
        "content": "<p>IUA looks much like XUA because hat is all that we tried to do... given the attributes we(IHE) found were needed in a SAML assertion, where/how would they be communicated when OAuth is used rather than SAML.   One solution IUA offers is to just carry the SAML using OAuth. The other is a mapping to existing JWT claims, and a set of extended claims for those the needed (healthcare specific).</p>",
        "id": 153917822,
        "sender_full_name": "John Moehrke",
        "timestamp": 1509985084
    },
    {
        "content": "<p>Would be happy to see SMART adopt these from IUA. We are all one big happy family all trying to improve interop.</p>",
        "id": 153917825,
        "sender_full_name": "John Moehrke",
        "timestamp": 1509985297
    },
    {
        "content": "<p>Just in case you're not familiar with them: GDPR PurposeOfUse (for use in queries/requests, and in provenance/security labels in a response) <a href=\"https://www.privacy-regulation.eu/en/6.htm\" target=\"_blank\" title=\"https://www.privacy-regulation.eu/en/6.htm\">https://www.privacy-regulation.eu/en/6.htm</a></p>",
        "id": 153917842,
        "sender_full_name": "René Spronk",
        "timestamp": 1509987772
    },
    {
        "content": "<p>Article 9 <a href=\"https://www.privacy-regulation.eu/en/9.htm\" target=\"_blank\" title=\"https://www.privacy-regulation.eu/en/9.htm\">https://www.privacy-regulation.eu/en/9.htm</a> lists lawful grounds for 'healthcare data', in case of healthcare data one needs both a lawful ground from art6 as well as from art9, although we could probably construct 1 hierarchical value set which combines both. So let's assume there's one single code.</p>",
        "id": 153917843,
        "sender_full_name": "René Spronk",
        "timestamp": 1509987879
    },
    {
        "content": "<p>Use cases are b2b back end systems, as well as apps. We may be talking lengthy sessions, or single shot requests. Key is to create generic guidance, which could include some Whens and Ifs of course.</p>",
        "id": 153917844,
        "sender_full_name": "René Spronk",
        "timestamp": 1509987948
    },
    {
        "content": "<p>Following the guidance in <a href=\"https://github.com/IdentityServer/IdentityServer3/issues/67\" target=\"_blank\" title=\"https://github.com/IdentityServer/IdentityServer3/issues/67\">https://github.com/IdentityServer/IdentityServer3/issues/67</a> and <a href=\"https://security.stackexchange.com/questions/145776/what-are-openid-scopes-and-claims\" target=\"_blank\" title=\"https://security.stackexchange.com/questions/145776/what-are-openid-scopes-and-claims\">https://security.stackexchange.com/questions/145776/what-are-openid-scopes-and-claims</a> I'd say that the GDPR PurposeOfUse is about the 'user' and not about the 'client'. As such it should be handled as a claim/token, and not a scope. In this context the user has to make a conscious decision as to what his/hers PurposeOfUse is. <br>\nI fully expect there to be use-cases where a client will be only allowed to access a subset of whatever it is that the user would be able to retrieve based on his/hers PurposeOfUse, that would be in the scope. But in the context of GDPR the PurposeOfUse is NOT a scope, so the IHE IUA guidance is appropriate in this case. <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> <span class=\"user-mention\" data-user-id=\"192248\">@Alexander Mense</span></p>",
        "id": 153917920,
        "sender_full_name": "René Spronk",
        "timestamp": 1510043228
    },
    {
        "content": "<p>It's an interesting point. Generally claims in the id_token are claims supported (and signed) by the identity provider and communicated <em>to</em> the data-receiver (client). A purpose of use is much more contextual than a user's identity -- and the GDLR goal (I think) is to communicate a purpose of use to the data holder rather than to the third-party requesting data.</p>",
        "id": 153918002,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1510065202
    },
    {
        "content": "<p>I agree, it is not a direct map to Identity (like structural role). It is more related to what the user is doing (like a functional role). SO it would not be part of an OpenID Connect assertion. So like cascading OAuth, it would be more of the authorization decision, than the identity decision.... right?</p>",
        "id": 153918007,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510066668
    },
    {
        "content": "<p>I am not as convinced as Rene that PuposeOfUse isn't part of the scope.</p>",
        "id": 153918008,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510066724
    },
    {
        "content": "<p>I was certainly thinking of a cascading OAuth context. This is primarily about authorization. Some (functional) roles may use certain PurposeOfUses, others may not (e.g. breaking-glass can't be used by billing clerks; \"vital interest to patient [i.e. I have an ongoing care-relationship with the patient]\" can only be used if indeed one has such an active care-relationship, which some countries maintain a record of at the national level [a PIP in XACML terms], so one can verify this). <br>\n<span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> You're correct that this bit of GDPR information is of utmost importance to the data-holder, but there's is a level of authorization as to what values one could include (as a data-receiver).<br>\nI would expect the casdading Oauth environment to at least make some sensible authorization statements at a higher level of abstraction, whereas the access-control-engine used by the data-holder upon receipt of the request will have lots more detailed information at its fingertips when making access control decisions.</p>",
        "id": 153918012,
        "sender_full_name": "René Spronk",
        "timestamp": 1510068389
    },
    {
        "content": "<p>I could see relying on an external identity server to learn things like \"what is this user's name\" or \"is the user a licensed practitioner\". But when it comes to \"what is the user's purpose\", there is also an opportunity to \"just ask\". Trying to shoehorn purpose into user identity seems strange to me.</p>",
        "id": 153918013,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1510068664
    },
    {
        "content": "<p>Purpose and identity are indeed different. the purpose can be asked, or assumed. Implying a purpose from an identity is not without issues.</p>",
        "id": 153918015,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1510069551
    },
    {
        "content": "<p>Back to GDPR, what matters is that the purpose of processing / transfer falls under one of the allowed categories. Communicating the purpose is to inform the data holder so that they can claim conformance.</p>",
        "id": 153918017,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1510069725
    },
    {
        "content": "<p>We have had this same conversation in other forums.  The thought was to create a scope that was returned from the authorization to the resource server primarily for auditing purposes (in addition to whatever underlying authorization may be associated  by that decision)  The details on specifics of how that was determined was determined out of scope.  It was so controversial - it was removed.</p>",
        "id": 153918066,
        "sender_full_name": "Debbie Bucci",
        "timestamp": 1510084784
    },
    {
        "content": "<p>Is it really a user decision? thought GPRD designated  classes or <em>type of information</em> that fell under the rule.  There may be cases it falls under the rule without any conscious decision to be made.  Its not always tied to the identity in that case.</p>",
        "id": 153918075,
        "sender_full_name": "Debbie Bucci",
        "timestamp": 1510087066
    },
    {
        "content": "<p>When the user is the patient accessing their own data, the PuposeOfUse is clear -- it is a patient request for their own data.  This includes when it is an application acting on the authority of the patient. This also includes when an authorized family/guardian is acting in their capacity as authorized representative (See PATRQT)....... When the request is by a clinical user for a treatment use-case -- it is clear it is a Treatment PurposeOfUse (and likely payment and operations). ......  It is the other PurposeOfUse that we have not specifically talked about that are not obvious. We should get specific on these... We may find that these are not common enough to work on yet, thus deferring the solution outside of PATRQT and TREAT.</p>",
        "id": 153918079,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510087714
    },
    {
        "content": "<p>I think what <span class=\"user-mention\" data-user-id=\"191372\">@René Spronk</span> is looking for \"GDPR Purpose\" is a way to convey a 'string' that is understood by the Authority, such that the authority looks for reasons to authorize this user for that purpose. Once it determines that there is an authorized purpose with that 'string' and it does enable the requested type of data (the rest of the scope), for the requesting user (OpenID Connect token); then it can create a permit token containing a valid scope. This scope may or may-not be just like the requested scope.     I say 'string' because in the context of GDPR they speak of authorized 'purposes', they don't specifically mention the HL7 defined PurposeOfUse vocabulary. This is fine, since our use of the HL7 defined PurposeOfUse vocabulary is in either a tag (security tags), or in a CodeableConcept; where a string is just as good as a well defined HL7 defined code.     BUT, we need a way to declare a purpose (PurposeOfUse) in a scope request...</p>",
        "id": 153918106,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510096441
    },
    {
        "content": "<p>my blog post from 2016 would support this, but might not be structured exactly right <a href=\"https://healthcaresecprivacy.blogspot.com/2016/01/fhir-oauth-scope.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2016/01/fhir-oauth-scope.html\">https://healthcaresecprivacy.blogspot.com/2016/01/fhir-oauth-scope.html</a></p>",
        "id": 153918109,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510096526
    },
    {
        "content": "<p>I have an updated one too <a href=\"https://healthcaresecprivacy.blogspot.com/2017/05/fhir-oauth-scope-proposal-using-fhir.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2017/05/fhir-oauth-scope-proposal-using-fhir.html\">https://healthcaresecprivacy.blogspot.com/2017/05/fhir-oauth-scope-proposal-using-fhir.html</a></p>",
        "id": 153918110,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510096760
    },
    {
        "content": "<p>Ok that we need settle to declare a Purpose of Use. <br>\nOne precision: the GDPR concern is not as detailed as this discussion. It simply says that if a company has a mechanism to process or use data, that must follow a purpose.<br>\nThe impact of that on FHIR is simple: If there is an interface, the interface should be a)for a specific purpose and that purpose documented. b) The interface can serve many purposes and in that case the purposes must be clarified for each actual use.</p>",
        "id": 153918112,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1510097206
    },
    {
        "content": "<p>For Purposes of Use we can use the GDPR value set or, perhaps better, a hierarchy like in ISO 14265</p>",
        "id": 153918114,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1510097267
    },
    {
        "content": "<p>The value set  for \"GDPR Purpose\" as implied by the legislation is fairly limited (e.g. it doesn't even discuss the patient as a user). So this certainly would have to be expanded/merged with concepts as defined in the HL7 PurposeOfUse value set.</p>",
        "id": 153918153,
        "sender_full_name": "René Spronk",
        "timestamp": 1510131618
    },
    {
        "content": "<p>Yep, we can have things like \"patient accessing his own record\" specialization. or \"Emergency access because someone is at risk\".<br>\nFrom GDPR, what is relevant is to categorize the mechanisms that are in place, not each transaction. <br>\nSo if an interface supports patients to access their own records and also supports physicians in emergency situations,  for GDPR this is mapped to the 2 purposes.</p>",
        "id": 153918154,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1510131922
    },
    {
        "content": "<p>Jose, we have those codes</p>",
        "id": 153918188,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510151951
    },
    {
        "content": "<p>Rene, my read seemed to indicate that a Purpose is a open ended indicator that is the map to a Consent -purpose-. Meaning I consent to allow my data to be used by bob for the purpose of X. Thus when bob asks for access to the data, bob needs to indicate it is for purpose X. Where X could be any 'string'.</p>",
        "id": 153918190,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510152047
    },
    {
        "content": "<p>It seems unclear what GDPR means with purposes of processing.<br>\nA few weeks ago I asked if we should consider Privacy (a la GDPR) in FHIR. but this discussion seems to be around roles and authorization - so maybe I am really off topic here.</p>",
        "id": 153918205,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1510154358
    },
    {
        "content": "<p>Jose, who did you ask?  The Security WG and CBCC WG are working on Privacy and Security. We have a \"Privacy and Security Module\" page.</p>",
        "id": 153918213,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510154928
    },
    {
        "content": "<p>In a previous chat around here.</p>",
        "id": 153918214,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1510154954
    },
    {
        "content": "<p>GDPR has a relatively clear message: When you create a mechanism like an interface), that contains personal data , you have to make sure that there is a purpose. Authorization, access control, etc. is orthogonal to that.</p>",
        "id": 153918215,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1510155098
    },
    {
        "content": "<p>We are very willing to work on specific tasks. We are working on many. If you have some \"Privacy (a la GDPR)\" thing that you think is needed, then please elaborate on what that is. I am concerned that you think nothing is being done on \"Privacy\" other than \"roles and authorization\".</p>",
        "id": 153918216,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510155714
    },
    {
        "content": "<p>i am just commenting that in this discussion i see the roles which are not a vehicle or indicator for GDPR Purpose of Use.</p>",
        "id": 153918231,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1510157151
    },
    {
        "content": "<p>i prefer to keep those isolated. Purpose is one, role is another.</p>",
        "id": 153918232,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1510157175
    },
    {
        "content": "<p>yes PurposeOfUse is a different vector than Role. Sorry if I caused confusion. Role is a concept defined of both structural and functional roles... My point is that PurposeOfUse is, like FUNCTIONAL-Role, in that it is more related to what is being functionally done; and unlike STRUCTURAL-Role, which is more static definition of the user identity.   We have had PurposOfUse in FHIR from the very beginning.</p>",
        "id": 153918235,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510157472
    },
    {
        "content": "<p>It is just no yet part of SMART... It is part of IHE-IUA profile on OAuth...</p>",
        "id": 153918236,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510157507
    },
    {
        "content": "<p>We have had good experience with a federated approach with multiple identity providers. Authentication -&gt; oauth/ authorization -&gt; XACML. This allows us to maintain flexibility even in distributed Systems. Advantage of this approach: The compatibility with the IHE profile \"Basic Patient Privacy Consents (BPPC)\" remains maintained.</p>",
        "id": 153918322,
        "sender_full_name": "Florian Meißner ",
        "timestamp": 1510169893
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>  you stated \"Rene, my read seemed to indicate that a Purpose is a open ended indicator that is the map to a Consent -purpose-. Meaning I consent to allow my data to be used by bob for the purpose of X. Thus when bob asks for access to the data, bob needs to indicate it is for purpose X. Where X could be any 'string'.\" </p>\n<p>In essence that would seem to be correct, although I would slightly rephrase so that it's no just about consent:</p>\n<p>Purpose is a open ended indicator that is the map to a Consent[or other lawful ground for exchange]  -purpose-. Meaning I consent [or the law allows for some other reason X for sharing] to allow my data to be used by bob for the purpose of X. Thus when bob asks for access to the data, bob needs to indicate it is for purpose X. Where X could be any 'string'.</p>",
        "id": 153918436,
        "sender_full_name": "René Spronk",
        "timestamp": 1510216963
    },
    {
        "content": "<p>not sure where this landed with regard to purpose of use and OAuth. but we do imply how to associate a purpose of use on a per request basis here:</p>",
        "id": 153918654,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1510265722
    },
    {
        "content": "<p><a href=\"http://build.fhir.org/security-labels.html#break-the-glass\" target=\"_blank\" title=\"http://build.fhir.org/security-labels.html#break-the-glass\">http://build.fhir.org/security-labels.html#break-the-glass</a></p>",
        "id": 153918655,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1510265725
    },
    {
        "content": "<p>However, I think that purpose of use is not an API thing; it's associated with coarser grained interactions for export of data - .e.g the server trusts the client to log the purpose of use when appropriate. I don't know whether that's good design, but that's how I've seen it working now.</p>",
        "id": 153918656,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1510265824
    },
    {
        "content": "<p>As for OAuth, I feel that it would be good to be able to map from the id in an openID JWT to a user role - a Resource of RIM type Role (Patient, RelatedPerson, Practitioner)</p>",
        "id": 153918657,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1510265877
    },
    {
        "content": "<p>So where we landed seems to me:  ( a ) the mechanism written in the break-glass section seems wrong, ( b ) IHE has purposeOfUse in the OAuth JWT, and ( c ) SMART is deferring this until next revision of SMART.  An OpenID Connect token should not be seen as appropriate as that is only about identity of the user, which might include structural-roles, but would not know about functional-roles or purposeOfUse. Experimentation, and experience might put it in various places.  In SMART it could go into context, near other stuff that is describing the workflow context. It could go into scope. It could be that we define specific cascade of OAuth where the Nth OAuth authority is responsible for assuring the user is authorized to participate in a specific worflow/dataflow/reason.  This might be the same as the consent OAuth authority (UMA), or might be an additional layer... Certainly at the GDPR level, purpose is very specific to authorization of reason for access (consent).</p>",
        "id": 153918860,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510326311
    },
    {
        "content": "<p>why is the mechanism wrong?</p>",
        "id": 153918939,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1510349646
    },
    {
        "content": "<p>I agree the openID JWT should not contain information roles, but I think it should contain information to connect the user to a fhir resource if one is known</p>",
        "id": 153918940,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1510349690
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> In my view the use of an HTTP header to convey \"Break The Glass\" is not appropriate because the http header is not a security mechanism. The method of conveying break-the-glass, or any PurposeOfUse, needs to be done in a way that is testable that the user has the RIGHT to declare break-the-glass, and that the breaking of that glass does not violate policy, including Consent that might forbid it.     Having this in an http header enables malicious individual to simply fixup a http header and gain access that they don't have authorization.    However, given there is no good alternative at this time, it seems like this is as good of a experimental method as any.</p>",
        "id": 153919578,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510694886
    },
    {
        "content": "<p>I guess it might be logical to use a http header between the user and the OAuth authority, but between that decision and the relying-party (FHIR Server) the use of http header would not be the right solution.</p>",
        "id": 153919579,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510694981
    },
    {
        "content": "<p>however, why not just do this very same thing with scope... and not mess around with an http header.</p>",
        "id": 153919581,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510695885
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>  I completely don't understand why using a header is not the right way. Of course the server has to check that the user is authorized to make the request. that's what the server does with headers.</p>",
        "id": 153919611,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1510722218
    },
    {
        "content": "<p>Okay, so in your case your FHIR Server is going to also make authorization decisions, not just enforce a decision made by the OAuth authority? In that case, then it is certainly possible to use the http header.</p>",
        "id": 153919734,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510757526
    },
    {
        "content": "<p>it must. The relationship between the resource server and the authorization server is not described, but there must be one, and the resource server <em>must</em> check every request and know the details of the permissions inside the processing of the request</p>",
        "id": 153919747,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1510758338
    },
    {
        "content": "<p>In the case of SMART, the OAuth and the Resource server are tightly bound. The Resource server does need to confirm the token, and scope; and it then must enforce the decision (which means constraining results to the scope). But in this case the Resource server is not expected to make any decisions, just enforce decisions that have already been made (by the OAuth authority)....     This is a simplified model that can be done when the OAuth authority and the Resource server are tightly bound, like is defined in SMART....   This is not the only way to use OAuth, as you point out... and indeed in the case of IHE-IUA, the authorization decision is expected to be within the Resource Server....   YOUR diagram... <a href=\"http://build.fhir.org/security-layout.png\" target=\"_blank\" title=\"http://build.fhir.org/security-layout.png\">http://build.fhir.org/security-layout.png</a></p>\n<div class=\"message_inline_image\"><a href=\"http://build.fhir.org/security-layout.png\" target=\"_blank\" title=\"http://build.fhir.org/security-layout.png\"><img src=\"http://build.fhir.org/security-layout.png\"></a></div>",
        "id": 153919753,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510759162
    },
    {
        "content": "<p>I'm not quite sure this assessment is complete <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>  when it comes to the resource server making decisions in SMART. It's very possible in the SMART model to have a resource server enforcing all kinds of business logic of its own; the access token is one input into the decision...</p>",
        "id": 153919897,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1510815438
    },
    {
        "content": "<p>Coming back to the question about headers this seems like a very simple approach that should work perfectly if your goal is just to log this Purposes of Use information alongside each request.</p>",
        "id": 153919898,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1510815559
    },
    {
        "content": "<p>Right. The resource server must actually enforce the decisions - that's where the access control engine must live. The Authorization server is not doing access control</p>",
        "id": 153919900,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1510816024
    },
    {
        "content": "<p>I am not proposing we eliminate the proposal for putting purposeOfUse into the http header... just that we also document alternatives and describe more fully the resource server responsibility.   PurposeOfUse needs to be considered in the access control 'decision'... that is the role of OAuth... where the resource server is responsible for confirming the decision is proper (not falsified), and responsible for enforcing the decision.</p>",
        "id": 153920007,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510843424
    },
    {
        "content": "<p>sure, happy to document it better, and deal with workflow</p>",
        "id": 153920035,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1510844791
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191372\">@René Spronk</span> , et. al.: <br>\nI'm late to this thread --Kathleen brought it my attention and suggested I share some thoughts:</p>\n<ul>\n<li>\n<p>Like Roles, Purpose of Use is a hierarchical concept. Someone at a hospital requests access to a patient's record for the purpose of Surgery; in the broader context, this surgery is in turn for the purpose of Treatment. These are mapped to various level of granularity of business processes. Surgery is a finer-grained process taking place within the broader context of Treatment [*]. While we usually only care about restriction on the high-level purpose (e.g. HIPAA PoUs), more detailed purposes down the hierarchy exist and may be of importance from an authorization point of view. For example, in a research project at the Foothills Hospital in Calgary, Canada, I noticed that there was a separate consent form for using data for the purpose of Genetic Research.<br>\nWhile the specific narrow PoU depends on the specific instance of data access and workflow, the broader purpose could be more static. For example, while the fine-grained PoU of each instance of data access in a research department can vary (e.g. basic, translational, clinical trial, genetic research, etc.) the broader HIPAA PoU of all these requests can be safely assumed to be Research.</p>\n</li>\n<li>\n<p>We need to distinguish between the list of Authorized PoUs for a client or a data element vs. the actual PoU for an instance of data access. The former is a type of policy; the latter is a type of attribute assertion. \"This app is only allowed to access data for the purpose of Treatment\", or \"This record can only to be used for the PoU of Research\" are policy fragments. \"The purpose of this particular access request is Treatment\" is an assertion. In the OAuth world, the former is modelled as a granted Scope while the latter can be a custom HTTP header, a SAML assertion, or an OpenID Connect claim.</p>\n</li>\n<li>\n<p>The PoU as an attribute assertion can be self-declared or implied by the business workflow. As <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> suggested above, an App can self-declare its PoUs. In other clients, e.g. an enterprise system, it is possible to make this assertion automatically based on inference: \"this request was generated in the course of a sample-selection process in a Hepatitis research project, THUS the PoU must be Research\" (more fine-grained PoUs to further specify the type of research can also be determined this way).</p>\n</li>\n<li>\n<p>While it is possible to trust the self-declared PoU by a client, it is also important to make sure these claims are within a pre-approved range of PoUs that are granted to that client. We can trust an App to declare whether it's making a particular request for the PoU of Research or Treatment, but there can be a broader restriction on the set of PoUs that the App can claim. These can be defined and locked down at the time of developing the App (\"what type of data processing does this App do?\"). These broad PoUs can be part of the public specifications of an App and can be verified and approved in the course of the on-boarding of an App in an App Store (\"Let's check if this App really does what it claims it does\"). Obviously, there is a limit to the extent of this verification, but for high-level PoUs like those in HIPAA, this could arguably work.</p>\n</li>\n<li>\n<p>Based on the above, in our demo implementation, we had the Client present a JWT to the Authorization Server, issued by a trusted authority (e.g. App Store) who would vouch for the identity of the client as well as the PoUs for which it uses the data it receives. The assertions would look this:</p>\n</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>App ID: xyz.zyx.abc\nDeveloped by: organization.1.2.3\nPoUs: [TREAT, RESEARCH]\n</pre></div>\n\n\n<p>This means that the App store has verified that the App only uses data for these broad purposes.</p>\n<p>Once the OAuth/UMA server receives these assertions, it checks them against the policies (in our case FHIR Patient Consents). For example, when a request from the above sample App is received, but the policies would only allow the PoU of Treatment, this would result in a rejection of the access request. In other words, the AS would ensure that all possible PoUs for which the client may use the data are authorized.</p>\n<p>An extension (which we didn't implement) could expand this so that the AS would determine what PoUs the App is ALLOWED to claim in the form of granted scopes. In other words, instead of flat-out rejection of the request when the PoUs would not be authorized by the policies, the AS could issue an Access Token with a subset of claimed PoUs, e.g. \"Treatment but NOT Research.\" <br>\nWhen the resource server verifies the granted scopes of a presented Access Token [**], it matches it against the fine-grained PoU of the particular request (e.g. in the HTTP header or a self-signed JWT) to make sure the actual PoU of the particular request is authorized by the granted scopes.<br>\nFor example, a client that, broadly speaking, uses data both for Research and Treatment, could be issued an Access Token only granting Treatment. So, request instances by this client which are for the PoU of Research would be rejected with an \"insufficient scope\" error, while request instances by the same client which are for the PoU of Treatment would still go through.</p>\n<p>[*] For an extensive and rather pedantic argument on this see <a href=\"https://dl.acm.org/citation.cfm?id=2629689\" target=\"_blank\" title=\"https://dl.acm.org/citation.cfm?id=2629689\">https://dl.acm.org/citation.cfm?id=2629689</a><br>\n[**] We used introspection for liveness of revocation but this also works if the OAuth server issues access tokens in the form of as self-contained JWTs.</p>",
        "id": 153920279,
        "sender_full_name": "Mohammad Jafari",
        "timestamp": 1511031743
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191920\">@Mohammad Jafari</span> for this thorough description.</p>",
        "id": 153920901,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1511330699
    },
    {
        "content": "<p>I have no opinion on OAUTH, but here is how I see it working from the GDPR perspective for the PoU:</p>",
        "id": 153920902,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1511330743
    },
    {
        "content": "<p>1. In the conformance resources (capabilityStatement), AppA says to server \"Hi I am App A, this is what i support, and this is (are) my Purpose(s) of Use\".<br>\n2. At runtime, and depending on the declared PoUs, the server and App can choose what information to send, what additional security and authentication to work with. For example it may be that each call must have an explicit purpose, but for GDPR that is not needed.</p>",
        "id": 153920905,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1511330969
    },
    {
        "content": "<p>(#1 above is what matters for Article 30 of the GDPR)</p>",
        "id": 153920906,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1511330992
    },
    {
        "content": "<p>does this make sense?</p>",
        "id": 153920907,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1511331014
    },
    {
        "content": "<p>Yes, PoU can be declare at many levels. If the app has only one purpose in life, then it can declare it when it gets the client_id.  One should always look to optimize, which in these cases is to move these kinds of policy statements up as high as possible. Often times they are declared only at the highest level (for example a DURSA that covers a broad set of applications in a broad 'domain').</p>",
        "id": 153921074,
        "sender_full_name": "John Moehrke",
        "timestamp": 1511376502
    },
    {
        "content": "<p>Ok. For GDPR the purpose is declared at design time, not at run time. I think this corresponds to \"only one purpose in life\" - because if it is redesigned to have another purpose, well, then it needs a new purpose</p>",
        "id": 153921075,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1511376600
    },
    {
        "content": "<p>yes, the higher you put this, the more fragile to changes it is... design is all about trade offs.</p>",
        "id": 153921076,
        "sender_full_name": "John Moehrke",
        "timestamp": 1511376793
    },
    {
        "content": "<p>hence why we enable the FHIR standard with security-labels, Consent, AuditEvent, and security tokens...   we give the designer options</p>",
        "id": 153921077,
        "sender_full_name": "John Moehrke",
        "timestamp": 1511376938
    },
    {
        "content": "<p>Where did this land?  In our own use, we have need to override a slightly different business rule for which we'd like applications to SPECIFY that the are explicitly breaking the rule for a given request (rather than for all requests in a session).  Thus, it seems that the mechanism applied in the HTTP request meets the need.  Only users with permission to USE that capability can do it, and only in applications that have been designed to deal with it.  The application asserts it needs the capability with a scope, the server either grants or denies the permission for the \"session\" associated with the access token based on access control rules.  A specific request can override a business rule about query content by asserting a purpose of use that is consistent with the override (omitting patient identifier in queries to support a multi-patient query on patient associated data), but the request must also assert that it is being done for a given purpose (POPHEALTH for example).   Thus,  the application does not violate the business rule by a simple mistake (issuing a query that doesn't follow the usual requirements) without also asserting that \"Yes, I know this query will get me data for multiple patients\".  It seems that _purpose should be a token parameter on request to communicate purpose of use in the RESTful protocol.</p>\n<p>I could work with how break-the-glass was written, OR, with a query parameter (or both), but there is a definite need in the case I'm experiencing to be able to associated purpose of use with a specific API request without having to reauthorize the application making the request.</p>\n<p>What's the advice here?</p>",
        "id": 154011701,
        "sender_full_name": "Keith Boone",
        "timestamp": 1540353731
    },
    {
        "content": "<p>It seems that your case is \"while all apps have their defined PoUs, some apps are designed to provide data to some requesters under a different, \"extraordinary PoU\". That \"extraordinary PoU\" is per request, not per app. Is this a correct reading?</p>",
        "id": 154011703,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1540361171
    },
    {
        "content": "<p>If so, I don't think Break-the-glass is adequate.<br>\nAnd a quesion: do you have a list of those extraordinary PoU ? Are they a predefined set of purposes? Or you want to leave that wide open?</p>",
        "id": 154011704,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1540361270
    },
    {
        "content": "<p>Rehearsing a solution: <br>\nIf it's a predefined set of purposes, wouldn't it fall under the GDPR ruling that all purposes of use should be known? (if both ordinary and extraordinary purposes are listed). The extraordinary cases simply require an additional safeguard which is \"only by individual request\".<br>\nAnd a parameter on the query would be appropriate for this.</p>",
        "id": 154011705,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1540361580
    },
    {
        "content": "<p>break the glass shows how to put a prupose of use on the request. Same method would apply for other purposes of use</p>",
        "id": 154011711,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540362769
    },
    {
        "content": "<p>Ok i thought Break the Glass was reserved for \"not expected purposes\".</p>",
        "id": 154011719,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1540365489
    },
    {
        "content": "<p>break the glass is, yes. I'm just saying that the method is applicable for other purposes of use</p>",
        "id": 154011724,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540366600
    },
    {
        "content": "<p>so basically one method that can apply for break the glass or \"normal, permitted\" access? that I like</p>",
        "id": 154011752,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1540373069
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191387\">@Keith Boone</span> it would be good for you to bring this use-case forward to be developed.  I would agree that the method we have shown for Break-the-Glass is a general use method for communicating some vocabulary value. In this case it is a PurposeOfUse vocabulary value, but could be any vocabulary value. In your case you have a very specific meaning you want to convey, so would likely best define a custom vocabulary for that use. Yes it could work this same way.</p>",
        "id": 154011821,
        "sender_full_name": "John Moehrke",
        "timestamp": 1540388555
    },
    {
        "content": "<p>However there are more more formally security methods. You could request a new OAuth token for the override purpose. Thus you would get a token specifically for that purpose, scope, and timeframe. This method uses security layers, rather than business rules.</p>",
        "id": 154011823,
        "sender_full_name": "John Moehrke",
        "timestamp": 1540388691
    },
    {
        "content": "<p>There are also methods of putting the purposeOfUse into the JWT, as IHE-IUA has defined.</p>",
        "id": 154011824,
        "sender_full_name": "John Moehrke",
        "timestamp": 1540388715
    },
    {
        "content": "<p>There are also other security models beyond these, like ones that use SAML/XACML. -- although similarly architected</p>",
        "id": 154011825,
        "sender_full_name": "John Moehrke",
        "timestamp": 1540388749
    },
    {
        "content": "<p>Lastly, SMART-on-FHIR is getting ready to work on gen-2. They need priortized list of features to start adding to SMART-on-FHIR... Presumably they will consider ballot comments that were defered, but I know they will also consider community need.</p>",
        "id": 154011826,
        "sender_full_name": "John Moehrke",
        "timestamp": 1540388847
    },
    {
        "content": "<p>It's still purpose of use vocabulary, in fact, the purpose I identified is defined in v3 ActReason (see <a href=\"http://www.hl7.org/fhir/v3/PurposeOfUse/vs.html#http---hl7.org-fhir-v3-ActReason-POPHLTH\" target=\"_blank\" title=\"http://www.hl7.org/fhir/v3/PurposeOfUse/vs.html#http---hl7.org-fhir-v3-ActReason-POPHLTH\">http://www.hl7.org/fhir/v3/PurposeOfUse/vs.html#http---hl7.org-fhir-v3-ActReason-POPHLTH</a>).  The reason for NOT requesting a new authorization token is that it really is an occasional override for a single request that might be done by a service level actor.</p>\n<p>The next part of my question based on Grahame's response has to do with the structure of the Category tag.  The example for break the glass gives<br>\nCategory: <a href=\"http://hl7.org/fhir/security-label#break-the-glass\" target=\"_blank\" title=\"http://hl7.org/fhir/security-label#break-the-glass\">http://hl7.org/fhir/security-label#break-the-glass</a>; scheme=\"<a href=\"http://hl7.org/fhir/tag/security\" target=\"_blank\" title=\"http://hl7.org/fhir/tag/security\">http://hl7.org/fhir/tag/security</a>\"; label=\"Break The Glass\"</p>\n<p>I would assume that the value of the first term is in the form <em>CodeSystemURI</em>#<em>Code</em> and that if I was to use POPHLTH as a purpose of use code, the Category I would associate with the request would be:<br>\nCategory: <a href=\"http://hl7.org/fhir/v3/ActReason#POPHLTH\" target=\"_blank\" title=\"http://hl7.org/fhir/v3/ActReason#POPHLTH\">http://hl7.org/fhir/v3/ActReason#POPHLTH</a>; scheme=\"<a href=\"http://hl7.org/fhir/tag/security\" target=\"_blank\" title=\"http://hl7.org/fhir/tag/security\">http://hl7.org/fhir/tag/security</a>\"; label=\"Population Health\".</p>",
        "id": 154011829,
        "sender_full_name": "Keith Boone",
        "timestamp": 1540389328
    },
    {
        "content": "<p>If my understanding is correct, I can tell you it was only a guess, because <a href=\"http://hl7.org/fhir/security-label#break-the-glass\" target=\"_blank\" title=\"http://hl7.org/fhir/security-label#break-the-glass\">http://hl7.org/fhir/security-label#break-the-glass</a> doesn't go anywhere (it's a 404), which I presume actually means \"Not Found\" rather than I don't get any information because I didn't have access or didn't properly express my purpose when asking for that URL ;-).</p>\n<p>Another example for expressing request based purposes might be helpful.</p>\n<p>I might also suggest that while Category is a nice HTTP way to express this, it might be better to have a token parameter available to any request so that they might also be included elsewhere that query URLs can be expressed but Category cannot (e.g., Batch/Transaction).  For that, I might suggest _purpose as a query parameter be defined to express it.</p>",
        "id": 154011833,
        "sender_full_name": "Keith Boone",
        "timestamp": 1540389788
    },
    {
        "content": "<p>I think the more correct would be <a href=\"http://terminology.hl7.org/ValueSet/v3-PurposeOfUse#POPHLTH\" target=\"_blank\" title=\"http://terminology.hl7.org/ValueSet/v3-PurposeOfUse#POPHLTH\">http://terminology.hl7.org/ValueSet/v3-PurposeOfUse#POPHLTH</a>... but that doesn't act much better</p>",
        "id": 154011860,
        "sender_full_name": "John Moehrke",
        "timestamp": 1540391610
    },
    {
        "content": "<p>the Category tag is also IETF experimental <a href=\"https://tools.ietf.org/html/draft-johnston-http-category-header-02\" target=\"_blank\" title=\"https://tools.ietf.org/html/draft-johnston-http-category-header-02\">https://tools.ietf.org/html/draft-johnston-http-category-header-02</a></p>",
        "id": 154011861,
        "sender_full_name": "John Moehrke",
        "timestamp": 1540391635
    },
    {
        "content": "<p>It is provided as one perspective... Please feel free to recomend improvements</p>",
        "id": 154011862,
        "sender_full_name": "John Moehrke",
        "timestamp": 1540391653
    },
    {
        "content": "<p>That URL is a valueset URL, not a code system URL.  I've been told (from V3 days) that value sets identify a list of codes, not a coding system.  The form you use works by accident (because there could be two codes from two different code systems with the same code but different code), whereas the form I used identifies a specific code in a specific coding system.</p>",
        "id": 154011865,
        "sender_full_name": "Keith Boone",
        "timestamp": 1540391766
    },
    {
        "content": "<p>oops.. correct -- <a href=\"http://terminology.hl7.org/CodeSystem/v3-ActReason#POPHEALTH\" target=\"_blank\" title=\"http://terminology.hl7.org/CodeSystem/v3-ActReason#POPHEALTH\">http://terminology.hl7.org/CodeSystem/v3-ActReason#POPHEALTH</a></p>",
        "id": 154011866,
        "sender_full_name": "John Moehrke",
        "timestamp": 1540391859
    },
    {
        "content": "<p>Uhm, your URL goes to an error message.  The one I used goes to the code.</p>",
        "id": 154011870,
        "sender_full_name": "Keith Boone",
        "timestamp": 1540391971
    },
    {
        "content": "<p>OIDS would be so much more clear</p>",
        "id": 154011871,
        "sender_full_name": "John Moehrke",
        "timestamp": 1540391973
    },
    {
        "content": "<p>yours goes to a 404</p>",
        "id": 154011872,
        "sender_full_name": "John Moehrke",
        "timestamp": 1540392006
    },
    {
        "content": "<p>HA! ;-)</p>",
        "id": 154011873,
        "sender_full_name": "Keith Boone",
        "timestamp": 1540392008
    },
    {
        "content": "<p>I don't have my browser http negotiate set to include FHIR mime-types... do you? I think the terminology server has no browser stylesheet</p>",
        "id": 154011874,
        "sender_full_name": "John Moehrke",
        "timestamp": 1540392111
    },
    {
        "content": "<p>Huh? <a href=\"http://hl7.org/fhir/v3/ActReason#POPHLTH\" target=\"_blank\" title=\"http://hl7.org/fhir/v3/ActReason#POPHLTH\">http://hl7.org/fhir/v3/ActReason#POPHLTH</a> redirects to <a href=\"http://hl7.org/fhir/v3/ActReason/cs.html#POPHLTH\" target=\"_blank\" title=\"http://hl7.org/fhir/v3/ActReason/cs.html#POPHLTH\">http://hl7.org/fhir/v3/ActReason/cs.html#POPHLTH</a><br>\nOn the other hand, both the Category (<a href=\"http://hl7.org/fhir/security-label#break-the-glass\" target=\"_blank\" title=\"http://hl7.org/fhir/security-label#break-the-glass\">http://hl7.org/fhir/security-label#break-the-glass</a>) and the Scheme (<a href=\"http://hl7.org/fhir/tag/security\" target=\"_blank\" title=\"http://hl7.org/fhir/tag/security\">http://hl7.org/fhir/tag/security</a>) specified in the FHIR example definitely go to a 404.  </p>\n<p>Yeah, I know.  Enter a tracker.</p>",
        "id": 154011877,
        "sender_full_name": "Keith Boone",
        "timestamp": 1540392177
    },
    {
        "content": "<p>Ah, I am looking at current build, which is different than STU3</p>",
        "id": 154011878,
        "sender_full_name": "John Moehrke",
        "timestamp": 1540392215
    },
    {
        "content": "<p>I prefer normative track stuff, not zombie trial use stuff... :-)</p>",
        "id": 154011879,
        "sender_full_name": "John Moehrke",
        "timestamp": 1540392265
    },
    {
        "content": "<p>so... given that http/category is an experimental IETF draft... should we elevate the visibility as a general 'experimental' purposeOfUse communication system?  It is not clear to me this is the IETF intent, but that is not clear too</p>",
        "id": 154011881,
        "sender_full_name": "John Moehrke",
        "timestamp": 1540392337
    },
    {
        "content": "<p>These days, I need stuff that's been agreed to at some level, not stuff that's not quite done yet :)</p>",
        "id": 154011882,
        "sender_full_name": "Keith Boone",
        "timestamp": 1540392355
    },
    {
        "content": "<p>note, I am stuck with DSTU2 in day-job... so you are farther out of the muck</p>",
        "id": 154011883,
        "sender_full_name": "John Moehrke",
        "timestamp": 1540392394
    },
    {
        "content": "<p>Ha, I'm in the same boat for about 8 more days.  And will likely wind up right back there after that even so.</p>",
        "id": 154011884,
        "sender_full_name": "Keith Boone",
        "timestamp": 1540392428
    },
    {
        "content": "<p>Although I did get to do IHE STU3 work last year.</p>",
        "id": 154011885,
        "sender_full_name": "Keith Boone",
        "timestamp": 1540392461
    },
    {
        "content": "<p>Tracker added: <a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19499\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19499\">https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19499</a></p>",
        "id": 154011887,
        "sender_full_name": "Keith Boone",
        "timestamp": 1540392871
    },
    {
        "content": "<p>note, I would prefer your last suggestion to add a _purpose parameter, and abandon this http/category experiment.   Would be good to get other developers engaged</p>",
        "id": 154011889,
        "sender_full_name": "John Moehrke",
        "timestamp": 1540393003
    }
]