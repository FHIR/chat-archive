[
    {
        "content": "<p>Hi. What is the way to provide a \"functional\" ACK using REST? Example: I POST a record of a medicationAdministration with a medication as a contained resource. If the product code is not known in the receiving system, how should we say \"We received this record, but this product does not exist in our formulary and we have no way to figure it out\"?</p>",
        "id": 153904462,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1504620546
    },
    {
        "content": "<p>Use of OperationOutcome</p>",
        "id": 153904463,
        "sender_full_name": "John Moehrke",
        "timestamp": 1504620638
    },
    {
        "content": "<p>That's it, thanks!</p>",
        "id": 153904464,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1504620699
    },
    {
        "content": "<p>ah wait... in terms of communication how does that work?<br>\nThere are two times: 1. immediate response, saying \"OK, i got this\" and another one - may not be at the same time - that says \"well, remember i said it was ok?.. Well, here's the thing...\"</p>",
        "id": 153904465,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1504621468
    },
    {
        "content": "<p>pretty much like this chat - i asked a question and you replied, it computes, so I say OK. Then I see that in some cases it may not be sufficient.</p>",
        "id": 153904466,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1504621507
    },
    {
        "content": "<p>From a RESTful perspective, once you say \"create successful\" or \"update successful\", etc., there's no take-backs.  The expectation is that the processsing of the create/update/delete is done synchronously.  If you're talking about a request for fulfillment, then you can have Task and you can update the state of the Task to say \"cancelled\" if you had previously accepted</p>",
        "id": 153904473,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1504623992
    },
    {
        "content": "<p>Yes, what Lloyd said... The exception is HTTP 202 \"Accepted\"; which is well defined as having no good and perfect solution. But 202 is a choice the server can make, and isn't all that unusual when servers are under-load.  As Lloyd points out , http REST is intended to be a synchronous protocol. This is where much of the 'simplicity' comes from.  Thus, recommend the server do all the validation it needs to do before it returns a 2xx; using 202 only when it is a server overloaded condition that it knows it will recover from and ultimately persist.</p>",
        "id": 153904476,
        "sender_full_name": "John Moehrke",
        "timestamp": 1504624775
    },
    {
        "content": "<p>Ok, so I would use a task.  If i get it right: <br>\n1. I POST and I get a 201. I go about my other business.<br>\n2. Later, if the server sees an issue, the server can decide to create a Task for that administration. It's up to the client to check if there are any issues with any Tasks associated with one of the administrations the client previously POSTed</p>",
        "id": 153904478,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1504625234
    },
    {
        "content": "<p>is that it?</p>",
        "id": 153904479,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1504625240
    },
    {
        "content": "<p>FHIR doesn't allow 202 as a response</p>",
        "id": 153904484,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1504628122
    },
    {
        "content": "<p>Take a look at the Touchstone tests.  They provide the proper HTTP response codes for all the FHIR endpoints.  They vary depending on failure, error, success, authorization, and other circumstances.  It's often the case that a 201 response is used, but not always...  Bundle responses sometimes get a 200 code; and a successful query that just happens to return 0 matches will sometimes serve up a 204.</p>\n<p>Here is an example file that conforms to Touchstone tests that will give you a sense of what the ACK responses should look like:<br>\n<a href=\"https://github.com/clinical-meteor/hl7-resource-patient/blob/master/server/rest.js\" target=\"_blank\" title=\"https://github.com/clinical-meteor/hl7-resource-patient/blob/master/server/rest.js\">https://github.com/clinical-meteor/hl7-resource-patient/blob/master/server/rest.js</a></p>",
        "id": 153904652,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1504711113
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> , you might consider using Messaging if you need to support asynchronous operation: <a href=\"http://www.hl7.org/fhir/STU3/messaging.html#2.24.3.2\" target=\"_blank\" title=\"http://www.hl7.org/fhir/STU3/messaging.html#2.24.3.2\">http://www.hl7.org/fhir/STU3/messaging.html#2.24.3.2</a></p>",
        "id": 153904714,
        "sender_full_name": "Igor Sirkovich",
        "timestamp": 1504728349
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191393\">@Igor Sirkovich</span> . I would not look at that because we are looking for simple / straightforward communications but actually it does seem interesting. Thanks for pointing out.</p>",
        "id": 153904719,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1504728595
    }
]