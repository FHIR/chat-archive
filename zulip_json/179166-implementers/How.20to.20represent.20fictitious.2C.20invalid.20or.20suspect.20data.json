[
    {
        "content": "<p>We are trying to determine how we should represent Patient field data (which could appear on any field) that should be considered 'fictitous', invalid or at least suspect.  It is necessary to keep the data, but somehow mark it so that it can be treated as suspect so that current or future processing can deal with it appropriately.</p>\n<p>Some examples include, but are not limited to things like fictitious names (like John Doe, Mickey Mouse, Trauma Trauma); 'invalid' (like U.S. SSN of 000-00-0000, DOB like Jan 1, 1800 or a date years in the future); phone number like 000-000-0000;  combination of death date before birth date, etc.</p>\n<p>A few fields currently define a 'use' that could be set to 'temp', but most fields do not. Is this best handled by an extension to mark the fields as such (and if so, is there an already defined extension) or is there something already defined?</p>",
        "id": 153871451,
        "sender_full_name": "Bruce Tietjen",
        "timestamp": 1487103255
    },
    {
        "content": "<p>sounds like an extension, and I don't see one already defined</p>",
        "id": 153871452,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487103679
    },
    {
        "content": "<p>you could also use provenance to point at the information and say it's provenance is [??], but I don't see language in the provenance resource for indicating that information itself is suspect</p>",
        "id": 153871453,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487103750
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Would this not need a modifier extension?  The semantics seem a lot like \"entered in error\" or other modifiers.  Saying \"this isn't real data\" certainly ought to change how systems would process or interpret it.  (E.g. not looking for/enforcing a match on the SSN or birthDate).  If it is a modifier, then we'd have to do something funky like have a modifier extension with pointers to the \"id\" elements of data that's invalid/suspect because we can't actually put modifiers on data types.</p>",
        "id": 153871459,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487105668
    },
    {
        "content": "<p>I don't think it's a modifier. It doesn't change the meaning of the element that contains it; It just indicates that you have some reason to trust the truth of the data. </p>",
        "id": 153871461,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487105811
    },
    {
        "content": "<p>if it's necessary to keep it, you have to take it at face value</p>",
        "id": 153871462,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487105831
    },
    {
        "content": "<p>we have <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=10580\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=10580\">GF#10580</a> where we are asked to clarify one or more methods for this. We didn't get to that prior to the deadline for STU3, so will pickup the work next month.</p>",
        "id": 153871463,
        "sender_full_name": "John Moehrke",
        "timestamp": 1487105974
    },
    {
        "content": "<p>k thx</p>",
        "id": 153871464,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487106034
    },
    {
        "content": "<p>We are approaching it as a way to tag a patient record, or Resource record... not elements within an otherwise valid Resource.</p>",
        "id": 153871465,
        "sender_full_name": "John Moehrke",
        "timestamp": 1487106068
    },
    {
        "content": "<p>might need a finer granularity</p>",
        "id": 153871466,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487106274
    },
    {
        "content": "<p>What is the use-case for finer granularity? I don't understand a Resource that is partially valid, partially made-up...</p>",
        "id": 153871468,
        "sender_full_name": "John Moehrke",
        "timestamp": 1487107335
    },
    {
        "content": "<p>indicating that you believe that the patient's supplied birthdate is suspicious doesn't mean that you think that the existence of the patient is a under debate</p>",
        "id": 153871476,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487110789
    },
    {
        "content": "<p>understood. That is indeed not the topic of our work item. Is this something that current systems do? I understand the need, an integrity evaluation on the element level, but it seems unusual.  We do have the codes. Just not the method of applying the code to an element within a Resource. <a href=\"http://build.fhir.org/v3/SecurityIntegrityObservationValue/vs.html\" target=\"_blank\" title=\"http://build.fhir.org/v3/SecurityIntegrityObservationValue/vs.html\">http://build.fhir.org/v3/SecurityIntegrityObservationValue/vs.html</a></p>",
        "id": 153871500,
        "sender_full_name": "John Moehrke",
        "timestamp": 1487123622
    },
    {
        "content": "<p>In Australia, I've seen systems that explicitly track the uncertainty of parts of the birthdate. In fact, there's a standard for the (AS 5017). But it's rare even then. And I've otherwise seen expressions of disbelief (manchausen's, for instance) done in text</p>",
        "id": 153871502,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487124092
    },
    {
        "content": "<p>do we need to inform that some of the elements (patient's name, SSN...) are pseudonymized / masked somehow? or that applies to the whole resource?</p>",
        "id": 153871567,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1487143402
    },
    {
        "content": "<p>Jose, I was presuming that if a record is pseudonymized, that the record is marked as such. To indicate which elements have been 'modified' is to give away knowledge that can be used to attack the pseudonymization protection. We do have a tag to mark a Resource as having been pseudonymized. That is in our scope for making more clear in the coming months.</p>",
        "id": 153871581,
        "sender_full_name": "John Moehrke",
        "timestamp": 1487163555
    },
    {
        "content": "<p>Thanks. So it applies to the whole resource. I was poking to see if there was a need to mark which of the fields are impacted by pseudonymization (thinking of some break the glass scenario).</p>",
        "id": 153871582,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1487164331
    },
    {
        "content": "<p>For the pseudo-anonymized data, such as a masked Social Security Number, then it should be using the extension <a href=\"http://build.fhir.org/extension-rendered-value.html\" target=\"_blank\" title=\"http://build.fhir.org/extension-rendered-value.html\">http://build.fhir.org/extension-rendered-value.html</a> (this extension was created in response to <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=8665\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=8665\">GF#8665</a>)</p>",
        "id": 153871595,
        "sender_full_name": "Michelle (Moseman) Miller",
        "timestamp": 1487173331
    },
    {
        "content": "<p>Michelle, that is an interesting extension... but from a Privacy or Security perspective it is not useful. As I understand this is a string to be displayed, rather than the value it is associated with. Which tells me (assumption) that the value still is the identifier in full accuracy? This is 'obscurity', not 'security'.</p>",
        "id": 153871608,
        "sender_full_name": "John Moehrke",
        "timestamp": 1487176744
    },
    {
        "content": "<p>obscurity is not the same as security, but it's useful from a security perspective even still</p>",
        "id": 153871620,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487182071
    },
    {
        "content": "<p>Grahame, I understand the need for this extension. There is a need to define a display string for an element that has been de-identified, as the de-identified element often is expressly not displayable. This is especially true of non-string elements (like dates, and numbers). Which is what is explained by this extension. I just want the reader to understand what it is useful for, and what it is not useful for. I simply seek to explain that obscurity is not a solution for security or privacy. Obscurity does not provide any security. That the underlying value really does need to be redacted. To simply put this extension over non-redacted values is what I want to prevent.</p>",
        "id": 153871628,
        "sender_full_name": "John Moehrke",
        "timestamp": 1487184023
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> You have a choice about whether the unobscured field is in the instance or not - it certainly doesn't have to be.</p>",
        "id": 153871634,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487184480
    },
    {
        "content": "<p>Would it be so bad to include guidance?</p>",
        "id": 153871636,
        "sender_full_name": "John Moehrke",
        "timestamp": 1487184524
    },
    {
        "content": "<p>There are use-cases for including and excluding.  If the guidance acknowledges both sets of use-cases, guide away :)</p>",
        "id": 153871690,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487189201
    }
]