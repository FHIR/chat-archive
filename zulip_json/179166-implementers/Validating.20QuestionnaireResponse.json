[
    {
        "content": "<p>The spec says: \"QuestionnaireResponse resources can be validated against their corresponding Questionnaire\". Is there software which does this (if there is, I can't find it), or does this just mean this validation is possible in principle?</p>",
        "id": 153844804,
        "sender_full_name": "Marc de Graauw",
        "timestamp": 1471963105
    },
    {
        "content": "<p>I think HAPI does that.</p>",
        "id": 153844814,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1471976668
    },
    {
        "content": "<p>The validator jar used by the build process does this as well.</p>",
        "id": 153844815,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1471978192
    },
    {
        "content": "<p>Thanks, I'll check those out</p>",
        "id": 153844817,
        "sender_full_name": "Marc de Graauw",
        "timestamp": 1471979052
    },
    {
        "content": "<p>HAPI uses the validator internally </p>",
        "id": 153844822,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471982340
    },
    {
        "content": "<p>My internal server does (DSTU2), not sure if its been deployed yet, but will be soon.<br>\n(Then I need to update my baltimore version too)</p>",
        "id": 153844831,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1471991050
    },
    {
        "content": "<p>Does the java validator also check all the extensions too (like min/max values)?</p>",
        "id": 153844834,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1471991113
    },
    {
        "content": "<p>yes</p>",
        "id": 153844837,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471991634
    },
    {
        "content": "<p>in principle, it checks everything, so advanced stuff is a work in progress (slicing)</p>",
        "id": 153844838,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1471991660
    },
    {
        "content": "<p>I'll do some cross checking then against my questionnaire validator then once i've finished all my unit testing and examples.</p>",
        "id": 153844840,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1471991716
    },
    {
        "content": "<p>Speaking of which, I'm considering allocating a special tag to my server which indicates that it should ignore validation errors with specific operationoutcome.issue.detail.code values and let them be stored.<br>\nThis will then permit my server to store invalid content for testing, and also unit tests to not require an external place to look.</p>",
        "id": 153844841,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1471991838
    },
    {
        "content": "<p>Took a while, but yes, HAPI does validate QR against Questionnaire. However, only when actually creating the QR, the 'validate' operation does not complain when the QR does not match the Q. I can't make the java validator to reject a QR, it always says (DSTU2):  INFORMATION @ /f:QuestionnaireResponse/f:group/f:question/f:answer/f:valueString (line 21, col36) Binding has no source, so can't be checked (src = InstanceValidator), even for the same instance which HAPI rejects when creating it. So validation for QR against Q apparently only works as part of a CREATE.</p>",
        "id": 153845076,
        "sender_full_name": "Marc de Graauw",
        "timestamp": 1472120119
    }
]