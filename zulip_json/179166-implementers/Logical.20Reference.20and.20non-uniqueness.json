[
    {
        "content": "<p>Any expectations or good-to-knows about using a logical reference that is not unique? <br>\ne.g. a reference to a patient by EHR but there are 2 patient resources with same EHR number...</p>",
        "id": 237341075,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1620140660
    },
    {
        "content": "<p>This is an error condition, and should be treated as such.</p>",
        "id": 237346699,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1620142247
    },
    {
        "content": "<p>The <a href=\"http://hl7.org/fhir/R4/datatypes.html#identifier\">R4 specification of the Identifier type</a> states that \"The <code>value</code> SHALL be unique within the defined system and have a consistent meaning wherever it appears.\" That <em>sounds</em> to me like it would preclude using a business ID in an Identifier type if the ID may point to more than one entity. Or are there indications otherwise in the spec?</p>",
        "id": 237452477,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1620199868
    },
    {
        "content": "<p>Right, so I guess this SHALL is not a conformance requirement, but it is a statement of a dependency. It means \"if you want to do this, you must ensure somehow that the value is unique in the system\".</p>",
        "id": 237453215,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1620200286
    },
    {
        "content": "<p>note that the sentence carefully does not say that the association between the object containing the ID and the ID itself is 1:1 such that the value is unique within any given collection of objects</p>",
        "id": 237455195,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1620201378
    },
    {
        "content": "<p>as long as the business id is unique within it's own system, with a consistent meaning, it may be found in lots of objects, sometimes with different kinds</p>",
        "id": 237455272,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1620201429
    },
    {
        "content": "<p>Just to clarify, I read the sentence as saying that you cannot use a (system, code-value)-tuple in Identifier if that tuple identifies more than one <em>real life entity</em> (e.g. multiple patients).</p>",
        "id": 237458949,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1620203302
    },
    {
        "content": "<p>in practice, you may not know if things beyond your boundaries are unique and it is out of your control. Or this may start off as true, but later be false. It is fairly weak.</p>",
        "id": 237463230,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1620205462
    },
    {
        "content": "<p>if an identifier identifies more than one real world entity, I would think it's use is problematic, but it sill might be unique within the defined system and have a consistent meaning. Or it may be that the system is degenerate, and it should not be used</p>",
        "id": 237486191,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1620217629
    },
    {
        "content": "<p>Just realized I might be barking up the wrong tree <span aria-label=\"grimacing\" class=\"emoji emoji-1f62c\" role=\"img\" title=\"grimacing\">:grimacing:</span> <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span>, in your initial question with the two Patient resources with the same EHR number - would those two resources represent two <em>different</em> individuals or just be duplicate records for the same individual?</p>",
        "id": 237486728,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1620217916
    },
    {
        "content": "<p>My question was a bit more basic, but I see further now. <br>\nMy answer would be: the system can't guess if they are different patients or the same, right?</p>",
        "id": 237487814,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1620218418
    },
    {
        "content": "<p>as Rik explains. It depends on the boundaries and may change</p>",
        "id": 237487919,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1620218468
    },
    {
        "content": "<p>Simple real-world example.  You have a U.S. social security number.  There's a standard system for it.  Within that system, each social security number is supposed to refer to exactly one person.  However, that identifier can appear on a variety of Patient, Practitioner and RelatedPerson resources in a variety of systems.  Also, due to fraud, error, etc. the same social security number may appear on records for individuals who aren't all the same human being.  That would still meet the expectations of the wording of the \"SHALL be unique within the defined system and have a consistent meaning\".</p>",
        "id": 237520459,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1620230348
    },
    {
        "content": "<p>\"within the defined system\" seems to be the key concept here</p>",
        "id": 237564493,
        "sender_full_name": "Ezequiel Morales",
        "timestamp": 1620248362
    },
    {
        "content": "<p>Newbie question -kind of ... Looking at using identifiers to help with potential matches in target system.   Assume \"business\" identifiers MAY be sent but not required and perhaps done so for privacy reason but ... beyond full blown PIX like functionality - is there a simple way to request known identifiers up front?  This looks like the closest thread to ask</p>",
        "id": 238318774,
        "sender_full_name": "Debbie Bucci",
        "timestamp": 1620743961
    },
    {
        "content": "<p>If you request a Patient resource, it SHOULD give you all the information you're allowed to see, so you shouldn't have to specify what you're looking for.  That being said, if you need to set up specific requirements, you can profile Patient to force the use of specific information</p>",
        "id": 238319478,
        "sender_full_name": "David Pyke",
        "timestamp": 1620744202
    },
    {
        "content": "<p>So you are suggesting negotiate with <em>trading partner</em> not something that can be requested in code beyond knowing specifics about the sourceIdentifier you may be looking for ?</p>",
        "id": 238330720,
        "sender_full_name": "Debbie Bucci",
        "timestamp": 1620747889
    },
    {
        "content": "<p>Correct.  They should be sending you all available information but if that's not the case, then you have to open a dialogue with them and see how to correct it.</p>",
        "id": 238333416,
        "sender_full_name": "David Pyke",
        "timestamp": 1620748787
    },
    {
        "content": "<p>IHE has also defined the PIXm profile which defines an operation that provides alternate patient identifiers only for a given identifier, without returning the entire patient resource. The argument at the time it was developed was that access to the rest of a Patient resource may have different permissions. (<a href=\"https://www.ihe.net/uploadedFiles/Documents/ITI/IHE_ITI_Suppl_PIXm.pdf\">https://www.ihe.net/uploadedFiles/Documents/ITI/IHE_ITI_Suppl_PIXm.pdf</a>; I think there's an informal FHIR IG equivalent)</p>",
        "id": 238336750,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1620749994
    },
    {
        "content": "<p>yes I've been studying that  ... its seems to be a layer above the existing pix backend messaging.  Something definitely to consider but if we could resolve other ways ...</p>",
        "id": 238338132,
        "sender_full_name": "Debbie Bucci",
        "timestamp": 1620750547
    },
    {
        "content": "<p>will search for the informal FHIR IG  ..</p>",
        "id": 238341444,
        "sender_full_name": "Debbie Bucci",
        "timestamp": 1620751859
    },
    {
        "content": "<p>Hi Everyone, We have requirement to test against these guidelines \"HL7 CARIN BB, DaVinci PDEX, PlanNet &amp; Formulary guidelines\" , Do you know how can i get the inferno community addition deployed on my local firewall inside docker to have validator up and running and test against these guidelines.</p>",
        "id": 238366900,
        "sender_full_name": "Mahesh Chiliveri",
        "timestamp": 1620760574
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"411189\">@Mahesh Chiliveri</span> -- could you ask this question over in <a class=\"stream\" data-stream-id=\"179309\" href=\"/#narrow/stream/179309-inferno\">#inferno</a>?</p>",
        "id": 238367086,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1620760656
    },
    {
        "content": "<p>Informal draft, not approved, warning warning ..... IHE-PIXm in IG form <a href=\"http://build.fhir.org/ig/IHE/ITI.PIXm/branches/master/index.html\">http://build.fhir.org/ig/IHE/ITI.PIXm/branches/master/index.html</a></p>",
        "id": 238529561,
        "sender_full_name": "John Moehrke",
        "timestamp": 1620847130
    },
    {
        "content": "<p>So the informal draft essentially points back to the IHE draft.  Assume the The goal is to have th3 $ihe-pix be a base operation that FHIR servers MAY support this like  $merge?     In theory it could be an <em>extended</em> operation for testing  if partners willing to support?</p>",
        "id": 238544627,
        "sender_full_name": "Debbie Bucci",
        "timestamp": 1620853610
    },
    {
        "content": "<p>for an Identifier 2.24..0.12 type... I understand this to mean that a fhir repository should not store identifiers that are not unique for that resource - though it seems that properties such as a period could also make them unique (but harder to search against).  If that is true, then an implementation guide like the DaVinci ATR that specifies a tax id to identify a group is either assuming that this identifier will only ever by used in one group or is breaking the rules.  I asked in the Da Vinci ATR in January and the answer did not address my question so I'm bringing it up here.  I see it as an issue if a given provider organization belongs to two contract groups and is compliant with ATR da Vinci that the repository would then have two fhir groups with the same tax id identifier and npi identifier.  I may be misreading something in ATR but I want to make sure that this question is raised and answered here in the broader community.  I would appreciate a better understanding of the wording in Da Vinci ATR.  Again I did ask in that thread in January but the response doesn't address my question and I asked again but no further response.</p>",
        "id": 276200940,
        "sender_full_name": "Ruth berge",
        "timestamp": 1647961043
    },
    {
        "content": "<p>FHIR's \"uniqueness\" requirement is a SHOULD.  There'll be lots of situations where a given identifier might not be unique.</p>",
        "id": 276223665,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1647969438
    },
    {
        "content": "<p>There is an expectation that a fully populated identifier (i.e. system + value) corresponds to only one business object.  I.e. there aren't two completely different organizations that have the same tax id.  However, the same 'business object' might well surface in multiple resource instances on the same server.  And sometimes errors or fraud happens where an identifier ends up on a resource it shouldn't.</p>",
        "id": 276223920,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1647969551
    },
    {
        "content": "<p>What is the expectation for people building profiles and igs?  Do we expect that they would build these profiles such that  SHOULD will not be violated by design?</p>",
        "id": 276253041,
        "sender_full_name": "Ruth berge",
        "timestamp": 1647982652
    },
    {
        "content": "<p>no specification ever existed that can keep people from doing stupid things... however claims of compliance are claims of compliance to ALL normative requirements, and claims of compliance are enforceable by either certification testing or contract terms.</p>",
        "id": 276253272,
        "sender_full_name": "John Moehrke",
        "timestamp": 1647982774
    },
    {
        "content": "<p>People building profiles and IGs have limited power to change the real world.  In most systems, there SHOULD only be one patient record with a particular U.S. SSN.  However, there are situations where that gets violated: fraud, old records brought over from a merged system; partitioned demographics between the hospital and the family medicine unit; [insert your reason here].</p>\n<p>FHIR doesn't impose business rules.  It's up to systems to do that based on what works (and is necessary) in their context.  You'll absolutely find systems that will fail a POST that would duplicate an SSN and even enforce that down at the database level.  There will be other systems where 2 or 3 hits on a single SSN is typical.  Both types of systems can be fully FHIR conformant.</p>",
        "id": 276261827,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1647987101
    },
    {
        "content": "<p>Agreed that people building igs and profiles can't change the real world and they shouldn't.  Their design should handle the real world situations and their designs and documentation should illuminate when they have enforced something that isn't recommended.  In the ATR case, they chose to use identifiers that will be reused.  But back to identifier, Lloyd you use the verb SHOULD in relation to the identifier.  Is there someplace in the FHIR documentation that uses that (since \"SHOULD\" is meaningful in FHIR)?  The identifier type , comparison with HL7 v2 conformance- neither of these say that.  I would appreciate if you share the reference.  Maybe its just the interpretation of what an identifier is and what it means?  It helps to see where these references are for other issues.  Maybe there should be something in identifier type that addresses this?</p>",
        "id": 276352672,
        "sender_full_name": "Ruth berge",
        "timestamp": 1648050136
    },
    {
        "content": "<p>the FHIR core specification is not the right place for SHOULD language. There are many use-cases of the resources in FHIR core that are not the clinical-treatment; for which the FHIR core needs to be able to support. So FHIR core focuses only on SHALL (minimal cardinality of 1), and MAY (minimal cardinality of 0). Should comes in during an Implementation Guide, which has a specific (set of) use-case(s), and setting.. thus can explain what Should means and when Should is allowed to be not.</p>",
        "id": 276353761,
        "sender_full_name": "John Moehrke",
        "timestamp": 1648050563
    },
    {
        "content": "<p>SHOULD establishes what's desirable/ideal/best practice.  It's something to think about during design.  But it's not enforced/enforceable.</p>",
        "id": 276362343,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1648053306
    },
    {
        "content": "<p>Otherwise stated: the difference between MAY and SHOULD is entirely conceptual  =)</p>",
        "id": 276381286,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1648060790
    },
    {
        "content": "<p>the difference between MAY and SHOULD is well defined in the IETF standard on normative words upon which FHIR is based -- <a href=\"https://www.ietf.org/rfc/rfc2119.txt\">https://www.ietf.org/rfc/rfc2119.txt</a></p>",
        "id": 276394251,
        "sender_full_name": "John Moehrke",
        "timestamp": 1648066835
    },
    {
        "content": "<p><a href=\"https://www.hl7.org/fhir/conformance-rules.html\">https://www.hl7.org/fhir/conformance-rules.html</a></p>",
        "id": 276394370,
        "sender_full_name": "John Moehrke",
        "timestamp": 1648066884
    },
    {
        "content": "<p>Sure - but from a 'practical use' standpoint developers have to handle both cases (e.g., present and not present).</p>\n<p>During any given individual test/use, it could be either way and there is no realistic way to determine the difference.</p>",
        "id": 276397067,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1648068038
    },
    {
        "content": "<p>we don't have a mechanism in conformance resources (e.g. StructureDefinition) to differentiate between SHOULD and MAY... correct. But there is a difference.</p>",
        "id": 276399257,
        "sender_full_name": "John Moehrke",
        "timestamp": 1648069053
    },
    {
        "content": "<p>although SHOULD is often conditional, so invariants are one way to express those SHOULDs.</p>",
        "id": 276399480,
        "sender_full_name": "John Moehrke",
        "timestamp": 1648069143
    },
    {
        "content": "<p>Perhaps I was a bit too loose in my language when talking about conformance language  =)</p>\n<p>That said, I do know the difference between the terms.  From the point of view of someone <em>consuming</em> the specifications, having delineation between (loosely ;-) \"do this if you want to\" and \"well-behaved systems are expected to do this\" is important.  To me, having the ability to use either in the core specification makes sense.</p>\n<p>But <em>practically</em>, that boils down to a conceptual difference - well-behaved systems will need to handle either case gracefully.  I am against adding rules/testing around those terms because I am not convinced we do not have the ability to do so reliably.  Having invariants that often fail 'correctly' teaches people to ignore them, and I would prefer to discourage using 'SHOULD' as a replacement for conditional 'SHALL'.</p>\n<p>(as a random note, we added an RFC filter (e.g., <a href=\"https://datatracker.ietf.org/doc/html/rfc2119\">RFC2119</a>) to the regex so you don't have to type out URLs a while back - I <em>think</em> this is even the one that annoyed me enough to ask for it)</p>",
        "id": 276481079,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1648131293
    }
]