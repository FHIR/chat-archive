[
    {
        "content": "<p>Has anyone considered an $revert function or something similar? <br>\nSomething for reverting this resource to its previous version (considering the applicable rules)? <br>\nI don't think it is a very safe thing to do, but wanted to know what is out there.</p>",
        "id": 227409711,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1614076631
    },
    {
        "content": "<p>Why would you need an operation?  Just do a PUT with the content from the old version?</p>",
        "id": 227439993,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1614091251
    },
    {
        "content": "<p>I assume to revert the version id too, but that does seem dangerous</p>",
        "id": 227446411,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1614093360
    },
    {
        "content": "<p>I wanted to do this as purely a convenience operation, where PUT type/id/_history/vid$revert is equivalent to retrieving the version and sending it as a new update, subject to the same rules as a normal PUT. Haven't gotten around to it though.</p>",
        "id": 227446843,
        "sender_full_name": "Paul Church",
        "timestamp": 1614093525
    },
    {
        "content": "<p>lastUpdated can't be reverted - that would definitely not be safe.  Reverting the version id <em>could</em> be ok I guess?  If someone had not queried since the original, then it'd be fine to do an update from that point.  However, a 'history' query would then show the same version id more than once - and <em>that</em> would be problematic.  What's the use-case?</p>",
        "id": 227447501,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1614093779
    },
    {
        "content": "<blockquote>\n<p>However, a 'history' query would then show the same version id more than once</p>\n</blockquote>\n<p>That is my first impression that revert a version id is NOT a good idea.</p>",
        "id": 227448236,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1614094061
    },
    {
        "content": "<p>I wrote up some speculative ideas about API operations to modify the history, and one is that if you could DELETE individual resource versions it would be possible to bring back an old version to be current simply by deleting every later version. It would not be a good idea to have an operation that created a second history entry with the same lastUpdated or version ID.</p>\n<p>But that isn't a direction we're actually pursuing.</p>",
        "id": 227463535,
        "sender_full_name": "Paul Church",
        "timestamp": 1614099079
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197072\">Paul Church</span> <a href=\"#narrow/stream/179166-implementers/topic/.24revert.20operation/near/227446843\">said</a>:</p>\n<blockquote>\n<p>I wanted to do this as purely a convenience operation, where PUT type/id/_history/vid$revert is equivalent to retrieving the version and sending it as a new update, subject to the same rules as a normal PUT. Haven't gotten around to it though.</p>\n</blockquote>\n<p>Yes, that is what I was asked. I don't think we should rever version ID, because then you cannot unrevert.</p>",
        "id": 227463975,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1614099235
    },
    {
        "content": "<p>Use case is \"doctor made a mistake and they just want to undo the thing they just updated.\"<br>\nThe rationale is \"our current standard can do something like that, we don't want to lose that functionality\"</p>",
        "id": 227467592,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1614100557
    }
]