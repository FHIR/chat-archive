[
    {
        "content": "<p>Hi<br>\nWe have modeled an Appointment with standard CRUD operations.<br>\nNow we are faced with the following customer-request: \"Please let us read the appointment and its managing organization at a patient with some specific search criteria but let us only get a small subset of the attributes at the appointment and the organization\".<br>\nI see 2 different FHIR-solutions for this:<br>\n1) Use the existing FHIR-resources and define a namedQuery for Appointment which defines 1) the search criteria, 2) to include organization, 3) which attributes to be returned for both appointment and org.<br>\nThe attributes of the appointment will be minimal (even without mandatory attributes). This removal of attributes for the appointment corresponds to the elements-search (<a href=\"https://www.hl7.org/fhir/search.html#elements\" target=\"_blank\" title=\"https://www.hl7.org/fhir/search.html#elements\">https://www.hl7.org/fhir/search.html#elements</a>), but it goes against the should-recommendation for mandatory attributes. The removal of attributes of the related organization is (as far as I can see) currently not supported via a normal search.<br>\n2) Create new resources for the Appointment and Organization - Appointment2 and Organization2 (for this issue we could give them meaningful names). Only GET-operations will be supported for these resources. The resources will basically be new domain resources as we will not include mandatory attributes from Appointment.<br>\nA search for Appointment2 at a patient could include the special search criteria (but we could also make a named query for this).<br>\n--<br>\nI prefer 1) because of its simplicity (and we will probably get similar demands in the future) and its correctness: You are in fact getting a appointment resource returned (just with a limited list of attributes).<br>\nI don't like 2) - it doesn't feel right - Appointment2 is not a different kind of appointment - it is just providing a limited view of this attributes. <br>\nNB: A 3rd solution would be to choose a non-FHIR solution for this, and “just” make a dedicated REST-service.</p>\n<p>Any guidance from you guys?</p>\n<p>(The exact issue is that the current Appointment must include new information, and we also have a appointment-template which must be taken into account - but I think this is beside the point for my question)</p>",
        "id": 153850754,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1474886656
    },
    {
        "content": "<p>Can the question be narrowed down to: When to redefine an already existing resource (facing the issue of maintaining AppointmentEx1 and AppointmentEx2 endpoint and definitions) and when to reuse and extend an existing resource?</p>",
        "id": 153850755,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1474888127
    },
    {
        "content": "<p>haev you looked at hte _elements parameter? sounds like what you are looking for</p>",
        "id": 153850756,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474890145
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>: yes, the _elements parameter is mentioned in solution 1), but it means I'll go against the recommendations.<br>\n<span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span>: Yes,  that is certainly a part of it - but if I only put it like that then _elements is the answer (apart from the \"should\"-recommendation). For my case there is more to it.</p>",
        "id": 153850761,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1474901239
    },
    {
        "content": "<p>why would you go against the recommendations? </p>",
        "id": 153850765,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474906863
    },
    {
        "content": "<p>because FHIR says \"Servers SHOULD always return mandatory elements \" (<a href=\"https://www.hl7.org/fhir/search.html#elements\" target=\"_blank\" title=\"https://www.hl7.org/fhir/search.html#elements\">https://www.hl7.org/fhir/search.html#elements</a>), and the customer only wants a very small subset of the apointment</p>",
        "id": 153850847,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1474956065
    },
    {
        "content": "<p>which mandatory elements do they not want back?</p>",
        "id": 153850858,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474963454
    },
    {
        "content": "<p>The only mandatory elements are status and participant. Seems strange not to want them.</p>",
        "id": 153850879,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1474979992
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"192120\">@Allan Bro Hansen</span> .  Sounds like you'd benefit from <a href=\"https://github.com/chrisgrenz/FHIR-Primer/wiki/Profile-Governed-API\" target=\"_blank\" title=\"https://github.com/chrisgrenz/FHIR-Primer/wiki/Profile-Governed-API\">Profile Governed APIs</a> which is something I'm working on formalizing (<a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=10000\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=10000\">GF#10000</a>).  This particular use case would be covered by <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=8806\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=8806\">GF#8806</a>.  It's not standard yet, but I'm trying to build the use cases.</p>",
        "id": 153850880,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1474980000
    },
    {
        "content": "<p>We have more mandatory elements than the ones defined by FHIR.<br>\nFor our appointment-resource the unwanted mandatory elements becomes the status, an extra sub-status (extension), an elective flag (extension), a location participant, a practitioner participant, a patient participant and to some extend the startTime (if you consider this as \"mandatory\" for a booked appointment).<br>\nThe appointment should only contain the planned arrival date time and the planned arrival place, a reference to the managing organization and a reference to an appointment template. (the patient participants could be included but is not needed since the patient is the main search criteria).</p>",
        "id": 153850898,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1474984084
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191351\">@Chris Grenz</span> : Yes, the \"Profile Governed API\" addresses it. Although I think I'm pretty close using the namedQuery (with _elements behavior) approach.</p>",
        "id": 153850904,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1474984486
    },
    {
        "content": "<p>\"namedQuery\"?  Do you only need to read a subset of elements, or write them as well?</p>",
        "id": 153850907,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1474985369
    },
    {
        "content": "<p>only read is needed</p>",
        "id": 153850910,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1474985966
    },
    {
        "content": "<p>how come you don't need status? I would think that wasn't inappropriate, at least. Agree that _elements doesn't deal with repeating participants. That does point you towards a heavier weight solution like Chris's one. But from FHIR pov, it's not aa problem to use a different profile for your read/write operations from that for the outcome of a search</p>",
        "id": 153850914,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474988395
    },
    {
        "content": "<p>I forgot to mention that status is also one of the search criteria - and I guess it wouldn't be a problem to include it. The _elements part has really gotten the focus which seems to confirm that solution1 is the best way to go with the current toolbox in FHIR (meaning without \"Profile Governed API\" or similar add-ons).  </p>",
        "id": 153850926,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1474993798
    },
    {
        "content": "<p>so I think the best option for you might be to add a special parameter to indicate a restricted set of data to return for restricting to just the patient participant</p>",
        "id": 153850933,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475002666
    },
    {
        "content": "<p>yes, if the task was only to return a restricted dataset. Given the \"special searchCriteria\"-demand I guess the special parameter is just an implicit part of using the namedQuery.</p>",
        "id": 153851041,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1475060524
    },
    {
        "content": "<p>How about the use of the _elements query parameter?  <a href=\"http://hl7-fhir.github.io/search.html#elements\" target=\"_blank\" title=\"http://hl7-fhir.github.io/search.html#elements\">http://hl7-fhir.github.io/search.html#elements</a></p>",
        "id": 153851068,
        "sender_full_name": "John Moehrke",
        "timestamp": 1475071704
    },
    {
        "content": "<p>I do intend to use the _elements way of doing it. I just want it to be an implicit part of the namedQuery.<br>\nSo I do:<br>\nAppointment?_query=MyNamedQuery&amp;patientIdentifier=myPatientIdToken<br>\nAnd only return a subset of appointment and related entities (also only only subsets of related entities)<br>\nAnd I do not do:<br>\nAppointment?_query=MyNamedQuery&amp;patientIidentifier=myPatientIdToken&amp;_elements=appointmentElement1,appointmentElement2<br>\nIn which case I should validate appointmentElement1,appointmentElement2, and still include subsets of appointment related entities.</p>",
        "id": 153851232,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1475136462
    },
    {
        "content": "<p>I think you don't need to be explicit about _elements if you define your own named query like that. In fact, I wouldn't do it, because saying to use _elements as well creates ambiguity since the named query overlaps with it</p>",
        "id": 153851255,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475164440
    },
    {
        "content": "<p>Yes, exactly</p>",
        "id": 153851342,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1475184667
    },
    {
        "content": "<p>We've also implemented non standard _mask parameter: </p>\n<div class=\"codehilite\"><pre>{\n   birthDate: true,\n   name: { given: true },\n }\n</pre></div>\n\n\n<p>And have some ideas how to introduce functions like showing part of identifiers, specific items in collections etc</p>",
        "id": 153852681,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1476265803
    }
]