[
    {
        "content": "<p>This is an Oauth2 question.  Let's say I have a server side application and I am granting a user access permissions via their client-side app and I want to manage multiple sets of scopes.  I can authenticate and authorize the user but I haven't found a way to reliably verify the identity of the client application.  The client ID and client secret are readily available in the browser source and could be inspected and taken/used by a hacker, which would totally change any restrictions I place on client access.  This matters if I have a layer of RBAC based scopes for the user but also for the client and want to manage those permissions for access as well as security.  Is there a way to solve this in either Oauth2 or from a wider architectural standpoint?  It seems like an obvious problem that must have an existing solution.  Thanks</p>",
        "id": 154018107,
        "sender_full_name": "Oliver",
        "timestamp": 1542136451
    },
    {
        "content": "<p>apps cannot fake the redirect URL</p>",
        "id": 154018190,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1542142213
    },
    {
        "content": "<p>possibly of interest:  <a href=\"https://openid.net/wg/heart/\" target=\"_blank\" title=\"https://openid.net/wg/heart/\">https://openid.net/wg/heart/</a></p>",
        "id": 154018716,
        "sender_full_name": "Adam Flinton",
        "timestamp": 1542270851
    }
]