[
    {
        "content": "<p>In the situation when a source system does not have a status for Condition.clinicalStatus the USCore IG states:  If one of these a status code is missing, a 404 http error code and an OperationOutcome SHALL be returned in response to a query for the resource.<br>\nShould the Condition resource even be populated in your data store and subsequently the API?  The above says no.  So if requests for:<br>\nbaseURL/Condition/abc123<br>\nbaseUrl/Patient/1234/Condition<br>\nbaseURL/Condition?patient=1234<br>\nAll requests throw a 404 and OperationOutcome, correct?<br>\n*And would the same apply to ePDX?</p>",
        "id": 211154914,
        "sender_full_name": "Jason Teeple",
        "timestamp": 1600964363
    },
    {
        "content": "<p>We have the same essentially the same question, particularly around the search operation returning a Bundle. The server finds multiple Conditions (say 20) but 1 of them doesn't have a clinicalStatus. The server is supposed to return a 404, no data because 1 resource can't be valid? Meaning that we refuse to return 19 good resources because there is one bad one.</p>\n<p>I understand it for a read operation, there are no valid resources for that id-404. What if I had a List of Condition references. Should the list exclude the condition reference because it can't be hydrated or should the List return a 404 because one item in the list can't be filled? What about Compositions, does this invalid status item get used there? What if it's in the narrative but not a discrete resource?</p>\n<p>I realize it's hard to dictate how EHR's handle their data internally. But wouldn't it be better served to return all the data that is in the chart, regardless of status and let it be a schematron error, resource missing required data \"status\" than try to cover all the situations of 404 here, but not here unless this then 404 except when .....</p>",
        "id": 211164347,
        "sender_full_name": "Daniel Venton",
        "timestamp": 1600968814
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191410\">@Brett Marquard</span> <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span></p>",
        "id": 211177349,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1600975000
    },
    {
        "content": "<p>Are you seeing 404 for clinicalStatus? My understanding is this missing is an error condition on the server -- <span class=\"user-mention\" data-user-id=\"191357\">@Drew Torres</span> <span class=\"user-mention\" data-user-id=\"191914\">@Danielle Friend</span>  can comment on their support.</p>",
        "id": 211179572,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1600976111
    },
    {
        "content": "<p>We should always have a clinicalStatus for US Core conditions. From looking at the code I don't see a way we would ever wind up in a spot without a status. But, if something somehow went wrong that we didn't have a status for a condition, we do not throw an error, we would return the resource without clinicalStatus populated.  For what its worth - the 5+ years we've supported Condition, we haven't had this issue come up.</p>",
        "id": 211191769,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1600982686
    },
    {
        "content": "<p>Would a data absent reason be a valid alternative here? Say if we did have this issue came up and we needed to log an error for an empty clinicalStatus.</p>",
        "id": 211191970,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1600982818
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191914\">Danielle Friend</span> <a href=\"#narrow/stream/179166-implementers/topic/Condition.2EclinicalStatus/near/211191769\">said</a>:</p>\n<blockquote>\n<p>We should always have a clinicalStatus for US Core conditions. From looking at the code I don't see a way we would ever wind up in a spot without a status. But, if something somehow went wrong that we didn't have a status for a condition, we do not throw an error, we would return the resource without clinicalStatus populated.  For what its worth - the 5+ years we've supported Condition, we haven't had this issue come up.</p>\n</blockquote>\n<p>I suspect missing clinicalStatus would happen more with Payers pulling clinical data out of UM/CM systems.  We may know you have a condition and may not know the status of the condition.  This is problematic for a Payer when following the USCore IG.</p>",
        "id": 211243927,
        "sender_full_name": "Jason Teeple",
        "timestamp": 1601032004
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197108\">Jason Teeple</span> <a href=\"#narrow/stream/179166-implementers/topic/Condition.2EclinicalStatus/near/211243927\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191914\">Danielle Friend</span> <a href=\"#narrow/stream/179166-implementers/topic/Condition.2EclinicalStatus/near/211191769\">said</a>:</p>\n<blockquote>\n<p>We should always have a clinicalStatus for US Core conditions. From looking at the code I don't see a way we would ever wind up in a spot without a status. But, if something somehow went wrong that we didn't have a status for a condition, we do not throw an error, we would return the resource without clinicalStatus populated.  For what its worth - the 5+ years we've supported Condition, we haven't had this issue come up.</p>\n</blockquote>\n<p>I suspect missing clinicalStatus would happen more with Payers pulling clinical data out of UM/CM systems.  We may know you have a condition and may not know the status of the condition.  This is problematic for a Payer when following the USCore IG.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> <span class=\"user-mention\" data-user-id=\"191410\">@Brett Marquard</span> Do you know if other Payers have raised similar questions?</p>",
        "id": 212722186,
        "sender_full_name": "Jason Teeple",
        "timestamp": 1602177432
    },
    {
        "content": "<p>UM/CM systems? How do those systems receive clinical information?</p>",
        "id": 212731212,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1602181790
    },
    {
        "content": "<p>What is the issue with US Core?  the invariant constraints for <code>clinicalStatus</code> <em>are inherited</em> from FHIR Core.  So \"This is problematic for a Payer when following the FHIR specification.\" is more accurate</p>",
        "id": 212733197,
        "sender_full_name": "Eric Haas",
        "timestamp": 1602182759
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191410\">Brett Marquard</span> <a href=\"#narrow/stream/179166-implementers/topic/Condition.2EclinicalStatus/near/212731212\">said</a>:</p>\n<blockquote>\n<p>UM/CM systems? How do those systems receive clinical information?</p>\n</blockquote>\n<p>A payer generates clinical data in their Utilization and Case Management systems.  For example, a Payer could be coaching a member on a diabetes management.  Another potential stream is data in support of a prior auth request.</p>",
        "id": 212733929,
        "sender_full_name": "Jason Teeple",
        "timestamp": 1602183119
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191401\">Eric Haas</span> <a href=\"#narrow/stream/179166-implementers/topic/Condition.2EclinicalStatus/near/212733197\">said</a>:</p>\n<blockquote>\n<p>What is the issue with US Core?  the invariant constraints for <code>clinicalStatus</code> <em>are inherited</em> from FHIR Core.  So \"This is problematic for a Payer when following the FHIR specification.\" is more accurate</p>\n</blockquote>\n<p>Yes, that is probably a more accurate statement.</p>",
        "id": 212734090,
        "sender_full_name": "Jason Teeple",
        "timestamp": 1602183193
    },
    {
        "content": "<p>maybe the UM/CM should capture the Status :)</p>",
        "id": 212736353,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1602184392
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191410\">Brett Marquard</span> <a href=\"#narrow/stream/179166-implementers/topic/Condition.2EclinicalStatus/near/212736353\">said</a>:</p>\n<blockquote>\n<p>maybe the UM/CM should capture the Status :)</p>\n</blockquote>\n<p>That would help. :)<br>\nIn situations when we are the receiver of data or condition is created out of a prior auth request, it is difficult to determine status.</p>",
        "id": 212737429,
        "sender_full_name": "Jason Teeple",
        "timestamp": 1602184933
    },
    {
        "content": "<p>This is interesting and useful background.  I am going to use this use case in a guide I am authoring!</p>",
        "id": 212756684,
        "sender_full_name": "Eric Haas",
        "timestamp": 1602195923
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197108\">Jason Teeple</span> <a href=\"#narrow/stream/179166-implementers/topic/Condition.2EclinicalStatus/near/211154914\">said</a>:</p>\n<blockquote>\n<p>In the situation when a source system does not have a status for Condition.clinicalStatus the USCore IG states:  If one of these a status code is missing, a 404 http error code and an OperationOutcome SHALL be returned in response to a query for the resource.<br>\nShould the Condition resource even be populated in your data store and subsequently the API?  The above says no.  So if requests for:<br>\nbaseURL/Condition/abc123<br>\nbaseUrl/Patient/1234/Condition<br>\nbaseURL/Condition?patient=1234<br>\nAll requests throw a 404 and OperationOutcome, correct?<br>\n*And would the same apply to ePDX?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"243554\">@Pat Taylor</span> <span class=\"user-mention\" data-user-id=\"192132\">@Amol Vyas</span> <span class=\"user-mention\" data-user-id=\"246928\">@josh lamb</span>  Any idea how other payers are supporting clinicalStatus in USCore or ePDX? (sorry for bringing you into a non-CARIN 4BB topic)<br>\nMy thought is that we do not return a clinicalStatus if one does not exist for AllergyIntolerance, Condition,  DocumentReference, Immunization, or Goal.</p>",
        "id": 212812389,
        "sender_full_name": "Jason Teeple",
        "timestamp": 1602242951
    },
    {
        "content": "<p>At the moment being we (=Anthem) are ignoring that US core requirement and so sometimes return no clinical status. We are planning to add a flag to our server so that we can generate fully compliant output for the end points / clients that require it (at the cost of not exposing all the data)</p>",
        "id": 212819861,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1602247444
    },
    {
        "content": "<p>I'm working for a payer as well (UHC). We are flipping between... Option 1: Always setting the status to \"active\" because if it wasn't active then why was treatment provided? Option 2: Not providing Condition resources at all, because we've been told we don't need to expose clinical data that is derived from claims (CMS). We will provide the claim itself.</p>",
        "id": 212827957,
        "sender_full_name": "Daniel Venton",
        "timestamp": 1602251451
    },
    {
        "content": "<p>Depends on the source of your data. If you are sourcing clinical data from claims, you can assume the condition is active. However, if you source data from authorizations, you cannot definitively state active or not unless you see a claim. Because an authorization request can be made, but the patient may never act  on it.</p>",
        "id": 212855230,
        "sender_full_name": "Jason Teeple",
        "timestamp": 1602265147
    },
    {
        "content": "<p>You could assume that the condition was active at the time of the claim. But if the claim was for the cure, then you'd have to assume that the condition was resolved right? This is the problem with assumptions, there's always a case where the blanket assumption is wrong.</p>",
        "id": 213040459,
        "sender_full_name": "Daniel Venton",
        "timestamp": 1602510590
    }
]