[
    {
        "content": "<p>The current version of the base64Binary RegEx is <code>(\\s*([0-9a-zA-Z\\+\\=]){4}\\s*)+</code>. If I use Java regular expressions to validate a Base64 encoded String, I get a StackOverflowError on Strings longer than 6220 chars. If I remove the group around the character class <code>(\\s*[0-9a-zA-Z\\+\\=]{4}\\s*)+</code>, I can validate 9848 chars. If I remove the leading whitespace <code>([0-9a-zA-Z\\+/=]{4}\\s*)+</code>, I can validate 13132 chars and if I remove both whitespaces <code>([0-9a-zA-Z\\+/=]{4})+</code> I don't get a StackOverflowError anymore.</p>\n<p>My Java version is:</p>\n<div class=\"codehilite\"><pre><span></span><code>java version &quot;11.0.7&quot; 2020-04-14 LTS\nJava(TM) SE Runtime Environment 18.9 (build 11.0.7+8-LTS)\nJava HotSpot(TM) 64-Bit Server VM 18.9 (build 11.0.7+8-LTS, mixed mode)\n</code></pre></div>\n\n\n<p>Can someone else replicate my findings? I found this problem while trying to upload a Library resource with a 75k <code>application/elm+xml</code> content into my Blaze server. I do validate every primitive data type with its regular expression during create/update.</p>\n<p>Have other servers the same problem? <span class=\"user-mention\" data-user-id=\"191676\">@Lee Surprenant</span></p>",
        "id": 210013806,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1600094154
    },
    {
        "content": "<p>I have noticed in the past that those regexes are not 'anchored' to the start and end of the string because the tooling they are used with does that by default.  If you manually anchor them, does that help?</p>",
        "id": 210017857,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1600095651
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191614\">@Kevin Olbrich</span> Thanks, but that doesn't help. I create a <code>java.util.regex.Matcher</code> from a <code>java.util.regex.Pattern</code> using the <code>matcher</code> method and call the <code>matches</code> afterwards. The <code>matches</code> method already tries to match the entire string.</p>",
        "id": 210020341,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1600096674
    }
]