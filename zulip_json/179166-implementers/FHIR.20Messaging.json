[
    {
        "content": "<p>hello all, how do we check whether any fhir server process the <strong>fhir messaging</strong> or not?</p>",
        "id": 153896296,
        "sender_full_name": "Jayashree Surnar",
        "timestamp": 1499403033
    },
    {
        "content": "<p>for example: i created a patient and send it to the server using fhir messaging (using our app) then fhir server should send a notificaation/message saying patient is created.how to do this? any ideas?<br>\nThank you.</p>",
        "id": 153896297,
        "sender_full_name": "Jayashree Surnar",
        "timestamp": 1499403336
    },
    {
        "content": "<p>Look at the CapabilityStatement for what's listed in the CapabilityStatement.messaging sectsion.  Note that we don't have standard messages defined in FHIR yet, so some degree of site-to-site negotiation is going to be required.</p>",
        "id": 153896345,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499439215
    },
    {
        "content": "<p>(Or an implementation guide will need to be defined that the relevant parties adhere to)</p>",
        "id": 153896346,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499439234
    },
    {
        "content": "<p>okay <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> .</p>",
        "id": 153896454,
        "sender_full_name": "Jayashree Surnar",
        "timestamp": 1499660250
    },
    {
        "content": "<p>It looks like our company environment Test server which is based on JPA STU3, does not have CapabilityStatement.messaging section, which means subscription is not enabled or STU3 is not supporting it. What is the step to enable subscription resource for STU3 based JPA Server?</p>",
        "id": 153896502,
        "sender_full_name": "sanjay sao",
        "timestamp": 1499716875
    },
    {
        "content": "<p>Ok - we were about to begin looking into implementing a pilot using FHIR Messaging (Sync/async doesn't matter).  I'm trying to figure out where to start.  Been to a few connect-a-thons, but when it comes to what resources, example payloads, and figuring out the models I need to have in hand is getting a little confusing.</p>",
        "id": 153896527,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499721760
    },
    {
        "content": "<p>Maybe use case first, then someone can opine? <br>\nI thought the workflow would be -- <br>\nApp -&gt; EHR / IHE  :  Our app requests notifications of changes to patient (xxxx) (ADT events)<br>\n  - ? Response is immediate, or am I asking for this to be queued up as \"messages\" and now I re-connect asking for answers?<br>\nApp -&gt; EHR / IHE : Our app requests anything new since (last check of events/messages)</p>",
        "id": 153896528,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499721920
    },
    {
        "content": "<p>(Pretend the EHR/IHE is FHIR enabled)</p>",
        "id": 153896529,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499721936
    },
    {
        "content": "<p>In other words: Do I ask the messaging based FHIR server to remember my requests and come back in later to retrieve, or do I have to ask it each time?  I'm trying to figure out the basic model for ADT interaction information.  If there's a test server I can look at live to see how this works, great!</p>",
        "id": 153896531,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499722164
    },
    {
        "content": "<p>Applications claim conformance to one (or more) of the following exchange frameworks:</p>\n<p>\"RESTful FHIR\": the RESTful API<br>\n\"FHIR messaging\": Message based exchange<br>\n\"FHIR documents\": Document based exchange</p>",
        "id": 153896532,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499722167
    },
    {
        "content": "<p><a href=\"http://test.fhir.org/r3/metadata\" target=\"_blank\" title=\"http://test.fhir.org/r3/metadata\">http://test.fhir.org/r3/metadata</a> - I don't see it here.</p>",
        "id": 153896533,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499722182
    },
    {
        "content": "<p><a href=\"http://fhirtest.uhn.ca/conformance?serverId=home_21&amp;pretty=true&amp;encoding=xml\" target=\"_blank\" title=\"http://fhirtest.uhn.ca/conformance?serverId=home_21&amp;pretty=true&amp;encoding=xml\">http://fhirtest.uhn.ca/conformance?serverId=home_21&amp;pretty=true&amp;encoding=xml</a></p>",
        "id": 153896534,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499722236
    },
    {
        "content": "<p>Or here</p>",
        "id": 153896535,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499722238
    },
    {
        "content": "<p>Typically with messaging, you send messages and the receiver sends back messages.  How those are delivered is outside the scope of FHIR.  They could use the $process-message operation to do it pseudo-RESTfully.  But you could also send them over MLLP like v2, wrap them in SOAP, post them to an MQSeries queue or any other delivery mechanism.  A polling-based approach is also possible where messages get posted to a central store and then you query for the ones addressed to you and delete them from the central store once you've taken custody.</p>",
        "id": 153896540,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499722871
    },
    {
        "content": "<p>if i want to get patient's Past Medical History using <strong>fhir messaging</strong>, what are the steps i need to fallow? any suggesions please.<br>\nThank you.</p>",
        "id": 153896568,
        "sender_full_name": "Jayashree Surnar",
        "timestamp": 1499745542
    },
    {
        "content": "<p>Hello everyon, can anyone suggest how to send a bundle using fhir messaging through postman/ARC?</p>",
        "id": 153897024,
        "sender_full_name": "Jayashree Surnar",
        "timestamp": 1500267276
    },
    {
        "content": "<p>Hi all, I'm interested in FHIR messaging and made a dedicated channel for it <a class=\"stream\" data-stream-id=\"112\" href=\"/#narrow/stream/fhir-messages\">#fhir-messages</a>. Hop on over and say hi so I can find some friends to test with. People in the <a class=\"stream\" data-stream-id=\"32\" href=\"/#narrow/stream/v2%20to%20FHIR\">#v2 to FHIR</a> channel might be most interested, but this is more strictly about messaging than v2.</p>",
        "id": 153951872,
        "sender_full_name": "Nick Hatt",
        "timestamp": 1523460407
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191362\">@Richard Kavanagh</span></p>",
        "id": 153951888,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1523462407
    },
    {
        "content": "<p>I would say lookup the person by surname and firstname and date of birth and perhaps medicare number. I don't know the syntax yet.</p>",
        "id": 153951954,
        "sender_full_name": "Dwight Walker",
        "timestamp": 1523497343
    },
    {
        "content": "<p>Can we add Bundle.entry.request when Bundle.type=\"message\"? </p>\n<p>Wanted to use Resource update using PUT in Bundle.entry.request method, so that same resource don't get created again and again. This does work for Bundle.type=\"transaction\". I am confused because specification states that Bundle.entry.request is only for some specific type of Bundles-</p>\n<p>entry.request only for some types of bundles (expression : entry.request.empty() or type = 'batch' or type = 'transaction' or type = 'history', xpath: not(f:entry/f:request) or (f:type/@value = 'batch') or (f:type/@value = 'transaction') or (f:type/@value = 'history'))</p>\n<p>If message exchange is not restful, I guess, entry.request is not needed but for restful implementation along with FHIR server (creating resources coming in message on server and updating them based on some business identifier) probably we need entry.request.</p>\n<p>Could anyone please help with some guidance.</p>",
        "id": 153993601,
        "sender_full_name": "Aditya Joshi",
        "timestamp": 1536189410
    },
    {
        "content": "<p>If you're doing RESTful, then you don't have a message.  In a message, you're essentially invoking an operation.  The MessageHeader.event tells the receiving server everything it needs to know about what to do with the \"focus\" resources and everything connected to them.  If you're wanting to send a server a transaction that tells it to create, update or delete specific resources, then the Bundle.type is \"transaction\" and you don't have a MessageHeader.  You can't cross the streams :)</p>",
        "id": 153993602,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536189848
    },
    {
        "content": "<p>Actually, just today I was thinking: <br>\nWhat if we want to combine the routability, server-decides-what-to-do-with-it semantics of the message bundle with the \"this-is-what-happened\" verbosity of the transaction?<br>\nIs it legitimate to have a message type Bundle who's focal resource is a transaction type Bundle?<br>\nLike: System a sends out a trigger-based message with an event like \"change-notification\" and the transaction-Bundle inside the message-Bundle lists the changes that occured. So when System B receives the message, it can look at the changes and decide based on it's own business logic if and how to process the changes.</p>",
        "id": 153993631,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1536218588
    },
    {
        "content": "<p>...that could be a generic approach to solve the problem discussed here: <a href=\"#narrow/stream/112-fhir-messages/topic/Messaging.20as.20change-notification.20for.20IntegrationEngines\" title=\"#narrow/stream/112-fhir-messages/topic/Messaging.20as.20change-notification.20for.20IntegrationEngines\">https://chat.fhir.org/#narrow/stream/112-fhir-messages/topic/Messaging.20as.20change-notification.20for.20IntegrationEngines</a></p>",
        "id": 153993632,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1536218652
    },
    {
        "content": "<p>If you've got a MessageHeader pointed to the transaction bundle, all sorts of magic is possible - that's the power of the MessageHeader.event (or an operation code) - the behavior is whatever you specify it to be.</p>",
        "id": 153993832,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536243587
    },
    {
        "content": "<p>Hi. I am also going through similar process. </p>\n<p>I am unable to understand how to use $process-message.<br>\nSpecification states- \"To send a message, a sender posts the message bundle to the /Bundle end-point, with a uri that identifies the receiver at MessageHeader.destination.endpoint.\"</p>\n<p>POST <a href=\"http://fhir.hl7fundamentals.org/baseDstu3/$process-message?async=true\" target=\"_blank\" title=\"http://fhir.hl7fundamentals.org/baseDstu3/$process-message?async=true\">http://fhir.hl7fundamentals.org/baseDstu3/$process-message?async=true</a></p>\n<p>and in body, entire bundle of type=message. I have also added endpoint as baseDstu3 url, not sure if this is right way-<br>\n\"destination\": [<br>\n{<br>\n\"endpoint\": \"<a href=\"http://fhir.hl7fundamentals.org/baseDstu3\" target=\"_blank\" title=\"http://fhir.hl7fundamentals.org/baseDstu3\">http://fhir.hl7fundamentals.org/baseDstu3</a>\"<br>\n}<br>\n],</p>\n<p>I am getting below error-<br>\n\"There was an error connecting to <a href=\"http://fhir.hl7fundamentals.org/baseDstu3/$process-message?async=true\" target=\"_blank\" title=\"http://fhir.hl7fundamentals.org/baseDstu3/$process-message?async=true\">http://fhir.hl7fundamentals.org/baseDstu3/$process-message?async=true</a>\"</p>\n<p>I am missing some basic step here. I guess, /Bundle end-point. <br>\n<a href=\"http://build.fhir.org/messaging.html#rest\" target=\"_blank\" title=\"http://build.fhir.org/messaging.html#rest\">http://build.fhir.org/messaging.html#rest</a></p>\n<p>the above link states-<br>\n\"To send a message, a sender posts the message bundle to the /Bundle end-point, with a uri that identifies the receiver at MessageHeader.destination.endpoint. The RESTful server accepts the bundle, stores it as a single bundle, and indexes it on the MessageHeader.\"</p>\n<p>do i need to create my own endpoint and place it in MessageHeader.destination.endpoint? Could it be an endpoint of public fhir server?</p>\n<p>Any example would be a great help.</p>\n<p><strong>Understanding $process-message operation</strong> - <br>\n<code>Is it up to implementer to provide endpoint where to POST message and then invoke this operation. and what this operation will do is something implementer has to decide and write code. I mean it's all up to implementer. FHIR defines this operation just as a mechanism (something like abstract code) and implementer has to implement according to their business rule.</code></p>\n<p>For example-<br>\nSender sending EligibilityRequest message, it contains, EligibilityRequest resource, Patient resource (with patient id ) ,  Coverage Resource (with member id and plan id), Organization resource (Payer and Provider as Organization).  Upon receiving this message, receiver will create EligibilityRequest resource (POST), update Patient resource (using Patient id) and if no such resource then create it (so first try PUT and then POST), create or update Coverage and Organization resources using their identifiers. It is essentially same process what Bundle.request.method do, is that right? In case of Bundle=transaction, we can specify what to do with each resource in request.method but in case of message, it has to be explicitly handled by receiver (pre defined code where it would be mentioned how to update or create resources). Is that understanding correct?</p>",
        "id": 153995218,
        "sender_full_name": "Aditya Joshi",
        "timestamp": 1536585976
    },
    {
        "content": "<p>Any Public FHIR server supporting Messaging and $process-message operation to test?</p>",
        "id": 153995221,
        "sender_full_name": "Aditya Joshi",
        "timestamp": 1536586800
    },
    {
        "content": "<p>MessageHeader.data element for invoking operations via messages</p>\n<p><a href=\"http://hl7.org/fhir/stu3/messaging.html#operations\" target=\"_blank\" title=\"http://hl7.org/fhir/stu3/messaging.html#operations\">http://hl7.org/fhir/stu3/messaging.html#operations</a></p>\n<p>The above link mentions using MessageHeader.data element but I cannot find data element in MessageHeader, am I missing something?<br>\n<a href=\"http://hl7.org/fhir/stu3/messageheader.html\" target=\"_blank\" title=\"http://hl7.org/fhir/stu3/messageheader.html\">http://hl7.org/fhir/stu3/messageheader.html</a></p>",
        "id": 153995230,
        "sender_full_name": "Aditya Joshi",
        "timestamp": 1536587874
    },
    {
        "content": "<p>Posting to /Bundle would archive the entire bundle as-is, without processing of its content. You really need a server capable of $process-message - AFAIK none of the test servers support this at this point in time. Remember that supporting the operation calls for a business-process layer behind that operation to create a meaningful response, which is the reason why a \"test\" server doesn't have such functionality.</p>",
        "id": 153995243,
        "sender_full_name": "René Spronk",
        "timestamp": 1536590476
    },
    {
        "content": "<p>Right.  In order to be able to process a message, a server needs to understand your specific MessageDefinition - what the event is, what the focus resource is, what to expect in the inbound Bundle, what the allowed responses are and - most importantly - all the business logic to go from input to output.  None of that is standardized at the international level.  (At least not yet, and so far not clear that there's interest in that ever happening as messaging seems to be more of a \"closed environment\" sort of thing.)  The test servers only implement functionality that's standardized internationally.</p>",
        "id": 153995251,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536590710
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192156\">@Aditya Joshi</span> we have a test server that accepts the equivalent of ADT and Scheduling - you can see what they look like here: <a href=\"https://developer.redoxengine.com/data-models/PatientAdmin.html?showFhir=true\" target=\"_blank\" title=\"https://developer.redoxengine.com/data-models/PatientAdmin.html?showFhir=true\">https://developer.redoxengine.com/data-models/PatientAdmin.html?showFhir=true</a>. It requires a free signup to authenticate to the API. </p>\n<p>As others have pointed out though, it looks like you want to do eligibility, and the endpoint we expose doesn't support that. You almost need the receiver to be built before you can become an eligibility client. </p>\n<p>As for the <code>MessageHeader.data</code> issue, that does seem like something that needs to be addressed. It sounds like you want to want to use the RESTful API to invoke the $process-message operation, and section 3.4.6 covers invoking operations when you can't use the RESTful API for some reason. For example, you might use that logic to invoke a search or a FHIR operation over MLLP.</p>",
        "id": 153995283,
        "sender_full_name": "Nick Hatt",
        "timestamp": 1536592267
    }
]