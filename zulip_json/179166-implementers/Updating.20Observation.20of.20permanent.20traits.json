[
    {
        "content": "<p>We have a system where patients report certain data, including weight and blood type, and are free to update these values at any time. If they update the weight, we would interpret that as meaning that their weight changed &amp; create a new Observation instance  However, since the blood type a permanent trait, the natural interpretation of an update is that the previous entry was incorrect. Assuming that to be the case, we could react in different ways data-wise:</p>\n<ol>\n<li>Create a new blood type Observation but leave the previous instance untouched</li>\n<li>Create a new blood type Observation and update the previous instance by setting <code>status</code> = \"entered-in-error\"</li>\n<li>Update the existing blood type Observation instance, setting <code>status</code> = \"amended\" (and changing the <code>issued</code> date?)</li>\n</ol>\n<p>What would be preferred way? I assume that (1) is problematic because it leaves to contradictory observations with the same status. But I am not quite sure under which circumstances one can think of a change as an amendment  - (3) - rather than a new observation that may invalidate another one - (1) &amp; (2). For case (3), it is also not clear to me whether the update of <code>issued</code> is required (<a href=\"http://hl7.org/fhir/R4/observation-definitions.html#Observation.issued\">the documentation of <code>issued</code></a> talks mainly about observation needing review)</p>",
        "id": 228242667,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1614610137
    },
    {
        "content": "<p>The typical mechanism would be to record a new mechanism.  It's a new statement made by a new individual at a different time - possibly using a different method/device to make the determination.  Policies around whether to mark the previous one as \"entered in error\" vary.  If the data came from a different source, it's hard to declare it was erroneous.  You <em>can</em> use the observation-replaces extension to note that your new value trumps the old one.</p>",
        "id": 228243888,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1614610571
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"194703\">Morten Ernebjerg</span> <a href=\"#narrow/stream/179166-implementers/topic/Updating.20Observation.20of.20permanent.20traits/near/228242667\">said</a>:</p>\n<blockquote>\n<p>However, since the blood type a permanent trait, the natural interpretation of an update is that the previous entry was incorrect.</p>\n</blockquote>\n<p>Based on my limited understanding, blood type can change due to bone marrow transplant or similar, and sometimes will revert back to the original as well. So a change isn't necessarily an error.</p>",
        "id": 228298682,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1614629792
    },
    {
        "content": "<p>Thanks for the input!</p>\n<blockquote>\n<p>Based on my limited understanding, blood type can change due to bone marrow transplant or similar</p>\n</blockquote>\n<p>Ah, learned something new (again!) - I suspect this might actually be true of many of things we think of as permanent.</p>",
        "id": 228365281,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1614669958
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179166-implementers/topic/Updating.20Observation.20of.20permanent.20traits/near/228243888\">said</a>:</p>\n<blockquote>\n<p>You <em>can</em> use the observation-replaces extension to note that your new value trumps the old one.</p>\n</blockquote>\n<p>An argument for (2) would be that you don't want someone to read that Obs and assume that it's the current belief of the \"system\" (i.e. the folks who control what's in the EHR). To that end, it seems that instead of adding the <code>replaces</code> extension  to the 2nd Obs, you'd want to add a modifying <code>replaced-by</code> extension to the first Obs. Such an extension would expand slightly the semantics of <code>modifying</code> to describe a state of belief rather than just the literal interpretation of the resource (we measure X).</p>\n<p>That distinction sounds academic but it is pretty practical to want to use FHIR itself to capture belief rather than requiring external data to say \"look at this, don't look at that\". This could also be an argument for expanding the Obs.status value set.</p>",
        "id": 228381224,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1614678468
    },
    {
        "content": "<p>Typically you don't have access to update the first one.  You create the link in the new one (and systems are responsible when looking at the old one to check to see if it's replaced).  Also, \"replaced-by\" wouldn't be modifying.  It doesn't change the meaning of the first.</p>",
        "id": 228421338,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1614696427
    },
    {
        "content": "<p>In Observations, in general, the general pattern is query and look at most recent, unless there's a particular reason to look at older stuff.  So most of the time \"replaces\" is implicit if the Observation type is a \"last in wins\" kind of Observation.</p>",
        "id": 228421529,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1614696489
    },
    {
        "content": "<blockquote>\n<p>So most of the time \"replaces\" is implicit if the Observation type is a \"last in wins\" kind of Observation.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  For my understanding: by <em>\"last in wins\" kind of Observation</em>, are you referring to a class of Observation with certain generic characteristic or is it rather a detailed case-by-case classification?</p>",
        "id": 228430733,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1614699644
    },
    {
        "content": "<p>I think it would be case by case and context-specific</p>",
        "id": 228433851,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1614700668
    },
    {
        "content": "<p>OK, thanks!</p>",
        "id": 228434029,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1614700725
    }
]