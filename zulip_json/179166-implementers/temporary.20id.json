[
    {
        "content": "<p>In a transaction Bundle one may have a resource that is referenced by another resource. However, the resource being referenced does not yet exist on the server so one uses a temporary id. A temporary id has the prefix \"urn:oid:\" or \"urn:uuid:\". Unlike a normal id the temporary id is not restricted to 64 characters so one can use a GUID. The question I have MUST the temporary id use an oid or GUID format OR may one use any of the legal characters of a normal id as long as it is unique within the Bundle?temporary id</p>",
        "id": 153869473,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1485782035
    },
    {
        "content": "<p>I don't think it's necessary to use oids, because<br>\na) In a transaction:  it's actually the receiver who determines whether the id is \"new\" and so whether it would be updated or created on a PUT<br>\nb) In a message/document, resolution (<a href=\"http://build.fhir.org/bundle.html#references\" target=\"_blank\" title=\"http://build.fhir.org/bundle.html#references\">http://build.fhir.org/bundle.html#references</a>) would do what you need, so here it does not seem to matter</p>",
        "id": 153869476,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1485785903
    },
    {
        "content": "<p>Well, the id has to be a urn it it's not a RESTful id.  And the urn needs to be a valid urn.  I actually think we do limit urns to OIDs and UUIDs, but I could be wrong on that.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ?</p>",
        "id": 153869543,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1485825345
    },
    {
        "content": "<p>Ewout,<br>\nIt was my understanding that by definition a temporary id is going to be replaced by the server with something that the server finds appropriate. Furthermore this is the only way to do a POST in a transaction Bundle with a resource that is referenced by another resource in the Bundle. The \"urn:iso:\" or \"urn:uuid:\" prefix in the id is just a way to identify the id as a temporary id. </p>\n<p>In that sense, it is never really part of a RESTful transaction. The transaction takes place after the server does the replacement. What I am wondering is if it really matters what I stick in there since it's just a placeholder whose value has no meaning. The only thing that is really needed is that it is unique within the Bundle. After the transaction no one would ever know what the original set of temporary ids was.</p>",
        "id": 153869712,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1485976205
    },
    {
        "content": "<p>If the resource already exists with a RESTful id - e.g. because you're doing an update rather than a create - then the id in a transaction can certainly be a real URL rather than a GUID.  However, once the transaction is processed, there's no expectation that anyone will remember the GUIDs that were used</p>",
        "id": 153869744,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1485989593
    },
    {
        "content": "<p>I am not sure my question is understood. I am only considering the case where one has a transaction Bundle and does not know if the resource exists on the server OR knows that the resource does not exist on the server. So the transaction is either a create or a conditional create. In addition, there are other resources in the Bundle that reference this resource.<br>\nIn this case I need to specify a temporary id. The question is are there any more restrictions on the temporary id other than it be unique within the Bundle? In other words, can I use \"urn:oid:hello\" as the temp id?</p>",
        "id": 153869894,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1486127724
    },
    {
        "content": "<p>urn:oid:hello isn't a valid urn:oid and some systems might choke.  Normal convention is to use urn:uuid:[some guid].  Note that *any* url you specify in a transaction that doesn't have a base of the target server is going to be treated as a temporary id.  If you have the resource on your server, you're free to use that URL - and the receiving system would usually establish a mapping between your id and the one it assigns.</p>",
        "id": 153869920,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1486138975
    },
    {
        "content": "<p>Okay, So that is the answer. They have to be valid oids or UUIDs. The reason temporary ids are being used is to avoid rejection by servers when one uploads a Bundle with create transaction and puts in a 'real' id (that will be changed). Doing so gave me errors. I am hoping that the temporary id will be accepted (it better be)!</p>",
        "id": 153869926,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1486139567
    },
    {
        "content": "<p>For a throw-away id, GUIDs meet the need much better than OIDs.</p>",
        "id": 153869928,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1486139681
    },
    {
        "content": "<p>I don't they have to be, but it's certainly better if they are. And safer </p>",
        "id": 153870188,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1486362783
    },
    {
        "content": "<p>btw, I didn't understand this:</p>",
        "id": 153870189,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1486362788
    },
    {
        "content": "<p>\"Unlike a normal id the temporary id is not restricted to 64 characters so one can use a GUID\"</p>",
        "id": 153870191,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1486362803
    },
    {
        "content": "<p>Graham, I was thinking of 128 bits which of course has nothing to do with the number of characters.<br>\nurn:uuid:47709cc7-b3ec-4abc-9d26-3df3d3d57907 is 45 characters. My bad.</p>\n<p>On the other hand, when I try to actually USE a temporary id I get the following error<br>\n\"Invalid placeholder ID found: urn:oid:1.0.0.1 - Must be of the form 'urn:uuid:[uuid]' or 'urn:oid:[oid]'\"<br>\nIs that also my bad somehow or is this a bug in HAPI FHIR? </p>",
        "id": 153870999,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1486748972
    },
    {
        "content": "<p>Were you making that the \"id\" or the \"full URL\"?  (The id is just the guid or OID, not the \"urn:uuid:\" part</p>",
        "id": 153871031,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1486759501
    },
    {
        "content": "<p>I think that urn:oid:1.0.0.1 is a valid oid, so it sounds like a bug, but where does it come from?</p>",
        "id": 153871059,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1486767054
    },
    {
        "content": "<p>Lloyd,<br>\nThis is an example in from HAPI FHIR &lt;fullUrl value=\"urn:uuid:47709cc7-b3ec-4abc-9d26-3df3d3d57907\"/&gt;<br>\nlocated here: <a href=\"http://hapifhir.io/doc_rest_client_examples.html#Transaction_With_Placeholder_IDs\" target=\"_blank\" title=\"http://hapifhir.io/doc_rest_client_examples.html#Transaction_With_Placeholder_IDs\">http://hapifhir.io/doc_rest_client_examples.html#Transaction_With_Placeholder_IDs</a><br>\nIs the example in error? How does the server know that the id is a temporary id with the \"urn:oid:\" prefix?</p>",
        "id": 153871072,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1486774931
    },
    {
        "content": "<p>Grahame,<br>\nI got the same error when I used a GUID instead of my fake OID. Is Lloyd correct with respect to having no \"urn:oid:\" prefix? I would think it would be needed to tell the server that it is a temporaty id placeholder.</p>",
        "id": 153871073,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1486775047
    },
    {
        "content": "<p>The urn:oid: or urn:uuid: prefix appears in the fullUrl element of the Bundle entry.  (And you'd only ever have an OID or UUID as the id inside a Bundle.)</p>",
        "id": 153871075,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1486777928
    },
    {
        "content": "<p>Lloyd,<br>\nThat maybe a HAPI FHIR implementation issue. I put the urn:oid:* or urn:uuid:* (I have tried both) in the id in HAPI FHIR as that way I can access it later when I need to reference the resource in another resource. HAPI FHIR does not populate the id with that value in its final resource when it generates the Bundle. I also use that resource id when creating the full URL. So populating the resource id with the HAPI FHIR resource.setId() method is just implementation; the id is not present on the wire. It's clear HAPI FHIR uses the prefix to identify the id as 'temporary'</p>\n<p>Nevertheless, no server accepts the temporary id, including the HAPI FHIR server, either version 2 or 3. I get that error above. If I remove the prefix, the id DOES get placed in both the resource AND the fullURL on the wire and the servers are happy. So it appears I need to violate the spec to function (as I understand it).</p>",
        "id": 153871135,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1486896797
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> Comments? :)</p>",
        "id": 153871155,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1486940224
    },
    {
        "content": "<p>may have resolved this in PM  - some confusion about how references to temporary ids work</p>",
        "id": 153871165,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1486961130
    },
    {
        "content": "<p>warning UUID can be encoded two different ways in URN... The obvious way as a URN UUID. But there is a way to encode a UUID in OID form, which can then be encoded as URN OID... We should warn about this... We likely should require that UUID be encoded only using URN UUID form...  <a href=\"https://healthcaresecprivacy.blogspot.com/2011/02/creating-and-using-unique-id-uuid-oid.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2011/02/creating-and-using-unique-id-uuid-oid.html\">https://healthcaresecprivacy.blogspot.com/2011/02/creating-and-using-unique-id-uuid-oid.html</a> </p>",
        "id": 153871396,
        "sender_full_name": "John Moehrke",
        "timestamp": 1487091752
    },
    {
        "content": "<p>does that actually matter? I don't think we actually draw a distinction between how we handle UUIDs and how we handle OIDs, so a UUID-encoded-as-OID shouldn't matter?</p>\n<p>That is hilarious that that's a thing though.. learn something new every day.</p>",
        "id": 153871425,
        "sender_full_name": "James Agnew",
        "timestamp": 1487098024
    },
    {
        "content": "<p>The temporary id used in create transactions in a Bundle is defined in HAPI FHIR. But I cannot locate where it is defined in the FHIR standards. Does anybody know where that specification is stated?</p>",
        "id": 153961358,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1526413640
    },
    {
        "content": "<p><a href=\"http://build.fhir.org/bundle.html#bundle-unique\" target=\"_blank\" title=\"http://build.fhir.org/bundle.html#bundle-unique\">http://build.fhir.org/bundle.html#bundle-unique</a></p>",
        "id": 153961361,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1526415259
    },
    {
        "content": "<p>It would have helped to define the term 'temporary id' there. Searching on temporary id led me to the remark in the FullURL description but that was as far as I got. In HAPI FHIR \"urn:oid:\" is also noted as exceptable and that is what I use...</p>",
        "id": 153961367,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1526416490
    },
    {
        "content": "<p>you could create a task for us to mention those words</p>",
        "id": 153961389,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526420144
    },
    {
        "content": "<p>The other thing tjhat is unclear when using a temporary id is the relation between the resource logical id and the FullURL. When one is NOT using a temporary id, the FullURL will have \"Resource/id\". However, if id is a temporary id, should the FullURL have JUST the id OR shall it contain the resource name as well? For example, the Observation.id=\"urn:oid:1.0.0.5\". Should the fullURL be \"Observation/urn:oid:1.0.0.5\" or just \"urn:oid:1.0.0.5\"?</p>",
        "id": 153961867,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1526476069
    },
    {
        "content": "<p>just the OID</p>",
        "id": 153961899,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526478460
    },
    {
        "content": "<blockquote>\n<p>just the OID</p>\n</blockquote>\n<p>Thank you!!</p>",
        "id": 153961904,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1526478884
    },
    {
        "content": "<p>As I understand it if I do a first-time conditional create of a Patient resource using a temporary id and reference that temporary id in an Observation resource in the bundle, the Patient resource will be created on the server. If I send another bundle with the same conditional create of the same Patient resource with a different temporary id and reference that temporary id in another Observation resource in the bundle, my understanding is that Patient resource will not be re-created (a 200 return not a 201) and the other Observation resource will reference the existing Patient resource on the server.</p>\n<p>In other words, the server will take the logical id IT has created for the Patient, and place that in my new uploaded Observation resource. </p>\n<p><strong>Is this correct?</strong></p>",
        "id": 153974954,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1531410404
    },
    {
        "content": "<p>While server-specific logic might affect this, in general I would not expect the 2nd bundle to \"know about\" the first.  The second bundle would POST a new Patient record rather than updating or linking to the Patient from the 1st bundle.</p>",
        "id": 153974979,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1531416277
    },
    {
        "content": "<blockquote>\n<p>While server-specific logic might affect this, in general I would not expect the 2nd bundle to \"know about\" the first.  The second bundle would POST a new Patient record rather than updating or linking to the Patient from the 1st bundle.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191351\">@Chris Grenz</span>  I was hoping that would not be the case since I am using a <em>conditional</em> create. The server would see my second Patient resource but given that it is a conditional, it will look for a resource that matches it given the conditions (in this case the identifier). It would then return a 200 since it does not create the resource and I would think it would replace the temporary id with the id IT assigned to the Patient earlier and use that to update the temporary ids in the newly uploaded transaction  bundle.</p>\n<p>I suppose one way to find out is to do it. But I want to make sure the process is part of the conditional create standard (assuming the transaction is supported) and not unique to the server implementation.</p>",
        "id": 153974982,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1531417366
    },
    {
        "content": "<p>My mistake - you're correct assuming your <code>If-None-Exist</code> header is set correctly.</p>",
        "id": 153974987,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1531419588
    },
    {
        "content": "<p>Simply posting the same resource won't invoke that check.</p>",
        "id": 153974988,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1531419629
    },
    {
        "content": "<p>I'd try it out on the test servers...there's some unspecified magic there.  Probably worth a tracker item to be specific about the behavior you're describing.</p>",
        "id": 153974990,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1531419899
    },
    {
        "content": "<blockquote>\n<p>Simply posting the same resource won't invoke that check.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191351\">@Chris Grenz</span>  Not POST ... conditional create POST  with a temporary id in a bundle</p>",
        "id": 153974993,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1531421001
    },
    {
        "content": "<p>Conditional create = POST with If-None-Exist header.</p>",
        "id": 153974994,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1531421123
    },
    {
        "content": "<p>In other words, I'm agreeing with you. As you describe should work.</p>",
        "id": 153974995,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1531421167
    }
]