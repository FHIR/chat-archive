[
    {
        "content": "<p>Hi. I'm trying to make sense of recent development in The Netherlands where more and more documentation comes up suggesting that we need to deploy an ebMS based infrastructure to support PHR / EHR connections. Note that we are not talking about patient portals, or SMART on FHIR apps, but EHR agnostic patient environments that connect to \"any EHR\".<br>\n.<br>\nContent wise we seem to all agree that it needs to be FHIR, but infrastructurally ebMS is pushed. One of those reasons is because the EU came up with a CEF standard called eDelivery (<a href=\"https://ec.europa.eu/cefdigital/wiki/display/CEFDIGITAL/eDelivery+How+it+works\" target=\"_blank\" title=\"https://ec.europa.eu/cefdigital/wiki/display/CEFDIGITAL/eDelivery+How+it+works\">https://ec.europa.eu/cefdigital/wiki/display/CEFDIGITAL/eDelivery+How+it+works</a>), and another would be because XDS uses ebXML, and this recommendation from Australia says so (<a href=\"http://www.sbr.gov.au/__data/assets/pdf_file/0018/42750/Message-Protocols-for-Enabling-Digital-Government-Services-Final-Report.pdf\" target=\"_blank\" title=\"http://www.sbr.gov.au/__data/assets/pdf_file/0018/42750/Message-Protocols-for-Enabling-Digital-Government-Services-Final-Report.pdf\">http://www.sbr.gov.au/__data/assets/pdf_file/0018/42750/Message-Protocols-for-Enabling-Digital-Government-Services-Final-Report.pdf</a>).<br>\n.<br>\nebMS may or may not be a bad choice, but I fail in making the right connections with some dynamic aspects of FHIR. What would a CapabilityStatement for ebMS look like? Does it even make sense to have one? How do I query/search FHIR stuff using ebMS? By repackaging the query into a generic $search operation?<br>\n.<br>\nI'm looking for pointers and/or a nice conversation in Madrid.</p>",
        "id": 153881112,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1491490554
    },
    {
        "content": "<p>You probably could come up with a way of packaging FHIR over ebMS, but you'd lose a good chunk of your interoperability by not supporting things like SmartOnFHIR which are dependent on having a REST interface.</p>",
        "id": 153881115,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1491490799
    },
    {
        "content": "<p>Does SMART on FHIR not consist of two parts. 1. token negotation and 2. supplying the token in subsequente interchanges? I thought 1. is REST, but the second part does not need to be. So once you have the token you would be golden over ebMS</p>",
        "id": 153881127,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1491493902
    },
    {
        "content": "<p>Only if your idea of \"golden\" includes no smart apps working with your systems . . .  Whether it may be possible to leverage parts of the technology is different from whether you'll interoperate with the existing community of systems.  When pursuing an interoperability technology, a primary consideration (if not *the* primary consideration) should be maximizing the number of systems that can interoperate with you with minimal (or ideally no) customization specific to your implementation.  I'm not sure how ebMS would give you that.</p>",
        "id": 153881140,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1491498539
    },
    {
        "content": "<p>ebMs is adding unnecessary layers on top of REST for no value. But that's the sort of thing that happens in the real world. </p>",
        "id": 153881183,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1491515923
    },
    {
        "content": "<p>does ebMS = xds.b? </p>",
        "id": 153881184,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1491515931
    },
    {
        "content": "<p>or just original xsd? </p>",
        "id": 153881185,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1491515942
    },
    {
        "content": "<p>or just something different?</p>",
        "id": 153881186,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1491515946
    },
    {
        "content": "<p>I'm not sure, but I don't think ebMS is related to XDS.a or XDS.b. It's something different.</p>",
        "id": 153881358,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1491586817
    },
    {
        "content": "<p>isn't ebMS a form of SOAP for messaging... isn't it used in HL7 v3 messaging?</p>",
        "id": 153881359,
        "sender_full_name": "John Moehrke",
        "timestamp": 1491587875
    },
    {
        "content": "<p><a href=\"https://en.wikipedia.org/wiki/EbXML#Messaging_Service_Specification\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/EbXML#Messaging_Service_Specification\">https://en.wikipedia.org/wiki/EbXML#Messaging_Service_Specification</a></p>",
        "id": 153881422,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1491603390
    },
    {
        "content": "<p>I would take ebMS from the EU and put it in a pipe and smoke it. There is no single standard that can ensure that any environment can connect to \"any EHR\", and putting all the balls in one basket saying that ebMS is the single solution sounds weird to me. There is no problem in piggybacking FHIR into ebMS but is it sort of an artificial wrapping - or as Grahame once told me when I asked about putting FHIR into the unstructured part of CDA: its turtles all the way down. So you would gain a little I guess, but not much </p>",
        "id": 153881424,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1491604025
    },
    {
        "content": "<p>ebMS uses ebXML and looks like SOAP with MIME attachments to me. Note that ebMS is not my choice, but coming from the EU it might be something we need to deal with. eDelivery is the outcome for creating \"one single digital market\" for the EU in any domain, not just healthcare. Applicability for eHealth has only just been tested. By whom, where I don't know. I'm still waiting for the report that was offered to the EU on Thursday.</p>\n<p>The reasoning behind ebMS with inevitable repackaging involve:<br>\n- Being content agnostic. FHIR RESTfull is not, but I can use FHIR Bundle or Binary to achieve the same, comparable with Jens' FHIR wrapped in CDA :-)<br>\n- Being able to use end-to-end content encryption. No idea how to do that with FHIR<br>\n- Being able to use the defined service lookup feature. For FHIR you need to know beforehand where the service is before you can check its CapabilityStatement. With an ecosystem of PHR/care providers that do not know eachother beforehand this becomes an issue<br>\n- Being able to use async communication. FHIR typically is synchronous (this is one of the weakest arguments I think)</p>",
        "id": 153881439,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1491634447
    },
    {
        "content": "<p>If you need end-to-end encryption with multiple hops, you'd do a FHIR message where the payload was a Binary containing the encrypted payload.  With FHIR you can have a registry of CapabilityStatements - those would tell you where the systems  were as well as what they can do.  FHIR messaging is there to support async.  And you can do async with Tasks RESTfully too.</p>",
        "id": 153881449,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1491662644
    },
    {
        "content": "<p>actually, you can do just SSL for end to end encryption. What you can't do with SSL is partial encryption. There's some work around partial encryption in HTTP, but it hasn't gone far </p>",
        "id": 153881485,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1491705522
    },
    {
        "content": "<p>and there are projects building endpoint registrys. (oddly enough, using the EndPoint resource)</p>",
        "id": 153881486,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1491705605
    },
    {
        "content": "<p>The beauty of FHIR being transport agnostic is that there are many ways to get end-to-end encryption. S/MIME (like in the USA with Direct), XML-Encrypt (like in IHE-DSG), XML-Encrypt (like in WS-I profiled end-to-end soap encryption), etc...</p>",
        "id": 153881506,
        "sender_full_name": "John Moehrke",
        "timestamp": 1491756424
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> FHIR content is transport agnostic, but FHIR RESTful is not content agnostic. eDelivery as content agnostic infrastructure supports FHIR content. eDelivery comes with open source software. FHIR does. Doesn't mean that the combo works nicely... I would be able to contact zero test servers today.</p>",
        "id": 153881585,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1491826719
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> SSL is transport layer encryption, not content encryption. End-to-end content encryption (compare Whatsapp) is what I get as requirement today. The idea is that hops in the network cannot access/change contents.</p>",
        "id": 153881586,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1491826799
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> Yes that's the direction I'm thinking of.</p>",
        "id": 153881588,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1491826933
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span>  RE \"eDelivery comes with open source software\" &lt;= is 'eDelivery' a specific project or initiative that you can link me to, or are you using the term \"eDelivery\" generically.. as a shorthand for \"electronic delivery\"? </p>",
        "id": 153882017,
        "sender_full_name": "Thomas Lukasik",
        "timestamp": 1491960774
    },
    {
        "content": "<p><a href=\"https://ec.europa.eu/cefdigital/wiki/display/CEFDIGITAL/eDelivery+How+it+works\" target=\"_blank\" title=\"https://ec.europa.eu/cefdigital/wiki/display/CEFDIGITAL/eDelivery+How+it+works\">https://ec.europa.eu/cefdigital/wiki/display/CEFDIGITAL/eDelivery+How+it+works</a> Software is here: <a href=\"https://ec.europa.eu/cefdigital/wiki/display/CEFDIGITAL/eDelivery+Services\" target=\"_blank\" title=\"https://ec.europa.eu/cefdigital/wiki/display/CEFDIGITAL/eDelivery+Services\">https://ec.europa.eu/cefdigital/wiki/display/CEFDIGITAL/eDelivery+Services</a></p>",
        "id": 153882029,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1491980125
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span>  Thanks!</p>",
        "id": 153882030,
        "sender_full_name": "Thomas Lukasik",
        "timestamp": 1491984662
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span>  ..I see now that I should have read your initial post more carefully ;-)</p>",
        "id": 153882031,
        "sender_full_name": "Thomas Lukasik",
        "timestamp": 1491985102
    },
    {
        "content": "<p>I asked about this on the HTTP stds mail list, and Mark Nottingham (chair for HTTP says): <a href=\"http://httpwg.org/http-extensions/draft-ietf-httpbis-encryption-encoding.html\" target=\"_blank\" title=\"http://httpwg.org/http-extensions/draft-ietf-httpbis-encryption-encoding.html\">http://httpwg.org/http-extensions/draft-ietf-httpbis-encryption-encoding.html</a> has some traction. Because it's part of WebPush, it'll end up in browsers too (and I think already is getting in there), although it's not clear how/if it'll be exposed generically.</p>",
        "id": 153884841,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1492288238
    },
    {
        "content": "<p>I encourage Europeans - all questions about this are from Europe - to join <a href=\"https://github.com/httpwg/wiki/wiki/EncryptedContentEncoding\" target=\"_blank\" title=\"https://github.com/httpwg/wiki/wiki/EncryptedContentEncoding\">https://github.com/httpwg/wiki/wiki/EncryptedContentEncoding</a> and encourage this along</p>",
        "id": 153884842,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1492288315
    },
    {
        "content": "<p>Thanks Grahame. I've shared your suggestion with a number of people closer to the fire than I am. To be continued.</p>",
        "id": 153884968,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1492515479
    }
]