[
    {
        "content": "<p>Hi,</p>\n<p>This is a question for the STU3 version of this profile.</p>\n<p>The <a href=\"http://hl7.org/fhir/StructureDefinition/lipidprofile\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/lipidprofile\">http://hl7.org/fhir/StructureDefinition/lipidprofile</a> profile contains a discriminator for \"reference.code\" with discriminator type \"value\".</p>\n<p>It references the following profiles:<br>\na. <a href=\"http://hl7.org/fhir/StructureDefinition/cholesterol\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/cholesterol\">http://hl7.org/fhir/StructureDefinition/cholesterol</a><br>\nb. <a href=\"http://hl7.org/fhir/StructureDefinition/triglyceride\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/triglyceride\">http://hl7.org/fhir/StructureDefinition/triglyceride</a><br>\nc. <a href=\"http://hl7.org/fhir/StructureDefinition/hdlcholesterol\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/hdlcholesterol\">http://hl7.org/fhir/StructureDefinition/hdlcholesterol</a><br>\nd. <a href=\"http://hl7.org/fhir/StructureDefinition/ldlcholesterol\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/ldlcholesterol\">http://hl7.org/fhir/StructureDefinition/ldlcholesterol</a></p>\n<p>My questions are:<br>\n1. Profiles (a) and (c) both have .fixed and .binding values. In this scenario, which takes precedence when a conformant validator slices the elements? The spec <a href=\"http://hl7.org/fhir/STU3/profiling.html#discriminator\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/profiling.html#discriminator\">http://hl7.org/fhir/STU3/profiling.html#discriminator</a> is not very clear to me on the precedence:<br>\n\"If the type is 'value', then the element definition must use either ElementDefinition.fixed[x] or, if the element has a terminology binding, a required binding with a Value Set that enumerates the list of possible codes in the value set (\"extensional definition\").\"<br>\n2. Followup on #1, should a conformant validator validate on both .fixed and .binding if both are present? Or is it just enough to just validate on .fixed?<br>\n3. Profile (b) has both .pattern and .binding values. As per my understanding of the profiling rules at <a href=\"http://hl7.org/fhir/STU3/profiling.html#discriminator\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/profiling.html#discriminator\">http://hl7.org/fhir/STU3/profiling.html#discriminator</a> a conformant validator should slice on .binding. Should a conformant validator still try to validate the given element using .pattern?</p>",
        "id": 153893163,
        "sender_full_name": "Michael Calderero",
        "timestamp": 1497045900
    },
    {
        "content": "<p>This is a timely question. I just spent a couple of days getting this profile correct and validating. So check the current build for what it looks like when it's actually working correctly </p>",
        "id": 153893170,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1497047389
    },
    {
        "content": "<p>fixed overrides the binding </p>",
        "id": 153893171,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1497047407
    },
    {
        "content": "<p>validator just validates the fixed if it finds it, since fixed must be true irrespective of the binding</p>",
        "id": 153893172,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1497047435
    },
    {
        "content": "<p>pattern also overrides the binding - but oh, it might not. That's nasty. I'll have to think about that</p>",
        "id": 153893173,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1497047478
    },
    {
        "content": "<p>.... the fixed value must be a member of bound code set too.    Can the pattern be used as a discriminator too?  I thought not</p>",
        "id": 153893177,
        "sender_full_name": "Eric Haas",
        "timestamp": 1497058350
    },
    {
        "content": "<p>pattern can be used as a discriminator. It makes real sense for CodeableConcept </p>",
        "id": 153893182,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1497060080
    },
    {
        "content": "<p>Thank you for the answers.</p>",
        "id": 153893248,
        "sender_full_name": "Michael Calderero",
        "timestamp": 1497268644
    },
    {
        "content": "<p>Stupid FHIRPath question.... What is the FHIRpath for self  \".\"?  E.g. if I want to discriminate Identifier on its own pattern what is the (relative) path.</p>",
        "id": 153893410,
        "sender_full_name": "Eric Haas",
        "timestamp": 1497372793
    },
    {
        "content": "<p>If you're in an iterator (e.g. .where()), use $this</p>",
        "id": 153893414,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1497373174
    },
    {
        "content": "<p>You can also use  %context to get to the original node passed to the execution engine.</p>",
        "id": 153893415,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1497373241
    },
    {
        "content": "<p>I have a question about .fixed[x] validation.</p>\n<p>Let's say I have the following fixed[x] value:</p>\n<div class=\"codehilite\"><pre><span></span>&lt;fixedString value=&quot;abc&quot;&gt;\n  &lt;extension url=&quot;url1&quot;&gt;\n    &lt;valueBoolean value=&quot;true&quot;/&gt;\n  &lt;/extension&gt;\n  &lt;extension url=&quot;url2&quot;&gt;\n    &lt;valueBoolean value=&quot;true&quot;/&gt;\n  &lt;/extension&gt;\n&lt;/fixedString&gt;\n</pre></div>\n\n\n<p>If I understood <a href=\"http://hl7.org/fhir/STU3/elementdefinition-definitions.html#ElementDefinition.fixed_x_\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/elementdefinition-definitions.html#ElementDefinition.fixed_x_\">http://hl7.org/fhir/STU3/elementdefinition-definitions.html#ElementDefinition.fixed_x_</a> correctly, then the following should fail validation?<br>\n1. Because it's missing one of the extensions:</p>\n<div class=\"codehilite\"><pre><span></span>&lt;someStringProperty value=&quot;abc&quot;&gt;\n  &lt;extension url=&quot;url1&quot;&gt;\n    &lt;valueBoolean value=&quot;true&quot;/&gt;\n  &lt;/extension&gt;\n&lt;/someStringProperty&gt;\n</pre></div>\n\n\n<p>2. Because the extensions are out of order:</p>\n<div class=\"codehilite\"><pre><span></span>&lt;someStringProperty value=&quot;abc&quot;&gt;\n  &lt;extension url=&quot;url2&quot;&gt;\n    &lt;valueBoolean value=&quot;true&quot;/&gt;\n  &lt;/extension&gt;\n  &lt;extension url=&quot;url1&quot;&gt;\n    &lt;valueBoolean value=&quot;true&quot;/&gt;\n  &lt;/extension&gt;\n&lt;/someStringProperty&gt;\n</pre></div>",
        "id": 153894619,
        "sender_full_name": "Michael Calderero",
        "timestamp": 1497998574
    },
    {
        "content": "<p>Yes, that sounds right.  If you find the validator isn't actually enforcing this (it's entirely possible it isn't), feel free to submit a change request.</p>",
        "id": 153894620,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1497998742
    },
    {
        "content": "<p>I'm trying to verify this using the validator in <a href=\"http://build.fhir.org\" target=\"_blank\" title=\"http://build.fhir.org\">build.fhir.org</a> but I'm getting this error:<br>\nC:\\DevTools\\fhirvalidator\\latest&gt;java -jar org.hl7.fhir.validator.jar Patient_fixed_exactlyAsFixed.xml<br>\n  .. load FHIR from <a href=\"http://build.fhir.org/\" target=\"_blank\" title=\"http://build.fhir.org/\">http://build.fhir.org/</a><br>\n  .. connect to tx server @ <a href=\"http://tx.fhir.org/r3\" target=\"_blank\" title=\"http://tx.fhir.org/r3\">http://tx.fhir.org/r3</a><br>\nException in thread \"main\" java.lang.Exception: Unable to find definitions at URL '<a href=\"http://build.fhir.org/igpack.zip\" target=\"_blank\" title=\"http://build.fhir.org/igpack.zip\">http://build.fhir.org/igpack.zip</a>': <a href=\"http://build.fhir.org/igpack.zip\" target=\"_blank\" title=\"http://build.fhir.org/igpack.zip\">http://build.fhir.org/igpack.zip</a><br>\n        at org.hl7.fhir.r4.validation.ValidationEngine.loadIgFromUrl(ValidationEngine.java:282)<br>\n        at org.hl7.fhir.r4.validation.ValidationEngine.loadIgSource(ValidationEngine.java:262)<br>\n        at org.hl7.fhir.r4.validation.ValidationEngine.loadDefinitions(ValidationEngine.java:183)<br>\n        at org.hl7.fhir.r4.validation.ValidationEngine.&lt;init&gt;(ValidationEngine.java:178)<br>\n        at org.hl7.fhir.r4.validation.Validator.main(Validator.java:249)<br>\nCaused by: java.io.FileNotFoundException: <a href=\"http://build.fhir.org/igpack.zip\" target=\"_blank\" title=\"http://build.fhir.org/igpack.zip\">http://build.fhir.org/igpack.zip</a><br>\n        at sun.net.www.protocol.http.HttpURLConnection.getInputStream0(Unknown Source)<br>\n        at sun.net.www.protocol.http.HttpURLConnection.getInputStream(Unknown Source)<br>\n        at org.hl7.fhir.r4.validation.ValidationEngine.loadIgFromUrl(ValidationEngine.java:279)<br>\n        ... 4 more</p>\n<p>And sure enough, the <a href=\"http://build.fhir.org/igpack.zip\" target=\"_blank\" title=\"http://build.fhir.org/igpack.zip\">http://build.fhir.org/igpack.zip</a> link returns 404.</p>",
        "id": 153894830,
        "sender_full_name": "Michael Calderero",
        "timestamp": 1498074338
    },
    {
        "content": "<p>I download and run it all locally like so...<br>\n<code>java -jar /Users/ehaas/Downloads/validator/org.hl7.fhir.validator.jar ${fs} -defn /Users/ehaas/Downloads/igpack.zip -ig \"${path}\"/output/validator.pack</code></p>",
        "id": 153894836,
        "sender_full_name": "Eric Haas",
        "timestamp": 1498075517
    },
    {
        "content": "<p>I can't download the igpack.zip from <a href=\"http://build.fhir.org\" target=\"_blank\" title=\"http://build.fhir.org\">build.fhir.org</a> because it's not there.</p>\n<p>So I downloaded the STU3 one and it seems it's just similar to definitions.xml.zip but with the <a href=\"http://version.info\" target=\"_blank\" title=\"http://version.info\">version.info</a> file in it.</p>\n<p>So...I created a fakeigpack.zip file that is a copy of definitions.xml.zip from <a href=\"http://build.fhir.org\" target=\"_blank\" title=\"http://build.fhir.org\">build.fhir.org</a> and put in the <a href=\"http://version.info\" target=\"_blank\" title=\"http://version.info\">version.info</a> file from STU3 igpack.zip.</p>\n<p>Seems to work, though I'm not sure if it'll affect validator functionality.</p>",
        "id": 153894837,
        "sender_full_name": "Michael Calderero",
        "timestamp": 1498076173
    },
    {
        "content": "<p>You can also use one of the definitions file here: <a href=\"http://build.fhir.org/downloads.html\" target=\"_blank\" title=\"http://build.fhir.org/downloads.html\">http://build.fhir.org/downloads.html</a>  instead</p>",
        "id": 153894842,
        "sender_full_name": "Eric Haas",
        "timestamp": 1498076998
    },
    {
        "content": "<p>Ok, using this fakeigpack.zip, I proceeded to validate the following:<br>\n<a href=\"/user_uploads/10155/5iIFJQRlCuFbRSAC11F7q6yW/PatientProfile_fixedGenderWithExtension.xml\" target=\"_blank\" title=\"PatientProfile_fixedGenderWithExtension.xml\">PatientProfile_fixedGenderWithExtension.xml</a> <br>\n<a href=\"/user_uploads/10155/d8SdUCRPsFmNXxYRk3SE9O74/Patient_fixed_exactlyAsFixedProfile.xml\" target=\"_blank\" title=\"Patient_fixed_exactlyAsFixedProfile.xml\">Patient_fixed_exactlyAsFixedProfile.xml</a> <br>\nPatientProfile_fixedGenderWithExtension.xml is just a copy of the standard Patient profile resource with a &lt;fixedCode&gt; on Patient.gender.<br>\nPatient_fixed_exactlyAsFixedProfile.xml is an instance of the Patient resource with a .gender value that matches the values in .fixed.</p>\n<p>The validator fails with the following:<br>\nC:\\DevTools\\fhirvalidator\\latest&gt;java -jar org.hl7.fhir.validator.jar Patient_fixed_exactlyAsFixedProfile.xml -defn fakeigpack.zip -profile PatientProfile_fixedGenderWithExtension.xml<br>\n  .. load FHIR from fakeigpack.zip<br>\n  .. connect to tx server @ <a href=\"http://tx.fhir.org/r3\" target=\"_blank\" title=\"http://tx.fhir.org/r3\">http://tx.fhir.org/r3</a><br>\n    (v3.0.1-11917)<br>\nFetch Profile from PatientProfile_fixedGenderWithExtension.xml<br>\n  .. validate<br>\nException in thread \"main\" java.lang.NullPointerException<br>\n        at org.hl7.fhir.r4.validation.InstanceValidator.checkFixedValue(InstanceValidator.java:1234)<br>\n        at org.hl7.fhir.r4.validation.InstanceValidator.checkPrimitive(InstanceValidator.java:1375)<br>\n        at org.hl7.fhir.r4.validation.InstanceValidator.validateElement(InstanceValidator.java:3206)<br>\n        at org.hl7.fhir.r4.validation.InstanceValidator.start(InstanceValidator.java:2369)<br>\n        at org.hl7.fhir.r4.validation.InstanceValidator.validateResource(InstanceValidator.java:3450)<br>\n        at org.hl7.fhir.r4.validation.InstanceValidator.validate(InstanceValidator.java:642)<br>\n        at org.hl7.fhir.r4.validation.InstanceValidator.validate(InstanceValidator.java:491)<br>\n        at org.hl7.fhir.r4.validation.ValidationEngine.validate(ValidationEngine.java:555)<br>\n        at org.hl7.fhir.r4.validation.ValidationEngine.validate(ValidationEngine.java:483)<br>\n        at org.hl7.fhir.r4.validation.Validator.main(Validator.java:300)</p>\n<p>I also verified this against HAPI FHIR 2.4 and got the same NullPointerException.</p>\n<p>The code:</p>\n<div class=\"codehilite\"><pre><span></span>        for (Extension e : fixed.getExtension()) {\n          Element ex = getExtensionByUrl(extensions, e.getUrl());\n          if (rule(errors, IssueType.VALUE, focus.line(), focus.col(), path, ex != null, &quot;Extension count mismatch: unable to find extension: &quot; + e.getUrl())) {\n            checkFixedValue(errors, path, ex.getNamedChild(&quot;extension&quot;).getNamedChild(&quot;value&quot;), e.getValue(), &quot;extension.value&quot;, ex.getNamedChild(&quot;extension&quot;));\n          }\n        }\n</pre></div>\n\n\n<p>I traced this and it seems like the NullPointer happens with this: ex.getNamedChild(\"extension\")</p>\n<p>I think it makes sense because 'ex' is already the extension, so there should be no need to call ex.getNamedChild(\"extension\") just to get the actual extension.<br>\nPlease correct me if I'm wrong.</p>",
        "id": 153894850,
        "sender_full_name": "Michael Calderero",
        "timestamp": 1498078829
    }
]