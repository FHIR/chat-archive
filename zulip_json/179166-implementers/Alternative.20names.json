[
    {
        "content": "<p>I'm looking for a way to return different names for a given resource - for example, how would you go about returning a medication's \"short name\" or \"brand name\" in the FHIR medication resource?</p>",
        "id": 154007686,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1539201741
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span></p>",
        "id": 154007687,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1539201745
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191759\">@Melva Peters</span> <span class=\"user-mention\" data-user-id=\"192080\">@John Hatem</span> ?</p>",
        "id": 154007689,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539201782
    },
    {
        "content": "<p>Also, is this use-case for prescribing/dispensing/administering or would MedicationKnowledge be a good fit?</p>",
        "id": 154007690,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539201813
    },
    {
        "content": "<p>My first thought was using CodeSystem/$lookup and check the designation in result</p>",
        "id": 154007693,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1539201881
    },
    {
        "content": "<p>This came up for me regarding meds specifically, but has anyone else had a need for this with other resources? If yes, is there anyway to make the solution generic such that each resource doesn't have to define their own element(s)?</p>",
        "id": 154007694,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1539201887
    },
    {
        "content": "<p>no because each element already defines it's own name, since name is such a slippery concept</p>",
        "id": 154007695,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539201964
    },
    {
        "content": "<p>\"name\" gets handled different ways different places.  We wouldn't want all of the complexity of HumanName on Medication or Organization.  Whether it's in the 80% for something to have multiple names will vary, as will whether it makes sense to have different elements (e.g. name vs. title on things like StructureDefinition) or to have a single element with a code or CodeableConcept that distinguishes intended use can also vary.  My guess at this point is we'd be looking at establishing a pattern and some design rules rather than a custom data type.</p>",
        "id": 154007698,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539202067
    },
    {
        "content": "<p>I think, this is User Interface problem - so potentially you can get medications and make a query to terminology server to get names, then join this on client side. And this question can be reformulated to terminology service - how to get different names?</p>",
        "id": 154007699,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539202101
    },
    {
        "content": "<p>I think that in this case, the different names should be handled in the Medication resource</p>",
        "id": 154007700,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539202147
    },
    {
        "content": "<p>MedicationKnowledge has more.. but we should probably wait for Pharmacy folks to comment...</p>",
        "id": 154007701,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539202200
    },
    {
        "content": "<p>MedicationKnowledge has \"synonym\" as an attribute but Medication doesn't include the ability to include a different name - only the display as part of the CodeableConcept or in Text.  I don't think those are intended to be used for returning a different name (like short name).  I don't know that it is appropriate to add this to Medication - to me it sounds like MedicationKnowledge.  I would suggest that you add a GF Tracker with the use case.</p>",
        "id": 154007764,
        "sender_full_name": "Melva Peters",
        "timestamp": 1539209140
    },
    {
        "content": "<p>look at MedicinalProduct. It supports multiple names, for multiple languages and jurisdictions. This is meant for the multiple \"official\" names of products, but could allow different categories of names potentially.</p>",
        "id": 154007787,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1539209935
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19363\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19363\">GF#19363</a> created</p>",
        "id": 154008045,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1539269824
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191914\">@Danielle Friend</span> can you provide some more information about a) why you want to return multiple names and b) what you mean by a \"short name\" vs a \"brand name\"?  (I've added a followup on the tracker item if you want to comment there)</p>",
        "id": 154015708,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1541444007
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192166\">@Jean Duteau</span> I responded to your gforge comment - this came up more exploratory. I don't have a specific use case so for now that solution makes sense to use medicationknowledge.</p>",
        "id": 154017575,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1542008673
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 154017576,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1542008674
    }
]