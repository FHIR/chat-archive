[
    {
        "content": "<p>From 2.3.0 Resource references \"The corresponding reverse relationship from the target to the source exists in a logical sense, but is not represented explicitly in the target resource.\".. What happens when the logical reverse relationship <em>could</em> be represented in the target resource?</p>\n<p>So in a specific example - if I create a new Specimen resource with a 'request' reference to an existing ProcedureRequest. Then I fetch the ProcedureRequest - should there be a link back to the Specimen now as a reference from the 'specimen' field? This seems to be unlike say the case of where there is a 'subject' relation to a patient. Obviously there is no slot pointing back to the ProcedureRequest from Patient. But what do we do when there is? </p>\n<p>Is this something an implementation could do but wouldn't be expected? Explicitly forbidden?</p>",
        "id": 153903721,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1503664041
    },
    {
        "content": "<p>nothing is forbidden. you can always use an extension. but do you really need to do that? we avoid circular reasons where we can for obvious reaosns</p>",
        "id": 153903742,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1503674379
    },
    {
        "content": "<p>Yes, I wouldn't put in an extension to deliberately create a circular relationship. But in the case of Specimen&lt;-&gt;ProcedureRequest the circularity already exists (unless I've misunderstood the modelling). Specimen has a reference back to the ProcedureRequest, and ProcedureRequest has a list of Specimens. I guess I'm asking to what extent the server would be expected to ensure sanity here. If I add a specimen reference into the ProcedureRequest - but the referenced Specimen points to a unrelated/different ProcedureRequest - is anything in the spec about how I should behave. Allow? Reject the added Specimen? Correct the back link?</p>",
        "id": 153903769,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1503704342
    },
    {
        "content": "<p>The specimen on ProcedureRequest is used when you want to say \"please do this test on these existing specimens\".  The pointer to ProcedureRequest on Specimen is \"this specimen was taken to satisfy this order\".  You should never have a circular situation.</p>",
        "id": 153903773,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1503717317
    },
    {
        "content": "<p>Thanks Lloyd. As the specimens exist and have been processed - <em>before</em> our test (our test is more computation than actual physical testing) - I think the 2nd form is what we will need to use.</p>",
        "id": 153903774,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1503723446
    },
    {
        "content": "<p>So ProcedureRequest points to pre-existing specimen.</p>",
        "id": 153903775,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1503756754
    },
    {
        "content": "<p>In Fact ProcedureRequest and Specimen request are structures so that one can point to the other depending on the workflow.  </p>\n<ul>\n<li>\n<p><a href=\"http://build.fhir.org/specimen-definitions.html#Specimen.request\" target=\"_blank\" title=\"http://build.fhir.org/specimen-definitions.html#Specimen.request\">http://build.fhir.org/specimen-definitions.html#Specimen.request</a></p>\n</li>\n<li>\n<p><a href=\"http://build.fhir.org/procedurerequest-definitions.html#ProcedureRequest.specimen\" target=\"_blank\" title=\"http://build.fhir.org/procedurerequest-definitions.html#ProcedureRequest.specimen\">http://build.fhir.org/procedurerequest-definitions.html#ProcedureRequest.specimen</a></p>\n</li>\n</ul>\n<p>We explain the different workflow in the comments.  If you feel this is inadequate feel free to submit a tracker with a suggested update to the guidance.</p>",
        "id": 153903862,
        "sender_full_name": "Eric Haas",
        "timestamp": 1503935408
    },
    {
        "content": "<p>Thanks Eric. I think we're a bit of a weird edge case at the moment, so both can somewhat apply to our workflow. If I can come up with any language clarifications I will put in a tracker.</p>",
        "id": 153903902,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1503960915
    }
]