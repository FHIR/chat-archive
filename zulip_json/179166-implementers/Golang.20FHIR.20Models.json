[
    {
        "content": "<p>I'm looking for a golang library which gives me structs for each resource and enums for each valueset. I found <a href=\"https://github.com/google/fhir\" target=\"_blank\" title=\"https://github.com/google/fhir\">google/fhir</a> which implements protobufs for all FHIR resources but brings the parsers/printers and models only for Java and C++. I found <a href=\"https://github.com/intervention-engine/fhir-golang-generator\" target=\"_blank\" title=\"https://github.com/intervention-engine/fhir-golang-generator\">intervention-engine/fhir-golang-generator</a> which looks outdated. <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> Do you have any news on this?</p>",
        "id": 182100663,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1574940087
    },
    {
        "content": "<p>We have a golang implementation inside Google that will eventually be added to the google/fhir repo as a 3rd language option. Not sure when that will happen though, there are some inconsistencies vs. the C++ implementation that need to be resolved.</p>",
        "id": 182117816,
        "sender_full_name": "Paul Church",
        "timestamp": 1574955343
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197072\">@Paul Church</span> That sounds good. It will include structs which work with json.Unmarshal/json.Marshal?</p>",
        "id": 182274564,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1575186797
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"197470\">@Alexander Kiel</span> -- we developed the <code>fhir-golang-generator</code> for our Intervention Engine research project which is no longer under active development.  You can see the resulting <a href=\"https://github.com/intervention-engine/fhir/tree/master/models\" target=\"_blank\" title=\"https://github.com/intervention-engine/fhir/tree/master/models\">models</a> in our (also defunct) FHIR Server.  The FHIR server was <a href=\"https://github.com/eug48/fhir\" target=\"_blank\" title=\"https://github.com/eug48/fhir\">forked</a> by <span class=\"user-mention\" data-user-id=\"192669\">@Eugene Lubarsky</span> -- but I think he took a different approach to handling the models (see <a href=\"https://github.com/eug48/fhir/tree/master/models2\" target=\"_blank\" title=\"https://github.com/eug48/fhir/tree/master/models2\">models2</a>).</p>\n<p>The <code>fhir-golang-generator</code> was based on the approach of generating models as part of the Java build process.  I don't know if that approach is still supported or encouraged; if I were to do it again today, I'd just generate from the StructureDefinitions.  If it <em>is</em> supported, you might be able to rebase the code on the newer FHIR source, but I expect a <em>lot</em> has changed; so I kind of doubt it would work well...  That said, I don't think we did anything super complex for the models -- so it might not be <em>too</em> hard to just do something simple like that based on the StructureDefinitions...</p>",
        "id": 182308363,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1575248854
    },
    {
        "content": "<p>Just saw <span class=\"user-mention\" data-user-id=\"197072\">@Paul Church</span>'s reply.  If Google will be releasing that soon(ish), then it certainly seems worth the wait!</p>",
        "id": 182308405,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1575248908
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197470\">@Alexander Kiel</span>  The structs are just the protobuf definitions - Marshal(proto.Message) returns []byte, Unmarshal([]byte) returns proto.Message. All of the resources and valueset enums are produced by the proto compiler - you could get those today with a bazel target.</p>",
        "id": 182358337,
        "sender_full_name": "Paul Church",
        "timestamp": 1575301731
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197072\">@Paul Church</span> Meanwhile, I have written a generator which generates structs like for <a href=\"https://github.com/samply/golang-fhir-models/blob/master/fhir-models/fhir/patient.go\" target=\"_blank\" title=\"https://github.com/samply/golang-fhir-models/blob/master/fhir-models/fhir/patient.go\">Patient</a>. The generator can be found in the same repo.</p>\n<p>Are the protobuf definitions different? Sorry I haven't worked with protobuf before. Apart of my implementation, I would rather use official models but I need JSON serialization.</p>",
        "id": 182359015,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1575302113
    },
    {
        "content": "<p>The protobuf compiler for each language generates a set of structs / classes / other language appropriate constructs, given the protobuf definitions. So the published protos by themselves are usable as a FHIR data model in plenty of languages - but serializing to/from interoperable FHIR JSON is the gap filled by the parser. Without that, the data model is of limited use. You could use protobuf serialization to bridge over to C++ or Java and then use the JSON parsers we released for those languages, but that's a roundabout way of getting somewhere.</p>",
        "id": 182361841,
        "sender_full_name": "Paul Church",
        "timestamp": 1575303721
    },
    {
        "content": "<p>Ok I understand. Is a native Go JSON parser planned?</p>",
        "id": 182366715,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1575306689
    },
    {
        "content": "<p>Yes, that's what's in implementation I mentioned - a golang JSON parser/serializer and some associated support code.</p>",
        "id": 182367305,
        "sender_full_name": "Paul Church",
        "timestamp": 1575307072
    },
    {
        "content": "<p>Ok thanks. I'll wait until it becomes available.</p>",
        "id": 182367568,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1575307214
    },
    {
        "content": "<p>Hi. Iâ€™m just expressing interest in the Go and Python parsers for google/fhir and curious if any folks in the community would share an update.</p>",
        "id": 196113350,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1588526441
    },
    {
        "content": "<p>We have a golang implementation of the parser inside Google that will likely be open sourced at some point. Haven't heard anything about python.</p>",
        "id": 196127500,
        "sender_full_name": "Paul Church",
        "timestamp": 1588546914
    }
]