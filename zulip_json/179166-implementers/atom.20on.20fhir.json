[
    {
        "content": "<p>has anybody created any fhir tools on atom like grahame's notepad++ stuff?</p>",
        "id": 153864130,
        "sender_full_name": "Eric Haas",
        "timestamp": 1482196456
    },
    {
        "content": "<p>Not yet, but I know how to.  I created the <code>meteor-api</code> package back in the day that had the Meteor API (with the Blaze/Backbone UI layer), so I know how to make code-snippets, syntax highlighting, context menus, launch external commands, etc.  What kind of utilities are you thinking of?</p>",
        "id": 153864147,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1482201726
    },
    {
        "content": "<p>Oh the usual, validate instances, convert between json and xml,  narrative generator with built in support for the markdown elements....</p>",
        "id": 153864159,
        "sender_full_name": "Eric Haas",
        "timestamp": 1482207400
    },
    {
        "content": "<p>Took me a few re-reads to realise you were talking about Atom the text editor and not Atom the DSTU1 bundle format... and I use Atom the text editor every day. Sheesh. :)</p>\n<p>This would be sweet if someone had the capacity, that's for sure.</p>",
        "id": 153864277,
        "sender_full_name": "James Agnew",
        "timestamp": 1482244456
    },
    {
        "content": "<p>my experience with notepad++ tells me that it's a lot of work; you need an especially strong meta layer in the object implementation you're using</p>",
        "id": 153864345,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1482264729
    },
    {
        "content": "<p>I'm not sure if that meta layer entirely exists yet; but the good news is that Atom is built on Chrome and is isomorphic to the rest of the Meteor stack.  Javascript on the server, client, database, testing, and...  development environment. </p>\n<p>Unfortunately, Atom has traditionally been written in Coffeescript,  and Meteor has already moved to ES6 and React, which has made sharing libraries between the two difficult.  But it appears that there have been some successful attempts to write Atom packages in ES6.  If that becomes standard, it will become a lot easier to import/export modules; and we should be able to merge Meteor on FHIR and Atom into a complete FHIR based IDE.  </p>\n<p>Right now, the best way I can think of doing schema validations would be to use one of the Atom DDP plugins to query the Meteor on FHIR interface engine; and have Meteor on FHIR do the validation.   </p>\n<p>Converting between JSON and XML isn't fundamentally difficult; but how useful is the XML support, really?  An Atom based IDE would necessarily be isomorphic across the V8 engine, meaning Atom/Chrome/Mongo, meaning a JSON infrastructure.  </p>\n<p>What do you mean by narrative generator?</p>",
        "id": 153864410,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1482267999
    },
    {
        "content": "<p>XML suppor is fundamental. As many people (including myself) prefer to read/write XML instad of json.</p>",
        "id": 153864756,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1482410092
    },
    {
        "content": "<p>Well....  how about this...  I will be happy to create some Atom plugins for FHIR, but am only going to commit to doing the JSON portion; and will accept pull-requests from anybody who wants to do the XML portion.  ;)</p>",
        "id": 153864982,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1482815160
    }
]