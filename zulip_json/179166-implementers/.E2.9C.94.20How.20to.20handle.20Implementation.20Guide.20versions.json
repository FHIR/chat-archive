[
    {
        "content": "<p>What is the best practice for a FHIR server to handle updating IG's? For instance, if a server implemented a version of an IG, but then a new version of the IG is released, then validation issues with the resources can arise where the server is still implementing the previous version of the IG. My current approach is to specifically reference the IG version in the profile url, code system, capability statement, etc. and then update the server to be valid for the new version when ready.</p>\n<p>So is this a valid approach? <br>\nFor instance, in the meta data for the profile for a carin BB patient url being this:<br>\n<a href=\"http://hl7.org/fhir/us/carin-bb/StructureDefinition/C4BB-Patient\">http://hl7.org/fhir/us/carin-bb/StructureDefinition/C4BB-Patient</a><br>\nit would become this (if the server is specifically implementing version stu 1 and not the latest):<br>\n<a href=\"http://hl7.org/fhir/us/carin-bb/STU1/StructureDefinition/C4BB-Patient\">http://hl7.org/fhir/us/carin-bb/STU1/StructureDefinition/C4BB-Patient</a></p>\n<p>This throws many issues with the FHIR validator, but I don't know if that's my misuse of the specification or a bug with the validator.</p>\n<p><a href=\"https://confluence.hl7.org/display/FHIR/Using+the+FHIR+Validator\">https://confluence.hl7.org/display/FHIR/Using+the+FHIR+Validator</a></p>",
        "id": 245718782,
        "sender_full_name": "Ryan Conley",
        "timestamp": 1626110762
    },
    {
        "content": "<p>I'd use the value specified by the profile, not what the webpage url happens to be.<br>\n.... Slices for profile Σ   1..*    canonical(StructureDefinition)  Profiles this resource claims to conform to<br>\nSlice: Unordered, Open by pattern:$this<br>\n..... profile:supportedProfile  Σ   1..1    canonical(StructureDefinition)  Profiles this resource claims to conform to</p>\n<p>Required Pattern: <a href=\"http://hl7.org/fhir/us/carin-bb/StructureDefinition/C4BB-Patient|1.1.0\">http://hl7.org/fhir/us/carin-bb/StructureDefinition/C4BB-Patient|1.1.0</a></p>\n<p>In theory, your resource could comply with both 1.1.0 and 1.0.0 so you could have both values in the meta.profile[]<br>\n<a href=\"http://hl7.org/fhir/us/carin-bb/StructureDefinition/C4BB-Patient|1.1.0\">http://hl7.org/fhir/us/carin-bb/StructureDefinition/C4BB-Patient|1.1.0</a><br>\n<a href=\"http://hl7.org/fhir/us/carin-bb/StructureDefinition/C4BB-Patient\">http://hl7.org/fhir/us/carin-bb/StructureDefinition/C4BB-Patient</a></p>",
        "id": 245725531,
        "sender_full_name": "Daniel Venton",
        "timestamp": 1626113732
    },
    {
        "content": "<p>Thank you, I should have mentioned I was thinking of this as well, as this is the documented way to specify a canonical version. The validator still doesn't like it, but I think your answer is correct.</p>",
        "id": 245727307,
        "sender_full_name": "Ryan Conley",
        "timestamp": 1626114697
    },
    {
        "content": "<p>In general, unless a server <em>must</em> know what profile you're claiming validity against, you shouldn't expect profile declarations in instances at all.  Forcing profile declarations means that a system that's otherwise conformant must now revise (and forever maintain) its code declaring validity against a specific profile (or worse, multiple specific profile versions).  Best practice is for servers to receive an instance and check validity against the set of profiles it knows how to consume in descending order of preference and then yell if the instance can't satisfy anything.  That makes many IG changes completely transparent from an implementer perspective.  If there are breaking changes, the client can be encouraged to conform by some specific date, but they don't have to declare that conformance in the instance.</p>\n<p>The situation when you're justified in mandating profile declaration is when the set of possible profiles is quite large, and the cost of validating against all of them is also large, and the profile must be identified in order to know how to process the instance (i.e. you need to know what set of constraints you can count on the instance adhering to in order to decide what code pat to follow.  In those cases, imposing a cost on all of the client systems (which presumably know what they're compliant with) is the only viable way to make the system as a whole function.</p>",
        "id": 245750783,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1626124418
    },
    {
        "content": "<p>So then what are you saying as to how an implementing server should handle an IG update? In the CARIN BB IG for example, specifying the profile is a must, so are you saying that is poor design? Is there any documentation about what is best practice on this subject? If an IG updates and the server is using a non-versioned canonical url to declare its implementations, then that is a guaranteed point of failure where the implementing server will be returning invalid resources at the point where the new IG version is published and the server has not yet implemented the new version.</p>",
        "id": 245832989,
        "sender_full_name": "Ryan Conley",
        "timestamp": 1626186600
    },
    {
        "content": "<p>I'm saying it's questionable design, yes.  If it's required, then you need to do what the IG says.  If the IG says send the profile declaration in a version-independent way, then do that.  If they say do it in a version-specific way, then do that.  However, it'll definitely impose a cost on implementers.</p>\n<p>When an IG produces a new version, that doesn't mean that implementers must change to the new version immediately - or even ever.  If and when migration occurs will depend on external factors - regulation, value of the new version, organizational agreement, etc.</p>",
        "id": 245834924,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1626187404
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330977\">Ryan Conley</span> has marked this topic as resolved.</p>",
        "id": 245841952,
        "sender_full_name": "Notification Bot",
        "timestamp": 1626189967
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"330977\">Ryan Conley</span> has marked this topic as resolved.</p>",
        "id": 245841953,
        "sender_full_name": "Notification Bot",
        "timestamp": 1626189969
    }
]