[
    {
        "content": "<p>When you schema validate a FHIR XML instance with something like below (STU3), an error is triggered because string-primitive has length &gt; 0. This does not happen in online validation like on Simplifier. Schema bug or .Net validator bug?</p>\n<div class=\"codehilite\"><pre><span></span>&lt;identifier&gt;\n    &lt;system value=&quot;http://example.org/careprovider&quot;/&gt;\n    &lt;value value=&quot;&quot;/&gt;\n&lt;/identifier&gt;\n</pre></div>",
        "id": 154025629,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1544788583
    },
    {
        "content": "<p>This is correct behaviour.<br>\nThe others are more permissive, the new Parser and validator are more strict.</p>",
        "id": 154025632,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1544790955
    },
    {
        "content": "<p>I remember there is an validator option to skip this.</p>",
        "id": 154025655,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1544802266
    },
    {
        "content": "<p>that is not valid; there should not be a validator option to skip that, but there might be a parser option to allow it</p>",
        "id": 154025701,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1544818672
    },
    {
        "content": "<blockquote>\n<p>When you schema validate a FHIR XML instance with something like below (STU3), an error is triggered because string-primitive has length &gt; 0. This does not happen in online validation like on Simplifier. Schema bug or .Net validator bug?</p>\n<div class=\"codehilite\"><pre><span></span>&lt;identifier&gt;\n    &lt;system value=&quot;http://example.org/careprovider&quot;/&gt;\n    &lt;value value=&quot;&quot;/&gt;\n&lt;/identifier&gt;\n</pre></div>\n\n\n</blockquote>\n<p>The .NET parser &lt; version 1.0 allowed this, the new ones catch this.  Simplifier has not yet been updated.  And indeed, the behaviour is configurable in the settings to the parser.</p>",
        "id": 154026049,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1545126641
    },
    {
        "content": "<p>The validator should always catch it, not sure about the parser by default.</p>",
        "id": 154026071,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1545133012
    },
    {
        "content": "<p>The validator does indeed catch this, indeed, already before 1.0.   The parsers did not.</p>",
        "id": 154026126,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1545153443
    }
]