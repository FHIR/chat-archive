[
    {
        "content": "<p>Grahame and I have been having a fun chat.  We've been discussing two questions and they're slightly intertwined, so I'll list them both:<br>\n1. When you have \"generated\" or \"extension\" narrative, is the expectation that the narrative includes only content that can be acquired by performing a transformation on the data that's present within the discrete content of that instance (core elements only or core + extensions, respectively), or is it legitimate to resolve references to other resources and include content from the discrete elements of referenced resources as well?</p>\n<p>2. Is it good practice to say that when you have a \"reference\" type, the \"display\" element should always be populated to give the system something to display without having to do an _include on the referenced resource or should we expect software to pretty much always do the _include so there's no risk of the text displayed not exactly matching the current version of the resource referenced.  (E.g. If the MedicationOrder.prescriber.display said \"Dr. Jane Smith\" and the practitioner now said \"Dr. Jane Jones\", implementers would feel a need to back-propagate the name change into all reference.displays and, as a result would rather the displays weren't populated at all.</p>\n<p>The overlap is that if there are no reference.display elements, you sort of have to resolve the reference in order to include essential context such as the name of the patient, name of the practitioner, name of the medication, etc.  If \"display\" can be expected to be present, then drawing on external elements might not be necessary, though there's then a question of just how much should be in narrative.  Do you need just a light \"link-style\" reference (e.g. a name) or do you need a full description (e.g. name, gender, data of birth, mrn for a patient; name, gender, discipline, license number for a practitioner; etc.)?</p>\n<p>We have rather differing opinions on the answers to these questions, so it seemed wise to let the implementer community weigh in :)</p>",
        "id": 153815994,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1458186880
    },
    {
        "content": "<p>I personally think that this should just be the real short stuff, so for a person would expect it to just be the name. (what I would expect to see on the button/link that I would click). (Postlethwaite, Brian Mr)</p>",
        "id": 153815998,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458187670
    },
    {
        "content": "<p>Maybe could be talked into including the MRN, but that is quite contextual also, which/whos MRN?</p>",
        "id": 153815999,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458187711
    },
    {
        "content": "<p>Putting something like DOB/phone number or other information in there could increase the chance of leaking information that could be restricted information to some users.</p>",
        "id": 153816000,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458187764
    },
    {
        "content": "<p>I agree it's the short stuff - it's a 'teaser' (you wanna see more punk? resolve the reference then...)</p>",
        "id": 153816002,
        "sender_full_name": "David Hay",
        "timestamp": 1458188219
    },
    {
        "content": "<p>if performing a patient selection for example, it would be what you'd put in the result list, that's enough for the user to recognize the one they were after (most of the time)</p>",
        "id": 153816003,
        "sender_full_name": "David Hay",
        "timestamp": 1458188338
    },
    {
        "content": "<p>I personally have thought that it should be the 3 points of information to identify the patient. if you are de-identifying, then you have to scrub the narrative anywway</p>",
        "id": 153816005,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458189464
    },
    {
        "content": "<p>I noticed that I only responded regarding the Display on ResourceReference, not the Narrative issue.<br>\nMy understanding of the Narrative was that if it was Generated then there should be no information in it that can't be created by some transform on the content within.<br>\n<a href=\"http://hl7-fhir.github.io/codesystem-narrative-status.html#generated\" target=\"_blank\" title=\"http://hl7-fhir.github.io/codesystem-narrative-status.html#generated\">http://hl7-fhir.github.io/codesystem-narrative-status.html#generated</a><br>\nDefines it pretty clearly. Not really sure why we would have empty here, isn't that where you just don't inlcude a narrative at all?</p>",
        "id": 153816006,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458189672
    },
    {
        "content": "<p>I've never read it that way - I've always felt free to follow the references and include some additional describing information - to me thats still 'generated from the structured data in the content'</p>",
        "id": 153816007,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458189759
    },
    {
        "content": "<p>Hadn't noticed the difference on extensions, and generated. Do we really need that?</p>",
        "id": 153816008,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458190017
    },
    {
        "content": "<p>need what? </p>",
        "id": 153816009,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458190592
    },
    {
        "content": "<p>need to have both generated and generated (from core and extensions)</p>",
        "id": 153816010,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458190638
    },
    {
        "content": "<p>Does the \"extended\" generated narrative imply that it's not safe to regenerate if you don't know about the extensions?</p>",
        "id": 153816011,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458190684
    },
    {
        "content": "<p>I think so - you know whether the extensions contributed to the narrative, so whether the narrative contains something you don't know if there's extensions you don't know presnet</p>",
        "id": 153816012,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458190708
    },
    {
        "content": "<p>ok, Just doesn't say which extensions.</p>",
        "id": 153816013,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458190898
    },
    {
        "content": "<p>no. that's true. you have to guess at that</p>",
        "id": 153816014,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458190919
    },
    {
        "content": "<p>And my thoughts were that most content will have extensions in it, so knowing this part is likely to be interesting.</p>",
        "id": 153816015,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458190967
    },
    {
        "content": "<p>and how would you suggest to do that?</p>",
        "id": 153816016,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458191180
    },
    {
        "content": "<p>I don't have any suggestions on how you could do that.<br>\n(Have been considering using fhirpath to generate narratives though - not sure if that would be a good idea or not - store it as an extension in the structure definition for the resource)</p>",
        "id": 153816017,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458191518
    },
    {
        "content": "<p>man. invent a good hammer....</p>",
        "id": 153816018,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458191541
    },
    {
        "content": "<p>man. invent a good hammer....</p>",
        "id": 153816019,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458191542
    },
    {
        "content": "<p>(No kidding!)</p>",
        "id": 153816020,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458191574
    },
    {
        "content": "<p>Would get peoples attention as to what you can do with it though.</p>",
        "id": 153816021,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458191606
    },
    {
        "content": "<p>and if it's a *really* good hammer...</p>",
        "id": 153816038,
        "sender_full_name": "David Hay",
        "timestamp": 1458196250
    },
    {
        "content": "<p>We are having similar considerations at the moment. </p>\n<p>Consider a Composition resource that has 5 sections each with the it's own Composition.Section.Text content. The resource then has the overarching Composition.Text content which would then duplicate that content (and yes, potentially add more from other elements within the resource) - it looks a bit excessive.</p>",
        "id": 153816043,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1458203920
    },
    {
        "content": "<p>I'd expect that a resource's narrative just has that resource's data in the narrative, and not referenced resource's data. Especially, since this data (the data in the referred resource) may have been changed without the first resource (that has the narrative) knowing it.</p>",
        "id": 153816050,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1458208589
    },
    {
        "content": "<p>Also, you cannot say a reference SHOULD have the display text. The reference might have been passed in from another context (say a patient selection part of the app), and you'd need to pass around the reference + the display. I just don't think people will do that. </p>",
        "id": 153816051,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1458208716
    },
    {
        "content": "<p>we inlined the narrative into Section.text precisely because we expected that the narrative in a document would be extremely context aware, where as the narrative in a restful sense is not context sensitive</p>",
        "id": 153816063,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458212009
    },
    {
        "content": "<p>Lloyd proposes a half way house that's nearly ok for both, but the SD community didn't have any faith in that operationally </p>",
        "id": 153816064,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458212034
    },
    {
        "content": "<p>My understanding of \"generated\" vs. \"extensions\" vs. \"additional\" is that, absent a site-specific agreement and excluding the document scenario, how do you figure out whether you need to make the narrative available to the user.  If it says \"generated\" that means the narrative was automatically generated from discrete core elements in the instance.  If you're already displaying all core elements, then the narrative won't have anything new/different and you don't have to show it.  You could easily have an instance that contains extensions but where the narrative is still drawn only from \"core\" elements.  If it says \"extensions\", then at least some of the extensions have also made their way into the narrative.  If you don't know how to render *all* of the extensions in the instance, then there's a possibility the narrative contains something new and you should probably expose it.  I think having to list exactly what elements (core or extension) are in the narrative is overkill.  (And if you really want to, define an extension :&gt;)</p>",
        "id": 153816076,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1458215692
    },
    {
        "content": "<p>Would anyone feel a need to back-propagate changes to name or other information to reference.display?</p>",
        "id": 153816077,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1458215727
    },
    {
        "content": "<p>I agree with Evout on this one. Narrative should not be expected to (but may) include referenced data. I feel the same way about display text. References may not be resolvable, either due to client permissions, or other issues. Also, if the referenced resource changes, the display text would be out of sync.</p>",
        "id": 153816086,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1458218162
    },
    {
        "content": "<p>Is it an issue if the reference.display isn't the same as the equivalent information in the referenced resource due to an update?  E.g. If the practitioner gets married or has a name correction, is it a problem if the \"display\" elements of numerous resources still have the old name?</p>",
        "id": 153816089,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1458218893
    },
    {
        "content": "<p>Yes, I would consider that an issue. The name change example may not be Earth shattering if they get out of sync. I'm just saying I don't think display text should be a SHALL.</p>",
        "id": 153816096,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1458221341
    },
    {
        "content": "<p>For analogy, with an HTML <code>&lt;a&gt;</code> link I give a description of the link, but I don't have to -- the link can just be a URL.</p>",
        "id": 153816097,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1458221471
    },
    {
        "content": "<p>Agree it shouldn't be a SHALL.  The question is whether it's a \"SHOULD\" - and whether we perhaps want to treat it as a quality criteria in the examples we generate.</p>",
        "id": 153816099,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1458224151
    },
    {
        "content": "<p>+1 ewout and I always kind of assume you would generate the display elements if they are there, so I'm surprised after rereading the spec there is no mention of this.  The display elements are there for human eye in the first place  so this makes sense to add guidance.   Is there any utility in adding a code \"generated-plus\" to indicate that there is _include data rendered as well? </p>",
        "id": 153816120,
        "sender_full_name": "Eric Haas",
        "timestamp": 1458229050
    }
]