[
    {
        "content": "<p>Hello Folks, I’m trying to understand the fhir rest api and wanted to find a Patient by a phone number. But It just doesn’t want to work. Can somebody please make an example for an GET query by phone number with a substring of a complete phone number.<br>\nThanks</p>",
        "id": 198115916,
        "sender_full_name": "Alexey Elimport",
        "timestamp": 1589916979
    },
    {
        "content": "<p>.../Patient?phone=5556667878</p>",
        "id": 198116049,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1589917061
    },
    {
        "content": "<p>I tried that one, but it give me all the example patients</p>",
        "id": 198116252,
        "sender_full_name": "Alexey Elimport",
        "timestamp": 1589917155
    },
    {
        "content": "<p>I have the popular James Chalmers with this entry <br>\n&lt;telecom&gt;<br>\n        &lt;system value=\"phone\"/&gt;<br>\n        &lt;value value=\"(03) 5555 6473\"/&gt;<br>\n        &lt;use value=\"work\"/&gt;<br>\n        &lt;rank value=\"1\"/&gt;<br>\n &lt;/telecom&gt;</p>",
        "id": 198116619,
        "sender_full_name": "Alexey Elimport",
        "timestamp": 1589917357
    },
    {
        "content": "<p>and if I Make [GET]/Patient?phone=(03) 5555 6473 <br>\nserver gives me all the test patients</p>",
        "id": 198116847,
        "sender_full_name": "Alexey Elimport",
        "timestamp": 1589917465
    },
    {
        "content": "<p>you should check with your server to see if it supports the phone search parameter then.  because that is how to do the query.</p>",
        "id": 198117636,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1589917857
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"192166\">@Jean Duteau</span> . I'm using Mirth example fhir channel (if it say you smth) and the query for this parameter was not implemented what I did now and it works now.<br>\nOne last question: If I want to find Patient by a phone number of a contact, how would the query look like? I still don't understand how the structure looks like by this nested parameters</p>",
        "id": 198120479,
        "sender_full_name": "Alexey Elimport",
        "timestamp": 1589919256
    },
    {
        "content": "<p>.../Patient/contact.phone=5555555555</p>\n<p>if that is supported by your server.</p>",
        "id": 198121291,
        "sender_full_name": "Nathan Hall",
        "timestamp": 1589919662
    },
    {
        "content": "<p>Unfortunately, no <span aria-label=\"rolling eyes\" class=\"emoji emoji-1f644\" role=\"img\" title=\"rolling eyes\">:rolling_eyes:</span></p>",
        "id": 198123178,
        "sender_full_name": "Alexey Elimport",
        "timestamp": 1589920584
    },
    {
        "content": "<p>phone is defined as a 'token' search - that means it's going to look for an exact match (whitespace, punctuation, everything)</p>",
        "id": 198126515,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1589922330
    },
    {
        "content": "<p>Isn't that going to be an annoyance for many many implementations? (phone as token)</p>",
        "id": 198156616,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1589953146
    },
    {
        "content": "<p>It might well be.  We could define custom behavior for the search parameter to strip punctuation and white-space, but I suspect some are still going to want the starts-with or contains ability of a 'text' search parameter.  <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> ?</p>",
        "id": 198211843,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1589987204
    },
    {
        "content": "<p>From a behaviour perspective, I think this is another of the special cases where the server should probably be expected to handle this more specifically than just a string exact matching.<br>\nIt would probably be desirable to \"normalize\" the indexed content and do the same normalization on the searched text.<br>\nIn this way the imposition of formatting doesn't need to be negotiated with the server.<br>\n(all this being said, I haven't done this on our server)</p>",
        "id": 198254703,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1590007365
    },
    {
        "content": "<p>If that's the case, shouldn't the search parameter make that expectation explicit?</p>",
        "id": 198266774,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1590014691
    },
    {
        "content": "<p>yes we could make it clear that this is allowed/encouraged (though not expected or required)</p>",
        "id": 198283341,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1590032546
    },
    {
        "content": "<p>I'm trying to understand why we'd want to have/allow variability in behavior here...</p>",
        "id": 198284264,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1590033787
    },
    {
        "content": "<p>because systems already have deeply ingrained behaviour around this, and it's highly variable across jurisdictions</p>",
        "id": 198308097,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1590058487
    }
]