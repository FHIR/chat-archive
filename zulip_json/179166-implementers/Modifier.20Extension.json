[
    {
        "content": "<p>Hello,</p>\n<p>I am trying to capture a scenario in FHIR where we have to identify and flag some information which mihgt be erroneous. Example - A female patient with a test for prostate. In such a case I was thinking of using the option of 'Modifier Extension' to enrich the incoming resource and persist it accordingly. Is it the correct approach?</p>\n<p>Thanks !</p>",
        "id": 192867251,
        "sender_full_name": "Tushar Nair",
        "timestamp": 1585950010
    },
    {
        "content": "<p>you would add a modifierExtension to the resource that you received?  that would be a no-no.  a) the sender would expect to get back the same thing he sent in if he subsequently requested it; b) modifierExtension says that you are modifying the interpretation of the resource.  If you wanted to do this, I could see you adding a tag in the Resource.meta.<br>\nBut even then I'm not sure I agree with that.  See what others have to say...</p>",
        "id": 192867786,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1585950394
    },
    {
        "content": "<p>I think it makes a big difference whether you are the primary holder of the record, or a secondary consumer. Request for correction is a topic over on <a class=\"stream\" data-stream-id=\"179262\" href=\"/#narrow/stream/179262-patient-empowerment\">#patient empowerment</a></p>",
        "id": 192874640,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585955481
    },
    {
        "content": "<p>\"might be erroneous\" isn't a modifier.  Known to be erroneous is usually a status (and status is a modifier specifically <em>because</em> it allows 'entered-in-error').  I would go with a regular extension if you're just updating your own record.  If you're asking someone to fix a record you believe is wrong, that would be Task.</p>",
        "id": 192877852,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1585958288
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179166-implementers/topic/Modifier.20Extension/near/192877852\" title=\"#narrow/stream/179166-implementers/topic/Modifier.20Extension/near/192877852\">said</a>:</p>\n<blockquote>\n<p>\"might be erroneous\" isn't a modifier.  Known to be erroneous is usually a status (and status is a modifier specifically <em>because</em> it allows 'entered-in-error').  I would go with a regular extension if you're just updating your own record.  If you're asking someone to fix a record you believe is wrong, that would be Task.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> , We are not the owner, we are consuming the resource in our server. In such a scenario- can we store the resource as received as versionid=1 and the source in the meta shall be whatever we received originally. Then we can edit the resource where we use 'entered-in-error' value in the status, versionId-2, source in meta can be marked as 'Our System' instead of what we had in versionId-1. Does that make sense?</p>",
        "id": 192879904,
        "sender_full_name": "Tushar Nair",
        "timestamp": 1585960657
    },
    {
        "content": "<p>You can.  In fact, you can choose to make the transformation before you persist anything - there's no requirement to store data \"as received\", though in some data sharing models, clients will get peeved if you don't.  Is your intention to say definitively \"this is definitely an error\" or \"this might be an error\"?  \"status=entered-in-error\" is appropriate for the former, but not the latter.  In your example, a prostate exam against a patient with a gender=F is not necessarily an error - there are lots of clinical/social circumstances where that could be completely accurate, so presumably what you'd want is a flag to say 'suspect' and have a human verify if/when they get the chance.</p>",
        "id": 192885346,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1585967981
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179166-implementers/topic/Modifier.20Extension/near/192885346\" title=\"#narrow/stream/179166-implementers/topic/Modifier.20Extension/near/192885346\">said</a>:</p>\n<blockquote>\n<p>You can.  In fact, you can choose to make the transformation before you persist anything - there's no requirement to store data \"as received\", though in some data sharing models, clients will get peeved if you don't.  Is your intention to say definitively \"this is definitely an error\" or \"this might be an error\"?  \"status=entered-in-error\" is appropriate for the former, but not the latter.  In your example, a prostate exam against a patient with a gender=F is not necessarily an error - there are lots of clinical/social circumstances where that could be completely accurate, so presumably what you'd want is a flag to say 'suspect' and have a human verify if/when they get the chance.</p>\n</blockquote>\n<p>Thank you so much <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> , this really helps.</p>",
        "id": 193065434,
        "sender_full_name": "Tushar Nair",
        "timestamp": 1586189859
    },
    {
        "content": "<p>As the lead of the <a href=\"http://hl7.me/GHP\" title=\"http://hl7.me/GHP\">Gender Harmoney</a> project, I am compelled to comment on your example use case where a gender/sex and test mismatch can likely occur because of the lousy way system current capture the complexity of sex and gender identity. Dragons lie here and some patients with a \"sex\" of F may indeed need prostate exams.</p>",
        "id": 193211042,
        "sender_full_name": "Robert McClure",
        "timestamp": 1586275663
    },
    {
        "content": "<p>My question is very basic about ModifierExtensions. Can someone give a practical example on how to use it ? I went through FHIR documentation, and didn't get a clear picture on differences between normal Extensions and ModifierExtensions. </p>\n<p>I came across this, when going through StructureDefinition XMLs created from Forge tool (v24.2 for R4) there was a ModifierExtension added in all cases whenever extensions were present. This scenario I have asked separately from Firely. (I'm not sure if this is due to a way we had created profiles or an error.) Thanks !</p>",
        "id": 206592728,
        "sender_full_name": "Janaka Peiris",
        "timestamp": 1597161300
    },
    {
        "content": "<p>As the name already indicates, ModifierExtensions modify the meaning of the resource (the standard 80% data elements as contained in the core spec). My favorite example, which we use in the Firely FHIR training courses, is the anti-prescription. If the anti-prescription ModifierExtension is present, the meaning of a MedicationRequest resource (a prescription) is turned on its head: DO NEVER prescribe medication X. That's quite different from \"Prescribe medication X\". Hence the statement that ModifierExtensions cant ever be ignored, if there is an unknown one in a resource (and one has to check if there's one!) then you need some error handling to deal with it. <br>\nThere are only a few implementations in production use that use ModifierExtension. You really have to know what you're doing. Dragons beware.</p>",
        "id": 206602145,
        "sender_full_name": "René Spronk",
        "timestamp": 1597165827
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191372\">@René Spronk</span>  this explains it clearly.</p>",
        "id": 206621591,
        "sender_full_name": "Janaka Peiris",
        "timestamp": 1597174928
    }
]