[
    {
        "content": "<p>Currently we are implementing a feature where patients get questionnaires which they have to fill in. We plan to use communication request for this purpose. Our plan is to implement a Bundle containing the request, the questionnaire and the patients information. <br>\nBundle{<br>\nCommunicationRequest,<br>\nQuestionnaire,<br>\nPatient<br>\n}<br>\nIs this an adequate way? What do you think? <br>\nShould the type of the bundle be \"message\" or \"collection\"?</p>",
        "id": 153966062,
        "sender_full_name": "Martin Benedict",
        "timestamp": 1527770203
    },
    {
        "content": "<p>The resource to request completion of a Questionnaire is ServiceRequest.  CommunicationRequest is used to ask for information to be disclosed, but not for new information to be collected.</p>",
        "id": 153966064,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1527771411
    },
    {
        "content": "<p>Thank you. Is the way to bundle the ServiceRequest with the questionnaire the right way? How should I reference the questionnaire in the service request? In CommunicationRequest I had planned to use the payload to transport the questionnaire to be filled. In ServiceRequest I can not see such possibility.</p>",
        "id": 153966068,
        "sender_full_name": "Martin Benedict",
        "timestamp": 1527772749
    },
    {
        "content": "<p>ServiceRequest.definition would point to the Questionnaire.  Another option would be to use Task, in which case the Questionnaire would be pointed to by one of the inputs.  What is the workflow that leads to the patients receiving the request?  Is it retrieved by an app?</p>",
        "id": 153966078,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1527776954
    },
    {
        "content": "<p>There is a clinical application which enables to select patients for a survey. These patients will receive a demand for filling the questionnaire by a patient portal. We are currently developing the data flow between the clinical application and the patient portal. In the portal the patient can decide whether he accepts or declines the questionnaire.</p>",
        "id": 153966082,
        "sender_full_name": "Martin Benedict",
        "timestamp": 1527777163
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> I am curious about the answer to <span class=\"user-mention\" data-user-id=\"194981\">@Martin Benedict</span> question: \"Is this an adequate way? What do you think? <br>\nShould the type of the bundle be \"message\" or \"collection\"?\" - is a bundle of multiple resources the appropriate way to exchange multiple resources at once? Or is the FHIR recommendation to do calls back and forth in a more RESTful model?</p>",
        "id": 153968718,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1528812851
    },
    {
        "content": "<p>Lloyd as you know we're going more towards the bundle approach for Da Vinci - I'm curious if that is the defacto recommendation in these types of scenarios or if one is preferred over another.</p>",
        "id": 153968719,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1528812923
    },
    {
        "content": "<p>Bundles can be used in FHIR in a few cases - to send a Batch or Transaction, to send a Message or Document or as one (or more) of the arguments when invoking an Operation.  If you're doing a message, you have to start with a MessageHeader, must define the event and will need the recipient to support that particular message (which will typically require site-specific negotiation and configuration).  Similarly, if you use an operation, the system will have to actually support that particular operation and know how to process it.  So if you can accomplish what you need with Batch or Transaction, that's better.  However, those don't allow synchronous response to a specific request.</p>\n<p>In Da Vinci, we're not expecting the payers to expose a general purpose RESTful interface.  We also want a synchronous response.  But we don't need the indirect delivery offered by messaging.  That means invoking an operation is our exchange mechanism.  With an operation, we'll have a choice of passing a Parameters instance or a single Bundle resource.  Because all of the content we have will be interrelated,  it seems slightly cleaner to have everything in an interlinked Bundle, but I don't know that we have any particular design rules that push toward one or the other.  We'd only use messaging if we wanted to allow for asynchronous processing or if we wanted to support routing.</p>\n<p>Posting a bare Bundle to the Bundle endpoint (rather than an operation endpoint) wouldn't result in any processing - it would just result in the Bundle being stored \"as is\".</p>",
        "id": 153968721,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528813580
    },
    {
        "content": "<p>I made the example Bundle for DaVinci as a <code>collection</code> by default. Since we have not delved into or I missed the part about the actual transaction that may change .  I presumed it would be some sort of operation.</p>",
        "id": 153968800,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528846109
    }
]