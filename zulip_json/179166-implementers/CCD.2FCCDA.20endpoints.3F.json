[
    {
        "content": "<p>Are there any proposals or recommendations for which endpoints a CCD/C-CDA document should be served up on?  We've gotten enough of the Argonaut/MU2 resources implemented that we're starting to put together entire patient histories now, and are quickly moving into processing CCD/C-CDA documents.  I can expose them through custom REST endpoints easily enough; but I'd be just as happy to follow other people's lead and build on community efforts.</p>",
        "id": 153923770,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1512755594
    },
    {
        "content": "<p>DocumentReference would point at a Binary which is the CCDA content.</p>",
        "id": 153923774,
        "sender_full_name": "John Moehrke",
        "timestamp": 1512756229
    },
    {
        "content": "<p>the Argonaut and the IHE-MHD specifications are working hard to make the Query/Retrieve side consistent, at least for DocumentReference.</p>",
        "id": 153923775,
        "sender_full_name": "John Moehrke",
        "timestamp": 1512756270
    },
    {
        "content": "<p>See IHE-MHD for an approach to publication side, and use of DocumentManifest, and List.</p>",
        "id": 153923776,
        "sender_full_name": "John Moehrke",
        "timestamp": 1512756296
    },
    {
        "content": "<p><a href=\"http://wiki.ihe.net/index.php/Mobile_access_to_Health_Documents_(MHD)\" target=\"_blank\" title=\"http://wiki.ihe.net/index.php/Mobile_access_to_Health_Documents_(MHD)\">http://wiki.ihe.net/index.php/Mobile_access_to_Health_Documents_(MHD)</a></p>",
        "id": 153923777,
        "sender_full_name": "John Moehrke",
        "timestamp": 1512756312
    },
    {
        "content": "<p>There will be testing at the comming Connectathon on this</p>",
        "id": 153923778,
        "sender_full_name": "John Moehrke",
        "timestamp": 1512756329
    },
    {
        "content": "<p>also, my blog on the topic <a href=\"https://healthcaresecprivacy.blogspot.com/2017/11/hie-future-bright-fhir-api-to-document.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2017/11/hie-future-bright-fhir-api-to-document.html\">https://healthcaresecprivacy.blogspot.com/2017/11/hie-future-bright-fhir-api-to-document.html</a></p>",
        "id": 153923779,
        "sender_full_name": "John Moehrke",
        "timestamp": 1512756390
    },
    {
        "content": "<p>Huh.  Very interesting.  Not exactly what I was expecting, but makes sense.  I'm glad I asked.  Thank you!</p>",
        "id": 153923781,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1512756505
    },
    {
        "content": "<p>Bumping up DocumentReference resource as a priority item to implement.</p>",
        "id": 153923782,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1512756569
    },
    {
        "content": "<p>Argonaut DocumentQuery is published <a href=\"http://www.fhir.org/guides/argonaut/r2/#document-query\" target=\"_blank\" title=\"http://www.fhir.org/guides/argonaut/r2/#document-query\">here</a> for DSTU2 and will be updated in US Core for December Ballot <a href=\"http://www.fhir.org/guides/argonaut/r2/#documentquery\" target=\"_blank\" title=\"http://www.fhir.org/guides/argonaut/r2/#documentquery\">here</a></p>",
        "id": 153923783,
        "sender_full_name": "Eric Haas",
        "timestamp": 1512756698
    },
    {
        "content": "<p>I noticed Epic is using a Basic Resource to implement an API to request / generate a CCDA in 2.1 format.  We were thinking of using a Composition to create and commit a CCDA to our FHIR stack.  We were not sure how to create an actual request mechanism?  How does the CCDA WG plan to address the workflow?</p>",
        "id": 153927679,
        "sender_full_name": "Radu Craioveanu",
        "timestamp": 1515099602
    },
    {
        "content": "<p>DocumentReference should be used for handling existing CCDA documents. To create one... I don't know. ProcedureRequest. Note that Epic's choice in R2 is much restricted compared to current versions of FHIR</p>",
        "id": 153927681,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515099891
    },
    {
        "content": "<blockquote>\n<p>DocumentReference should be used for handling existing CCDA documents. To create one... I don't know. ProcedureRequest. Note that Epic's choice in R2 is much restricted compared to current versions of FHIR</p>\n</blockquote>\n<p>Grahame, thank you.  I initially thought it would be DocumentReference myself,  but then I noticed Composite has the concept of Sections, so I thought maybe it should be used instead.  Can you point me to a sample CCDA done via DocumentReference?</p>",
        "id": 153927695,
        "sender_full_name": "Radu Craioveanu",
        "timestamp": 1515102568
    },
    {
        "content": "<p>well, this: <a href=\"http://build.fhir.org/xds-example.xml.html\" target=\"_blank\" title=\"http://build.fhir.org/xds-example.xml.html\">http://build.fhir.org/xds-example.xml.html</a>  (though it refers to a C32 not a CCDA)</p>",
        "id": 153927698,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515102833
    },
    {
        "content": "<p>but I think you're looking to actually convert the CCDA content to FHIR directly?</p>",
        "id": 153927699,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515102849
    },
    {
        "content": "<p>(not merely refer to it)</p>",
        "id": 153927700,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515102858
    },
    {
        "content": "<blockquote>\n<p>(not merely refer to it)</p>\n</blockquote>\n<p>indeed, convert CCDA content to FHIR, not merely refering to it.  Thanks</p>",
        "id": 153927704,
        "sender_full_name": "Radu Craioveanu",
        "timestamp": 1515103292
    },
    {
        "content": "<p>then you should look at this:</p>",
        "id": 153927706,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515103423
    },
    {
        "content": "<p><a href=\"http://hl7.org/fhir/us/ccda/\" target=\"_blank\" title=\"http://hl7.org/fhir/us/ccda/\">http://hl7.org/fhir/us/ccda/</a></p>",
        "id": 153927707,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515103494
    },
    {
        "content": "<p>Are you looking to produce an equivalent FHIR Document as the source CDA? That is a Document is produced that meets the principles of a Document?   Or are you just looking to decompose as much of the CDA into FHIR Resources and make those resources available as FHIR Resources? If  so, then see <a href=\"http://wiki.ihe.net/index.php/Mobile_Cross-Enterprise_Document_Data_Element_Extraction\" target=\"_blank\" title=\"http://wiki.ihe.net/index.php/Mobile_Cross-Enterprise_Document_Data_Element_Extraction\">http://wiki.ihe.net/index.php/Mobile_Cross-Enterprise_Document_Data_Element_Extraction</a>. This IHE Profile looks to expose the vast existing CDA documents that are communicated in Document Sharing exchanges as discrete data elements through the core set of FHIR Resources.</p>",
        "id": 153927754,
        "sender_full_name": "John Moehrke",
        "timestamp": 1515164091
    },
    {
        "content": "<p>Yes, I am looking to produce an equivalent FHIR Document as the souce CDA.  Tell me what you think, please.<br>\nhere is our usecase:<br>\n- we have James Agnew's HAPI FHIR server running STU3 on top of Siemens Cerner EMR and several other clincal and financial systems.  We are standardizing internally for all applications and systems on FHIR, single view first architectural pattern - everything gets written to the FHIR stack first, then mapped / pumped to the back end systems via interceptors, and everything is ready from the FHIR APIs.  We call our internal systems, which include the API, the back end routing, cache, security ... FABRIC.<br>\n- we want to exchange CCDAs with CommonWell, CareEverywhere and some Point to Point (large hospital or healthcare groups...)<br>\n- we are looking initially at outbounding CCDA from our system to some of the above, on demand, first use case is ToC Letters<br>\n- Some of these end points support FHIR and some do not.  Currently we are anticipating they will accept the HL7 CCDA v2.1 XML version, with sections for Medications, Immunizations, Plan of Care, Allergies, ...<br>\n- I want to build a mechanism in FABRIC in which we can support requests for both FHIR native CCDA as well as v2.1 XML files. <br>\n- I see a few options of getting there:<br>\n     a. build a component outside of FHIR which will consume discrete FHIR resources (Alergies, Immunization, MedicationStatement...), take that data, compile it and produce the v2.1 CCDA ToC.  This CCDA document can then be saved back into FHIR as an attachment to DocumentReference for future consumption, review, retrieval, ...<br>\n    b. build a component outside of FHIR will will consume a Composition object in FHIR that can GET a FHIR native CCDA.  This may required a POST request first (by CCDA type).  Once retrieved, that FHIR Composition CCDA can then be transformed into v2.1 CCDA or other outbound formats<br>\n- (a) and (b) above are not mutually exclusive, but I want a separate team to build that and I think (b) would be easier for them.</p>",
        "id": 153927756,
        "sender_full_name": "Radu Craioveanu",
        "timestamp": 1515165810
    },
    {
        "content": "<p>So you're just wanting to generate the CCDA document, not consume a CCDA.  Have you looked at <a href=\"http://hl7.org/fhir/composition-operations.html#2.41.13.1\" target=\"_blank\" title=\"http://hl7.org/fhir/composition-operations.html#2.41.13.1\">http://hl7.org/fhir/composition-operations.html#2.41.13.1</a>?  It needs an additional parameter (in general) to pass a profile or graph definition to better qualify what needs to be generated, but should be a good starting point.  I think your usecase is absolutely one that should be supported by the core spec.</p>",
        "id": 153927764,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1515166860
    },
    {
        "content": "<p>Also see <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=14391\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=14391\">GF#14391</a></p>",
        "id": 153927767,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1515167132
    },
    {
        "content": "<p>So the Document Sharing infrastructure can carry a FHIR Document just as well as it carries a CDA document.  This is indeed something I have been stressing to those communities. The most critical difference is that within the DocumentEntry (FHIR DocumentReference) the document would be described with a mime type indicating that it is encoded as a FHIR Document (likely two entries because you likely want to make both json and xml avaialble, unfortunate duplication but really not that much overhead). These encoding flavors can indicate that they are following the same content requirement rules through using the same FormatCode (FHIR DocumentReference.content.format). All of these DocumentEntry (FHIR DocumentReference) can be in a relationship indicating they are all transforms of the same document (FHIR DocumentReference.relatesTo)</p>",
        "id": 153927775,
        "sender_full_name": "John Moehrke",
        "timestamp": 1515167334
    },
    {
        "content": "<p>See my blog article on this <a href=\"https://healthcaresecprivacy.blogspot.com/2017/03/multiple-formats-of-same-document.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2017/03/multiple-formats-of-same-document.html\">https://healthcaresecprivacy.blogspot.com/2017/03/multiple-formats-of-same-document.html</a></p>",
        "id": 153927776,
        "sender_full_name": "John Moehrke",
        "timestamp": 1515167363
    },
    {
        "content": "<p>and an older article <a href=\"https://healthcaresecprivacy.blogspot.com/2017/01/fhir-documents-in-xds.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2017/01/fhir-documents-in-xds.html\">https://healthcaresecprivacy.blogspot.com/2017/01/fhir-documents-in-xds.html</a></p>",
        "id": 153927777,
        "sender_full_name": "John Moehrke",
        "timestamp": 1515167403
    },
    {
        "content": "<p>thanks.  will check this out.</p>",
        "id": 153927778,
        "sender_full_name": "Radu Craioveanu",
        "timestamp": 1515167528
    },
    {
        "content": "<p>Lastly, there is a theory that when one does the HTTP GET to retrieve the document (FHIR Binary), that the http negotiate can be inspected by the server and used to pick the prefered and available mime-type. This has only been talked about, not yet have I heard of it being tried.</p>",
        "id": 153927779,
        "sender_full_name": "John Moehrke",
        "timestamp": 1515167549
    },
    {
        "content": "<p>I read the Mobile XDS, your blog on multiple formats as well as teh composition-opearatoins and that is exactly what I want to do.  <br>\nDo you know if there are converters (open source) from FHIR Composition to C-CDA v2.1 or from FHIR Resources to C-CDA v2.1.</p>",
        "id": 153927853,
        "sender_full_name": "Radu Craioveanu",
        "timestamp": 1515258722
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191407\">@Rick Geimer</span>  ?</p>",
        "id": 153927855,
        "sender_full_name": "Eric Haas",
        "timestamp": 1515262485
    }
]