[
    {
        "content": "<p>Hi,</p>\n<p>I am currently implementing the following query:<br>\n\"Get the organization whose Id equals '1' or which is part of an organization whose Id equals '1'\"</p>\n<p>My query string is defined as follows:<br>\n[GET] Organization?_filter=_id eq 1 or partof eq 1</p>\n<p>However, when I execute the query like this:<br>\n<a href=\"http://hapi.fhir.org/baseDstu3/Organization?_filter=_id%20eq%201%20or%20partof%20eq%201\" target=\"_blank\" title=\"http://hapi.fhir.org/baseDstu3/Organization?_filter=_id%20eq%201%20or%20partof%20eq%201\">http://hapi.fhir.org/baseDstu3/Organization?_filter=_id%20eq%201%20or%20partof%20eq%201</a></p>\n<p>...it returns a bundle containing one CodeSystem-resource.<br>\nNow I'm confused: is there something wrong with my query (and approach) or is this a bug?</p>",
        "id": 180011625,
        "sender_full_name": "Steffen Lehnert",
        "timestamp": 1573029253
    },
    {
        "content": "<p>I've never played with _filter, but the base question to ask is: what URL does the 'self' link contain in the response bundle?<br>\nAnd why not simply use GET Organization?partof._id=1&amp;_include=partof ?</p>",
        "id": 180012220,
        "sender_full_name": "René Spronk",
        "timestamp": 1573029880
    },
    {
        "content": "<p>Maybe I'm wrong, but doesn't this query only adress the last part of my query:<br>\n\"which is part of an organization whose Id equals '1'\"</p>\n<p>The first part \"Get the organization whose Id equals '1' \" wouldn't be covered by this?<br>\nThus  I would be forced to execute a 2nd query like the following GET Organization?_id=1?</p>",
        "id": 180014209,
        "sender_full_name": "Steffen Lehnert",
        "timestamp": 1573031842
    },
    {
        "content": "<p>Here's a working example of my initial query:<br>\n<a href=\"http://hapi.fhir.org/baseR4/Organization?_filter=_id%20eq%2044664%20or%20partof._id%20eq%2044664\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/Organization?_filter=_id%20eq%2044664%20or%20partof._id%20eq%2044664\">http://hapi.fhir.org/baseR4/Organization?_filter=_id%20eq%2044664%20or%20partof._id%20eq%2044664</a> --&gt; this query returns 3 organizations (and the correct ones too).</p>\n<p>However, if you replace \"44664\" for something non-existing, the result will be random rubish , sometimes of type \"CodeSystem\", some other time \"MessageHeader\", e.g.:<br>\n<a href=\"http://hapi.fhir.org/baseR4/Organization?_filter=_id%20eq%204466%20or%20partof._id%20eq%204466\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/Organization?_filter=_id%20eq%204466%20or%20partof._id%20eq%204466\">http://hapi.fhir.org/baseR4/Organization?_filter=_id%20eq%204466%20or%20partof._id%20eq%204466</a></p>",
        "id": 180018357,
        "sender_full_name": "Steffen Lehnert",
        "timestamp": 1573035724
    },
    {
        "content": "<p>I can replicate the error, you may wish to take that one up on the #hapi stream, for that's c;early an hapi issue.</p>",
        "id": 180025428,
        "sender_full_name": "René Spronk",
        "timestamp": 1573042202
    },
    {
        "content": "<p>Using <a href=\"http://hapi.fhir.org/baseR4/Organization?partof._id=44664&amp;_include=partof\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/Organization?partof._id=44664&amp;_include=partof\">http://hapi.fhir.org/baseR4/Organization?partof._id=44664&amp;_include=partof</a> then the _include part doesn't appear to work.  IMHO another hapi issue.</p>",
        "id": 180025863,
        "sender_full_name": "René Spronk",
        "timestamp": 1573042610
    },
    {
        "content": "<p>Thank you for confirming the issue!</p>",
        "id": 180025998,
        "sender_full_name": "Steffen Lehnert",
        "timestamp": 1573042760
    }
]