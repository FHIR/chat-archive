[
    {
        "content": "<p>I am using Forge 18.2 for HL7 FHIR DSTU2 and was wondering how I can create a complex extension that has an int element with 1:* cardinality that will define a care plan cycle, then another int element nested under this care plan cycle element with 1:* cardinality to represent which day of the cycle.  It would be similar to this existing extension (<a href=\"https://simplifier.net/nccnchemotherapyorde/daysofcycle\" target=\"_blank\" title=\"https://simplifier.net/nccnchemotherapyorde/daysofcycle\">https://simplifier.net/nccnchemotherapyorde/daysofcycle</a>) but would allow the definition of the cycle that the day(s) are on such as this: </p>\n<ul>\n<li>Cycle: 1<ul>\n<li>Day: 1</li>\n<li>Day: 2</li>\n<li>Day: 3</li>\n</ul>\n</li>\n<li>Cycle 2<ul>\n<li>Day: 1</li>\n</ul>\n</li>\n</ul>",
        "id": 153986566,
        "sender_full_name": "Sylvia Freeman",
        "timestamp": 1534284801
    },
    {
        "content": "<p>I was about to ask a similar question!<br>\nMine is about complex extensions that contain complex extensions, and whether or not they can be defined  in a single structure definition.  E.g., <br>\nExtension.extension:foo.extension:bar.valueString<br>\nExtension.extension:foo.extension:baz.valueBoolean</p>",
        "id": 153986638,
        "sender_full_name": "Nick George",
        "timestamp": 1534295719
    },
    {
        "content": "<p>There are examples of complex extension definitions here: <a href=\"http://build.fhir.org/extensibility-registry.html\" target=\"_blank\" title=\"http://build.fhir.org/extensibility-registry.html\">http://build.fhir.org/extensibility-registry.html</a> (just look for 'complex')</p>",
        "id": 153986640,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1534296487
    },
    {
        "content": "<p>none of those examples have nested complex extensions - I can't find any examples like that, but I also can't find anything that seems to forbid it.  I see a requirement that Extensions that are not children of other extensions must have absolute urls, which would seem to rule out defining extensions as slices on resources (e.g., Observation.extension:internalextension.valueString) since there would be no top-level StructureDefinition url for that extension to refer to, but I'm not sure about nested complex extensions in an Extension profile</p>",
        "id": 153986661,
        "sender_full_name": "Nick George",
        "timestamp": 1534299463
    },
    {
        "content": "<p>(one could imagine a single StructureDefinition that describes an arbitrarily complex extension)</p>",
        "id": 153986662,
        "sender_full_name": "Nick George",
        "timestamp": 1534299553
    },
    {
        "content": "<p>You're wanting a 3-level extension?  That's still fine</p>",
        "id": 153986663,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1534299561
    },
    {
        "content": "<p>(but you're right, we don't have any examples of anything that deep)</p>",
        "id": 153986664,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1534299597
    },
    {
        "content": "<blockquote>\n<p>which would seem to rule out defining extensions as slices on resources</p>\n</blockquote>\n<p>I didn't understand that and the following narrative muddied the water further...</p>",
        "id": 153986665,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534299731
    },
    {
        "content": "<p>haha fair enough - basically, in a complex extension, we see that we can use slices to define fields on extensions of extension (e.g., for Patient ClinicalTrial extension, specify that Extension.extension:nct.url is fixed at NCT, and it is restricted to being a string by specifying Extension.extension:nct.valueString)</p>",
        "id": 153986667,
        "sender_full_name": "Nick George",
        "timestamp": 1534300247
    },
    {
        "content": "<p>so there I was talking about doing that on resources directly.  So in a profile on Observation, for example, specifying Observation.extension:foo.url = Foo, and Observation.extension:foo.valueBoolean instead of value[x]</p>",
        "id": 153986668,
        "sender_full_name": "Nick George",
        "timestamp": 1534300329
    },
    {
        "content": "<p>which I believe is not valid, because spec requires extensions that are not children of extensions to have urls to full structure definitions</p>",
        "id": 153986669,
        "sender_full_name": "Nick George",
        "timestamp": 1534300355
    },
    {
        "content": "<p>however I was unclear if it was valid to have complex extensions within complex extensions, which Lloyd says I can</p>",
        "id": 153986670,
        "sender_full_name": "Nick George",
        "timestamp": 1534300477
    },
    {
        "content": "<p>I think that the answer is: no, you cannot define extensions in line, they need a separate definition</p>",
        "id": 153986672,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534301107
    },
    {
        "content": "<p>but you can nest in the definition as far as you want.</p>",
        "id": 153986673,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534301122
    },
    {
        "content": "<p>cool, that was my interpretation as well.  Thanks!</p>",
        "id": 153986674,
        "sender_full_name": "Nick George",
        "timestamp": 1534301154
    },
    {
        "content": "<p>One more complex extension question while I have you: looking at <a href=\"http://hl7.org/fhir/extension-patient-clinicaltrial.json.html\" target=\"_blank\" title=\"http://hl7.org/fhir/extension-patient-clinicaltrial.json.html\">http://hl7.org/fhir/extension-patient-clinicaltrial.json.html</a> , there's nothing I see, either in snapshot or differential, that constrains Extension.extension (unsliced).  So is it correct to conclude that, in addition to  extensions with the urls described in slices, you can have any other extensions as well on that?</p>",
        "id": 153986675,
        "sender_full_name": "Nick George",
        "timestamp": 1534301988
    },
    {
        "content": "<p>I guess that's what's implied by the slice rules \"open\" <a href=\"http://hl7.org/fhir/codesystem-resource-slicing-rules.html\" target=\"_blank\" title=\"http://hl7.org/fhir/codesystem-resource-slicing-rules.html\">http://hl7.org/fhir/codesystem-resource-slicing-rules.html</a></p>",
        "id": 153986676,
        "sender_full_name": "Nick George",
        "timestamp": 1534302134
    },
    {
        "content": "<p>Any extensions that aren't defined in the structure definition whose URL you're using will have to be expressed with a full url rather than a local URL, but yes it's possible to have other extensions - whether generic ones like data-absent-reason that can show up anywhere or extensions specifically created to extend your extension.</p>",
        "id": 153986677,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1534302146
    },
    {
        "content": "<p>gotcha.  makes sense, thanks!</p>",
        "id": 153986678,
        "sender_full_name": "Nick George",
        "timestamp": 1534302167
    },
    {
        "content": "<p>Thank you all!</p>",
        "id": 153986943,
        "sender_full_name": "Sylvia Freeman",
        "timestamp": 1534345738
    }
]