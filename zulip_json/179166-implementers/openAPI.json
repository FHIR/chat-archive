[
    {
        "content": "<p>I've contacted OpenAPI guys - they are open for collaboration - i think, verification &amp; harmonisation of FHIR/swagger/JSON-schema by OpenAPI - would be very valuable.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ?</p>",
        "id": 153887568,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1494072773
    },
    {
        "content": "<p>sure, we like to collaborate. Can you hook me up with them by email?</p>",
        "id": 153887575,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494075350
    },
    {
        "content": "<p>Yes</p>",
        "id": 153887747,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1494138540
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> have you looked at openAPI to see how Smart on FHIR would be represented?</p>",
        "id": 153935394,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517875826
    },
    {
        "content": "<p>I'm not sure I understand the question -- OAPI doesn't include a language for modeling OAuth profiles, does it?</p>",
        "id": 153935395,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1517875874
    },
    {
        "content": "<p>I mean, you can certainly annotate endpoints with \"needs xyz OAuth scope\"</p>",
        "id": 153935396,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1517875902
    },
    {
        "content": "<p>And you can advertise your auth/token URLs</p>",
        "id": 153935397,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1517875920
    },
    {
        "content": "<p>Is that extent of what you have in mind?</p>",
        "id": 153935398,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1517875936
    },
    {
        "content": "<p>no it does have a language. here's a sample:</p>",
        "id": 153935399,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517875964
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;oauth2&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;flows&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;implicit&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;authorizationUrl&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://example.com/api/oauth/dialog&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;scopes&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;write:pets&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;modify pets in your account&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;read:pets&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;read your pets&quot;</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">&quot;authorizationCode&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;authorizationUrl&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://example.com/api/oauth/dialog&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;tokenUrl&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://example.com/api/oauth/token&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;scopes&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;write:pets&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;modify pets in your account&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;read:pets&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;read your pets&quot;</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>",
        "id": 153935400,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517875979
    },
    {
        "content": "<p>And a different question, for a more general audience: we cannot describe our XML format in openAPI because of the way they describe XML - as a variant of JSON. What we can't do is deal with extensions</p>",
        "id": 153935406,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517878131
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> ping on this</p>",
        "id": 153938343,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518898496
    },
    {
        "content": "<p>This is very interesting from the perspective of being able to transport Consent resources.  I have much more to learn but the problem I am working on is can be summarized as follows...</p>\n<p>I am a consumer and want to capture my privacy preferences in one place so that it is easy for me to update it.    At the last CCDE connectathon we were able to demonstrate how a Consent Resource could be created in a Consumer Controlled App and subsequently shared with a central service that uses it to make disclosure decisions on my behalf.  </p>\n<p>The problem we discovered was that it was a challenge to verify that the scopes supported by the central service matched what I perceived to be my preferences in the Consumer Controlled app.  It was not really a problem for the trivial cases of all in or all out but once we started getting more granular there wasn't a way for me to verify that the system I was pushing my preferences to had the Scopes in place to support the preferences I had documented.  We can address this via Trust Frameworks (Policy) but I keep searching for a way to establish more standard scopes for this use case.</p>\n<p>It seems like some preferences would be implementable this way while others may not.  It comes down to whether or not we have common standard values or identifiers in most cases.  For example - if I create my privacy preferences in my Consumer App and indicate that I don't want to share anything with Dr. Who - if my CCA and the Central Distribution system don't have the same Identifiers for Dr. Who even though I may be able to migrate my  Consent Resource to the central system it won't be able to respect my privacy preference with regards to Dr. Who unless we are both using the same Provider Registry. </p>\n<p>As I am sure your aware - there is a lot of interest in figuring out if we can apply standard security labels on behalf of the consumer.  Assuming there was a way to indicate which SLS you were using and that the SLS used to set the consumer's preferences were the same as the one used in the central service we could define standard scopes consistently and as a result be able to transfer a Consent Resource from the CCA to the central system and expect that it could make sharing decisions on the consumers behalf.  </p>\n<p>So - after laying all that out my question is do you think we could employ this OAI as a way to convey privacy preferences in a Consent resource and have a computable way to verify that the central system can support the same scopes I perceived I was authorizing in the first place?</p>",
        "id": 153938358,
        "sender_full_name": "Aaron Seib",
        "timestamp": 1518912142
    },
    {
        "content": "<p>Hi everybody!</p>\n<p>Is there an ongoing work on OpenAPI representation for FHIR services? </p>\n<p>Thanks,<br>\nR.</p>",
        "id": 153948045,
        "sender_full_name": "Roberto Polli",
        "timestamp": 1522077498
    },
    {
        "content": "<p>the IG publisher produces openAPI documents for any CapabilityStatements it sees. But that's very new and still beta and hasn't made it's way into any published IGs yet, and nor is the tool available for other use yet (I haven't packaged it yet)</p>",
        "id": 153948190,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522091164
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> and thanks for your reply!</p>\n<p>So, if I understood correctly, there's this tool <a href=\"http://wiki.hl7.org/index.php?title=IG_Publisher_Documentation#Publishing_Implementation_Guides\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=IG_Publisher_Documentation#Publishing_Implementation_Guides\">http://wiki.hl7.org/index.php?title=IG_Publisher_Documentation#Publishing_Implementation_Guides</a> that can present openapi specs for the various CapabilityStatements but the openapi part is still WIP, right?</p>\n<p>Is there any git repo where I can check the implementation?</p>\n<p>Thanks again!</p>",
        "id": 153948356,
        "sender_full_name": "Roberto Polli",
        "timestamp": 1522154902
    },
    {
        "content": "<p>all the source is in svn, in <a href=\"https://gforge.hl7.org/svn/fhir/trunk/build\" target=\"_blank\" title=\"https://gforge.hl7.org/svn/fhir/trunk/build\">https://gforge.hl7.org/svn/fhir/trunk/build</a>, the java package org.hl7.fhir.igtools.openapi</p>",
        "id": 153948357,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522155194
    },
    {
        "content": "<p>Hi all,he Norweigan government is working on a cross-sectorial API-catalog where they plan to publish an extensive part of public sector APIs for external access. One of the primary goals with this is to facilitate industry contribution to business development, innovation and improvements in public sector. Health quality registry APIs are considered as a possible early candidate for publishing in the catalogue.  <br>\nThe work so far has been considering the openAPI specification as the common representation format for publishing these APIs across all public sectors. </p>\n<p>The question is: I know there are some work on the way in representing FHIR profiles/ conformance statements in the openAPI-specification format. But could it in this context be a better alternative to represent health care APIs directly on FHIR also in a national cross-sector context? What could be possible issues to consider if transformation to openAPI are chosen as the preferred alternative? Any thoughts or experiences?</p>",
        "id": 153985712,
        "sender_full_name": "Øyvind Aassve",
        "timestamp": 1534154282
    },
    {
        "content": "<p>openAPI is much more comprehensive that FHIR on web access / security. We won't be taking that space on, since they have.</p>",
        "id": 153985722,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534157096
    },
    {
        "content": "<p>openAPI will never be as thorough as us about the content model that is being exchanged. They'll use JSON schema which is a subset to various degrees of what FHIR says (there's some proposals to extend JSON schema to the infinity to say what we say, but I don't really see the point).</p>",
        "id": 153985723,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534157150
    },
    {
        "content": "<p>in the API specification we say things they don't say and vice versa. I may get a chance to attend an OpenAPI meeting and see if we can get some reconciliation on that - it seems as this difference is more accidental than justified or deliberate</p>",
        "id": 153985724,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534157209
    },
    {
        "content": "<p>it I were you I'd be going to in to bat for openAPI + FHIR for further details about healthcare for healthcare apps</p>",
        "id": 153985725,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534157262
    },
    {
        "content": "<p>Thanks Grahame, with regards to the batting openAPI+FHIR for apps, are you thinking openAPI might have a role for web access/ security?</p>",
        "id": 153985753,
        "sender_full_name": "Øyvind Aassve",
        "timestamp": 1534163750
    },
    {
        "content": "<p>well, we aren't going to put that stuff in our resources, that's for sure.</p>",
        "id": 153985754,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534164151
    },
    {
        "content": "<p>OK, good, Ill take this with me in the discussions with them. Cheers</p>",
        "id": 153985784,
        "sender_full_name": "Øyvind Aassve",
        "timestamp": 1534169362
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> regarding OpenAPI - there is a conference next week in Nashville, TN - OpenAPI Initiative, the API Strategy &amp; Practice Conference <a href=\"https://events.linuxfoundation.org/events/apistrat-2018/\" target=\"_blank\" title=\"https://events.linuxfoundation.org/events/apistrat-2018/\">https://events.linuxfoundation.org/events/apistrat-2018/</a>  <span class=\"user-mention\" data-user-id=\"192609\">@Mark Scrimshire</span> will be attending.  Perhaps he would act as an envoy for you - regarding this discussion.  US Digital Service is heavily backing OpenAPI - and I have been involved in a few discussions about the VA, DoD and OpenAPI interfaces.  FHIR was being identified as being \"noncoforming\" at this time.  We would direct any future reference to the FHIR IG's as how FHIR will address this; but we are unable to point to a current IG which is conformant to OpenAPI at this time.  I think we should work on a reference example which meets OpenAPI requirements (even if its just a reference example).  Expect in the coming months more of these types of conversations to be occurring.  Might be worthy of a blog (when we have an example ready).</p>",
        "id": 153997416,
        "sender_full_name": "Mario Hyland",
        "timestamp": 1537202097
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191460\">@Mario Hyland</span> I would be happy to relay any messages at the event. On the CMS Blue Button project we have been thinking about how we can integrate with the Swagger/OpenAPI spec to document our API. I had in fact taken a first attempt at using a node package to document the fhir api and then filtered down to the resources and actions we were supporting: <a href=\"https://github.com/CMSgov/bluebutton-web-server/blob/master/apidocs/bbonfhir_swagger.yaml\" target=\"_blank\" title=\"https://github.com/CMSgov/bluebutton-web-server/blob/master/apidocs/bbonfhir_swagger.yaml\">https://github.com/CMSgov/bluebutton-web-server/blob/master/apidocs/bbonfhir_swagger.yaml</a></p>",
        "id": 153997418,
        "sender_full_name": "Mark Scrimshire",
        "timestamp": 1537203083
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192609\">@Mark Scrimshire</span> I think the FHIR community was looking at the IG Publisher to support this need, meaning - if the FHIR Tooling does its job, you would receive credit or publish a machine readable and OpenAPI compliant artifact.  An idea would be to point folks like the US Digital Service to the HL7 event at the end of Sept in Baltimore as a place to continue these conversations.  It would be great if we could get a few folks from the OpenAPI community to engage with the FHIR Community conversation.</p>",
        "id": 153997423,
        "sender_full_name": "Mario Hyland",
        "timestamp": 1537204791
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191460\">@Mario Hyland</span> Yes - It would be great if the IG Publisher produced the OpenAPI documentation.</p>",
        "id": 153997424,
        "sender_full_name": "Mark Scrimshire",
        "timestamp": 1537205003
    },
    {
        "content": "<p>I would love to see an openapi &lt;&gt; fhir tool. Would make doing stubs (both client &amp; server) much easier. Could even use it with aws api gateway etc.</p>",
        "id": 153997438,
        "sender_full_name": "Adam Flinton",
        "timestamp": 1537209106
    },
    {
        "content": "<p>so <span class=\"user-mention\" data-user-id=\"192609\">@Mark Scrimshire</span> at the conference, our major issue is inconsistency around json schema. I think that the json schema currently produced for the build is correct, but quite a few tools dsisagree</p>",
        "id": 153997476,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1537227621
    },
    {
        "content": "<p>the openAPI part should be good to go I'll find an IG that actually exposes this</p>",
        "id": 153997477,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1537227647
    },
    {
        "content": "<p><a href=\"https://build.fhir.org/ig/HL7/US-Core/server.openapi.json\" target=\"_blank\" title=\"https://build.fhir.org/ig/HL7/US-Core/server.openapi.json\">https://build.fhir.org/ig/HL7/US-Core/server.openapi.json</a></p>",
        "id": 153997493,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1537229057
    },
    {
        "content": "<p>and <a href=\"https://build.fhir.org/ig/HL7/US-Core/client.openapi.json\" target=\"_blank\" title=\"https://build.fhir.org/ig/HL7/US-Core/client.openapi.json\">https://build.fhir.org/ig/HL7/US-Core/client.openapi.json</a></p>",
        "id": 153997494,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1537229070
    },
    {
        "content": "<p>I did have clients asking for Swagger descriptions of our FHIR API, and I always failed at the JSON schema part - meaning I could not find a way to generate correct JSON schemas for the responses</p>",
        "id": 153997595,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1537276346
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> apologies for jumping ahead slightly here, but have you given any thought to our process for operationalizing this?  We have the CapabilityStatement for FHIR - but in its current native format it does not seem to answer the mail for (US Digital Services) the OpenAPI requirements - do we propose exposing in addition to metadata another URL specifically for OpenAPI support?  Or, from your perspective should the FHIR CapabilityStatement in FHIR native JSON format meet the OpenAPI requirements as-is?  And, is this our ask or end goal objective (for <span class=\"user-mention\" data-user-id=\"192609\">@Mark Scrimshire</span> )?</p>",
        "id": 153997680,
        "sender_full_name": "Mario Hyland",
        "timestamp": 1537291289
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  in the server.openapi.json, should there a # sign in the ref?</p>\n<div class=\"codehilite\"><pre><span></span>$ref&quot;: &quot;http://build.fhir.org/fhir.json.schema#/definitions/OperationOutcome&quot;\n</pre></div>",
        "id": 153997687,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1537291415
    },
    {
        "content": "<p>yes I think there should be.</p>",
        "id": 153997760,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1537300971
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> apologies for jumping ahead slightly here, but have you given any thought to our process for operationalizing this?  We have the CapabilityStatement for FHIR - but in its current native format it does not seem to answer the mail for (US Digital Services) the OpenAPI requirements - do we propose exposing in addition to metadata another URL specifically for OpenAPI support?  Or, from your perspective should the FHIR CapabilityStatement in FHIR native JSON format meet the OpenAPI requirements as-is?  And, is this our ask or end goal objective (for <span class=\"user-mention\" data-user-id=\"192609\">@Mark Scrimshire</span> )?</p>\n</blockquote>\n<p>I am at #APIStrat and have been talking with Kin Lane. He is working with the VA on their OpenAPI work. I suggested that he come to the next Connectathon (San Antonio in 2019?) and present that work. In the meantime we can see how we can draw kin into these OpenAPI conversations.</p>",
        "id": 153999741,
        "sender_full_name": "Mark Scrimshire",
        "timestamp": 1537883417
    },
    {
        "content": "<p>well, I think that question is wrong way around. If I was coming from the openAPI communicty, how would I expect to find the openAPI statement?</p>",
        "id": 153999875,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1537939006
    },
    {
        "content": "<p>There's a bunch of openAPI validators out there - can anyone comment on how good they are, and whether there's on that I should put my faith in when I work on swagger generation this week?</p>",
        "id": 167110218,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559461007
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"195775\">@Michael Hansen</span>)</p>",
        "id": 167110226,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559461024
    },
    {
        "content": "<p>Do you mean tools that check a set of OpenAPI definitions and ensure they're valid, or tools that look at instance data and validate them against OpenAPI definitions?</p>",
        "id": 167122694,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1559482477
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> , what I have struggled with is that there are OpenAPI/Swagger definitions that are technically valid (according to various tools), but other tools that consume the \"valid\" openapi specs fall over (usually because of too deeply nested schema definitions). So my recommendation would be  use whatever validator makes sense in your tool chain <strong>and</strong> validate that you can generate a client based on the spec using something like AutoRest (<a href=\"https://github.com/Azure/AutoRest\" target=\"_blank\" title=\"https://github.com/Azure/AutoRest\">https://github.com/Azure/AutoRest</a>).</p>",
        "id": 167128218,
        "sender_full_name": "Michael Hansen",
        "timestamp": 1559492346
    },
    {
        "content": "<p>I mean, how do I validate that i'm producing valid openAPI documents</p>",
        "id": 167163417,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559547787
    },
    {
        "content": "<p>clearly, all openapi tools require a long tool chain based around npm. I'll have to invest in figuring that out</p>",
        "id": 167163431,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559547821
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> , did you try <a href=\"https://swagger.io/tools/swagger-editor/download/\" target=\"_blank\" title=\"https://swagger.io/tools/swagger-editor/download/\">https://swagger.io/tools/swagger-editor/download/</a>  and the online editor <a href=\"https://editor.swagger.io/\" target=\"_blank\" title=\"https://editor.swagger.io/\">https://editor.swagger.io/</a>  it's still npm based though</p>",
        "id": 167238553,
        "sender_full_name": "Shovan Roy",
        "timestamp": 1559601398
    },
    {
        "content": "<p>That one struggles with the scale of it.</p>",
        "id": 167242649,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1559605258
    },
    {
        "content": "<p>ok. so here's an updated schema that I think is mostly correct (thanks <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> ). we definitely have issues with schema, but I can't get going</p>",
        "id": 167251736,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559617083
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/7_A8cm8CUHhhBd49STSdEgR4/swagger-base.json\" target=\"_blank\" title=\"swagger-base.json\">swagger-base.json</a></p>",
        "id": 167251747,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559617094
    },
    {
        "content": "<p>the editor at <a href=\"https://editor.swagger.io/\" target=\"_blank\" title=\"https://editor.swagger.io/\">https://editor.swagger.io/</a> says </p>\n<div class=\"codehilite\"><pre><span></span>Resolver error at paths./metadata.get.responses.200.content.application/fhir+json.schema.$ref\nCould not resolve reference: Failed to fetch\n</pre></div>\n\n\n<p>the reference it can't resolve is:</p>\n<div class=\"codehilite\"><pre><span></span>http://hl7.org/fhir/STU3/fhir.schema.json#/definitions/Bundle\n</pre></div>",
        "id": 167251769,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559617148
    },
    {
        "content": "<p>that looks like it should resolve to me...</p>",
        "id": 167251771,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559617157
    },
    {
        "content": "<p>The first block for it is that the editor is over https, so it can't access an insecure http site - developer console should state that,<br>\nbut when you change that to https, the size/complexity gets you.</p>",
        "id": 167251837,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1559617221
    },
    {
        "content": "<p><code>This request has been blocked; the content must be served over HTTPS</code><br>\nIs the message that you would be seeing in the browser developer console.</p>",
        "id": 167251914,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1559617358
    },
    {
        "content": "<p>that's... .<em>bad</em></p>",
        "id": 167251916,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559617364
    },
    {
        "content": "<p>so the http/https thing is truly problematic.</p>",
        "id": 167252002,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559617508
    },
    {
        "content": "<p>but yes, after that it crashes the editor</p>",
        "id": 167252008,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559617520
    },
    {
        "content": "<p>hah I can no longer use the editor  at all. awesome.</p>",
        "id": 167252082,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559617601
    },
    {
        "content": "<p>Yup, for me takes 45seconds to download the 1.5MB, then memory crash.</p>",
        "id": 167252087,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1559617619
    },
    {
        "content": "<p>and the editor remembers state... so bang</p>",
        "id": 167252106,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559617642
    },
    {
        "content": "<p>Yeah, that's the really sucky part. Disconnect network so that it can't get at that address?</p>",
        "id": 167252159,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1559617701
    },
    {
        "content": "<p>The developer tools helped me crack around that long enough to change the URL back to http<br>\nand therefore not work...</p>",
        "id": 167252478,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1559618182
    },
    {
        "content": "<p>The demand for OpenAPI when the quality of the tooling is like this puzzles me</p>",
        "id": 167267549,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1559635075
    },
    {
        "content": "<p>It forces you to do simple stuff -- which is usually good :-)</p>",
        "id": 167288224,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1559652170
    },
    {
        "content": "<p>Also a lot of people use it like a documentation generator -- so even if things like code generation and data validation don't really work, you still get a pretty enough documentation page</p>",
        "id": 167288295,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1559652220
    },
    {
        "content": "<p>Which is funny when fhir tooling has so much more in both respects.<br>\nIn my case the API management tools my company uses wants one.</p>",
        "id": 167288829,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1559652539
    },
    {
        "content": "<p>We were able to run swagger-ui with simplified schema in one file with some lags. Guys just do not expect such amount of generated metadata - it's a good case for swagger developers to tune their tools. I think we should report this issues.</p>",
        "id": 167301751,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1559659973
    },
    {
        "content": "<p>I'm using a work around in my OpenAPI spec.  pulling the profile reference form the CapabilityStatement and using it as 'externalDocs' in the schema definition. </p>\n<p><a href=\"/user_uploads/10155/WZ4cjKawVGGbV5UkQhC0sCvX/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a><br>\n<a href=\"user_uploads/10155/udAgOgxpzT64YaFLdVkP-M43/pasted_image.png\" target=\"_blank\" title=\"user_uploads/10155/udAgOgxpzT64YaFLdVkP-M43/pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/WZ4cjKawVGGbV5UkQhC0sCvX/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/WZ4cjKawVGGbV5UkQhC0sCvX/pasted_image.png\"></a></div><div class=\"message_inline_image\"><a href=\"user_uploads/10155/udAgOgxpzT64YaFLdVkP-M43/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"user_uploads/10155/udAgOgxpzT64YaFLdVkP-M43/pasted_image.png\"></a></div>",
        "id": 167340679,
        "sender_full_name": "Shovan Roy",
        "timestamp": 1559687186
    },
    {
        "content": "<p>what problems does that save?</p>",
        "id": 167373841,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559728831
    },
    {
        "content": "<p>This would then prevent the tool from trying to load in the schema...</p>",
        "id": 167376655,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1559731971
    },
    {
        "content": "<p>But does provide access to the documentation via the links. <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 167376681,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1559731995
    },
    {
        "content": "<p>I'm not a swagger expert by any means - one of my trainees in a FHIR training course in Brussels asks: so what's the latest status in terms of using Swagger UI for the FHIR API ? Can it be made to work, would you recommend the approach ?</p>",
        "id": 181985996,
        "sender_full_name": "René Spronk",
        "timestamp": 1574824774
    },
    {
        "content": "<p>the API part is fine, and the IG publisher generates openAPI documents for capability statements (and you can give it a swagger template to fill out and so doing specify your security details etc). But the schema part is a mess, and I don't think that's functional at this time.</p>",
        "id": 181989755,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574830459
    },
    {
        "content": "<blockquote>\n<p>I'm not a swagger expert by any means - one of my trainees in a FHIR training course in Brussels asks: so what's the latest status in terms of using Swagger UI for the FHIR API ? Can it be made to work, would you recommend the approach ?</p>\n</blockquote>\n<p>Yes, ofcourse. Swagger can be used to implement FHIR spec and hit the endpoint.</p>",
        "id": 181996366,
        "sender_full_name": "Niharika",
        "timestamp": 1574840077
    },
    {
        "content": "<p>Isn't the schema necessary for write operations? I tried removing it to get rid of the errors, but with this I lost the ability to post from swagger UI</p>",
        "id": 184991955,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1578387067
    },
    {
        "content": "<p>And how do I get POST to work? my CapStatement looks like this, but my swagger json does not contain POST.<br>\n<a href=\"/user_uploads/10155/lZFrNGCpMlZLZmuRmj_uVqVD/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/lZFrNGCpMlZLZmuRmj_uVqVD/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/lZFrNGCpMlZLZmuRmj_uVqVD/pasted_image.png\"></a></div>",
        "id": 184999870,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1578394601
    },
    {
        "content": "<p>I'm sure I'm doing something wrong, or at least not doing something right..</p>",
        "id": 184999886,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1578394632
    },
    {
        "content": "<p>wooah I had put/post the wrong way round on create/update. Try again after the next release</p>",
        "id": 185469043,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1578898362
    },
    {
        "content": "<p>OK, POST is there.</p>",
        "id": 185626402,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1579027706
    },
    {
        "content": "<p>SwaggerUI doesn't work , even if i copy the schemas to my local machine to avoid CORS.<br>\nI guess this is because of schemas. From initial research, it seems I may need to de-reference and convert the schemas...<br>\nIs there any working example of OpenAPI POST from a CapStatement?</p>",
        "id": 185626438,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1579027733
    },
    {
        "content": "<p>json schemas... an openAPI varies from them...</p>",
        "id": 185628555,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1579028921
    },
    {
        "content": "<p>json schemas... an openAPI varies from them...</p>",
        "id": 185628558,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1579028925
    },
    {
        "content": "<p>Ok i read some things about converting standard json schemas to openAPI, <br>\n<a href=\"https://www.npmjs.com/package/json-schema-to-openapi-schema\" target=\"_blank\" title=\"https://www.npmjs.com/package/json-schema-to-openapi-schema\">https://www.npmjs.com/package/json-schema-to-openapi-schema</a></p>",
        "id": 185628765,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1579029061
    },
    {
        "content": "<p>I will see if this leads to somewhere.</p>",
        "id": 185628787,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1579029071
    },
    {
        "content": "<p>Perhaps we just have to see when(ever) openAPI / swagger tools adopt json schema.</p>",
        "id": 185629021,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1579029213
    },
    {
        "content": "<p>I've had a quick look at doing some of it, and did some post processing to reduce complexity, made it load for my limited case, but that's about it.</p>",
        "id": 185683974,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1579082877
    },
    {
        "content": "<p>Key was to remove the extensibility where its not used. (from profiles)</p>",
        "id": 185684046,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1579082914
    },
    {
        "content": "<p>Not 100% but at least loaded for display.</p>",
        "id": 185684080,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1579082946
    },
    {
        "content": "<p>And we know that it doesn't really work anyway for truely complex objects.</p>",
        "id": 185684111,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1579082975
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> do you have something somwehere?</p>",
        "id": 186588545,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1579986095
    },
    {
        "content": "<p>I did some test with some conversion libs but did not work. some circular reference or so</p>",
        "id": 186588598,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1579986180
    },
    {
        "content": "<p>While openApi does not fix their stuff or we cannot figure out a conversion, would it be an option to remove the fhir schemas and just point it to an object?</p>",
        "id": 186588729,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1579986423
    },
    {
        "content": "<p>something like this</p>\n<div class=\"codehilite\"><pre><span></span>        json\n          &quot;200&quot;: {\n            &quot;description&quot;: &quot;the capbility statement&quot;,\n            &quot;content&quot;: {\n              &quot;application/fhir+json&quot;: {\n                &quot;schema&quot;: {\n                  &quot;$ref&quot;: &quot;#/definitions/objBody&quot;\n                }\n              }\n...\n,\n  &quot;definitions&quot;: {\n    &quot;objBody&quot;: {\n      &quot;type&quot;: &quot;object&quot;\n    }\n  }\n}\n</pre></div>",
        "id": 186588793,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1579986548
    },
    {
        "content": "<p>I'm interested in publishing openAPI via SwaggerUI. <br>\n(I think) I got this working by manually removing the schema information. This made it work, although it does not present a schema in the Swagger UI.</p>",
        "id": 187412696,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1580860420
    },
    {
        "content": "<p>Before suggesting this as an option, and ask Grahame to consider ignoring schemas when generating openApi json (possibly depending on a variable), what do others think? Any opinions out there?</p>",
        "id": 187412792,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1580860520
    },
    {
        "content": "<p>I've previously generated a Swagger file from a FHIR server metadata statement with this npm package: <a href=\"https://www.npmjs.com/package/fhir-swagger\" target=\"_blank\" title=\"https://www.npmjs.com/package/fhir-swagger\">https://www.npmjs.com/package/fhir-swagger</a> (<a href=\"https://github.com/rbren/fhir-swagger\" target=\"_blank\" title=\"https://github.com/rbren/fhir-swagger\">https://github.com/rbren/fhir-swagger</a>).<br>\nGenerated the swagger.json file with this command: <code>fhir-swagger --fhir_url \"https://vonk.fire.ly\" --conformance_path=\"/metadata\" --dstu3 --output swagger.json</code>. Can be rendered (with sufficient patience) in <a href=\"https://editor.swagger.io\" target=\"_blank\" title=\"https://editor.swagger.io\">https://editor.swagger.io</a>.</p>",
        "id": 187424838,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1580877445
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 187440836,
        "sender_full_name": "shachar zilbershlag",
        "timestamp": 1580898057
    }
]