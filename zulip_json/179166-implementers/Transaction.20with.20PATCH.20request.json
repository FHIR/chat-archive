[
    {
        "content": "<p>Hello everyone. <br>\nI am wondering which is the right format of a transaction with PATCH request in it. I tried with something like that:</p>\n<p>{<br>\n    \"resourceType\": \"Bundle\",<br>\n    \"type\": \"transaction\",<br>\n    \"entry\": [<br>\n        {<br>\n            \"resource\": [<br>\n                {<br>\n                    \"op\": \"replace\",<br>\n                    \"path\": \"/status\",<br>\n                    \"value\": \"completed\"<br>\n                }<br>\n            ],<br>\n            \"request\": {<br>\n                \"method\": \"PATCH\",<br>\n                \"url\": \"MedicationRequest/11\"<br>\n            }<br>\n        },<br>\n        {<br>\n            \"fullUrl\": \"urn:uuid:aa4abd42-985b-461a-b15d-c15c04f5e634\",<br>\n            \"resource\": {<br>\n                \"resourceType\": \"MedicationDispense\",<br>\n                \"status\": \"completed\",<br>\n                \"medicationReference\": {<br>\n                    \"reference\": \"Medication/12\",<br>\n                    \"display\": \"AUGMENTIN FILM COATED TABLETS 875/125MG 14\"<br>\n                },<br>\n                \"subject\": {<br>\n                    \"reference\": \"Patient/13\",<br>\n                    \"display\": \"ГЕОРГИ ДИМИТРОВ\"<br>\n                },<br>\n                \"receiver\": {<br>\n                    \"display\": \"Димитър Димитров\"<br>\n                },<br>\n                \"quantity\": {<br>\n                    \"value\": \"2\",<br>\n                    \"unit\": \"опаковки\"<br>\n                },<br>\n                \"authorizingPrescription\": {<br>\n                    \"reference\": \"MedicationRequest/11\"<br>\n                }<br>\n            },<br>\n            \"request\": {<br>\n                \"method\": \"POST\"<br>\n            }<br>\n        }<br>\n    ]<br>\n}</p>\n<p>But it seems that it is not the correct. I didn't found any example in the Internet so please help me with that.</p>\n<p>Thanks in advance.</p>",
        "id": 193894324,
        "sender_full_name": "Dimitar Dimitrov",
        "timestamp": 1586870046
    },
    {
        "content": "<p>See <a href=\"http://build.fhir.org/http.html#patch\" title=\"http://build.fhir.org/http.html#patch\">http://build.fhir.org/http.html#patch</a> , you'll need to PATCH a Parameters resource, see <a href=\"http://build.fhir.org/fhirpatch.html\" title=\"http://build.fhir.org/fhirpatch.html\">http://build.fhir.org/fhirpatch.html</a> for example.</p>",
        "id": 193897496,
        "sender_full_name": "René Spronk",
        "timestamp": 1586871446
    },
    {
        "content": "<p>Actually  when I make a direct PATCH request everything is OK. In my case I am trying to put a PATCH request in a transaction bundle and execute it along with other request entries in single atomic transaction request. So as far as I saw I can use a PATCH value in the Bundle.request.method, but how I can specify the content of the PATCH request?</p>",
        "id": 193923260,
        "sender_full_name": "Dimitar Dimitrov",
        "timestamp": 1586881762
    },
    {
        "content": "<p>A Parameters resource.</p>",
        "id": 193988397,
        "sender_full_name": "René Spronk",
        "timestamp": 1586931424
    },
    {
        "content": "<p>If you want to use JSONPatch, you can also use a Binary resource as the container in the bundle:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;resourceType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Bundle&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;transaction&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;entry&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;fullUrl&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Patient/1&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;resource&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;resourceType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Binary&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;contentType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;application/json-patch+json&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;data&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;WyB7ICJvcCI6InJlcGxhY2UiLCAicGF0aCI6Ii9hY3RpdmUiLCAidmFsdWUiOmZhbHNlIH0gXQ==&quot;</span>\n      <span class=\"p\">},</span>\n      <span class=\"nt\">&quot;request&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;method&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;PATCH&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Patient/1&quot;</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre></div>",
        "id": 194017809,
        "sender_full_name": "James Agnew",
        "timestamp": 1586951764
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> . Isn't there any other way, I can set the patch body directly in the bundle? Directly as in [ { \"op\":\"replace\", \"path\":\"/active\", \"value\":false } ] and not the base 64 encoded format?</p>",
        "id": 194357517,
        "sender_full_name": "Sreenivas Shenoy",
        "timestamp": 1587066305
    },
    {
        "content": "<p>No, you can't put a JSON Patch directly into the Bundle because that wouldn't be valid FHIR. The contents of a FHIR Bundle resource needs to be another resource.</p>",
        "id": 194358164,
        "sender_full_name": "James Agnew",
        "timestamp": 1587066671
    },
    {
        "content": "<p>Thanks for the clarification.</p>",
        "id": 194358343,
        "sender_full_name": "Sreenivas Shenoy",
        "timestamp": 1587066750
    },
    {
        "content": "<p>The HAPI test server send the request that the content type is json+fhir, and the console will show that \"Content type 'application/json+fhir;charset=UTF-8' not supported\", how to solvet it? Thank you.</p>",
        "id": 194388568,
        "sender_full_name": "Wizard Wu",
        "timestamp": 1587088493
    },
    {
        "content": "<p>As per the spec (<a href=\"https://build.fhir.org/http.html#mime-type\" title=\"https://build.fhir.org/http.html#mime-type\">https://build.fhir.org/http.html#mime-type</a>), the required mime type is application/fhir+json.  application/json+fhir is not expected to be supported</p>",
        "id": 194389906,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1587090184
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179166-implementers/topic/Transaction.20with.20PATCH.20request/near/194389906\" title=\"#narrow/stream/179166-implementers/topic/Transaction.20with.20PATCH.20request/near/194389906\">said</a>:</p>\n<blockquote>\n<p>As per the spec (<a href=\"https://build.fhir.org/http.html#mime-type\" title=\"https://build.fhir.org/http.html#mime-type\">https://build.fhir.org/http.html#mime-type</a>), the required mime type is application/fhir+json.  application/json+fhir is not expected to be supported</p>\n</blockquote>\n<p>The HAPI test server send the request, and the format of request is application/json+fhir.</p>",
        "id": 194637718,
        "sender_full_name": "Wizard Wu",
        "timestamp": 1587365141
    },
    {
        "content": "<p>This was the recommended mime type at some time in the past, but has long since modified to be fhir+json. HAPI may still support the old / non-recommended format for backwards compatibility reasons, but it should not be sending that mime type anymore, unless perhaps in responses if one used used json+fhir on ones own Accept: header.</p>",
        "id": 194643500,
        "sender_full_name": "René Spronk",
        "timestamp": 1587369837
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191372\">René Spronk</span> <a href=\"#narrow/stream/179166-implementers/topic/Transaction.20with.20PATCH.20request/near/194643500\" title=\"#narrow/stream/179166-implementers/topic/Transaction.20with.20PATCH.20request/near/194643500\">said</a>:</p>\n<blockquote>\n<p>This was the recommended mime type at some time in the past, but has long since modified to be fhir+json. HAPI may still support the old / non-recommended format for backwards compatibility reasons, but it should not be sending that mime type anymore, unless perhaps in responses if one used used json+fhir on ones own Accept: header.</p>\n</blockquote>\n<p>I make a subscription resource, when the HAPI test server always send me the application/json+fhir request, and i cannot support the format, and throw a exception in console. How to do the receive the application/json+fhir? And I set the consumes=\"application/json+fhir\", it does not work.</p>",
        "id": 194645573,
        "sender_full_name": "Wizard Wu",
        "timestamp": 1587371195
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"285899\">@Wizard Wu</span> : Which HAPI server are you using? I'm assuming you send a POST to it with a Subscription resource in the request body. What are the headers you have set on your request?<br>\nThe public HAPI server will only respond with application/json+fhir when you have set the request Accept or Content-Type header to that value.</p>",
        "id": 194655634,
        "sender_full_name": "Mirjam Baltus",
        "timestamp": 1587377655
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span></p>",
        "id": 194680936,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1587392358
    },
    {
        "content": "<p>Hi,<br>\nI'm using the smilecdr server and got the error response for my PATCH request: \"Invalid Content-Type for PATCH operation: application/fhir+json\" The content type application/json+fhir doesn't work neither.<br>\nDoes anyone has an idea what the problem could be?</p>",
        "id": 201258599,
        "sender_full_name": "haex",
        "timestamp": 1592482133
    },
    {
        "content": "<p>are you trying to use fhirpath patch?  i don't think hapi supports that yet</p>",
        "id": 201260368,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1592483270
    },
    {
        "content": "<p>Don't think so. I just try to add some demo data from <a href=\"https://synthetichealth.github.io/synthea/\">https://synthetichealth.github.io/synthea/</a> via postman to our smileserver.</p>",
        "id": 201261006,
        "sender_full_name": "haex",
        "timestamp": 1592483641
    },
    {
        "content": "<p>OK, then you probably shouldn't be using PATCH.  Sounds like you want POST (create) or PUT (create-on-update) as defined at <a href=\"https://www.hl7.org/fhir/http.html\">https://www.hl7.org/fhir/http.html</a> ?</p>",
        "id": 201261167,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1592483746
    },
    {
        "content": "<p>I tried this at first, but there I get the message \"Unable to store a Bundle resource on this server with a Bundle.type value of: transaction\"</p>",
        "id": 201261360,
        "sender_full_name": "haex",
        "timestamp": 1592483856
    },
    {
        "content": "<p>see <a href=\"https://www.hl7.org/fhir/http.html#transaction\">https://www.hl7.org/fhir/http.html#transaction</a></p>",
        "id": 201261925,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1592484182
    },
    {
        "content": "<p>Yeah, I already read this. Guess the smileserver doesn't support this kind of operation.<br>\nThank you for your help!</p>",
        "id": 201262290,
        "sender_full_name": "haex",
        "timestamp": 1592484398
    },
    {
        "content": "<p>Transactions need to be sent to the root endpoint, not the Bundle endpoint</p>",
        "id": 201274702,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1592490208
    },
    {
        "content": "<p>Your are great! Thank you! That was the problem :)</p>",
        "id": 201362188,
        "sender_full_name": "haex",
        "timestamp": 1592553918
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191319\">James Agnew</span> <a href=\"#narrow/stream/179166-implementers/topic/Transaction.20with.20PATCH.20request/near/194017809\">said</a>:</p>\n<blockquote>\n<p>If you want to use JSONPatch, you can also use a Binary resource as the container in the bundle:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;resourceType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Bundle&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;transaction&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;entry&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;fullUrl&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Patient/1&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;resource&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;resourceType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Binary&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;contentType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;application/json-patch+json&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;data&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;WyB7ICJvcCI6InJlcGxhY2UiLCAicGF0aCI6Ii9hY3RpdmUiLCAidmFsdWUiOmZhbHNlIH0gXQ==&quot;</span>\n      <span class=\"p\">},</span>\n      <span class=\"nt\">&quot;request&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;method&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;PATCH&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Patient/1&quot;</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n\n</blockquote>\n<p>Hi James,</p>\n<p>Binary Patch is working without conditional check but it's throwing error, whenever I want to validate before patching the resource like set-IF</p>\n<p>any help will be appreciated..<br>\nThanks<br>\nRamesh</p>",
        "id": 204580908,
        "sender_full_name": "Ramesh jarabana",
        "timestamp": 1595354327
    },
    {
        "content": "<p>I'm looking at implementing transaction bundles using FHIRPath patch and have a use case where we would add or replace an entire resource in the patched resources \"contained\" array/list. With jsonpatch this can be done in a single add/replace operation as the value can be an object/map. This doesn't seem to be possible with FHIRPath patch, which would require an operation for every field in the resource as there is no \"open type\" that can be used with the value to specify the value is a resource, or other complex type other than the few that are specifically listed. <br>\nAm I correct in my above understanding that replacing a resource in the contained array would require multiple operations using fhirpath patch?</p>",
        "id": 234276419,
        "sender_full_name": "Lyndon Howie",
        "timestamp": 1618296546
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 234894373,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1618595165
    },
    {
        "content": "<p>yes that's a limitation that we can't easily address</p>",
        "id": 235106256,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1618784249
    },
    {
        "content": "<p>I’m currently searching in the spec for an answer under which circumstances a PATCH operation within a transaction counts as “failed” and therefore causes the whole transaction to fail. Is it expected to fail the transaction in case the PATCH operation returns a 404 response code (due to the target not being found)?</p>",
        "id": 255768499,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1633104654
    },
    {
        "content": "<p>The description of <a href=\"http://hl7.org/fhir/http.html#patch\">patch</a> includes some hints on when to consider it a failure.  The description of <a href=\"http://hl7.org/fhir/http.html#transaction\">transaction</a> indicates that \"the entire set of changes succeed or fail as a single entity\".</p>\n<p>Edit: fixed from re-reading the question: I would assume any attempt at a PATCH that doesn't result in a success normally on the server (yes, that is pretty unsatisfying).</p>",
        "id": 255770443,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1633105464
    },
    {
        "content": "<p>Agreed, that it’s not the happy path. But given that it’s a conditional Patch, there is maybe some room for interpretation here, e.g. as a client I want to specify that if the resource is present then please PATCH it. Otherwise just inform me about the result.</p>",
        "id": 255771778,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1633106041
    },
    {
        "content": "<p>I just would be in favor of handling it in a common way :)</p>",
        "id": 255771886,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1633106075
    },
    {
        "content": "<p>Yeah - it is tough because a conditional update can serve as a create, but a conditional patch can't be executed.  The note in patch specifies that a conditional patch with no matches fails with a 404, but if you have an idea and want to propose changing it, I'd be curious to see what would work.. it is difficult to distinguish 'worked' from 'not found' in success states.</p>",
        "id": 255773136,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1633106669
    },
    {
        "content": "<p>Our current implementation returns a transaction response bundle where the status is simply 404 but the overall status code is 200. I guess it’s uncommon for a client to check the response code from every entry. That said, if the resource is not referenced anywhere else in the transaction the whole transaction would not need to fail.</p>",
        "id": 255774659,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1633107314
    },
    {
        "content": "<p>But that’s shifting responsibility to the client, so I guess it’s better to let it fail.</p>",
        "id": 255774739,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1633107354
    }
]