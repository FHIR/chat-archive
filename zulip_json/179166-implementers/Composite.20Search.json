[
    {
        "content": "<p>At <a href=\"http://build.fhir.org/search.html#combining\">http://build.fhir.org/search.html#combining</a>, there is example of composite search with multiple parameters <code>GET [base]/Group?characteristic-value=gender$mixed,owner$Eve</code>. Is this returns <code>gender=mixed OR owner=Eve</code> or <code>gender=mixed AND owner=Eve</code>?</p>",
        "id": 222349948,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1610395299
    },
    {
        "content": "<p>Hmm, found an old post <a href=\"#narrow/stream/179166-implementers/topic/Search.20with.20OR.20parameters\">https://chat.fhir.org/#narrow/stream/179166-implementers/topic/Search.20with.20OR.20parameters</a> which indicate this is OR logic. <br>\nI think for AND, I have to say</p>\n<div class=\"codehilite\"><pre><span></span><code> [base]/Group?characteristic-value=gender$mixed&amp;characteristic-value=owner$Eve\n</code></pre></div>\n<p>Is that correct?</p>",
        "id": 222357277,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1610398794
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191372\">@René Spronk</span> . Then the next question is how do I put that AND logic into chaining search. Ex, I would like to get all Conditions for a group that have both mixed gender AND owned by Eve?</p>\n<div class=\"codehilite\"><pre><span></span><code>GET [base]/Condition?subject:Group.characteristic-value=gender$mixed&amp;subject:Group.characteristic-value=owner$Eve\n</code></pre></div>\n<p>Is this correct? Or that returns union of Conditions from two separate groups<br>\nI am little bit confused by the comments that </p>\n<blockquote>\n<p>Note that chained parameters are applied independently to the target resource</p>\n</blockquote>",
        "id": 222443583,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1610464121
    },
    {
        "content": "<p>You may have to test this - there are some edge cases where the logic works in unexpected ways. I'm unable to make a definite statement either way. <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> ?</p>",
        "id": 222446874,
        "sender_full_name": "René Spronk",
        "timestamp": 1610465397
    },
    {
        "content": "<p>Each search criteria separated by &amp; is evaluated independently.  If you want multiple conditions to hold on a chained resource, you need one of the following approaches:</p>\n<ul>\n<li>a composite search criteria on the target resource (e.g. code-value-x on Observation) or you need to look</li>\n<li>use _filter or graphql</li>\n<li>break it into multiple queries</li>\n</ul>",
        "id": 222463104,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1610471359
    },
    {
        "content": "<p>I am trying to figure out the logic behind this.<br>\n<code>Patient?language=FR&amp;language=EN</code> is an INTERSECTION of two criteria (Patient speak both FR and EN)<br>\n<code>Patient?general-practitioner.name=Joe&amp;general-practitioner.address-state=MN</code> is an UNION of the two critera<br>\nWhy there is such difference?</p>",
        "id": 222464933,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1610472080
    },
    {
        "content": "<p>Both criteria are 'and'. The difference is that the 'and' is outside the join, not inside, so the 'general-practitioner' is not necessarily matching the same one in both clauses.</p>",
        "id": 222465464,
        "sender_full_name": "Paul Church",
        "timestamp": 1610472324
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"197072\">@Paul Church</span> Can you explain a little bit more? That has confused me for a long time.</p>",
        "id": 222466346,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1610472692
    },
    {
        "content": "<p>FHIR search doesn't have a way to express <code>Patient?general-practitioner.(name=Joe&amp;address-state=MN)</code></p>",
        "id": 222466484,
        "sender_full_name": "Paul Church",
        "timestamp": 1610472760
    },
    {
        "content": "<p>(leaving aside alternate query formats like _filter)</p>",
        "id": 222466523,
        "sender_full_name": "Paul Church",
        "timestamp": 1610472781
    },
    {
        "content": "<p>If general-practitioner had only one value, then it would be the same.</p>",
        "id": 222466622,
        "sender_full_name": "Paul Church",
        "timestamp": 1610472820
    },
    {
        "content": "<p>The intersection is \"Patients who have a GP with a name of Joe\" and \"Patients who have a GP with an address in Minnesota\", not \"Patients who have a GP whose name is Joe and address is in Minnesota\"</p>",
        "id": 222474289,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1610476176
    },
    {
        "content": "<p>Because patients can have multiple GPs, the reality of that difference can have a significant impact on results</p>",
        "id": 222474390,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1610476211
    },
    {
        "content": "<p>What I am trying to understand is:<br>\nWe know that <code>Patient?language=FR&amp;language=EN</code> results {Patient?language=FR} INTERSECT {Patient?Language=EN}<br>\nthen why <code>Patient?general-practitioner.name=Joe&amp;general-practitioner.address-state=MN</code> does NOT result as {Patient?general-practitioner.name=Joe} INTERSECT {Patient?general-practitioner.address-state=MN}<br>\nIs there anything that I missed here?</p>",
        "id": 222474572,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1610476318
    },
    {
        "content": "<p>it does result in that intersection</p>",
        "id": 222474684,
        "sender_full_name": "Paul Church",
        "timestamp": 1610476374
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> The last sentence is what I missed! A patient could have multiple GP.</p>",
        "id": 222474936,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1610476492
    },
    {
        "content": "<p>Though this does not address the problem on my hand. I need to find conditions for a certain group and each group has multiple characteristics, such as \"gender=male, age in [21,30], location=Chicago\". I need to find a way to do the search. Looks like I have to create an operation to do that.</p>",
        "id": 222476756,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1610477273
    },
    {
        "content": "<p>It's that or _filter or graphql or multiple queries</p>",
        "id": 222486916,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1610481905
    },
    {
        "content": "<p>Another question, the Group.characteristic search parameter is token type. How do I search CodeableConcept with only text, like</p>\n<div class=\"codehilite\"><pre><span></span><code>    &quot;code&quot;:[\n      &quot;text&quot;: &quot;gender&quot;\n    ]\n</code></pre></div>",
        "id": 222500469,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1610488625
    },
    {
        "content": "<p>the 'text' qualifier is supported on token search parameters</p>",
        "id": 222532810,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1610512765
    },
    {
        "content": "<p>so <code>foo:text=gender</code></p>",
        "id": 222532819,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1610512778
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  Could you provide some example or do we have any public server available which supports _filter and which we can explore?  Thanks!!</p>",
        "id": 244448203,
        "sender_full_name": "Chetan Jain",
        "timestamp": 1625069337
    },
    {
        "content": "<p><a href=\"http://test.fhir.org\">test.fhir.org</a> supports _filter.</p>",
        "id": 244467638,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1625077537
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  <a href=\"http://test.fhir.org\">test.fhir.org</a> seems to be down.</p>",
        "id": 244535070,
        "sender_full_name": "Chetan Jain",
        "timestamp": 1625129067
    },
    {
        "content": "<p>Yup, it's down - see <a href=\"https://stats.uptimerobot.com/9DArDu1Jo\">https://stats.uptimerobot.com/9DArDu1Jo</a> for stats.</p>",
        "id": 244549802,
        "sender_full_name": "René Spronk",
        "timestamp": 1625137857
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"248736\">@Mark Iantorno</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 244579060,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1625151178
    },
    {
        "content": "<p>on it</p>",
        "id": 244579827,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1625151475
    },
    {
        "content": "<p>it'</p>",
        "id": 244580176,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1625151593
    },
    {
        "content": "<p>it doesn't appear to be down for me</p>",
        "id": 244580202,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1625151600
    },
    {
        "content": "<p><a href=\"http://test.fhir.org/\">http://test.fhir.org/</a></p>",
        "id": 244580257,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1625151607
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> did you or someone else reset it?</p>",
        "id": 244580328,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1625151630
    },
    {
        "content": "<p>I didn't do anything</p>",
        "id": 244617213,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1625168757
    },
    {
        "content": "<p>I did</p>",
        "id": 244617383,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1625168846
    }
]