[
    {
        "content": "<p>Hi all,  I'm currently looking into filtering our searching on a HAPI backend.  Most of our data consists of custom resource types which I have implemented as profiles on Basic via adding extension to them.  I'm just wondering what the form of the url would be to search for resources which have an extension of a given value.</p>",
        "id": 153862354,
        "sender_full_name": "Andrew Broadbent",
        "timestamp": 1481213179
    },
    {
        "content": "<p>As an example. I have a profile which captures instances of cars passing through speed traps.  It defines that it has the extension 'speed' which contains 'valueFloat' and the extension 'registration' which contains 'valueString'.  How would I search for all resources where speed is greater than 30.0 in HAPI?</p>",
        "id": 153862355,
        "sender_full_name": "Andrew Broadbent",
        "timestamp": 1481213314
    },
    {
        "content": "<p>You would define your own SearchParameter instances and declare that you support those in your Conformance / CapabilityStatement</p>",
        "id": 153862358,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1481213870
    },
    {
        "content": "<p>Are SearchParameters something defined in the fhir spec, or are they just part of HAPI?  I can't seem to find anything in the documentation specifically showing how to declare them.  I was also wondering if defining and using them is something that can be done in data/through the rest api, or does it require specific implementation and recompiling the backend?  The issue I'm having is that we're trying to create a system where end users can effectively define their own resource type, as we can't possibly know all the different kinds of data that they will input.</p>",
        "id": 153862364,
        "sender_full_name": "Andrew Broadbent",
        "timestamp": 1481216118
    },
    {
        "content": "<p>SearchParameter is a resource like any other.  If you have a question about how custom search parameters are supported by HAPI, that's probably best asked on the HAPI stream</p>",
        "id": 153862365,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1481216489
    },
    {
        "content": "<p>Ok no problem.  Is the HAPI stream hosted somewhere else?  Their site links to here, and there's only 3 streams listed here.</p>",
        "id": 153862366,
        "sender_full_name": "Andrew Broadbent",
        "timestamp": 1481216857
    },
    {
        "content": "<p>You may need to click on the settings gear in the left-hand streams list, where you should see HAPI.</p>",
        "id": 153862374,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1481221218
    },
    {
        "content": "<p>you should also look at the example in the spec for this:</p>",
        "id": 153862390,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481224552
    },
    {
        "content": "<p><a href=\"http://build.fhir.org/searchparameter-example-extension.html\" target=\"_blank\" title=\"http://build.fhir.org/searchparameter-example-extension.html\">http://build.fhir.org/searchparameter-example-extension.html</a></p>",
        "id": 153862391,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481224604
    },
    {
        "content": "<p>p.s. \"a profile which captures instances of cars passing through speed traps\" - doesn't really sound much like healthcare to me? Is this a side use, or is your primary application outside healthcare? and if so, why use FHIR?</p>",
        "id": 153862393,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481224754
    },
    {
        "content": "<p>Thanks I'll take a look.  As for the example; it was just the simplest example I could think of that I knew wouldn't be related to any of the existing profiles.  The problem that I have is that I'm trying to port a legacy system and it's data to forge.  In that system users can develop analogue to resource types within there data; i.e. one user creates a type called 'Patient' and then all other users try to map their patient data on to that type.</p>",
        "id": 153862662,
        "sender_full_name": "Andrew Broadbent",
        "timestamp": 1481277068
    },
    {
        "content": "<p>I'm having difficulty using the existing fhir analogues to our types because there is large number of them in the legacy system, and I can't linearly map the values, so developing a script to do it requires a lot of special cases.  My work around has been to develop a profile on basic for each of our types, and emulate the ability to create your own resource types.  I just wanted to avoid people suggesting that I use the existing resource types as, although I intend to, the first pass will be done in this more clunky way as a proof of concept.</p>",
        "id": 153862663,
        "sender_full_name": "Andrew Broadbent",
        "timestamp": 1481277221
    },
    {
        "content": "<p>I wonder if we are able to search resource by providing extension value in the GET url endpoint.</p>",
        "id": 153895973,
        "sender_full_name": "Xin Liu",
        "timestamp": 1499110523
    },
    {
        "content": "<p>see <a href=\"http://hl7.org/fhir/searchparameter.html#srch\" target=\"_blank\" title=\"http://hl7.org/fhir/searchparameter.html#srch\">http://hl7.org/fhir/searchparameter.html#srch</a></p>",
        "id": 153895974,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1499111503
    },
    {
        "content": "<p>Thank you so much for your reply. But do you have a realistic example so that I can know better. For example if I want to search all the Observation resource with gene name TPMT, and this gene name is stored in the observation-geneticsGene profile extension. What will the url endpoint look like by using the Restful GET.</p>",
        "id": 153896101,
        "sender_full_name": "Xin Liu",
        "timestamp": 1499275583
    },
    {
        "content": "<p>To search by an extension, you'll need to define a custom SearchParameter and declare it in your CapabilityStatement.  The name of that parameter is up to you.  So your query would look like this:<br>\n. . .<br>\nGET [base]/Observation?some-custom-search-name=TPMT<br>\n. . .</p>",
        "id": 153896107,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499279588
    },
    {
        "content": "<p>(Assuming that gene name is a string or that the code system is fixed)</p>",
        "id": 153896108,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499279610
    },
    {
        "content": "<p>There is an example in USCore for  a search parameter on the Patient extension Race <a href=\"http://hl7.org/fhir/us/core/SearchParameter-us-core-race.html\" target=\"_blank\" title=\"http://hl7.org/fhir/us/core/SearchParameter-us-core-race.html\">here</a></p>",
        "id": 153896135,
        "sender_full_name": "Eric Haas",
        "timestamp": 1499286342
    },
    {
        "content": "<p>(Which I should update to include the fhirpath)  <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13605\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13605\">GF#13605</a></p>",
        "id": 153896140,
        "sender_full_name": "Eric Haas",
        "timestamp": 1499286627
    },
    {
        "content": "<p>there is no single answer right now for that extension because we do not define a common search parameter for it </p>",
        "id": 153896180,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1499332535
    },
    {
        "content": "<p>I am using the SearchParamDefinition class to create the customer parameter, and there are some example to show how to use to to create the parameter for the resource field, but I cannot get an example for creating the extension parameter. I wonder if I can include the extension.url within the SearchParamDefinition class. If so, where should I place the url to? should I put into the path field of the class?</p>",
        "id": 153896217,
        "sender_full_name": "Xin Liu",
        "timestamp": 1499356570
    },
    {
        "content": "<p>That would be in the xpath</p>",
        "id": 153896225,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499357878
    },
    {
        "content": "<p>But SearchParamDefinition only have path method, not the xpath. I wonder what format that should look like.</p>",
        "id": 153896228,
        "sender_full_name": "Xin Liu",
        "timestamp": 1499358400
    },
    {
        "content": "<p>Are you using STU3?  I see it clearly here: <a href=\"http://hl7.org/fhir/searchparameter.html#resource\" target=\"_blank\" title=\"http://hl7.org/fhir/searchparameter.html#resource\">http://hl7.org/fhir/searchparameter.html#resource</a></p>",
        "id": 153896230,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499359563
    },
    {
        "content": "<p>is in current build too?</p>",
        "id": 153896233,
        "sender_full_name": "Eric Haas",
        "timestamp": 1499359721
    }
]