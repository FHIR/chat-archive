[
    {
        "content": "<p>Hi, I have a couple of CodeSytems that are for now empty of values (content: not-present). These CodeSystem are all in 1 Valueset so the ValueSet contains multiple codesystems but all these codesystems are basically empty.<br>\nI noticed when I use this Valueset in a profile (with whatever binding) and do a test with a validator (I use Hapi): it will always give some 'Warning' to say the codes are not known or something. <br>\nI would actually expect that when a codesystem declares its content as 'not-present' it would always be OK whatever value I would declare in my example to be part of it.<br>\nIs there a better way to say in a profile I want a codeableConcept to use a CodeSystem from a certain list of CodeSystems while ignoring the actual value of the code?</p>",
        "id": 193058073,
        "sender_full_name": "Robin Bosman",
        "timestamp": 1586186645
    },
    {
        "content": "<p>'not-present' means that there are codes in existence, but not exposed in the resource.  That means that from a validation perspective, the validator can't tell whether a given code is a legal code or not.  It doesn't treat them as errors, but it does raise a warning that effectively says \"these codes may or may not be valid - the validator can't tell.  A human should double-check them\"</p>",
        "id": 193058456,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1586186810
    },
    {
        "content": "<p>There is no way to have the validator not raise a warning other than to actually define the codes and have the codes in your instance match one of those codes.</p>",
        "id": 193058564,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1586186852
    },
    {
        "content": "<p>Thanks, that indeed makes a lot of sense!</p>",
        "id": 193059246,
        "sender_full_name": "Robin Bosman",
        "timestamp": 1586187134
    }
]