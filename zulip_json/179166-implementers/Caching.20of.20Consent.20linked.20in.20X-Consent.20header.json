[
    {
        "content": "<p>In Q3, Security and CBCP approved adding an <a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19312&amp;start=0\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19312&amp;start=0\">X-Consent header</a>.  </p>\n<p>The custodian of the data can certainly retrieve the Consent resource from that URI every time it appears in the X-Consent header, but it would be preferable to allow the custodian to trust a cached copy of the Consent.  Of course, the details of the Consent may have changed, so we need a way to expire that cache.  </p>\n<p>In Q3 we discussed two possibilities:<br>\n1. Add an element to the Consent resource indicating for how long it could be cached before it should be retrieved again (similar to the expiration of a Certificate Revocation List).<br>\n2. Include a lifetime or expiration with the X-Consent header.</p>\n<p>The workgroup preferred the latter.  </p>\n<p>I've thought about it more since then and have thought of another possibility:<br>\n3. Include an e-tag with the X-Consent header.</p>\n<p>The custodian could compare the e-tag of its cached version to the e-tag included in the X-Consent header.  At any point that a request comes in with a different e-tag, the custodian knows its copy is stale.</p>\n<p>Bear in mind that the client is obligated to only use the X-Consent header when it knows that the Consent in the URI fulfills the policy requirements for the custodian to share data with it.  </p>\n<p>Security/CBCP folks, what do you think of this option?</p>",
        "id": 155208441,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1547589767
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> <span class=\"user-mention\" data-user-id=\"192587\">@David Pyke</span></p>",
        "id": 155208934,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1547590273
    },
    {
        "content": "<p>interesting... I am happy to hear improvement requests and comments</p>",
        "id": 155209328,
        "sender_full_name": "John Moehrke",
        "timestamp": 1547590628
    },
    {
        "content": "<p>Note that <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> has questioned the use of X-Header -- \" They have officially deprecated that convention. See <a href=\"https://stackoverflow.com/questions/3561381/custom-http-headers-naming-conventions\" target=\"_blank\" title=\"https://stackoverflow.com/questions/3561381/custom-http-headers-naming-conventions\">https://stackoverflow.com/questions/3561381/custom-http-headers-naming-conventions</a> for a good explanation of history.\"   I expect I will just follow the lead of FHIR-I who has used this model quite extensively.</p>",
        "id": 155209357,
        "sender_full_name": "John Moehrke",
        "timestamp": 1547590673
    },
    {
        "content": "<p>Oh, I'd forgotten about that.  Yeah, I saw that too.</p>",
        "id": 155209735,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1547590978
    },
    {
        "content": "<p>RFC6648 has much to say as noted above. That said, of concern may be firewalls and gateways that may now (or at some time in the future) filter out those header elements as non-standard, and therefore subject to risk--rightly so or not. To the extent that this would be standardization by us contrary to the \"do not standardize this\" guidance, this might should give pause.</p>",
        "id": 155210010,
        "sender_full_name": "Matt Blackmon",
        "timestamp": 1547591246
    },
    {
        "content": "<p>if it gets dropped, there is loss of benefit, but I think the X-header uses in FHIR today are there to enable automation. In the case of X-Consent and X-Provenance (the two I know best) the server can always just FAIL the transaction and that failure message (OpertionOutcome) would indicate the lack of the X-header it is looking for... so, this degrades gracefully....... That said, if there is a better mechanism that FHIR-I defines, I am happy to use it.</p>",
        "id": 155212651,
        "sender_full_name": "John Moehrke",
        "timestamp": 1547593844
    },
    {
        "content": "<p>What does the community think about the e-tag improvement?</p>",
        "id": 155212666,
        "sender_full_name": "John Moehrke",
        "timestamp": 1547593864
    },
    {
        "content": "<p>I like it - it's more efficient than a time-out process and also safer</p>",
        "id": 155213100,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1547594311
    }
]