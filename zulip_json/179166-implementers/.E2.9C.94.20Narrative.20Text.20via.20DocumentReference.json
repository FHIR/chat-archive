[
    {
        "content": "<p>We are planning on using the narrative text section via DocumentReference to include a text representation of the contents of the document itself (e.g.  <a href=\"http://content.attachment.data\">content.attachment.data</a> or content.attachment.url).  It appears that the text.status that we'd need to use here is \"additional.\"  </p>\n<p>Would it be best practice (or required) for us to include both the text representation of the document as well as a generated section of the core elements from the content of the resource?  Or is it acceptable to just include the text representation of the document as the narrative text?</p>",
        "id": 239612980,
        "sender_full_name": "James Dinsmore",
        "timestamp": 1621525212
    },
    {
        "content": "<p>Technically what you are proposing is not wrong.  But I think it is the wrong approach.  It is clear from the <a href=\"https://build.fhir.org/documentreference.html\">introduction to resource</a></p>\n<blockquote>\n<p>...The actual content may be inline base64 encoded data or provided by direct reference.</p>\n</blockquote>\n<p>the intent is for the content to be represented in the <code>.content</code> element.  It is required in the <a href=\"http://hl7.org/fhir/us/core/StructureDefinition-us-core-documentreference.html#mandatory-and-must-support-data-elements\">US Core Profile</a>, if planning on conforming to US Core.</p>",
        "id": 239621483,
        "sender_full_name": "Eric Haas",
        "timestamp": 1621528475
    },
    {
        "content": "<p>I agree with Eric. If you just want to publish some text observation. then publish an Observation. DocumentReference is for when you have a document (lower case document to indicate it is really any object that has a mime-type) . It is true that a text file does fall on a boundary between something that can easily be an Observation, and something that is a document. But it is clear that if you use DocumentReference then the document is either base64 encoded or pointed to by a URL (which that URL might be to a FHIR Binary resource).</p>",
        "id": 239631871,
        "sender_full_name": "John Moehrke",
        "timestamp": 1621532654
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> and <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>  we do already include the document's content in the content element (as either base64 or a url out to the Binary resource).  We'd like to also include all the text content of the documents within the narrative text.  This would only be used this way for the \"Common Clinical Notes\" of US Core (<a href=\"http://hl7.org/fhir/us/core/clinical-notes-guidance.html\">http://hl7.org/fhir/us/core/clinical-notes-guidance.html</a>) .  </p>\n<p>Our goal is to use FHIR to build a CCDA (from a server that only has FHIR bundles).  Since the CCDA requires both the narrative text and a link to the base64 we want to populate both within DocumentReference.  On the EHR side both the text version and PDF version of these clinical notes would exist.  </p>\n<p>Is there a better solution to accomplish this goal?</p>",
        "id": 239645238,
        "sender_full_name": "James Dinsmore",
        "timestamp": 1621538449
    },
    {
        "content": "<p>Thanks for the clarification,  I don't see an issue with representing in text in addition to the content element.</p>",
        "id": 239646584,
        "sender_full_name": "Eric Haas",
        "timestamp": 1621539066
    },
    {
        "content": "<p>DocumentReference.text would be the human-readable metadata about the document, wouldn't it? Content belongs in DocumentReference.content, why not add another content element, and have the format as text (or HTML)?</p>",
        "id": 239648486,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1621539960
    },
    {
        "content": "<p>yes, thanks for the clarification.</p>",
        "id": 239651434,
        "sender_full_name": "John Moehrke",
        "timestamp": 1621541235
    },
    {
        "content": "<p>I think it would be fine for the DocumentReference.text to be about the document, not just the DocumentReference.</p>",
        "id": 239651502,
        "sender_full_name": "John Moehrke",
        "timestamp": 1621541265
    },
    {
        "content": "<p>I wouldn't expect anyone to be looking at DocumentReference.text and expecting to find the <strong>text content</strong> of the document. I don't think that is interoperable in any way.</p>",
        "id": 239652524,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1621541715
    },
    {
        "content": "<p>I agree. I expect they will just look for the attachment. The attachment by url with the url holding the fullUrl to a Binary, enables easy GET of the URL. That GET, with appropriate accept headers, will retrieve the text as text. So this is the most useable.</p>",
        "id": 239652839,
        "sender_full_name": "John Moehrke",
        "timestamp": 1621541855
    },
    {
        "content": "<p>Thank you for your feedback.  We plan to add a second content element with the text format.</p>",
        "id": 240100773,
        "sender_full_name": "James Dinsmore",
        "timestamp": 1621884936
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"236436\">James Dinsmore</span> has marked this topic as resolved.</p>",
        "id": 245977391,
        "sender_full_name": "Notification Bot",
        "timestamp": 1626277067
    }
]