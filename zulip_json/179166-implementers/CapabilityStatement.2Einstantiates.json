[
    {
        "content": "<p>The instantiates element of CapabilityStatement indicates \"another capability statement this implements\". Does this apply to both instance and requirements kinds of CapabilityStatements? I'd like to be able to build a complex requirement CapabilityStatement out of simpler building blocks, and this looks like the way to do it, but I  want to confirm.</p>",
        "id": 153937338,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1518608766
    },
    {
        "content": "<p>yes</p>",
        "id": 153937341,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518609270
    },
    {
        "content": "<p>Thanks.</p>",
        "id": 153937347,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1518610732
    },
    {
        "content": "<p>So, for FHIR terminology servers, we will specify a reference to the server's TerminologyCapabilities statement resource in CapabilityStatement.instantiates, and the interaction to access all of it continues to be /metadata.  Correct?</p>",
        "id": 153937348,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1518611745
    },
    {
        "content": "<p>well, from /metadata you get back a conformance statement that has instantiates, and then you have to chase that. But my server fully populates the conformance statement, so you don't have to chase it - you can magically recognise 'a terminology server' or look through the details</p>",
        "id": 153937349,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518611912
    },
    {
        "content": "<p>Sure.  I just scanned your r3 capability statement (r4 seems to be down right now), and I think you still would need to chase it to get the terminology specific details, for individual code systems, etc.?</p>",
        "id": 153937351,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1518613100
    },
    {
        "content": "<p>oh yes you'd still need the terminology capabilities (which we still haven't defined how to do). but instantiates is something else again</p>",
        "id": 153937352,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518614066
    },
    {
        "content": "<p>For StructureDefs, we talk about snapshot and diffs. Is the /metadata ConformanceStatement a snapshot (flattens all \"instantiates\" into the result) or a diff (only shows what isn't in the \"instantiates\")? Are both approaches (and others that might be in between) permitted?</p>",
        "id": 153937353,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1518614240
    },
    {
        "content": "<p>OK.  I was probably starting to read \"Reference to a canonical URL of another CapabilityStatement that this software implements or uses\" a little more broadly than you were intending, and we might want to clarify a bit more what the \"something else again\" exactly is.</p>",
        "id": 153937357,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1518614898
    },
    {
        "content": "<p>The question that Elliot asked was in support of IHE mCSD profile (mostly a provider directory). That profile has many combinatorics so we needed to leverage instantiates to eliminate repetition of the same requirements. So we ended up with a huge set of CapabilityStatements that have various levels of nesting to show all the combinations of Actors/Options.   See <a href=\"https://simplifier.net/mCSD\" target=\"_blank\" title=\"https://simplifier.net/mCSD\">https://simplifier.net/mCSD</a></p>",
        "id": 153938587,
        "sender_full_name": "John Moehrke",
        "timestamp": 1519052025
    },
    {
        "content": "<blockquote>\n<p>The question that Elliot asked was in support of IHE mCSD profile (mostly a provider directory). That profile has many combinatorics so we needed to leverage instantiates to eliminate repetition of the same requirements. So we ended up with a huge set of CapabilityStatements that have various levels of nesting to show all the combinations of Actors/Options.   See <a href=\"https://simplifier.net/mCSD\" target=\"_blank\" title=\"https://simplifier.net/mCSD\">https://simplifier.net/mCSD</a></p>\n</blockquote>\n<p>I do recognize that requirement, esp. where the same set of capabilities repeat for a specific set of resources. Now, it's copy &amp; paste....</p>",
        "id": 153938593,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1519053255
    },
    {
        "content": "<p>yes, the instantiates seems to have eliminated that copy and paste problem.  It however doesn't show up well in Simplifier.  In the case of StructureDefinitions, Simplifier pulls in the baseDefinition; it doesn't do the same for CapabilityStatement.instantiates...... Thus one can get a nice visualization of StructureDefinition result... but the same is not true of CapabilityStatement (in requirements kind)... I think I reported this through Simplifier feedback as a improvement opportunity.</p>",
        "id": 153938603,
        "sender_full_name": "John Moehrke",
        "timestamp": 1519055179
    },
    {
        "content": "<p>No, for StructureDefinition the spec specifically describes how to create a \"snapshot\" from a differential (a process which includes definitions from the baseDefinition).  For CapabilityStatement, we don't really have something comparable, there's no \"differential\" notation for a CapabilityStatement.    But I can see where it would be nice that the capabilities of a CapabilityStatement (CS) \"A\", which derives from a CS \"B\" would \"override\" stuff in \"B\".  And you could produce a combination of both.   When doing that, I am pretty sure there are some subtleties (repeating elements come to mind: does \"A\"'s elements get added to \"B\"s, or do they replace them)?.....</p>",
        "id": 153938605,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1519056938
    },
    {
        "content": "<p>isn't that analysis necessity speak for the need itself?</p>",
        "id": 153938607,
        "sender_full_name": "John Moehrke",
        "timestamp": 1519057478
    },
    {
        "content": "<p>does Forge have a CapabilityStatement editor does it?</p>",
        "id": 153938665,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519069698
    },
    {
        "content": "<p>No, it does not yet. CapabilityStatement has grown enough in complexity that an editor for it is becoming a feature....</p>",
        "id": 153938705,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1519079191
    },
    {
        "content": "<p>great. cause the FHIR Toolkit does include an editor for it</p>",
        "id": 153938706,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519079277
    },
    {
        "content": "<p>The FHIR Toolkit is what I use and recommend in IHE for CapabilityStatement. spreading the love around to all the tools for one thing or the other</p>",
        "id": 153938953,
        "sender_full_name": "John Moehrke",
        "timestamp": 1519137542
    },
    {
        "content": "<p>I'm wondering if anyone is able to run the FHIR Toolkit on their macOS. My MacBook is running on High Sierra 10.13.3 and I get an error when trying to open FHIRToolkit.app (v0.0.40): The application “FHIRToolkit.app” can’t be opened.</p>",
        "id": 153943548,
        "sender_full_name": "Igor Sirkovich",
        "timestamp": 1520628613
    },
    {
        "content": "<p>do you get any additional information? is there a security problem?</p>",
        "id": 153943568,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1520638438
    },
    {
        "content": "<p>No, no additional information, no security issues (it doesn't appear under the security setting as a blocked app).</p>",
        "id": 153943745,
        "sender_full_name": "Igor Sirkovich",
        "timestamp": 1520836004
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I browsed the package content of the FHIRToolkit.app  and noticed that FHIRToolkit.app/Contents/MacOS/FHIRToolkit file didn't have executable permissions. I have used chmod to make it executable and the app is working now. I think this is something you would want to add to your Build process.</p>",
        "id": 153943850,
        "sender_full_name": "Igor Sirkovich",
        "timestamp": 1520872076
    },
    {
        "content": "<p>I don't know how to add it to my build process, since the build process runs on windows.</p>",
        "id": 153943928,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1520883352
    },
    {
        "content": "<p>I see. In this case, maybe it would be worthwhile to add a note at <a href=\"http://healthintersections.com.au/FhirServer\" target=\"_blank\" title=\"http://healthintersections.com.au/FhirServer\">http://healthintersections.com.au/FhirServer</a> instructing Mac users to add executable permission to the FHIRToolkit.app/Contents/MacOS/FHIRToolkit file?</p>",
        "id": 153943930,
        "sender_full_name": "Igor Sirkovich",
        "timestamp": 1520883531
    },
    {
        "content": "<p>I'll see what I can do. Whenever I've downloaded on OSX, it's prompted me to do it</p>",
        "id": 153943932,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1520883618
    },
    {
        "content": "<p>I assume this behavior might depend on the version of macOS.</p>",
        "id": 153943935,
        "sender_full_name": "Igor Sirkovich",
        "timestamp": 1520883826
    },
    {
        "content": "<p>perhaps. I'll have to look into this</p>",
        "id": 153943939,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1520883983
    },
    {
        "content": "<p>As of 5/22 the Mac version is missing the FHIRToolkit file all together (at least that was the result after I unzipped it)</p>",
        "id": 153964128,
        "sender_full_name": "Kevan Riley",
        "timestamp": 1527013325
    },
    {
        "content": "<p>yes. sorry.  building it is painful and it's on my agenda for later this week :-(</p>",
        "id": 153964130,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527013589
    }
]