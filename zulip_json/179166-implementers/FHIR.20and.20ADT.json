[
    {
        "content": "<p>Does anyone have a thought on how to use FHIR to get ADT events from a FHIR enabled HIE/EHR?</p>",
        "id": 153896536,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499722423
    },
    {
        "content": "<p>Well, you could do FHIR messaging much as v2 works if you really need event-based processing.  Alternatively, you could just subscribe and receive updates to relevant Encounter, Patient, Account, EpisodeOfCare and other ADT-related resources.</p>",
        "id": 153896538,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499722702
    },
    {
        "content": "<p>Can you point me to how to subscribe?  I'm wading through the docs but haven't tied that in yet.</p>",
        "id": 153896539,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499722808
    },
    {
        "content": "<p><a href=\"http://hl7.org/fhir/subscription.html\" target=\"_blank\" title=\"http://hl7.org/fhir/subscription.html\">http://hl7.org/fhir/subscription.html</a></p>",
        "id": 153896541,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499722898
    },
    {
        "content": "<p>Thanks Lloyd - I'll start here.   We're in green field land in our POC, so I'm still trying to determine the best pattern for integration (thus my wild questions).  If we assume that the FHIR server implementation is a DSTU2 - would you think polling for data to be the appropriate pattern, or subscriptions / messaging?</p>",
        "id": 153896542,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499723013
    },
    {
        "content": "<p>Our app needs to be able to bring data from the FHIR enabled EHR back to us to be then processed further downstream.  So I'm interested in the mechanics of accessing and retrieval more than storage and transformation (except where a certain Resource is involved).</p>",
        "id": 153896543,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499723120
    },
    {
        "content": "<p>Pure REST will require less negotition.  Messaging gives you more context - you know it was a patient move vs. discharge vs. leave of absense by looking at the event code instead of needing to compare the old data with the new.  It's also more \"Traditional\" for ADT information.  It does carry more overhead and won't be nearly as widely supported.  RESTful polling in FHIR is pretty easy - you just do a query with _lastupdated=gt[timestamp of whenever you last asked].  Only issue is the load on the server from continuous queries.  Subscription does exist in DSTU2, so it's still an option there.  It's more complex architecturally, but reduces the communication load.</p>",
        "id": 153896545,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499723371
    },
    {
        "content": "<p>I'd certainly chat with your communication partners and see what their capabilities/preferences are.</p>",
        "id": 153896546,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499723391
    },
    {
        "content": "<p>Agreed - we're ahead of contracting / negotiations with our partner right now, so we're trying to determine what \"would be appropriate\" when we sit down with them - as well as to begin writing our bare skeleton service interactions (with resource models).  My director asked me to produce \"Models for all traditional ADT transactions in FHIR - with request + response examples\".... today .... yesterday .....</p>",
        "id": 153896547,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499723775
    },
    {
        "content": "<p>I've looked at some HL7v2 -&gt; FHIR ADT blogs and thoughts, but I was truly hoping to find a reference server I could tease some request/response objects out of</p>",
        "id": 153896549,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499723933
    },
    {
        "content": "<p>Reading the draft from the project, it is a push to us of data -s o this must be subscription or messaging - so I'll focus on Message and their related bundles.</p>",
        "id": 153896551,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499724475
    },
    {
        "content": "<p>Regarding the documentation <a href=\"http://hl7.org/fhir/subscription.html\" target=\"_blank\" title=\"http://hl7.org/fhir/subscription.html\">http://hl7.org/fhir/subscription.html</a> in the context of Subscription.criteria, this document mentions about search criteria which is very specific to filter certain records and looks  like we are subscribing to specific patient record. But for subscribing to FHIR Resource, it would be best to accept URI like Patient?name  which indicates generic subscription for any patient name change where as  Patient?name=san,  indicate if patient name san changes then trigger the message, which is little bit confusing.</p>",
        "id": 153896554,
        "sender_full_name": "sanjay sao",
        "timestamp": 1499725146
    },
    {
        "content": "<p>Thanks Sanjay - I was noodling over that one just now.  So let's say that I have a set of patients of which I wish to receive ADT information via subscription, my criteria would be individual, and more like this? (Per patient I care to get notified of)?<br>\n\"criteria\": \"Patient?id=abcdef12345\"</p>",
        "id": 153896555,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499725456
    },
    {
        "content": "<p>Or would I need to tag each Resource which may be changed by an ADT event? (Patient, Encounter, Observation, Procedure, Condition) etc?</p>",
        "id": 153896556,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499725547
    },
    {
        "content": "<p>(And that's just ADT.A01)</p>",
        "id": 153896557,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499725573
    },
    {
        "content": "<p>(Reading this blog: <a href=\"https://fhirblog.com/2015/03/18/more-fhir-messaging-adt-messages/\" target=\"_blank\" title=\"https://fhirblog.com/2015/03/18/more-fhir-messaging-adt-messages/\">https://fhirblog.com/2015/03/18/more-fhir-messaging-adt-messages/</a>)</p>",
        "id": 153896558,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499725668
    },
    {
        "content": "<p>what I think that both use case of 1) \"criteria\": \"Patient?id=abcdef12345\" and 2) tagging each Resource, is valid based on subscriber requirement. In our case, application wants to listen each Resource changes to reflect the patient's current status and take some critical decision at application level. Thank you Ken for the FHIR blog URL, I will go through in more detail to understand David's perspective.</p>",
        "id": 153896560,
        "sender_full_name": "sanjay sao",
        "timestamp": 1499726818
    },
    {
        "content": "<p>Got it - thanks Sanjay!</p>",
        "id": 153896562,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499729340
    },
    {
        "content": "<p>When we did this, we started with the HL7v2 feed coming from our PAS and converted it to FHIR. We didn't use messaging, so a ADT A28 Patient update became a PUT Patient (so we just used the PID segment). We did pass it through a subscription service.</p>",
        "id": 153896571,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1499752689
    },
    {
        "content": "<p>Could you use a store and notify pattern? So for ADT_A01, you send a FHIR Encounter, if a system wants extra information (the other segments) they can look it up. The FHIR Encounter is a trigger, systems don't get sent information they would have discarded and it's less traffic on the network. <a href=\"https://developer.nhs.uk/library/architecture/integration-patterns/store-and-notify/\" target=\"_blank\" title=\"https://developer.nhs.uk/library/architecture/integration-patterns/store-and-notify/\">https://developer.nhs.uk/library/architecture/integration-patterns/store-and-notify/</a></p>",
        "id": 153896572,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1499753012
    },
    {
        "content": "<p>We're thinking of using a middle-ware vendor for that kind of pattern, yes.  For now, however - I'm still at a bare bones basic level trying to determine which Resources would be involved - and get a sample bundle notification that would be \"like\" ADT^A01 so I can then mock some data and begin testing my ingest endpoint while contracting is working with the vendor.</p>",
        "id": 153896594,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499791071
    },
    {
        "content": "<blockquote>\n<p>When we did this, we started with the HL7v2 feed coming from our PAS and converted it to FHIR. We didn't use messaging, so a ADT A28 Patient update became a PUT Patient (so we just used the PID segment). We did pass it through a subscription service.</p>\n</blockquote>\n<p>We \"could\" let them push HL7v2 to us, but our vendor purports to support FHIR - and we'd much rather move in that direction, so I'm still looking to cobble together a sample data payload (Bundle / Message) that would be generated by a FHIR enabled ADT^A01 (and more) transaction.</p>",
        "id": 153896600,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499792793
    },
    {
        "content": "<p>I may try to add a subscription to Grahame's server and see what happens when I add a Patient Encounter</p>",
        "id": 153896601,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499792859
    },
    {
        "content": "<p>Seems the most straightforward way - though I can't have it hit my endpoint inside my firewall, so ...</p>",
        "id": 153896602,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499792887
    },
    {
        "content": "<p>Dang ... The 2 test servers I use don't seem to have any subscriptions (though one says it has some, they are 401 MISSING)</p>",
        "id": 153896607,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499794862
    },
    {
        "content": "<p>Now I'm confused -- What are the different use cases for MessageHeader vs MessageDefinition?</p>",
        "id": 153896615,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499799207
    },
    {
        "content": "<p>MessageDefinition describes a kind of message that can exist - what the event code is, what content is sent within it, what types of responses are possibles, etc.  MessageHeader appears at the start of a particular message instance.  It refers to the event code from a MessageDefinition.  It contains a set of resources that complies with the GraphDefinition specified by the MessageHeader.  It may be responded to with a message that complies with one of the MessageDefinition's allowed responses.</p>",
        "id": 153896624,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499802477
    },
    {
        "content": "<p>So essentially MessageDefinition = definition.  MessageHeader = header for an instance</p>",
        "id": 153896625,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499802493
    },
    {
        "content": "<p>I don't see that relationship in the UML/Structure definitions, and I don't see an example where a MessageHeader and a MessageDefinition coexist in the same Bundle/space - so I'm not seeing the relationship.</p>",
        "id": 153896644,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499809070
    },
    {
        "content": "<p>I did find that MessageHeader has exactly what I was hoping to find for a start:<br>\nCode    Display Definition<br>\nadmit   Admit   The patient has been admitted.<br>\ndischarge   Discharge   The patient has been discharged.<br>\nabsent  Absent  The patient has temporarily left the institution.<br>\nreturn  Returned    The patient has returned from a temporary absence.<br>\nmoved   Moved   The patient has been moved to a new location.<br>\nedit    Edit    Encounter details have been updated (e.g. to correct a coding error).</p>",
        "id": 153896645,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499809169
    },
    {
        "content": "<p>Admit/Discharge/Moved (Transferred)</p>",
        "id": 153896646,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499809189
    },
    {
        "content": "<p><a href=\"http://build.fhir.org/valueset-message-reason-encounter.html\" target=\"_blank\" title=\"http://build.fhir.org/valueset-message-reason-encounter.html\">http://build.fhir.org/valueset-message-reason-encounter.html</a></p>",
        "id": 153896647,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499809238
    },
    {
        "content": "<p>I'd love to figure this pattern out.</p>",
        "id": 153896648,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499809686
    },
    {
        "content": "<p>Or is a \"MessageDefinition\" what we put on the server to describe what \"MessageHeader\" + \"Events\" can be transported?  As it's a level 0 artifact, is it even needed if the server can produce MessageHeader[Events]?</p>",
        "id": 153896650,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499810360
    },
    {
        "content": "<p>MessageDefinition would almost never appear in the same bundle as MessageHeader.  MessageDefinition would appear in implementation guides - alongside profiles, operation definitions, value sets and other implementation guidance.  MessageHeader appears at the start of instances.</p>",
        "id": 153896655,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499812973
    },
    {
        "content": "<p>I think I start to see - though not clearly yet</p>",
        "id": 153896656,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499812996
    },
    {
        "content": "<p>The system should ideally be able to expose MessageDefinitions along with its CapabilityStatement.</p>",
        "id": 153896657,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499812999
    },
    {
        "content": "<p>But no need to share them other than that.  And it's not a strict requirement - especially if the system doesn't expose a RESTful interface.</p>",
        "id": 153896658,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499813025
    },
    {
        "content": "<p>Sweet.  We expect it to be a push integration, where we ACCEPT FHIR bundles.</p>",
        "id": 153896659,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499813058
    },
    {
        "content": "<p>SO I don't see us doing RESTful turnarounds</p>",
        "id": 153896660,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499813067
    },
    {
        "content": "<p>(yet)</p>",
        "id": 153896661,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499813075
    },
    {
        "content": "<p>Well, if you're receiving the content over http using the $process-message operation, then you sort of have a RESTful interface</p>",
        "id": 153896664,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499813206
    },
    {
        "content": "<p>The direction we're being given right now is to build a simple TypeScript service endpoint which can parse a bundle as a place for a party to push a bundle to.  I concur that it would be nice to have it be a FHIR RESTful endpoint, but the developer at the helm wants to do JSON parsing and pluck details.</p>",
        "id": 153896666,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499813343
    },
    {
        "content": "<p>(Not necessarily a bundle - no direction there actually, just \"receive FHIR data\"</p>",
        "id": 153896668,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499813390
    },
    {
        "content": "<p>This will all clarify once we get into real talks with the vendor</p>",
        "id": 153896669,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499813407
    },
    {
        "content": "<p>Well, if you're going to be a valid FHIR message, it'll have to be a Bundle.</p>",
        "id": 153896670,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499813416
    },
    {
        "content": "<p>How you transport it is entirely up to you though.</p>",
        "id": 153896672,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499813429
    },
    {
        "content": "<p>Right.  So a bundle of \"FHIR Stuff that describes ADT\" - which I'm trying to clarify, works for me.  Inside that bundle it gets murky as to what would be inside - as a usual ADT transaction has Patient demo, Source (hospital/practice), Encounter/event detals, discharge summary, clinical data etc..</p>",
        "id": 153896674,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499813580
    },
    {
        "content": "<p>So - I'm trying to line that up to FHIR resources so I can make a best guess as to what will be in the Message/Event</p>",
        "id": 153896675,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499813606
    },
    {
        "content": "<p>The first message in the Bundle would be MessageHeader.  MessageHeader.focus would point to the focus (or occasionally focuses) of the event.  So for an admit or discharge, it would be a single Encounter focus.  For merge Patient or merge Account, there would be two focuses.  Everything else that was relevant and needed to be sent to allow the receiver to process the message would be navigable either to or from the focal resource.  So, for example, if the focus was Encounter, you might also include the Encounter.subject Patient, the various Practitioners, the Location, the Organization, some Condition instances, etc.  How much or how little goes into the messge is determined by the GraphDefinition pointed to by MessageDefinition.  (Which is in turn determined by the use-case for the exchange and the needs of the communicating partners.)</p>",
        "id": 153896677,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499814217
    },
    {
        "content": "<p>Lloyd - you're my hero.  That cleared the cobwebs nicely!</p>",
        "id": 153896681,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499815427
    },
    {
        "content": "<p>Glad to help :)  If you have suggestions about how to improve the existing documentation to make it clearer, don't be afraid to submit a change request.  (Including specific proposed wording changes is always appreciated :))</p>",
        "id": 153896683,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499815878
    },
    {
        "content": "<p>I will - I'm gathering a ton of information today, hopefully I can get to a point where I'm useful</p>",
        "id": 153896688,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499816523
    },
    {
        "content": "<p>I'm not sure FHIR messaging is appropriate for system to system communication within an organisation. For two reasons, it's just copying HL7v2 and so we have solutions and RESTfulAPI (ResourceAPI) would be a more appropriate be a better solution. If you need to update Patient demographics, why send details of the clinician, similarly if a Patient has attended a clinic - why do I need to send out their address???</p>",
        "id": 153896710,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1499846612
    },
    {
        "content": "<p>There is a stream dedicated to \"v2 to FHIR\"</p>",
        "id": 153896722,
        "sender_full_name": "John Moehrke",
        "timestamp": 1499862391
    },
    {
        "content": "<p>This is more messagingAPI vrs resourceAPI</p>",
        "id": 153896723,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1499862648
    },
    {
        "content": "<p>Messaging can be asynchronous, allows indirect routing, supports finer-grained event declaration (and thus gives the recipient more information about what's going on), allows interoperability with a smaller number of transmissions (though those will be larger transmissions) and - perhaps most importantly - does not require independent, maintained identity of all resources.</p>",
        "id": 153896727,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499868938
    },
    {
        "content": "<p>If you're talking to a system with a v2 or other messaging back-end, it may be very difficult for that system to expose its information RESTfully because it doesn't have identifiers on all of its data elements and may not be set up in a way that allows RESTful query.  However, sharing its information in FHIR syntax may allow the data to more easily be used with FHIR down-stream, lets you take advantage of modern syntaxes &amp; tools, lets you use FHIR's conformance capabilities, etc.</p>",
        "id": 153896728,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499869078
    },
    {
        "content": "<p>In general, I agree that with FHIR there's a preference/bias towards using REST rather than messaging because messaging requires more up-front negotiation with communication partners to enable interoperability to occur.  But there are definitely reasons systems will need to use a messaging approach.</p>",
        "id": 153896729,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499869137
    },
    {
        "content": "<p>In our case, it's a push from a vendor who is packaging it as FHIR - not a full FHIR server implementation, so we don't have a RESTFul option here.</p>",
        "id": 153896748,
        "sender_full_name": "Ken Melms",
        "timestamp": 1499875700
    },
    {
        "content": "<p>Implementation partner or lead architect fiat is definitely something that will influence what communication paradigm gets used too :)</p>",
        "id": 153896754,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1499877440
    },
    {
        "content": "<p>hello <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> , if i want to send a bundle with MessageHeader and other related resource to hapi-fhir server using Advance Rest Client / PostMan. what is the url? i'm confusing alot . could  you please help.<br>\nThank you.</p>",
        "id": 153897052,
        "sender_full_name": "Jayashree Surnar",
        "timestamp": 1500290984
    },
    {
        "content": "<p>If you're sending a Bundle, you'll have to post to /Bundle.  So <a href=\"http://fhirtest.uhn.ca/baseDstu3/Bundle\" target=\"_blank\" title=\"http://fhirtest.uhn.ca/baseDstu3/Bundle\">http://fhirtest.uhn.ca/baseDstu3/Bundle</a>.  I don't think hapi supports the <a href=\"http://fhirtest.uhn.ca/baseDstu3/$process-message\" target=\"_blank\" title=\"http://fhirtest.uhn.ca/baseDstu3/$process-message\">http://fhirtest.uhn.ca/baseDstu3/$process-message</a> operation.</p>",
        "id": 153897083,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1500304211
    },
    {
        "content": "<p>thank you <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> , actually i want to test whether  hapi fhir server is able to handle <strong>fhir Messaging</strong> or not. for that i have gone through the messaging doc given in fhir (<a href=\"http://build.fhir.org/messaging.html\" target=\"_blank\" title=\"http://build.fhir.org/messaging.html\">http://build.fhir.org/messaging.html</a>), but I was not clear how to test using ARC/Postman.</p>",
        "id": 153897170,
        "sender_full_name": "Jayashree Surnar",
        "timestamp": 1500352994
    },
    {
        "content": "<p>Well, you can try posting something to $process-message, but my guess is it won't work.  Messaging requires mutual agreement between the systems about what's allowed to be in an inbound message, what the server should do in response and what should be in the response message.  The test servers don't have any such agreements in place, so they can't really generate appropriate responses.  The best they could potentially do is allow you to post stuff to $process-message and throw it away, but that's not terribly helpful.</p>",
        "id": 153897172,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1500354699
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  thank you somuch</p>",
        "id": 153897173,
        "sender_full_name": "Jayashree Surnar",
        "timestamp": 1500354896
    },
    {
        "content": "<p>I've been using middleware (e.g. Apache Camel) to breakdown the message into individual RESTful calls to HAPI.</p>",
        "id": 153897174,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1500357639
    }
]