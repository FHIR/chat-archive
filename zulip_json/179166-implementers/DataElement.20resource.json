[
    {
        "content": "<p>If I have a <code>DataElement</code> resource, how should I map that to an <code>ElementDefinition</code> instance inside a <code>StructureDefinition</code>?</p>",
        "id": 153832248,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1465525680
    },
    {
        "content": "<p>Or vice versa, or both?</p>",
        "id": 153832249,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1465525700
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> - you've done the reverse...?</p>",
        "id": 153832255,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465528376
    },
    {
        "content": "<p>Actually, I haven't.  My mappings have been to Questionnaire.  At the moment, we use either an extension on the Questionnaire question or a ConceptMap (which the Questionnaire points to with an extension)</p>",
        "id": 153832256,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1465529117
    },
    {
        "content": "<p>So, if I want my <code>ElementDefinition</code> to say \"I'm an instance of that <code>DataElement</code> over there\", I need to use an extension in the <code>ElementDefinition</code>?  </p>",
        "id": 153832257,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1465529762
    },
    {
        "content": "<p>I assume that since this is technically not terminology -- albeit very similar -- a <code>ConceptMap</code> would not really carry the right semantics.  Furthermore, how would the <code>StructureDefinition</code> know about the <code>ConceptMap</code>?</p>",
        "id": 153832258,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1465529790
    },
    {
        "content": "<p>ConceptMap can be used to map structures in addition to code systems.  And you'd have to put an extension on the StructureDefinition.  Whether you go for inline mappings or an external mapping depends on how you want to maintain the mappings.</p>",
        "id": 153832259,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1465530058
    },
    {
        "content": "<p>Right.  Just to confirm: inline mappings would require an extension on the <code>ElementDefinition</code> and external mappings require a <code>ConceptMap</code> and an extension on the <code>StructureDefinition</code>.  Are there already definitions for such extensions?</p>",
        "id": 153832260,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1465530213
    },
    {
        "content": "<p>There are not.  Though we could take the existing extensions on Questionnaire and generalize them to work for StructureDefinition too.  (We'd have to figure out a new home for them though.)</p>",
        "id": 153832262,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1465531451
    },
    {
        "content": "<p>What would be the meaning of more than one <code>element</code> in a <code>DataElement</code>?</p>",
        "id": 153832605,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1465860072
    },
    {
        "content": "<p>complex data element. which are common in some uses</p>",
        "id": 153832606,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465860095
    },
    {
        "content": "<p>Similar to our data group?</p>",
        "id": 153832607,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1465860121
    },
    {
        "content": "<p>Or ISO 11179 object?</p>",
        "id": 153832608,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1465860140
    },
    {
        "content": "<p>I don't think so. It's a matter of perspective though. the idea is 'indivisability'</p>",
        "id": 153832609,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465860146
    },
    {
        "content": "<p>Okay.  We do use sometimes create data groups to capture indivisibility, but not always.  More often they are the equivalent of a UML class or ISO 11179 object.</p>",
        "id": 153832613,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1465860238
    },
    {
        "content": "<p>Incidentally, why doesn't <code>BackboneElement</code> map to an ISO 11179 object instead of a data element?</p>",
        "id": 153832615,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1465860277
    },
    {
        "content": "<p>I don't understand the question</p>",
        "id": 153832619,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465860351
    },
    {
        "content": "<p>In ISO 11179 data elements are not made up of other data elements, so something like <code>event</code> in <code>AllergyIntolerance</code>, which is typed as a <code>BackboneElement</code> cannot be a data element; it is more properly an object (in 11179-speak).</p>",
        "id": 153832622,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1465860467
    },
    {
        "content": "<p>that's a differentiation that we make a mess of everywhere. a non-conformance with 11179, if you want</p>",
        "id": 153832627,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465860598
    },
    {
        "content": "<p>That's fine; it can be a handy simplification.  I was just curious.</p>",
        "id": 153832628,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1465860637
    }
]