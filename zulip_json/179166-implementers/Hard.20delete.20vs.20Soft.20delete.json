[
    {
        "content": "<p>Hi implementers</p>\n<p>For Deleting resources at the REST API level, do you fully nuke the corresponding database record (after versioning and whatnot)? Or use a \"soft deleted\" flag on the record? What are the pros and cons for either?</p>\n<p>Thanks!</p>",
        "id": 175261287,
        "sender_full_name": "Shane O'Neill",
        "timestamp": 1568048506
    },
    {
        "content": "<p>There are probably business rules (nd country privacy guidelines) that come into play for making this decision.   If the country privacy guidelines require that you remove all remnants of the data when requested by the patient, then  soft delete might not be sufficient.   Also, what if you had data analytics that need this deleted data for its algorithms?</p>",
        "id": 175263448,
        "sender_full_name": "John Silva",
        "timestamp": 1568049954
    },
    {
        "content": "<p>privacy-wise it may be that you don't <em>have</em> to delete, you may only de-identify. your mileage may vary...</p>",
        "id": 175263610,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1568050079
    },
    {
        "content": "<p>on a functional level, my take is that that a request to delete would be put into a decision machine which then decides, based on policies, what will happen. Perhaps this should be at a higher level than the FHIR API, or perhaps this variable behaviour should be considered on the FHIR API. Not sure if we can establish guidance there</p>",
        "id": 175263899,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1568050227
    },
    {
        "content": "<p>There is no single solution to a general question about delete... One must consider the regulated requirements. One must consider the workflow requirements. One must consider the intended-use requirements. If the server is suporting Treatment, then the delete is likely nothing more than setting the .status element to inactive. However if the server is supporting a Provider Directory, then the delete could be a complete delete with just an audit trail.</p>",
        "id": 175263973,
        "sender_full_name": "John Moehrke",
        "timestamp": 1568050284
    },
    {
        "content": "<p>so the answer is... it depends</p>",
        "id": 175263984,
        "sender_full_name": "John Moehrke",
        "timestamp": 1568050293
    },
    {
        "content": "<p>All of which is the long way of saying \"It's a policy decision\"</p>",
        "id": 175265704,
        "sender_full_name": "David Pyke",
        "timestamp": 1568051482
    },
    {
        "content": "<p>FWIW- As far as HAPI is concerned, DELETE is always a soft delete out of the box. Hard delete is provided by a separate operation called <code>$expunge</code>. I have heard of people using interceptors to trigger an expunge after a delete though, so you can do either depending on what you need.</p>",
        "id": 175273243,
        "sender_full_name": "James Agnew",
        "timestamp": 1568056231
    },
    {
        "content": "<p>the API allows for either since this is (as said) a policy decision. But I personally strongly recommend never actually deleting anything (and have worked on an insert only database in the past)</p>",
        "id": 175278222,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568059740
    },
    {
        "content": "<p>I also use an append-only database for FHIR in my <a href=\"https://github.com/life-research/blaze\" target=\"_blank\" title=\"https://github.com/life-research/blaze\">Blaze Store</a>, but it has something called <a href=\"https://docs.datomic.com/on-prem/excision.html\" target=\"_blank\" title=\"https://docs.datomic.com/on-prem/excision.html\">Excision</a>. I would recommend to read the motivation part there.</p>",
        "id": 175465484,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1568229051
    }
]