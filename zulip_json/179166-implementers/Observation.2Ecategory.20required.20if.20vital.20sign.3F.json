[
    {
        "content": "<p>There has been a requirement added into FHIR that LOINC is required in at least one coding element if the measurement is a vital sign. The requirement is written loose enough that it is not clear to me if the requirement is such that the Observation resource must also comply with the vital signs profile. The vital signs profile requires the Observation.category. So my question is:<br>\nIf the measurement is a vital sign, am I required to populate the Observation.category element?<br>\nI would prefer NOT to include it to reduce the size of the resource as all it states is that the Observation is a vital sign which I already know from the Observation type.</p>",
        "id": 153904778,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1504774352
    },
    {
        "content": "<p>You may not need it but your trading partner might.  Observation.category help EHRs for example in filtering through all the observaions.</p>",
        "id": 153904860,
        "sender_full_name": "Eric Haas",
        "timestamp": 1504808909
    },
    {
        "content": "<p>Actually, I think the documentation in the Observation resource as it is currently (STU3 and current build) is pretty clear that this is required:</p>\n<blockquote>\n<p>10.1.1.1 Core Profiles for Observation <br>\nThe following core profiles for the Observation resource have been defined as well. If implementations use this Resource when expressing the profile-specific concepts as structured data, they SHALL conform to the following profiles:<br>\nProfile Description<br>\nVital signs The FHIR Vital Signs profile sets a minimum expectations for the Observation Resource to record, search and fetch the vital signs (e.g. temperature, blood pressure, respiration rate, etc) associated with a patient</p>\n</blockquote>\n<p>There have been questions raised about whether the VS profile <strong>should</strong> be required, and that's still under discussion, but that's the way that it is at present.</p>",
        "id": 153904868,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1504811989
    },
    {
        "content": "<p>Speaking as a possible consumer (clinical research), I'd like to vote for it being very necessary.</p>",
        "id": 153904877,
        "sender_full_name": "Geoff Low",
        "timestamp": 1504812572
    },
    {
        "content": "<p>Are there reference ValueSets or mappings from codes to categories?  In other words, can the category be reliably inferred from the code in some or all cases?</p>",
        "id": 153906621,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1505179419
    },
    {
        "content": "<p>some cases, but not reliably</p>",
        "id": 153906622,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505179562
    },
    {
        "content": "<p>you could use the LOINC classes as a category for that though</p>",
        "id": 153906905,
        "sender_full_name": "Eric Haas",
        "timestamp": 1505194273
    },
    {
        "content": "<p>It depends on what you think 'category' is intended to convey - or really what you need or want it to convey for your particular purposes.  I think that's why we keep discussing it, because it's probably impossible to come to a consensus on it - although maybe in a number of cases we can come \"close enough\".  Ideally we would be relying on understanding the meaning of the code itself, so that anyone can categorize it in however many ways are required to meet their own needs.  We said that 'category' was for the cases where that level of understanding of the codes wasn't possible or practical - but there is not really an easily achievable \"one size fits all\" for that.</p>",
        "id": 153907165,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1505253008
    },
    {
        "content": "<p>I think in this specific case (and actually, lab as well), the intent was to defer the understanding of what a \"vital\" or \"lab\" is to the underlying system</p>",
        "id": 153907170,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1505253204
    },
    {
        "content": "<p>If an app or other FHIR client has a solid definition of its own, it would use the code field.</p>",
        "id": 153907171,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1505253230
    },
    {
        "content": "<p>For Vitals, HL7 took a stab at \"minimum set\" but allows for other concepts to be under that vitals category</p>",
        "id": 153907173,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1505253264
    },
    {
        "content": "<p>b/c we know it's very hard to keep and maintain a value set globally that defines <em>all</em> vitals or <em>all</em> labs - even within a specific country</p>",
        "id": 153907174,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1505253305
    },
    {
        "content": "<p>As a naive IT guy, the relationship between category and code was clear enough only for me to jump to poorly formed conclusions when implementing. May be good to explicitly comment on the relationship...</p>",
        "id": 153907178,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1505253438
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191351\">@Chris Grenz</span>  Something like \"The category element groups concepts (codes) to meet the various needs of the client or server such as...  and should not be used to infer the specific concept meaning - for that you need to interrogate the code\"</p>",
        "id": 153907410,
        "sender_full_name": "Eric Haas",
        "timestamp": 1505316355
    },
    {
        "content": "<p>No, I don't think I was confusing that the specific meaning was in the code. What I <em>thought</em> was that the category was simply an optimization of a terminology hierarchy operation - that the code would be a child of the category in some sense and that, in the absence of category I could just calculate it from code.  OR, even further, once I had a solid terminology service in place, I'd cease to use category and simply use the terminology service to group codes.  What I'm hearing here is that the category may carry information explicitly <em>not</em> derivable from the code and an associated terminology.</p>",
        "id": 153907429,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1505319445
    },
    {
        "content": "<p>\"various needs of the client or server\" doesn't convey this adequately. Again, I read \"needs\" as potentially performance of some sort and not necessarily a clinical need.</p>",
        "id": 153907430,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1505319534
    },
    {
        "content": "<p>I think that your interpretation is the way that category <strong>should</strong> be, Chris<br>\nbut on the other hand, if that's what category <strong>actually</strong> is, then you probably don't really need it and can just rely on the code</p>",
        "id": 153908039,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1505362923
    }
]