[
    {
        "content": "<p>In the last few days, I've got around to something I've been meaning to for a while. I've set up the java validator so you can host it in another service, and use the services it has in a wider context. The way it works is </p>\n<ul>\n<li>put the jar in your class path</li>\n<li>Find the class org.hl7.fhir.r4.validation.NativeHostServices or org.hl7.fhir.dstu3.validation.NativeHostServices</li>\n<li>call init(path) where path refers to one of the definitions files from the main build (e.g. definitions.xml.zip) - required, do only once, do before anything else</li>\n<li>call load(path) where path refers to the igpack.zip produced by the ig publisher (do this once for each IG you care about)</li>\n<li>call connectToTxSvc(url) where the url is your terminology service of choice (can be <a href=\"http://tx.fhir.org/r4\" target=\"_blank\" title=\"http://tx.fhir.org/r4\">http://tx.fhir.org/r4</a> or /r3)</li>\n</ul>\n<p>now the jar is ready for action. There's 3 functions you can call (all are thread safe):<br>\n- validate - given a resource, validate it against all known rules<br>\n- convert - given a resource in a different version convert it to this version (if possible)<br>\n- unconvert - given a resource, convert it to a different version (if possible)</p>\n<p>also, call \"status\" to get a json object that describes the internals of the jar (e.g. for server status)</p>\n<p>The interface is optimised for JNI.</p>",
        "id": 153928681,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515796057
    },
    {
        "content": "<p>let me know if this is something you're interested in , or if you want additional functions exposed</p>",
        "id": 153928682,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515796088
    },
    {
        "content": "<p>thanks a lot for that effort, i'm very interested in this.</p>",
        "id": 153928707,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1515850544
    },
    {
        "content": "<p>Unfortunately this change breaks the command line use of the validator since it tries to validate references. Is there any flag to disable the reference resolution?</p>",
        "id": 153929119,
        "sender_full_name": "Anand Mohan Tumuluri",
        "timestamp": 1516136287
    },
    {
        "content": "<p>I'm pretty sure this didn't break that.</p>",
        "id": 153929206,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516188118
    },
    {
        "content": "<p>there's no parameter for that... I'll have to think about that</p>",
        "id": 153929207,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516188152
    },
    {
        "content": "<p>Is this library available via HAPI?<br>\nAlso, what are the required capabilities of the external terminology service of choice?</p>",
        "id": 153934927,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1517547033
    },
    {
        "content": "<p>I don't know. <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> has to include the new files in HAPI</p>",
        "id": 153934929,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517548337
    },
    {
        "content": "<p>capabilities - thorough support for terminology operations including $validate and $expand</p>",
        "id": 153934930,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517548369
    },
    {
        "content": "<p>I don't really know what it would add for this to be available in HAPI. HAPI's existing wrapper and validation support chain framework have been providing the ability for you to keep a validator instance available for use in memory for a long time now.</p>\n<p>Presumably the use case for this is more for JNI (which isn't really a design goal of HAPI's)?</p>",
        "id": 153934961,
        "sender_full_name": "James Agnew",
        "timestamp": 1517567463
    },
    {
        "content": "<p>I think so</p>",
        "id": 153934962,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517567489
    },
    {
        "content": "<p>still, maybe there's a role for other HAPI services inside a non-Java process?</p>",
        "id": 153934963,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517567548
    },
    {
        "content": "<p>Possibly... TBH I have never even touched the JNI stuff, I don't know much about how to do it well...</p>",
        "id": 153934964,
        "sender_full_name": "James Agnew",
        "timestamp": 1517567629
    },
    {
        "content": "<p>As a choice of design, I would use the HAPI validator as a separate service and just invoke it using regular HTTP</p>",
        "id": 153934973,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1517573673
    },
    {
        "content": "<p>Not sure if I'm missing something here, but this sounds like the $validate operation - <a href=\"http://build.fhir.org/resource-operations.html#validate\" target=\"_blank\" title=\"http://build.fhir.org/resource-operations.html#validate\">http://build.fhir.org/resource-operations.html#validate</a>.</p>",
        "id": 153935007,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1517586031
    },
    {
        "content": "<p>for me it's behind that operation</p>",
        "id": 153935009,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517586138
    },
    {
        "content": "<p>Or calling it prior to submitting a resource internally with specific profile(s)</p>",
        "id": 153935019,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1517587557
    }
]