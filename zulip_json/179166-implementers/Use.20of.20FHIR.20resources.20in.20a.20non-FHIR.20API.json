[
    {
        "content": "<p>We have two sibling APIs - one FHIR-conformant, and one non-FHIR (returns mimetype=application/pdf). Their request input parameters are identical, so we plan to re-use the same FHIR resources for the non-FHIR API, simply as json, The non-FHIR API will be at a separate endpoint, and will not claim FHIR-conformance. Is there anything preventing us from using this approach (aside from being slightly unsightly)? This simplifies the transactions for our implementers -- just pass the same input to both endpoints, rather than stripping the FHIR structure for the non-FHIR API call.</p>",
        "id": 182136503,
        "sender_full_name": "Ken Sinn",
        "timestamp": 1574976156
    },
    {
        "content": "<p>As a follow-up question, would the use of error code \"422 - FHIR Validation Error\" for the non-FHIR API be wrong (i.e. breaking terms of use of FHIR), or just simply confusing?</p>",
        "id": 182136580,
        "sender_full_name": "Ken Sinn",
        "timestamp": 1574976282
    },
    {
        "content": "<p>neither would be wrong, just potentially confusin.</p>",
        "id": 182137241,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574977197
    },
    {
        "content": "<p>but note that if your FHIR end-point returned application/pdf on request, that would be perfectly conformant. you don't need a different end-point for that</p>",
        "id": 182137302,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574977243
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> . For business purposes, we need to call and resolve the PDF-endpoint before calling the FHIR-endpoint, both passing in a Consent Resource, so we can't return the PDF as part of the FHIR-endpoint response. We considered using a custom $operation, but can a FHIR $operation return an application/pdf as a response, without any additional FHIR wrappers? We didn't think the response type could be application/pdf on its own, and that it needed a DocumentReference or something other FHIR wrapper/redirection.</p>",
        "id": 182137758,
        "sender_full_name": "Ken Sinn",
        "timestamp": 1574977935
    },
    {
        "content": "<blockquote>\n<p>We didn't think the response type could be application/pdf on its own</p>\n</blockquote>\n<p>If the client asked for it, it could be, I think. FHIR only sets expected responses for the FHIR meida types. Other media types are considered outside the spec</p>",
        "id": 182138245,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574978776
    },
    {
        "content": "<p>Interesting. Can a FHIR $operation only support Accept headers of application/pdf and nothing else?</p>",
        "id": 182140131,
        "sender_full_name": "Ken Sinn",
        "timestamp": 1574981856
    },
    {
        "content": "<p>I don't think we've discussed that. But an end-point that only works for non-FHIR media types and isn't declared in the capability statement is not a FHIR end point and so is not subject to any considerations of conformance</p>",
        "id": 182140188,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574981920
    },
    {
        "content": "<p>I think</p>",
        "id": 182140189,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574981922
    },
    {
        "content": "<p>This proposed endpoint would have an OperationDefinition resource, so it could be declared in the CapabilityStatement.rest.resource.operation; however, there isn't any place to document that there is only support of an application/pdf type.  There's CapabilityStatement.format which doesn't distinguish (at least not in the current description) whether this is the supported formats of the request, or the format of the response. (Additionally, there is no way to define separate supported formats for different restful interactions under the single CapabilityStatement for this endpoint.)</p>",
        "id": 182140714,
        "sender_full_name": "Ken Sinn",
        "timestamp": 1574982883
    },
    {
        "content": "<p>no you've moved into an area that we've not covered</p>",
        "id": 182141202,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574983809
    },
    {
        "content": "<p>Thank you for your responses! Are there any plans to look at this kind of use case?</p>",
        "id": 182141273,
        "sender_full_name": "Ken Sinn",
        "timestamp": 1574983958
    },
    {
        "content": "<p>no particular plans unless people ask. And here you are asking. though where we go from here, I'm not sure. has anyone elese run into this situation before?</p>",
        "id": 182141348,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574984150
    },
    {
        "content": "<p>That could be a binary resource result, which could then do that sort of thing?</p>",
        "id": 187069836,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1580464747
    }
]