[
    {
        "content": "<p>Hello. Can I ask a question about TestScript and Touchstone Project? As I see there is an inconsistency between spec and tests. For example, this test <a href=\"https://touchstone.aegis.net/touchstone/testscript?name=%2fBasic-FHIR1-6-0%2fPatient%2fClient+Assigned+Id%2fPatient-client-id-json&amp;version=2&amp;latestVersion=2\" target=\"_blank\" title=\"https://touchstone.aegis.net/touchstone/testscript?name=%2fBasic-FHIR1-6-0%2fPatient%2fClient+Assigned+Id%2fPatient-client-id-json&amp;version=2&amp;latestVersion=2\">https://touchstone.aegis.net/touchstone/testscript?name=%2fBasic-FHIR1-6-0%2fPatient%2fClient+Assigned+Id%2fPatient-client-id-json&amp;version=2&amp;latestVersion=2</a> -&gt; Step3-UpdatePatient -&gt; &lt;sourceId value=\"resource-update\"/&gt; . In spec (<a href=\"http://hl7.org/fhir/2016Sep/testing.html#ops\" target=\"_blank\" title=\"http://hl7.org/fhir/2016Sep/testing.html#ops\">http://hl7.org/fhir/2016Sep/testing.html#ops</a>) \"The sourceId fixture cannot be statically defined because the id cannot be relied upon.\" for update operations. But \"resource-update\" is statically defined, isn't it?</p>\n<p>I apologize if this is wrong place for such questions. Thank you</p>",
        "id": 153850071,
        "sender_full_name": "Andrew Rudenko",
        "timestamp": 1474445297
    },
    {
        "content": "<p>it's not the wrong place. <span class=\"user-mention\" data-user-id=\"191370\">@Richard Ettema</span> this is for you</p>",
        "id": 153850075,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474453120
    },
    {
        "content": "<p>Yes, this is the right place.<br>\n<span class=\"user-mention\" data-user-id=\"192657\">@Andrew Rudenko</span> The testing.html is a new page that got created in the STU3 Ballot (2016Sep) snapshot and came from the original TestScript resource page. The information on this page along with the many How-To examples need to be updated from the DSTU2 spec and this task is on my to-do list in the next couple of weeks.<br>\nWould you please create a tracker item for this issue and make sure you reference the url link to this section of the testing.html page? Thank you.</p>",
        "id": 153850147,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1474461480
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191370\">@Richard Ettema</span> this tracker <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemBrowse&amp;tracker_id=677\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemBrowse&amp;tracker_id=677\">http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemBrowse&amp;tracker_id=677</a> ?</p>",
        "id": 153850149,
        "sender_full_name": "Andrew Rudenko",
        "timestamp": 1474462244
    },
    {
        "content": "<p>Ok, let me ask a few more questions :)</p>\n<p>1) lessThan/greaterThan operators. How should they work? Should values be coerced? By which rules?<br>\n2) in operator. Is somewhere described that it should split value by \",\"?<br>\n3) What does <code>direction</code> mean in asserts?<br>\n4) <code>path</code> can be \"json-path\" or \"xpath\". How can I recognise which one is used in particular place? Touchstone uses xpath for originally json resources, for example.</p>",
        "id": 153850153,
        "sender_full_name": "Andrew Rudenko",
        "timestamp": 1474462815
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191370\">@Richard Ettema</span> one more: 5) touchstone uses variables inside fixtures. but I can't find anything about it in spec</p>",
        "id": 153850226,
        "sender_full_name": "Andrew Rudenko",
        "timestamp": 1474473539
    },
    {
        "content": "<p>The link to the GForge tracker doesn't go to a new tracker item. Can you verify that link?</p>\n<p>Answers to first four questions coming...</p>",
        "id": 153850231,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1474474460
    },
    {
        "content": "<p>1) lessThan/greaterThan operators. How should they work? Should values be coerced? By which rules?</p>\n<p>The lessThan/greaterThan operators are intended for numbers only at the moment, for example:<br>\n- Assert greaterThan 9.14. Actual value of 9.139 fails. Actual value of 9.141 passes.<br>\n- Assert lessThan 9.14. Actual value of 9.139 passes. Actual value of 9.141 fails.<br>\nTouchstone supports textual string value comparison such that 'Aaa' is less than 'aaa'.<br>\nThe contains operator is intended for string values. Since spec doesnâ€™t talk about case sensitivity, it is assumed to be case sensitive.</p>",
        "id": 153850232,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1474474541
    },
    {
        "content": "<p>2) in operator. Is somewhere described that it should split value by \",\"?<br>\nAfter re-reviewing the spec, yes, this description is missing. Yes, the value list is split by comma \",\".</p>",
        "id": 153850233,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1474474565
    },
    {
        "content": "<p>3) What does direction mean in asserts?<br>\ndirection = \"request\" - apply the assert to the request (client) side of the message exchange; HTTP headers, payload, etc.<br>\ndirection = \"response\" - apply the assert to the response (server) side of the message exchange; HTTP header, payload, etc.</p>",
        "id": 153850234,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1474474583
    },
    {
        "content": "<p>4) path can be \"json-path\" or \"xpath\". How can I recognise which one is used in particular place? Touchstone uses xpath for originally json resources, for example.<br>\nA FHIR test engine needs to support both xpath and jsonpath and the general assumption (probably needs to be defined) is that you would use xpath when the request and/or response payload is XML and jsonpath for JSON payload. Touchstone has implemented support for use of xpath or jsonpath against either XML or JSON. So, in the majority of the TestScript deployed in Touchstone we use xpath by default. I have run into a couple instances where I needed to resort to jsonpath for explicit JSON references.</p>",
        "id": 153850235,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1474474602
    },
    {
        "content": "<p>3) Some asserts can't be applied to request (response, responseCode) and most of the rest explicitly defines \"response\" as a target in documentation (<a href=\"http://hl7.org/fhir/2016Sep/testing.html#assert\" target=\"_blank\" title=\"http://hl7.org/fhir/2016Sep/testing.html#assert\">http://hl7.org/fhir/2016Sep/testing.html#assert</a>), for example, \"Asserts that compareToSourcePath against the response body...\"</p>",
        "id": 153850240,
        "sender_full_name": "Andrew Rudenko",
        "timestamp": 1474475760
    },
    {
        "content": "<p>4) In <a href=\"https://touchstone.aegis.net/touchstone/testscript?name=%2fBasic-FHIR1-6-0%2fPatient%2fClient+Assigned+Id%2fPatient-client-id-json&amp;version=2&amp;latestVersion=2\" target=\"_blank\" title=\"https://touchstone.aegis.net/touchstone/testscript?name=%2fBasic-FHIR1-6-0%2fPatient%2fClient+Assigned+Id%2fPatient-client-id-json&amp;version=2&amp;latestVersion=2\">https://touchstone.aegis.net/touchstone/testscript?name=%2fBasic-FHIR1-6-0%2fPatient%2fClient+Assigned+Id%2fPatient-client-id-json&amp;version=2&amp;latestVersion=2</a> it uses xpath for JSON payloads.</p>",
        "id": 153850241,
        "sender_full_name": "Andrew Rudenko",
        "timestamp": 1474475818
    },
    {
        "content": "<p>Are we going to switch to fluentpath sometimes?</p>",
        "id": 153850243,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1474476361
    },
    {
        "content": "<p>@<strong>nicola</strong> Yes, we are planning on adding support for fluentpath (name changing back to fhirpath). We need to add a GForge tracker for that.</p>",
        "id": 153850246,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1474479102
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191370\">@Richard Ettema</span>  we have some ideas how to make tests more declarative. Are you going to Dev Days in Amsterdam?</p>",
        "id": 153850248,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1474479288
    },
    {
        "content": "<p>@<strong>nicola</strong> I am hoping to get approval to go. I should know for sure in a few days.</p>",
        "id": 153850250,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1474479843
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191370\">@Richard Ettema</span> You SHOULD join! ;p</p>",
        "id": 153850251,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1474480736
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191370\">@Richard Ettema</span> +1 hope to see u there and have a discussion. <span class=\"user-mention\" data-user-id=\"192657\">@Andrew Rudenko</span> will be there too!</p>",
        "id": 153850259,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1474480826
    },
    {
        "content": "<p>Tracker for TestScript fhirpath support - <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12140\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12140\">http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12140</a></p>",
        "id": 153850261,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1474481038
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192657\">@Andrew Rudenko</span> 3) Yes. The spec doesn't prevent the response, responseCode elements from being populated when the direction = \"request\". I have a created a new tracker for this - <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12142\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12142\">http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12142</a></p>",
        "id": 153850274,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1474482005
    },
    {
        "content": "<p>4) Yes. This is a good example of where we use XPath against a JSON payload. This is convenience feature we implemented in Touchstone.</p>",
        "id": 153850276,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1474482151
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191370\">@Richard Ettema</span> 4) so, how should engine choose: xpath or json path? )</p>",
        "id": 153850281,
        "sender_full_name": "Andrew Rudenko",
        "timestamp": 1474483153
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192657\">@Andrew Rudenko</span> Sorry. I meant to say that since the spec defines that the path can be either XPath or JSONPath we built Touchstone to allow the use of either regardless of the payload format. If you're building a test engine, I can see where this may be difficult as this capability took us a while to figure out. If you would like to suggest that a test engine only support XPath for XML and JSONPath for JSON, then please add a new tracker item to clarify/constrain the spec.</p>",
        "id": 153850287,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1474484258
    },
    {
        "content": "<p>5) Yes, we saw this as a needed feature for the test engine and added it to Touchstone. Yes, we need a new tracker to have this defined in the spec. Thanks!</p>",
        "id": 153850291,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1474486896
    },
    {
        "content": "<p>We should probably migrate to FluentPath to be consistent with the rest of the specification.</p>",
        "id": 153850334,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1474546021
    },
    {
        "content": "<p>In FHIR-I Q4 yesterday the resolution to tracker #12140 was to:<br>\nReplace the current \"path\" elements with *two* elements: one for an xpath, and one for a fhirpath, as we do in ElementDefinition.constraint (name them like \"expression\" and \"xpath\").</p>",
        "id": 153850362,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1474551230
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191370\">@Richard Ettema</span>  &gt; we built Touchstone to allow the use of either regardless of the payload format</p>\n<p>but how does it choose right *path?</p>",
        "id": 153850530,
        "sender_full_name": "Andrew Rudenko",
        "timestamp": 1474612759
    },
    {
        "content": "<p>We built a transformation from/to XPath &lt;--&gt; JSONPath. When the content is XML and JSONPath is present, we transform the JSONPath to XPath and vice versus.</p>",
        "id": 153850539,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1474636881
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191370\">@Richard Ettema</span> i'm asking how do you determine what this is JSONPath (and should be transformed to XPath) ;)</p>",
        "id": 153850540,
        "sender_full_name": "Andrew Rudenko",
        "timestamp": 1474636992
    },
    {
        "content": "<p>by comparing first character with \"$\"?  Maybe there should be a special flag, especially if you going to add new selectors engines?</p>",
        "id": 153850542,
        "sender_full_name": "Andrew Rudenko",
        "timestamp": 1474637179
    },
    {
        "content": "<p>Our logic is \"If the path contains '/' and it doesnâ€™t contain '?(@', then we consider it to be an XPath\".</p>",
        "id": 153850567,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1474646513
    },
    {
        "content": "<p>I actually had a discussion with Grahame this morning and we will be updating the specification for TestScript to use the fhirpath (fluentpath) expression language.</p>",
        "id": 153850568,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1474646574
    },
    {
        "content": "<p>ok, thankyou )</p>",
        "id": 153850569,
        "sender_full_name": "Andrew Rudenko",
        "timestamp": 1474646724
    },
    {
        "content": "<p>@<strong>nicola</strong> - given the timeline of STU3, please dsicuss the changes to STU3 with <span class=\"user-mention\" data-user-id=\"191370\">@Richard Ettema</span> as soon as possible - devdays is too late </p>",
        "id": 153850639,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1474681715
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191370\">@Richard Ettema</span> I mocked up the first pass of the <code>TestReport</code> resource coming out of our conversation in Baltimore. <a href=\"/user_uploads/10155/mBi18R7pFvmU6hu5U20lzeXr/TestReport-FHIR-v1.7.0.pdf\" target=\"_blank\" title=\"TestReport-FHIR-v1.7.0.pdf\">TestReport-FHIR-v1.7.0.pdf</a> <a href=\"/user_uploads/10155/-s-NusPA0nB6nAOHhZuXXX68/testreport-example.xml\" target=\"_blank\" title=\"testreport-example.xml\">testreport-example.xml</a>. These changes have not been pushed to SVN.</p>",
        "id": 153852178,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1475781092
    },
    {
        "content": "<p>score - what's that out of? (as long as the definition says)<br>\nshouldn't date be mandatory (and an 'instant')?<br>\nOrigin is unexpectedly complex to me. same for destination<br>\nI'm not sure what label &amp; description are- I would have just expected result / message / link-to-details<br>\ngenerally , linking to a detailed report isn't there </p>",
        "id": 153852182,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475781727
    },
    {
        "content": "<p>I'm presuming 'score' is the percentage pass for all the tests.<br>\nI agree on the origin and destination. You could probably just have the index and participant elements. The link back to the TestScript will give you the extra details.</p>",
        "id": 153852195,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1475783537
    },
    {
        "content": "<p>The origin and destination are complex, but they are in TestScript as well, this just mirrors the structure. I was trying to be consistent.</p>",
        "id": 153852197,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1475785923
    },
    {
        "content": "<p>Score would be a percentage of tests passed.</p>",
        "id": 153852198,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1475785950
    },
    {
        "content": "<p>Date should be mandatory, and instant. Yes.</p>",
        "id": 153852200,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1475785968
    },
    {
        "content": "<p>score - fine. was just checking. I don't understand the testscript origin/destination either </p>",
        "id": 153852201,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475786025
    },
    {
        "content": "<p>Label and description was meant as a way for the TestReport to have a simple label or description of the result beyond just \"error\" or \"skip\" (or whatever). This also mirrors the TestScript structure.</p>",
        "id": 153852202,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1475786220
    },
    {
        "content": "<p>I thought about not having origin/destination, and just reference the server being tested, but I figured I'd get push back for not including all the other options (clients, form fillers, etc). I'm okay with simplifying it.</p>",
        "id": 153852203,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1475786278
    },
    {
        "content": "<p>I vote for simplifying and let pushback be towards complexity, not the other way around</p>",
        "id": 153852204,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475786325
    },
    {
        "content": "<p>OK on simplifying. I'll revise tomorrow morning.... also, the instant should probably be 0..1 in case the report is still pending (which is one of the legal statuses)</p>",
        "id": 153852205,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1475786417
    },
    {
        "content": "<p>ok</p>",
        "id": 153852206,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475786615
    },
    {
        "content": "<p>I think date shold be a dateTime, not an instant.  TestReport should be limited to automated test execution, so it's possible that in some cases only a date or date + time without milliseconds could be present</p>",
        "id": 153852258,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1475813750
    },
    {
        "content": "<p>why, if it's limited to automated execution, would milliseconds not be present? </p>",
        "id": 153852265,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475823373
    },
    {
        "content": "<p>Updates attached from discussion... using <code>instant</code> for the time being since that piece seems unresolved.</p>\n<p><a href=\"/user_uploads/10155/DHWN5EzW2ZF-fg8Bchy0tuHJ/TestReport-FHIR-v1.7.0.pdf\" target=\"_blank\" title=\"TestReport-FHIR-v1.7.0.pdf\">TestReport-FHIR-v1.7.0.pdf</a> <br>\n<a href=\"/user_uploads/10155/cc3q52Gs0eymPPMyLysDOqVw/testreport-example.xml\" target=\"_blank\" title=\"testreport-example.xml\">testreport-example.xml</a> </p>",
        "id": 153852288,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1475844906
    },
    {
        "content": "<p>I like the simplification. It's a good starting point for implementation.</p>",
        "id": 153852291,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1475848930
    },
    {
        "content": "<p>I think the operation.message and assert.message data type should be markdown. This would allow for more structure to the message content if desired.</p>",
        "id": 153852292,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1475848938
    },
    {
        "content": "<p>First, milliseconds are unlikely to be relevant.  Second, why are you limiting it to automated execution?</p>",
        "id": 153852305,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1475859230
    },
    {
        "content": "<p>I'll make the change for markdown.</p>",
        "id": 153852312,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1475862072
    },
    {
        "content": "<p>Lloyd, it seems unlikely that a person will manually execute all the operations and assertions in a TestScript resource. Also, this is equivalent to an Observation.issued or DiagnosticReport.issued attribute, which are both instant, and which both refer to automated services.</p>",
        "id": 153852313,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1475862179
    },
    {
        "content": "<p>But, I'll make the change to dateTime... I don't think milliseconds are terribly important here.</p>",
        "id": 153852314,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1475862219
    },
    {
        "content": "<p>Updates with <code>markdown</code> and <code>dateTime</code><br>\n<a href=\"/user_uploads/10155/EZbEjsiJWWBg02SkdWSnfIvx/TestReport-FHIR-v1.7.0.pdf\" target=\"_blank\" title=\"TestReport-FHIR-v1.7.0.pdf\">TestReport-FHIR-v1.7.0.pdf</a> <br>\n(example unchanged)</p>",
        "id": 153852317,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1475862533
    },
    {
        "content": "<p>At this point, is it OK if I add these to the current/latest in SVN? Not sure what the process is any longer.</p>",
        "id": 153852318,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1475862668
    },
    {
        "content": "<p>I don't agree with Observation.issued or DiagnosticReport.issued being instants either.  DiagnosticReport.issued is particularly problematic because it's mandatory.  The question is: If I do some manual testing, can I capture and share the results of that using TestReport or not?  I think the answer should be yes.  And if the answer *is* yes, then the resource design should take that into account.</p>",
        "id": 153852323,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1475866882
    },
    {
        "content": "<p>it's hard to imagine someone doing a manual test run</p>",
        "id": 153852326,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475869332
    },
    {
        "content": "<p>Jason - looks like time to commit. But we didn;t talk about making a formal Resource proposal. Does someone want to do that? </p>",
        "id": 153852327,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475869420
    },
    {
        "content": "<p>Do we need a gforge tracker created for a formal Resource proposal?</p>",
        "id": 153852345,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1475871269
    },
    {
        "content": "<p>Meaning... is there a tracker already created or would you like me to go ahead and create one?</p>",
        "id": 153852346,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1475871484
    },
    {
        "content": "<p>Nevermind.  I just started a \"TestReport_FHIR_Resource_Proposal\" page.</p>",
        "id": 153852347,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1475872045
    },
    {
        "content": "<p><a href=\"http://wiki.hl7.org/index.php?title=TestReport_FHIR_Resource_Proposal\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=TestReport_FHIR_Resource_Proposal\">http://wiki.hl7.org/index.php?title=TestReport_FHIR_Resource_Proposal</a> has been created and updated with similar content as the TestScript proposal page.</p>",
        "id": 153852350,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1475872635
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191381\">@Jason Walonoski</span> <span class=\"user-mention\" data-user-id=\"191370\">@Richard Ettema</span> my server at <a href=\"http://fhir3.healthintersections.com.au\" target=\"_blank\" title=\"http://fhir3.healthintersections.com.au\">http://fhir3.healthintersections.com.au</a> now supports TestReport - just for testing, is it worth setting up a push from touchstone/crucible to my server with test reports</p>",
        "id": 153852731,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476305684
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> We normally wait until an official FHIR snapshot release; i.e. Connectathon event or the official STU3, is created before adding support for that release into Touchstone. That being said, I would like to get support for TestReport into Touchstone sooner than later. I see if I have time in the next few days to implement support for the current 1.7.0 spec.</p>",
        "id": 153852740,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1476309332
    },
    {
        "content": "<p>Question - what will be the FHIR version number for STU 3 when it's officially released?  2.0.0?</p>",
        "id": 153852741,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1476309386
    },
    {
        "content": "<p>yes that's the plan. </p>",
        "id": 153852746,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476312021
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> we have a few things to do before we'd be in a position to push TestReport to your server, but we can work toward that goal.</p>",
        "id": 153852776,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1476359824
    },
    {
        "content": "<p>ok thx</p>",
        "id": 153852854,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476472465
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191370\">@Richard Ettema</span> - I don't have any idea what TestScript.profile is for, after reading the documentation</p>",
        "id": 153879250,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490217969
    },
    {
        "content": "<p>TestScript.profile defines the FHIR Profile(s) [StructureDefinition(s)] to be used in subsequent asserts where the test engine invokes a FHIR validation engine against the request or response payload; e.g.</p>\n<div class=\"codehilite\"><pre>&lt;profile id=&quot;resource-profile&quot;&gt;\n    &lt;reference value=&quot;http://hl7.org/fhir/StructureDefinition/Patient&quot;/&gt;\n&lt;/profile&gt;\n</pre></div>",
        "id": 153879252,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490218189
    },
    {
        "content": "<p>Yes, the current definition is somewhat lacking.  Sorry I missed updating that.</p>",
        "id": 153879253,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490218227
    },
    {
        "content": "<p>why not just refer to the profile directly when you use it? What does an id based internal reference buy? </p>",
        "id": 153879254,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490218290
    },
    {
        "content": "<p>I think that TestScript.setup.action.operation.type should be a URI. We define standard URIs for the standard interactions on http.html, and otherwise is the canonical URL of the operation that is being tested</p>",
        "id": 153879255,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490218345
    },
    {
        "content": "<p>I reckon that the testscript resource should reference the testing.html page in it's introduction</p>",
        "id": 153879256,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490218518
    },
    {
        "content": "<p>re: TestScript.profile - good point. It's been defined that way from the beginning and I never went back and questioned it.</p>",
        "id": 153879257,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490218564
    },
    {
        "content": "<p>The TestScript resource page section 7.3.3.1 Background has a link to testing.html. Yes, moving it up under Introduction would make it more noticeable.</p>",
        "id": 153879259,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490218691
    },
    {
        "content": "<p>I've read the documentation of TestScript.setup.action.operation.targetId several times, and I haev no idea what it's for </p>",
        "id": 153879260,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490218704
    },
    {
        "content": "<p>There's an example of using targetId in the How-To section of the testing.html page under <a href=\"http://hl7.org/fhir/STU3/testing.html#7.2.2.3\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/testing.html#7.2.2.3\">http://hl7.org/fhir/STU3/testing.html#7.2.2.3</a> \"Perform delete operation in teardown\".</p>",
        "id": 153879262,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490219017
    },
    {
        "content": "<p>re: TestScript.setup.action.operation.type - I've read over the http.html page again and I'm not seeing the standard URIs for the standard interactions. How would extended operations be handled otherwise?</p>",
        "id": 153879265,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490219228
    },
    {
        "content": "<p>Sorry, you're talking about the OperationDefintion.url, right?  e.g. \"<a href=\"http://hl7.org/fhir/OperationDefinition/Resource-validate\" target=\"_blank\" title=\"http://hl7.org/fhir/OperationDefinition/Resource-validate\">http://hl7.org/fhir/OperationDefinition/Resource-validate</a>\" for $validate.</p>",
        "id": 153879267,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490219581
    },
    {
        "content": "<p>yes. (and we would have to define URLs for the standard interactions)</p>",
        "id": 153879269,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490219757
    },
    {
        "content": "<p>Yes.  Agreed.  That would be a better way to go.</p>",
        "id": 153879270,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490219800
    },
    {
        "content": "<p>suggest that you add 'a target id could be used to delete a resource in a teardown operation' to the comments of the target id, and/or review it's definition, because I still don't understand \"Id of fixture used for extracting the [id], [type], and [vid] for GET requests\"</p>",
        "id": 153879271,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490219995
    },
    {
        "content": "<p>Ok.  Will do.</p>",
        "id": 153879275,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490220111
    },
    {
        "content": "<p>ok. there's a lot about the assert that I don't follow. </p>",
        "id": 153879337,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490236729
    },
    {
        "content": "<p>I'd still much rather it be simple:</p>\n<div class=\"codehilite\"><pre>&lt;assert&gt;\n   &lt;name value=&quot;&quot;/&gt;\n  &lt;description value=&quot;&quot;/&gt;\n  &lt;source value=&quot;[what is being tested: request-header | request-body | response-header | response -body | fixture&quot;/&gt;\n  &lt;sourceId value=&quot;id of what is being tested - fixture id, header name&quot;/&gt;\n  &lt;expressionType value=&quot;fhirpath | xpath | regex | javascript&quot;/&gt; \n  &lt;expression value=&quot;per above&quot;/&gt;\n&lt;/assert&gt;\n</pre></div>",
        "id": 153879346,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490236965
    },
    {
        "content": "<p>anyway, I sent you a draft of a test script for comment</p>",
        "id": 153879347,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490237007
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191370\">@Richard Ettema</span> I don't understand the cardinality of TestScript.setup.action.assert - shouldn't that be 0..*? How can I have multiple asserts about the outcome of an operation? </p>",
        "id": 153879615,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490312165
    },
    {
        "content": "<p>The containing element \"action\" has the cardinality of 0..*.  A test will have 1 or more actions which are combinations of 1 or more \"operation\"s; each \"operation\" can be followed by 0 or more \"assert\"s.</p>",
        "id": 153879617,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490312417
    },
    {
        "content": "<p>so is there any difference between one action with an operation and an assert, and two actions, one with an operation, and one with an assert?</p>",
        "id": 153879618,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490312481
    },
    {
        "content": "<p>If you look at the invariant inv-1, an action can only contain either an operation or an assert.</p>",
        "id": 153879619,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490312551
    },
    {
        "content": "<p>pfft. I thought I checked that. sorry</p>",
        "id": 153879620,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490312586
    },
    {
        "content": "<p>np.  You can go to Touchstone and look at any of the the TestScripts via the \"Test Definitions\" menu item.  You don't even have to be logged in.<br>\n<a href=\"/user_uploads/10155/5DHaz6ork0rmo_ZXrSaTEeUR/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/5DHaz6ork0rmo_ZXrSaTEeUR/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\"><img src=\"/user_uploads/10155/5DHaz6ork0rmo_ZXrSaTEeUR/pasted_image.png\"></a></div>",
        "id": 153879621,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490312713
    },
    {
        "content": "<p>while you're here... Asserts...</p>",
        "id": 153879622,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490313057
    },
    {
        "content": "<p>I'm not sure how to use the assert to say what I want. </p>",
        "id": 153879623,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490313075
    },
    {
        "content": "<p>Ok.  I've got about 10 minutes before I have to sign off.  Describe what you want and I'll do my best to translate to an assert.  :)</p>",
        "id": 153879624,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490313130
    },
    {
        "content": "<p>so I want to make a fhir path assertion that compares input from one of the fixtures to the result of an operation</p>",
        "id": 153879625,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490313169
    },
    {
        "content": "<p>So you want to compare the contents of a static fixture to the response body/payload of an operation?</p>",
        "id": 153879626,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490313349
    },
    {
        "content": "<p>yes</p>",
        "id": 153879627,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490313360
    },
    {
        "content": "<p>The minimumId assert element currently provides that functionality; for example,</p>\n<div class=\"codehilite\"><pre>&lt;action&gt;\n    &lt;assert&gt;\n        &lt;description value=&quot;Confirm that read returns updated version and that update did not delete previously created fields.&quot;/&gt;\n        &lt;direction value=&quot;response&quot;/&gt;\n        &lt;minimumId value=&quot;resource-update-min&quot;/&gt;\n    &lt;/assert&gt;\n&lt;/action&gt;\n</pre></div>",
        "id": 153879628,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490313501
    },
    {
        "content": "<p>I don't really understand direction, for a start</p>",
        "id": 153879629,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490313555
    },
    {
        "content": "<p>The minimumId points to a static fixture.  The assert will have the test engine do a comparison of the static fixture to the response body of the read.</p>",
        "id": 153879630,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490313563
    },
    {
        "content": "<p>If direction=\"request\", the comparison would be to the request body from the client.</p>",
        "id": 153879631,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490313597
    },
    {
        "content": "<p>but that's not what i want. I have a specific FHIRPath assertion about the difference between the two resoruces</p>",
        "id": 153879632,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490313604
    },
    {
        "content": "<p>Understood.  I'm just trying to give you some context.</p>",
        "id": 153879633,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490313639
    },
    {
        "content": "<p>and that didn't bring me any clarity. Why not just identify what is being compared by the id it is assigned? </p>",
        "id": 153879634,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490313646
    },
    {
        "content": "<p>currently, I have this:</p>\n<div class=\"codehilite\"><pre>      &lt;assert&gt;  \n        &lt;label value=&quot;check-elements&quot;/&gt;\n        &lt;description value=&quot;The snapshot elements must be the same&quot;/&gt;\n        &lt;direction value=&quot;response&quot;/&gt;\n        &lt;expression value=&quot;fixture(&#39;simple1-output&#39;).snapshot.element.all($this = fixture(&#39;patient&#39;).snapshot.element.where(path = $this.path)&quot;/&gt;\n      &lt;/assert&gt;\n</pre></div>",
        "id": 153879635,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490313726
    },
    {
        "content": "<p>though, as I said above, looking at assert fills me with an urgent desire to simply and calrify it </p>",
        "id": 153879636,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490313752
    },
    {
        "content": "<p>Is that FHIRPath expression currently valid?  I don't recognize the fixture() method.</p>",
        "id": 153879637,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490313837
    },
    {
        "content": "<p>it's an extension for this context (such extensions are allowed)</p>",
        "id": 153879638,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490313869
    },
    {
        "content": "<p>but I don't know how else you would do it </p>",
        "id": 153879639,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490313879
    },
    {
        "content": "<p>Ok. Is that extension supported by the Java RI FHIRPathEngine?  I ask because that's what I'm using in Touchstone.</p>",
        "id": 153879640,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490313944
    },
    {
        "content": "<p>there's an API for regsitering extension methods </p>",
        "id": 153879641,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490313989
    },
    {
        "content": "<p>see org.hl7.fhir.dstu3.utils.FHIRPathEngine.IEvaluationContext</p>",
        "id": 153879642,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490314018
    },
    {
        "content": "<p>and I think that any useful use of FHIRPath will require the ability to refer to multiple fixtures</p>",
        "id": 153879643,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490314057
    },
    {
        "content": "<p>in this context, anwyay</p>",
        "id": 153879644,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490314066
    },
    {
        "content": "<p>I was just about to ask.  Thanks.  Yes, very useful.<br>\nI'll have to investigate how this would work in Touchstone.</p>",
        "id": 153879645,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490314083
    },
    {
        "content": "<p>Right now I'm using FHIRPath expressions like the following:</p>\n<div class=\"codehilite\"><pre>&lt;action&gt;\n    &lt;assert&gt;\n        &lt;description value=&quot;Confirm that the returned resource contains the expected start datetime value.&quot;/&gt;\n        &lt;direction value=&quot;response&quot;/&gt;\n        &lt;expression value=&quot;Slot.start = @2016-10-25T09:00:00Z&quot;/&gt;\n    &lt;/assert&gt;\n&lt;/action&gt;\n</pre></div>",
        "id": 153879646,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490314131
    },
    {
        "content": "<p>yes that will work, but as soon as you have content that depends on other resources, then you need a fixture or a variable. I expect we'll need variable() as well</p>",
        "id": 153879647,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490314185
    },
    {
        "content": "<p>Yes, it's fairly simple at the moment but I definitely want to explore getting more complex expressions implemented.</p>",
        "id": 153879648,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490314230
    },
    {
        "content": "<p>Sorry, I have to drop now - just as things were getting interesting.  :)  I'd like to pick this up again later.  Thanks.</p>",
        "id": 153879649,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490314269
    },
    {
        "content": "<p>ok</p>",
        "id": 153879650,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490314281
    },
    {
        "content": "<p>FYI:</p>\n<div class=\"codehilite\"><pre>   <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"n\">FunctionDetails</span> <span class=\"nf\">resolveFunction</span><span class=\"o\">(</span><span class=\"n\">String</span> <span class=\"n\">functionName</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n      <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"s\">&quot;fixture&quot;</span><span class=\"o\">.</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"n\">functionName</span><span class=\"o\">))</span>\n        <span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"n\">FunctionDetails</span><span class=\"o\">(</span><span class=\"s\">&quot;Access a fixture defined in the testing context&quot;</span><span class=\"o\">,</span> <span class=\"mi\">0</span><span class=\"o\">,</span> <span class=\"mi\">1</span><span class=\"o\">);</span>\n      <span class=\"k\">return</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"n\">TypeDetails</span> <span class=\"nf\">checkFunction</span><span class=\"o\">(</span><span class=\"n\">Object</span> <span class=\"n\">appContext</span><span class=\"o\">,</span> <span class=\"n\">String</span> <span class=\"n\">functionName</span><span class=\"o\">,</span> <span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">TypeDetails</span><span class=\"o\">&gt;</span> <span class=\"n\">parameters</span><span class=\"o\">)</span> <span class=\"kd\">throws</span> <span class=\"n\">PathEngineException</span> <span class=\"o\">{</span>\n      <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"s\">&quot;fixture&quot;</span><span class=\"o\">.</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"n\">functionName</span><span class=\"o\">))</span>\n        <span class=\"k\">return</span> <span class=\"k\">new</span> <span class=\"n\">TypeDetails</span><span class=\"o\">(</span><span class=\"n\">CollectionStatus</span><span class=\"o\">.</span><span class=\"na\">SINGLETON</span><span class=\"o\">,</span> <span class=\"n\">TestingUtilities</span><span class=\"o\">.</span><span class=\"na\">context</span><span class=\"o\">.</span><span class=\"na\">getResourceNamesAsSet</span><span class=\"o\">());</span>\n      <span class=\"k\">return</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">Base</span><span class=\"o\">&gt;</span> <span class=\"nf\">executeFunction</span><span class=\"o\">(</span><span class=\"n\">Object</span> <span class=\"n\">appContext</span><span class=\"o\">,</span> <span class=\"n\">String</span> <span class=\"n\">functionName</span><span class=\"o\">,</span> <span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">Base</span><span class=\"o\">&gt;&gt;</span> <span class=\"n\">parameters</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n      <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"s\">&quot;fixture&quot;</span><span class=\"o\">.</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"n\">functionName</span><span class=\"o\">))</span> <span class=\"o\">{</span>\n        <span class=\"n\">String</span> <span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"na\">convertToString</span><span class=\"o\">(</span><span class=\"n\">parameters</span><span class=\"o\">.</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">));</span>\n        <span class=\"n\">Resource</span> <span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">fetchFixture</span><span class=\"o\">(</span><span class=\"n\">id</span><span class=\"o\">);</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">res</span> <span class=\"o\">!=</span> <span class=\"kc\">null</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n          <span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">Base</span><span class=\"o\">&gt;</span> <span class=\"n\">list</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">ArrayList</span><span class=\"o\">&lt;</span><span class=\"n\">Base</span><span class=\"o\">&gt;();</span>\n          <span class=\"n\">list</span><span class=\"o\">.</span><span class=\"na\">add</span><span class=\"o\">(</span><span class=\"n\">res</span><span class=\"o\">);</span>\n          <span class=\"k\">return</span> <span class=\"n\">list</span><span class=\"o\">;</span>\n        <span class=\"o\">}</span>\n      <span class=\"o\">}</span>\n      <span class=\"k\">return</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n</pre></div>",
        "id": 153879652,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490317878
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191370\">@Richard Ettema</span> it's not clear to me how a test script differentiates between errors and fatal errors - is there anyway to say 'just stop running the tests'?</p>",
        "id": 153880021,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1490676297
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Let me address your two issues separately...</p>\n<ul>\n<li>how a test script differentiates between errors and fatal errors</li>\n</ul>\n<p>The short answer is no. During our working group discussions during May and June 2015, the concept of a \"fatal\" error was not mentioned. Itâ€™s not clear what fatal would be: A prerequisite thatâ€™s not met in the test script? A fatal error within the test engine? A fatal error in the test system? The current behavior expected of a test engine is to mark the overall test script execution as Failed if the setup or any of the tests fail.</p>\n<ul>\n<li>is there anyway to say 'just stop running the tests'?</li>\n</ul>\n<p>The currently defined behavior (testing.html) of the test engine's processing of the TestScript regarding failures is:<br>\n<strong>7.2.1.1 Workflow</strong> - <a href=\"http://hl7.org/fhir/STU3/testing.html#7.2.1.1\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/testing.html#7.2.1.1\">http://hl7.org/fhir/STU3/testing.html#7.2.1.1</a><br>\n<strong>Setup Execution</strong></p>\n<blockquote>\n<p>All operations in a setup section (including assertions) must complete successfully for the subsequent tests to be executed. If an assertion operation in the setup section fails, then execution and evaluation of the tests in the TestScript should be skipped.</p>\n</blockquote>\n<p><strong>7.2.1.5 Operation Execution</strong> - <a href=\"http://hl7.org/fhir/STU3/testing.html#7.2.1.5\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/testing.html#7.2.1.5\">http://hl7.org/fhir/STU3/testing.html#7.2.1.5</a></p>\n<blockquote>\n<p>If an operation or assertion fails, then the test ends in failure and the test script execution proceeds to the next test.</p>\n</blockquote>\n<p>What this means is that (currently) the only way for a test engine to not execute all the defined tests is for the setup to fail. Otherwise, each individual test will execute. An individual test execution will be halted if an operation or assert fails within the definition of that test.</p>\n<p>A design enhancement to allow for conditional execution of a test based on a prior test execution result would be needed to allow for a test engine to stop running all the (remaining) tests in that situation.</p>\n<p>HTH</p>",
        "id": 153880073,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1490712385
    }
]