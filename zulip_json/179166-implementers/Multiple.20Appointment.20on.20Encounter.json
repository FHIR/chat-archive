[
    {
        "content": "<p>We are looking into the Appointment and Encounter resource types and have a use case which we cannot support (assuming we have understood the intended use of Appointment and Encounter correctly). </p>\n<p>The Encounter represents the actual contact between the patient and a healthcare provider, sometimes being based on a booked Appointment. This is all good and well. </p>\n<p><strong>One use case that we have is the following: </strong><br>\nA Patient needs to come for a planned clinic visit where he/she needs to see multiple healthcare professionals, it could be a nurse, a clinician, a physio etc. And they all want their individual appointments booked as separate appointments which they want to see in their schedules/diaries. This should only result in ONE encounter though, as the patient only turns up to the clinic once, they will likely get one appointment letter including information about first seeing the physio at 10.00, then the clinician at 10.30 etc. The billing will also be done based on ONE encounter. </p>\n<p>As I see it, we cannot support this as the Encounter resource has 0..1 references to Appointment. Unless we have misunderstood something, this use case (which doesnt seem unreasonable?) would require Encounter have reference to 0..* Appointment. </p>\n<p>I have noticed that it says that an Appointment can result in multiple Encounters, but that does not solve our requirement. </p>\n<p>Any thoughts on this? </p>\n<p>Thanks!</p>",
        "id": 154020994,
        "sender_full_name": "Martin Grundberg",
        "timestamp": 1543307315
    },
    {
        "content": "<p>You'd have to use an extension on the Appointment resource (if resources have a many to one relationship, the reference is from the 'many' to the 'one'). I have proposed such a standard extension in the past specifically to meet the use case you're describing, but I don't see it documented in R4. <br>\nIMHO it should be a standard extensions for all countries that understand an encounter to be between an organisation and the patient (i.e. an organisational encounter) as opposed to a departmental-encounter or a healthcare-provider-encounter.</p>",
        "id": 154021008,
        "sender_full_name": "René Spronk",
        "timestamp": 1543314118
    },
    {
        "content": "<p>This was changed in the most recent build (R4) <a href=\"http://build.fhir.org/encounter.html\" target=\"_blank\" title=\"http://build.fhir.org/encounter.html\">http://build.fhir.org/encounter.html</a></p>",
        "id": 154021064,
        "sender_full_name": "Drew Torres",
        "timestamp": 1543331067
    },
    {
        "content": "<p>We had similar concerns around the relationship between multiple appointments and a single encounter and request the change to occur. It will be part of the R4 publication.</p>",
        "id": 154021065,
        "sender_full_name": "Drew Torres",
        "timestamp": 1543331247
    },
    {
        "content": "<p>Thanks for the answers, and good to see that there have been changes made to support this. </p>\n<p>But wouldn't we need a reference from Appointment to Encounter as René mentioned? We would probably want to load a set of Appointments for patient, healthcare professional, clinic etc, and for each Appointment we would want to know which is its corresponding Encounter.</p>",
        "id": 154021279,
        "sender_full_name": "Martin Grundberg",
        "timestamp": 1543396309
    },
    {
        "content": "<p>References only exist in one direction - generally from the resource created second to the resource created first.  You can query using _has to find Appointments associated with a particular Encounter</p>",
        "id": 154021306,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1543412217
    },
    {
        "content": "<p>To find the Encounter given the Appointment you can simply do ../Encounter?appointment=&lt;appointment id&gt; - or use a revinclude when searching for the appointments</p>",
        "id": 154021308,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1543412729
    },
    {
        "content": "<p>Lots of good input! Thanks, will try it out</p>",
        "id": 154021319,
        "sender_full_name": "Martin Grundberg",
        "timestamp": 1543415569
    }
]