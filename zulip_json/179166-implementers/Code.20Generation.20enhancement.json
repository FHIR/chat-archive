[
    {
        "content": "<p>I've just committed a change to the conformance resources - there's a new mapping called 'Object Implementation' that specifies some logical common base resources. This allows for improved code generation. Anyone doing code generation who wants to leverage this is free to ask more detailed questions if it's not obvious how to use them</p>",
        "id": 153827907,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463356335
    },
    {
        "content": "<p>\"logical common base resources\"....what are those?</p>",
        "id": 153828575,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1463650628
    },
    {
        "content": "<p>intermediate abstract types that are generated for purposes of OO polymorphism but not specified in the resource content model</p>",
        "id": 153828786,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463694438
    },
    {
        "content": "<p>look in the current java RI at BaseConformance</p>",
        "id": 153828787,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463694458
    },
    {
        "content": "<p>Is there any change to the way the resources that participate  in these are defined?</p>",
        "id": 153828788,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1463694520
    },
    {
        "content": "<p>Or is it just based on the common definitions?</p>",
        "id": 153828789,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1463694540
    },
    {
        "content": "<p>I didn't make any changes to the definitions of the resources themselves, only to added amn \"object implementation\" mapping. The notion is that when the general definition, cardinality, and type matches, from a generated code perspective, they can be common. So I marked up where there is useful commonlaity to share</p>",
        "id": 153828792,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463694679
    },
    {
        "content": "<p>Okay, that makes sense. I'll define one for the CQF-related resources and collapse ModuleMetadata into the definition for each resource.</p>",
        "id": 153828798,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1463695348
    },
    {
        "content": "<p>great. you never define the created type directly - just infer that it exists, the code generator makes it so</p>",
        "id": 153828800,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463695882
    }
]