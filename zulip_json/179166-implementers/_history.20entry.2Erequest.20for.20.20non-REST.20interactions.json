[
    {
        "content": "<p>Hello,</p>\n<p>I am a little confused about implementing _history for historical data that was changed from an outside system - i.e., not from a RESTful interface.</p>\n<p>The history specifications at <a href=\"https://www.hl7.org/fhir/http.html#history\">https://www.hl7.org/fhir/http.html#history</a> specify:</p>\n<div class=\"codehilite\"><pre><span></span><code>Each entry SHALL minimally contain at least one of: a resource which holds the resource as it is at the conclusion of the interaction, or a request with entry.request.method\n</code></pre></div>\n<p>Which seems to imply that the entry.request is optional if a resource is provided. However, the bundle specifications state clearly that the request element is non-optional for _history:</p>\n<div class=\"codehilite\"><pre><span></span><code>bdl-3   Rule    (base)  entry.request mandatory for batch/transaction/history, otherwise prohibited entry.all(request.exists() = (%resource.type = &#39;batch&#39; or %resource.type = &#39;transaction&#39; or %resource.type = &#39;history&#39;))\n</code></pre></div>\n<p>My confusion is that Bundle.entry.request is clearly focused towards RESTful interactions. For non-RESTful history data, what is the intended value for entry.request.method and entry.request.url ? In particular, I am concerned with resources that we do not support Updates / Creates upon through FHIR, but that can be updated / created via other non-HTTP systems.</p>",
        "id": 216638855,
        "sender_full_name": "James Jahns",
        "timestamp": 1605286126
    },
    {
        "content": "<p>It doesn't matter how the data comes in, the underlying system should still know whether a particular history entry represents a create, update or delete, which is all you're exposing</p>",
        "id": 216640758,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1605286924
    },
    {
        "content": "<p>I think the question is around things like <code>Bundle.entry.request.method</code> which is a required binding to HTTP verbs and <code>Bundle.entry.request.url</code>.  If the change did not occur via a REST call, does the server need to figure out what the equivalent call would have been and populate it there?  I believe the expectation is yes.</p>\n<p>It probably would have been nice to bind the method to a FHIR Interaction instead, but I don't think a change like that is realistic on a normative resource.</p>",
        "id": 216643350,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1605288088
    },
    {
        "content": "<p>Right.  The question is essentially \"was this an update (PUT) or create (POST)\"</p>",
        "id": 216643789,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1605288274
    },
    {
        "content": "<p>I assume if a server allows create on update, then it's ok to note a <code>PUT</code> for a create, right?</p>",
        "id": 216644197,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1605288451
    },
    {
        "content": "<p>I guess it's also worth noting that the URL doesn't have to actually work, correct?  E.g., just because the equivalent would be a <code>POST</code> to <code>/Patient</code>, it doesn't mean the server actually has to accept that call.</p>",
        "id": 216644382,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1605288532
    },
    {
        "content": "<p>Great, those were the parts I was unsure about - thanks for clarifying!</p>",
        "id": 216651188,
        "sender_full_name": "James Jahns",
        "timestamp": 1605291638
    }
]