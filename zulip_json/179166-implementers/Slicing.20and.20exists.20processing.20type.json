[
    {
        "content": "<p>The HL7 FHIR website defines the exists processing type as <br>\nexists  The slices are differentiated by the presence or absence of the nominated element.<br>\nDoes this mean that the slice differentiating will occur based on whether the element is populated or not, so there could be a legal discriminator with no value in it? Why would this processing type be used?</p>",
        "id": 153926481,
        "sender_full_name": "Katie Wheatley",
        "timestamp": 1513786962
    },
    {
        "content": "<p>I typically use it with an extension - so one slice where the extension is present and another where the extension is absent.  But you could do it for any element.  It allows you to place limits like \"this extension is only allowed to be present on a maximum of one repetition\" or \"this extension must appear on at least one repetition\".</p>",
        "id": 153926507,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513801348
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  can you share an example of this SD?</p>",
        "id": 153970027,
        "sender_full_name": "Eric Haas",
        "timestamp": 1529019058
    },
    {
        "content": "<p>Deleted</p>",
        "id": 153970031,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1529020793
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  but this isn't slicing where one slice contains  a extension and the other doesn't ?</p>",
        "id": 153970033,
        "sender_full_name": "Eric Haas",
        "timestamp": 1529021037
    },
    {
        "content": "<p>Should have read the thread first :)  Will post an example shortly.</p>",
        "id": 153970035,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1529021624
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>&lt;element&gt;\n  &lt;path value=&quot;Practitioner.practitionerRole&quot;/&gt;\n  &lt;slicing&gt;\n    &lt;discriminator&gt;\n      &lt;type value=&quot;exists&quot;/&gt;\n      &lt;path value=&quot;organization&quot;/&gt;\n    &lt;/discriminator&gt;\n    &lt;rules value=&quot;open&quot;/&gt;\n  &lt;/slicing&gt;\n  &lt;mustSupport value=&quot;true&quot;/&gt;\n&lt;/element&gt;\n&lt;element&gt;\n  &lt;path value=&quot;Practitioner.practitionerRole&quot;/&gt;\n  &lt;sliceName value=&quot;practitionerOrg&quot;/&gt;\n  &lt;mustSupport value=&quot;true&quot;/&gt;\n&lt;/element&gt;\n&lt;element&gt;\n  &lt;path value=&quot;Practitioner.practitionerRole.organization&quot;/&gt;\n  &lt;min value=&quot;1&quot;/&gt;\n  &lt;type&gt;\n    &lt;code value=&quot;Reference&quot;/&gt;\n    &lt;targetProfile value=&quot;http://sharedhealth.exchange/fhir/StructureDefinition/profile-organization-service-location&quot;/&gt;\n    &lt;aggregation value=&quot;bundled&quot;/&gt;\n  &lt;/type&gt;\n  &lt;mustSupport value=&quot;true&quot;/&gt;\n&lt;/element&gt;\n&lt;element&gt;\n  &lt;path value=&quot;Practitioner.practitionerRole.organization.reference&quot;/&gt;\n  &lt;min value=&quot;1&quot;/&gt;\n  &lt;mustSupport value=&quot;true&quot;/&gt;\n&lt;/element&gt;\n&lt;element&gt;\n  &lt;path value=&quot;Practitioner.practitionerRole&quot;/&gt;\n  &lt;sliceName value=&quot;practitionerSpecialty&quot;/&gt;\n  &lt;mustSupport value=&quot;true&quot;/&gt;\n&lt;/element&gt;\n&lt;element&gt;\n  &lt;path value=&quot;Practitioner.practitionerRole.organization&quot;/&gt;\n  &lt;max value=&quot;0&quot;/&gt;\n  &lt;mustSupport value=&quot;false&quot;/&gt;\n&lt;/element&gt;\n&lt;element&gt;\n  &lt;path value=&quot;Practitioner.practitionerRole.role&quot;/&gt;\n  &lt;type&gt;\n    &lt;code value=&quot;CodeableConcept&quot;/&gt;\n    &lt;profile value=&quot;http://sharedhealth.exchange/fhir/StructureDefinition/dtprofile-codeableconcept-code&quot;/&gt;\n  &lt;/type&gt;\n  &lt;mustSupport value=&quot;true&quot;/&gt;\n  &lt;binding&gt;\n    &lt;strength value=&quot;required&quot;/&gt;\n    &lt;valueSetReference&gt;\n      &lt;reference value=&quot;https://fhir.infoway-inforoute.ca/ValueSet/sharedpractitionerrole&quot;/&gt;\n    &lt;/valueSetReference&gt;\n  &lt;/binding&gt;\n&lt;/element&gt;\n&lt;element&gt;\n  &lt;path value=&quot;Practitioner.practitionerRole.role.coding&quot;/&gt;\n  &lt;min value=&quot;1&quot;/&gt;\n  &lt;mustSupport value=&quot;true&quot;/&gt;\n&lt;/element&gt;\n&lt;element&gt;\n  &lt;path value=&quot;Practitioner.practitionerRole.specialty&quot;/&gt;\n  &lt;min value=&quot;1&quot;/&gt;\n  &lt;type&gt;\n    &lt;code value=&quot;CodeableConcept&quot;/&gt;\n    &lt;profile value=&quot;http://sharedhealth.exchange/fhir/StructureDefinition/dtprofile-codeableconcept-text-required-with-code&quot;/&gt;\n  &lt;/type&gt;\n  &lt;mustSupport value=&quot;true&quot;/&gt;\n&lt;/element&gt;\n</pre></div>",
        "id": 153970038,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1529023508
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> , I want to limit the choice on  Task.owner  to Practitioner or extension PractitionerRole, I thought this would be the ticket but I am stuck.  Getting a 'can't slice non-repeating elements' message in R3 build.  I can always use an invariant.</p>",
        "id": 153970057,
        "sender_full_name": "Eric Haas",
        "timestamp": 1529038747
    },
    {
        "content": "<p>I thought this was possible but not so sure anymore.</p>",
        "id": 153970058,
        "sender_full_name": "Eric Haas",
        "timestamp": 1529038957
    },
    {
        "content": "<p>That's odd.  You're using the most recent IGPublisher?</p>",
        "id": 153970116,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1529060370
    },
    {
        "content": "<p>Is it possible because in the current build documentation it only talk about elements that repeat and polymorphic elements.  Nothing that describes slicing non repeating elements.   Also I may have done it wrong...since I hand edited it.  but want to make sure is a thing first before trying to debug it.  So basically here is the constraint</p>\n<p>slice 1 Task.owner 0..1  ref(Practitioner)<br>\nslice 2 Task.owner 0..1 extension...valueRed(PractitionerRole)</p>",
        "id": 153970137,
        "sender_full_name": "Eric Haas",
        "timestamp": 1529082239
    },
    {
        "content": "<p>here is my xml snippet...</p>\n<div class=\"codehilite\"><pre><span></span>...\n        &lt;element id=&quot;Task.owner&quot;&gt;\n            &lt;path value=&quot;Task.owner&quot;/&gt;\n            &lt;slicing&gt;\n                &lt;discriminator&gt;\n                    &lt;type value=&quot;exists&quot;/&gt;\n                    &lt;path value=&quot;extension.url&quot;/&gt;\n                &lt;/discriminator&gt;\n                &lt;rules value=&quot;open&quot;/&gt;\n            &lt;/slicing&gt;\n            &lt;mustSupport value=&quot;true&quot;/&gt;\n            &lt;isModifier value=&quot;false&quot;/&gt;\n        &lt;/element&gt;\n        &lt;element id=&quot;Task.owner:owner-p&quot;&gt;\n            &lt;path value=&quot;Task.owner&quot;/&gt;\n            &lt;sliceName value=&quot;owner-p&quot;/&gt;\n            &lt;type&gt;\n                &lt;code value=&quot;Reference&quot;/&gt;\n                &lt;profile value=&quot;http://hl7.org/fhir/us/core/StructureDefinition/us-core-practitioner&quot;/&gt;\n                &lt;targetProfile value=&quot;http://hl7.org/fhir/StructureDefinition/Practitioner&quot;/&gt;\n            &lt;/type&gt;\n            &lt;mustSupport value=&quot;true&quot;/&gt;\n            &lt;isModifier value=&quot;false&quot;/&gt;\n        &lt;/element&gt;\n        &lt;element id=&quot;Task.owner:owner-pr&quot;&gt;\n            &lt;path value=&quot;Task.owner&quot;/&gt;\n            &lt;sliceName value=&quot;owner-pr&quot;/&gt;\n            &lt;mustSupport value=&quot;true&quot;/&gt;\n            &lt;isModifier value=&quot;false&quot;/&gt;\n        &lt;/element&gt;\n        &lt;element id=&quot;Task.owner:oner-pr.extension&quot;&gt;\n            &lt;path value=&quot;Task.owner.extension&quot;/&gt;\n            &lt;slicing&gt;\n                &lt;discriminator&gt;\n                    &lt;type value=&quot;value&quot;/&gt;\n                    &lt;path value=&quot;url&quot;/&gt;\n                &lt;/discriminator&gt;\n                &lt;rules value=&quot;open&quot;/&gt;\n            &lt;/slicing&gt;\n            &lt;mustSupport value=&quot;true&quot;/&gt;\n            &lt;isModifier value=&quot;false&quot;/&gt;\n        &lt;/element&gt;\n        &lt;element id=&quot;Task.owner:owner-pr.extension:owner-pr&quot;&gt;\n            &lt;path value=&quot;Task.owner.extension&quot;/&gt;\n            &lt;sliceName value=&quot;owner-pr&quot;/&gt;\n            &lt;min value=&quot;0&quot;/&gt;\n            &lt;max value=&quot;1&quot;/&gt;\n            &lt;type&gt;\n                &lt;code value=&quot;Extension&quot;/&gt;\n                &lt;profile value=&quot;http://hl7.org/fhir/ig/davinci/StructureDefinition/ext-practitionerRole&quot;/&gt;\n            &lt;/type&gt;\n            &lt;mustSupport value=&quot;true&quot;/&gt;\n            &lt;isModifier value=&quot;false&quot;/&gt;\n        &lt;/element&gt;\n...\n</pre></div>",
        "id": 153970139,
        "sender_full_name": "Eric Haas",
        "timestamp": 1529085307
    },
    {
        "content": "<p>If you want to base it on the existence of an extension, you need to do something like this:<br>\n      &lt;slicing&gt;<br>\n        &lt;discriminator&gt;<br>\n          &lt;type value=\"exists\"/&gt;<br>\n          &lt;path value=\"extension('http://sharedhealth.exchange/fhir/StructureDefinition/ext-communication-sender-locum')\"/&gt;<br>\n        &lt;/discriminator&gt;<br>\n        &lt;rules value=\"open\"/&gt;<br>\n      &lt;/slicing&gt;</p>",
        "id": 153970140,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1529085485
    },
    {
        "content": "<p>End then in one slice, have a minOccurs=1 for that extension and in the other slice have a maxOccurs=0</p>",
        "id": 153970141,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1529085509
    },
    {
        "content": "<p>Got it! ty.....that is not obvious to mere mortals like me. This seems like a relatively common pattern in r3 where the choice gets expanded by an ig.  Do you agree?  Is this only way to skin this cat using slicing and is it really better than using an invariant?</p>",
        "id": 153970142,
        "sender_full_name": "Eric Haas",
        "timestamp": 1529085737
    },
    {
        "content": "<p>It's the cleanest way to skin the cat.  You could put the extension on the root instead, but it's more vulnerable to getting stripped there.</p>",
        "id": 153970148,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1529086364
    }
]