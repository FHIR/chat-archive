[
    {
        "content": "<p>I'm creating an extension for which it's value is a choice of other extensions.  Looking at the \"Extensibility\" page in documentation, <code>valueExtension</code> is not listed under possible types for <code>value[x]</code> -- but in the structure for Extension, it shows <code>*</code> for the <code>value[x]</code> type.  So... am I allowed to use <code>valueExtension</code> in Extension's <code>value[x]</code> to indicate an extension as an option within the choice? If allowed, would I set the type's <code>code</code> to <code>Extension</code> and <code>profile</code> to the extension's URI?</p>",
        "id": 153869269,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1485454954
    },
    {
        "content": "<p>I found the relevant documentation on open types, and it seems that despite the <code>*</code>, there is still a certain set of types allowed, and <code>Extension</code> is not one of them.  So does that mean a choice of extensions needs to be implemented using constraints to ensure only one can be chosen?</p>",
        "id": 153869278,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1485456834
    },
    {
        "content": "<p>The inconsistency should be clarified, that's probably a good tracker.</p>",
        "id": 153869280,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1485457387
    },
    {
        "content": "<p>As far as having an extension that is a choice of extensions, yeah, that's probably just multiple extensions with an invariant.</p>",
        "id": 153869281,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1485457406
    },
    {
        "content": "<p>Where you would put that invariant is a good question.</p>",
        "id": 153869282,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1485457482
    },
    {
        "content": "<p>Seems like you could define an extension, and then specify that each of the possible extensions can be applied as an extension to that extension, that would then give you a place to define the invariant.</p>",
        "id": 153869283,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1485457543
    },
    {
        "content": "<p>Yeah, that's what I was thinking.  I wasn't *liking* it, but I was *thinking* it.  Thanks for the confirmation.</p>",
        "id": 153869296,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1485469533
    },
    {
        "content": "<p>So, couldn't you just define a complex extension? What's the benefit of having the sub-elements defined by extensions as opposed to just defined as elements within a complex extension?</p>",
        "id": 153869301,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1485470834
    },
    {
        "content": "<p>Is this the thread you meant to reply to?  It almost sounds like you're talking about the other thread I just started.  But I'll attempt to answer for both threads.</p>\n<p>(1 - This thread) -- It would be nicer to be able to use the value[x] for choices because it's much simpler and more obvious than invariants.<br>\n(2 - Other thread) -- I don't want to fully define the sub-extensions inline because that hinders their re-usability.  Now there isn't a way for a system to know for sure that a sub-extension in A represents the same thing as another sub-extension in B.  And now I have to define the same sub-extension twice as well.</p>",
        "id": 153869303,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1485471234
    },
    {
        "content": "<p>You don't even need to have an invariant - just slice on Extension.extension</p>",
        "id": 153869402,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1485558990
    },
    {
        "content": "<p>Or, if you wish, just set Extension.extension to have a value set listing permitted URLs.</p>",
        "id": 153869403,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1485559029
    },
    {
        "content": "<p>Hi Lloyd.  I was thinking I'd need in invariant because I'd have to set the cardinality low to 0 on all slices of the extension (since a choice implies that any of them might be 0 card) -- but I'd need the invariant to force that one of them must exist in the data.</p>\n<p>I hadn't thought about using a value set to list permitted extension URLs.  Now that is an interesting idea!  Thanks for your help.</p>",
        "id": 153869470,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1485781469
    }
]