[
    {
        "content": "<p>I'm creating a tool for creating FHIR Logical Models. As such I need to cater for \"BackboneElements\" or \"ElementDefintions\" when the models are being created. As I don't think there is any firm decision as yet on which class should be used within a Logical Model, I'll cater for either. My question is would a model ever use a mixture of the two or would it be sensible to expect consistency within a single model?</p>",
        "id": 153813069,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1456173933
    },
    {
        "content": "<p>firstly, it's Element vs BackboneElement (not ElementDefinition)</p>",
        "id": 153813070,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1456174022
    },
    {
        "content": "<p>Yep, my mistake</p>",
        "id": 153813071,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1456174077
    },
    {
        "content": "<p>I think that in general, a logical model wouldn't make use of extensibility, and especially modifier extensibility</p>",
        "id": 153813073,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1456174872
    },
    {
        "content": "<p>but I can also cases where the same logic as in the base specification applies</p>",
        "id": 153813074,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1456174886
    },
    {
        "content": "<p>but the principle we've defined as part of the spec would also be applicable: we limit the places where modifier extensions can be found </p>",
        "id": 153813075,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1456174934
    },
    {
        "content": "<p>given that, it would seem reasonable for a logical model to decide for itelf where it wants to use element or backbone element</p>",
        "id": 153813076,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1456174957
    }
]