[
    {
        "content": "<p>We would like to be able to match against individual words in code:text, so that a search on code:text=wei would match a display string, \"Body weight\".   <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> said today that they way :text is currently described for (for tokens), he thought the search would likely only match at the beginning of the display string, and that agrees with the current HAPI implementation.</p>\n<p>This seems like a significant shortcoming, since someone trying to find codes for \"weight\" will be unlikely to think of typing \"Body weight\".  Could there be some mechanism for requesting matching at the beginning of words, if token :text's definition can't be changed?</p>\n<p>Note:  I did create <a href=\"http://jira.hl7.org/browse/FHIR-32673\">FHIR-32673</a> for this, but at Lloyd's suggestion I am posting here as well.</p>",
        "id": 242375614,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1623431707
    },
    {
        "content": "<p>the page is inconsistent on this matter. It's certainly not intended to left match only</p>",
        "id": 242380703,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623434110
    },
    {
        "content": "<p>I am having the same problem.  Since token:text is string search, then I think one option is searching with <code>token:text:contains</code> <br>\nFor my project, I am considering to create an operation on token so it can search either code or text.</p>",
        "id": 242381999,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1623434724
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191506\">Yunwei Wang</span> <a href=\"#narrow/stream/179166-implementers/topic/Matching.20words.20in.20code.3Atext/near/242381999\">said</a>:</p>\n<blockquote>\n<p>so it can search either code or text.</p>\n</blockquote>\n<p>We would like to do that too, though that is a separate issue.</p>",
        "id": 242401239,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1623444655
    },
    {
        "content": "<p>The problem with :contains is that it finds stuff in the middle of word, which almost never what you want.  If you are searching for \"eight\", you don't want \"weight\".  You would end up with a fair amount of noise in the results, especially if you were autocompleting and searching as the user types.</p>",
        "id": 242401594,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1623444808
    },
    {
        "content": "<p>We decided to use text-based search which is search based on word instead sub-string. I cannot find many details about text-based search in FHIR spec.</p>",
        "id": 242415496,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1623454806
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span>  How did you do that text-based searching (word matching) on code:text?  Do you have a custom FHIR server?  What syntax did you use in the query?</p>",
        "id": 242416676,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1623456365
    },
    {
        "content": "<p>FHIR has two search parameters <code>_content</code> and <code>_text</code> for text-based search on resource content and narrative respectively (see <a href=\"http://build.fhir.org/search#content\">http://build.fhir.org/search#content</a>) But these two do not fit our use case which is text-based search on a selected element. <br>\nWe decide to use the same syntax, such as \"lung AND cancer\" on our customized search parameter (if we could figure out how to defined a search parameter for text-based search) or customized search operation</p>",
        "id": 242416867,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1623456669
    },
    {
        "content": "<p>Okay.  BTW, I just tested Observation?code:text:contains=.... on a HAPI FHIR server and it didn't work.  I think modifiers don't modify each other that way, but all modify the search parameter, and :contains is not a modifier for a token parameter.</p>",
        "id": 242417032,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1623456939
    }
]