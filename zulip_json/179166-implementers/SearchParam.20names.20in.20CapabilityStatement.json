[
    {
        "content": "<p>We recently ran Touchstone against our server and found it was failing this check:  <code>searchParam.select(name).isDistinct()</code></p>",
        "id": 199399376,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1591033102
    },
    {
        "content": "<p>the root cause seems to be some duplicate names from SearchParameters we got from PDEX PlanNet</p>",
        "id": 199399420,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1591033129
    },
    {
        "content": "<p>the codes are unique but the names are not</p>",
        "id": 199399459,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1591033146
    },
    {
        "content": "<p>the 'name' vs 'code' thing has tripped us up in the past as DSTU2 wasnt' very clear on the difference</p>",
        "id": 199399523,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1591033189
    },
    {
        "content": "<p>are folks really putting <a href=\"http://SearchParameter.name\">SearchParameter.name</a> into their <a href=\"http://CapabilityStatement.rest.resource.searchParam.name\">CapabilityStatement.rest.resource.searchParam.name</a> or is anyone using SearchParameter.code ?</p>",
        "id": 199399661,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1591033245
    },
    {
        "content": "<p>code seems a lot more useful since thats what you actually perform the search with</p>",
        "id": 199399701,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1591033273
    },
    {
        "content": "<p>We also ran into this and I agree that the cap statement should list code...otherwise how would the client know how to call the search parameter?</p>",
        "id": 199399849,
        "sender_full_name": "Paul Church",
        "timestamp": 1591033344
    },
    {
        "content": "<p>It <em>could</em> work if they dereferenced the Reference(SearchParameter) definition</p>",
        "id": 199399897,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1591033375
    },
    {
        "content": "<p>but that field is optional</p>",
        "id": 199399907,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1591033380
    },
    {
        "content": "<p>and currently we don't offer that for any built-in parameters</p>",
        "id": 199399946,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1591033406
    },
    {
        "content": "<p>so it would be nice if you could just go by the code</p>",
        "id": 199399956,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1591033415
    },
    {
        "content": "<p>will open a Jira for it</p>",
        "id": 199399967,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1591033419
    },
    {
        "content": "<p><a href=\"http://jira.hl7.org/browse/FHIR-27755\">FHIR#27755</a></p>",
        "id": 199401422,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1591034174
    },
    {
        "content": "<p>There's no expectation that 'name' or 'code' will necessarily be unique in all SearchParameter instances.  <a href=\"http://CapabilityStatement.rest.resource.searchParam.name\">CapabilityStatement.rest.resource.searchParam.name</a> however must be unique.  There is no requirement that <a href=\"http://resource.searchParam.name\">resource.searchParam.name</a> will always be the same as SearchParameter.code, though it's best practice for them to be the same when possible (and there's no issue with duplication of names).</p>",
        "id": 199401425,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1591034176
    },
    {
        "content": "<p>name vs code is already confusing; highly recommend adding language to indicate that this SHOULD match the corresponding code</p>",
        "id": 199401508,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1591034237
    },
    {
        "content": "<p>or at least that it might not match the <a href=\"http://SearchParameter.name\">SearchParameter.name</a></p>",
        "id": 199401658,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1591034296
    },
    {
        "content": "<p>Happy to have a change request to that effect - though it should also notice that distinct names will be necessary for disambiguation.  It generally <em>won't</em> match <a href=\"http://SearchParameter.name\">SearchParameter.name</a> - which is for code generation.</p>",
        "id": 199401681,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1591034316
    },
    {
        "content": "<p>i opened it as a clarification</p>",
        "id": 199401763,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1591034361
    },
    {
        "content": "<p>but feel free to change it to a change request</p>",
        "id": 199401812,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1591034385
    },
    {
        "content": "<p>question:  in the case of disambiguating two definitions with the same code, will the \"name\" in <code>CapabilityStatement.rest.resource.searchParam</code> be the queryParameter name that clients can use in their queries?</p>",
        "id": 199402564,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1591034706
    },
    {
        "content": "<p>trying to udnerstand what \"used in the interface\" means...could be<br>\nA. the display name that is presented to end users; or<br>\nB. the query parameter name in the API (interface)</p>",
        "id": 199402639,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1591034747
    },
    {
        "content": "<p>Can we use HAPI FHIR to create FHIR based application?</p>",
        "id": 199404666,
        "sender_full_name": "PKumar",
        "timestamp": 1591035775
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"308105\">@Pavan kumar seepana</span> yes. There is a <a class=\"stream\" data-stream-id=\"179167\" href=\"/#narrow/stream/179167-hapi\">#hapi</a> stream specifically for HAPI-related questions</p>",
        "id": 199404835,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1591035857
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191676\">Lee Surprenant</span> <a href=\"#narrow/stream/179166-implementers/topic/SearchParam.20names.20in.20CapabilityStatement/near/199402564\">said</a>:</p>\n<blockquote>\n<p>question:  in the case of disambiguating two definitions with the same code, will the \"name\" in <code>CapabilityStatement.rest.resource.searchParam</code> be the queryParameter name that clients can use in their queries?</p>\n</blockquote>\n<p>I'm still hoping for some confirmation on this one.  I'm finding that IGs will frequently redefine search parameters that are already defined in the base spec (typically using the same expression or a similar one, with the same code, but with a different canonical url and id).  I will open a separate topic for whether they should do that, but for this topic I just wanted to confirm whether the <code>CapabilityStatement.rest.resource.searchParam.name</code> is intended to be the string a client should use in their URL to search via this parameter (in cases where it may conflict with SearchParameter.code)</p>",
        "id": 201629498,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1592843730
    },
    {
        "content": "<p>yes</p>",
        "id": 201788677,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1592949208
    },
    {
        "content": "<p>thanks graham, I updated <a href=\"http://jira.hl7.org/browse/FHIR-27755\">FHIR#27755</a> with this confirmation...I still think it could be a bit more clear in the spec, but I think I understand how this is supposed to work now:  in cases where the SearchParameter.code has a conflict, an implementation may choose to expose that SearchParameter using a name which differs from the SeachParameter.code and, in such cases, a client should use the string from <a href=\"http://CapabilityStatement.rest.resource.searchParam.name\">CapabilityStatement.rest.resource.searchParam.name</a> in their queries</p>",
        "id": 201790566,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1592950317
    }
]