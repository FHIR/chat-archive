[
    {
        "content": "<p>Hi All,</p>\n<p>I'm working on drafting bunch of Observation profiles and would like to seek the recommendation from the group which option is better to model Observation.code. As per my understanding, I believe the options are  to use open sliced Fixed code or use a pattern for Observation.code.coding.  The objective is to let the implementors what code they must supply to make it conformant with our profile but additional codes are allowed</p>\n<p>Regards,</p>",
        "id": 171565847,
        "sender_full_name": "Shovan Roy",
        "timestamp": 1563924072
    },
    {
        "content": "<p>pattern on Observation.code.coding.  That's what I do for my Observation profiles.</p>",
        "id": 171565860,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1563924114
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"192166\">@Jean Duteau</span> , have you  noticed any advantage of using pattern. I'm more inclined towards using pattern but just want to ensure that it doesn't bring any additional complexities for the implementers.<br>\nLooping in <br>\n<span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> , <span class=\"user-mention\" data-user-id=\"191368\">@Brett Esler</span> , <span class=\"user-mention\" data-user-id=\"191682\">@Richard Townley-O'Neill</span> , <span class=\"user-mention\" data-user-id=\"191333\">@Reuben Daniels</span>  ,</p>",
        "id": 171566451,
        "sender_full_name": "Shovan Roy",
        "timestamp": 1563924944
    },
    {
        "content": "<p>For me  it is a matter of style.   I shy away from patterns.  they are easier to author for sure but I think harder for the reader to  understand in the publisher tree view.</p>",
        "id": 171568426,
        "sender_full_name": "Eric Haas",
        "timestamp": 1563927740
    },
    {
        "content": "<p>Doing fixed code \"properly\" is hard - because you're fixing the code and system within a single coding without fixing all of them.  You also need to declare a whole lot more elements in your profile.  The pattern can be easily asserted at the CodeableConcept element level and is harder to mess up.</p>",
        "id": 171569193,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1563928854
    },
    {
        "content": "<p>Only real benefit to setting fixed values for code + system is that \"old\" validators might not be able to handle pattern.  (Same issue if you need to translate your StructureDefinitions into STU2)</p>",
        "id": 171569214,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1563928912
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> I think both approaches (slicing on nested content or patterns) are hard to make intuitive visually.  Anyone with insights on how to make the rendering more intuitive, ideas would be most welcome...</p>",
        "id": 171569280,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1563929014
    },
    {
        "content": "<p>I agree with <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> -- I prefer fixed[x] because it is easier to read in the IG docs.  The fixed[x] components stand out, but the pattern[x] components just render as an ugly JSON blob.</p>",
        "id": 171602045,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1563971910
    },
    {
        "content": "<p>They do stand out - but they are often misinterpreted as fixing the values on all repetitions.</p>",
        "id": 171603081,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1563972834
    },
    {
        "content": "<p>Understood.  I do like the idea of <em>not</em> having to slice <code>coding</code>.  But when I decided which approach we would take in our tooling, I also looked at all of the official FHIR profiles (like vital signs) and noted that they use fixed codes.  It seemed best to follow their lead.  I actually do think it would be a benefit to the FHIR community for FHIR to establish some \"best practices\" for approaching things like this.  Whenever there are two ways to do something, it would be nice to have some guidance on which one to prefer.</p>",
        "id": 171604115,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1563973677
    },
    {
        "content": "<p>When vital signs were first authored, pattern either didn't exist (or didn't work)</p>",
        "id": 171605713,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1563974913
    },
    {
        "content": "<p>Slicing is usually about one member of a repetition. If you don’t understand that you won’t get it any way.    So in summary my way is way easier on the eyeballs.</p>",
        "id": 171633386,
        "sender_full_name": "Eric Haas",
        "timestamp": 1563994917
    },
    {
        "content": "<p>I think a style guide is a good idea.  We will call it “Moesel and Haas”</p>",
        "id": 171633494,
        "sender_full_name": "Eric Haas",
        "timestamp": 1563994983
    },
    {
        "content": "<p>Thanks Everyone, the comments and feedbacks are very interesting and useful. </p>\n<p>sounds like majority of  the working groups prefer using fixed. <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> , is there any plan for the community to publish a 'pattern' version of Vital Sign profiles? As <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span>  mentioned, a guideline from Community on topics like this will be helpful.<br>\n<span class=\"user-mention\" data-user-id=\"191368\">@Brett Esler</span> ,  let's chat around this in the next CWG and see if we can include something as AUS  guideline.</p>",
        "id": 171651281,
        "sender_full_name": "Shovan Roy",
        "timestamp": 1564010788
    },
    {
        "content": "<p>We'd never consider publishing the same profile different ways.  We could change the style between versions - even if normative - if the change was one of style rather than substance.</p>",
        "id": 171651315,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564010872
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> I don't understand the point about the difference in rendering between fixed and pattern. I render both of them the same way.</p>",
        "id": 171764754,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564138762
    },
    {
        "content": "<p>I strongly recommend pattern rather than fixed unless you really are saying 'no text'. That's generally a bad idea and it's false economy to make things easier for users in ways that breaks them</p>",
        "id": 171764761,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564138798
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> -- maybe you render using a similar approach, but the visual output is definitely different for this specific used case (fixing a concept).<br>\nSliced w/ fixed system and code (image 1) vs patternCodeableConcept (image 2):<br>\n<a href=\"/user_uploads/10155/Q-F2Qmf9dYdDTB3MLo5LXyfb/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a><br>\n<a href=\"/user_uploads/10155/80_uAOzerRCMCv5GWANGv60w/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/Q-F2Qmf9dYdDTB3MLo5LXyfb/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/Q-F2Qmf9dYdDTB3MLo5LXyfb/pasted_image.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/10155/80_uAOzerRCMCv5GWANGv60w/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/80_uAOzerRCMCv5GWANGv60w/pasted_image.png\"></a></div>",
        "id": 171772809,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1564147194
    },
    {
        "content": "<p>IMO, the first approach (sliced and fixed) is much easier to scan and visually process.</p>",
        "id": 171772908,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1564147276
    },
    {
        "content": "<blockquote>\n<p>I strongly recommend pattern rather than fixed unless you really are saying 'no text'.</p>\n</blockquote>\n<p>Ah.  I think maybe you misunderstood what <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> and I are advocating for.  I agree that <code>fixedCodeableConcept</code> or <code>fixedCoding</code> would be a bad idea.  We're talking about slicing <code>coding</code> and fixing the <code>system</code> and <code>code</code> independently (which would allow <code>text</code> or <code>display</code>).</p>",
        "id": 171773062,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1564147410
    },
    {
        "content": "<p>Actually you're slicing the thing containing the CodeableConcept <em>and</em> you're slicing Coding.  It's introducing that two layers of slicing that makes the 'fixed' approach challenging and hard for people to understand.</p>",
        "id": 171777166,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564150635
    },
    {
        "content": "<p>it's you that's doing something different - you're fixing primitive fields rather than fixing a pattern for a  complex type. Anyway, I'm open to the idea that a fixed value or a pattern value could be represented in a different way</p>",
        "id": 171806844,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564172175
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>,  <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> </p>\n<p>If pattern is the preferred option, then as I mentioned, is there any plan to draft Pattern profile for Vital Sign? If I adopt pattern for my profiles (which I'm very inclined towards doing) but Vital sign remains as fixed, then it kind of makes the profile approach for my IG inconsistent. Though it's not a major issue but any I was wondering if anything can be done by the FHIR community so that consistent approach can be taken for the IG publishers.  whoever uses fixed they can take the fixed Vital sign and there will be an option for 'pattern' implementer? sorry if it's a too much of ask and sounds non reasonable :)</p>",
        "id": 171908264,
        "sender_full_name": "Shovan Roy",
        "timestamp": 1564355315
    },
    {
        "content": "<p>Feel free to submit a change request to the Vital Sign profiles.  I expect the outcome will be some formal guidance on preferred approach from MnM.  That will likely result in a change to using pattern, but that outcome isn't guaranteed.</p>",
        "id": 171911066,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564361228
    },
    {
        "content": "<p>We don’t agree on a style. And it appears there is more concern for the authors convenience than  the readers ability to understand the content.  certainly not a fan of changing the vitals profiles so there will be push back unless a better case for a change can be made.</p>",
        "id": 171920178,
        "sender_full_name": "Eric Haas",
        "timestamp": 1564379060
    },
    {
        "content": "<p>It's got nothing to do with author's convenience. if you fix the value of a CodeableConcept yo are not only saying \"this code\", you are also saying:<br>\n- no text.<br>\n- no other codes<br>\n- no version (unless you fix the version)<br>\n- no extensions</p>",
        "id": 171920257,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564379236
    },
    {
        "content": "<p>On the other hand, but using pattern, you can say 'this code', while not nailing down the other things. This makes your profile more robust to other use cases, and to underlying terminology issues</p>",
        "id": 171920264,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564379271
    },
    {
        "content": "<p>They're not fixing the CodeableConcept.  They're fixing a single code and system within a slice of Coding.</p>",
        "id": 171920328,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564379389
    },
    {
        "content": "<p>However, that doesn't work if you're slicing on the CodeableConcept itself</p>",
        "id": 171920375,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564379404
    },
    {
        "content": "<p>Right now, the tooling doesn't slicing happening inside a discriminator.</p>",
        "id": 171920377,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564379421
    },
    {
        "content": "<p>well, a double slicing is not only hard for the validator (where I haven't faced that challenge), it's a cognition load on the user too. It achieves the same as a pattern, but at a higher price. So why not use a pattern? What have I missed? </p>\n<p>Is this purely a snit about how the pattern is represented in the table format?</p>",
        "id": 171920458,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564379634
    },
    {
        "content": "<p>I think that's the main issue, yes.</p>",
        "id": 171920765,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564380067
    },
    {
        "content": "<p>well, can we do something about that?</p>",
        "id": 171921490,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564381252
    },
    {
        "content": "<p>I'm game, and I have an idea but I'm looking to canvas others before committing time to coding something</p>",
        "id": 171921503,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564381290
    },
    {
        "content": "<p>We don’t agree on a style. And it appears there is more concern for the authors convenience than  the readers ability to understand the content.  certainly not a fan of changing the vitals profiles so there will be push back unless a better case for a change can be made.</p>",
        "id": 171923536,
        "sender_full_name": "Eric Haas",
        "timestamp": 1564384203
    },
    {
        "content": "<blockquote>\n<p>We don’t agree on a style</p>\n</blockquote>\n<p>This was an exact repeat of above.. probably a technical glitch</p>",
        "id": 171923680,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564384382
    },
    {
        "content": "<p>On a related note, is ObservationDefinition being progressed in R5? </p>\n<p>A number of developers I've spoken to, do not like fixed codes profiles (especially those familair with CodeSystems), we have to spend a lot of time working out the 'diff' which ObservationDefinition or a spreadsheet offers. Patterns or profiles on the different types of Observation (Value, CodeableConcept) [with examples] seemed more useful. So if you wanted a 'smoking status' observation, you would use ObservationDefinition to find the smoking status entry, which you tell you the code, valuset and which Observation profile (implied via CodeableConcept type) to use.</p>",
        "id": 171923771,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1564384474
    },
    {
        "content": "<p>Actually, this is on my todo list - we want a bi-directional transform between profile and a more tabular structure, since you oly have the program the table once</p>",
        "id": 171925460,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564386641
    },
    {
        "content": "<p>We could quite easily come up with a 'standard' rendering for the common pattern of a pattern that locks down a single coding to a particular code &amp; system.  I'm not sure how easy it will be to come up with a generic pattern rendering that's cleaner though.</p>",
        "id": 171948622,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564409448
    },
    {
        "content": "<p>I'd like to understand what you all are wrestling with. Any guidance on how to get up to speed on these two approaches and the visual target you're aiming for? Where would this be discussed in ATL if that is the plan?</p>",
        "id": 171950070,
        "sender_full_name": "Robert McClure",
        "timestamp": 1564410543
    },
    {
        "content": "<p>If discussed, it would be during a FHIR-I session, or maybe the Monday lunch session</p>",
        "id": 171950552,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564410852
    },
    {
        "content": "<p>Question is the style you see on code here: <a href=\"http://build.fhir.org/ig/HL7/genomics-reporting/obs-haplotype.html\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/genomics-reporting/obs-haplotype.html\">http://build.fhir.org/ig/HL7/genomics-reporting/obs-haplotype.html</a><br>\nvs. here: <a href=\"http://build.fhir.org/resprate.html\" target=\"_blank\" title=\"http://build.fhir.org/resprate.html\">http://build.fhir.org/resprate.html</a></p>",
        "id": 171950668,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564410938
    },
    {
        "content": "<p>The former is the only way you can do it in some cases.  There are different opinions about which approach is easier for implementers to understand.  And no-one's super-enthused about how either approach renders.</p>",
        "id": 171950786,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564411000
    },
    {
        "content": "<p>I think the pattern approach is simpler and more understandable, but the visual rendering of the two fixed codes in coding approach is better<br>\nso not a particularly clear choice<br>\nI'm starting to go toward pattern more myself</p>",
        "id": 171954540,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1564413346
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> I can find documentation for slicing at (<a href=\"https://www.hl7.org/fhir/profiling.html#slicing\" target=\"_blank\" title=\"https://www.hl7.org/fhir/profiling.html#slicing\">https://www.hl7.org/fhir/profiling.html#slicing</a>). Where is documentation for pattern?</p>",
        "id": 171968309,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1564422849
    },
    {
        "content": "<p><a href=\"http://build.fhir.org/profiling#pattern\" target=\"_blank\" title=\"http://build.fhir.org/profiling#pattern\">http://build.fhir.org/profiling#pattern</a></p>",
        "id": 171992996,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564443449
    },
    {
        "content": "<p>The link above doesn't go to a specific part of the profiling page (at least not in my browser).  That said, the profiling page discusses <code>pattern</code> as it applies to slicing and discriminators.  If you just want to know about using <code>pattern</code> to indicate that an element's value should conform to a certain pattern, see this documentation: <a href=\"http://build.fhir.org/elementdefinition-definitions.html#ElementDefinition.pattern_x_\" target=\"_blank\" title=\"http://build.fhir.org/elementdefinition-definitions.html#ElementDefinition.pattern_x_\">http://build.fhir.org/elementdefinition-definitions.html#ElementDefinition.pattern_x_</a></p>",
        "id": 171997222,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1564449407
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191687\">@Kevin Mayfield</span>  I think we are talking about profile styles. but   I agree with your approach and have written a python script to do just that with tables.  Its a shortcut to profiling observation</p>",
        "id": 172002375,
        "sender_full_name": "Eric Haas",
        "timestamp": 1564457617
    },
    {
        "content": "<p>I think if we fix the rendered output so its easier on the eyes the we are in agreement.</p>",
        "id": 172002506,
        "sender_full_name": "Eric Haas",
        "timestamp": 1564457863
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/b-FP6-I-FoM9ojeyZ4OzrEUQ/Screenshot_20190730-093811_Chrome.jpg\" target=\"_blank\" title=\"Screenshot_20190730-093811_Chrome.jpg\">Screenshot_20190730-093811_Chrome.jpg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/b-FP6-I-FoM9ojeyZ4OzrEUQ/Screenshot_20190730-093811_Chrome.jpg\" target=\"_blank\" title=\"Screenshot_20190730-093811_Chrome.jpg\"><img src=\"/user_uploads/10155/b-FP6-I-FoM9ojeyZ4OzrEUQ/Screenshot_20190730-093811_Chrome.jpg\"></a></div>",
        "id": 172013207,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1564472348
    },
    {
        "content": "<p>right. requires consistent profiles that you plug values into from the table. It's on the to do list for the core, though as you show, it doesn't necessarily need core to make it happen</p>",
        "id": 172013445,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564472594
    },
    {
        "content": "<p>Yep, I think I'm looking at doing the same with ObservationDefinition as the table. </p>\n<p>I'm not sure if this is a snomed, read or icd9/10 view of coding but I'm seeing ObservationDefinition as an extension on top of Code (from CodeSystem).<br>\nOr put another way, if the code (from codesystem) has a table entry (or ObservationDefintion) then it also has an implied or computable Observation profile.<br>\nI've added a picture of the work I'd done, as a developer I'd probably use a screen like this when working with observation profiles. As a developer once I've  understood  the 'boiler plate' observation profile, I would rarely use it.</p>",
        "id": 172014510,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1564473592
    },
    {
        "content": "<p>I have a diagram about this somewhere:<br>\nMedication builds on rxNorm / DM+D etc <br>\nObservationDefinition builds on LOINC<br>\nConditionDefinition builds on Snomed Findings heirarchy<br>\nBodyStructure builds on Snomed AnatomicalLocation heirachy</p>",
        "id": 172014715,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564473716
    },
    {
        "content": "<p>They are not the same thing, but they are closely related</p>",
        "id": 172014791,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564473742
    },
    {
        "content": "<p>I'll have a look at those, I'm wondering if they have a set of generic properties which could be in  a 'CodeDefinition' resource.</p>",
        "id": 172015641,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1564474479
    },
    {
        "content": "<p>That’d be a “Concept” Resource. Vocab talked about this in depth at the last meeting, and decided that we didn’t want a definition for this resource. CodeSystem is what we’ll stick with</p>",
        "id": 172022241,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564480487
    },
    {
        "content": "<p>But there’s a cut off point - a hazy point - where there’s benefit to a generic concepts with properties, and then others where there is not.</p>",
        "id": 172022297,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564480543
    },
    {
        "content": "<p>But in several places we trade between the 2</p>",
        "id": 172022312,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564480557
    },
    {
        "content": "<p>Cheers. I need to research this, I think their will be a difference between developers and modellers/terminologists views in this. I don't see much understanding of terminology (snomed) by developers these days and my gut feeling is advanced use obscures more simple use. A Concept resource could be the bridge to understanding (and more widespread use).</p>",
        "id": 172103867,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1564556618
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194909\">@Kevin Mayfield</span> Could you elaborate more on why and how you think a Concept resource would serve to provide that bridge?</p>",
        "id": 172121226,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1564575168
    },
    {
        "content": "<p>I think this discussion is relevant for the CARIN BlueButton guide (FYI <span class=\"user-mention\" data-user-id=\"192132\">@Amol Vyas (Cambia)</span>), which <a href=\"https://build.fhir.org/ig/HL7/carin-bb/StructureDefinition-CARIN-BB-ExplanationOfBenefit-Inpatient-Facility.html#sd-5-1formal-views-of-profile-content\" target=\"_blank\" title=\"https://build.fhir.org/ig/HL7/carin-bb/StructureDefinition-CARIN-BB-ExplanationOfBenefit-Inpatient-Facility.html#sd-5-1formal-views-of-profile-content\">currently uses fixed</a> bindings for a number of CodeableConcepts. From discussion here, <code>pattern</code> should be the right way to express.</p>",
        "id": 172124259,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1564577808
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> I’ve noticed a quite a few developers struggling with codes. Example question ‘what is the snomed code for body weight’, My answer would be to use <a href=\"https://snomedbrowser.com/\" target=\"_blank\" title=\"https://snomedbrowser.com/\">https://snomedbrowser.com/</a><br>\nUsing a full snomed browser gives a lot of data but obscured the answer. (A simple test at a recent event got the answer several minutes ahead of official browser by using the simple one.</p>\n<p>Likewise terminology queries in FHIR are more involved compared to other resource queries. I’m the only developer in the UK that I know of who has attempted terminology queries. I’m not sure why this is so but I suspect it’s a combo of lack of knowledge of snomed plus more different style of queries in fhir terminology. </p>\n<p>I need to look into this though and prove.</p>",
        "id": 172140031,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1564588840
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191687\">@Kevin Mayfield</span> I think that's distinct from how we want to represent slices that are tied to a particular code?</p>",
        "id": 172141591,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564590072
    },
    {
        "content": "<p>Yes, <span class=\"user-mention\" data-user-id=\"191687\">@Kevin Mayfield</span>.  Maybe would be good to post as a topic on the terminology stream?</p>",
        "id": 172141834,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1564590292
    },
    {
        "content": "<p>Not sure, I’m aware of a bit of kick back on profiling in the UK (observations was one of them)<br>\nRe slices - the ones I’ve seen have caused confusion and developers have tended to look at examples instead. <br>\n(I know that’s what developers do.)8888</p>",
        "id": 172143002,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1564591279
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191687\">@Kevin Mayfield</span> <br>\nCan you say any more about slicing that confuses rather than informs developers?</p>",
        "id": 172177437,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1564617349
    },
    {
        "content": "<p>Its not really the slicing but these are sliced <a href=\"https://nhsconnect.github.io/FHIR-NEWS2/news2_and_subscore_profiles.html\" target=\"_blank\" title=\"https://nhsconnect.github.io/FHIR-NEWS2/news2_and_subscore_profiles.html\">https://nhsconnect.github.io/FHIR-NEWS2/news2_and_subscore_profiles.html</a></p>\n<p>Many developers I spoke to, 'couldn't see the wood for the trees' in the profiles, too much repitition and it took a little bit of time form the to work out what to extract (codes, valuesets, units, etc).</p>\n<p>I don't know why they have SNOMED and LOINC slices, it could be international compatibility. I ignored them as I didn't have any way of implementing them (I was building a mock EPR not a terminology server). A plain language description might be better explaining use with other codesystems?</p>\n<p>My main gripe is how complex definition of Observations is, compared to how they are going to be used: code, value, units, patientid and date.</p>",
        "id": 172197376,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1564643568
    },
    {
        "content": "<p>the LOINC/Snomed thing is for international compatibility, which really means consumer compatibility</p>",
        "id": 172198236,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564644625
    },
    {
        "content": "<p>you'll note that HL7 implementation guides generally do have a narrative explanation of the profiles. The wood/tree thing is a challenge for any specification. We try to do both by having differential and snapshot</p>",
        "id": 172198270,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564644677
    },
    {
        "content": "<p>but we could be talking forests with Observations, not woods. The EPR systems I worked with in the late 90's had a huge amount of Observations.</p>",
        "id": 172199857,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1564646213
    },
    {
        "content": "<p>I'm not sure what your point is. Is that about the size of the instances? that's a different kind of problem</p>",
        "id": 172199894,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564646273
    },
    {
        "content": "<p>If you validate against the profiles, that should also yell at you and tell you where you're non-conformant.  (Ignoring the LOINC bindings in vital signs means you're non-conformant not only with the UK profiles but with the base FHIR specification.)</p>",
        "id": 172228671,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564671664
    },
    {
        "content": "<p>ok. so. here's a draft rendering of a pattern value in the diff:</p>",
        "id": 172265708,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564697158
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/hilbt9C2EjMUxjV4744YzV-O/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/hilbt9C2EjMUxjV4744YzV-O/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/hilbt9C2EjMUxjV4744YzV-O/pasted_image.png\"></a></div>",
        "id": 172265710,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564697160
    },
    {
        "content": "<p>and in the snapshot:</p>",
        "id": 172265786,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564697196
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/v6hkHnxNH6EFLTOe0J05mwbH/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/v6hkHnxNH6EFLTOe0J05mwbH/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/v6hkHnxNH6EFLTOe0J05mwbH/pasted_image.png\"></a></div>",
        "id": 172265790,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564697199
    },
    {
        "content": "<p>Comments welcome (e.g. <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> )</p>",
        "id": 172265813,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564697228
    },
    {
        "content": "<p>The lock icon implies that patterns are locked down more than they are.  Perhaps change \"As shown\" to \"At least the following\"</p>",
        "id": 172266368,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564697844
    },
    {
        "content": "<p>Looks good to me</p>",
        "id": 172269092,
        "sender_full_name": "Eric Haas",
        "timestamp": 1564700549
    },
    {
        "content": "<p>It would be good to see a full real example, but this seems to be looking pretty good.</p>",
        "id": 172271964,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1564703894
    },
    {
        "content": "<p>Looks good to me ..</p>",
        "id": 172273199,
        "sender_full_name": "Shovan Roy",
        "timestamp": 1564705271
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191687\">@Kevin Mayfield</span> </p>\n<blockquote>\n<p>Its not really the slicing but these are sliced <a href=\"https://nhsconnect.github.io/FHIR-NEWS2/news2_and_subscore_profiles.html\" target=\"_blank\" title=\"https://nhsconnect.github.io/FHIR-NEWS2/news2_and_subscore_profiles.html\">https://nhsconnect.github.io/FHIR-NEWS2/news2_and_subscore_profiles.html</a></p>\n</blockquote>\n<p>The profile <a href=\"https://fhir.hl7.org.uk/STU3/StructureDefinition/CareConnect-BloodPressure-Observation-1\" target=\"_blank\" title=\"https://fhir.hl7.org.uk/STU3/StructureDefinition/CareConnect-BloodPressure-Observation-1\">https://fhir.hl7.org.uk/STU3/StructureDefinition/CareConnect-BloodPressure-Observation-1</a> slices code.coding with a discriminator of code, but I expect they want to discriminate on system</p>",
        "id": 172282805,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1564720153
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> yes it won't be conformant but will many EPR's support multiple code systems? Most I'm aware of only have one main codesystem, they may convert to snomed but to another (that won't be used and is just for conformance - it's not causing problems with validation as the validator doesn't support LOINC)</p>",
        "id": 172290827,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1564732473
    },
    {
        "content": "<blockquote>\n<p><a href=\"/user_uploads/10155/hilbt9C2EjMUxjV4744YzV-O/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n</blockquote>\n<p>Which example is this?</p>",
        "id": 172291982,
        "sender_full_name": "Diego Bosca",
        "timestamp": 1564733833
    },
    {
        "content": "<p>The FHIR validator should yell if the slices aren't satisfied.  If the system doesn't provide a LOINC translation (for the 10ish profiled vital signs) then the instance is not conformant with FHIR.  The expectation is that implementers will perform translation (hard-coded translation if need-be) to ensure the correct LOINC codes are in place.  That allows a critical amount of cross-border interoperability.</p>",
        "id": 172312423,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564755686
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> -- your proposed rendering scratches my itch.  I think I could be convinced to switch CIMPL over to export patterns if you implement this in the publisher.</p>",
        "id": 172507506,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1565014491
    },
    {
        "content": "<p>It’s implemented. So have a play</p>",
        "id": 172507568,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1565014545
    },
    {
        "content": "<p>Is cross border critical? Sounds like a 'nice to have' rather than mandatory, getting data exchanged locally or even nationally should be a higher priority.</p>",
        "id": 172667699,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1565175722
    },
    {
        "content": "<p>HL7 is an international standard.  We strive for international interoperability in those places where the operation of the healthcare system is sufficiently consistent and is within the capabilties of the global implementation community.  For many patients, cross-border <em>is</em> critical.  And for many implementers, reduction in variation across borders simplifies implementation (which in turn reduces costs for everyone).  Requiring interoperability always imposes a cost - someone, somewhere must right extra code, have instances that are a little larger, must spend a few more hours doing mapping, etc.  However, interoperability also reduces costs in other areas.  The standards process strives to find a balance.  If we stay too far one way, the standard gets ignored and isn't implemented.  If we stray too far the other way, the standard provides no benefit.  Mandating a based level of interoperability for things like vital signs, administrative gender, condition status, etc. has not been without controversy.  However, so far, the community as a whole has said that the costs are low enough and the benefits are high enough that it's a reasonable and achievable imposition.</p>\n<p>There are other areas where we'd love to have interoperability where the scale of the work would just be too large - we can't expect all implementers to map all lab codes or all procedure codes.  There are too many and they're just too dynamic.  And some concepts (e.g. billing codes) are too varied due to culture, business convention and politics to have any hope of even national interoperability in many cases, let alone international consistency.</p>\n<p>So - we do what's achievable and the combination of connectathons, implementation and ballots provide the feedback loop about whether we're doing it right.</p>",
        "id": 172681989,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1565187702
    },
    {
        "content": "<p>I can understand that but why LOINC? I know for some Observations, LOINC has codes and SNOMED doesn't - Is that the reason. <br>\nI will experiment automating the conversion but it seems wrong I would do this on an mobile (vital signs) app and seems to be a task for a backend system.</p>",
        "id": 172686012,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1565190521
    },
    {
        "content": "<p>LOINC is freely available to everyone and had appropriate codes for the relevant concepts.  SNOMED was never on the table because of licencing issues.  (It's possible these could have been managed with work with SNOMED International, but there was little incentive to do so given that LOINC required none of that and was fit for purpose.)</p>",
        "id": 172690401,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1565193437
    },
    {
        "content": "<p>vital signs are special because in the next few years, we are going to have a deluge of exchange between patients and their devices and the clinical system, and the consumer eco-system is not jurisdictionally bound. Also, fixing a single code is achievable. There will be pressure to solve this problem for other things - glucose measurement,s particularly, but we haven't taken that on yet</p>",
        "id": 172718814,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1565214331
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> , as discussed in this thread,  I've created a tracker item requesting Vital Sign profile using pattern. <a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23070&amp;start=0\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23070&amp;start=0\">https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23070&amp;start=0</a></p>",
        "id": 172724961,
        "sender_full_name": "Shovan Roy",
        "timestamp": 1565220441
    },
    {
        "content": "<p>The workaround is to not use the intended profile, so for heart rate (and all other Observations) I would use <a href=\"https://fhir.hl7.org.uk/STU3/StructureDefinition/CareConnect-Observation-1\" target=\"_blank\" title=\"https://fhir.hl7.org.uk/STU3/StructureDefinition/CareConnect-Observation-1\">https://fhir.hl7.org.uk/STU3/StructureDefinition/CareConnect-Observation-1</a> The reason for doing this is my EPR only supports one code per observation (and it would be extra overhead to decide which profile to use depending on the codes being returned). <br>\nHowever that leads to question: Is the results returned here wrong? They validate against the profile being used BUT it is not a vital sign (child) profile  <a href=\"https://data.developer.nhs.uk/ccri-fhir/STU3/Observation?code=364075005\" target=\"_blank\" title=\"https://data.developer.nhs.uk/ccri-fhir/STU3/Observation?code=364075005\">https://data.developer.nhs.uk/ccri-fhir/STU3/Observation?code=364075005</a></p>",
        "id": 172746902,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1565252201
    },
    {
        "content": "<p>That's not an option if you want to be FHIR conformant.  If you have an Observation that uses a code from ANY code system and the system generating the Observation recognizes the code system (i.e. You're not converting OBXs from some source where you have no clue what any of the codes mean), then you SHALL comply with the relevant vital sign profile if the code corresponds to a concept covered by one of the profiles.  Incurring the overhead is not optional.  Comply with the profile or you can't call your system FHIR compliant.</p>",
        "id": 172748911,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1565254476
    },
    {
        "content": "<p>I'm not coming from a v2 perspective, in the 90's had (and still do) primary care systems that supported many thousands of different read coded Observations (most now also support SNOMED).   <br>\nIt's an option these systems can also support LOINC, they can choose to support code conversion on the feeds, they can choose to support LOINC on the data they return but that's going to be a binary choice they either do or don't support LOINC for all(/most) Observations<br>\nI've converted a couple of US SMART on FHIR apps from LOINC to SNOMED, it was trivial compared to changing the backend to support multiple code systems. So I'm inclined to believe that conversion in the client rather than server is a lot easier and more practical.</p>",
        "id": 172751086,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1565257024
    },
    {
        "content": "<p>I think what Lloyd is saying is that the existence of the Vital Signs profile as a 'core' profile in the spec means that the observations that are covered by that profile (height, weight, blood pressure etc) SHALL be compliant with that profile to be FHIR compliant...</p>",
        "id": 172788438,
        "sender_full_name": "David Hay",
        "timestamp": 1565287593
    },
    {
        "content": "<p>If those systems are going to migrate to FHIR, they'll have no choice but to make an adjustment to how they process vital signs.  Feel free to make ballot comments around the next release of FHIR - but for FHIR R4, there's no wiggle room.  (And many of us will argue strongly against allowing wiggle room in R5+)</p>",
        "id": 172793085,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1565290339
    },
    {
        "content": "<p>Kevin<br>\nThink of the LOINC codes for vital signs as FHIR-specific codes that flag certain types of observation.<br>\nBeing LOINC codes does help those who understand LOINC, for the rest they are part of the FHIR structure that is added on creation and ignored on consumption. There is no need to process them as LOINC, just as magic values.</p>",
        "id": 172827043,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1565329354
    },
    {
        "content": "<p>I don't mind the resources having LOINC but I do have issues with it being mandatory.</p>\n<p>In the UK we had a similar issue with a mandatory patient identifier (English NHS Number), it meant the standards (mostly HL7v3) couldn't be used in several countries (Wales, Scotland and Northern Ireland) and certain care settings (emergency care). In FHIR it's not mandatory, so it can be used across borders (if a system doesn't understand it, it can ignore it and not persist it). In Scotland you would tend to use CHI number in place of NHS Number, you wouldn't expect NHS Number queries to work. </p>\n<p>Likewise in the UK, LOINC can be used and be safe for certain interactions BUT don't expect it work for other interactions (if your working with a SNOMED/ICD9/ICD10/read4-5 system, use the native coding system for queries).</p>",
        "id": 172834076,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1565339311
    },
    {
        "content": "<p>Mandating a standard code to identify key vital signs regardless of where in the world the data was collected doesn't prevent instances from being used anywhere.  It does impose a cost on implementers, but provides considerable benefit in terms of interoperability.  All standards make mandatory impositions on implementers.  The choice of what is mandatory and what is optional reflects a cost/benefit analysis.</p>",
        "id": 172834926,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1565340388
    },
    {
        "content": "<p>Ok, so were are arguing similar points but I'm seeing LOINC as a barrier to adoption of FHIR. The requirement to support both LOINC (for international compatibility) and SNOMED (for UK clinical use) for Observations is a big one. In addition the support for different profiles for specific LOINC or SNOMED code is another burden.</p>\n<p>As a developer: one codesystem and one profile for Observations would be desirable. Especially on older (primary care) systems which tend to follow the core FHIR Obs model, rather than newer ones which may lean towards HL7v3 and FHIR profiling models (I don't know about non UK primary systems but UK ones tend to lean more on CodeSystems (hierarchies) rather than lists or valuesets).</p>",
        "id": 172836373,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1565341936
    },
    {
        "content": "<p>you don't need to \"support\" LOINC. you just need to put a magic flag on the relevant observations. The idea has attracted fierce dislike in only one country... UK</p>",
        "id": 172837910,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1565343740
    },
    {
        "content": "<p>but from my pov it's not realistic to think that there can be only one code on all observations.</p>",
        "id": 172837947,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1565343803
    },
    {
        "content": "<p>FHIR mandates codes from <a href=\"http://hl7.org/fhir/administrative-gender\" target=\"_blank\" title=\"http://hl7.org/fhir/administrative-gender\">http://hl7.org/fhir/administrative-gender</a> for Patient.gender and from <a href=\"http://hl7.org/fhir/ValueSet/address-type\" target=\"_blank\" title=\"http://hl7.org/fhir/ValueSet/address-type\">http://hl7.org/fhir/ValueSet/address-type</a> for Address.type.<br>\nMost systems have other codes for these things, and do not natively use the FHIR mandated codes.<br>\nI think of the LOINC codes used to indicate which type of observation a vital sign is as being the same sort of thing.</p>",
        "id": 172992587,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1565575555
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191682\">@Richard Townley-O'Neill</span> a modelling first approach is acceptable in a number of areas, like the ones you've mentioned. <br>\nIt's an approach we've used in the UK for secondary/acute care however those systems didn't get to the level of maturity our primary care systems did. </p>\n<p>However I think it's possible to decouple compliance (layer) [which would do codeSystem and profile conversions] from implementation (layer), so still retain the advantages of CodeSystem first approach (development velocity). </p>\n<p>That seems like the correct approach as it copes with retro fitting profiles. e.g. in UK heart rate profile didn't exist a year or so ago but heart rate observations did (as FHIR SNOMED examples) but then we had a heart rate profile six or so months later.  <br>\nIt will have issues around coded Observations when a valueCodeable concept is not in the ValueSet. These issues are going to exist anyway with historic Observation rich data sources.</p>",
        "id": 173005245,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1565597180
    },
    {
        "content": "<p>Implementations should not complain about unrecognized Codings so long as a recognized Coding is present.  Complaining because of extra codes forces a custom interface for each receiver - precisely the opposite of what we're trying to achieve.</p>",
        "id": 173083610,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1565669400
    },
    {
        "content": "<p>No, I'm complaining that this is making moving both to FHIR and Coded Observations difficult. </p>\n<p>The layering (or microservice) is implied by mandatory LOINC, it is exactly what happened when SNOMED became mandatory on UK READ based systems.</p>",
        "id": 173209839,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1565794297
    },
    {
        "content": "<p>It's always easier to send whatever you like.  Interoperability inevitably is more difficult.</p>",
        "id": 173258061,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1565833082
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 173567483,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566239691
    },
    {
        "content": "<p>I have been converting US Core from fixed to patterns and two issues came up...<br>\n1. the way it is rendered by using the slice name  may confuse the reader into thinking there an a &lt;slicename&gt; element if they don't immediately recognize it as a slice name of the \"parent\" element.  I added \"Slice\" to all my prettified slice names to make it obvious. I think this is something the tooling should do like adding \"(Slice)\" after the slice name.  here is my diff to illustrate:<br>\n<a href=\"/user_uploads/10155/h_VBWt6hQz4d4s21Kak2xDJV/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/h_VBWt6hQz4d4s21Kak2xDJV/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/h_VBWt6hQz4d4s21Kak2xDJV/pasted_image.png\"></a></div>",
        "id": 173616718,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566257791
    },
    {
        "content": "<p>2. I discovered that can't mix n match fixed with pattern.   I tried to use pattern for the code in  the above and the tool complains because the base vitals profile uses fixed.  I guess that is what all the fuss was about in the first place. <br>\nHere is the message:  </p>\n<div class=\"codehilite\"><pre><span></span>Unable to generate snapshot for http://hl7.org/fhir/us/core/StructureDefinition/us-core-pulse-oximetry: Slicing rules on differential (org.hl7.fhir.r5.model.ElementDefinition$ElementDefinitionSlicingDiscriminatorComponent@76111797(/open)) do not match those on base (org.hl7.fhir.r5.model.ElementDefinition$ElementDefinitionSlicingDiscriminatorComponent@304cc1dd, org.hl7.fhir.r5.model.ElementDefinition$ElementDefinitionSlicingDiscriminatorComponent@2ee9814f(false/open)) - disciminator @ Observation.code.coding (http://hl7.org/fhir/StructureDefinition/oxygensat)\n</pre></div>",
        "id": 173616948,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566258076
    },
    {
        "content": "<p>3. patterns are only marginally easier than using Fixed Codes  (maybe because I only used fixed until now)</p>",
        "id": 173617038,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566258170
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span>, Forge renders slices similar to your illustration. Wondering if this is causing confusion and if/how we can improve this.<br>\nWe could clarify slice rendering using \"{elementName}:{sliceName}\", e.g. \"component:FlowRate\". Repeating the element name would provide a more explicit visual connection to the associated slice entry and sibling slices. It does claim more horizontal screen space, which can introduce other challenges (esp. cut off).<br>\nNamed slices could also be decorated and highlighted using a special icon, like in Forge.</p>",
        "id": 173639071,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1566290628
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> could the rendering of a pattern on coding been improved by actually linking to the fixed System?</p>",
        "id": 173650348,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1566301946
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> Personally, I prefer the \"{elementName}:{sliceName}\" over the icon which could be easily overlooked but I see the problem with length.  maybe my problem is using element like names and instead standardized on use a short non descriptive slice iteration like  's1'    so is   <br>\n\"{elementName}:{sliceName}\" becomes for example Coding:s1, Coding:s2.    I guess the underlying problem I am trying to solve is how to display the slicing in the tree expecting the naive reader to intuitively know what it means .   I  don't even know if that is possible.</p>",
        "id": 173657042,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566307480
    },
    {
        "content": "<p>perhaps change icon from a barrel to a full pie with slices and for each slice a slice of pie?</p>",
        "id": 173657294,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566307632
    },
    {
        "content": "<blockquote>\n<p>perhaps change icon from a barrel to a full pie with slices and for each slice a slice of pie?</p>\n</blockquote>\n<p>Originally Forge used pie/chart icons to represent slices, however this also seemed a bit far fetched. In recent Forge releases, named slices are decorated with a bucket icon, to reflect the notion of a slice bucket. Seems a _slightly_ better visual metaphor, assuming the user is familiar with the concept of a slice.</p>",
        "id": 173659436,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1566309008
    },
    {
        "content": "<p>(as a validator will try to match elements in an instance to \"slice buckets\" in the profile)</p>",
        "id": 173659517,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1566309070
    },
    {
        "content": "<p>BTW I think that nesting named slices as children of the associated slice entry clearly indicates the relationship between them, more so than displaying named slices as siblings of the slice entry.</p>",
        "id": 173659661,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1566309187
    },
    {
        "content": "<p>I don't understand how a bucket reflect the notion of a slice?   I think of a slice of pie or pizza or bread.</p>",
        "id": 173660495,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566309731
    },
    {
        "content": "<p>and I am assuming  the user is not familiar with the concept of slice.</p>",
        "id": 173660597,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566309812
    },
    {
        "content": "<p>I think I finally realized what that barrel thingy icon is supposed to be   -  a stack of discs....</p>",
        "id": 173661115,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566310171
    },
    {
        "content": "<p>if we stick with that metaphor then the icon for each slice would be a disc</p>",
        "id": 173661253,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566310242
    },
    {
        "content": "<p>Forge represents a slice entry with an icon of a stack of sheets and a named slice with an icon of a bucket. If you try to think about how slices are processed (which is their primary _raison d`être_), then the bucket metaphor makes perfect sense, more so then a silly pizza slice.</p>",
        "id": 173662086,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1566310879
    },
    {
        "content": "<p>BTW I try to refrain from designing my own icons - way too hard. Instead, I try to use suitable free (vector) art from some online icon libraries. Unfortunately, the graphic designers are not aware of slicing... ;p</p>",
        "id": 173662477,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1566311149
    },
    {
        "content": "<p>I am 100% on board with the concern here. I'm looking at things like:</p>\n<p><a href=\"/user_uploads/10155/d9lq0dxA-FCTkv6vyOVzitPb/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/d9lq0dxA-FCTkv6vyOVzitPb/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/d9lq0dxA-FCTkv6vyOVzitPb/pasted_image.png\"></a></div><p>and thinking to myself, \"wait, is there an <code>assessplan</code> element in the JSON?\" Nobody is going to be able to understand this.</p>",
        "id": 173804151,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566400968
    },
    {
        "content": "<p>I updated that to : </p>\n<p><a href=\"/user_uploads/10155/D71Nh4f9ue2J2r-C2CKqMKAT/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/D71Nh4f9ue2J2r-C2CKqMKAT/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/D71Nh4f9ue2J2r-C2CKqMKAT/pasted_image.png\"></a></div>",
        "id": 173804524,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566401221
    },
    {
        "content": "<p>I just see <code>assessplan</code> changed to <code>AssessPlanSlice</code>. The overall layout/presentation is still the same, so I still have the same basic issue of: \"is this represented as an element in the JSON\"?</p>",
        "id": 173804723,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566401321
    },
    {
        "content": "<p>in the latest Argonaut R4 will be merging over....  I added \"Slice\" to every prettified slice name for now...as a temp solution... this rendering is very new and Grahame did it to make it easier to read and its a big improvement  ( thanks GG )  but I think the challenge is to make easy to understand for the naive reader who is not slicing expert.</p>",
        "id": 173805068,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566401496
    },
    {
        "content": "<p>So it sounds like  Coding:&lt;slicename&gt;  or Coding:&lt;slice N&gt; or something would be better as Michel suggested.</p>",
        "id": 173805335,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566401659
    },
    {
        "content": "<p>like this?...<br>\n<a href=\"/user_uploads/10155/wKKPbHFyHWOacHRCWg_x9qbj/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/wKKPbHFyHWOacHRCWg_x9qbj/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/wKKPbHFyHWOacHRCWg_x9qbj/pasted_image.png\"></a></div>",
        "id": 173813606,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566407470
    },
    {
        "content": "<p>there's a certain irony here... we changed it after a discussion to make it easier to understand, but not everyone is finding it easier...</p>",
        "id": 173825950,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566416507
    },
    {
        "content": "<p>I think its better  - but just needs a few tweaks.  slicing in not easy to understand and trying to represent it visually is a challenge I think you did pretty well actually.</p>",
        "id": 173826625,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566417049
    },
    {
        "content": "<p>I'll play around with it tomorrow</p>",
        "id": 173826746,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566417153
    },
    {
        "content": "<p>only issue is the name slice  - I think the &lt;element&gt;:&lt;slice-name&gt; is better and the root  still does not display the cardinality</p>",
        "id": 173826757,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566417166
    },
    {
        "content": "<p>Nesting levels is another issue: the slices shouldn't be drawn with an extra level of nesting, since the property-hierarchy/JSON/XML serialization doesn't have an extra level of nesting.</p>",
        "id": 173826921,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566417272
    },
    {
        "content": "<p>hah that was the change everyone asked for</p>",
        "id": 173826977,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566417320
    },
    {
        "content": "<p>Whelp. I wonder if we could do some real-world user testing on this.</p>",
        "id": 173827076,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566417385
    },
    {
        "content": "<p>I wonder too. you have the best resources for that</p>",
        "id": 173827165,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566417467
    },
    {
        "content": "<p>I disagree with Josh -  I think is easier for the reader to understand in the current layout  since a slice is a part of the whole.  I don't think it  needs to mirror the serialization.</p>",
        "id": 173828278,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566418348
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> -- I don't think your example slicename in the screenshot above (<code>Coding:AssessPlan</code>) is quite right.  It's the <code>category</code> that's being sliced (which is a <code>CodeableConcept</code>, not a <code>Coding</code>) -- so it should be <code>CodeableConcept:AssessPlan</code>.</p>\n<p>That said, if we were going to move toward that type of format, I think I might prefer <code>category:AssessPlan</code> -- as it <em>might</em> make it clearer that it's the same level as <code>category</code> (to <em>maybe</em> address Josh's concern), and it is more consistent with how slicenames are serialized into the <code>id</code> (for the nerds like us who know those technical details).</p>",
        "id": 173831085,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1566420782
    },
    {
        "content": "<p>we can just start with :</p>",
        "id": 173831217,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566420923
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span>  I was a bit too quick and dirty with that.  but My concern isn't for us nerdy types who are in the weeds but for the casual reader who needs to understand what it means without having written a profile.  so whatever we do should make sense to them.</p>",
        "id": 173837252,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566426188
    },
    {
        "content": "<p>i'll try using Chris' excellent suggestion</p>",
        "id": 173837374,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566426343
    },
    {
        "content": "<p><a href=\"user_uploads/10155/E_pbpsVuoNjGI0t96ZwgtmgI/Untitled.png\" target=\"_blank\" title=\"user_uploads/10155/E_pbpsVuoNjGI0t96ZwgtmgI/Untitled.png\">Untitled.png</a></p>\n<div class=\"message_inline_image\"><a href=\"user_uploads/10155/E_pbpsVuoNjGI0t96ZwgtmgI/Untitled.png\" target=\"_blank\" title=\"Untitled.png\"><img src=\"user_uploads/10155/E_pbpsVuoNjGI0t96ZwgtmgI/Untitled.png\"></a></div>",
        "id": 173840967,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566430335
    },
    {
        "content": "<p>(I know I went of on a tangent earlier in the thread). That representation is quite clear and understand better what you're intending to achieve.</p>",
        "id": 173860700,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1566460602
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> </p>\n<blockquote>\n<p>Nesting levels is another issue: the slices shouldn't be drawn with an extra level of nesting, since the property-hierarchy/JSON/XML serialization doesn't have an extra level of nesting.</p>\n</blockquote>\n<p>Forge has always represented named slices as children of the associated slice entry. I don't think that a visual rendering MUST be a 1-1 representation of the underlying xml/json serialization; instead, we should try to provide a human-friendly representation. Different serialization formats have slightly different internal structures, visual rendering should abstract those away and show the common conceptual model.<br>\nThat also explains why Forge displays extensions at the bottom; conceptually this makes more sense to me, as the extension element is \"appended\" to the base profile. The fact that extensions in the actual serialization are listed at the top is just an internal implementation detail that IMHO modelers shouldn't have to worry about.</p>\n<p>I think rendering named slices as \"{elementName}:{sliceName}\" is quite explicit. And the nesting level clearly shows the conceptual relationships of the slicing constraints. Named slices inherit common constraints from the associated slice entry, so there is a notion of an hierarchical relationship.</p>",
        "id": 173865804,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1566465823
    },
    {
        "content": "<p>The core spec used to put extensions at the bottom too, but we had lots of questions from implementers who were then confused about why they had to appear at the top in instances.</p>",
        "id": 173877042,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566476538
    },
    {
        "content": "<p>Yes, initially when there was no tooling available, the early adopters were forced to work with low-level XML/JSON, and both formats have their peculiarities. However I'd prefer to hide such details internally. Conceptually, there is no reason that custom extensions should be listed _before_ standard elements.<br>\nDoes ProtoBuf also introduce extensions first...?</p>",
        "id": 173878040,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1566477340
    },
    {
        "content": "<p>I'm not saying that nesting is necessarily wrong -- just that it leads me personally to be confused and it would be nice to understand more about this.</p>",
        "id": 173880681,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566479267
    },
    {
        "content": "<p>Considering that named slices inherit common constraints from the associated slice entry, conceptually there is a parent-child relationship. This relationship is similar to, but different from, child elements. We are trying to represent both concepts by indentation and this may cause confusion. In a way, slicing represents a separate dimension. However I'm somewhat reluctant to implement 3D tree visualizations...</p>\n<p>Rendering named slices as child elements also allows a visitor to collapse the whole slice. This can be quite convenient, e.g. for a (Composition) profile with a large number of slices.</p>\n<p>Nesting named slices also makes sense in Forge. A flattened view would complicate the UI.</p>",
        "id": 173882524,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1566480630
    },
    {
        "content": "<blockquote>\n<p>However I'm somewhat reluctant to implement 3D tree visualizations...</p>\n</blockquote>\n<p>;-)</p>",
        "id": 173887793,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566484310
    },
    {
        "content": "<p>Would be fun to code, I'm sure, but probably just adds to the confusion...</p>",
        "id": 173888380,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1566484728
    },
    {
        "content": "<p>I like the last one I made: <a href=\"#narrow/stream/179166-implementers/topic/Fixed.20Code.20vs.20Pattern/near/173840967\" title=\"#narrow/stream/179166-implementers/topic/Fixed.20Code.20vs.20Pattern/near/173840967\">https://chat.fhir.org/#narrow/stream/179166-implementers/topic/Fixed.20Code.20vs.20Pattern/near/173840967</a><br>\nthe best and think we should go with that one.</p>",
        "id": 173888494,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566484803
    },
    {
        "content": "<p>I don't like the 'lock' icon when we're dealing with 'pattern' because it's not truely fixed values.  But fine with that otherwise.</p>",
        "id": 173895536,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566489725
    },
    {
        "content": "<p>catching up on this thread: </p>\n<blockquote>\n<p>Considering that named slices inherit common constraints from the associated slice entry,</p>\n</blockquote>\n<p>That's not entirely true :-(</p>",
        "id": 173934849,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566523048
    },
    {
        "content": "<p>ok, how about this (<span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> ): <br>\n<a href=\"/user_uploads/10155/UFGX5rSGCqmfzFGeVJ-ykaHX/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/UFGX5rSGCqmfzFGeVJ-ykaHX/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/UFGX5rSGCqmfzFGeVJ-ykaHX/pasted_image.png\"></a></div>",
        "id": 173935164,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566523663
    },
    {
        "content": "<p>If that's a pattern, then I'd rather you say \"Pattern\" rather than \"Fixed value\".  If it was a fixed value, then having an 'id' or extension on the system or code would be prohibited.  However, if it's a pattern, then including those things is fine.  It's a subtle distinction, but I think it matters.</p>",
        "id": 173937251,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566527386
    },
    {
        "content": "<p>I don't know what that is. I'm just owrking on slicing rendering</p>",
        "id": 173937299,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566527422
    },
    {
        "content": "<p>What do you mean when you say \"that's not entirely true\"?  Slices absolutely inherit the constraints of the parent.  The only exception is minOccurs, which can be less as it's a constraint that must be met by the slice collection as a whole.</p>",
        "id": 173937302,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566527453
    },
    {
        "content": "<p>Don't know what 'what' is?</p>",
        "id": 173937306,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566527463
    },
    {
        "content": "<p>whether it's a pattern or a fixed value - I haven't looked at that particular profile details. I'm just working on it as the first example of slicing I found</p>",
        "id": 173937315,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566527501
    },
    {
        "content": "<blockquote>\n<p>Slices absolutely inherit the constraints of the parent</p>\n</blockquote>\n<p>Almost. When you have a slice in a parent profile, and you define another profile, the parent of the slice is the slice in the parent, not the slicing element that contains the slice in the child</p>",
        "id": 173937368,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566527551
    },
    {
        "content": "<p>True, but the constraints of the slicing element that contain the child still apply</p>",
        "id": 173937392,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566527624
    },
    {
        "content": "<p>Yes I think the icons are better and having the cardinality there is certainly helpful.   thx.</p>",
        "id": 173939701,
        "sender_full_name": "Eric Haas",
        "timestamp": 1566531837
    },
    {
        "content": "<blockquote>\n<p>the parent of the slice is the slice in the parent</p>\n</blockquote>\n<p>LOL... I guess we could say \"the base of the slice is the (matching) slice in the parent\"</p>",
        "id": 173953035,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1566550760
    },
    {
        "content": "<blockquote>\n<p>LOL... I guess we could say \"the base of the slice is the (matching) slice in the parent\"</p>\n</blockquote>\n<p>Yeah.  Good thing this stuff's not complicated at all. ;-)</p>\n<p>I like the new rendering, <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>!  The slice is actually a little slice of the barrel thing.  I think it works!</p>",
        "id": 173963494,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1566562229
    },
    {
        "content": "<p>Agreed -- this rendering proposal is a definite improvement! The icons and the repetition of the element name for each slice helps reinforce the structure for me</p>",
        "id": 173969458,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566567678
    },
    {
        "content": "<p>Thanks for putting this together!</p>",
        "id": 173969464,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566567700
    },
    {
        "content": "<p>Great, I will harmonize rendering in Forge.</p>",
        "id": 173969566,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1566567786
    },
    {
        "content": "<p>Michel - the slice icon can be found at <a href=\"http://www.fhir.org/archive/icon_slice_item.png\" target=\"_blank\" title=\"http://www.fhir.org/archive/icon_slice_item.png\">http://www.fhir.org/archive/icon_slice_item.png</a></p>\n<div class=\"message_inline_image\"><a href=\"http://www.fhir.org/archive/icon_slice_item.png\" target=\"_blank\" title=\"http://www.fhir.org/archive/icon_slice_item.png\"><img src=\"https://uploads.zulipusercontent.net/d6d1ba1dac3529874e00d914490294dd206ea344/687474703a2f2f7777772e666869722e6f72672f617263686976652f69636f6e5f736c6963655f6974656d2e706e67\"></a></div>",
        "id": 174002339,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566593665
    },
    {
        "content": "<p>Thanks! But as Forge uses vector icons, I will try to improvise something vaguely similar <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 174123912,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1566808246
    },
    {
        "content": "<p>This is a really interesting thread and I have found it helpful as I've been trying to understand the vital signs requirements and what needs to be done in order to be compliant. I think that the snip from Graham makes the slicing profile clearer.</p>\n<p>One thing that I do still find a little confusing though is in how the slice is described for code in the vital signs profile. <span class=\"user-mention\" data-user-id=\"191682\">@Richard Townley-O'Neill</span> asked if the profiles that <span class=\"user-mention\" data-user-id=\"191687\">@Kevin Mayfield</span> quoted should have been sliced on system rather than code.</p>\n<p>\"The profile <a href=\"https://fhir.hl7.org.uk/STU3/StructureDefinition/CareConnect-BloodPressure-Observation-1\" target=\"_blank\" title=\"https://fhir.hl7.org.uk/STU3/StructureDefinition/CareConnect-BloodPressure-Observation-1\">https://fhir.hl7.org.uk/STU3/StructureDefinition/CareConnect-BloodPressure-Observation-1</a> slices code.coding with a discriminator of code, but I expect they want to discriminate on system\"</p>\n<p>To me this makes sense as then if following the slice there was a SNOMED code it could have a wider possible valueset which seems to be in line with what is intended. For example for blood pressure it would have a Loinc slice with the code 85354-9 followed by a SNOMED slice that may have a value for sitting blood pressure or standing blood pressure.</p>\n<p>Would the above be correct or have I misunderstood?</p>",
        "id": 174701463,
        "sender_full_name": "Pete Salisbury",
        "timestamp": 1567414553
    },
    {
        "content": "<p>?Do we move this out to UK or other thread. <br>\nThat's an interesting thought. I'm not clear on how standing or sitting, if known, would be differentiated.</p>",
        "id": 174702135,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1567415339
    },
    {
        "content": "<p>Note, LOINC free as in beer, not as in freedom; there are things that the LOINC licence prevents you from doing. Specifically: \"users shall not use any of the Licensed Materials for the purpose of developing or promulgating a different standard for identifying patient observations\"</p>",
        "id": 174702349,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1567415579
    },
    {
        "content": "<p>Does that mean the UK needs to BREXIT? (sorry poor humour)</p>",
        "id": 174702435,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1567415651
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193998\">@Pete Salisbury</span> Slicing on \"SNOMED\" wouldn't be that helpful in a BP observation profile I imagine. You would be ruling in thousands of unwanted codes. It is true that slicing on code limits you to one patient position, but I expect that in most cases that would be fine. The profile is meant to guide/enforce uses in the majority of cases. You could have other profiles for the less common cases but with diminishing returns. </p>\n<p>I am not sure if you can slice on a value set (of several patient positions). But even if you can, BP is so basic I think you'd want to keep it as simple as possible. Those who know what they are doing can always go outside the profile and add codes for different positions and situations.</p>",
        "id": 174706299,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1567419878
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191687\">@Kevin Mayfield</span> the sitting and standing would be differentiated by different codes e.g. 163035008 - Sitting Blood Pressure</p>\n<p><span class=\"user-mention\" data-user-id=\"191651\">@Rik Smithies</span> I'm working with the GP systems suppliers in the UK and they will have blood pressure readings associated with a number of codes. I think we would need to define a valueset in SNOMED and define this in our implementation guidance if as you say it is not possible to associate the slice with a valueset.</p>",
        "id": 174706814,
        "sender_full_name": "Pete Salisbury",
        "timestamp": 1567420405
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193998\">@Pete Salisbury</span> my understanding is the read codes for BP would be converted to 75367002 and LOINC 85354-9 (and I would be sending you a question about standing and sitting conversions :) via the supplier)</p>",
        "id": 174707871,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1567421678
    },
    {
        "content": "<p>Curious to know what amount are not just the basic systolic and diastolic with no patient position. I realise that other codes are available. Profiles only standardise the common things. Otherwise you replace thousands of codes with thousands of profiles :-)</p>",
        "id": 174707878,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1567421691
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191651\">@Rik Smithies</span> it is difficult for us to be able to tell what percentage would be recorded with a code other than the simple blood pressure. We are looking to be able to send records from all the GP systems in england so it is some 60 million records spread over 4 clinical systems that allow the data to be entered in different ways. I'm sure most will be under the simple BP code. I guess the question then is would we be non-compliant if we don't make sure the others are sent in the same format?</p>\n<p><span class=\"user-mention\" data-user-id=\"191687\">@Kevin Mayfield</span> we could look to get the suppliers to map at their end and then put the original rubric in codableConcept.text.  The spec does say,</p>\n<p>'Other additional codes are allowed - e.g. more specific LOINC Codes, SNOMED CT concepts, system specific codes. All codes SHALL have an system value'</p>\n<p>Which seems to suggest that it would be feasible to send the more detailed codes though?</p>",
        "id": 174713194,
        "sender_full_name": "Pete Salisbury",
        "timestamp": 1567427302
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193998\">@Pete Salisbury</span> <br>\nThe only point of profiles is to foster interoperability by making it easier to follow business rules. <br>\nimho profiles need to be simple, otherwise they won't help. <br>\nDon't try to cover all the edge cases if that means diluting the usefulness for the basics. <br>\ne.g. if by allowing extra, unusual, BP codes, you also allow lots of other non-BP codes to be used accidentally, that seems worse not better.<br>\nYou can always send other data, outside of this profile. The data is the data, not the profile.</p>",
        "id": 174718425,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1567431701
    },
    {
        "content": "<p>Postel's law comes to mind:<br>\n<a href=\"https://en.wikipedia.org/wiki/Robustness_principle\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Robustness_principle\">https://en.wikipedia.org/wiki/Robustness_principle</a><br>\ni.e. relaxed profiles on the receiving side and strict profiles on the sending side.</p>",
        "id": 174718936,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1567432115
    },
    {
        "content": "<p>Agree with Rik. I'd never heard or seen  sitting or standing BP codes (after 12+ years with a GP supplier) . It was only after starting to work more on standards in acute (I've never seen a BP code at all in 10 years of community and acute)</p>",
        "id": 174719478,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1567432507
    },
    {
        "content": "<blockquote>\n<p>Don't try to cover all the edge cases if that means diluting the usefulness for the basics. <br>\ne.g. if by allowing extra, unusual, BP codes, you also allow lots of other non-BP codes to be used accidentally, that seems worse not better.<br>\nYou can always send other data, outside of this profile. The data is the data, not the profile.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191651\">@Rik Smithies</span>  The Terminology Binding Group in the SNOMED on FHIR Project are working on a Vital Signs Profile using SNOMED CT concepts. Their approach for Value Set binding is to use query-based (intensional) Value Sets which cover both the 'basic' &amp; less commonly-used concepts for blood pressure results, etc without  including irrelevant concepts. Granted, the ECL queries are more complex than using fixed (extensional) lists, but they are more flexible (in terms of use across different SCT editions and versions) and use the grammatical power of a clinical ontology as opposed to a fixed classification system such as Read.</p>",
        "id": 174741191,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1567456993
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span> sounds good. I'd like the profile to be simple to understand by people implementing it and for all the validators to be able to check against it. It may be good to have a \"simple BP\" profile, (e.g. 2 or 3 fixed codes)  and a \"complex BP\" profile (ECL based etc) for those who feel the need for it.</p>",
        "id": 174742418,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1567458698
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191651\">@Rik Smithies</span> that seems a good approach. For example, an IG for GP2GP might only require a \"simple BP profile\" (in fact, the NZ CDA IG for GP2GP contains only 3 SCT concepts for BP).</p>",
        "id": 174743270,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1567459872
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191651\">@Rik Smithies</span> <span class=\"user-mention\" data-user-id=\"193998\">@Pete Salisbury</span> </p>\n<blockquote>\n<p>@Pete Salisbury Slicing on \"SNOMED\" wouldn't be that helpful in a BP observation profile I imagine. You would be ruling in thousands of unwanted codes. It is true that slicing on code limits you to one patient position, but I expect that in most cases that would be fine. The profile is meant to guide/enforce uses in the majority of cases. You could have other profiles for the less common cases but with diminishing returns. </p>\n</blockquote>\n<p>Slicing Observation.code.coding with a discriminator of code means that all instances with a code value of \"75367002\" must have a system of \"<a href=\"http://snomed.info/sct\" target=\"_blank\" title=\"http://snomed.info/sct\">http://snomed.info/sct</a>\". This implies that if the value \"75367002\" is a valid and relevant code in a different code system to SNOMED CT, it cannot be used. I expect that this is unintended, but it might not be a practical problem.</p>",
        "id": 174749655,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1567470449
    },
    {
        "content": "<p>It can't be used in that profile, true. But that's the idea anyway I think. We want that code, from SCT.</p>",
        "id": 174749766,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1567470617
    },
    {
        "content": "<p>If you're going to slice by value, you should always discriminate by both code and system.  (But slicing by pattern is easier.)</p>",
        "id": 174752655,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1567476150
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193998\">@Pete Salisbury</span>  has done some research on use of codes in UK primary care. What I could see was codes that:<br>\n- included context information (e.g. BP taken at home or in a ambulance)<br>\n- included body site <br>\n- different position (sitting/standing)</p>\n<p>I'm wondering if these is a more recent trend in primary care, it was just (well at least 96%) a BP when I (and <span class=\"user-mention\" data-user-id=\"191651\">@Rik Smithies</span> ?) worked on GP systems. I mean several years ago we mostly used 1 or 2 codes for BP.</p>\n<p>As an API consumer, if I asked for the by BP vital signs codes (75367002 or LOINC), I would expect all the BP codes to be returned (inc child codes). However if I asked for ambulatory or home BP I would only expect those BP codes to be returned. (is the former the same as the ECL queries? <span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span> ). [Don't believe using the vital sign BP codes in the Observation is necessary here, the code conversion is done in the query by the system that understands it]</p>\n<p>Interactions between systems (primarily messaging) would need to hold the 75367002 BP and LOINC codes in the Observation. Endpoints can't be expected to understand the child codes, etc. [Conversion is done by the sender]. </p>\n<p>I'm a bit wary this is getting too complicated and it needs to be easily understandable by implementors. Having to go to a profile or ObservationDefinition to find the valueset and units, then a terminology service to expand the snomed ecl in the valueset to get code lists. Then the database to retrieve the data and finally a terminology service to perform code lookups within a codesystem and also conversion to another codesystem ..... is too complex.</p>",
        "id": 174759791,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1567488701
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193998\">@Pete Salisbury</span>  I'm currently working (in-directly) for a GP systems supplier. They have read to snomed functionality, I'm wondering about how to handle mapping profile+code from base to relevant vital signs profile+codes.   In the ideal world I would suggest this is either a NHSD provided service or effort is pooled - it doesn't make sense for them all to produce the same conversions.</p>",
        "id": 174760301,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1567489559
    },
    {
        "content": "<blockquote>\n<p>I'm a bit wary this is getting too complicated</p>\n</blockquote>\n<p>FHIR: easy to understand. Healthcare: complexity that keeps giving ;-)</p>",
        "id": 174762704,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1567493230
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191687\">@Kevin Mayfield</span>  Optimising the interactions between GP systems and terminology services is certainly a significant architectural challenge! Dynamic, in context, querying of SNOMED CT using ECL may become a popular approach, IF the associated presentation layer issues of usability and responsiveness are addressed. The one requirement that FHIR Terminology Service implementations appear to be struggling to meet is where properties, other than identifiers, descriptions and versions are required for all the concepts in a ValueSet.</p>",
        "id": 174763797,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1567494590
    },
    {
        "content": "<p>In general, if you're after child concepts as well then FHIR search has the <code>:below</code> modifier.  So, <code>Observation?code:below=http://snomed.info/sct|75367002 </code> will get you what you want</p>",
        "id": 174764071,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1567494856
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191687\">@Kevin Mayfield</span> Indeed from the figures that Jeremy Rogers provided for me you could see that over a year 2014-2015 it showed there were 700k standing BPs, 437k sitting BPs and only 173k plain BPs. So we need to work with some of these if we are going to get the data out.</p>\n<p>It is also important to note and I'll quote Jeremy here \" that in SNOMED a naively curated binding of the 'its a blood pressure' profile to e.g. 'all codes in SNOMED below 75367002 Blood pressure' would potentially have disastrous effects, because that tree includes e.g. 723236006 Minimum blood pressure as well as 315612005 Target systolic blood pressure, neither of which are statements of the patient's current 'vital sign' blood pressure reading. One of them is a statement of a pressure you'd like them to have.\"</p>\n<p>There has been some work done on this already by the SNOMED on FHIR group that takes this into account for systolic and diastolic bindings that is published here,</p>\n<p><a href=\"https://confluence.ihtsdotools.org/display/FHIR/Vital+Signs+panel+binding\" target=\"_blank\" title=\"https://confluence.ihtsdotools.org/display/FHIR/Vital+Signs+panel+binding\">https://confluence.ihtsdotools.org/display/FHIR/Vital+Signs+panel+binding</a></p>\n<p>In our situation I think it makes more sense to carry the more detailed codes where possible. That way consumers can decide if they want to ignore the detail and use a high level code or to use the detail.</p>\n<p>Apologies, realise I am now some way off topic but thought that the link might be useful.</p>",
        "id": 174891802,
        "sender_full_name": "Pete Salisbury",
        "timestamp": 1567610166
    },
    {
        "content": "<p>Yes, SNOMED on FHIR has been working on this, including working toward a FHIR IG that will contain the guidance.  I agree with retaining the detailed codes, which can (and should) be sent along with any other codes that are specifically required for conformance to the profile(s).</p>",
        "id": 174894011,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1567611506
    },
    {
        "content": "<p>I’m not sure having two snomed codes in a resource is going to work. If it’s a standing BP then it’s a standing BP (uk base profile) not a vital sign BP.<br>\nA standard Api could query BP using all the codes it’s after (a list). In many cases the difference in profiles won’t be necessary in a client app.</p>",
        "id": 174903628,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1567618427
    },
    {
        "content": "<p>Correction - won’t be noticed.</p>",
        "id": 174903699,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1567618468
    },
    {
        "content": "<p>Having multiple SNOMED codings for a single element is certainly legal and there are cases where it makes sense to do so.  (Whether you choose to do so is a different matter).</p>",
        "id": 174908458,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1567621702
    },
    {
        "content": "<blockquote>\n<p>Having multiple SNOMED codings for a single element is certainly legal</p>\n</blockquote>\n<p>Absolutely, but that doesn't change the fact that it's tricky. If you have the magic LOINC value that says \"I'm a BP\" and a snomed code 123456789 that says \"I'm a standing BP done by X while the nurse was on drugs in the back of an ambulance\" (or whatever), then you can easily differentiate between the 2 codes and know which you want to use. </p>\n<p>But if the Obs contains 2 different snomed codes 123456789 and 987654321, then you actually have to consult snomed and figure out which one you want to use.. that's both time consuming and semantically challenging.  I think that's the point of what <span class=\"user-mention\" data-user-id=\"191687\">@Kevin Mayfield</span> is getting at</p>",
        "id": 174921731,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1567630221
    },
    {
        "content": "<p>Exactly. Putting semantic rules into the profile is going to lead to difficulties with BA's and developers trying to implement the profiles. At a restful level you don't need a deep understanding of semantics (and even FHIR), I can easily tell a developer if they want to query for BP they should use Observation?patient=1234&amp;code=1234567890,9876543210 or even  Observation?patient=1234&amp;code={magiccode or ecl}</p>",
        "id": 174947081,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1567663057
    },
    {
        "content": "<p>note: I don't agree with using ecl at the moment, the UK doesn't have an operational way of resolving them.</p>",
        "id": 174947144,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1567663143
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191687\">@Kevin Mayfield</span> I think you're confusing ECL (which is a mini query language) with PCG (the post coordination grammar) that is used to construct snomed expressions (eg to say fracture of left leg)</p>",
        "id": 174960734,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1567678819
    },
    {
        "content": "<p>nope, you ruled out pcg in a previous reply. Reworded: Searching on a list of SNOMED codes (i.e. ValueSet which is defined by an ecl expression).</p>",
        "id": 174961040,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1567679167
    },
    {
        "content": "<p>my mistake :)</p>",
        "id": 174961526,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1567679792
    },
    {
        "content": "<p>:) no worries. This topic is worrying me a lot. <br>\nI think it's fair to say in the UK we have GP systems using a lot of SNOMED/Read codes, of the others probably key/value pairs are most common with some new entrants following the vital sign profiles. <br>\nMost of the others will not be familiar with coding systems, maybe ICD9/10 but not SNOMED. <br>\nSo I would suggest caution with use of ecl, pcg and terminology services.... maybe a path that brings people along that route?&gt;</p>",
        "id": 174961749,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1567680118
    },
    {
        "content": "<p>Terminology services are definitely a tool that everyone should have as part of their bag of tricks. They haven't been practical until now, so now we have to endure the adoption cycle. I counsel government decision makers to accelerate that as best they can right now. </p>\n<p>But terminology services are not the solution to the problem, only part of the solution. In the end, however you organise the deck chairs, real interoperability requires considerable work, some of it in integration code, some of it in the source products, and some of it in people's heads</p>",
        "id": 174961903,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1567680274
    },
    {
        "content": "<p>This is a topic that would best be moved to <a class=\"stream\" data-stream-id=\"179202\" href=\"/#narrow/stream/179202-terminology\">#terminology</a> I think</p>",
        "id": 174961914,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1567680289
    },
    {
        "content": "<blockquote>\n<p>Exactly. Putting semantic rules into the profile is going to lead to difficulties with BA's and developers trying to implement the profiles. At a restful level you don't need a deep understanding of semantics (and even FHIR), I can easily tell a developer if they want to query for BP they should use Observation?patient=1234&amp;code=1234567890,9876543210 or even  Observation?patient=1234&amp;code={magiccode or ecl}</p>\n</blockquote>\n<p>There is an operational way, just not a \"national\" operational way...</p>",
        "id": 174968523,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1567686763
    },
    {
        "content": "<p>And then you have meta-thesaurus like the (US) NLM's UMLS that try to bridge (cross-correlate) multiple disparate coding systems:   <a href=\"https://www.nlm.nih.gov/research/umls/knowledge_sources/metathesaurus/index.html\" target=\"_blank\" title=\"https://www.nlm.nih.gov/research/umls/knowledge_sources/metathesaurus/index.html\">https://www.nlm.nih.gov/research/umls/knowledge_sources/metathesaurus/index.html</a></p>\n<p>BTW.   Back a while ago there was a great article about coding systems and the pre vs. post coordination problem that happens in coding systems.   This paper was in the JAIMA in 1999, but is still relevant today.   This article used to be on HIMSS website, but is no longer there but a copy of it is available on the Internet Archive here:</p>\n<div class=\"codehilite\"><pre><span></span>https://web.archive.org/web/20030902215601/http://www.himss.org/content/files/jhim/13-3/him13309.pdf\n</pre></div>\n\n\n<p>[This should definitely be moved to the <a class=\"stream\" data-stream-id=\"179202\" href=\"/#narrow/stream/179202-terminology\">#terminology</a> thread ;-) ]</p>",
        "id": 174971906,
        "sender_full_name": "John Silva",
        "timestamp": 1567689296
    },
    {
        "content": "<blockquote>\n<p>There is an operational way, just not a \"national\" operational way...</p>\n</blockquote>\n<p>DELETED for being too honest :)</p>",
        "id": 174975793,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1567691846
    }
]