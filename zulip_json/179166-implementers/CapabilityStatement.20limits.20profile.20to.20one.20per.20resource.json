[
    {
        "content": "<p>CapabilityStatement (CS)  limits profiles to one per resource.  There is an invariant <a href=\"http://build.fhir.org/capabilitystatement-definitions.html#CapabilityStatement.rest\" target=\"_blank\" title=\"http://build.fhir.org/capabilitystatement-definitions.html#CapabilityStatement.rest\">cpb-9</a> in the CS that limits using one Resource per instance.   This is an issue when you want to use for defining Profile search parameters and you may have several profiles of the the same type.   For example in US-Core  - Smoking, Vitals, and Lab Results are all observations.   We have defined separate search combinations for each profile.   Our only options now are to create a CS for each profile individually which is not IMO ideal would be better  to describe all the profile's for an IG in a single CS.   </p>",
        "id": 153863437,
        "sender_full_name": "Eric Haas",
        "timestamp": 1481733075
    },
    {
        "content": "<p>I think that should change the invarient to say \"A type + profile can only be described once per RESTful mode.\" </p>",
        "id": 153863438,
        "sender_full_name": "Eric Haas",
        "timestamp": 1481733456
    },
    {
        "content": "<p>I think we need to talk about this quite a bit. What do you mean when you specify different search parameters for different profiles? </p>",
        "id": 153863460,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481746059
    },
    {
        "content": "<p>1. Smoking we search by patient and  (fixed) code<br>\n2. vitals we search by category, date, code and patient<br>\n3. lab results we search by category, date, code and patient  with different conformance (SHALL vs SHOULD) for certain combos.</p>",
        "id": 153863465,
        "sender_full_name": "Eric Haas",
        "timestamp": 1481746347
    },
    {
        "content": "<p>No way to do that in a single CS</p>",
        "id": 153863466,
        "sender_full_name": "Eric Haas",
        "timestamp": 1481746376
    },
    {
        "content": "<p>In DSTU2 We use CarePlan  for CareTeam and CarePlan.  Different things different documentation and search params too.</p>",
        "id": 153863469,
        "sender_full_name": "Eric Haas",
        "timestamp": 1481746446
    },
    {
        "content": "<p>GET [base]/Observation?subject=Patient/X&amp;code=Y</p>",
        "id": 153863470,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481746667
    },
    {
        "content": "<p>you search on the resource, not on a profile on the resource. And SHALL and SHOULD are already extensions. So I think this is more extension space: combinations for purposes</p>",
        "id": 153863471,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481746702
    },
    {
        "content": "<p>There is a  1:1 Resource: Profile in CS ( so can't  list Smoking, Vitals and Labs without using extensions).   And I am aware of the standard extensions.  But there is no way to represent that profile A uses serach combination b in CS.  Are you saying list em all at the resource level and list all the profile at the metadata level and not to associate profiles with the searches?</p>",
        "id": 153863474,
        "sender_full_name": "Eric Haas",
        "timestamp": 1481747073
    },
    {
        "content": "<p>- list all the search parameters on the resource. That's where they actually are<br>\n- list all the profiles in CS.profile<br>\n- define an extension that associates a search parameter with a particular profile</p>",
        "id": 153863475,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481747192
    },
    {
        "content": "<p>I was thinking the same.    But I don't understand the CS.resource.profile max as 1 . In any lab guide I profile I'll have &gt;1 profile on Observationn.  Am I misunderstanding that element?</p>",
        "id": 153863476,
        "sender_full_name": "Eric Haas",
        "timestamp": 1481747385
    },
    {
        "content": "<p>it's the common denominator - all Observations handled by this system will conform to X</p>",
        "id": 153863477,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481747696
    },
    {
        "content": "<p>I'll post a GForge to explain the difference between the CS.Profiles vs CS.Resource.Profiles a little more clearly. [#12471]</p>",
        "id": 153863507,
        "sender_full_name": "Eric Haas",
        "timestamp": 1481754130
    },
    {
        "content": "<p>The limits of one profile per resource, and in the messaging limit of type of response to each request is not right, they need to be able to be multiple. </p>",
        "id": 153863566,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1481779904
    },
    {
        "content": "<p>those are 2 very different issues. I agree with the second, but not the first</p>",
        "id": 153863567,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481780219
    },
    {
        "content": "<p>So for each profile you want to accept on a resource you expect people to set up a different endpoint?</p>",
        "id": 153863571,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1481780363
    },
    {
        "content": "<p>or are people misinterpreting the point to specifying the profile?</p>",
        "id": 153863573,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1481780409
    },
    {
        "content": "<p>yes i think that is the case - confusion between CapabilityStatement.rest.resource.profile and CapabilityStatement.profile</p>",
        "id": 153863574,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481780440
    },
    {
        "content": "<p><a href=\"http://build.fhir.org/profiling.html#profile-uses\" target=\"_blank\" title=\"http://build.fhir.org/profiling.html#profile-uses\">http://build.fhir.org/profiling.html#profile-uses</a></p>",
        "id": 153863575,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481780488
    },
    {
        "content": "<p>Side note, the alphabetical resource list is no longer alphabetical, CapabilityStatement needs to move up.</p>",
        "id": 153863576,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1481780568
    },
    {
        "content": "<p>fixed</p>",
        "id": 153863578,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481780731
    },
    {
        "content": "<p>So in the root profile you expect a list of all profiles supported by the endpoint, and it's multiple, and for each resource just a base profile - that seems fine.</p>",
        "id": 153863579,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1481780736
    },
    {
        "content": "<p>yes</p>",
        "id": 153863580,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481780760
    },
    {
        "content": "<p>Yes, its the event request and response profiles which are 1..1 and that's not workeable - could have multiple requests which get a common response or multiple, or pairs. Better for capability to express what can go in and out, and in IGs explain how those work together.</p>",
        "id": 153863581,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1481780947
    },
    {
        "content": "<p>so there's outstanding tasks in that area, deferred waiting for feedback from implementers. Personally, I think it should not just be response 0..*, but something extra like ('kind of response | profile' ) 0..* but we wait to see</p>",
        "id": 153863582,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481781020
    },
    {
        "content": "<p>thanks for the link.  I'll keep myu gforge intact because it refers to the element comments which probably should point to this section which is much clearer.</p>",
        "id": 153863587,
        "sender_full_name": "Eric Haas",
        "timestamp": 1481781456
    },
    {
        "content": "<p>We've defined a MessageDefinition resource that really should replace the CapabilityStatement.messaging stuff.  Question is whether we can/should do that as part of the STU3 release</p>",
        "id": 153863630,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1481818094
    },
    {
        "content": "<p>I am squarely in the REST part.  :-)</p>",
        "id": 153864170,
        "sender_full_name": "Eric Haas",
        "timestamp": 1482208814
    }
]