[
    {
        "content": "<p>Hi,</p>\n<p>My team was just looking at adding support for client-defined search sorting to our FHIR server. Is there a recommended way to declare in the capability statement what search parameters we allow clients to sort by? We only intend to support a very limited set of parameters to be sorted by on one or two resources. We would like to document what we support so our clients can read about it before trying to use the sort options. We were hoping for something programmatic in the capability statement rather than just prose in the markdown, our implementation guide, or our public consumer documentation. Any ideas?</p>",
        "id": 262488538,
        "sender_full_name": "Nathan Loyer",
        "timestamp": 1637689160
    },
    {
        "content": "<p>I don't think we have a standard way to do that right now.  You could define an extension.  Typically, if there's a supported SearchParameter, that means it's indexed.  And if it's indexed, it's straightforward enough to sort by it (whether sensible or not is generally not the server's place to judge).</p>",
        "id": 262499309,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637694237
    },
    {
        "content": "<p>I'm not sure if all of ours are indexed or not. I think your statement makes more sense for pure fhir implementations, but it's not always that straightforward to support search/sort when building FHIR APIs on top of existing monolithic EHR servers.<br>\nWe went with defining an extension on the search parameter backbone element for now.</p>",
        "id": 264899027,
        "sender_full_name": "Nathan Loyer",
        "timestamp": 1639504704
    },
    {
        "content": "<p>Feel free to submit a change request to ask for a standard mechanism.</p>",
        "id": 264899180,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1639504762
    }
]