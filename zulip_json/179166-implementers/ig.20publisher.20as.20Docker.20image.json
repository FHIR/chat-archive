[
    {
        "content": "<p>Has anyone looked into running the FHIR IG publisher as a docker image? I got one built - which turned out to relatively straightforward - and was wondering if there was any general interest in sticking it in docker hub?</p>\n<p>So for instance, if the publisher was dockerised to fhir/publisher then the following</p>\n<p><code>docker run /home/andrew/ig:/ig  fhir/publisher</code></p>\n<p>will process the implementation guide in /home/andrew/ig</p>\n<p>No need to install jekyll, no dependency issues, runs the same on mac/linux/windows (in theory)</p>",
        "id": 153928204,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1515560556
    },
    {
        "content": "<p>does it get the latest IG Publisher?</p>",
        "id": 153928372,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515646961
    },
    {
        "content": "<p>The publisher is baked into the docker image. So I would suggest the build process for the publisher could dockerise itself (as well as its normal publish steps) and push into dockerhub</p>",
        "id": 153928374,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1515647083
    },
    {
        "content": "<p>But the docker images themselves are versioned - so you also fetch fhir/publisher:3.0.1 for instance</p>",
        "id": 153928376,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1515647133
    },
    {
        "content": "<p>we don't want anything but the latest publisher to be used.</p>",
        "id": 153928378,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515647198
    },
    {
        "content": "<p>I guess we could push a new docker at the end of the build process, though I have no idea how that would be done</p>",
        "id": 153928379,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515647229
    },
    {
        "content": "<p>what CI/build server is being used?</p>",
        "id": 153928380,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1515647256
    },
    {
        "content": "<p>we use travis. <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> maintains the build script</p>",
        "id": 153928381,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515647275
    },
    {
        "content": "<p>its pretty much <br>\ndocker build . -t fhir/publisher<br>\ndocker push fhir/publisher</p>",
        "id": 153928382,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1515647284
    },
    {
        "content": "<p>we're just starting to use travis for our stuff so let me have a play and I'll report back how it goes - we are just having our own private docker image for the moment (mgha/fhir_publisher)</p>",
        "id": 153928383,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1515647350
    },
    {
        "content": "<p>ok</p>",
        "id": 153928384,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515647366
    },
    {
        "content": "<p>thanks</p>",
        "id": 153928385,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515647369
    },
    {
        "content": "<p>We do run the publisher via Docker image for the automated Builder. Here's a link: <a href=\"https://github.com/hl7-fhir/auto-ig-builder/tree/master/images/ig-build\" target=\"_blank\" title=\"https://github.com/hl7-fhir/auto-ig-builder/tree/master/images/ig-build\">https://github.com/hl7-fhir/auto-ig-builder/tree/master/images/ig-build</a></p>",
        "id": 153928426,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1515681274
    },
    {
        "content": "<p>We actually don't use Travis in the IG publisher automatic builds.</p>",
        "id": 153928427,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1515681296
    },
    {
        "content": "<p>It runs in GoogleKubernetes Engine, triggered by a GitHub webhook.</p>",
        "id": 153928428,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1515681303
    },
    {
        "content": "<p>Andrew is talking about the main build, building a docker for the IG publisher - that's a slightly different thing. But perhaps there is enough functional overlap to only do something once</p>",
        "id": 153928493,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515702439
    },
    {
        "content": "<p>Yeah, perhaps I should actually be using the auto-ig-builder in which case a local version of the publisher is not needed. Once our ig has settled down I think I might do it that way. But for the moment we are doing broad changes and need to run builds locally.</p>\n<p>So yes, along the lines of what has been done for ig-build but more focussed on running on local ig files bound into the container. And with the publisher.jar and all the relevant spec files etc baked into the Docker image. Then publish that Docker image itself to dockerhub. So rather than tell my team how to install jekyll etc (especially on windows) I could just get them to pull the latest image from dockerhub and it would all be setup with the latest publisher.jar, correct java and jekyll etc</p>",
        "id": 153928535,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1515710706
    },
    {
        "content": "<p>doesn't docker = vm? wou;dn't it be better to just can a single docker and have it get the latest igpublisher?</p>",
        "id": 153928538,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515711103
    },
    {
        "content": "<p>Its not nearly as heavy as a vm. Whatever runs in docker is running just as a process on the host machine - but yes conceptually can be thought of like a vm - though at the end of the invocation the contents of the container are destroyed (only those files in a 'bound' filesystem are retained).</p>\n<p>Getting the igpublisher dynamically is fine, but that fetch would happen on every invocation (unless the publisher too was a cacheable artifact)</p>",
        "id": 153928540,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1515711404
    },
    {
        "content": "<p>well, you should be able to do a HEAD on it</p>",
        "id": 153928542,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515711806
    },
    {
        "content": "<p>But anything that is downloaded within the docker process is thrown out, unless it is in one of the directories bound from the host filesystem. So in the way I am running it, I bind only the ig directory root itself into the container and only those files are retained after the process ends. So that means the txcache is still useful, but everything else is either baked into the image or dynamically fetched and then discarded.</p>",
        "id": 153928543,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1515712312
    },
    {
        "content": "<p>I'm still confused about whether we're talking about the IG publisher (what I originally thought) or the main build (which Grahame said in response to my comment).</p>",
        "id": 153929362,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1516228894
    },
    {
        "content": "<p>I'm suggesting that at the end of building an IG publisher jar version (is this the main build??), should be a step to build a Docker image of the publisher (and jekyll etc) and push that to dockerhub (in addition to whatever the process of building the IG publisher is currently doing, uploading the jar to a website etc)</p>",
        "id": 153929379,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1516244869
    },
    {
        "content": "<p>It would just be an alternative mechanism for giving people access to running the publisher (especially for those on windows machines where jekyll is a pain.. or even those who just don't normally run Ruby but who might want to run the publisher)</p>",
        "id": 153929380,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1516244964
    },
    {
        "content": "<p>(and by running the publisher I mean locally running the publisher - not using the remote service)</p>",
        "id": 153929381,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1516244989
    },
    {
        "content": "<p>as an example.. this is our current IG build process on travis - which takes advantage of a docker image we created for ourselves that includes jekyll and the ig.publisher.jar</p>\n<p>before_install:<br>\n  - docker login -u \"$DOCKER_USERNAME\" -p \"$DOCKER_PASSWORD\"<br>\n  - docker pull mgha/fhir_publisher</p>\n<p>install: true</p>\n<p>script:<br>\n  - cd ig; docker run -it --rm --name publish -v <code>pwd</code>:/ig mgha/fhir_publisher</p>\n<p>But if I need one of our devs on a windows box to look at the IG I can get them to run that script locally and they get they equivalent result - without them needing to install anything (other than docker of course!)</p>",
        "id": 153929382,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1516245307
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191649\">@Andrew Patterson</span>  - I found this Dockerfile that someone posted on GitHub; haven't tried it yet though (not familiar with creating Docker images):</p>\n<p><a href=\"https://github.com/robstwd/assorted-dockerfiles/blob/master/alpine-fhir-ig-publisher/Dockerfile\" target=\"_blank\" title=\"https://github.com/robstwd/assorted-dockerfiles/blob/master/alpine-fhir-ig-publisher/Dockerfile\">https://github.com/robstwd/assorted-dockerfiles/blob/master/alpine-fhir-ig-publisher/Dockerfile</a></p>",
        "id": 153937123,
        "sender_full_name": "John Silva",
        "timestamp": 1518534286
    },
    {
        "content": "<p>Thanks. I had cobbled one together myself - but that one with alpine is better (and smaller!).</p>",
        "id": 153937277,
        "sender_full_name": "Andrew Patterson",
        "timestamp": 1518562686
    }
]