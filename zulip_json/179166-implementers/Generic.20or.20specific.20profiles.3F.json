[
    {
        "content": "<p>I'm trying to get a handle on options for profiling resources, and to what level to profile. Take the Observation resource for example - if a specification said to record a person's head circumference (in cm), would the general expected approach be to create a profile of Observation that had a fixed code (to represent a head circumference measurement - SNOMED 363812007 | Head circumference), fix the units to \"cm\" &amp; profile out the bits not required such as the component section. I can see that this allows tight validation of head circumference, and may help in some code generation(?). However, following this method you'd end up with 1000s of observation profiles. Or is the expected approach to have fewer more generic profiles (and if so, what level of granularity is appropriate?).</p>",
        "id": 153967019,
        "sender_full_name": "Dave Barnet",
        "timestamp": 1528200900
    },
    {
        "content": "<p>On a national level. our apporach is to have open profiles (i.e. mostly non-forbidding). They are mainly about things like \"If you want to put identifier X in your profile, use '<a href=\"http://fhir.de/NamingSystem/X\" target=\"_blank\" title=\"http://fhir.de/NamingSystem/X\">http://fhir.de/NamingSystem/X</a>' as identifier.system\". Or: \"Use at least ICD-10-GM when coding a condition\".</p>\n<p>More detailed/specific profiles, which may also be more strict, e.g. forbidding certain elements, are rare on the national level, but possible. For example we have 5 well-defined observations within the national profiles (i.e. fixed code and value[x] restricted to valueWhateverDataType). These exist because there is a national use case for them.</p>\n<p>For regional or project specific profiles I would expect very strict profiles <em>where they are needed</em> (as in \"This profile exactly represents the capabilities of my system / of the systems involved\"). This may well end in a whole bunch of Observation profiles and also others, when you need things like required ValueSet bindings.<br>\nBut even in these use cases I would prefer the use of Must-Support over hard cardinalities.</p>",
        "id": 153967022,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1528203626
    },
    {
        "content": "<p>This is a bit of a philosophical question.  There are definitely groups that like to define very narrow profiles.  Your primary considerations should be \"what can you expect your communication partners to support?\" and \"What do we have time to create and get consensus on?\"</p>",
        "id": 153967028,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528204343
    },
    {
        "content": "<p>I think in some cases examples may be more useful? It could be time consuming to look through many profiles.</p>",
        "id": 153967089,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1528211714
    },
    {
        "content": "<p>Adding a little context, when we looked at examples for Care Connect Reference Implementation we were ok with most Observations. We could see from DSTU2 profiles we would be expecting SNOMED for codes, so we created a head circumference examples which match your profile <a href=\"http://yellow.testlab.nhs.uk/careconnect-ri/search?serverId=home&amp;pretty=true&amp;resource=Observation&amp;param.0.qualifier=&amp;param.0.0=&amp;param.0.1=363812007&amp;param.0.name=code&amp;param.0.type=token&amp;resource-search-limit=\" target=\"_blank\" title=\"http://yellow.testlab.nhs.uk/careconnect-ri/search?serverId=home&amp;pretty=true&amp;resource=Observation&amp;param.0.qualifier=&amp;param.0.0=&amp;param.0.1=363812007&amp;param.0.name=code&amp;param.0.type=token&amp;resource-search-limit=\">http://yellow.testlab.nhs.uk/careconnect-ri/search?serverId=home&amp;pretty=true&amp;resource=Observation&amp;param.0.qualifier=&amp;param.0.0=&amp;param.0.1=363812007&amp;param.0.name=code&amp;param.0.type=token&amp;resource-search-limit=</a></p>",
        "id": 153967129,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1528220379
    },
    {
        "content": "<p>Where we were unsure was around complex codes such as blood pressure, we did find examples (which matched how we done them in primary care systems years ago). Possibly this would be profiled to make it easier for implementers. <br>\nOur use case is RESTful API though and is your's a messaging/fhir document paradigm?</p>",
        "id": 153967130,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1528220596
    },
    {
        "content": "<p>one issue that we need to explore further is that of profile vs dictionary</p>",
        "id": 153967137,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528224436
    },
    {
        "content": "<p>e.g. there's 4 or 5 profiles for lab results:<br>\n - numerical result<br>\n- coded result<br>\n- MCS<br>\n- immunology panel <br>\n- text report</p>",
        "id": 153967138,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528224477
    },
    {
        "content": "<p>but for each of these there's 100+ or (1000s) or variants, all structurally the same.</p>",
        "id": 153967139,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528224504
    },
    {
        "content": "<p>I think that this is StructureDefinition vs ObservationDefinition but that's work in progress</p>",
        "id": 153967140,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528224531
    },
    {
        "content": "<p>e.g. set up a profile, and then link observation codes to units and reference ranges by Observation Definition (which equates to / represents LOINC concepts)</p>",
        "id": 153967142,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528224572
    },
    {
        "content": "<p>What is MCS? <br>\nI like the idea of Observation definition or a service like it. So I given a code I could query if it's coded or numeric plus which which units to use?</p>",
        "id": 153967144,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1528225051
    },
    {
        "content": "<p>yes that's right. MCS = Micro Culture and Sensitivity</p>",
        "id": 153967213,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528253809
    },
    {
        "content": "<p>I've thought about this and I really don't see any short cuts to creating profiles.  observationDefinition  with a matrix of codes, allowed values, reference ranges and interpretations is simply deconstructing a profile.  So my question is who does the 'Dictionary' + base profile benefit?</p>",
        "id": 153967214,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528254167
    },
    {
        "content": "<p>it benefits the consumer because you know there's only one 'shape' of the observations. So one shape + 1000 variants that plug in (code + units + possible interpretations) is a lot less than 1000 profiles that say who knows what ?</p>",
        "id": 153967217,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528254284
    },
    {
        "content": "<p>as in the consumer application that reads the observations</p>",
        "id": 153967218,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528254299
    },
    {
        "content": "<p>The profile shape drives user interface design and a few other things.  Dealing with 10 styles that cover 1000 lab tests is much better than dealing with 1000 profiles that could each contain totally different structures.</p>",
        "id": 153967225,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528254691
    },
    {
        "content": "<p>+1, having a single shape to deal with provides a lot of benefits from an implementation perspective.</p>",
        "id": 153967227,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1528255634
    },
    {
        "content": "<p>I don't see it as \"1000 profiles that could each contain totally different structures.\"  I see it as 5 base profile and 995 derived on top of one of those\"   I don't see a benefit in duplicating this in another structure.  HIde the static stuff and you back into a dictionary.</p>",
        "id": 153967228,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528256281
    },
    {
        "content": "<p>995 derived profiles can do all sorts of funky things - constrain out elements, add in additional slices or extensions, etc.</p>",
        "id": 153967229,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528256483
    },
    {
        "content": "<p>A set of dictionary entries that <em>only</em> define values for the elements defined in the base profile is much more predictable and easier to manage.</p>",
        "id": 153967230,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528256512
    },
    {
        "content": "<p>I remain a skeptic that this will be any easier.  I think you make profiles sound scarier than they have to be, there is nothing stopping one from defining <em>simple</em> derived profiles without slicing and extensions btw.</p>",
        "id": 153967237,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528257273
    },
    {
        "content": "<p>right. you could. But how do consumers know that you did?</p>",
        "id": 153967238,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528257400
    },
    {
        "content": "<p>LOINC has 1/4 of the number of codes as SCT. But implementing LOINC is considered 1-2 orders of magnitude cheaper... and this is main reason why: It's at table., and people know how to deal with it as a table</p>",
        "id": 153967240,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528257457
    },
    {
        "content": "<p>It's all about assurance</p>",
        "id": 153967241,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528257471
    },
    {
        "content": "<p>Expose what they need as a table then,  I don't think you need to expose everything</p>",
        "id": 153967242,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528257502
    },
    {
        "content": "<p>Are we talking about a csv file or resources</p>",
        "id": 153967243,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528257556
    },
    {
        "content": "<p>for a dictionary because I thought the premise was an observationDefinition resources for defining the dicitionary entries.</p>",
        "id": 153967245,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528257729
    },
    {
        "content": "<p>well, I am talking about using ObservationDefinition as the table (dictionary). That's not all it's for, but I've asked OO to make this part of the scope / existence question for ObservationDefinition</p>",
        "id": 153967248,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528258550
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192158\">@Dave Barnet</span> , <span class=\"user-mention\" data-user-id=\"193478\">@Jonathan Mew</span>  and I has discussed this yesterday morning. <br>\nWhat we did was look for the differences between the DCH profiles, we came up with SNOMED codes, units, numerical/coded result. Which is sounding like a table/spreadsheet and is matching Grahams observationDefinition. I don't think it would be difficult to prototype.</p>",
        "id": 153967285,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1528269037
    },
    {
        "content": "<p>taking a look at ObsDef and ignoring components for now and thinking how a spreadsheet would unfold from this and some influence from Questionnaire I took at stab at it.</p>",
        "id": 153967388,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528298454
    },
    {
        "content": "<table>\n<thead>\n<tr>\n<th>DE</th>\n<th>Card.</th>\n<th>Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ObservationDefinition</td>\n<td></td>\n<td>DomainResource</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>ProfiledObs</td>\n<td>0..1</td>\n<td>Ref(Observation)</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>code</td>\n<td>1..1</td>\n<td>Coding</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>Units</td>\n<td>0..1</td>\n<td>CodeableConcept</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>RefRange</td>\n<td>0..*</td>\n<td></td>\n</tr>\n<tr>\n<td>type</td>\n<td>0..1</td>\n<td>CodeableConcept</td>\n</tr>\n<tr>\n<td>value</td>\n<td>0..1</td>\n<td>Range\\|canonical\\|string</td>\n</tr>\n<tr>\n<td>targetPop</td>\n<td>0..*</td>\n<td>CodeableConcept</td>\n</tr>\n<tr>\n<td>targetAge</td>\n<td>0..1</td>\n<td>Range</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>possibleAnswerValueSet</td>\n<td>0..1</td>\n<td>canonical</td>\n</tr>\n<tr>\n<td>interpretation</td>\n<td>0..1</td>\n<td>conceptMap</td>\n</tr>\n<tr>\n<td>or</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>possibleAnswerList</td>\n<td>0..*</td>\n<td></td>\n</tr>\n<tr>\n<td>value</td>\n<td></td>\n<td>string\\|coding\\|integer\\|decimal\\|etc</td>\n</tr>\n<tr>\n<td>interpretation</td>\n<td></td>\n<td>string\\|coding</td>\n</tr>\n</tbody>\n</table>",
        "id": 153967389,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528298463
    },
    {
        "content": "<p>obviously there is a choice of Units vs possible answers depending on whether a quantitative or nom/ordinal type of observation.  with RefRange dealing with both.</p>",
        "id": 153967397,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528298780
    },
    {
        "content": "<p>or you could just stick with a csv and a json template ;-)</p>",
        "id": 153967407,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528299060
    },
    {
        "content": "<p>Hey,<br>\nWhy to use <a href=\"http://Simplifier.net\" target=\"_blank\" title=\"http://Simplifier.net\">Simplifier.net</a>? Are there tutorials that teach how to use Forge ? I don't know, why should i  use Forge and Simplifier together</p>",
        "id": 153971371,
        "sender_full_name": "Bashar",
        "timestamp": 1529851988
    },
    {
        "content": "<p>I'm just revisiting the idea of Observation profiles and ObservationDefinition. At the moment I'm aligned with <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> earlier points, in that I can't really see a difference between an Observation profile and an instance of an ObservationDefinition. As ObservationDefinition.code is mandatory, and the example given is a list of LOINC codes, then an ObservationDefinition instance must relate to clinical concept - for example a waist measurement. If this is the case I can'r see any material difference between creating an Observation profile with a fixed code of \"Waist Measurement\" and some fixed units of \"cm\" as against creating an ObservationDefinition where the ObservationDefinition.code is fixed to \"Waist Measurement\" and the ObservationDefinition.quantativeDetails.unit is \"cm\".</p>\n<p>Can someone enlighten me?</p>\n<p><em>By the way, the ObservationDefinition says \"Observation.basedOn references ObservationDefinition resource\", but Observation.basedOn doesn't reference ObservationDefinition.</em></p>",
        "id": 153975113,
        "sender_full_name": "Dave Barnet",
        "timestamp": 1531487685
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195736\">@Bashar</span> Make profiles with Forge, upload them to Simplifier to publish them and show to others</p>",
        "id": 153975116,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1531488249
    },
    {
        "content": "<p>It's mainly a question of how systems want to access the information.  A system that wants to download a lab's catalogue isn't necessarily going to want to have to deal with arbitrary nested slicing in order to convey allowed reference ranges, for example.</p>",
        "id": 153975176,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531506976
    },
    {
        "content": "<p>The idea for using something like an observation definition instead of a profile is for a <em>lightweight shortcut</em> to making a bunch of profiles.   I don't think we have worked out the  right name for structure C  but essentially: </p>\n<p>Profile A + ObservationDefinifition B =  Observation Template Instance C</p>\n<p>Observation Template Instance C contains variables where you  plug in the subject, effective time and value using something like the Python str.format() method  to allow you to do variable substitutions.</p>\n<p>I worked out a python example <a href=\"#narrow/stream/103-Orders-and.20Observation.20WG/subject/ObservationDefinition.20does.20not.20work.20for.20the.20simple.20stuff\" title=\"#narrow/stream/103-Orders-and.20Observation.20WG/subject/ObservationDefinition.20does.20not.20work.20for.20the.20simple.20stuff\">here</a></p>\n<ul>\n<li>This is what I thought Grahame was talking about.</li>\n</ul>",
        "id": 153975231,
        "sender_full_name": "Eric Haas",
        "timestamp": 1531554873
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> - this is definitely an issue that has raised it's head again in <a href=\"http://www.INTEROPen.org\" target=\"_blank\" title=\"http://www.INTEROPen.org\">www.INTEROPen.org</a> - where we are creating UK national profiles, called CareConnect - <span class=\"user-mention\" data-user-id=\"192158\">@Dave Barnet</span> post here started the discussion. I wrote a post for INTEROPen that summarised some of the issues bouncing around: <a href=\"https://docs.google.com/document/d/1N6xs5ZSq7aOwWxv5wb784vJCd8STtSqUa9kT0jCbUpQ/edit\" target=\"_blank\" title=\"https://docs.google.com/document/d/1N6xs5ZSq7aOwWxv5wb784vJCd8STtSqUa9kT0jCbUpQ/edit\">https://docs.google.com/document/d/1N6xs5ZSq7aOwWxv5wb784vJCd8STtSqUa9kT0jCbUpQ/edit</a> and there is quite a bit of debate on the topic in our discussion platform, <a href=\"https://interopen.ryver.com/#posts/1832297\" target=\"_blank\" title=\"https://interopen.ryver.com/#posts/1832297\">https://interopen.ryver.com/#posts/1832297</a> , which may be of value. I cant copy the entire stream, but if you would like to access it do let me know - I can give you an account.  </p>\n<p>It looks like through our debate we have also \"independently\" hit on this issue of a possible rule-book for many \"simple observations\" of the code/unit form, which looks like it might also be the ObservationDefinition resource that I'm trying to get my head around. </p>\n<p>I can see this OD is creating debate here as too as to its utility. </p>\n<p>Ultimately, trying to understand the use cases for 1 type of template observation at a national level, version 1000s of profiles for simple code/unit pairs. </p>\n<p>As we work with many vendors too, I'm particularly keen to understand what is the best approach (esp cost) for implementers. </p>\n<p>And is there any real world experience of this challenge ....has anywhere 100s/1000s of observation profiles?</p>",
        "id": 153975301,
        "sender_full_name": "Amir Mehrkar",
        "timestamp": 1531681232
    },
    {
        "content": "<p>firstly, I think that observation definition is more than a short cut for profiles on observation. A profile on observation is strictly confined to describing how the observation is reported, but Observation Definition can also deal with the context of the observation, and how to request it be performed, related methods etc.</p>",
        "id": 153975326,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531701855
    },
    {
        "content": "<p>I've come to the conclusion that the central problem with lots of observations is shape. If you have 1000s of observations that all have the same shape, you only have to don one implementation, and just plug-in the variables into the code. Whereas observations that have different features require real work. </p>\n<p>just giving implementers 1000s of observation templates leaves them out in the cold because they have to reverse engineer them back to figure out how they differ from each other. So we should be vigorously working out how to different between shapes and variables - that's what the dictionary idea that Eric is referring to is about</p>",
        "id": 153975327,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531702088
    },
    {
        "content": "<p>Can you define what you mean by 'shape'?  a set of common elements and (in some cases) values?</p>",
        "id": 153975331,
        "sender_full_name": "David Hay",
        "timestamp": 1531705237
    },
    {
        "content": "<p>Shape = primarily how value and components are used, though other things such as whether interpretation and normal ranges are relevant and what value sets they should have are part of it too.</p>",
        "id": 153975332,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531705687
    },
    {
        "content": "<p>ta</p>",
        "id": 153975350,
        "sender_full_name": "David Hay",
        "timestamp": 1531708468
    },
    {
        "content": "<p>Graham's second paragraph regarding shape, matches what we've been saying on Rvyer. <br>\nIt is what we've been calling simple or generic Observation. Specific profiles can sit alongside the generic profile.</p>",
        "id": 153975384,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1531725537
    },
    {
        "content": "<p>We have a problem with a common set of terms to represent these ideas.   But the words we use aside ... my main point with my posts is that ObservationDefinition needs to handle the use case we are talking about here <em>and</em> adequately covers the other contextual things that lie outside the Observation which Grahame mentioned above.  ( I was being overly reductive when I said short-cut  but that is essentially what we are talking about here.)  As it is drafted is does neither.  Unfortunately am unable to focus enough time with the topic and committee working on it to try to fix it.</p>",
        "id": 153975503,
        "sender_full_name": "Eric Haas",
        "timestamp": 1531762078
    },
    {
        "content": "<p>An alternative we discussed  is to  use a form ( aka Questionnaire ) to represent the actual 'variables' for a 'specific profile'.   But then there would be no way to represent other context the the Observation</p>",
        "id": 153975783,
        "sender_full_name": "Eric Haas",
        "timestamp": 1531838056
    },
    {
        "content": "<p>Thank you for the replies:  So this issue of shape or pattern is exactly what I’m trying to understand: what is best for implementers, as the higher the barrier to entry, the longer we keep data locked up and reduce improving care.</p>\n<p>One key shape/pattern I’ve come across is of “Fixed snomed code and Unit” pattern (aka simple observations) needing to be exchanged in an observation profile</p>\n<p>eg a weight snomed code (or 1-3 codes allowed) and a unit (or 1-2 units) - I guess a UCUM server helps with the latter.</p>\n<p>One approach that has been suggested is a profile for each of these codes. And one reason is that FHIR structuredefinitions allow for computational validation to ensure the message is conformant.</p>\n<p>However, is this what implementers need? </p>\n<p>Some have said, for a pattern like Fixed code / unit, you could use another validation mechanism to assure the message and 1000s of profiles is not the right approach. </p>\n<p>And for validation/assurance, is there anotjer mechanism where you can say use say a terminology validation look up service?</p>\n<p>Is that what ODefinition is providing? Or is there another method?</p>\n<p>The other thing is that OpenEHR colleagues have been saying, such models of weight and height for example do tend to complexity - ie they tend to need other meta data - so whilst we may start with code/unit lists, in future we will need more specific meta data for these observations and so we should consider creating weight and height and other specific profiles now. However, most systems may not be recording all such meta data yet, so maybe we should just create these profiles “when” we need them....</p>",
        "id": 153976060,
        "sender_full_name": "Amir Mehrkar",
        "timestamp": 1531922614
    },
    {
        "content": "<p>as an example of the issue that may proliferate see the observations and procedure profiles: <a href=\"https://fhir.nhs.uk/StructureDefinition\" target=\"_blank\" title=\"https://fhir.nhs.uk/StructureDefinition\">https://fhir.nhs.uk/StructureDefinition</a></p>",
        "id": 153976061,
        "sender_full_name": "Amir Mehrkar",
        "timestamp": 1531922997
    },
    {
        "content": "<p>Implementers need to be able to define appropriate user interfaces and map to and from their legacy data structures.  The number of patterns they can afford to do that for is in the low tens (and &lt;10 for many).  So the profiles at that level have to be pretty limited.  If you can write your code once and load metadata that lets you send additional types of Observations over time, that's more managable.  I think that's the intention with ObservationDefinition - the profiles are what you write your code to and are pretty static and limited in number.  The ObservationDefinitions reflect what you can share with each of those profiles and are dynamic and have large numbers.</p>",
        "id": 153976076,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531925953
    },
    {
        "content": "<p>We are talking about  our hopes and dreams for  ObservationDefinition right now I think as is drafted now it falls short .  I've made some rather specific and pointed recommendations and I recommend anybody who is interested to give  <span class=\"user-mention\" data-user-id=\"191689\">@Hans Buitendijk</span>  a holler to see when they are meeting again to discuss.</p>",
        "id": 153976093,
        "sender_full_name": "Eric Haas",
        "timestamp": 1531931762
    },
    {
        "content": "<p>reopening this stream to present an example of what I'd like be included in ObservationDefinition Scope. <a href=\"https://github.com/Healthedata1/MyNotebooks/blob/master/obsdef.ipynb\" target=\"_blank\" title=\"https://github.com/Healthedata1/MyNotebooks/blob/master/obsdef.ipynb\"> Here</a> is a quick simple demonstration using it to generate multiple types of laboratory observations from a single generic profile.   In Short, add Patient data, lab result value data and ObservationDefinition to a generic profile and create instances.</p>",
        "id": 156734502,
        "sender_full_name": "Eric Haas",
        "timestamp": 1548285878
    },
    {
        "content": "<p>I have a bunch of proposals for ObservationDefnition to make this more robust..  <span class=\"user-mention\" data-user-id=\"192504\">@François Macary</span>  When can we discuss this?</p>",
        "id": 156734583,
        "sender_full_name": "Eric Haas",
        "timestamp": 1548285968
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span>  ObservationDefinition is discussed during the Order Catalog calls: Wed, 1pm Eastern. Next call is planned for Feb 6th. <br>\nIf you like we can also arrange a 1st discussion with <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span>  and I. My first availability is Monday 5pm Paris time (8am Sacramento).</p>",
        "id": 156846487,
        "sender_full_name": "François Macary",
        "timestamp": 1548416007
    },
    {
        "content": "<p>If ObservationDefinition is intended to avoid large numbers of Observation profiles, the spec should also specify that validation of Observation instances against ObsDefs must be possible through the standard validation mechanisms (validator, $validate operation). Just as it is the case for QuestionnaireResponse against Questionnaire.</p>\n<p>But I had a short chat with Hans on that at the WGM, and I understood that this use should probably not be within the scope of ObsDef?</p>",
        "id": 156848691,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1548418812
    },
    {
        "content": "<blockquote>\n<p>But I had a short chat with Hans on that at the WGM, and I understood that this use should probably not be within the scope of ObsDef?</p>\n</blockquote>\n<p>I think we need to discuss this use case before making a decision about restricting its use to catalogs..  If we come to that conclusion then the resource name should not be observationdefiinion but observaioncatalogentry or something like that.</p>",
        "id": 156857413,
        "sender_full_name": "Eric Haas",
        "timestamp": 1548427869
    },
    {
        "content": "<p>I think there are pros and cons to both. The complexity of the big number of observations that exist won't go away, so basically I think it's a question what would be easier from an implementer's point of view in terms of generating as well as validating Observation instances.</p>",
        "id": 156858451,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1548428700
    },
    {
        "content": "<p>I agree.  Since obsdef reduces some of that complexity  and is essentially a shorthand version of  structuredef - it begs the question why not use it for that too.  Otherwise we should be consistent and use structdef for catalog entries too.  I appreciate your point on validation but isn't that accomplished at the profile or instance level  (after applying the observation definition to a profile)</p>",
        "id": 156858976,
        "sender_full_name": "Eric Haas",
        "timestamp": 1548429070
    },
    {
        "content": "<p>I'd be opposed to ObservationCatalogEntry.  Resources are supposed to be context-independent.  There's lots of reasons for talking about a type of Observation that can occur without it being part of a catalog.</p>",
        "id": 156859818,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1548429901
    },
    {
        "content": "<p>I happy for us to find a time to discuss this.  That time on Monday (10:00 AM Eastern) would work for me.</p>",
        "id": 156862154,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1548431890
    },
    {
        "content": "<p>I was being rhetorical about ObservationCatologEntry,  my point is that its scope needs work and ObservationDefinition implies more than catalog entries.   On <span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span>  point of validation, I did not get it at first but I agree may then require a 2 stage validation - one for the Obsdef and one on the SD and it still needs to be determined if indeed is a shortcut for developers or not.</p>",
        "id": 156866612,
        "sender_full_name": "Eric Haas",
        "timestamp": 1548435733
    },
    {
        "content": "<p>Right. Any implementer could somehow apply an ObsDef to an Observation profile, but if this use case was to be in the scope of ObsDef, this should just be part of the FHIR spec and especially be mentioned on the validation documentation page.</p>",
        "id": 156866896,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1548435972
    }
]