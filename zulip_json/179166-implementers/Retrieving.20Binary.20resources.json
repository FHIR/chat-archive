[
    {
        "content": "<p>What is the expected behaviour of retrieving binary resources? I thought that if you did not specify a mimetype the binary content would be returned with the mimetype stored within the binary resource - is that correct?</p>\n<p>I created a binary resource here <a href=\"http://spark.furore.com/fhir/Binary/spark160\" target=\"_blank\" title=\"http://spark.furore.com/fhir/Binary/spark160\">http://spark.furore.com/fhir/Binary/spark160</a> which is for a PDF file. </p>\n<p>I thought that if I did a GET against that URL in a browser I would be returned a PDF file but I don't I get a garbled HTML file.</p>\n<p>Not sure whether this is an issue with SPARK or my understanding</p>",
        "id": 153835862,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1467287309
    },
    {
        "content": "<p>browsers are tricky in this regard. they ask very loosely, and they interpret somewaht idiosyncratically. the first thing to do is to try it in different browsers, and you should also spy in the http traffic and see what the actual return headers say</p>",
        "id": 153835867,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467289473
    },
    {
        "content": "<p>No, even if I don't supply a content-type I get back application/xml with a Binary resource, instead of the raw PDF:</p>\n<div class=\"codehilite\"><pre>curl -vvv http://spark.furore.com/fhir/Binary/spark160\n\n&lt; Content-Type: application/xml+fhir; charset=utf-8\n&lt; Content-Location: Binary/spark160/_history/spark261\n&lt; Expires: -1\n&lt; Last-Modified: Thu, 30 Jun 2016 11:38:43 GMT\n&lt; ETag: W/&quot;spark261&quot;\n&lt; Server: Microsoft-IIS/8.5\n&lt; X-AspNet-Version: 4.0.30319\n&lt; X-Powered-By: ASP.NET\n&lt; Date: Thu, 30 Jun 2016 15:20:23 GMT\n&lt; Content-Length: 91866\n</pre></div>",
        "id": 153835892,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1467300049
    },
    {
        "content": "<p>This goes against <a href=\"http://hl7-fhir.github.io/binary.html#rest\" target=\"_blank\" title=\"http://hl7-fhir.github.io/binary.html#rest\">the definition</a>:</p>\n<blockquote>\n<p>Binary resources behave slightly differently to all other resources on the RESTful API. Specifically, when a read request is made for the binary resource that doesn't explicitly specify the FHIR content types \"application/xml+fhir\" or \"application/json+fhir\", then the content should be returned using the content type stated in the resource. e.g. if the content type in the resource is \"application/pdf\", then the content should be returned as a PDF directly.</p>\n</blockquote>",
        "id": 153835893,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1467300104
    },
    {
        "content": "<p>That said, when I do explicitly ask for:</p>\n<div class=\"codehilite\"><pre>curl -H &quot;Accept: application/pdf&quot; http://spark.furore.com/fhir/Binary/spark160\n</pre></div>\n\n\n<p>I indeed get a PDF out. So, Spark is capable of returning the PDF, but is (I think!) doing the wrong thing by default.</p>",
        "id": 153835895,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1467300167
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> looks like the default behaviour is wrong. I better test my own server</p>",
        "id": 153835956,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467322080
    },
    {
        "content": "<p>In my server I also include a ContentDisposition header including a filename for the resource with an extension expected for the mimetype. eg application/pdf -&gt; .pdf</p>",
        "id": 153836005,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1467343567
    },
    {
        "content": "<p>Not in the spec, but helps from the browser perspective.</p>",
        "id": 153836006,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1467343615
    },
    {
        "content": "<p>I'll raise an issue for Spark to modify this.</p>",
        "id": 153836031,
        "sender_full_name": "Mirjam Baltus",
        "timestamp": 1467360518
    },
    {
        "content": "<p>More evidence to support _format. ...  Also, we see Google has had to play special tricks to force web-sites to return html5 rather than Flash; if they are capable, with tricks to support sites that can't...  Very much 'accept' is more of a suggestion than an actual interoperability function.</p>",
        "id": 153836171,
        "sender_full_name": "John Moehrke",
        "timestamp": 1467477105
    },
    {
        "content": "<p>My understanding of the Binary resource is that if you perform a \"GET\" against the resource (with no HTTP Accept headers set) then the response will be the binary object usings its native mime type - is that correct?<br>\nI keep looking at various test servers and they return either an XML or JSON Binary resource.</p>",
        "id": 154004848,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1538505591
    },
    {
        "content": "<p>You're correct, <span class=\"user-mention\" data-user-id=\"191362\">@Richard Kavanagh</span></p>",
        "id": 154004850,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1538505673
    },
    {
        "content": "<p>I mean, it's supposed to work the way you think it's supposed to work.</p>",
        "id": 154004851,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1538505709
    },
    {
        "content": "<p>One caution: I know these rules have been clarified as the spec has matured. The latest seems to indicate that there's no hard rule that can be made about the relationship between Accept and what gets returned...</p>",
        "id": 154004858,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1538506560
    },
    {
        "content": "<p>So it may depend on the version of the spec implemented? And the test server capabilities?</p>",
        "id": 154004859,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1538506577
    },
    {
        "content": "<p>I think it's fair to say it unpredictable so I'll opt for a _format=xxx variant so at least that gives a defined behaviour<br>\nThanks</p>",
        "id": 154004861,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1538506652
    },
    {
        "content": "<p>you could make a task to get us to check it's in the validators</p>",
        "id": 154004909,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1538511054
    },
    {
        "content": "<p>Done <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19254\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19254\">GF#19254</a></p>",
        "id": 154004945,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1538524279
    }
]