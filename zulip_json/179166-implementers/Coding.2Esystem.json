[
    {
        "content": "<p><a href=\"https://www.hl7.org/fhir/datatypes-definitions.html#coding\" target=\"_blank\" title=\"https://www.hl7.org/fhir/datatypes-definitions.html#coding\">https://www.hl7.org/fhir/datatypes-definitions.html#coding</a> says:</p>\n<blockquote>\n<p>Otherwise, the URI should come from HL7's list of FHIR defined special URIs or it should de-reference to some definition that establish the system clearly and unambiguously.</p>\n</blockquote>\n<p>Is the expectation that this \"some definition\" has some particular format? Developer have been a bit confused by this language. There's no intended requirement of pointing to a <a href=\"https://www.hl7.org/fhir/namingsystem.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/namingsystem.html\">https://www.hl7.org/fhir/namingsystem.html</a>, I hope.</p>",
        "id": 153822977,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1461608595
    },
    {
        "content": "<p>Should point to a CodeSystem now. Agree that language needs updating now that we have formal definitions</p>",
        "id": 153822982,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461610162
    },
    {
        "content": "<p>So is the following still true? </p>\n<blockquote>\n<p>Represents a \"System\" used within the Identifier and Coding data types.</p>\n</blockquote>\n<p>From <a href=\"http://hl7-fhir.github.io/namingsystem\" target=\"_blank\" title=\"http://hl7-fhir.github.io/namingsystem\">http://hl7-fhir.github.io/namingsystem</a></p>",
        "id": 153823001,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1461612859
    },
    {
        "content": "<p>yes</p>",
        "id": 153823018,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461630770
    },
    {
        "content": "<p>Wait, so how is this different than CodeSystem? I don't see any mention of CodeSystem on the NamingSystem page (or vice versa).</p>",
        "id": 153823046,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1461639296
    },
    {
        "content": "<p>The relationship between codeSystem and NamingSystem is not simple, and needs to be described. </p>",
        "id": 153823047,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461639328
    },
    {
        "content": "<p>OK. Do we have a clear recommendation for which (if either) a <code>Coding.system</code>ought to dereference to, in an ideal world?</p>",
        "id": 153823048,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1461639371
    },
    {
        "content": "<p>generally, though, the documentation has not been updated for the introduction of CodeSystem. It's purely a time limitation - the technical consequences of the CodeSystem change were all I had time to deal with before the Montreal freeze </p>",
        "id": 153823049,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461639383
    },
    {
        "content": "<p>(8 weeks solid labour)</p>",
        "id": 153823050,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461639388
    },
    {
        "content": "<p>well, either and/or both. </p>",
        "id": 153823051,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461639401
    },
    {
        "content": "<p>Fine (I'll count that as a\"no\" for now, and will try to educate myself in the meantime.)</p>",
        "id": 153823052,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1461639428
    },
    {
        "content": "<p>It references a 'code system' - which may be described by either a naming system or a code system</p>",
        "id": 153823053,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461639431
    },
    {
        "content": "<p>Do we anticipate that both will stick around?</p>",
        "id": 153823054,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1461639447
    },
    {
        "content": "<p>I thought NamingSystem might be narrowed in scope to exclude code systems, for simplicitly, but Lloyd showed that this is not the case. I don't expect that there's an easy resolution that sees NamingSystem go away or refocus</p>",
        "id": 153823055,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461639501
    },
    {
        "content": "<p>Thanks. I'll read the docs and see if I still feel like this is crazy :-)</p>",
        "id": 153823056,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1461639563
    },
    {
        "content": "<p>they serve different purposes. But the purposes overlap, which is a problem. It's certainly wroth talking about, and there may be some resolution - we haven't looked at deeply.</p>",
        "id": 153823057,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461639618
    },
    {
        "content": "<p>Yes, having them overlap, without any clear way to decide which to use, would be a problem.</p>",
        "id": 153823060,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1461639725
    },
    {
        "content": "<p>What was it that Lloyd showed?</p>",
        "id": 153823061,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1461639740
    },
    {
        "content": "<p>don't remember and my mind is fried. <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> can dig it up</p>",
        "id": 153823063,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461639780
    },
    {
        "content": "<p>Yes, I'll look forward to this too when Lloyd's around.</p>",
        "id": 153823088,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1461640560
    },
    {
        "content": "<p>NamingSystem allows linkage of a given CodeSystem to all the identifiers that might be used for it - URIs, OIDs, etc.  And also indicates which of those should be used in which circumstances.  It may also provide basic advice about how codes or identifiers should be sent over the wire (e.g. removing separators, case, etc.)  We *could* put all of that into CodeSystem, but it's really a separate function.  Plus, when you're looking for NamingSystem type information, you really don't want to bring down all the codes.</p>",
        "id": 153823162,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1461685805
    },
    {
        "content": "<p>(That's what I remember of the reasons, anyhow.  Possible I've also forgotten something :))</p>",
        "id": 153823163,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1461685826
    },
    {
        "content": "<p>+1 to <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> 's description.  I _think_ it's the intention that a system with a NamingSystem defined could be queried by its aliases.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> - do your servers handle identifier/code system aliases in search?</p>",
        "id": 153823165,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1461686680
    },
    {
        "content": "<p>our servers do what's in the spec. What do you mean specifically? </p>",
        "id": 153823168,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461687876
    },
    {
        "content": "<p>If there's a NamingSystem resource for LOINC that lists <code>http://loinc.org</code> and <code>urn:oid:2.16.840.1.113883.6.1</code> as aliases, are these equivalent searches?</p>\n<p><code>[base]/Observation?code=http://loinc.org|123</code><br>\nand<br>\n<code>[base]/Observation?code=urn:oid:2.16.840.1.113883.6.1|123</code></p>",
        "id": 153823171,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1461688031
    },
    {
        "content": "<p>Do you mean searching for a match on a LOINC code using an alternate URI?  That's not required as part of the spec and I don't know anyone who does this.  Technically someone searching by anything other than the \"approved\" URI is non-conformant.  However, that doesn't mean you couldn't choose to support it anyhow.</p>",
        "id": 153823172,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1461688036
    },
    {
        "content": "<p>Yep - exactly what I'm asking...</p>",
        "id": 153823173,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1461688051
    },
    {
        "content": "<p>Is there any conversion to the \"canoncial URI\" as in ucum units for Quantities?</p>",
        "id": 153823174,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1461688104
    },
    {
        "content": "<p>I don't support that, though it's possible that I could</p>",
        "id": 153823177,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461688155
    },
    {
        "content": "<p>though it would have some interesting challenges....</p>",
        "id": 153823178,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461688168
    },
    {
        "content": "<p>Seems to make sense if we're going to provide a place to document aliases...</p>",
        "id": 153823180,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1461688176
    },
    {
        "content": "<p>Especially in the enterprise use cases where terminologies may or may not be quite so well defined and identifiers may...um...evolve.</p>",
        "id": 153823182,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1461688219
    },
    {
        "content": "<p>well, there's 2 different things here:<br>\n- an operation on naming system to return possible equivalent URIs<br>\n- the server just doing the switch internally</p>",
        "id": 153823183,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461688269
    },
    {
        "content": "<p>the second is less obviously useful to me - I search for loinc, and get back some resource with no LOINC code in it...</p>",
        "id": 153823184,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461688289
    },
    {
        "content": "<p>Currently we implement this in search handling by adding an OR block to the systems using the aliases.</p>",
        "id": 153823185,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1461688344
    },
    {
        "content": "<p>well, I would too - it would be less efficient but not much. But I'm more interested in the surprise factor here</p>",
        "id": 153823186,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461688592
    },
    {
        "content": "<p>Use case (that I currently have): I've got converted v2/v3 data with OIDs and am combining that with native FHIR data with URIs.  I don't control either data set.  As a result, I'm going to have both naming systems in my instance data...would be nice to not make all the clients deal with this.  Also, the clients may not know when I add another source with yet another system alias...</p>",
        "id": 153823187,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1461688835
    },
    {
        "content": "<p>So, is a CodeSystem one concrete manifestation out of a more abstract \"set\" of systems representing a single \"NamingSystem\"?</p>",
        "id": 153823200,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1461694623
    },
    {
        "content": "<p>Don't think so... a CodeSystem is-a NamingSystem, no?</p>",
        "id": 153823201,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1461694678
    },
    {
        "content": "<p>I think it's true at some level, but not true at the object level</p>",
        "id": 153823208,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461697713
    },
    {
        "content": "<p>Right...from a instance granularity though, 1 CodeSystem = 1 NamingSystem</p>",
        "id": 153823211,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1461697778
    },
    {
        "content": "<p>well, that should be the case, but there are cases for &gt;1 on ether side </p>",
        "id": 153823212,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461697813
    },
    {
        "content": "<p>That makes me nervous...I'll wait and watch I guess</p>",
        "id": 153823213,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1461697848
    },
    {
        "content": "<p>yeah I don't know that I like it either. most of them arise from degnerate processes, but you can't stop that from happenin</p>",
        "id": 153823215,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461698306
    },
    {
        "content": "<p>I think that Lloyd's explanation makes sense.  But I want to see how the ramifications play out - particularly with search (as Chris described).</p>",
        "id": 153823255,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1461700636
    }
]