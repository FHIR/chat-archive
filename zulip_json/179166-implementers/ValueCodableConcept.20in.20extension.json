[
    {
        "content": "<p>Hi,</p>\n<p>I came across structure definition which contains this:<br>\n{<br>\n  \"differential\": {<br>\n    \"element\": [<br>\n      {<br>\n        \"id\": \"AllergyIntolerance\",<br>\n        \"path\": \"AllergyIntolerance\"<br>\n      },<br>\n      {<br>\n        \"id\": \"AllergyIntolerance.extension\",<br>\n        \"path\": \"AllergyIntolerance.extension\",<br>\n        \"slicing\": {<br>\n          \"discriminator\": [<br>\n            {<br>\n              \"type\": \"value\",<br>\n              \"path\": \"url\"<br>\n            }<br>\n          ],<br>\n          \"rules\": \"open\"<br>\n        }<br>\n      },<br>\n      {<br>\n        \"id\": \"AllergyIntolerance.extension:reasonRefuted\",<br>\n        \"path\": \"AllergyIntolerance.extension\",<br>\n        \"sliceName\": \"reasonRefuted\",<br>\n        \"type\": [<br>\n          {<br>\n            \"code\": \"Extension\",<br>\n            \"profile\": \"<a href=\"http://hl7.org/fhir/StructureDefinition/allergyintolerance-reasonRefuted\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/allergyintolerance-reasonRefuted\">http://hl7.org/fhir/StructureDefinition/allergyintolerance-reasonRefuted</a>\"<br>\n          }<br>\n        ]<br>\n      },<br>\n      {<br>\n        \"id\": \"AllergyIntolerance.extension:reasonRefuted.valueCodeableConcept:valueCodeableConcept\",<br>\n        \"path\": \"AllergyIntolerance.extension.valueCodeableConcept\",<br>\n        \"sliceName\": \"valueCodeableConcept\"<br>\n      }<br>\n    ]<br>\n  }<br>\n}</p>\n<p>I want to know how the FHIR message Json will look like.<br>\nI tried this but it was giving validation error:<br>\n  \"extension\": [<br>\n    {<br>\n      \"url\": \"<a href=\"http://hl7.org/fhir/StructureDefinition/allergyintolerance-reasonRefuted\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/allergyintolerance-reasonRefuted\">http://hl7.org/fhir/StructureDefinition/allergyintolerance-reasonRefuted</a>\",<br>\n      \"value\": {</p>\n<div class=\"codehilite\"><pre><span></span>    &quot;valueCodeableConcept&quot;: {\n      &quot;coding&quot;: [\n        {\n          &quot;system&quot;: &quot;system&quot;,\n          &quot;code&quot;: &quot;code&quot;\n        }\n      ]\n    }\n  }\n}\n</pre></div>\n\n\n<p>]</p>\n<p>Can I get some example on how the data will look like?</p>",
        "id": 189466120,
        "sender_full_name": "PS",
        "timestamp": 1583129821
    },
    {
        "content": "<p>This fixes your json. Is this what you intended?</p>\n<p>{<br>\n    \"resourceType\": \"Extension\",<br>\n    \"url\": \"<a href=\"http://hl7.org/fhir/StructureDefinition/allergyintolerance-reasonRefuted\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/allergyintolerance-reasonRefuted\">http://hl7.org/fhir/StructureDefinition/allergyintolerance-reasonRefuted</a>\",<br>\n    \"valueCodeableConcept\": {<br>\n    \"coding\": [<br>\n        {<br>\n        \"system\": \"system\",<br>\n        \"code\": \"code\"<br>\n        }<br>\n    ]<br>\n    }<br>\n}</p>",
        "id": 189471374,
        "sender_full_name": "Abel Stolz",
        "timestamp": 1583137670
    },
    {
        "content": "<p>In the structure definition which I have shared there are two ids-<br>\n<strong>AllergyIntolerance.extension:reasonRefuted</strong> and  <strong>AllergyIntolerance.extension:reasonRefuted.valueCodeableConcept:valueCodeableConcept</strong>.<br>\nAllergyIntolerance.extension:reasonRefuted profile is that of reason refuted which is codeable concept.<br>\nSo from the json I want to know how both of the IDs are fitting into the structure definition ?<br>\nIn the json which you have shared there is only one codeable concept.</p>",
        "id": 189471854,
        "sender_full_name": "PS",
        "timestamp": 1583138239
    },
    {
        "content": "<p>I am not sure, what you mean by two IDs, but let me guess:<br>\nOne ID (reasonRefuted) is given by the unique url provided in the extension. The second ID (CodeableConcept) is given by the system and code, which you would have to specify in a real life example instead of \"system\" and \"code\". In your example there are both IDs present, as they are in the corrected json.<br>\nAm I missing something?</p>",
        "id": 189474036,
        "sender_full_name": "Abel Stolz",
        "timestamp": 1583140675
    },
    {
        "content": "<p>If you see structure definition ReasonRefuted has url which is of the type CodeableConcept and Inside reason refuted there is valueCodableConcept which is also of the type Codeable Concept. I am not sure but the example which you gave doesn't contains both codeableConcept. I am still confuse why in the structure definition there is need of putting nested structures as this can be just implemented by giving reasonRefuted and its URL.<br>\nIs my understanding correct?</p>",
        "id": 189475874,
        "sender_full_name": "PS",
        "timestamp": 1583142554
    },
    {
        "content": "<p>Ok, I think now I understand your question. The url of reasonRefuted is the ID of the extension. That is, it stands for the concept of of \"reasonRefuted\" in the context of allergy intolerances. The codeable concept still has to be specified, because there might be more than one reason! So the specific reason is coded in the codeable concept and thus needs it's own ID.<br>\nI don't know about your extension in the example, but in general this reasoning applies for many extensions.<br>\nIn conclusion: One ID to specify the concept itself (a class in object oriented programming), one ID to specify the concrete example of the concept (the instance in OO.)<br>\nHope this helps...</p>",
        "id": 189483654,
        "sender_full_name": "Abel Stolz",
        "timestamp": 1583149920
    },
    {
        "content": "<p>Expressed another way, the URL for the extension defines the element.  The URL for the code defines the namespace for the concept.  The code might well be from SNOMED - which covers all sorts of things.  You'd need to know the meaning of the 'element' in order to interpret the meaning of the concept appropriately</p>",
        "id": 189504738,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1583164788
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256468\">@Abel Stolz</span>  <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <br>\nThanks for the explanation. I understood what you have explained but I have seen other examples of structure definitions where there ID was not given. I see only here that separate IDs have been given to extension and the included element.<br>\nIs this redundant/given separate ID for more clarity?<br>\nEven if separate ID was not given it would have worked as  expected ?</p>",
        "id": 189567055,
        "sender_full_name": "PS",
        "timestamp": 1583216992
    },
    {
        "content": "<p>No, the IDs are not redundant.<br>\nNo, it would not work without separate IDs.</p>",
        "id": 189567469,
        "sender_full_name": "Abel Stolz",
        "timestamp": 1583217692
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"256468\">@Abel Stolz</span>  <br>\nSorry just one more question. There is a structure definition which has following in its differential in extension:</p>\n<p>{<br>\n        \"id\" : \"AllergyIntolerance.extension:RefutedSign\",<br>\n        \"path\" : \"AllergyIntolerance.extension\",<br>\n        \"sliceName\" : \"RefutedSign\",<br>\n        \"max\" : \"1\",<br>\n        \"type\" : [<br>\n          {<br>\n            \"code\" : \"Extension\",<br>\n            \"profile\" : \"<a href=\"https://somesignatureprofile.com\" target=\"_blank\" title=\"https://somesignatureprofile.com\">https://somesignatureprofile.com</a>\"<br>\n          }<br>\n}</p>\n<p>Here RefutedSign is of the type Signature but here there separate signature is not present.<br>\nThat's why I was confuse.<br>\nCan you tell here why its not required just like in codeableConcept case.<br>\nThanks.</p>",
        "id": 189569630,
        "sender_full_name": "PS",
        "timestamp": 1583221346
    },
    {
        "content": "<p>Sorry, I can't tell you. But I don't know the RefutedSign extension. You should look for an explanation in the documentation of the extension...</p>",
        "id": 189570250,
        "sender_full_name": "Abel Stolz",
        "timestamp": 1583222237
    },
    {
        "content": "<p>Okay Thanks</p>",
        "id": 189570440,
        "sender_full_name": "PS",
        "timestamp": 1583222440
    }
]