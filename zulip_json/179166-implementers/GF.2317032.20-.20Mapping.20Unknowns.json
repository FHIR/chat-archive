[
    {
        "content": "<p>in <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17032\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17032\">GF#17032</a> Lloyd asks for a way to map an unknown element. Well, you can't map an unknown element to nothing in a language that does things. But we could do this:</p>\n<div class=\"codehilite\"><pre><span></span>group for type+types  Binary extends Resource\n  input src : BinaryR2 as source\n  input tgt : Binary as target\n\n  &quot;Binary-contentType&quot; : for src.contentType make tgt.contentType\n  &quot;Binary-content&quot; : for src.content make tgt.content\n  &quot;Binary- securityContext&quot; : for src. securityContext log &quot;SecurityContext is lost&quot;\nendgroup\n</pre></div>",
        "id": 153968832,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528857108
    },
    {
        "content": "<p>e.g. add an explicit log option to make this stuff clear. You can use log in any statement....</p>",
        "id": 153968833,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528857134
    },
    {
        "content": "<p>I guess that is an option but I actually disagree with the tracker item.  it's a mapping language and we have nothing to map to.  You can indicate that via a comment in the mapping file.  Why do we need an actual mapping statement that does nothing for this?</p>",
        "id": 153968834,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1528858081
    },
    {
        "content": "<p>well, I did think about just adding a comment in the mapping. it would work, but I realised, on reflection, that I often had to use FHIRPath log statements slipped inside conditions to figure out what was going on... so why not make it explicit?</p>",
        "id": 153968836,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528858322
    },
    {
        "content": "<p>i guess that does make it explicit.</p>",
        "id": 153968837,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1528858393
    },
    {
        "content": "<p>I like the proposed solution</p>",
        "id": 153968845,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528858604
    },
    {
        "content": "<p>i just don't think it does what you think it does but I don't agree with what you want.  :)</p>",
        "id": 153968847,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1528858632
    },
    {
        "content": "<p>from my ccda work, i don't think that FHIR mapping files will become the default means of enumerating a mapping.  it's equivalent to telling people to look at the schematron to see the ccda conformance statements.  so there needs to be less-programming way of expressing mappings and that is where you'd want to express that such and such an element isn't mapped.</p>",
        "id": 153968849,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1528858740
    },
    {
        "content": "<p>but for the existing r2 to r3 mappings and such, the log statement is sort of equivalent to a comment</p>",
        "id": 153968850,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1528858763
    },
    {
        "content": "<p>the problem is that expression mappings in any less comprehensive way is misleading.</p>",
        "id": 153968851,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528858778
    },
    {
        "content": "<p>It allows you to be explicit in the mapping definition and it also spits out the mapping at runtime.  I agree it's evil to read, but if you want to see the details of what's happening it's where you need to go.</p>",
        "id": 153968852,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528858782
    }
]