[
    {
        "content": "<p>I've noticed that in some of the base transforms, some elements are moved over and put in an extension as is, i.e. maintaining the 3.0 uri and follow the uri convention defined here <a href=\"https://build.fhir.org/versions.html#extensions\">https://build.fhir.org/versions.html#extensions</a></p>\n<p>If an element does not have a target in the version it is being transform into, but it should be maintained.  Is this the correct approach to adopt?</p>\n<p><span class=\"user-mention\" data-user-id=\"191478\">@Oliver Egger</span>  <span class=\"user-mention\" data-user-id=\"191363\">@Vadim Peretokin</span> <span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ?</p>",
        "id": 275518776,
        "sender_full_name": "Declan Kieran",
        "timestamp": 1647441193
    },
    {
        "content": "<p>Hmm... are you asking if elements that were deleted in the newer version should still be transformed?</p>",
        "id": 275519055,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1647441292
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191363\">@Vadim Peretokin</span>  More if this is the method to adopt if it was the case that you had decided this was data you did not want to lose during a transform, and there was no appropriate target in the later version, but I'd assume it would also be applicable going back versions too?</p>",
        "id": 275522171,
        "sender_full_name": "Declan Kieran",
        "timestamp": 1647442468
    },
    {
        "content": "<p>I think that is fine. This paragraph addresses it head on:</p>\n<blockquote>\n<p>If applications have implemented less stable resources, not only do they have the problem of new elements for new requirements, the specification may change in either compatible or incompatible ways, and it may be necessary to carry data elements from past versions forward in order to allow seamless round-tripping.</p>\n</blockquote>",
        "id": 275522829,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1647442718
    },
    {
        "content": "<p>the conversion code framework predates the cross version extensions, and I haven't applied myself to figuring out how I'd manage the issues around fields appearing and disappearing and filtering out extensions. It's kind of on the long term todo list, and I don't mind if someone else takes it up</p>",
        "id": 275580133,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1647466342
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> That's good to know - I was looking at exactly this issue over the last couple of days, and frustrated that the BaseAdvisor hooks (<code>handleExtension</code>) don't provide sufficient context to add this capability in.</p>",
        "id": 275583658,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1647468344
    },
    {
        "content": "<p>That's in my queue. It should provide the context</p>",
        "id": 275595915,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1647478338
    },
    {
        "content": "<p>PRs welcome</p>",
        "id": 275595918,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1647478342
    },
    {
        "content": "<p>Just to confirm, that's the Java code that also does version conversion?</p>",
        "id": 275616691,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1647503595
    }
]