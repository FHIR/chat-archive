[
    {
        "content": "<p>Anyone have a good example, or a link to an example, of using pages to retrieve a very large data set via a FHIR REST API?</p>",
        "id": 189668445,
        "sender_full_name": "Roberth Blum",
        "timestamp": 1583308628
    },
    {
        "content": "<p>What do you mean with 'pages'?</p>",
        "id": 189679711,
        "sender_full_name": "Frank Oemig",
        "timestamp": 1583319425
    },
    {
        "content": "<p>FHIR searches return large results in sets of pages (search parameter 'count'). This is like web site which displays search results in sets of 10, 25, 100, whatever you specify. The first result set (first page) contains a link to the next page with the next search results.</p>",
        "id": 189680205,
        "sender_full_name": "Abel Stolz",
        "timestamp": 1583319810
    },
    {
        "content": "<p>Thanks for your responses. <br>\nI have this example in XML <a href=\"https://www.hl7.org/fhir/http.html#paging\" target=\"_blank\" title=\"https://www.hl7.org/fhir/http.html#paging\">https://www.hl7.org/fhir/http.html#paging</a>. As I understand I must define what the first/last, previous/next page is in the bundle Meta. However, where can I find a more real life example? And how do I implement this in json?</p>",
        "id": 189689537,
        "sender_full_name": "Roberth Blum",
        "timestamp": 1583328335
    },
    {
        "content": "<p><a href=\"#narrow/stream/179166-implementers/topic/result.20pagination.20-.20_count.20.2F.20offset.3F\" title=\"#narrow/stream/179166-implementers/topic/result.20pagination.20-.20_count.20.2F.20offset.3F\">https://chat.fhir.org/#narrow/stream/179166-implementers/topic/result.20pagination.20-.20_count.20.2F.20offset.3F</a></p>",
        "id": 189689851,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1583328592
    },
    {
        "content": "<p>you do a search with the parameter ?_count=x, where x is the amount of results you want to return</p>",
        "id": 189689931,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1583328628
    },
    {
        "content": "<p>in the search result - depending on which server - you get the links to the next set</p>",
        "id": 189690000,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1583328684
    },
    {
        "content": "<p><a href=\"http://test.fhir.org/r4/Patient/?_count=5\" target=\"_blank\" title=\"http://test.fhir.org/r4/Patient/?_count=5\">http://test.fhir.org/r4/Patient/?_count=5</a></p>",
        "id": 189690003,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1583328687
    },
    {
        "content": "<p>is that what you are asking <span class=\"user-mention\" data-user-id=\"258195\">@Roberth Blum</span> ?</p>",
        "id": 189690023,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1583328709
    },
    {
        "content": "<p>Yes, kind of close. Just something I am missing is <a href=\"http://test.fhir.org/r4/Patient/?_count=1\" target=\"_blank\" title=\"http://test.fhir.org/r4/Patient/?_count=1\">http://test.fhir.org/r4/Patient/?_count=1</a> where do I find the link to the next set? I seem to not be able to find it.</p>",
        "id": 189691689,
        "sender_full_name": "Roberth Blum",
        "timestamp": 1583329921
    },
    {
        "content": "<p>OK, i think I understand, If I build the API I need to store the search and let the requester offset with 1. <br>\nE.g. <a href=\"http://test.fhir.org/r4/Patient?_format=text/xhtml&amp;search-id=aba873f1-7731-4600-ba67-0259d3efd6&amp;search-offset=2&amp;_count=1\" target=\"_blank\" title=\"http://test.fhir.org/r4/Patient?_format=text/xhtml&amp;search-id=aba873f1-7731-4600-ba67-0259d3efd6&amp;search-offset=2&amp;_count=1\">http://test.fhir.org/r4/Patient?_format=text/xhtml&amp;search-id=aba873f1-7731-4600-ba67-0259d3efd6&amp;search-offset=2&amp;_count=1</a></p>\n<p>I was under the impression that there is a possibility to not have to store the searches as Search ID.</p>\n<p>As the example provided in <a href=\"https://www.hl7.org/fhir/http.html#paging\" target=\"_blank\" title=\"https://www.hl7.org/fhir/http.html#paging\">https://www.hl7.org/fhir/http.html#paging</a></p>",
        "id": 189692783,
        "sender_full_name": "Roberth Blum",
        "timestamp": 1583330562
    },
    {
        "content": "<p>If you are building the server API, please note that you do not need to support an explicit <code>offset</code> parameter. You can internally track searches in any way you like and the only interface that you need to expose is to include a next page link and a previous page link on each page you return. These may embed parameters that are totally opaque to the client, rather than a transparent parameter like <code>offset</code> (or indeed they may point to totally distinct paths).</p>",
        "id": 189693259,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1583330841
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191315\">Josh Mandel</span> <a href=\"#narrow/stream/179166-implementers/topic/Pages.20example/near/189693259\" title=\"#narrow/stream/179166-implementers/topic/Pages.20example/near/189693259\">said</a>:</p>\n<blockquote>\n<p>If you are building the server API, please note that you do not need to support an explicit <code>offset</code> parameter. You can internally track searches in any way you like and the only interface that you need to expose is to include a next page link and a previous page link on each page you return. These may embed parameters that are totally opaque to the client, rather than a transparent parameter like <code>offset</code> (or indeed they may point to totally distinct paths).</p>\n</blockquote>\n<p>Yes exactly this is what I would like to achieve. This is what I am searching for an example for in json for inspiration, to just send the \"next\" URL in the response.</p>",
        "id": 189694050,
        "sender_full_name": "Roberth Blum",
        "timestamp": 1583331264
    },
    {
        "content": "<p>OK -- you can try <a href=\"http://hapi.fhir.org/baseR4/Patient?_count=1\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/Patient?_count=1\">http://hapi.fhir.org/baseR4/Patient?_count=1</a> for example and you'll see:</p>\n<div class=\"codehilite\"><pre><span></span>  &quot;link&quot;: [\n    {\n      &quot;relation&quot;: &quot;self&quot;,\n      &quot;url&quot;: &quot;http://hapi.fhir.org/baseR4/Patient?_count=1&quot;\n    },\n    {\n      &quot;relation&quot;: &quot;next&quot;,\n      &quot;url&quot;: &quot;http://hapi.fhir.org/baseR4?_getpages=bb1387b5-45ec-4263-868a-aeb173a6bf14&amp;_getpagesoffset=1&amp;_count=1&amp;_pretty=true&amp;_bundletype=searchset&quot;\n    }\n  ],\n</pre></div>",
        "id": 189710878,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1583340940
    },
    {
        "content": "<p>If you follow the <code>next </code>link (which, note, is totally opaque, and doens't look at all like the <code>self</code> link), you'll see examples of <code>next</code> and <code>previous</code>:</p>\n<div class=\"codehilite\"><pre><span></span>  &quot;link&quot;: [\n    {\n      &quot;relation&quot;: &quot;self&quot;,\n      &quot;url&quot;: &quot;http://hapi.fhir.org/baseR4?_getpages=bb1387b5-45ec-4263-868a-aeb173a6bf14&amp;_getpagesoffset=1&amp;_count=1&amp;_pretty=true&amp;_bundletype=searchset&quot;\n    },\n    {\n      &quot;relation&quot;: &quot;next&quot;,\n      &quot;url&quot;: &quot;http://hapi.fhir.org/baseR4?_getpages=bb1387b5-45ec-4263-868a-aeb173a6bf14&amp;_getpagesoffset=2&amp;_count=1&amp;_pretty=true&amp;_bundletype=searchset&quot;\n    },\n    {\n      &quot;relation&quot;: &quot;previous&quot;,\n      &quot;url&quot;: &quot;http://hapi.fhir.org/baseR4?_getpages=bb1387b5-45ec-4263-868a-aeb173a6bf14&amp;_getpagesoffset=0&amp;_count=1&amp;_pretty=true&amp;_bundletype=searchset&quot;\n    }\n  ],\n</pre></div>",
        "id": 189710991,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1583340987
    },
    {
        "content": "<p>What the next and previous links look like will vary from server to server.  There's no expectation for the mechanisms to be consistent.  From a client perspective it's an opaque URL you invoke to navigate from page to page.</p>",
        "id": 189714654,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1583343069
    },
    {
        "content": "<p>Thanks, very helpful! I will test an adaption of this and see how it fit our need.</p>",
        "id": 189764666,
        "sender_full_name": "Roberth Blum",
        "timestamp": 1583391010
    }
]