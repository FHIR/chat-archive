[
    {
        "content": "<p>R4B introduces datatype RatioRange with the following invariant:</p>\n<div class=\"codehilite\"><pre><span></span><code>One of lowNumerator or highNumerator and denominator SHALL be present, or all are absent. If all are absent, there SHALL be some extension present\n</code></pre></div>\n<p>Expression:</p>\n<div class=\"codehilite\"><pre><span></span><code>((lowNumerator.empty() and highNumerator.empty()) xor denominator.exists()) and (lowNumerator.exists() or extension.exists())\n</code></pre></div>\n<p>I find both the description and the fhirpath a bit dense, but at the outer layer of the expression its an and with <code>(lowNumerator.exists() or extension.exists())</code></p>\n<p>Should the following RatioRange be valid (e.g. in concentration[x] in Ingredient)?</p>\n<div class=\"codehilite\"><pre><span></span><code>      &lt;concentrationRatioRange&gt;\n        &lt;highNumerator&gt;\n          &lt;value value=&quot;1&quot;/&gt;\n          &lt;unit value=&quot;L&quot;/&gt;\n        &lt;/highNumerator&gt;\n        &lt;denominator&gt;\n          &lt;value value=&quot;2&quot;/&gt;\n          &lt;unit value=&quot;L&quot;/&gt;\n        &lt;/denominator&gt;\n      &lt;/concentrationRatioRange&gt;\n</code></pre></div>\n<p>If so, I think the expression is in error.</p>",
        "id": 264156552,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1638971112
    },
    {
        "content": "<p>Reading the English and making a guess about where the parentheses belong, I think your example is valid.</p>\n<p>I can't read that FHIRpath expression before coffee ;-)</p>",
        "id": 264160165,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1638972751
    },
    {
        "content": "<p>I had to make a truth table to convince myself the xor part was right (but i think it is)<br>\n<a href=\"/user_uploads/10155/ys1bO5w8lyLLlGUF7-_7utkJ/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/ys1bO5w8lyLLlGUF7-_7utkJ/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/ys1bO5w8lyLLlGUF7-_7utkJ/image.png\"></a></div>",
        "id": 264160359,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1638972837
    },
    {
        "content": "<p>but maybe we should strive for more readable expressions...</p>",
        "id": 264160457,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1638972868
    },
    {
        "content": "<p>I think its the mix of <code>.empty()</code> and <code>.exists()</code> with various boolean operations in the same expression that made it hard for my feable mind</p>",
        "id": 264160654,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1638972961
    },
    {
        "content": "<p>totally agree about that. <span class=\"user-mention\" data-user-id=\"191651\">@Rik Smithies</span> can we write a more natural expression that doesn't use xor? (looks like it was translated from xpath to me)</p>",
        "id": 264202659,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1638989738
    },
    {
        "content": "<p>It wasn't me that created that, I just copied the whole datatype into R4B from the main build. Possibly <span class=\"user-mention\" data-user-id=\"192166\">@Jean Duteau</span> ?</p>",
        "id": 264215016,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1638995082
    },
    {
        "content": "<p>yes it was <span class=\"user-mention\" data-user-id=\"192166\">@Jean Duteau</span></p>",
        "id": 264215280,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1638995229
    },
    {
        "content": "<p>when this was applied, the invariant was taken from Ratio:<br>\nrat-1: (numerator.empty() xor denominator.exists()) and (numerator.exists() or extension.exists())<br>\nthis became for RatioRange:<br>\ninv-1: ((lowNumerator.empty() and highNumerator.empty()) xor denominator.exists()) and (lowNumerator.exists() or extension.exists())</p>",
        "id": 264225431,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1639000028
    },
    {
        "content": "<p>this does miss the case where high and denominator are present, so the invariant isn't quite right.</p>",
        "id": 264227201,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1639000875
    },
    {
        "content": "<p>here is the easier invariant:<br>\n((low.exists or high.exists) and denom.exists) or (low.empty and high.empty and denom.empty and extension.exists)</p>",
        "id": 264228429,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1639001549
    },
    {
        "content": "<p>if we want to rewrite the Ratio invariant to not use xor:<br>\n(numerator.exists and denominator.exists) or (numerator.empty and denominator.empty and extension.exists)</p>",
        "id": 264228750,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1639001691
    },
    {
        "content": "<p>I, for one, find those much more readable</p>",
        "id": 264229879,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1639002299
    },
    {
        "content": "<p>Would it be helpful for me to open a JIRA tracker for this one, or is already being worked?</p>",
        "id": 264518295,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1639175654
    },
    {
        "content": "<p>Open a Jira issue</p>",
        "id": 264540641,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1639196972
    },
    {
        "content": "<p><a href=\"http://jira.hl7.org/browse/FHIR-34454\">FHIR#34454</a></p>",
        "id": 264567708,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1639235982
    },
    {
        "content": "<p>I pre-applied these in R4B</p>",
        "id": 264812317,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639458159
    }
]