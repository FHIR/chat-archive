[
    {
        "content": "<p>Hi, I'm new to FHIR and digging into using it with RDF.  I see some pulls to hapi-fhir (<a href=\"https://github.com/jamesagnew/hapi-fhir/pull/1321\" target=\"_blank\" title=\"https://github.com/jamesagnew/hapi-fhir/pull/1321\">https://github.com/jamesagnew/hapi-fhir/pull/1321</a>) that appear to add RDF support, but I'm not able to get RDF responses (by adding Accept: text/turtle, application/fhir+turtle , or application/x-turtle or using the _format=turtle, _format=text/turtle.</p>\n<p>I'm testing using the hapi-fhir-jpaserver-starter which is using 4.2 release. </p>\n<p>Any guidance is appreciated.</p>",
        "id": 188747043,
        "sender_full_name": "Josh Collins",
        "timestamp": 1582301841
    },
    {
        "content": "<p>Unfortunately that PR was not successful and was rolled back (I didn't realize at the time that all of its tests were @Ignored).</p>\n<p>I know that <span class=\"user-mention\" data-user-id=\"191660\">@Harold Solbrig</span> and <span class=\"user-mention\" data-user-id=\"191574\">@David Booth</span> were working on reimplementing it- They may have updates.</p>",
        "id": 188748614,
        "sender_full_name": "James Agnew",
        "timestamp": 1582302715
    },
    {
        "content": "<p>Ah, that would certainly explain what I'm seeing!  Thank you for the response.  Interested in any updates on those working on it and possibly contributing if there is room in that effort.</p>",
        "id": 188749762,
        "sender_full_name": "Josh Collins",
        "timestamp": 1582303403
    },
    {
        "content": "<p>I'm extremely interested in RDF support as well. It seems to be the only thing stopping FHIR from finally making data integration possible. At the very least, I have to be able to use SPARQL to query and manipulate data. I'm willing to contribute, whether by initially adding support for Turtle or JSON-LD.</p>",
        "id": 189457060,
        "sender_full_name": "Miguel Rochefort",
        "timestamp": 1583113134
    },
    {
        "content": "<p>there is an RDF format - turtle. All the examples are provided as turtle, and the definitions are made available in turtle format too. In addition, SHEx is published. Also, both <a href=\"http://test.fhir.org\" target=\"_blank\" title=\"http://test.fhir.org\">test.fhir.org</a> and the HAPI server (including <a href=\"http://hapi.fhir.org\" target=\"_blank\" title=\"http://hapi.fhir.org\">hapi.fhir.org</a>) can read and write the turtle format</p>",
        "id": 189457975,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583114919
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> , I'm able read turtle from <a href=\"http://test.fhir.org\" target=\"_blank\" title=\"http://test.fhir.org\">test.fhir.org</a>, but I'm not seeing it supported in <a href=\"http://hapi.fhir.org\" target=\"_blank\" title=\"http://hapi.fhir.org\">hapi.fhir.org</a>.  When passing Accept: text/turtle I get JSON instead of RDF.</p>",
        "id": 189493843,
        "sender_full_name": "Josh Collins",
        "timestamp": 1583158260
    },
    {
        "content": "<p>There appears to be a nascent attempt at an RDFParser in the master branch of hapi-fhir-base (<a href=\"https://github.com/jamesagnew/hapi-fhir/blob/master/hapi-fhir-base/src/main/java/ca/uhn/fhir/parser/RDFParser.java\" target=\"_blank\" title=\"https://github.com/jamesagnew/hapi-fhir/blob/master/hapi-fhir-base/src/main/java/ca/uhn/fhir/parser/RDFParser.java\">https://github.com/jamesagnew/hapi-fhir/blob/master/hapi-fhir-base/src/main/java/ca/uhn/fhir/parser/RDFParser.java</a>) but it isn't fully wired in and the parse itself breaks Jena when trying to render the triples.</p>\n<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> would there be a path to using the version specific RDFParsers that exist in the HL7 Fhir Core project (<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/master/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/formats/RdfParser.java\" target=\"_blank\" title=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/master/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/formats/RdfParser.java\">https://github.com/hapifhir/org.hl7.fhir.core/blob/master/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/formats/RdfParser.java</a>?).</p>",
        "id": 189494888,
        "sender_full_name": "Josh Collins",
        "timestamp": 1583159033
    },
    {
        "content": "<p>ah. yes, James took the old one out of HAPI, and there's a small project to replace it with an updated one but that hasn't landed yet.</p>\n<p>I don't think that core parsers will fit into HAPI at all well. Also, the RDF parser doesn't actually parse yet.</p>",
        "id": 189525257,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583176530
    },
    {
        "content": "<p>In Sydney, <span class=\"user-mention\" data-user-id=\"191660\">@Harold Solbrig</span> and I were discussing a new version of JSON-LD that may make the existing JSON into RDF - it's close. Harold, when does the RDF group meet?</p>",
        "id": 189525377,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583176596
    },
    {
        "content": "<p>I think I saw an announcement that the RDF group is switching to JSON-LD for RDF support.</p>",
        "id": 189530956,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1583179675
    },
    {
        "content": "<p>I saw some interest in that, but it's not something we can just do. there's water to go under the bridge yet</p>",
        "id": 189531751,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583180214
    },
    {
        "content": "<p>I was on a call with Harold's group earlier today - but that does seem focused on JSON-LD 1.1 first.  I'm looking to support turtle.</p>",
        "id": 189534116,
        "sender_full_name": "Josh Collins",
        "timestamp": 1583181812
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> I'd like to invest some time in getting the current, non-working implementation to function, but I'm admittedly getting up to speed on both the FHIR spec and the nuances of its RDF representations - is it a fair assumption I should be able to render the appropriate turtle with just the resource definitions, or will there be other external data needed?  Currently the JSON and XML parsers are generic across versions, should that be achievable on Turtle as well?</p>",
        "id": 189588390,
        "sender_full_name": "Josh Collins",
        "timestamp": 1583238805
    },
    {
        "content": "<p>sure. it should be</p>",
        "id": 189588488,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583238868
    },
    {
        "content": "<p>someone else was working on this...</p>",
        "id": 189588496,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583238878
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> i suspect you are thinking of the person at Mayo who's code Josh is pouring through. that seem likely?</p>",
        "id": 189589159,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1583239485
    },
    {
        "content": "<p>y</p>",
        "id": 189589254,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583239591
    },
    {
        "content": "<p>Josh is looped in with the folks at Mayo so they should be helping route him to existing work</p>",
        "id": 189589517,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1583239841
    },
    {
        "content": "<p>The code I'm working through is from Raul Estrada - not sure if he's associated with Mayo or not.  Regardless, the Mayo folks seem to have the most interest in this so iterating there is probably my next step.</p>",
        "id": 189589639,
        "sender_full_name": "Josh Collins",
        "timestamp": 1583240030
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179166-implementers/topic/RDF.20Support.20in.20hapi-fhir/near/189525377\" title=\"#narrow/stream/179166-implementers/topic/RDF.20Support.20in.20hapi-fhir/near/189525377\">said</a>:</p>\n<blockquote>\n<p>In Sydney, <span class=\"user-mention silent\" data-user-id=\"191660\">Harold Solbrig</span> and I were discussing a new version of JSON-LD that may make the existing JSON into RDF - it's close. Harold, when does the RDF group meet?</p>\n</blockquote>\n<p>It meets Thursday at 11:00 AM Eastern at <a href=\"http://tinyurl.com/fhirrdf\" target=\"_blank\" title=\"http://tinyurl.com/fhirrdf\">http://tinyurl.com/fhirrdf</a>   (A link to a Google Hangout)</p>",
        "id": 189732455,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1583354255
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"265797\">@Josh Collins</span>  and <span class=\"user-mention\" data-user-id=\"268066\">@Miguel Rochefort</span> !  I wanted to jump in and introduce myself and provide some clarification if I can, since it looks like we haven't been doing quite enough to get the word out.  The FHIR/RDF effort is a W3C/HL7 collaboration which I \"chair\".  (I put \"chair\" in quotes because I'm an official chair from the W3C perspective, but not an official HL7 chair.)  Anyway, I am very glad to hear of your interest in FHIR/RDF!</p>\n<p>First off, we'd be delighted if you could join our Thursday teleconferences at 11am Boston time on google hangout: <a href=\"http://tinyurl.com/fhirrdf\" target=\"_blank\" title=\"http://tinyurl.com/fhirrdf\">http://tinyurl.com/fhirrdf</a> .  That's the primary place where we coordinate the FHIR/RDF efforts.  We'd also love to hear what you are doing or plan to do with FHIR/RDF, if you're able to talk about it.  But whether or not you're able to join the calls or talk, we're still very interested in your input!</p>\n<p>The Mayo project that <span class=\"user-mention\" data-user-id=\"191452\">@Eric Prud'hommeaux</span> mentioned also has separate weekly calls. There is a lot of overlap between those calls and the official FHIR/RDF calls because the Mayo project is using FHIR/RDF and contributing a lot of work on it.</p>\n<p>Regarding HAPI, there was work on getting an RDF serialization into the HAPI server, but as Grahame mentioned, it was incomplete and pulled out (at least until it can be fully completed, with test cases and all).</p>\n<p>Although there is ongoing interest in completing the RDF work on the HAPI server, in recent weeks our Thursday teleconferences have been dominated by two other efforts:</p>\n<ul>\n<li>\n<p>We are developing a new way to convert FHIR/JSON to FHIR/RDF, via JSON-LD 1.1, which promises to be easier to maintain than the current mechanism.  (More on this below.)</p>\n</li>\n<li>\n<p>Based on experience with existing FHIR/RDF, we are also developing a new revision of the standard FHIR/RDF representation (which we're calling R5), with the main goal of being easier and more natural for RDF users to process.  To this end, we are very interested in hearing from any others who have been using the existing FHIR/RDF representation (which we're calling R4), to best understand common usage and query patterns, so that we can make the right design choices.  We want to tweak the existing FHIR/RDF spec to make common cases easier while keeping rare cases still possible.</p>\n</li>\n</ul>\n<p>Regarding JSON-LD, our goal with JSON-LD 1.1 is to simplify the maintenance of both the FHIR/RDF specification and conversion between FHIR/JSON and FHIR/RDF.  It is not at all to replace Turtle.  The 1.1 version of JSON-LD added functionality that was not present in the original 1.0 version, when we first considered and rejected JSON-LD a few years ago.  To understand where JSON-LD 1.1 now fits in, consider what we had to do, to standardize FHIR/RDF.  We mainly did two things:</p>\n<ul>\n<li>\n<p>Implemented appropriate code in the FHIR spec build process to generate both the human-oriented FHIR/RDF specification and the machine-processable artifacts, like the ontology and the ShEx.</p>\n</li>\n<li>\n<p>Implemented converters that translate between FHIR/JSON (or perhaps FHIR/XML) and FHIR/RDF.  That's where the HAPI server fits in.</p>\n</li>\n</ul>\n<p>Both of those tasks require the ability to translate between FHIR/JSON (or the FHIR internal model) and FHIR/RDF, and when we did the initial version of FHIR/RDF, we accomplished those tasks using a certain amount of custom code.  But with the advent of JSON-LD 1.1, we realized that we could reduce the custom code that is required, by using a JSON-LD @context to perform much of the JSON-to-RDF mapping.  The @context allows the mapping to be more declarative in style also.</p>\n<p>It is important to note that, even though we intend to adopt JSON-LD 1.1 for some of the internal processing, this does NOT mean that we are abandoning Turtle or ShEx as the languages that are used for visible consumption.  In theory we could consider switching from Turtle to JSON-LD as the expository language for describing FHIR/RDF and giving examples, but we have no plans to do that, and I seriously doubt that it would be wise, because I fear it would create too much confusion with standard FHIR/JSON.</p>\n<p>In short, even though JSON-LD 1.1 may become an important piece of the internal process, it does not need to be visible to FHIR/RDF users unless they specifically choose to serialize their RDF as JSON-LD, which they are always free to do, since RDF can be serialized in any of several standard formats, including Turtle, RDF/XML, JSON-LD, etc.</p>\n<p>I hope this helps a little to clarify our efforts.  Let me know what other questions come to mind, and please join our teleconference if you can fit it into your schedule.   Thanks!</p>",
        "id": 189798869,
        "sender_full_name": "David Booth",
        "timestamp": 1583419963
    },
    {
        "content": "<p>Thanks for the details <span class=\"user-mention\" data-user-id=\"191574\">@David Booth</span>.  I won't be able to attend this week's meeting, but I'll put it on my calendar for next week.</p>\n<p>Is it safe to say that if RDF (specifically turtle) support is needed in the short term (a ~3 month time horizon) the current JSON-LD 1.1 efforts are likely not going to be in place?</p>\n<p>Assuming that is the case, my current plan is to implement RDF support on a fork and then work to get it upstream.</p>",
        "id": 189799729,
        "sender_full_name": "Josh Collins",
        "timestamp": 1583420448
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"265797\">@Josh Collins</span> even when we finish getting the JSON-LD 1.1 approach done, there could still be significant value in adding RDF support to HAPI without going through JSON-LD 1.1, because as <span class=\"user-mention\" data-user-id=\"191452\">@Eric Prud'hommeaux</span>  , users will want to know line numbers for errors, and I don't know how those would be carried through if the processing went via JSON-LD 1.1.  But maybe you (or someone) can devise a way to do that.  Another possible benefit of skipping JSON-LD 1.1 in HAPI is that it might run faster, though of course programmer effort is usually far more expensive than machine cycles, so speed may not matter much.</p>",
        "id": 189814054,
        "sender_full_name": "David Booth",
        "timestamp": 1583428214
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191574\">@David Booth</span>  Are JSON-LD contexts flexible enough to add all the RDF-equivalent semantics to existing JSON without modifying it? If so, couldn't we just tweak the header of the existing JSON API to include those contexts, or provide an Endpoint-to-Context mapping for clients to do it themselves? JSON-LD to Turtle should be trivial at that point, and then a SPARQL endpoint could be implemented as a proxy service the same way GraphQL maps to existing REST APIs. That is, assuming I'm not oversimplifying things.</p>",
        "id": 189945005,
        "sender_full_name": "Miguel Rochefort",
        "timestamp": 1583537317
    },
    {
        "content": "<p>I think it's not quite there yet</p>",
        "id": 189953188,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583548399
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"268066\">@Miguel Rochefort</span> , Grahame is correct. There are still a few essential things that JSON-LD 1.1 cannot do, which must be done with custom code.</p>",
        "id": 189960581,
        "sender_full_name": "David Booth",
        "timestamp": 1583565091
    },
    {
        "content": "<p>one apparently didn't happen because we wouldn't want it to? Didn't follow that logic...?</p>",
        "id": 189962947,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583570547
    },
    {
        "content": "<p>oh it was to do with the list representaion. I don't see how JSON-LD (actually RDF generally) is useable until it's figured out a useable common approach for 0..* relationships</p>",
        "id": 189965367,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583575908
    },
    {
        "content": "<p>btw, native RDF support for HAPI is now implemented, working on release engineering and a PR for HAPI</p>",
        "id": 209169565,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1599297664
    }
]