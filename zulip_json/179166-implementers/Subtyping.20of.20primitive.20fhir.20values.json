[
    {
        "content": "<p>What are the practical consequences meant to be, of subtyping for primitive values?</p>\n<p>For example, one place you'd expect it to be relevant is when setting elements in a map file. <code>canonical</code> and <code>url</code> are both subtypes of <code>uri</code>. Under an ordinary subtyping system, this would mean that if a field has type <code>uri</code> and you set it equal to a <code>url</code>, that would be fine, because <code>url</code> is a subtype of <code>uri</code>. But if the field had type <code>canonical</code> and you set it equal to a <code>url</code>, that would be an error, because <code>url</code> is not a subtype of <code>canonical</code>. Looking at the \"datatypes version maps\", there is both a \"canonical2uri\" and \"uri2canonical\" group, which suggests that <em>without those groups</em>, neither conversion would be allowed? <a href=\"http://hl7.org/fhir/datatypes-version-maps.html\">http://hl7.org/fhir/datatypes-version-maps.html</a></p>\n<p>Another place it could come up is the <code>is</code> operator in fhirpath. Should <code>some_canonical.is(uri)</code> be true? How about <code>some_canonical.is(url)</code>? Or <code>some_uri.is(canonical)</code>?</p>\n<p>I didn't find any page that talks about this, but if there is one and I missed it feel free to just point me in that direction.</p>",
        "id": 203746923,
        "sender_full_name": "Justin Pombrio",
        "timestamp": 1594662707
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span></p>",
        "id": 203747205,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1594662849
    },
    {
        "content": "<p>in general, FHIR elements are <em>final</em> - you can't use sub-types in place of the types. It's possible that I overlooked some of the ramifications of sub-typing in the map files because I don't usually think about it for elements.</p>",
        "id": 203756922,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1594667206
    },
    {
        "content": "<p>for FHIRPath, for FHIR release 4, </p>\n<ul>\n<li><code>some_canonical.is(uri)</code> = true</li>\n<li><code>some_canonical.is(url)</code> = false;</li>\n<li><code>some_uri.is(canonical)?</code> = .... that depends, but false if uri refers to the type, or uri refers to a FHIR element type, but maybe true in some other circumstances</li>\n</ul>",
        "id": 203757491,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1594667471
    },
    {
        "content": "<p>Do we need to clarify any of that behavior in the spec?</p>",
        "id": 203758561,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1594668050
    },
    {
        "content": "<p>Thanks Grahame, that makes sense. So subtyping in fhirpath but not in fhir.</p>\n<blockquote>\n<p>Do we need to clarify any of that behavior in the spec?</p>\n</blockquote>\n<p>I don't think there's anything in the mapping language that talks about when it's legal to map one primitive to another. That would be useful to clarify. The fhirpath spec is pretty clear, though. For <code>is</code> and related operators it says \"... or a subclass thereof\".</p>\n<p>There's a separate question of how fhir types are supposed to map to fhirpath types, which as far as I know is unspecified. For example, fhirpath has no operations on the <code>uri</code> type, only on <code>string</code>s. Presumably those <code>string</code> operations ought to work on <code>uri</code>s, but the way that's supposed to work is unclear.</p>",
        "id": 203761701,
        "sender_full_name": "Justin Pombrio",
        "timestamp": 1594669556
    },
    {
        "content": "<p>I'll think about it</p>",
        "id": 203762521,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1594669927
    },
    {
        "content": "<p>FWIW, our implementation maps fhir types to fhirpath types according to the following table:</p>\n<div class=\"codehilite\"><pre><span></span><code>  &quot;boolean&quot; =&gt; boolean\n  &quot;string&quot; | &quot;code&quot; | &quot;markdown&quot; | &quot;id&quot; | &quot;uri&quot; | &quot;canonical&quot; | &quot;oid&quot; | &quot;uuid&quot; =&gt; string\n  &quot;integer&quot; | &quot;unsignedInt&quot; | &quot;positiveInt&quot; =&gt; integer\n  &quot;decimal&quot; =&gt; decimal \n  &quot;date&quot; | &quot;dateTime&quot; =&gt; dateTime\n  &quot;time&quot; =&gt; time\n</code></pre></div>\n\n\n<p>Though there are a couple places we do this and they might not be totally consistent.</p>",
        "id": 203767430,
        "sender_full_name": "Justin Pombrio",
        "timestamp": 1594672490
    },
    {
        "content": "<p>that table looks correct compared to the table in the spec</p>",
        "id": 203769019,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1594673247
    },
    {
        "content": "<p>The conversation table can be found here: <a href=\"https://www.hl7.org/fhir/fhirpath.html#types\">https://www.hl7.org/fhir/fhirpath.html#types</a></p>",
        "id": 211270687,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1601046634
    },
    {
        "content": "<p>So, question...  I see the page with that table is Normative - how do additions get handled?  e.g., in R5 there's a new <a href=\"http://build.fhir.org/datatypes.html#integer64\">integer64</a> datatype, which should probably have a mapping.</p>",
        "id": 211271445,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1601046970
    },
    {
        "content": "<p>well, needs to be a task, and then we agree to add it, and it gets added. not quite sure what you are asking</p>",
        "id": 211272179,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1601047301
    },
    {
        "content": "<p>Didn't know if it was the standard 'open a Jira', it was 'covered' by adding the datatype, or anything else.</p>",
        "id": 211272467,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1601047405
    },
    {
        "content": "<p>open a jira. it will be straight forward because it's not really a big decision, it's something I missed, but still needs approval by committee</p>",
        "id": 211272634,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1601047490
    },
    {
        "content": "<p>Yep, opening two.. one for the page there (FHIR-I) and one for FHIRpath itself, since it specifies integer as 32-bit and doesn't have a 64-bit one.</p>",
        "id": 211273265,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1601047736
    },
    {
        "content": "<p>Created <a href=\"http://jira.hl7.org/browse/FHIR-28615\">FHIR#28615</a> for FHIRPath (though forgot to set workgroup to ITS - it doesn't appear to allow adding that later) and <a href=\"http://jira.hl7.org/browse/FHIR-28616\">FHIR#28616</a> for FHIR-I FHIRPath info (with a note that it likely depends on resolution of 28615, since there needs to be a name for the FHIRPath type).</p>",
        "id": 211275005,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1601048499
    }
]