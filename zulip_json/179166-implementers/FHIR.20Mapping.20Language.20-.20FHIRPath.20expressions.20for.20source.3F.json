[
    {
        "content": "<p>During the FHIR SDC Connectathon track I tried to extract information from a QuestionnaireResponses to a Patient. QuestonnaireResponse has the answerValues in different (potential) nested items which can be referenced by linkId as one approach. </p>\n<p>To create one HumanName datatype with family and given of the patient I constructed a rule that two source variables are created and the target is the HumanName (otherwise I get two HumanName elements):</p>\n<div class=\"codehilite\"><pre><span></span>group item(source src, target tgt: Patient) {\n  src.item as itemFirstName where linkId.value in (&#39;patient.firstname&#39;),\n  src.item as itemLastName where linkId.value in (&#39;patient.lastname&#39;) -&gt; tgt.name = create(&#39;HumanName&#39;) as hn then setName(itemFirstName, itemLastName, hn) &quot;Setting Names&quot;;\n}\n</pre></div>\n\n\n<p>To execute the rules I grouped over the items</p>\n<div class=\"codehilite\"><pre><span></span>group QuestionnaireResponse(source src : QuestionnaireResponse, target tgt : Patient) {\n  src.item as item -&gt; tgt as patient then item(item, patient);\n}\n</pre></div>\n\n\n<p>However this approach works only when all items are on the same level, if the answers are in different nested item levels this does not work. The only solution I came up with is to introduce a FHIRPath rule on the source element like this (not specified in the <a href=\"https://www.hl7.org/fhir/mapping-language.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/mapping-language.html\">FHIR Mapping language</a>):</p>\n<div class=\"codehilite\"><pre><span></span>group QuestionnaireResponse(source src : QuestionnaireResponse, target tgt : Patient) {\n  (src.descendants().select(item.where(linkId.value in (&#39;patient.firstname&#39;)))) as itemFirstName,\n  (src.descendants().select(item.where(linkId.value in (&#39;patient.lastname&#39;)))) as itemLastName -&gt; tgt.name = create(&#39;HumanName&#39;) as hn then setName(itemFirstName, itemLastName, hn) &quot;Setting Names&quot;;\n}\n</pre></div>\n\n\n<ul>\n<li>is there a more elegant approach to map nested QuestionaireResponse items to FHIR resources?</li>\n<li>would introducing of a FHIRPath expression in the FHIR Mapping language conflict with the general FHIR Mapping language approach?</li>\n</ul>\n<p>any feedback, samples more than welcome, will show up at 6pm ...<br>\n<a href=\"/user_uploads/10155/W9sByRm5hONXNFyT3duW8bOs/qr2pat9.map\" target=\"_blank\" title=\"qr2pat9.map\">qr2pat9.map</a> <a href=\"/user_uploads/10155/H34qkkduIgocuvKGZFvUIi1B/qr.json\" target=\"_blank\" title=\"qr.json\">qr.json</a></p>",
        "id": 155293387,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1547677127
    },
    {
        "content": "<p>this is what we'll discuss at 6pm tonight</p>",
        "id": 155294803,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1547678360
    },
    {
        "content": "<p>here is what I think the map is:</p>",
        "id": 155300139,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1547684392
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>map &quot;http://ahdis.ch/fhir/mappingtutorial/qr2pat9&quot; = &quot;mapping tutorial questionnairetopat&quot;\n\nuses &quot;http://hl7.org/fhir/StructureDefinition/QuestionnaireResponse&quot; alias QuestionnaireResponse as source\nuses &quot;http://hl7.org/fhir/StructureDefinition/Patient&quot; alias Patient as target\n\ngroup entry(source src : QuestionnaireResponse, target tgt : Patient) {\n  src.item as i then qri1(i, tgt);\n}\n\ngroup gri1(source src, target tgt) {\n  src.item as i then qrgg1(i, tgt);\n  src.item as ln where item.linkId = &#39;patient.lastname&#39; -&gt; tgt.name as t share then familyName(ln, t);\n  src.item as ln where item.linkId = &#39;patient.firstname&#39; -&gt; tgt.name as t share then firstName(ln, t);\n}\n\ngroup familyName(source src, target tgt) {\n  src.answer as a familyName2(a, tgt);\n}\n\ngroup familyName2(source src, target tgt) {\n  src.valueString -&gt; tgt.family;\n}\n\ngroup firstName(source src, target tgt) {\n  src.answer as a then firstName2(a, tgt);\n}\n\ngroup firstName2(source src, target tgt) {\n  src.valueString -&gt; tgt.given;\n}\n</pre></div>",
        "id": 155300142,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1547684399
    }
]