[
    {
        "content": "<p>Maybe I am not correctly interpreting the FHIR discriminators documentation but I would have expected that one could use the value of another element within the resource as a discriminator. I would think that would be an easy way for implementers to support discriminators in profile compliance testing. For example, say I have a set of value[x] slices for different types of measurements. Now an ideal discriminator would be the Observation.identifier.type.code which would be required to have a certain value. Is there a way to do that? I thought that might be the FHIRPATH aspect of the discriminator but I don't see how that comes in using Forge.</p>",
        "id": 153882057,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1491999497
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"192228\">@Brian Reinhold</span> yes, this is a very common use case and fortunately FHIR allows you to define this. In STU3, specify discriminator.type = \"value\" and discriminator.path = \"type.code\" (relative path to child element). In other words, recognize slices by inspecting the value of that child element.</p>",
        "id": 153882060,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1491999771
    },
    {
        "content": "<p>Michel,<br>\nThat's not quite what I meant. I was thinking of using a field in another element (Not the one I am slicing) as the discriminator.</p>",
        "id": 153884519,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1492022213
    },
    {
        "content": "<p>Sound like an invariant</p>",
        "id": 153884535,
        "sender_full_name": "Eric Haas",
        "timestamp": 1492026663
    },
    {
        "content": "<p>Indeed, you can specify a FHIR path constraint that controls several elements. You can check the (STU3) core profiles for examples of FHIR path expressions.</p>",
        "id": 153884611,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1492074959
    },
    {
        "content": "<p>I have been looking at a profile on the Patient resource, created using Forge. A number of extensions are declared with specific types, so slicing has been set up. The slicing discriminator is \"url\". There are no Patient.extension.url elements, but there is a url present in at element/type/profile/@value. This appears to be the only URL information related to these extensions.</p>\n<p>Is this correct? And if so, are there any other special cases like this to be aware of?</p>\n<p>Sorry if this is an obvious question, I'm still getting my teeth into FHIR profiles!</p>",
        "id": 153885153,
        "sender_full_name": "Jonathan Mew",
        "timestamp": 1492617094
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"193478\">@Jonathan Mew</span> this is correct. A profile references an external extension definition by constraining the element type profile to the canonical uri of the extension definition. The extension.url element is (only) used in Extension definitions.</p>",
        "id": 153885155,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1492617813
    },
    {
        "content": "<p>Many thanks <span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span>, that resolves my query.</p>",
        "id": 153885284,
        "sender_full_name": "Jonathan Mew",
        "timestamp": 1492703228
    }
]