[
    {
        "content": "<p>I'm trying to understand the application of :not in the presence of different cardinalities for values.<br>\nGiven a resource with a SNOMED and ICD-10 code of <em>SOMESNOMEDCODE</em> and <em>SOMEICD10CODE</em><br>\nDoes Condition?code:not=<em>SOMESNOMEDCODE</em> match that resources because it has a code that doesn't match <em>SOMESNOMEDCODE</em> (specifically <em>SOMEICD10CODE</em>).</p>\n<p>Taking this a step further.  If I have two security flags on a Condition resource, call them <em>SFLAG1</em> and <em>SFLAG2</em><br>\ndoes Condition?_security:not=<em>SFLAG1</em> match that resource because it has <em>SFLAG2</em> which is NOT <em>SFLAG1</em>?</p>\n<p>Or does Resource?<em>searchkey</em>:not=<em>SOMEVALUE</em> for resource X mean that Resource X has NO <em>searchkey</em> value that matches <em>SOMEVALUE</em>?</p>\n<p>I THINK this has been SOMEWHAT clarified in STU4 current code in this text:<br>\n GET [base]/Composition?section:not=48765-2<br>\nSearch for any Composition that does not contain an Allergies and adverse reaction section. Note that this search does not return \"any document that has a section that is not an Allergies and adverse reaction section\" (e.g. in the presence of multiple possible matches, <em>the negation applies to the set, not each individual entry</em>)</p>\n<p>But I am not entirely certain, since this text is new and not entirely clear.</p>\n<p>Is there any variation of interpretation different in STU2, 3 and 4 intended?  In implementations?</p>",
        "id": 153950001,
        "sender_full_name": "Keith Boone",
        "timestamp": 1522709014
    },
    {
        "content": "<p>we clarified this in R4 - it was not clarifed until then and different implementations did different things</p>",
        "id": 153950003,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522709240
    },
    {
        "content": "<p>what is not clear about the R4 documentation?</p>",
        "id": 153950004,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522709253
    },
    {
        "content": "<p>Well, first of off, it went to the deep case of Composition.section.code, instead of the simpler case of _tag, _security or other cases where there could be multiple codings (not using CodeableConcept) or identifiers, and so it took interpretation to work back to the simpler case.  Also, Composition.section is confusing since it (as a search term) refers to Composition.section.code, and as a resource field, to a BackboneElement (both with Cardinality &gt; 1), so it took some thinking to understand what was meant.  I think that code:not=foo means HAS NO CODE with the value of foo, rather than has at least one code that does not have the value of foo, and that's what I eventually got out of the R4 documentation, but like I said, it was a bit of a struggle because of cognitive dissonance present in the example.  A simpler example preceding the more complex one would help, but you can save that for responding to my ballot comments.</p>",
        "id": 153950009,
        "sender_full_name": "Keith Boone",
        "timestamp": 1522709568
    },
    {
        "content": "<p>sure. please ballot about that</p>",
        "id": 153950010,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522709652
    },
    {
        "content": "<p>anyway, the interpretation is clear now, yes?</p>",
        "id": 153950011,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522709673
    },
    {
        "content": "<p>If you can tell me that my thinking agrees with yours, then it does, but not until you say that ;-)</p>",
        "id": 153950012,
        "sender_full_name": "Keith Boone",
        "timestamp": 1522709705
    },
    {
        "content": "<p>using your example: Condition?_security:not=SFLAG1 does not match that resource because it has SFLAG1?</p>",
        "id": 153950013,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522709790
    },
    {
        "content": "<p>and \"Resource?searchkey:not=SOMEVALUE for resource X mean that Resource X has NO searchkey value that matches SOMEVALUE?\" - yes</p>",
        "id": 153950014,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522709812
    },
    {
        "content": "<p>Thank you.  I now understand.  Blog posting coming on this one.  I like that this is being clarified.  Information I was finding in implementations wasn't helping.</p>",
        "id": 153950017,
        "sender_full_name": "Keith Boone",
        "timestamp": 1522709906
    },
    {
        "content": "<p>no. probably none have been updated for the clarification yet</p>",
        "id": 153950019,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522710512
    },
    {
        "content": "<p>Opportunity for test tools <span class=\"user-mention\" data-user-id=\"191370\">@Richard Ettema</span> ???</p>",
        "id": 153950220,
        "sender_full_name": "John Moehrke",
        "timestamp": 1522768933
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> Always looking for opportunities <span class=\"emoji emoji-1f609\" title=\"wink\">:wink:</span>  Just need well defined positive and negative scenarios and the test data with enough variance to support them.</p>",
        "id": 153950367,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1522796172
    },
    {
        "content": "<p>good test scenarios with details can be found on the various FHIR blogs... Keith especially <a href=\"http://motorcycleguy.blogspot.com/\" target=\"_blank\" title=\"http://motorcycleguy.blogspot.com/\">http://motorcycleguy.blogspot.com/</a></p>",
        "id": 153950582,
        "sender_full_name": "John Moehrke",
        "timestamp": 1522846216
    }
]