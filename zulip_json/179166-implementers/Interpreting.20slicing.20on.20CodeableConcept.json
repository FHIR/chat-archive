[
    {
        "content": "<p>Looking at <a href=\"http://build.fhir.org/ig/HL7/fhir-ips/StructureDefinition-Immunization-uv-ips.html\">http://build.fhir.org/ig/HL7/fhir-ips/StructureDefinition-Immunization-uv-ips.html</a>, I had previously interpreted the slicing on vaccineCode to mean \"there must be a single vaccineCode, with at most one value from Vaccines (GPS), at most one from ATC, and at most one from Absent/unknown, and any number of other codes\" Thinking about it more carefully though, I'm understanding it as  \"there must be a single vaccineCode, with at most one value from (GPS, ATC, or absent/unknown) , and any number of other codes.\" The difference between the two interpretations is that one allows for, e.g., both ATC and GPS values, while the other doesn't. Is my current interpretation correct?</p>",
        "id": 270446812,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1643831400
    },
    {
        "content": "<p>I'm not sure the UML says this, but the intent would seem to be, there SHALL be 1 .vaccineCode<br>\n.vaccineCode.coding[] can contain up to 1 of value set X, up to 1 of value set Y, up to 1 of data absent + any other vaccine value sets.</p>",
        "id": 270448099,
        "sender_full_name": "Daniel Venton",
        "timestamp": 1643831925
    },
    {
        "content": "<p>I think your first interpretation is correct, there will be exactly one instance of Immunization.vaccineCode</p>\n<p>Reading the XML<br>\nImmunization.vaccineCode - 1..1<br>\nImmunization.vaccineCode:vaccineGPSCode - 0..1<br>\nImmunization.vaccineCode:atcClass - 0..1<br>\nImmunization.vaccineCode:absentOrUnknownImmunization - 0..1<br>\nAnd the slicing is open so other values are allowed</p>",
        "id": 270482694,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1643848906
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191682\">Richard Townley-O'Neill</span> <a href=\"#narrow/stream/179166-implementers/topic/Interpreting.20slicing.20on.20CodeableConcept/near/270482694\">said</a>:</p>\n<blockquote>\n<p>I think your first interpretation is correct, there will be exactly one instance of Immunization.vaccineCode</p>\n<p>Reading the XML<br>\nImmunization.vaccineCode - 1..1<br>\nImmunization.vaccineCode:vaccineGPSCode - 0..1<br>\nImmunization.vaccineCode:atcClass - 0..1<br>\nImmunization.vaccineCode:absentOrUnknownImmunization - 0..1<br>\nAnd the slicing is open so other values are allowed</p>\n</blockquote>\n<p>One vaccineCode, agree. But multiple vaccineCode.coding, at most one of which could be GPS, at most one of which could be ATC and at most one of which could be Absent/Unknown.<br>\nOr one vaccineCode, multiple vaccineCode.coding, at most one of which could be (GPS,  ATC or Absent/Unknown)?</p>",
        "id": 270494246,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1643857349
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191380\">Elliot Silver</span> <a href=\"#narrow/stream/179166-implementers/topic/Interpreting.20slicing.20on.20CodeableConcept/near/270494246\">said</a>:</p>\n<blockquote>\n<p>One vaccineCode, agree. But multiple vaccineCode.coding, at most one of which could be GPS, at most one of which could be ATC and at most one of which could be Absent/Unknown.</p>\n</blockquote>\n<p>oops! I agree with your new interpretation.<br>\nTranslations are allowed.<br>\nAlso, if Immunization.vaccineCode has codings that match more than one slice there will be a slicing error.</p>",
        "id": 270499622,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1643862857
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191682\">Richard Townley-O'Neill</span> <a href=\"#narrow/stream/179166-implementers/topic/Interpreting.20slicing.20on.20CodeableConcept/near/270499622\">said</a>:</p>\n<blockquote>\n<p>Also, if Immunization.vaccineCode has codings that match more than one slice there will be a slicing error.</p>\n</blockquote>\n<p>That's what I'm getting at -- I can't say that the vaccineCode is X under GPS and Y under ATC. I'm only allowed to match a single slice. But I can say vaccineCode is X under GPS and Z under MyLocaleCodeSystem.</p>",
        "id": 270500169,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1643863480
    },
    {
        "content": "<p>To be able to say  the vaccineCode is X under GPS and Y under ATC, I need to slice at the coding level, not at the CodableConcept.</p>",
        "id": 270500194,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1643863537
    },
    {
        "content": "<p>I missed that, slicing a non-repeating element with only a single data type is sus. <br>\nSlicing is designed for things that repeat.<br>\nThe slicing should be on the Coding.</p>",
        "id": 270503880,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1643867269
    },
    {
        "content": "<p>Right, but that's a pattern I'm seeing, due, I think to others having my original interpretation of the situation.</p>",
        "id": 270505026,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1643868452
    },
    {
        "content": "<p>Test examples are created too late.</p>",
        "id": 270505115,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1643868554
    }
]