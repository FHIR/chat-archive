[
    {
        "content": "<p>Hi, I am looking into leveraging the message header and am confused by the message event codeset as it appears that it is meant to be a comprehensive list of values (<a href=\"https://www.hl7.org/fhir/valueset-message-events.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/valueset-message-events.html\">https://www.hl7.org/fhir/valueset-message-events.html</a>) but I thought any type of resource could be sent through the messaging interface and this list doesn't seem to have an appropriate option for the types of data messages we are exchanging (essentially ADT encounters). I'm also noticing a trend that often the codesets don't seem to have a comprehensive list of allowable values. Am I just misinterpreting this? Insight would be appreciated. </p>",
        "id": 153890454,
        "sender_full_name": "Joanna Gaskill",
        "timestamp": 1495135917
    },
    {
        "content": "<p>have you read about the binding strength? </p>",
        "id": 153890472,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1495138016
    },
    {
        "content": "<p>with regard to messaging specifically, there has not been strong interest from the community in clarifying the use of messaging, so the message event list remains under investigated</p>",
        "id": 153890473,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1495138052
    },
    {
        "content": "<p>there is some use of messaging, but typically not for ADT - most of that will continue to be v2 within the forseeable future. As Grahame points out the list was never intended to be exhaustive (you can easily define your own codes), it would however be good to add some of the more common ADT events. We do appreciate your suggestions.</p>",
        "id": 153890499,
        "sender_full_name": "René Spronk",
        "timestamp": 1495178132
    },
    {
        "content": "<p>it's not clear whether the ADT events are relevant given that the resources are rich in status information. if they are useful - and why? - then what should the rules be between event and status?</p>",
        "id": 153890507,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1495187178
    },
    {
        "content": "<p>status history does allow one to detect status changes.. state changes have traditionally been the trigger events, but not necessarily so if the state change is well identified as part of the payload (compare to ORC-1 in v2). Merge, Link etc. will be some of the exceptions.</p>",
        "id": 153890514,
        "sender_full_name": "René Spronk",
        "timestamp": 1495196203
    },
    {
        "content": "<p>so you'll see that we have events for link etc. </p>",
        "id": 153890541,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1495214902
    },
    {
        "content": "<p>In messaging we'll have a bit of an issues, systems are by definition 'loosely coupled' (one can't expect the receiver to be aware of the prior status of a focal resource) and 'status history' (which has cardinality 0..*, an element which only some of the administrative resources have).<br>\nPatient has no status history, so in order to be aware of the state change we'll need a full list of trigger events. For Enounter, it has 0..* statusHistory, so we can't always be sure that it'll be present. This'll need more analysis, but to me it seems we'll again end up with a fairly long list.</p>",
        "id": 153890619,
        "sender_full_name": "René Spronk",
        "timestamp": 1495300272
    },
    {
        "content": "<p>why do you need to know what the status changed from?</p>",
        "id": 153890627,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1495309142
    },
    {
        "content": "<p>Current trigger events in v2 and v3 always identify the state change, not just the resulting status. An encounter which transitions from planned-to-in_progress (v2: A01/A04) requires different processing than an encounter that transitions from finished-to-in_progress (v2: A11). <br>\nThe situation is eased in FHIR in that we have a focal resource, as such \"state change notification: from active to non-active\" would apply to Patient and lots of other v3-role like resources, just as \"state change notification: from planned to in-progess\" would not just apply to Encounters but to other v3-act-like resources as well. So at least in FHIR we don't have to pre-coordinate the focal resource type into the trigger event code.</p>\n<p>In my mind the trigger event is an identifier for a) the state change [in notifications], b) the receiver responsabilities (how to respond) [in orders] c) other behavioral expectations [the operation in FHIR speak] (e.g. process, store, do something, merge, link, ..)</p>",
        "id": 153890651,
        "sender_full_name": "René Spronk",
        "timestamp": 1495349047
    }
]