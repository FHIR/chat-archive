[
    {
        "content": "<p>There are a lot of requests for <strong>created_at</strong> timestamp for resources. <br>\nWe created an extension in meta, but probably it worth to add it to the core?<br>\nOr at least have an official extension!</p>",
        "id": 176373703,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1569249120
    },
    {
        "content": "<p>Care to submit a change request <span class=\"user-mention\" data-user-id=\"191318\">@nicola (RIO/SS)</span> ?</p>",
        "id": 176380631,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1569253334
    },
    {
        "content": "<p>Yes - sure. Have you migrated to jira?</p>",
        "id": 176380714,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1569253397
    },
    {
        "content": "<p>Confirmed timeline is October, so this will give you one more chance to experience to joys of gForge before it goes away... :)</p>",
        "id": 176380814,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1569253450
    },
    {
        "content": "<p>I hope - I've created an issue. I was redirected without confirmation after submit.</p>",
        "id": 176381572,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1569253999
    },
    {
        "content": "<p>you have created <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=24851\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=24851\">GF#24851</a><br>\n(in case you were wondering whether it was created or not)</p>",
        "id": 176382392,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1569254536
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191318\">@nicola (RIO/SS)</span> you need to add more than 'there is a lot of value'. Perhaps you can ask the people asking you to explain the value the see</p>",
        "id": 176391185,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1569260475
    },
    {
        "content": "<p>it's a good dba practice to have created-at and updated-at columns. There are many scenarios when you need this information.</p>",
        "id": 176391473,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1569260690
    },
    {
        "content": "<p>then you should explain some of them</p>",
        "id": 176391505,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1569260710
    },
    {
        "content": "<p>because we always had 'added at' in our database, and I never saw any point</p>",
        "id": 176391527,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1569260731
    },
    {
        "content": "<p>one practice is query data in specific point  in time, you just filter out rows with created later than time of your interest</p>",
        "id": 176392085,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1569261078
    },
    {
        "content": "<p>if you never delete data - it gives you time machine  / continuous versioning</p>",
        "id": 176392197,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1569261125
    },
    {
        "content": "<p>I think that's rather more complicated than that, unless you're running with an insert only database, or a versioned database, in which case created-at doesn't matter</p>",
        "id": 176392237,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1569261152
    },
    {
        "content": "<p>Is the intent to have time stamp or location because “created at “ sound like place to me?</p>",
        "id": 176392962,
        "sender_full_name": "Eric Haas",
        "timestamp": 1569261614
    },
    {
        "content": "<p>yes it's an instant in time</p>",
        "id": 176393596,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1569262041
    },
    {
        "content": "<p><a href=\"https://www.google.com/url?sa=t&amp;source=web&amp;rct=j&amp;url=https://wiki.postgresql.org/images/6/64/Fosdem20150130PostgresqlTemporal.pdf&amp;ved=2ahUKEwjrvLLMxefkAhVh5KYKHVfUCzMQFjACegQIBhAG&amp;usg=AOvVaw0rmRp6-oBl7YXg4NQDfpUZ\" target=\"_blank\" title=\"https://www.google.com/url?sa=t&amp;source=web&amp;rct=j&amp;url=https://wiki.postgresql.org/images/6/64/Fosdem20150130PostgresqlTemporal.pdf&amp;ved=2ahUKEwjrvLLMxefkAhVh5KYKHVfUCzMQFjACegQIBhAG&amp;usg=AOvVaw0rmRp6-oBl7YXg4NQDfpUZ\">https://www.google.com/url?sa=t&amp;source=web&amp;rct=j&amp;url=https://wiki.postgresql.org/images/6/64/Fosdem20150130PostgresqlTemporal.pdf&amp;ved=2ahUKEwjrvLLMxefkAhVh5KYKHVfUCzMQFjACegQIBhAG&amp;usg=AOvVaw0rmRp6-oBl7YXg4NQDfpUZ</a></p>",
        "id": 176394146,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1569262385
    },
    {
        "content": "<p>\"createdOn\"?</p>",
        "id": 176394179,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1569262422
    },
    {
        "content": "<p>yes we need deleted-at to do this</p>",
        "id": 176394185,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1569262426
    },
    {
        "content": "<p><a href=\"https://guides.rubyonrails.org/active_record_migrations.html\" target=\"_blank\" title=\"https://guides.rubyonrails.org/active_record_migrations.html\">https://guides.rubyonrails.org/active_record_migrations.html</a></p>",
        "id": 176394350,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1569262562
    },
    {
        "content": "<p>I don't understand this at all. if you're going to recreate 'data as at an instant in time' you need all the history records. created_at will allow you to remove records that didn't yet exist, but you don't know what was current for the records that already existed.</p>",
        "id": 176395374,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1569263274
    },
    {
        "content": "<p>Yes, we can join the history table for that.  In some cases - like terminology tables - you probably can use only one table - if semantic of concepts is never changing.</p>",
        "id": 176395615,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1569263414
    },
    {
        "content": "<p>It is useful for low-level monitoring and analytic - how many patients were added this month?</p>",
        "id": 176395781,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1569263540
    },
    {
        "content": "<p>It plays well with the source element - where from and when?</p>",
        "id": 176396028,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1569263737
    },
    {
        "content": "<p>I saw many use cases for creation ts  in operational tasks - migrations, integrations, bulk imports, bulk re-imports etc</p>",
        "id": 176396711,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1569264122
    },
    {
        "content": "<p>Did you really never look at your \"added at\" column?</p>",
        "id": 176397130,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1569264422
    },
    {
        "content": "<p>me- I don't remember doing that. Anytime I was interested, I looked at the history table</p>",
        "id": 176397734,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1569264847
    },
    {
        "content": "<p>same here.  we have a create_timestamp and an update_timestamp.  the create_timestamp gets used for ordering records and determining cutoff for date limits.  the update_timestamp just takes up bytes in the database</p>",
        "id": 176397975,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1569265018
    },
    {
        "content": "<p>I think that's the 'opposite' not the 'same'?</p>",
        "id": 176398033,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1569265081
    },
    {
        "content": "<p>i was saying \"same\" as in \"we never looked at our added at column\"  we used create_timestamp for some things but if we really needed history (allergies and dispenses), we have a separate history table for those</p>",
        "id": 176398155,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1569265155
    },
    {
        "content": "<p>Yes, the history table can give you this information and more. So createdAt is just a hint.</p>",
        "id": 176398196,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1569265194
    }
]