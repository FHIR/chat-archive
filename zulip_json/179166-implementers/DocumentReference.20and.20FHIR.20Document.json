[
    {
        "content": "<p>Hi. We just thought about mapping several documents to FHIR resources. We found two possible ways: Document according to <a href=\"https://www.hl7.org/fhir/documents.html\">https://www.hl7.org/fhir/documents.html</a> or to use a DocumentReference. We plan to do NLP with these<br>\ndocuments and hence, we will derive Observations from them. Unfortunately, derivedFrom in Oberservations can only be linked to DocumentReference which cannot contain a FHIR Document as reference. We wonder if there is a different way to model that?</p>",
        "id": 258383980,
        "sender_full_name": "Raphael Scheible",
        "timestamp": 1634742274
    },
    {
        "content": "<p>DocumentReference contains (or reference - depending on the point of view) arbitrary binary data, so it can contain anything - including a FHIR Document</p>",
        "id": 258385711,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1634742868
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191912\">Michele Mottini</span> <a href=\"#narrow/stream/179166-implementers/topic/DocumentReference.20and.20FHIR.20Document/near/258385711\">said</a>:</p>\n<blockquote>\n<p>DocumentReference contains (or reference - depending on the point of view) arbitrary binary data, so it can contain anything - including a FHIR Document</p>\n</blockquote>\n<p>Do you mean to pack a FHIR Document JSON into a base64 and into the DocumentReference? If so, I think this would not really unleash the power and benefit of FHIR, as the Document endoints for the specific Document instance would not be existent.</p>",
        "id": 258393855,
        "sender_full_name": "Raphael Scheible",
        "timestamp": 1634745603
    },
    {
        "content": "<p>Yes, that's what I mean. There is no Document end point (?)</p>",
        "id": 258395334,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1634746098
    },
    {
        "content": "<p>Oh yes, I meant these endpoints: <a href=\"https://www.hl7.org/fhir/documents.html#bundle\">https://www.hl7.org/fhir/documents.html#bundle</a></p>",
        "id": 258395900,
        "sender_full_name": "Raphael Scheible",
        "timestamp": 1634746297
    },
    {
        "content": "<p>You can use <code>DocumentReference.content.attachment.url</code> to point to your FHIR document Bundle.<br>\nBut I don't quite understand your process.</p>\n<blockquote>\n<p>mapping several documents to FHIR resources</p>\n</blockquote>\n<p>Does that mean you already have the documents but just not in FHIR format? If so, you can attach the document to DocumentReference directly.</p>",
        "id": 258400030,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1634747866
    },
    {
        "content": "<p>The documents are text blobs. They can have headings and subheadings, which I did not see to model solely with a DocumentReference. Thus, I was looking for the FHIR Document, which as far as I understood, can model such a nested structure. I understood the DocumentReference in such a way, that the url is intended to point directly to the content rather than a content structure. To me such a method would feel a bit hacky. We miss the possibility  to reference a FHIR Document within a DocumentReference as provided in other FHIR structures. Also, given the name DocumentReference, one could expect exactly that capability ;)</p>",
        "id": 258400883,
        "sender_full_name": "Raphael Scheible",
        "timestamp": 1634748138
    },
    {
        "content": "<p>as <span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span> mentioned<br>\nDocumentReference.content.attachment.url --&gt; Composition</p>",
        "id": 258442916,
        "sender_full_name": "John Moehrke",
        "timestamp": 1634763411
    },
    {
        "content": "<p>You could have:<br>\nDocumentReference.content.attachment.url --&gt; Composition (as mentioned above. If a server supports it, you could use $document operation to gather the document)<br>\nDocumentReference.content.attachment.url --&gt; Bundle[type=document] (That contains all of the resource you want in it with the Composition resource first)<br>\nDocumentReference.content.attachment.url --&gt;  Binary (with encoded data being any number of formats including a Bundle[type=document]<br>\n<a href=\"http://DocumentReference.content.attachment.data\">DocumentReference.content.attachment.data</a> (encoded with a Bundle[type=document] or anything else you would want to include</p>\n<p>There are other potential options, but if you are talking about native FHIR documents, these are the ones that stick out to me.</p>",
        "id": 258477173,
        "sender_full_name": "Corey Spears",
        "timestamp": 1634782983
    }
]