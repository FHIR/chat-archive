[
    {
        "content": "<p>I mentioned this in a FHIR-I meeting today and several folks expressed interest in this. So, posting this for whomever is interested. :-)</p>\n<p>Here are the materials for the talk I saw from Orange Tsai at the DefCon security conference last July 2017. In his talk, Orange Tsai illustrated just how broken URL parsers are in <em>every</em> major language and library. One of the root problems is the complexity of the URL RFC(s!) and how the RFCs have ambiguity resulting in implementation differences/gaps.</p>\n<p>Slides:<br>\n<a href=\"https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf\" target=\"_blank\" title=\"https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf\">https://www.blackhat.com/docs/us-17/thursday/us-17-Tsai-A-New-Era-Of-SSRF-Exploiting-URL-Parser-In-Trending-Programming-Languages.pdf</a></p>\n<p>Blog post where he talks about chaining several URL parsing vulnerabilities to smuggle a remote code exploit to root a <a href=\"http://Github.com\" target=\"_blank\" title=\"http://Github.com\">Github.com</a> backend server:<br>\n<a href=\"http://blog.orange.tw/2017/07/how-i-chained-4-vulnerabilities-on.html\" target=\"_blank\" title=\"http://blog.orange.tw/2017/07/how-i-chained-4-vulnerabilities-on.html\">http://blog.orange.tw/2017/07/how-i-chained-4-vulnerabilities-on.html</a></p>\n<p>Video of Orange Tsai's talk (including video of his exploit):<br>\n<a href=\"https://www.youtube.com/watch?v=D1S-G8rJrEk\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=D1S-G8rJrEk\">https://www.youtube.com/watch?v=D1S-G8rJrEk</a></p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"D1S-G8rJrEk\" href=\"https://www.youtube.com/watch?v=D1S-G8rJrEk\" target=\"_blank\" title=\"https://www.youtube.com/watch?v=D1S-G8rJrEk\"><img src=\"https://i.ytimg.com/vi/D1S-G8rJrEk/default.jpg\"></a></div>",
        "id": 153934281,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1517420334
    },
    {
        "content": "<p>We have added specific security considerations to the FHIR spec before... (xml inclusion of script)... should this be similarly pointed to? If so, how would you describe it? I ask you for that description as you best represent our FHIR 'reader', so you might be best able to describe it... Security wg would clearly fix your wording if it isn't good.</p>",
        "id": 153934323,
        "sender_full_name": "John Moehrke",
        "timestamp": 1517422100
    },
    {
        "content": "<p>Very interesting, thank you for sharing this Kevin!</p>",
        "id": 153934328,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1517422350
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> - While we could post a note about this, I feel the same could be said with lots of other vulnerability categories. Are you thinking this one is an especially important/unique consideration to call out?</p>",
        "id": 153934332,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1517423024
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> you should make a task to add a note about this where we talk about XML. <span class=\"user-mention\" data-user-id=\"191355\">@Kevin Shekleton</span> what else should we note?</p>",
        "id": 153934333,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517423244
    },
    {
        "content": "<p>Presumably we should ensure that all of the reference servers address this</p>",
        "id": 153934339,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1517425340
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> - The tricky part is that one of the messages of Orange Tsai's work is that the standard, widely used URL parsers are broken in subtle ways...largely due to the inherent complexities in the possibilities in URLs. So, references servers really would be hard pressed to do anything as either a) they are using these potentially vulnerable libraries and b) writing your own URL parser will have the same bugs all of the other libraries have. <span class=\"emoji emoji-1f61d\" title=\"stuck out tongue\">:stuck_out_tongue:</span></p>\n<p>We are discussing in the FHIR-I/Sec mtg now about perhaps establishing a rubric or criteria for when a particular security topic or risk should be documented.</p>\n<p>Personally, I think we should only address security risks that are directly actionable by implementers or have specific or unique implications to FHIR. I feel like this particular issue is broader. But, I haven't been thinking too deeply about this.</p>",
        "id": 153934365,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1517430621
    },
    {
        "content": "<p>Is there a list of malcrafted url's that could help server builder to at least identify risks, and potentially try to mitigate?</p>",
        "id": 153934369,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1517431267
    },
    {
        "content": "<p><a href=\"https://www.lookout.net/test/url/\" target=\"_blank\" title=\"https://www.lookout.net/test/url/\">https://www.lookout.net/test/url/</a></p>",
        "id": 153934370,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517431329
    },
    {
        "content": "<p>Cool, thanks</p>",
        "id": 153934371,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1517431472
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191757\">@Christiaan Knaap</span> please take note</p>",
        "id": 153934372,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1517431494
    },
    {
        "content": "<p>I've been playing with turning the examples into unit tests.. but really, most of them are not flaws in URL parsing so much as URL processing - much more difficult to unit test</p>",
        "id": 153934684,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517505312
    },
    {
        "content": "<p>Good point. It is a bit of both</p>",
        "id": 153934704,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1517506636
    }
]