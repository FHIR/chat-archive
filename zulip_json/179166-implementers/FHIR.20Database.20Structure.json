[
    {
        "content": "<p>Hello,<br>\nI'm creating a FHIR server and I'm on the phase where i need to create a DB to store the received messages. My question is, is there any \"standard\" or guideline to create the DB structure or everyone can create its own? I saw examples where DB is a unique table where everything is stored and every search is under that same DB also. I'm worry that specially on search query the performance will not be the best since DB could grow a lot and there is a unique table for all resources. <br>\nCan some one please advise?<br>\nThank you</p>",
        "id": 153989560,
        "sender_full_name": "Alex Neiva",
        "timestamp": 1534778050
    },
    {
        "content": "<p>Have you looked at FHIR servers like HAPI?<br>\n<a href=\"http://hapifhir.io/doc_jpa.html\" target=\"_blank\" title=\"http://hapifhir.io/doc_jpa.html\">http://hapifhir.io/doc_jpa.html</a></p>\n<p>This might help give you a jumpstart.</p>",
        "id": 153989569,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1534782220
    },
    {
        "content": "<p>Yes i already have looked into that link but for what i need it not does help me a lot. I would like to know if we have the \"liberty\" to create our database structure like, for each resource we have one table or just one table for all resources for example.<br>\nThanks</p>",
        "id": 153989571,
        "sender_full_name": "Alex Neiva",
        "timestamp": 1534782528
    },
    {
        "content": "<p>There are no constraints or standards for the database structure - you can do whatever fits your needs</p>",
        "id": 153989609,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1534791289
    },
    {
        "content": "<p>Here is our track from prev connectathon - <a href=\"https://github.com/fhir-fuel/fhir-storage-and-analytics-track\" target=\"_blank\" title=\"https://github.com/fhir-fuel/fhir-storage-and-analytics-track\">https://github.com/fhir-fuel/fhir-storage-and-analytics-track</a></p>",
        "id": 153989612,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1534794397
    },
    {
        "content": "<p>As well  you can take a look at <a href=\"https://github.com/fhirbase\" target=\"_blank\" title=\"https://github.com/fhirbase\">https://github.com/fhirbase</a></p>",
        "id": 153989613,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1534794455
    },
    {
        "content": "<p>Here is new version fhirbase docs - which is under active development now - <a href=\"https://fhirbase.gitbook.io/project/\" target=\"_blank\" title=\"https://fhirbase.gitbook.io/project/\">https://fhirbase.gitbook.io/project/</a></p>",
        "id": 153989614,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1534794585
    },
    {
        "content": "<p>We have couple of streams for this <a href=\"#narrow/stream/73-analytics-on.20FHIR\" title=\"#narrow/stream/73-analytics-on.20FHIR\">https://chat.fhir.org/#narrow/stream/73-analytics-on.20FHIR</a> &amp; <a href=\"#narrow/stream/134-storage-for.20FHIR\" title=\"#narrow/stream/134-storage-for.20FHIR\">https://chat.fhir.org/#narrow/stream/134-storage-for.20FHIR</a></p>",
        "id": 153989615,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1534794631
    },
    {
        "content": "<p>If you are going to next connectathon - join us.</p>",
        "id": 153989616,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1534794689
    },
    {
        "content": "<p>Thank you very much. I will have a look.</p>",
        "id": 153989678,
        "sender_full_name": "Alex Neiva",
        "timestamp": 1534803236
    },
    {
        "content": "<p>A database with an Object Abstraction (Oracle Objects) is an interesting choice, because it is easy to convey elements of complex types, and a part-whole relationships native to FHIR</p>",
        "id": 153989738,
        "sender_full_name": "Malgorzata Schwab",
        "timestamp": 1534822845
    },
    {
        "content": "<p>Hi guys,</p>\n<p>Is there any resource could define Image Tag? It could be use to annotate the tumor site.</p>",
        "id": 153989762,
        "sender_full_name": "Clark",
        "timestamp": 1534834900
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/DhyiDsjdE2a7bBdsLkzRhjCr/Screen-Shot-2018-08-22-at-09.25.07.png\" target=\"_blank\" title=\"Screen-Shot-2018-08-22-at-09.25.07.png\">Screen-Shot-2018-08-22-at-09.25.07.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/DhyiDsjdE2a7bBdsLkzRhjCr/Screen-Shot-2018-08-22-at-09.25.07.png\" target=\"_blank\" title=\"Screen-Shot-2018-08-22-at-09.25.07.png\"><img src=\"/user_uploads/10155/DhyiDsjdE2a7bBdsLkzRhjCr/Screen-Shot-2018-08-22-at-09.25.07.png\"></a></div>",
        "id": 153990068,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1534926345
    },
    {
        "content": "<p><a href=\"https://github.com/nhsconnect/careconnect-reference-implementation\" target=\"_blank\" title=\"https://github.com/nhsconnect/careconnect-reference-implementation\">https://github.com/nhsconnect/careconnect-reference-implementation</a> </p>\n<p>This is the code behind the reference implementation for UK Care Connect API</p>",
        "id": 153990069,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1534926430
    },
    {
        "content": "<p><a href=\"https://nhsconnect.github.io/CareConnectAPI/\" target=\"_blank\" title=\"https://nhsconnect.github.io/CareConnectAPI/\">https://nhsconnect.github.io/CareConnectAPI/</a></p>",
        "id": 153990070,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1534926434
    },
    {
        "content": "<p>Screen shot is from Postgres like HAPI Reference Implementation it's usingJPA so database can be switched.</p>",
        "id": 153990071,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1534926516
    },
    {
        "content": "<p>Is it possible to test the FHIR server by querying with GET/POST or even PUT client side requests? I have a use case where an ECG observation resource has to be uploaded for a patient profile and later queried. Are there any APIs to enable this? There could be authorization required, is the server open in public domain to test their apps?</p>",
        "id": 153990103,
        "sender_full_name": "awalin",
        "timestamp": 1534931945
    },
    {
        "content": "<p>The public facing API doesn't support POST, the internal FHIR server does.  You can install your own FHIR server using these instructions: <a href=\"https://nhsconnect.github.io/CareConnectAPI/build_ri_install.html\" target=\"_blank\" title=\"https://nhsconnect.github.io/CareConnectAPI/build_ri_install.html\">https://nhsconnect.github.io/CareConnectAPI/build_ri_install.html</a></p>",
        "id": 153990175,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1534945544
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"196443\">@Clark</span> , can you expand on your use case? This may be already covered by Observation, by the BodySite extension, by a planned ImageReference extension, or it may be more appropriately handled by DICOM, not by FHIR.</p>",
        "id": 153990221,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1534964235
    },
    {
        "content": "<p>What is the best approach to store the FHIR resources? a NoSQL DataBase or a Relational DataBase? As mentioned we have the freedom to do whatever fit our needs. In my case i create DB that i store the FHIR message (xml/json)  and had some columns to be faster perform the search, like PID, ACCN, etc...</p>",
        "id": 153990776,
        "sender_full_name": "Alex Neiva",
        "timestamp": 1535125331
    },
    {
        "content": "<p>\"Best\" is entirely dependent on what you're wanting to do.  Different types of searches are easier with different persistence layers.   We have production systems using both approaches.</p>",
        "id": 153990787,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1535127777
    },
    {
        "content": "<blockquote>\n<p>What is the best approach to store the FHIR resources? a NoSQL DataBase or a Relational DataBase? As mentioned we have the freedom to do whatever fit our needs. In my case i create DB that i store the FHIR message (xml/json)  and had some columns to be faster perform the search, like PID, ACCN, etc...</p>\n</blockquote>\n<p>I use saving in a RDBMS... atleast that works with our current system in place. Also, newer version of SQlserver provides native support to query JSON objects.</p>",
        "id": 153990801,
        "sender_full_name": "Calvin",
        "timestamp": 1535131229
    },
    {
        "content": "<p>I'm using Postgres... already possible to store and query in JSON format.</p>",
        "id": 153990823,
        "sender_full_name": "Alex Neiva",
        "timestamp": 1535137202
    },
    {
        "content": "<p>And Postgres allows the ability to index on JSON properties:  <a href=\"https://blog.codeship.com/unleash-the-power-of-storing-json-in-postgres/\" target=\"_blank\" title=\"https://blog.codeship.com/unleash-the-power-of-storing-json-in-postgres/\">https://blog.codeship.com/unleash-the-power-of-storing-json-in-postgres/</a></p>",
        "id": 153990835,
        "sender_full_name": "John Silva",
        "timestamp": 1535140099
    },
    {
        "content": "<p>some discussion of this: <a href=\"http://www.healthintersections.com.au/?p=2776\" target=\"_blank\" title=\"http://www.healthintersections.com.au/?p=2776\">http://www.healthintersections.com.au/?p=2776</a>. In general, I'm inclined to think that the best practice is to store everything as resources, and with a set of relational tables storing the data you really care about in a form that suits your application. The degree to which you do that is variable. </p>\n<p>of course, this is highly determined by your context. So in principle best practice is often irrelvant</p>",
        "id": 153990917,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1535320937
    },
    {
        "content": "<p>Hi,<br>\nwe developed a generic data model:<br>\n<a href=\"/user_uploads/10155/bjbYSrYmkz96W_fNAFTyT-AV/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a> <br>\nIn \"Event\" all different Events such as Therapy, Diagnosis, Sampling Event and so on can be stored - just the basic data: Id, keys to other tables, start and end date. Details are stored in 1:1 linked tables.<br>\nSimilar \"Group\": a generic table for all different groups or contexts, such as biobank collection, study, case etc.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/bjbYSrYmkz96W_fNAFTyT-AV/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/bjbYSrYmkz96W_fNAFTyT-AV/pasted_image.png\"></a></div><p>We would like to be FHIR conform. <br>\nBut how to deal with these two generic tables??<br>\nWe use RDBMS (e.g. Postgres)</p>\n<p>Thanks a lot in advance<br>\nLars</p>",
        "id": 154021093,
        "sender_full_name": "Lars Ebert",
        "timestamp": 1543337662
    },
    {
        "content": "<p>You might be able to map some of this to Provenance or AuditEvent.  However, if you want to expose the data in a clinically useful way, you'll have to expose details in other resources - observations in Observation, procedures in Procedure, etc.</p>",
        "id": 154021096,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1543337834
    },
    {
        "content": "<p>Thanks a lot Lloyd!<br>\nWe just started with FHIR. Our first approach was, that a FHIR resource corresponds to a table.<br>\nIn this sense, our table \"Group\" corresponts to Provenance and our table \"Event\" corresponds to AuditEvent?</p>",
        "id": 154021324,
        "sender_full_name": "Lars Ebert",
        "timestamp": 1543417122
    },
    {
        "content": "<p>How do we use FHIR for sending continous data. Something like getting patients heartbeat every after 1 second. I was planning to use OVERSATION but it seem overkill.</p>",
        "id": 154023407,
        "sender_full_name": "Suresh Kumar Mukhiya",
        "timestamp": 1544090301
    },
    {
        "content": "<p>That is not a use-case that has been addressed by FHIR at this time. We are in early days of FHIR, so not all use-cases are addressed.</p>",
        "id": 154023545,
        "sender_full_name": "John Moehrke",
        "timestamp": 1544119274
    },
    {
        "content": "<p>You'd have to break up the continuous signal in chunks, e.g. one Observation for a full hours worth of measurements. See Observation.valueSampledData  - Not ideal, but I'll work.</p>",
        "id": 154024052,
        "sender_full_name": "René Spronk",
        "timestamp": 1544446721
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194709\">@Lars Ebert</span>  - You won't necessarily always find a direct mapping of Resource = Table, though it's a good first approximation<br>\n<span class=\"user-mention\" data-user-id=\"197555\">@Suresh Kumar Mukhiya</span> - you have a few options.  You can certainly generate a separate Observation for each measurement and just send a lot of them.  You can also use the SequencedData data type to gather a set of samples (whether 1 seconds wort or 10 minutes worth) and transmit all of those as a single Observation.  In either case, you do need to send all of the information for the Observation - patient, performer, time, observation type, etc.</p>",
        "id": 154024302,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544486829
    }
]