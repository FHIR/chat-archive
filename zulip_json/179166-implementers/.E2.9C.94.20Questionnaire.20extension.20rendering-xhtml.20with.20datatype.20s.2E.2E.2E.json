[
    {
        "content": "<p>We use the <a href=\"http://hl7.org/fhir/StructureDefinition/rendering-xhtml\">rendering-xhtml</a> extension which is defined with a value of datatype string.</p>\n<p>When you actually try to use html in that, you will get a datatype error that says you don't match [ \\r\\t\\n\\S]+ which is probably correct. Should the datatype on that extension value not have been markdown?</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"nt\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://hl7.org/fhir/StructureDefinition/rendering-xhtml\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"valueString\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;div&gt;Clinical COPD Questionnaire&lt;/div&gt;\"</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 265222784,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1639690529
    },
    {
        "content": "<p>That would be odd, as \\S is a match for any non-whitespace character, and  \\r\\t\\n would match any white-space, tabs, etc. This is essentially any unicode string. According to the spec up to 1MB is allowed. The spec also explains that the markdown datatype is declared identically to string. Not sure what the issue is, but HTML is a valid FHIR string.</p>",
        "id": 265225546,
        "sender_full_name": "Tilo Christ",
        "timestamp": 1639691958
    },
    {
        "content": "<p>Try adding the xhtml namespace to the div - <code>&lt;div xmlns=\"http://www.w3.org/1999/xhtml\"&gt;Clinical COPD Questionnaire&lt;/div&gt;</code></p>",
        "id": 265225845,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1639692085
    },
    {
        "content": "<p>Thanks both. I think there's something off in Simplifier here instead of in my instance. Filed it there.</p>",
        "id": 265230507,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1639694613
    },
    {
        "content": "<p>Shouldn't need a namespace and that text should work just fine.  They type definitely <em>shouldn't</em> be markdown.</p>",
        "id": 265233435,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1639696380
    },
    {
        "content": "<p>I can not decide should I use the Questionnaire or the Condition resource?</p>\n<p>we are getting general information about patients when registering for the first time in our app, information like: do you have an allergy? do you smoke? do you have any kidney disease? …etc</p>\n<p>as you see, it’s like general questions.</p>\n<p>so I can not decide should I use the questionnaire or the condition resource for this information? or maybe should I use a different type of resource, not the questionnaire or the condition?</p>",
        "id": 266417001,
        "sender_full_name": "Muhammad Abdelhady",
        "timestamp": 1640858657
    },
    {
        "content": "<p>For allergies you should use AllergyIntolerance, for smoking you should use Observation (<a href=\"https://www.hl7.org/fhir/us/core/StructureDefinition-us-core-smokingstatus.html\">https://www.hl7.org/fhir/us/core/StructureDefinition-us-core-smokingstatus.html</a>), for kidney disease you should use Condition</p>",
        "id": 266433478,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1640875356
    },
    {
        "content": "<p>If you're intending to have a generic intake form(s) and then post process into these specified resources, then questionnaire could be appropriate, but will end up in the others.</p>",
        "id": 266521982,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1640981795
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"466932\">@Muhammad Abdelhady</span> , if you intend to have a custom UI that collects information about allergies, smoking, etc. you can populate the target resources (AllergyIntolerance, Condition, etc.) directly.</p>\n<p>If you want to design a reusable form, one that might be more dynamic, or leverages an existing questionnaire rendering engine, then you can capture the design of the questionnaire in the Questionnaire resource. In that case, the filled out questions will populate a QuestionnaireResponse, which is used to record what was provided, when, and by whom. Usually, the content of the QuestionnaireResponse is then extracted to create the target resources (AllergyIntolerance, Condition, etc.), in order to be integrated with other clinical information in the patient record. </p>\n<p>QuestionnaireResponse is not usually a useful endpoint; and Questionnaire represents the blank form, not a filled out instance of it. Regardless of whether your UI creates the resources directly, or through use of Questionnaire/QuestionnaireResponse, use the various author, \"derivedFrom\", and other similar elements in your target resources, along with the Provenance resource, to track where the information came from.</p>",
        "id": 266524992,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1640986626
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"466932\">@Muhammad Abdelhady</span> It looks like you raised the same question on the community forum, StackOverflow and here.  Best practice is to ask in only one place and wait a couple of business days before raising the question elsewhere.</p>",
        "id": 266652022,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1641186240
    }
]