[
    {
        "content": "<p>Hi all. I’ve seen a lot of information about SMART on fhir referenced here. Most of the scenarios I have come across deal with a backing EHR system. Is SMART on FHIR still applicable if you are building a server on top of a data warehouse? Or would dropping down to the OAuth level and simply using one of the defined flows such as client credentials make more sense?</p>",
        "id": 154021887,
        "sender_full_name": "Matthew Koch",
        "timestamp": 1543529927
    },
    {
        "content": "<p>I would still use Smart on FHIR as long as the server is serving FHIR resources. It's a vary shallow profile on OAuth2 based on good security analysis, along with bindings to a FHIR server (scopes etc). Why redo that?</p>",
        "id": 154021898,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1543531208
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194077\">@Matthew Koch</span> Actually Smart on FHIR has an app gallery so if your health data repository also implement the security layer defined by Smart on FHIR, you will be able to use those apps against your health data. You can do this if you want to leverage your health data repository with this functionality, Otherwise you can ofcourse implement other security layers and their flows of your choice, But then only your's client would be able to talk to your FHIR server.</p>",
        "id": 154022041,
        "sender_full_name": "Muhammad Abubakar Ikram",
        "timestamp": 1543561277
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193100\">@Muhammad Abubakar</span> , do you know where we can download this doc/specification about security layer by Smart on FHIR? I would like to try some apps against my health data. Thanks in advance!</p>",
        "id": 154022116,
        "sender_full_name": "Elano Machado",
        "timestamp": 1543590904
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194077\">@Matthew Koch</span>, you could say the <a class=\"stream\" data-stream-id=\"179222\" href=\"/#narrow/stream/179222-finnish-PHR\">#finnish PHR</a> is a server on top of a data warehouse. There's no EHR behind it. And it uses SMART to allow apps access to the data.<br>\nOr the other way to look at it is that the <a class=\"stream\" data-stream-id=\"179222\" href=\"/#narrow/stream/179222-finnish-PHR\">#finnish PHR</a>  is the data warehouse exposing data to servers using SMART. :)</p>",
        "id": 154022341,
        "sender_full_name": "Mikael Rinnetmäki",
        "timestamp": 1543728781
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197505\">@Elano Machado</span> please go here <a href=\"https://smarthealthit.org/\" target=\"_blank\" title=\"https://smarthealthit.org/\">https://smarthealthit.org/</a></p>",
        "id": 154022438,
        "sender_full_name": "Muhammad Abubakar Ikram",
        "timestamp": 1543829442
    },
    {
        "content": "<p>Probably want to look at the more recent version now at <a href=\"http://hl7.org/fhir/smart-app-launch/\" target=\"_blank\" title=\"http://hl7.org/fhir/smart-app-launch/\">http://hl7.org/fhir/smart-app-launch/</a></p>",
        "id": 154022439,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1543829712
    },
    {
        "content": "<p>Thanks all who replied. Most of the examples for SMART assume EHR integration, or at least the ones I've been exposed to. Our use case is to provide RESTful API access to our partners who want to consume clinical research data for their own analysis purposes. These are not \"apps\" per say, but more like simple clients that would need to go through the appropriate authentication/authorization layers before data access would be granted. This exchange would likely end up being machine to machine in nature once the handshake is established.</p>\n<p>The simplest example I can think of is this: <a href=\"https://petstore.swagger.io/\" target=\"_blank\" title=\"https://petstore.swagger.io/\">https://petstore.swagger.io/</a> - just swap out the resources for ones we will be exposing from our data warehouse.</p>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  / <span class=\"user-mention\" data-user-id=\"192917\">@Mikael Rinnetmäki</span> / <span class=\"user-mention\" data-user-id=\"193100\">@Muhammad Abubakar</span> <br>\nI certainly do not want to reinvent anything here which is why we are looking at SMART. I've been unable to wrap my head around which model or flow makes sense for us, as we are not really launching apps. Looking at <a href=\"http://hl7.org/fhir/smart-app-launch/\" target=\"_blank\" title=\"http://hl7.org/fhir/smart-app-launch/\">http://hl7.org/fhir/smart-app-launch/</a>, even the \"standalone\" scenario assumes eventual authorization against an EHR authorization server.</p>",
        "id": 154022615,
        "sender_full_name": "Matthew Koch",
        "timestamp": 1543874320
    },
    {
        "content": "<p>EHR is neither here nor there. You can use smart app lauch against a terminology server.</p>",
        "id": 154022619,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1543874823
    },
    {
        "content": "<p>I think you are saying that you don't want to have user authorization in play</p>",
        "id": 154022620,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1543874867
    },
    {
        "content": "<p>Matt, there are an infinite number of security models. SMART is provided as a bundle that should work for most use-cases. SMART does not attempt to say that it is the only security model. </p>\n<ul>\n<li>There are some that are using Mutual-Authentication-TLS, using the client certificate as authenticated within the TLS protocol. This is useful for system-to-system, but does have challanges.</li>\n<li>There is the SMART backend services profile that is being looked to for these system-to-system but using OAuth, and leveraging SMART. Have you looked at this?  <a href=\"https://github.com/smart-on-fhir/fhir-bulk-data-docs/blob/master/authorization.md\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/fhir-bulk-data-docs/blob/master/authorization.md\">https://github.com/smart-on-fhir/fhir-bulk-data-docs/blob/master/authorization.md</a></li>\n</ul>",
        "id": 154022627,
        "sender_full_name": "John Moehrke",
        "timestamp": 1543876766
    },
    {
        "content": "<ul>\n<li>\n<p>There are other OAuth profiles, including a simple JWT token profile from IHE -- IUA <a href=\"https://wiki.ihe.net/index.php/Internet_User_Authorization\" target=\"_blank\" title=\"https://wiki.ihe.net/index.php/Internet_User_Authorization\">https://wiki.ihe.net/index.php/Internet_User_Authorization</a><br>\n** Which does include a SAML tunneling inside JWT</p>\n</li>\n<li>\n<p>There are even SAML profiles, using SAML-SSO-Profile.</p>\n</li>\n<li>There are use of XDS/XCA to communicate FHIR-Documents (along with CDA and PDF). These use SOAP WS-Security and SAML</li>\n<li>There is an infinite set<br>\nWhat is important is that both (all) sides of the communication must agree</li>\n</ul>",
        "id": 154022628,
        "sender_full_name": "John Moehrke",
        "timestamp": 1543876942
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> That's not true re: user authorization - we'd need to have segmentation between what users are able to retrieve data for specific data sets - e.g., it must be protocol (ResearchStudy) driven. A user must authenticate, but any requests must also be authorized.</p>",
        "id": 154022654,
        "sender_full_name": "Matthew Koch",
        "timestamp": 1543884690
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> Thanks for the list. So it seems there are quite a few different ways to go - in fact, I almost wish this list was smaller so I could attempt to wrangle one and see it through. The \"all sides of the communication must agree\" part is probably the hardest part. </p>\n<p>Given what I have attempted to describe, does it sound like SMART still has a place, or would I be better suited to look at another security model?</p>",
        "id": 154022655,
        "sender_full_name": "Matthew Koch",
        "timestamp": 1543884796
    },
    {
        "content": "<blockquote>\n<p>A user must authenticate, but any requests must also be authorized.</p>\n</blockquote>\n<p>Well, of course, that's exactly how smart app launch works</p>",
        "id": 154022660,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1543887952
    },
    {
        "content": "<p>it sounds like the mismatch you see is between the smart defined scopes, and what you want the user to be able to choose. The smart app scopes are a matter of ongoing discussion</p>",
        "id": 154022661,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1543888008
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194077\">@Matthew Koch</span> I'd still say SMART should be good for you. You could take a look at <a href=\"https://www.kanta.fi/documents/20143/91486/PHR+authorization.pdf/9fdb48d0-a6c8-0bc6-10ab-35495ca030b4\" target=\"_blank\" title=\"https://www.kanta.fi/documents/20143/91486/PHR+authorization.pdf/9fdb48d0-a6c8-0bc6-10ab-35495ca030b4\">https://www.kanta.fi/documents/20143/91486/PHR+authorization.pdf/9fdb48d0-a6c8-0bc6-10ab-35495ca030b4</a> for instance, or to other docs at <a href=\"https://www.kanta.fi/en/system-developers/technical-instructions\" target=\"_blank\" title=\"https://www.kanta.fi/en/system-developers/technical-instructions\">https://www.kanta.fi/en/system-developers/technical-instructions</a>.<br>\nIn this case, the app (\"client\", if you will) itself initiates the authorization process, and the authorizing party must authorize the app to access their data. Your flow might be different, but if you want the research subjects to give their consent to use the data, this is where it would take place.<br>\nAfter successful authorization, the app gets an access token and a refresh token. Using those tokens the app may access the data in the resource server as it needs, as long as the authorization is valid (using refresh tokens it will be valid until the authorization is explicitly revoked).</p>",
        "id": 154022693,
        "sender_full_name": "Mikael Rinnetmäki",
        "timestamp": 1543907884
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194077\">@Matthew Koch</span> Keeping the things simple, if you have your only private clients and you don't want to public your FHIR server you can start with OAuth2.0 client credentials (<a href=\"https://tools.ietf.org/html/rfc6749#section-4.4\" target=\"_blank\" title=\"https://tools.ietf.org/html/rfc6749#section-4.4\">https://tools.ietf.org/html/rfc6749#section-4.4</a>) flow or if you want to authenticate not only clients but also the users you can use OAuth2.0 resource owner flow (<a href=\"https://tools.ietf.org/html/rfc6749#section-4.3\" target=\"_blank\" title=\"https://tools.ietf.org/html/rfc6749#section-4.3\">https://tools.ietf.org/html/rfc6749#section-4.3</a>). Furthermore, in future, you can also add a SMART-on-FHIR security layer to your server if you need it.</p>",
        "id": 154022727,
        "sender_full_name": "Muhammad Abubakar Ikram",
        "timestamp": 1543917786
    },
    {
        "content": "<p>Given that Research Subject has provided a Consent with the authorization rules (what data they authorize the research study to use),  then you can just indicate in your Implementation Guide that it is up to the Resource Server to enforce that consent. The OAuth scopes defined by SMART-on-FHIR are not a replacement for consent rules. Even in the prime use-case for SMART-on-FHIR there is an expectation that the Resource Server is responsible for enforcing relevant patient privacy consents, and business rules. This server side logic is not often mentioned publicly, and it doesn't need to be often. In your case it needs to be more clear it is a functional requirement, while the mechanism still can be unmentioned.<br>\nSo, you can declare that SMART-on-FHIR is used; and express that the resource server is expected to enforce the consent identified for that research study. This is reasonable, it leverages SMART, it leverages Consent, and it is similar to normal use of SMART.</p>",
        "id": 154022784,
        "sender_full_name": "John Moehrke",
        "timestamp": 1543937796
    },
    {
        "content": "<p>That said, it might be useful to expand SMART-on-FHIR with a recognition of ResearchSubject as a special case of indirection to Patient. This would likely be necessary with the advancements of research study mechanics.</p>",
        "id": 154022785,
        "sender_full_name": "John Moehrke",
        "timestamp": 1543938140
    },
    {
        "content": "<p>Other changes to SMART are in discussion, including mechanisms to identify the PurposeOfUse for the request. In your case this would be Research, and the ResearchStudy would be the specific PurposeOfUse. These improvements of SMART could certainly be initiated.</p>",
        "id": 154022786,
        "sender_full_name": "John Moehrke",
        "timestamp": 1543938228
    },
    {
        "content": "<p>A hack that is likely to happen without actual changes is a creative use of 'client-id' of the 'app'; where each project is effectively a different app... Not proper, but I am sure it will be done.</p>",
        "id": 154022788,
        "sender_full_name": "John Moehrke",
        "timestamp": 1543938467
    },
    {
        "content": "<p>That said... I expect an access for the purpose of a Research Study would more likely be a system-to-system and look more like flat-file access. So that security model should be strongly considered. (vs SMART-on-FHIR which is more designed for user initiated interactive sessions with an identified and authorized app)</p>",
        "id": 154022789,
        "sender_full_name": "John Moehrke",
        "timestamp": 1543938478
    },
    {
        "content": "<p>Using SMART-on-FHIR to get data to be used in a clinical trial by querying patient records on the basis of knowing the ResearchSubject requires the indirection from ResearchSubject to Patient to be preserved.  If all I know is a ResearchSubject ID then the response I get from SMART should not allow me to identify the patient any more than I did when I raised the query.</p>",
        "id": 154022797,
        "sender_full_name": "Hugh Glover",
        "timestamp": 1543940477
    },
    {
        "content": "<p>I feel as though this is a good connectathon subject: smart-on-fhir + research subject for research data analysis</p>",
        "id": 154022852,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1543949417
    },
    {
        "content": "<p>I'll put it on the list</p>",
        "id": 154022890,
        "sender_full_name": "Hugh Glover",
        "timestamp": 1543955796
    },
    {
        "content": "<p>Notifying <span class=\"user-mention\" data-user-id=\"193983\">@Lilian Minne</span></p>",
        "id": 154023040,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1543997216
    },
    {
        "content": "<blockquote>\n<p>it sounds like the mismatch you see is between the smart defined scopes, and what you want the user to be able to choose. The smart app scopes are a matter of ongoing discussion</p>\n</blockquote>\n<p>Any news on this subject (or a solution for a standardized authorization for clinical research data)? Did you discuss it at the connectathon? Thanks</p>",
        "id": 157104954,
        "sender_full_name": "Bram Wesselo",
        "timestamp": 1548769045
    }
]