[
    {
        "content": "<p>The HAPI test server currently resturns a Bundle.total value for search on female Patients but not for male Patients. <span class=\"emoji emoji-1f604\" title=\"smile\">:smile:</span> <br>\nHow does <em>that</em> happen!?</p>",
        "id": 154009412,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1539700874
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span></p>",
        "id": 154009413,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1539700890
    },
    {
        "content": "<p>Looks like Gender Discrimination :) - let me check on our server</p>",
        "id": 154009415,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539701153
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> ?</p>",
        "id": 154009417,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539701395
    },
    {
        "content": "<p>I think it has to do with the total number of results. Apparently thereâ€˜s a threshold at whIch  HAPI stops counting... :)</p>",
        "id": 154009462,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1539709571
    },
    {
        "content": "<p>Lol, this is kinda hilarious.</p>\n<p>The reason is definitely around the number of results. The JPA server has some optimizations in it, including the fact that it doesn't try to calculate a total right away for searches that return a lot of results.</p>\n<p>We should really make this configurable, the public server never really gets to a volume of data where this calculation is onerous so it doesn't make sense to skip the total and people do find this ind of thing a bit weird. :)</p>",
        "id": 154009470,
        "sender_full_name": "James Agnew",
        "timestamp": 1539714208
    },
    {
        "content": "<p>Perhaps send an extension on the total that says \"more than 1000\" or something like that?</p>",
        "id": 154009480,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539714860
    },
    {
        "content": "<p>That's a good idea!</p>",
        "id": 154009565,
        "sender_full_name": "James Agnew",
        "timestamp": 1539728349
    },
    {
        "content": "<p>And it'll help teach people about extensions on simple types ;)</p>",
        "id": 154009566,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539728725
    },
    {
        "content": "<p>We have similar optimisation - i think, it is worth to discuss and make count in search bundle optional or estimated. We use _countMethod custom parameter to configure this behaviour. <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  what is your opinion about _countMethod param?</p>",
        "id": 154009732,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539766675
    },
    {
        "content": "<p>I think total <em>is</em> already optional. The invariant bdl-1 only forbids the use of total for anything other than history or searchset Bundles, but it doesn't enforce it's presence for searchset/history</p>",
        "id": 154009734,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1539767324
    },
    {
        "content": "<p>I mean - make it configurable per request</p>",
        "id": 154009735,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539767813
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191318\">@nicola (RIO/SS)</span> what are the values you accept for that parameter?</p>\n<p>We were actually going down the road of letting people use combinations of <code>_summary</code>, such as <code>_summary=count,data</code> to let the user request that a count always happen for a big search. Turns out the .net client refuses to do this though because the spec actually prohibits it so that's a nonstarter.</p>",
        "id": 154009736,
        "sender_full_name": "James Agnew",
        "timestamp": 1539768835
    },
    {
        "content": "<p>I was actually considering an option to explicitly request _nocount=true so I can skip the calc</p>",
        "id": 154009737,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1539768928
    },
    {
        "content": "<p>Almost sounding like _total=none|estimate|accurate would be better.</p>",
        "id": 154009738,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1539768985
    },
    {
        "content": "<p>I like naming by <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> . We have _countMethod=none|estimated|count :)</p>",
        "id": 154009739,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539769050
    },
    {
        "content": "<p>Yeah that's not bad. And I'm assuming there is an easy way to get the .net client to output that parameter?</p>",
        "id": 154009740,
        "sender_full_name": "James Agnew",
        "timestamp": 1539769141
    },
    {
        "content": "<p>Yeah, can just appendix as any other search parameter.</p>",
        "id": 154009742,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1539769361
    },
    {
        "content": "<p>_sum.ary has special behaviour</p>",
        "id": 154009743,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1539769390
    },
    {
        "content": "<p>Quiz for other servers, how do you calc an estimate?<br>\nI can easy see none or accurate, or maybe trim to a specific size, but other form of estimate?</p>",
        "id": 154009744,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1539769702
    },
    {
        "content": "<p>I think that's all of them.</p>",
        "id": 154009745,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1539769803
    },
    {
        "content": "<p>For postgresql there are stats tables and execution plan estimation - which can be used for that</p>",
        "id": 154009747,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539770293
    },
    {
        "content": "<p>Ok, thanks. Wondered if might be something like that.</p>",
        "id": 154009750,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1539770727
    },
    {
        "content": "<p>..so <code>_noCount=true|false</code> or <code>_countMethod=none|estimated|count</code> or something else? We have to implement the same option in our server - I'd rather go with the 'standard'!</p>",
        "id": 154009786,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1539783582
    },
    {
        "content": "<p>(in our server we can choose between no count or an estimate, there is really no way to get an exact count)</p>",
        "id": 154009788,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1539783653
    },
    {
        "content": "<p>I'm going to trial the option that <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> suggested (_total)</p>",
        "id": 154009789,
        "sender_full_name": "James Agnew",
        "timestamp": 1539783986
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 154009797,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1539785390
    },
    {
        "content": "<p>I'm not entirely sure that I follow. The point here is for the client to save the server work? why would any client bother?</p>",
        "id": 154009928,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539802568
    },
    {
        "content": "<p>No, it's the opposite. The server defaults to saving work and the client is requesting that the server do more.</p>\n<p>Put another way, if a user is searching for patients named smith, there's a good chance that they really just to page through results and don't actually care how many there are. So issuing a SQL count query is extra overhead. So a server might opt to not include it. But the client might actually care, and this allows them to express that.</p>",
        "id": 154009974,
        "sender_full_name": "James Agnew",
        "timestamp": 1539805035
    },
    {
        "content": "<p>Servers bother - count is a second query, which  has a cost comparable with query cost</p>",
        "id": 154009975,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539805059
    },
    {
        "content": "<p>so this is a breaking change then?</p>",
        "id": 154009980,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539805176
    },
    {
        "content": "<p>no - if default is count</p>",
        "id": 154009982,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539805195
    },
    {
        "content": "<p>which means I was right and James is not...</p>",
        "id": 154009983,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539805222
    },
    {
        "content": "<p>but client can choose to not count to get data faster</p>",
        "id": 154009984,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539805248
    },
    {
        "content": "<p>It can be pretty difficult to supply a count (estimated or not) when you start having to cross different tables/data structures under the covers. As a server, I don't want to see this become required as we have places where I don't think we can even produce an estimate</p>",
        "id": 154009987,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1539805340
    },
    {
        "content": "<p>I'm good if the client can \"suggest\" a behavior - I think we have other places in the spec where that's possible (but the server can ignore it...)</p>",
        "id": 154009988,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1539805372
    },
    {
        "content": "<p>or we can move default count method into Conformance</p>",
        "id": 154009989,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539805376
    },
    {
        "content": "<p>I don't see this as a breaking change. Servers are already not required to supply a count. And HAPI's JPA server has often been opting not to supply one for the last year or so.</p>",
        "id": 154009991,
        "sender_full_name": "James Agnew",
        "timestamp": 1539805412
    },
    {
        "content": "<p>interesting. ok. I agree we don't require it. We don't even say anything about it, which we should</p>",
        "id": 154009993,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539805507
    },
    {
        "content": "<p>so we can add a client suggestion. Either as a parameter or a prefer header</p>",
        "id": 154009994,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539805529
    },
    {
        "content": "<p>parameter is better :)</p>",
        "id": 154009995,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539805546
    },
    {
        "content": "<p>why?</p>",
        "id": 154009998,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539805709
    },
    {
        "content": "<p>You can use it in browser :)</p>",
        "id": 154009999,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539805719
    },
    {
        "content": "<p>surely you can set the prefer header in the browser?</p>",
        "id": 154010001,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539805748
    },
    {
        "content": "<p>How?</p>",
        "id": 154010003,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539805770
    },
    {
        "content": "<p>I mean, by manually entering url in browser location string (not js xhr)</p>",
        "id": 154010005,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1539805839
    },
    {
        "content": "<p>like <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Headers\" target=\"_blank\" title=\"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Headers\">https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Headers</a></p>",
        "id": 154010006,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539805845
    },
    {
        "content": "<p>I also prefer a parameter rather than header, just easier to handle everywhere...<br>\nand do think this is a hint/suggestion rather than requirement (not changing what it is now)</p>",
        "id": 154010099,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1539819530
    },
    {
        "content": "<p>Agreed-  parameter is easier</p>",
        "id": 154010102,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1539820585
    },
    {
        "content": "<p>In our case I think we'll continue to return the total, but giving the client the option  to disable it could improve performances - and we definitely have clients that could / would use that</p>",
        "id": 154010103,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1539820663
    },
    {
        "content": "<p>time for someone to create a task. not sure whether it will make it into R4 though</p>",
        "id": 154010106,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539821126
    },
    {
        "content": "<p><a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemBrowse&amp;feedback=Successfully+added+%5B%2319438%5D&amp;tracker_id=677\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemBrowse&amp;feedback=Successfully+added+%5B%2319438%5D&amp;tracker_id=677\">https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemBrowse&amp;feedback=Successfully+added+%5B%2319438%5D&amp;tracker_id=677</a></p>",
        "id": 154010107,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1539821783
    }
]