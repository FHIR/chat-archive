[
    {
        "content": "<p>Various programming languages use a simple function to determine the mime-type of a given file. XML and JSON are easily detected that way - but when extending that functionality to detect application/fhir+xml (as opposed to any other XML) or application/fhir+json (versus any other JSON format) - what would be the easiest/most reliable way to detect FHIR-XML, FHIR-JSON ?</p>",
        "id": 274091619,
        "sender_full_name": "René Spronk",
        "timestamp": 1646379880
    },
    {
        "content": "<p>For json I'd say the presence of a <code>resourceType</code> key, if you want to go deeper then with a corresponding valid value.</p>\n<p>XML - the fhir namespace declaration, following that the presence of an element <code>id</code> with a <code>value</code> attribute.</p>\n<p>Of course these are heuristics with flaws :)</p>",
        "id": 274102792,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1646386398
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191372\">René Spronk</span> <a href=\"#narrow/stream/179166-implementers/topic/detection.20of.20FHIR.20struct/near/274091619\">said</a>:</p>\n<blockquote>\n<p>what would be the easiest/most reliable way to detect FHIR-XML, FHIR-JSON ?</p>\n</blockquote>\n<p>Using schemas, XSD or JSON schema would be the most reliable way, and maybe catching any general parsing errors when loading the xml or json document beforehand, but depending on the language you're using that's maybe built into the schema validation.  Easy if all the schemas are already done...</p>",
        "id": 274106289,
        "sender_full_name": "Declan Kieran",
        "timestamp": 1646388100
    },
    {
        "content": "<p>Thanks - I thinks Vadim's suggestion is 'good enough' in my context, where most [but not all] of the XML/JSON being processed will be FHIR. So it's ok to err on the side of FHIR ;-)</p>\n<p>Schema validation would be rather costly, and it's very FHIR release dependent. That may be proper fit with some other contexts however.</p>",
        "id": 274139833,
        "sender_full_name": "René Spronk",
        "timestamp": 1646405768
    },
    {
        "content": "<p>As a note, keep in mind that the JSON <code>resourceType</code> key follows the same rules as the rest of JSON serialization - since it is unordered it does not need to be the first key in a resource.<br>\n(noted because if you are using a streaming parser, you cannot guarantee knowing the type until the end of parsing instead of the beginning)</p>",
        "id": 274148122,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1646409005
    },
    {
        "content": "<p>Adding to <span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span> 's warning: <a href=\"https://build.fhir.org/json.html#resources\">https://build.fhir.org/json.html#resources</a></p>",
        "id": 274341789,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1646618899
    }
]