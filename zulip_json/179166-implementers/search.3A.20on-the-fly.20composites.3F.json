[
    {
        "content": "<p>Monday in the FHIR Infrastructure WG we discussed <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13324\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13324\">GF#13324</a>, where <span class=\"user-mention\" data-user-id=\"191351\">@Chris Grenz</span> asked about a more expressive way to find resources based on inbound connections. (Specifically he wanted a way to say: find me all Patients pointed to by a Provenance that meets conditions A and B. Today's API lets you say: find me all Patients pointed to by a Provenance that meets condition A and a Provenance that meets condition B — but there's no way to restrict the search to cases where a single Provenance meets both conditions.)</p>",
        "id": 153900188,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1501706141
    },
    {
        "content": "<p>It seems to me like this issue isn't restricted to inbound references (with <code>_has</code> search parameters). Rather, the same issue arises for outbound connections. Like I can say <code>Patient?generalPractitioner.given=John&amp;generalPractitioner.family=Smith</code> — but this query also finds patients with two provides, named \"John Adams\" and \"Alice Smith\".</p>",
        "id": 153900190,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1501706261
    },
    {
        "content": "<p>In fact, it can even apply to queries within a given resource, on repeated fields. Like the following erroneous way to find patients with diastolic hypertension (diastolic BP  &gt; 100): <code>Observation?component-name=diastolic&amp;component-value=gt100</code></p>\n<p>the problem is that this query will match observations with a  normal BP (of 120/80), because it contains <em>some</em> diastolic value, and <em>some</em> value over 100 mmHg.</p>",
        "id": 153900191,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1501706387
    },
    {
        "content": "<p>For the final case (within-resource queries) FHIR has \"composite\" search parameters — a way to ask for <code>component-value-quantity=diastolic$gt100</code>.</p>",
        "id": 153900192,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1501706449
    },
    {
        "content": "<p>The question is: should we try to introduce some on-the-fly way to perform similar constraints-on-subtrees for queries that cross resource boundaries?</p>",
        "id": 153900193,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1501706477
    },
    {
        "content": "<p>I'm inclined to say \"No\", on the principle that FHIR's search interface was never designed to handle full-on graph search. But we've historically had difficulty explaining exactly how to draw this line.</p>",
        "id": 153900195,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1501706507
    },
    {
        "content": "<p>Agree it's a generalizable problem.</p>",
        "id": 153900196,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1501706556
    },
    {
        "content": "<p>the _filter parameter can do all this stuff.</p>",
        "id": 153900207,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501707584
    },
    {
        "content": "<p>it intrigues me that there's such resistance to it....</p>",
        "id": 153900208,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501707623
    },
    {
        "content": "<p>It's likely lack of understanding. Can you share some examples of how to solve this with <code>filter</code>?</p>",
        "id": 153900274,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1501718182
    },
    {
        "content": "<p>_filter=related[type eq has-component and target.code eq 2345-6].target re url</p>",
        "id": 153900276,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501718660
    },
    {
        "content": "<p>Can you maybe write out the \"Patient with a provider with first name John and last name Smith\" example <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>? I'm still having trouble following.</p>",
        "id": 153900425,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1501794807
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>GET [base]/Patient?_filter=general-practitioner[given eq John and family eq Smith].id pr true\n</pre></div>",
        "id": 153900431,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501796560
    },
    {
        "content": "<p>i think.</p>",
        "id": 153900432,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501796563
    }
]