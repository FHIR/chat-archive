[
    {
        "content": "<p>Mark Kramer (MITRE) wrote a blog post about FHIR extensions, in response to Grahame's post... <a href=\"http://lightmyfhir.org/2016/02/19/alternative-syntaxes-for-fhir-extensions-2/\" target=\"_blank\" title=\"http://lightmyfhir.org/2016/02/19/alternative-syntaxes-for-fhir-extensions-2/\">http://lightmyfhir.org/2016/02/19/alternative-syntaxes-for-fhir-extensions-2/</a></p>",
        "id": 153812890,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1455890721
    },
    {
        "content": "<p>I believe he plans to post a few more on that topic.</p>",
        "id": 153812891,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1455890732
    },
    {
        "content": "<p>Nice â€” I appreciate the careful framing of the problem. (But I seem unable to post a response)</p>",
        "id": 153812892,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1455894984
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> looks like you figured it out, since I see a comment that you left.</p>",
        "id": 153812950,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1455899476
    },
    {
        "content": "<p>Well, I had to use a different e-mail address, because the WP password recovery was broken. But then yes.</p>",
        "id": 153812951,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1455899503
    },
    {
        "content": "<p>Also I didn't a confirmation my post had worked, so I wasn't sure.</p>",
        "id": 153812952,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1455899520
    },
    {
        "content": "<p>Is <a href=\"https://hl7-fhir.github.io/resource.html#implicitRules\" target=\"_blank\" title=\"https://hl7-fhir.github.io/resource.html#implicitRules\">https://hl7-fhir.github.io/resource.html#implicitRules</a> still valid? It links to <a href=\"https://hl7-fhir.github.io/profiling.html\" target=\"_blank\" title=\"https://hl7-fhir.github.io/profiling.html\">https://hl7-fhir.github.io/profiling.html</a> but that page says nothing about custom agreements</p>",
        "id": 153813181,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1456304837
    },
    {
        "content": "<p>can you make a task to correct the link. the whole page is about custom agremeents, but it never closes out the implicit rules bit</p>",
        "id": 153813185,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1456313032
    },
    {
        "content": "<p>OK, filed as <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=9632\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=9632\">http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=9632</a>.</p>",
        "id": 153813272,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1456357252
    },
    {
        "content": "<p>in a complex extension, should the 'child' extensions have a url starting with # - ie:</p>",
        "id": 153815348,
        "sender_full_name": "David Hay",
        "timestamp": 1457926107
    },
    {
        "content": "<p>&lt;extension url=\"<a href=\"http://fhir.hl7.org.nz/externalidentifier\" target=\"_blank\" title=\"http://fhir.hl7.org.nz/externalidentifier\">http://fhir.hl7.org.nz/externalidentifier</a>\"&gt;<br>\n        &lt;extension url=\"#source\"&gt;<br>\n            &lt;valueString value=\"North Shore Hospital\"/&gt;<br>\n        &lt;/extension&gt;</p>",
        "id": 153815349,
        "sender_full_name": "David Hay",
        "timestamp": 1457926128
    },
    {
        "content": "<p>rather than &lt;extension url=\"<a href=\"http://fhir.hl7.org.nz/externalidentifier\" target=\"_blank\" title=\"http://fhir.hl7.org.nz/externalidentifier\">http://fhir.hl7.org.nz/externalidentifier</a>\"&gt;<br>\n        &lt;extension url=\"source\"&gt;<br>\n            &lt;valueString value=\"North Shore Hospital\"/&gt;<br>\n        &lt;/extension&gt;</p>",
        "id": 153815350,
        "sender_full_name": "David Hay",
        "timestamp": 1457926137
    },
    {
        "content": "<p>I think the latter (bare words) </p>",
        "id": 153815351,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1457926267
    },
    {
        "content": "<p>Let's see if I can find evidence </p>",
        "id": 153815352,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1457926287
    },
    {
        "content": "<p>Example on <a href=\"http://hl7-fhir.github.io/extensibility\" target=\"_blank\" title=\"http://hl7-fhir.github.io/extensibility\">http://hl7-fhir.github.io/extensibility</a> matches this at least </p>",
        "id": 153815353,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1457926477
    },
    {
        "content": "<p>gotcha! thanks...</p>",
        "id": 153815354,
        "sender_full_name": "David Hay",
        "timestamp": 1457926627
    },
    {
        "content": "<p>y. references are relative inside a complex extension</p>",
        "id": 153815359,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457939801
    },
    {
        "content": "<p>Using \"#someName\" was the old style.</p>",
        "id": 153815390,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1457956542
    },
    {
        "content": "<p>So no need for that # in front then.</p>",
        "id": 153815561,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458011260
    },
    {
        "content": "<p>I am trying to understand the phrase<br>\n\"Must have either extensions or value[x]\"<br>\nin the structure definition of the extension element <a href=\"http://hl7.org/fhir/2016Sep/extensibility.html\" target=\"_blank\" title=\"http://hl7.org/fhir/2016Sep/extensibility.html\">http://hl7.org/fhir/2016Sep/extensibility.html</a></p>\n<p>Does this mean I can define something like<br>\nextension<br>\n    uri<br>\n    extension<br>\n          uri<br>\n          valueCodeableConcept<br>\n          valueString<br>\n  extension<br>\n          uri<br>\n           valueCodeableConcept<br>\n          valueCodeableConcept</p>\n<p>What I would really like is<br>\nextension<br>\n    uri<br>\n    valueCodeableConcept  where this pair is repeated<br>\n    value[x]</p>\n<p>In other words emulate the 'component' element in an Observation but in a Device Resource.</p>",
        "id": 153869897,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1486129045
    },
    {
        "content": "<p>You can't have multiple value repetitions within an extension index.  If you want multiple values, you need to repeat the entire extension element - i.e. declare the url each time.  The reason is that JSON doesn't like polymorphic arrays.</p>",
        "id": 153869921,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1486139046
    },
    {
        "content": "<p>Thanks,</p>\n<p>But what does \"Must have either extensions or value[x]\" trying to say? Nesting?</p>",
        "id": 153869930,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1486139831
    },
    {
        "content": "<p>It's saying you can either have a value or child extensions but not both.  I.e. you can't have a complex extension that also has a value.</p>",
        "id": 153869931,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1486139969
    },
    {
        "content": "<p>Note that you can have a value where the value itself is extended.</p>",
        "id": 153869932,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1486139985
    },
    {
        "content": "<p>Lloyd, does this implementation look correct to you (aside from the phony uri)?</p>\n<div class=\"codehilite\"><pre>&quot;extension&quot;:[  \n           {  \n              &quot;url&quot;:&quot;http://pcha.org/phd/documents/fhir/extensions/device-property&quot;,\n              &quot;valueCodeableConcept&quot;:{  \n                 &quot;extension&quot;:[  \n                    {  \n                       &quot;url&quot;:&quot;http://pcha.org/phd/documents/fhir/extensions/device-property-value&quot;,\n                       &quot;valueString&quot;:&quot;162502000528&quot;\n                    }\n                 ],\n                 &quot;coding&quot;:[  \n                    {  \n                       &quot;system&quot;:&quot;urn:iso:std:iso:11073:10101&quot;,\n                       &quot;code&quot;:&quot;531972&quot;,\n                       &quot;display&quot;:&quot;MDC_ID_PROD_SPEC_SERIAL: serial number&quot;\n                    }\n                 ]\n              }\n           },\n</pre></div>\n\n\n<p>For example?</p>",
        "id": 153869958,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1486149855
    },
    {
        "content": "<p>Looks ok to me.  Though in general, extension URLs should end with StructureDefinition/[id] so that they can be hosted as a propper FHIR server on their endpoint.</p>",
        "id": 153869981,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1486159392
    },
    {
        "content": "<p>i.e. <a href=\"http://pcha.org/phd/documents/fhir/extensions/StructureDefinition/device-property-value\" target=\"_blank\" title=\"http://pcha.org/phd/documents/fhir/extensions/StructureDefinition/device-property-value\">http://pcha.org/phd/documents/fhir/extensions/StructureDefinition/device-property-value</a> or something like that.</p>",
        "id": 153869982,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1486159423
    },
    {
        "content": "<p>Lloyd,<br>\nunderstood; right now the URL is just a placeholder until PCHA agrees on the approach.</p>",
        "id": 153871104,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1486851434
    },
    {
        "content": "<p>hello. Is there an extension for patient's work place and his position?  Or... where i can save it? </p>",
        "id": 153877957,
        "sender_full_name": "ÐšÐ¸Ñ€Ð¸Ð»Ð» ÐšÐ°Ð·Ð°Ñ‡ÐµÐ½ÐºÐ¾",
        "timestamp": 1489822223
    },
    {
        "content": "<p>There isn't one that I know of or at least not here: <a href=\"http://build.fhir.org/patient-profiles.html\" target=\"_blank\" title=\"http://build.fhir.org/patient-profiles.html\">http://build.fhir.org/patient-profiles.html</a><br>\n.<br>\nMy expectation for this type of info is something along the lines of (social) anamnesis. So you would not extend patient for it, but rather associate it to the patient using an observation.</p>",
        "id": 153877958,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1489822776
    },
    {
        "content": "<p>Otherwise you'd need extensions for students, scholars, groups like who they live with (part of family X) and then some too. If someone doesn't have a job he might do volunteer work in a petting zoo (health risks) etc. Social anamnesis is better suited I think than pulling all those bits and pieces into patient.</p>",
        "id": 153877959,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1489823036
    },
    {
        "content": "<p>If it's for financial purposes then I guess you'd find that info in/through Contract and or Coverage</p>",
        "id": 153877960,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1489823132
    },
    {
        "content": "<p>ok, thank you </p>",
        "id": 153877962,
        "sender_full_name": "ÐšÐ¸Ñ€Ð¸Ð»Ð» ÐšÐ°Ð·Ð°Ñ‡ÐµÐ½ÐºÐ¾",
        "timestamp": 1489823643
    },
    {
        "content": "<p>There is a small group working on adding occupational health concerns, they would be developing models for this, I'm not positive but I think they are working through the O&amp;O WG.</p>",
        "id": 153878193,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1489921923
    },
    {
        "content": "<p>Hi! I asked the same question a while ago. Search for the this thread: stream:implementers topic:Patient+Occupational+History. Hopefully the responses will help you. For our project, we are using a combination of Observations and Questionnaire to address our needs.</p>",
        "id": 153878542,
        "sender_full_name": "Lauren Wolejsza",
        "timestamp": 1490009952
    },
    {
        "content": "<p>The people working on it working on it are through the HL7 PHER WG.  </p>",
        "id": 153878668,
        "sender_full_name": "Eric Haas",
        "timestamp": 1490050647
    },
    {
        "content": "<p>hello all, in our UI we want to display these info along with admission info. so can we add these elements(from appointment) as extensions to Encounter Resource? or create a profile by remove all the elements from Appointment except these. and then use. which one is the correct way? please help me.  Thank you.</p>",
        "id": 153879891,
        "sender_full_name": "Jayashree Surnar",
        "timestamp": 1490618098
    },
    {
        "content": "<p>Extension.uri says \"The definition may point directly to a computable or human-readable definition of the extensibility codes, or it may be a logical URI as declared in some other specification. \" So it can be text or computable. Then it says \"The definition SHALL be a URI for the Structure Definition defining the extension.\" That sounds computable only. Is the intention to say \"If computable, the definition SHALL....\"? Or is the StructureDefinition intended to cover human readable too?</p>",
        "id": 153899094,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1501240404
    },
    {
        "content": "<p>I think we tightened it to require it to be a StructureDefinition.  Please submit a change request for us to clean up the looser wording.</p>",
        "id": 153899266,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1501257664
    },
    {
        "content": "<p>If that is the case, should this not be a reference? What other way would there be to host a StructureDefinition? It seems to me that allowing a human readable, non-StructureDefinition, would make the barrier to using extensions a lot lower.</p>",
        "id": 153899445,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1501323421
    },
    {
        "content": "<p>But it means it's impossible to retrieve a computable definition of what they are.  Creating extensions isn't that hard and ensuring there's a computable definition means that the extension is actually fully defined, sharable in registries, includable in implementation guides, etc.</p>",
        "id": 153899520,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1501355300
    },
    {
        "content": "<p>Well it would still be possible, just optional. We can't say that extensions are not hard if it is tied 100% to creating a working StructureDefinition. For most non-FHIR experts that is hard. I can see that computable is better but I think that extension+StructureDefnition is an order of magnitude more difficult than extension+html description. But if it is StructureDefinition only, then why is this a URI and not a reference? Surely that is a hangover from the old human readable version.</p>",
        "id": 153899540,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1501365175
    },
    {
        "content": "<p>It's a URI because we don't need a full-blown reference data type here and we want to optimize the syntax to make using extensions in instances less painful.</p>",
        "id": 153899553,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1501385525
    },
    {
        "content": "<p>There are oodles of extension definitions available to use as examples.  Modifying an existing one and checking it with a validator isn't an unreasonable ask for people who have the skills to manage sending and receiving FHIR instances in general.  (And extension definitions are extremely simple StructureDefinitions - it's not like they need to understand slicing or any of the other craziness of profiles.)  Plus there are tools like Forge that make it even easier.</p>",
        "id": 153899554,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1501385655
    },
    {
        "content": "<p>Is this the only place in FHIR where a reference to another resource is not an actual reference?</p>",
        "id": 153899594,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1501442097
    },
    {
        "content": "<p>no. there's other places where we use URL.</p>",
        "id": 153899602,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501445614
    },
    {
        "content": "<p>Hi,</p>\n<p>Looking at the example 2.5.2.1.1 in the Specification (Patient Consent for Record Sharing), the instance specifies the &lt;kind value=\"datatype\"&gt; but according to StructureDefinition, this element can have only the following values: primitive-type | complex-type | resource | logical. Can anyone explain why this is so in the example and from where did datatype come from?</p>\n<p>Also on the notion of &lt;context&gt;;  this happens to be of type String but the value for this in the example is \"Patient\" which also happens to be a resource. Just want to confirm that the context can be a any meaningful string and not a resource.</p>\n<p>thanks,</p>\n<p>Joel</p>",
        "id": 153904082,
        "sender_full_name": "Joel Francis",
        "timestamp": 1504112101
    },
    {
        "content": "<p>you got a URL for this?</p>",
        "id": 153904106,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1504124722
    },
    {
        "content": "<p>Yes <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> - <a href=\"https://www.hl7.org/fhir/extensibility-examples.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/extensibility-examples.html\">https://www.hl7.org/fhir/extensibility-examples.html</a></p>",
        "id": 153904129,
        "sender_full_name": "Joel Francis",
        "timestamp": 1504131440
    },
    {
        "content": "<p>ok so the example is wrong - I don't know why the tooling hasn't picked up that this is wrong</p>",
        "id": 153904133,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1504135898
    },
    {
        "content": "<p>the conext can be any meaningful string, where meaning is specified by the contextType</p>",
        "id": 153904134,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1504135936
    },
    {
        "content": "<blockquote>\n<p>ok so the example is wrong - I don't know why the tooling hasn't picked up that this is wrong</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> . I think both the examples on the page have errors and have been very difficult to follow. Please also note that the notion of context is different in both your explanations.</p>",
        "id": 153904141,
        "sender_full_name": "Joel Francis",
        "timestamp": 1504146471
    },
    {
        "content": "<p>If contextType is \"resource\", then the context must be a resource name or path.  If contextType is \"datatype\" then the context must be a data type name or path.  If contextType is extension, then the context must be the extension URL.  I'm actually not sure how to refer to a sub-element within a complex extension.  And looking at the documentation, it appears the description of \"context\" could use a little work.  So please submit a change request asking us to beef it up a bit...</p>",
        "id": 153904142,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1504146917
    },
    {
        "content": "<p>I have benefited from never having seen this page before.  It would have confused me as well.</p>",
        "id": 153904215,
        "sender_full_name": "Eric Haas",
        "timestamp": 1504193939
    },
    {
        "content": "<blockquote>\n<p>ok so the example is wrong - I don't know why the tooling hasn't picked up that this is wrong</p>\n</blockquote>\n<p>I have had a gforge item to correct this for some time. I think we've blockvoted on it today.</p>",
        "id": 153908676,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1505438079
    },
    {
        "content": "<p>Hi<br>\nI am currently trying to build some examples for using profiles with complex extensions, but they all fail to validate on SIMPLIFIER.<br>\nI got a simple profile <a href=\"https://simplifier.net/Velferd-test-og-lek/test-flag/~overview\" target=\"_blank\" title=\"https://simplifier.net/Velferd-test-og-lek/test-flag/~overview\">https://simplifier.net/Velferd-test-og-lek/test-flag/~overview</a><br>\nThis one has two timestamps, and one of them is mandatory.<br>\nWhen I try to implement it like this (<a href=\"https://simplifier.net/Velferd-test-og-lek/Flag-example-2/~xml\" target=\"_blank\" title=\"https://simplifier.net/Velferd-test-og-lek/Flag-example-2/~xml\">https://simplifier.net/Velferd-test-og-lek/Flag-example-2/~xml</a>)<br>\n&lt;Flag&gt;<br>\n    &lt;meta&gt;<br>\n        &lt;profile value=\"<a href=\"http://ehelse.no/fhir/vft/STU3/StructureDefinition/test-flag\" target=\"_blank\" title=\"http://ehelse.no/fhir/vft/STU3/StructureDefinition/test-flag\">http://ehelse.no/fhir/vft/STU3/StructureDefinition/test-flag</a>\" /&gt;<br>\n    &lt;/meta&gt;<br>\n    &lt;extension url=\"kodeverdi\"&gt;<br>\n        &lt;extension url=\"<a href=\"http://ehelse.no/fhir/vft/STU3/StructureDefinition/vft-timestamp\" target=\"_blank\" title=\"http://ehelse.no/fhir/vft/STU3/StructureDefinition/vft-timestamp\">http://ehelse.no/fhir/vft/STU3/StructureDefinition/vft-timestamp</a>\"&gt;<br>\n            &lt;valueDateTime value=\"2017-05-09T10:00:00.936+02:00\" /&gt;<br>\n        &lt;/extension&gt;<br>\n    &lt;/extension&gt;<br>\n    &lt;extension url=\"kodeverdi-obligatorisk\"&gt;<br>\n        &lt;extension url=\"<a href=\"http://ehelse.no/fhir/vft/STU3/StructureDefinition/vft-timestamp\" target=\"_blank\" title=\"http://ehelse.no/fhir/vft/STU3/StructureDefinition/vft-timestamp\">http://ehelse.no/fhir/vft/STU3/StructureDefinition/vft-timestamp</a>\"&gt;<br>\n            &lt;valueDateTime value=\"2017-05-09T11:00:00.936+02:00\" /&gt;<br>\n        &lt;/extension&gt;<br>\n    &lt;/extension&gt;<br>\n    &lt;identifier&gt;<br>\n        &lt;value value=\"test-id\" /&gt;<br>\n    &lt;/identifier&gt;<br>\n    &lt;status value=\"active\" /&gt;<br>\n    &lt;code&gt;<br>\n        &lt;text value=\"Bruker utenfor Geofence\" /&gt;<br>\n    &lt;/code&gt;<br>\n    &lt;subject&gt;<br>\n        &lt;identifier&gt;<br>\n            &lt;system value=\"<a href=\"http://ehelse.no/fhir/identifiertypes/FNR\" target=\"_blank\" title=\"http://ehelse.no/fhir/identifiertypes/FNR\">http://ehelse.no/fhir/identifiertypes/FNR</a>\" /&gt;<br>\n            &lt;value value=\"05073500186\" /&gt;<br>\n        &lt;/identifier&gt;<br>\n    &lt;/subject&gt;<br>\n&lt;/Flag&gt;</p>\n<p>The example fails to validate because it supposedly don't contain a \"kodeverdi-obligatorisk\" element.<br>\nERROR on SIMPLIFIER: Instance count for 'Flag.extension:kodeverdi-obligatorisk' is 0, which is not within the specified cardinality of 1..1</p>\n<p>Any help is appreciated.<br>\nThomas</p>",
        "id": 153908713,
        "sender_full_name": "Thomas Tveit Rosenlund",
        "timestamp": 1505471086
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"192856\">@Thomas Tveit Rosenlund</span>, the published vtf-timestamp extension definition on Simplifier has no snapshot component:<br>\n<a href=\"https://simplifier.net/Velferdsteknologi2/vft-timestamp\" target=\"_blank\" title=\"https://simplifier.net/Velferdsteknologi2/vft-timestamp\">https://simplifier.net/Velferdsteknologi2/vft-timestamp</a><br>\nThis seems to trigger the incorrect validation warning. After repeating the validation, Simplifier now correctly reports \"no issues\" ( possibly because the system has now generated an in-memory snapshot).<br>\nI'll report the issue to our team. The validator should report missing required information, instead of generating improper warnings.<br>\nAs a workaround, I suggest you re-upload the extension definition with a snapshot component (i.e. using Forge).<br>\nWe are planning to integrate snapshot generation into Simplifier in the near future, so authors don't need to explicitly perform this step manually.</p>",
        "id": 153908879,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1505738799
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span></p>\n<p>I did actually start to upload the complete snapshots and it seems that this helped. Altough my profiles (from Forge) does not validate correctly on SIMPLIFIER.</p>\n<p>There are missing/old examples of how to use this kind of extensions in profiles and, then how to use this in actual instances. The examples in the doc seems to be old (does not validate) and instance example of profile using extensions are completely missing unfortunately, had me confused.</p>",
        "id": 153908880,
        "sender_full_name": "Thomas Tveit Rosenlund",
        "timestamp": 1505739493
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"192856\">@Thomas Tveit Rosenlund</span>, FYI I've submitted an issue to the FHIR .NET API repository on GitHub:<br>\n<a href=\"https://github.com/ewoutkramer/fhir-net-api/issues/427\" target=\"_blank\" title=\"https://github.com/ewoutkramer/fhir-net-api/issues/427\">https://github.com/ewoutkramer/fhir-net-api/issues/427</a></p>\n<p>Concerning the incorrect examples that you mention, did you find them on the official <a href=\"http://hl7.org/fhir\" target=\"_blank\" title=\"http://hl7.org/fhir\">hl7.org/fhir</a> website? If so, could you please submit an issue to the gGorge FHIR issue tracker to correct the invalid examples?</p>",
        "id": 153908885,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1505739861
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> that looks great. It's a little confusing with a lot of errors that should not be reported from the tools at all :-)</p>\n<p>One example of broken example here: <a href=\"https://www.hl7.org/fhir/extensibility-examples.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/extensibility-examples.html\">https://www.hl7.org/fhir/extensibility-examples.html</a><br>\nThe first example is broken by snipping off two lines of mandatory metadata then there is the code value in element &lt;kind&gt; that is not correct and the mandatory &lt;abstract&gt; is missing. I think it would be a great idea if the complete examples from the online documentation could be downloaded directrly from the documentation pages. Then the users could test it in their own test environment without too much bugfixing first.</p>\n<p>Yes I can take this on gForge FHIR.</p>",
        "id": 153908964,
        "sender_full_name": "Thomas Tveit Rosenlund",
        "timestamp": 1505803272
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"192856\">@Thomas Tveit Rosenlund</span>, I understand your confusion and frustration with broken examples in the spec. I can only encourage you - and everybody else - to report all errors you discover via gForge. It would also be useful if the official build tool would validate all the included examples...</p>",
        "id": 153909247,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1505907426
    },
    {
        "content": "<p>The challenge with validating example fragments is that they're fragments - so not technically valid.  The other challenge is extracting them from the HTML for validation.</p>",
        "id": 153909339,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1505918597
    },
    {
        "content": "<p>That said, anyone who has a strategy is welcome to enhance the build tool.</p>",
        "id": 153909340,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1505918617
    },
    {
        "content": "<p>actually, those things are all done. These examples are not complete enough, and not hooked up</p>",
        "id": 153909534,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505949613
    },
    {
        "content": "<p>How can I add GUI data in the form of extensions to a resource. Is it sensible to group extension, and how would you do it? </p>\n<p>What if i want to add 10 integers into one extension, would I have to encode this as a string or is there a better way to do this?</p>\n<p>Is it possible to search for an extension by URI on a resource?</p>",
        "id": 153920645,
        "sender_full_name": "Mike",
        "timestamp": 1511269630
    },
    {
        "content": "<p>It's possible to define complex extensions which contain other extensions, but that's generally used for elements that must appear as a group or have other co-occurrence relationships.  When defining the extension, you just profile the required child extensions rather than the value.  Certainly allowing multiple distinctly identified integers as child extensions would be better than requiring string parsing.  To search a resource by an extension, you need to define a custom SearchParameter instance and then declare support for that search using your CapabilityStatement.</p>",
        "id": 153920742,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1511280430
    },
    {
        "content": "<p>Hi all, how can I create an extension which will support multiple coding systems? Thank you.</p>",
        "id": 153923353,
        "sender_full_name": "Mounika",
        "timestamp": 1512651501
    },
    {
        "content": "<p>You don't need extensions for that, you just group the coding systems in a valueset and declare that any code from that valueset is supported.</p>",
        "id": 153923356,
        "sender_full_name": "John Moehrke",
        "timestamp": 1512652778
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>  Can you elaborate?</p>",
        "id": 153923357,
        "sender_full_name": "Mounika",
        "timestamp": 1512652958
    },
    {
        "content": "<p>without more information about what you are trying to do... your problem statement was around supporting multiple coding systems, well that is what a valueset can do. a valueset can pull in many coding systems, just as well as it can subset coding systems. That is what it does. My personal experience is with the Security tags  <a href=\"http://build.fhir.org/valueset-security-labels.html\" target=\"_blank\" title=\"http://build.fhir.org/valueset-security-labels.html\">http://build.fhir.org/valueset-security-labels.html</a>  which is many valuesets grouped which each have many codesystems and subsets.</p>",
        "id": 153923360,
        "sender_full_name": "John Moehrke",
        "timestamp": 1512653196
    },
    {
        "content": "<p>But what if we have many coding systems? For example RxNorm, NDC, NDFRT...etc</p>",
        "id": 153923367,
        "sender_full_name": "Mounika",
        "timestamp": 1512653858
    },
    {
        "content": "<p>If you want the instance to include a single code drawn from a choice of multiple code systems, just define a value set that includes codes from whatever code systems are relevant and bind that to the element or extension.  If you want to require that multiple codes be present, each from a different code system, you'll need to slice the CodeableConcept.coding element with a separate binding to a code-system specific value set for each slice.</p>",
        "id": 153923389,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1512662202
    },
    {
        "content": "<p>Yes <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  But our problem is RxClasss has many codes also does NDC, NDFRT etc. So how can I create valuesets for all the coding systems?</p>",
        "id": 153923642,
        "sender_full_name": "Mounika",
        "timestamp": 1512713294
    },
    {
        "content": "<p>I'm not understanding the question.  You don't need to list all of the codes to define a value set.  You can simply define a value set that says \"All NDC codes\".</p>",
        "id": 153923864,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1512778374
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193569\">@Mounika</span> You need to clarify your question. Do you mean <em>all</em> codes from <em>all</em> medication related code system? You can have multiple code systems in Valueset.compose.include</p>",
        "id": 153923936,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1512849908
    },
    {
        "content": "<blockquote>\n<p>I'm not understanding the question.  You don't need to list all of the codes to define a value set.  You can simply define a value set that says \"All NDC codes\".</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  Can you suggest me how to define the value set?</p>",
        "id": 153924189,
        "sender_full_name": "Mounika",
        "timestamp": 1512975567
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193569\">@Mounika</span> you can use <code>Valueset.compose.include.system</code> without anything else:</p>\n<blockquote>\n<p>If a system is specified, the following rules apply:<br>\n no concept or filter: All codes in the system are included</p>\n</blockquote>\n<p>See example: <a href=\"http://hl7.org/fhir/valueset-cpt-all.json.html\" target=\"_blank\" title=\"http://hl7.org/fhir/valueset-cpt-all.json.html\">http://hl7.org/fhir/valueset-cpt-all.json.html</a></p>",
        "id": 153924192,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1512978191
    },
    {
        "content": "<p>Okay <span class=\"user-mention\" data-user-id=\"191363\">@Vadim Peretokin</span>  How can I refer Valueset to the Medication resource?</p>",
        "id": 153924204,
        "sender_full_name": "Mounika",
        "timestamp": 1512981674
    },
    {
        "content": "<p>Do you mean use a valueset in a medication resource?</p>",
        "id": 153924208,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1512983007
    },
    {
        "content": "<p>Yes. How can I refer  Valueset.compose.include.system to Medication resource?</p>",
        "id": 153924211,
        "sender_full_name": "Mounika",
        "timestamp": 1512983528
    },
    {
        "content": "<p>you don't need to do that.  think there's no clarity here about what you're trying to do</p>",
        "id": 153924238,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1512997620
    },
    {
        "content": "<p>That's right. I am totally confused.</p>",
        "id": 153924252,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1513003667
    },
    {
        "content": "<p>I think what you're trying to do is to define a profile on the MedicationResource and indicate the set of allowed codes.  In that case, the valueSet will be declared as the binding on the Medication.code element.</p>",
        "id": 153924270,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1513007557
    },
    {
        "content": "<p>Hi All..<br>\nI want to add extensions for patient entity. I am not able to find the url for Race &amp; Ethnicity while adding extension for the same in fhir for a patient. <br>\nThe old url (i.e. <a href=\"http://hl7.org/fhir/StructureDefinition/us-core-race\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/us-core-race\">http://hl7.org/fhir/StructureDefinition/us-core-race</a> ) is not working. Pls help</p>",
        "id": 153928208,
        "sender_full_name": "Pritpal",
        "timestamp": 1515567425
    },
    {
        "content": "<p>Those are now part of the us-core IG.  E.g. <a href=\"http://hl7.org/fhir/us/core/StructureDefinition-us-core-race.html\" target=\"_blank\" title=\"http://hl7.org/fhir/us/core/StructureDefinition-us-core-race.html\">http://hl7.org/fhir/us/core/StructureDefinition-us-core-race.html</a></p>",
        "id": 153928262,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1515595502
    },
    {
        "content": "<p>Hi everyone. I need to add 2 date fields as extensions to the Patient resource. I've read the documentation on extensibility, but I am unclear on whether the dates can be on the same level? or if one of the dates needs to be an extension of the first date (also an extension)?</p>",
        "id": 178125057,
        "sender_full_name": "Al Buchala",
        "timestamp": 1571076708
    },
    {
        "content": "<p>You can have numerous extensions on any level.  Are your dates patient demographic information?</p>",
        "id": 178127346,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1571078493
    },
    {
        "content": "<p>They're related to intake. Referral and Enrollment date. To provide some context, this is for PACE. When adding a new patient, it needs to include the Referral date and optionally, the patient may already be enrolled. In which case it needs to include the Enrollment date as well.</p>",
        "id": 178128445,
        "sender_full_name": "Al Buchala",
        "timestamp": 1571079247
    },
    {
        "content": "<p>Have you looked at EnrollmentResponse - that's where enrollment is typically tracked.</p>",
        "id": 178139367,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1571087234
    },
    {
        "content": "<p>I had initially looked into the EnrollmentRequest, but not the EnrollmentResponse. I will look at that message.</p>",
        "id": 178142488,
        "sender_full_name": "Al Buchala",
        "timestamp": 1571090044
    },
    {
        "content": "<p>Hi,<br>\nI have created slicing on extensions and below is the structure definition of the sliced part:</p>\n<p>&lt;element id=\"Patient.extension\"&gt;<br>\n        &lt;path value=\"Patient.extension\" /&gt;<br>\n        &lt;slicing&gt;<br>\n            &lt;discriminator&gt;<br>\n                &lt;type value=\"value\" /&gt;<br>\n                &lt;path value=\"url\" /&gt;<br>\n            &lt;/discriminator&gt;<br>\n            &lt;description value=\"Extensions are always sliced by (at least) url\" /&gt;<br>\n            &lt;rules value=\"open\" /&gt;<br>\n        &lt;/slicing&gt;</p>\n<div class=\"codehilite\"><pre><span></span>    &lt;min value=&quot;0&quot; /&gt;\n    &lt;max value=&quot;*&quot; /&gt;\n    &lt;base&gt;\n        &lt;path value=&quot;DomainResource.extension&quot; /&gt;\n        &lt;min value=&quot;0&quot; /&gt;\n        &lt;max value=&quot;*&quot; /&gt;\n    &lt;/base&gt;\n    &lt;type&gt;\n        &lt;code value=&quot;Extension&quot; /&gt;\n    &lt;/type&gt;\n\n&lt;/element&gt;\n&lt;element id=&quot;Patient.extension:dhb&quot;&gt;\n    &lt;path value=&quot;Patient.extension&quot; /&gt;\n    &lt;sliceName value=&quot;dhb&quot; /&gt;\n\n    &lt;min value=&quot;0&quot; /&gt;\n    &lt;max value=&quot;1&quot; /&gt;\n    &lt;base&gt;\n        &lt;path value=&quot;DomainResource.extension&quot; /&gt;\n        &lt;min value=&quot;0&quot; /&gt;\n        &lt;max value=&quot;*&quot; /&gt;\n    &lt;/base&gt;\n    &lt;type&gt;\n        &lt;code value=&quot;Extension&quot; /&gt;\n        &lt;profile value=&quot;http://somevalue/dhb&quot; /&gt;\n    &lt;/type&gt;\n\n&lt;/element&gt;\n</pre></div>\n\n\n<p>The slicing was done to create dhb(which is of the type <strong>CodableConcept</strong>) but in the above structure definition there is no where mentioned that it is of type Codeable concept and type is mentioned as Extension.<br>\nHow does validation works in these case ?</p>",
        "id": 187990143,
        "sender_full_name": "PS",
        "timestamp": 1581496336
    },
    {
        "content": "<p>The validator tries to retrieve the profile <a href=\"http://somevalue/dhb\" target=\"_blank\" title=\"http://somevalue/dhb\">http://somevalue/dhb</a> or find it declared within the current or dependency ig.  That profile should have declared a fixed URL (or possibly a value set of allowed URL values - though that wouldn't make much sense for extensions).  If it can't find the extension's profile, the validator will complain.</p>",
        "id": 188018400,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1581520334
    },
    {
        "content": "<p>We have created an extension which is supposed to be mandatory. Therefore the cardinality in forge is set to mandatory for the extension. The problem however is that I can make the extension mandatory(1..1) but when uploding the profile to simplifier the extension I created lies within the extension element. This extension element has the cardinality 0..* and I have not managed to change this cardinality. <br>\nThe problem is that we now have a problem when validating the profile because we do not get an error if the extension is missing since the extension element is not mandatory even if the actual extension I profiled is mandatory. </p>\n<p>I hope I have made it understandable</p>",
        "id": 226484500,
        "sender_full_name": "Ludvig Eek Hofmann",
        "timestamp": 1613463818
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"261302\">@Ludvig Eek Hofmann</span>, we recently noticed this issue. When making an extension mandatory (or any other mandatory slicing, since adding extensions is under the hood just slicing the extensions array) Forge does not update the cardinality of the extension element itself. We'll start auto-calculating that extensions cardinality for you soon in Forge.</p>\n<p>Do you have a link to an example where the validator does not complain about the missing mandatory extension? Because in my understanding the validator basically ignores the cardinality of the extension element and treats those slices as mandatory, even if cardinality of extension is <code>0..*</code>. For instance, with <a href=\"https://simplifier.net/touchstonedemoproject/patient01-noextensions/$validate\">this Patient example</a>, which is based on <a href=\"https://simplifier.net/TouchstoneDemoproject/PatientMandatoryExtensions-duplicate-3/~overview\">this Patient profile having the <code>0..*</code> on extensions</a>.</p>",
        "id": 226501250,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1613474456
    },
    {
        "content": "<p>dose any one have mysql schema for FHIR ?</p>",
        "id": 226504613,
        "sender_full_name": "Rashed omar",
        "timestamp": 1613476911
    },
    {
        "content": "<p>Hi !</p>",
        "id": 226506589,
        "sender_full_name": "Rashed omar",
        "timestamp": 1613478200
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"390060\">@Rashed omar</span> , please don't raise a question multiple times - all participants on this forum are volunteers, you should give them an opportunity to respond (let's say 24 hours) befoire attempting to raise the issue again. Your question is unrelated to the topic of this discussion, please raise a new topic. Please read <a href=\"https://wiki.hl7.org/FHIR_Rules_for_asking_questions\">https://wiki.hl7.org/FHIR_Rules_for_asking_questions</a> as well. Thank you, and welcome!</p>",
        "id": 226519583,
        "sender_full_name": "RenÃ© Spronk",
        "timestamp": 1613485930
    },
    {
        "content": "<p>Hi, I'm a bit confused on what is the best practices on where to put an extension. Suppose I have 3 data elements that I want to extend from a particular resource. It seems like I have 3 options.</p>\n<p>1) Add 3 elements as resource level extensions.<br>\n2) Add 1 complex element (with 3 children) as a resource level extension.<br>\n3) Add 1 element in 3 separate elements (element level extensions).</p>\n<p>I wonder which option is appropriate for which situation? </p>\n<p>I looked at some IGs. It seems like most of the time they go for option 1. And I feel like it's the most flexible one. Maybe I can re-use that extension in other extension. It also make all extension elements stay inside the same place (unlike option 3).</p>",
        "id": 246121229,
        "sender_full_name": "Rath Panyowat",
        "timestamp": 1626367103
    },
    {
        "content": "<p>Only use a complex extension if the three elements are intertwined and will generally always go together or will have interdependencies.  As a general rule, you want extension definitions as shallow as possible.  Also, when you add extensions, you should nest them inside the relevant element if they're tied to an element.  Only put things at the resource root if they're not directly tied to one of the elements.</p>",
        "id": 246125325,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1626368914
    },
    {
        "content": "<p>practically speaking three extension are easier to manage than complex one unless they are interdependent.</p>",
        "id": 246133841,
        "sender_full_name": "Eric Haas",
        "timestamp": 1626372644
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span>  Thank you very much. Your comment  make it more clear for me <span aria-label=\"big smile\" class=\"emoji emoji-1f604\" role=\"img\" title=\"big smile\">:big_smile:</span></p>",
        "id": 246136260,
        "sender_full_name": "Rath Panyowat",
        "timestamp": 1626373764
    },
    {
        "content": "<p><a href=\"https://www.hl7.org/fhir/extensibility.html#Extension\">https://www.hl7.org/fhir/extensibility.html#Extension</a><br>\nWe're trying to create new extensions in our project, so I'd like to ask if anyone knows what the naming convention of the URL field is?</p>",
        "id": 247926422,
        "sender_full_name": "Naji Naser",
        "timestamp": 1627914726
    },
    {
        "content": "<p>For example, {BaseUrl}/{extentionName}/{resource} ?!</p>",
        "id": 247927004,
        "sender_full_name": "Naji Naser",
        "timestamp": 1627915057
    },
    {
        "content": "<p>In most cases, the URLs follow the RESTful FHIR convention as that allows the extension definitions to be hosted on a regular server - e.g. \"[base]/StructureDefinition/some-id\".  I personally start all of my extension ids with \"ext-\" because that makes them sort nicely in my source folders when developing IGs.  But there's no formal rule to do that - and the extensions defined in the core spec don't follow any particular pattern.</p>",
        "id": 247930550,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1627916823
    }
]