[
    {
        "content": "<p>Should an update of a resource, were nothing is changed, create a new history entry? In Blaze, I skip all updates which do not change the resource and just return the existing version. However the Touchstone test /FHIR4-0-1-Basic/A-C/ConceptMap/Client Assigned Id/ConceptMap-client-id-json expects a new version of the resource after an update with identical content.</p>\n<p>My motivation for not creating a new history entry is the following: If I have an ETL process which transfers resources from another store into my store, it doesn't need to keep track of what changed. The ETL process can simply update all resources it knowns, even if nothing changed. In my FHIR server such updates would not create additional database entries and so are essential no-ops, costing no additional storage.</p>",
        "id": 196603980,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1588754811
    },
    {
        "content": "<p>Does the update change the metadata e.g. lastUpdated?</p>",
        "id": 196604483,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1588755147
    },
    {
        "content": "<p>The lastUpdated metadata is created by the server. So the client can't set it. In my case there is no new lastUpdated because I create no new history entry. I know that is a disadvantage, because the fact that someone \"updated\" a resource recently is lost.</p>",
        "id": 196607420,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1588756686
    },
    {
        "content": "<p>The server has a choice.  It can change the eTag and the lastUpdated or it can leave them the same</p>",
        "id": 196649910,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1588778314
    },
    {
        "content": "<p>It SHOULD NOT reject the update</p>",
        "id": 196649938,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1588778330
    },
    {
        "content": "<p>I think it should create a new history entry, in general. For the specific ETL case it makes sense that you don't need a new entry but if a clinical system thought it was important to tell us that the current state of the world was X, we should record that even if the previous state of the world happened to be X as well.</p>",
        "id": 196651425,
        "sender_full_name": "Paul Church",
        "timestamp": 1588778860
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197072\">@Paul Church</span> At the end, I think you are right. I will remove that optimization after I have a clear view of a better ETL process. Will check whether conditional update can help here.</p>",
        "id": 196670263,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1588786643
    }
]