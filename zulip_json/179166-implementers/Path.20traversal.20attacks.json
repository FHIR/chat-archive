[
    {
        "content": "<p>Has anyone encountered a FHIR client, parser, API managers, etc. that will error if two sequential periods \"..\" are found in the FHIR url? </p>\n<p>My question comes from someone using some sort of middleware which errors if the FHIR id contains two periods in a row \"..\" - as it considers it a potential path traversal security attack (even though path traversal attacks are \"../\")</p>\n<p>Example read that causes the failure:<br>\n<a href=\"https://baseurl/Patient/Pdiq..dQID\" target=\"_blank\" title=\"https://baseurl/Patient/Pdiq..dQID\">https://baseurl/Patient/Pdiq..dQID</a><br>\nWhere Pdiq..dQID is a patient FHIR id.</p>\n<p>I'm curious if others have come across similar checks or if this is a one off case.</p>",
        "id": 153953291,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1524179113
    },
    {
        "content": "<p>Where I read about path traversal attacks: <a href=\"https://www.owasp.org/index.php/Path_Traversal\" target=\"_blank\" title=\"https://www.owasp.org/index.php/Path_Traversal\">https://www.owasp.org/index.php/Path_Traversal</a></p>",
        "id": 153953292,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1524179141
    },
    {
        "content": "<p>it would be an error if there is a sequential period outside a search parameter value</p>",
        "id": 153953306,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524184089
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  can you clarify? You're saying - it is valid for a search parameter to have a sequential period. If there are sequential periods elsewhere, that is not allowed.</p>",
        "id": 153953399,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1524234602
    },
    {
        "content": "<p>So a read ID with sequential periods is acceptable</p>",
        "id": 153953400,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1524234617
    },
    {
        "content": "<blockquote>\n<p>So a read ID with sequential periods is acceptable</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191914\">@Danielle Friend</span>  Path traversal attack is possible if you traverse something which can be navigated with typical path syntax.  FHIR resources are not organized in hierarchy which have predictable nesting levels, in fact there is fhir server root (<code>https://example.com/dstu3/</code>), resource type (<code>Patient</code>) and its identifier (<code>Pdiq</code>). There is no correlation between identifier and server root so you can not move \"up\" from identifier value to patient. Specification defines what is proper identifier and what should be accepted, in principle switching paths usualy requires slash which will then be interpted by server to go deeper into resource (ie to fetch its historical representation) but not up.<br>\nSuch kind of attack is very popular for web applications displaying resources located on the disk and in theory, somewhere out there might be a FHIR server implementation which is relying on static files. If it will not parse properly identifiers (specified after resource type) then it will be vulnerable.<br>\nHowever specification itself can not address such things because how identifiers are handled depends on actual provider implementation.</p>",
        "id": 153953407,
        "sender_full_name": "≈Åukasz Dywicki",
        "timestamp": 1524236276
    },
    {
        "content": "<p>I don't think the question was whether there's a real risk in terms of how FHIR is designed.  The issue is that an implementation has decided to mitigate the risk of traversal path attacks in general by banning URLs that contain \"..\".  So the question is whether that's going to create grief.  The answer seems to be \"only if you're doing a search and the value of one of your search parameters contains '..'\", which seems like a pretty remote edgecase.</p>",
        "id": 153953410,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1524236667
    },
    {
        "content": "<p>Exactly <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  - have you heard of any other implementations having a problem with this?</p>",
        "id": 153954860,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1524867233
    },
    {
        "content": "<p>Because our FHIR patient IDs can have '..' (just as likely as having any 2 characters in a row), there will be cases where any search by patient has '..' in the search query.</p>",
        "id": 153954861,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1524867520
    },
    {
        "content": "<p>I haven't, but I don't generally play in circles where I would have...</p>",
        "id": 153954865,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1524870229
    },
    {
        "content": "<p>because of the way that I process paths, it will not be a problem for me. but I guess if you have a file based server, you'd need to ensure that your server either stopped checking for .. at the first ? or that you didn't create ids with a .. in them</p>",
        "id": 153954870,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524873050
    },
    {
        "content": "<p>I would expect any identifier in the URL path to be URL encoded. This includes forward slashes, etc</p>",
        "id": 153955468,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1525291625
    },
    {
        "content": "<p>I suspect that your expectations would often not be met. but '.' would not be escaped by any library I know</p>",
        "id": 153956104,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525495532
    }
]