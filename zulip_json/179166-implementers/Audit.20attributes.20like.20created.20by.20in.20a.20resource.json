[
    {
        "content": "<p>Team,</p>\n<p>We have use-case to record and display the information of who created a resource and when it got created, also when the record was last updated and by which user?</p>\n<p>basically, looking for below 4 attributes which usually performed in a relational model,</p>\n<p>createdBy<br>\ncreatedDate <br>\nupdatedBy<br>\nupdatedDate -- meta._lastUpdated</p>\n<p>The options what we have right now would be, to go for the history/1 to get the created date and for createdBy/updatedBy, we have get it from the Audit trail for each resource which will be very expensive and not efficient.</p>\n<p>We are thinking, can this be part of the each resource itself in addition to _lastUpdated, we would like to here others thought and also would like to see, if we have any other suggestions to it.</p>\n<p>Thanks,<br>\nVijay</p>",
        "id": 153999574,
        "sender_full_name": "Vijay Thangavelu",
        "timestamp": 1537823324
    },
    {
        "content": "<p>We've definitely considered bringing this up as an extension or change for the Meta resource.  I suspect there is general widespread support, as long as it's properly scoped; things are optional, etc.  (Some systems may simply not track all of that data.)</p>",
        "id": 153999575,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1537823479
    },
    {
        "content": "<blockquote>\n<p>4 attributes which usually performed in a relational model,</p>\n</blockquote>\n<p>I do not believe that 'usually' is appropriate in that sentence. I've certainly seen that, but i've seen many variations</p>",
        "id": 153999618,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1537827344
    },
    {
        "content": "<p>A particular approach that meets your particular requirements would no doubt be more efficient for you, but I think that it would be less efficient for the general case</p>",
        "id": 153999620,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1537827416
    },
    {
        "content": "<p>though you always have extensions</p>",
        "id": 153999621,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1537827421
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191678\">@Abigail Watson</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ,  Yes we can go with extension for Meta which would be helpful, we thought this will be basic model for most of the implementations if not all.  </p>\n<p><span class=\"user-mention\" data-user-id=\"192495\">@Radu Craioveanu</span> - do you have any other thoughts/question on this context.<br>\n<span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span></p>",
        "id": 153999635,
        "sender_full_name": "Vijay Thangavelu",
        "timestamp": 1537828755
    },
    {
        "content": "<p>I'm reluctant to add something as an extension which is clearly already covered by core - via the Provenance resource.  The notion of \"created\" is a tricky one too.  Are you interested in the creation of the business object or the creation of the record on that particular server?  (The two aren't necessarily the same).</p>",
        "id": 153999650,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1537833282
    },
    {
        "content": "<p>primarily creation/updating of the record on that particular server.</p>\n<p>We do use Provenance in one context when physician explicitly signing (approving an object) but not for every updates.</p>",
        "id": 153999683,
        "sender_full_name": "Vijay Thangavelu",
        "timestamp": 1537843274
    },
    {
        "content": "<p>We use auditevent</p>",
        "id": 153999710,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1537866696
    }
]