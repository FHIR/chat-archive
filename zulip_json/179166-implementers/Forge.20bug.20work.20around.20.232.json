[
    {
        "content": "<p>If you are trying to develop profiles using Forge 16.1 that involve handling value[x] cases you are likely running into several problems. These problems become messy when you get into components of an Observation. What happens depends upon the value[x] type one chooses, and it is not consistent as I have found when introducing multiple components. There is an additional secondary problem that I have noticed and that is that element id attributes get dropped.<br>\nThe best way to deal with this is to have a program like WinMerge that diffs two files side by side. One side will have the file prior to Forge handling it and the second file will be the file updated by Forge. You will find that forge deletes or loses elements when it updates which will give you a corrupted structure definition on reload. But the diff program allows you to restore the stuff that was lost, recovering your previous work.<br>\nIt is tedious but allows you to go forward.<br>\nThe major element sets that get dropped are fields like the following:<br>\n    &lt;element id=\"Observation.component:supplementalTypesComponent.value[x]:valueCodeableConcept\"&gt;<br>\n      &lt;path value=\"Observation.component.valueCodeableConcept\" /&gt;<br>\n      &lt;sliceName value=\"valueCodeableConcept\" /&gt;<br>\n      &lt;definition value=\"The information determined as a result of making the observation, if the information is a code.\" /&gt;<br>\n      &lt;min value=\"1\" /&gt;<br>\n      &lt;type&gt;<br>\n        &lt;code value=\"CodeableConcept\" /&gt;<br>\n      &lt;/type&gt;<br>\n    &lt;/element&gt;<br>\n    &lt;element&gt;<br>\nBut I have also noticed that elements like this<br>\n&lt;element id=\"Observation.component:supplementalTypesComponent.code.coding:11073MeasurementType.display\"&gt;<br>\nbecome <br>\n&lt;element &gt;<br>\nwhich does not corrupt your structure definition on reload but a lot of info gets lost.</p>",
        "id": 153895307,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1498573688
    }
]