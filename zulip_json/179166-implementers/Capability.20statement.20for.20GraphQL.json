[
    {
        "content": "<p>Its not clear how can a capability statement be assigned to GraphQL servers from the FHIR Spec. For other servers the /metadata is used. Should we query the CapabilityStatement resource instead, from the /$GraphQL endpoint ? Any guidance from other implementers is appreciated</p>",
        "id": 228189323,
        "sender_full_name": "Venu Gopal",
        "timestamp": 1614582463
    },
    {
        "content": "<p>The /metadata endpoint exposes that CapabilityStatement that applies to that specific server 'right now'.  Accessing that endpoint is not a search and that endpoint must be available on all servers, regardless of whether they support CapabilityStatement or not.    The $graphql endpoint allows you to search, so it's only useful at retrieving data that's available for searching.  You could use it to retrieve CapabilityStatements if the system happened to expose a CapabilityStatement endpoint (i.e. it served as a registry of CapabilityStatements) and happened to support graphQL.</p>",
        "id": 228239751,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1614609178
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179166-implementers/topic/Capability.20statement.20for.20GraphQL/near/228239751\">said</a>:</p>\n<blockquote>\n<p>The /metadata endpoint exposes that CapabilityStatement that applies to that specific server 'right now'.  Accessing that endpoint is not a search and that endpoint must be available on all servers, regardless of whether they support CapabilityStatement or not.    The $graphql endpoint allows you to search, so it's only useful at retrieving data that's available for searching.  You could use it to retrieve CapabilityStatements if the system happened to expose a CapabilityStatement endpoint (i.e. it served as a registry of CapabilityStatements) and happened to support graphQL.</p>\n</blockquote>\n<p>Thank you <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  missed your response. your clarification helps. I missed your response. I would like to state $graphql also supports CUD via mutations. Is that not be done as per the FHIR standard ?</p>",
        "id": 241608980,
        "sender_full_name": "Venu Gopal",
        "timestamp": 1622856626
    },
    {
        "content": "<p>CUD?</p>",
        "id": 241611110,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1622860015
    },
    {
        "content": "<p>Create, Update, Delete :-)</p>",
        "id": 241612412,
        "sender_full_name": "Venu Gopal",
        "timestamp": 1622862281
    },
    {
        "content": "<p>Ah, was missing the 'R' I'm used to.  There's no specific ability in CapabilityStatement to talk about GraphQL feature support.  Presumably we could come up with a 'feature' way to do it using the CapabilityStatement2 approach, and that would probably be the preferred approach as we don't want to make CapabilityStatement more complex than it already is.</p>",
        "id": 241612493,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1622862412
    },
    {
        "content": "<p>Yeah, sorry my bad. Thank you for your response</p>",
        "id": 241612550,
        "sender_full_name": "Venu Gopal",
        "timestamp": 1622862486
    },
    {
        "content": "<p>I think there are two parts you might want here:</p>\n<ol>\n<li>\n<p>Use the standard mechanism for advertising support for operations to indicate that you support <a href=\"https://www.hl7.org/fhir/resource-operation-graphql.html\">https://www.hl7.org/fhir/resource-operation-graphql.html</a> -- i.e., your <code>GET /metadata</code> response would include an entry for the $graphql operation in <code>CapabilityStatement.rest.operation</code> (and possibly also at the resource level)</p>\n</li>\n<li>\n<p>At your graphql endpoint, support graphql introspection queries to let clients discover which queries and mutations are supported, as well as rest of your schema details, per <a href=\"https://graphql.org/learn/introspection/\">https://graphql.org/learn/introspection/</a></p>\n</li>\n</ol>",
        "id": 241662046,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1622937256
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>  I am going to do the first, will check the second as well</p>",
        "id": 241664718,
        "sender_full_name": "Venu Gopal",
        "timestamp": 1622941858
    }
]