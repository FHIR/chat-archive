[
    {
        "content": "<p>Is curl a  valid fhir client? Meaning that issuing an request that looks like this: <a href=\"http://1.1.1.1/Patient?family=MOORE&amp;given=CHIP\" target=\"_blank\" title=\"http://1.1.1.1/Patient?family=MOORE&amp;given=CHIP\">http://1.1.1.1/Patient?family=MOORE&amp;given=CHIP</a> with the acceptheader set to */*?</p>",
        "id": 153881092,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1491481792
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191610\">@Paul Lomayesva</span> </p>",
        "id": 153881093,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1491481834
    },
    {
        "content": "<p>Not 100% sure of what are you asking, but some FHIR server are picky about the Accept header - .e.g. the Cerner FHIR server wants application/json (or application/fhir+json)</p>",
        "id": 153881145,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1491502375
    },
    {
        "content": "<p>in theory you dont need to specify which kind of encoding you want returned (aka */*) ,but then you are at the whim of the server. Some might chose json, some might chose xml, some might chose turtle, some might chose html rendered, etc... the whole purpose of accept headers is to provide preference. Use the _format if you can't affect the accept headers .</p>",
        "id": 153881148,
        "sender_full_name": "John Moehrke",
        "timestamp": 1491505489
    },
    {
        "content": "<p>This kind of thing has worked for me before.</p>\n<div class=\"codehilite\"><pre>curl --silent --show-error --data \\@fhir-bundle.xml --header &quot;Content-Type: application/fhir+xml&quot; http://localhost:8080/baseDstu3\n</pre></div>",
        "id": 153881168,
        "sender_full_name": "Joel Schneider",
        "timestamp": 1491512403
    },
    {
        "content": "<p>I don't know what my server would do with an accept like that - it's never occured to me test it. But John is right</p>",
        "id": 153881181,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1491515254
    },
    {
        "content": "<p>curl was just an example. I get that the server can respond in any format that it favours, and thats the whole point. If my client really supports any kind of format (ie. turtle, json, html, xml, whatever) is it still considered a valid request? I'm asking because of course */* contains all types, but its use/validity is not stated on <a href=\"http://build.fhir.org/http.html#mime-type\" target=\"_blank\" title=\"http://build.fhir.org/http.html#mime-type\">http://build.fhir.org/http.html#mime-type</a></p>",
        "id": 153881261,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1491555690
    },
    {
        "content": "<p>What is stated is 'The correct mime type SHALL be used by clients ... ' - I would claim that since */* is all mime types, it is correct</p>",
        "id": 153881267,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1491559102
    },
    {
        "content": "<p>well, it's not wrong. But it's not what the standard describes, so outcome is unpredictable</p>",
        "id": 153881272,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1491561552
    },
    {
        "content": "<p>Jens what is the problem you see? We have expressed that it is not wrong, and the outcome is in the hands of the server. I think getting more prescriptive is not helpful, and could be fragile too.</p>",
        "id": 153881286,
        "sender_full_name": "John Moehrke",
        "timestamp": 1491565867
    },
    {
        "content": "<p>The problem as I see it is that the standard in its wording is too restrictive on this point. The phrase \"The correct mime type SHALL be used by clients and servers:\" (and then the mime types are listed) is not necessary as it leaves little room for using e.g.  */* as an accept-header from a client that is willing to accept whatever format is returned. Also, as it is stated afterwards \"Servers SHALL support server-driven content negotiation as described in section 12  of the HTTP specification.\" basically means that */* is acceptable as accept-headers MAY be used to assist the server. I just tried a request against the HAPI implementation and it default back to json, but does that mean that the HAPI implementation violates the standard? IMHO, I think not</p>",
        "id": 153881418,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1491602359
    },
    {
        "content": "<p>what that means is that implementations (particularly servers) have know and use the right MIME types for FHIR resources. It wasn't meant to exclude doing things like */* for accept. You could create a task to calrify.</p>",
        "id": 153881487,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1491705710
    },
    {
        "content": "<p>Jens, if */* is what the client system sees as 'correct', then it is correct.  </p>",
        "id": 153881504,
        "sender_full_name": "John Moehrke",
        "timestamp": 1491756308
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> - not the way I'm reading the standard the way it is written right now. <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  I'll submit a task</p>",
        "id": 153881516,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1491773391
    }
]