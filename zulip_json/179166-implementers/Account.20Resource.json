[
    {
        "content": "<p>Hi all,<br>\nAccount resource which is in R3 has Account.balance element. But, in R4 Account.balance was removed. I am unable to find which elemet replaces Account.balance. Can anyone suggest me.<br>\nThanks in advance.</p>",
        "id": 164059287,
        "sender_full_name": "Mounika",
        "timestamp": 1556089703
    },
    {
        "content": "<blockquote>\n<p>Hi all,<br>\nAccount resource which is in R3 has Account.balance element. But, in R4 Account.balance was removed. I am unable to find which elemet replaces Account.balance. Can anyone suggest me.<br>\nThanks in advance.</p>\n</blockquote>\n<p>According to this page: <a href=\"http://hl7.org/fhir/diff.html\" target=\"_blank\" title=\"http://hl7.org/fhir/diff.html\">http://hl7.org/fhir/diff.html</a>, I don't think there's any replacement.</p>",
        "id": 164062282,
        "sender_full_name": "Phillip Liu",
        "timestamp": 1556093540
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"219312\">@Phillip Liu</span>  which element we need to use for Account.balance in R4?</p>",
        "id": 164064332,
        "sender_full_name": "Mounika",
        "timestamp": 1556096097
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> ?</p>",
        "id": 164085012,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556115992
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span></p>",
        "id": 164085021,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556115999
    },
    {
        "content": "<p>The discussion around this was that balance was more likely to be an operation or something similar as the balance is very transient.</p>",
        "id": 164124541,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1556143993
    },
    {
        "content": "<p>But I believe there will be discussion in Montreal on this issue</p>",
        "id": 164124611,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1556144067
    },
    {
        "content": "<p>And it's effect on the history of the resource itself.</p>",
        "id": 164124648,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1556144126
    },
    {
        "content": "<p>We concluded that the balance of an Account is hard to maintain. If you wanted to have a reliable balance on the Account, you'd have to make sure, that it's being recalculated every time a ChargeItem is added, updated or deleted.<br>\nIt makes much more sense, to calculate the balance only when it is needed, e.g. for the generation of a Claim or an Invoice. You can store the result of your calculations in Invoice.totalNet or Invoice.totalGros</p>",
        "id": 164166415,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1556196279
    },
    {
        "content": "<p>I will log a tracker about this. If a system is always going to calculate the balance why couldn't that just be an attribute of the resource instead of requiring some operation?</p>",
        "id": 164168063,
        "sender_full_name": "Drew Torres",
        "timestamp": 1556197659
    },
    {
        "content": "<p>You can only update one resource at a time.  If you post a new ChargeItem, the Account.balance would be out-of-date as soon as the ChargeItem is posted until the Account gets updated</p>",
        "id": 164173785,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556201692
    },
    {
        "content": "<p>The system implementing account can chose to update the resource/database tables immediately using database triggers.</p>",
        "id": 164175002,
        "sender_full_name": "Drew Torres",
        "timestamp": 1556202480
    },
    {
        "content": "<p>The field should still live on the resource even if you would impose the use of an operation to force the field to be populated.</p>",
        "id": 164175102,
        "sender_full_name": "Drew Torres",
        "timestamp": 1556202528
    },
    {
        "content": "<p>Let's play this out: An API consumer sends an operation to request the balance. WHat do you expect the response of the that operation to be? An extension, a string, operation outcome? I would expect the response to be an account with the field populated.</p>",
        "id": 164175311,
        "sender_full_name": "Drew Torres",
        "timestamp": 1556202634
    },
    {
        "content": "<p>FHIR needs to allow for systems where the only updates possible are via REST.</p>",
        "id": 164175511,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556202761
    },
    {
        "content": "<p>The response to a \"calculate balance\" operation would be a Parameters resource containing a Money</p>",
        "id": 164175557,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556202809
    },
    {
        "content": "<p>Can you clarify that statement? Updates only possible via REST are not realistic, but I may not understand the statement. Can you elaborate?</p>",
        "id": 164175893,
        "sender_full_name": "Drew Torres",
        "timestamp": 1556203036
    },
    {
        "content": "<p>In FHIR, we try to ensure that the interface <em>can</em> function such that all updates happen through the RESTful API.  If that's not possible, then we've broken something.  That doesn't mean that you have to operate that way, only that it's <em>possible</em> to operate that way.</p>",
        "id": 164176435,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556203432
    },
    {
        "content": "<p>Is the concern that in theory you cannot directly update the balance on account?</p>",
        "id": 164177218,
        "sender_full_name": "Drew Torres",
        "timestamp": 1556203928
    },
    {
        "content": "<p>The concern is that the balance is intrinsicly tied to updates to other resources.  We try very hard in FHIR to ensure that making an update to one resource never requires a simultaneous update to another resource to keep things \"consistent\".  (That's also the reason why relationships only exist in one direction.)</p>",
        "id": 164177645,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556204193
    },
    {
        "content": "<p>The relationship requirement has put us in the exact position you describe. Encounter/appoint have a issues like that for us. Some of that is due the nature of our EHR implementation. Example would be an appoint update via an API call automatically cancels the encounters associated.</p>",
        "id": 164178013,
        "sender_full_name": "Drew Torres",
        "timestamp": 1556204409
    },
    {
        "content": "<p>Due the way the relationship is handled in FHIR. We require the API consumer to make 3 calls to complete the workflow of scheduling. Create appointment, create encounter, and update appointment with the encounter just written.</p>",
        "id": 164178065,
        "sender_full_name": "Drew Torres",
        "timestamp": 1556204454
    },
    {
        "content": "<p>I logged: <a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20972&amp;start=0\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20972&amp;start=0\">https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20972&amp;start=0</a> to discuss in person.</p>",
        "id": 164189582,
        "sender_full_name": "Drew Torres",
        "timestamp": 1556212165
    },
    {
        "content": "<p>Hello! I am a first-time poster so please forgive me if I haven't found the correct space. </p>\n<p>We're struggling to make a decision on how to provide balance and a 3rd party integrator has indicated that other vendors give them an extension on the Account Resource for the balance. Has any further discussion happened on this topic that isn't captured here?</p>",
        "id": 217061882,
        "sender_full_name": "Shannon Locklear",
        "timestamp": 1605646762
    },
    {
        "content": "<p>Welcome :)</p>\n<p>The main reason that Account doesn't have a balance is that every time a new transaction gets posted, the balance would change, and in a RESTful design, you don't want to force updating one resource to automatically force a change to another.  The most natural way to get the 'current balance' would be an operation, though it doesn't look like a standard one has been defined.  You could certainly submit a change request for that.  An extension is also possible, but in general, you don't want people to change the balance on an account by updating the Account.</p>\n<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> for any other context?</p>",
        "id": 217062683,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1605647166
    }
]