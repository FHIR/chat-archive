[
    {
        "content": "<p>What is the Patient search behavior when the client does not include the 'active' query parameter? Does this imply only active Patient resources should be queried? It would seem otherwise all queries on Patient must most of the time indicate active as not false. </p>",
        "id": 153881357,
        "sender_full_name": "John Moehrke",
        "timestamp": 1491585607
    },
    {
        "content": "<p>I would assume that if not specified in the query, then both active &amp; inactive Patients would be returned, and it would be up to the client to process them...</p>",
        "id": 153881367,
        "sender_full_name": "David Hay",
        "timestamp": 1491593218
    },
    {
        "content": "<p>In theory a server could \"add\" a default filter, but if they were doing so they'd have to declare it.  And I would generally consider that poor practice</p>",
        "id": 153881429,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1491609936
    },
    {
        "content": "<p>well, there is a problem... I don't disagree with either of your answers... but, it is indeed a problem.... SO IHE PDQm would now need to specify the use of this query parameter... and everyone should be careful of the results they get back, as they might be getting back something that is not active.</p>",
        "id": 153881507,
        "sender_full_name": "John Moehrke",
        "timestamp": 1491756533
    },
    {
        "content": "<p>especially true if the server doesn't support the active query parameter....</p>",
        "id": 153881508,
        "sender_full_name": "John Moehrke",
        "timestamp": 1491756558
    },
    {
        "content": "<p>Well ... you always need to be careful. Regardless, the value of the attribute is reflected on each of the patient resources returned</p>",
        "id": 153881519,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1491774571
    },
    {
        "content": "<p>I think this is especially problematic when the element isModifier true.</p>",
        "id": 153881594,
        "sender_full_name": "John Moehrke",
        "timestamp": 1491828872
    },
    {
        "content": "<p>Is this any different from other searches which could return entered-in-error or completed resources?</p>",
        "id": 153881608,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1491841283
    },
    {
        "content": "<p>In our fhir implementation, we would NOT return inactive in any resource (this is logically different than \"entered in error\") since this is essentially resources that have been logically deleted</p>",
        "id": 153881611,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1491844736
    },
    {
        "content": "<p>if you read by id, and it's inactive, we reference the record that replaced this patient</p>",
        "id": 153881612,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1491844769
    },
    {
        "content": "<p>but wouldn't return any other data about that patient, since it should no longer be used anywhere</p>",
        "id": 153881613,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1491844821
    },
    {
        "content": "<p>This is probably something that should be on the safety checklist? I know it applies to patient - and likely other resources that have the concept of active vs inactive</p>",
        "id": 153881614,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1491845011
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> so, then you interpret a missing query parameter for active, to be a request for those that are not inactive? I think this is logical, but not obvious.  Coming from DSTU2, this active modifier is new, and now (STU3) seems the active parameter is about as close to a required query parameter as there is... </p>",
        "id": 153881615,
        "sender_full_name": "John Moehrke",
        "timestamp": 1491845879
    },
    {
        "content": "<p>We do not support that query parameter at all</p>",
        "id": 153881616,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1491845921
    },
    {
        "content": "<p>which is documented both on our readable doc and conformance/capability</p>",
        "id": 153881618,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1491845948
    },
    {
        "content": "<p>Again, I think this is closer to what most systems would do when something is logically deleted - you wouldn't normally expect to get those items back when, say, the reg nurse queries by name</p>",
        "id": 153881620,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1491846056
    },
    {
        "content": "<p>deleted is different than active=false... deleted is a CRUD operation, and part of version lifecycle. active element is somehow different. I am confused on how it is different, but it has shown up in STU3.</p>",
        "id": 153881621,
        "sender_full_name": "John Moehrke",
        "timestamp": 1491846608
    },
    {
        "content": "<p>by 'not support', that would mean you would ignore gracefully if a client included the active parameter... right?</p>",
        "id": 153881622,
        "sender_full_name": "John Moehrke",
        "timestamp": 1491846639
    },
    {
        "content": "<p>Correct, though in STU 3 there's also the Prefer header where someone could tell us to fail :) </p>",
        "id": 153881623,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1491846772
    },
    {
        "content": "<p>Still feels like this is part of the safety checklist... <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  - Thoughts on above?</p>",
        "id": 153881624,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1491846815
    },
    {
        "content": "<p>wow, thanks for more lessons-learned... prefer header seems useful, but also seems rather dangerous...</p>",
        "id": 153881627,
        "sender_full_name": "John Moehrke",
        "timestamp": 1491847239
    },
    {
        "content": "<p>I do agree, safety checklist material</p>",
        "id": 153881628,
        "sender_full_name": "John Moehrke",
        "timestamp": 1491847246
    },
    {
        "content": "<p>well, the lifecycle page says that active = false *is* the same as entered-in-error. </p>",
        "id": 153884856,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1492292300
    },
    {
        "content": "<p>it's really problematic for  clients when servers omit results by default - how do you get them not to be omitted? But it's also really problematic for clients when some servers don't support search parameters, and others do, and it matters. </p>\n<p>I think this is more than a afety check list issue - we probably need special rules about search parameters on entered-in-error linked search parameters to enable safe consistency</p>",
        "id": 153884857,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1492292445
    },
    {
        "content": "<p>Yes, <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> you understand my concern...</p>",
        "id": 153884906,
        "sender_full_name": "John Moehrke",
        "timestamp": 1492430431
    },
    {
        "content": "<p>To add some context: we're already finding that apps which don't search on status/aren't filtering on status are also often NOT handling entered-in-error</p>",
        "id": 153884908,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1492437973
    },
    {
        "content": "<p>IE: they display an observation result or use it as if it's accurate even when the status is errored.</p>",
        "id": 153884909,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1492437994
    },
    {
        "content": "<p>However, a physician seeing a result that was once active/valid and could have been used in clinical checking seems like a more necessary case than a physician needing to see an inactive/combined away patient that they can't use for anything, and shouldn't have any clinical data associated anymore</p>",
        "id": 153884910,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1492438048
    },
    {
        "content": "<p>(again, if an app has the patient context already, and reads it by id, they will get the inactive patient with the link to the replacement)</p>",
        "id": 153884911,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1492438085
    },
    {
        "content": "<p>so these apps are non-conformant. But agree that we need to do more about this</p>",
        "id": 153884922,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1492455782
    },
    {
        "content": "<p>The example on the Search page includes <br>\n GET [base]/Patient?active=true<br>\nis that always going to work? What about when the active element is empty?<br>\nis it better to use<br>\n GET [base]/Patient?active:not=false<br>\nis that going to work where versioning is used and the DELETE operation has deleted it?</p>",
        "id": 153884970,
        "sender_full_name": "John Moehrke",
        "timestamp": 1492517679
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> Patient.active has a default, so if it's empty, the presumed value is 'true'.  It's not supported to have Patient.active be unknown</p>",
        "id": 153884994,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1492529709
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> that is a valid point. putting much faith in servers implementation of ramifications of defaults... okay... It still seems active:not=false is more safe for a client. </p>",
        "id": 153884996,
        "sender_full_name": "John Moehrke",
        "timestamp": 1492529977
    },
    {
        "content": "<p>If the server supports the \":not\" qualifier</p>",
        "id": 153884998,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1492530034
    },
    {
        "content": "<p>oh, great... 'not' good</p>",
        "id": 153884999,
        "sender_full_name": "John Moehrke",
        "timestamp": 1492530103
    },
    {
        "content": "<p>so.. more likely active=true will work then...</p>",
        "id": 153885000,
        "sender_full_name": "John Moehrke",
        "timestamp": 1492530144
    },
    {
        "content": "<p>Correct</p>",
        "id": 153885001,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1492530600
    },
    {
        "content": "<p>has someone created a task to make sure we address this?</p>",
        "id": 153885019,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1492549268
    },
    {
        "content": "<p>Address it how?</p>",
        "id": 153885027,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1492549982
    },
    {
        "content": "<p>at least document it well, including in the safety check list.. Possible introduce a conformance criteria on these search parameters that requires server implementers to do more safety related checking, and encourages clients to consider it</p>",
        "id": 153885028,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1492550119
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13216\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13216\">GF#13216</a>, though I think the real safety issue is about other \"entered in error\" issues.  Accidentally retrieving a non-active patient is unlikely to result in any patient safety issues I can think of.</p>",
        "id": 153885047,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1492567955
    },
    {
        "content": "<p>Back to <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> original question about searching patient without \"active\" search parameter. From the discussion above, my understanding is that if \"active\" parameter is not present, server should treat the search as \"active=true\". Is my understanding correct?</p>",
        "id": 153885160,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1492618638
    },
    {
        "content": "<p>right... it is understood what the default of the element is... but what is the default of the parameter when it isn't included in a search...</p>",
        "id": 153885166,
        "sender_full_name": "John Moehrke",
        "timestamp": 1492620431
    },
    {
        "content": "<p>no. The active element defaults to false. But the active search parameter doesn't, and servers should treat search as search on any value of active if active is not specified</p>",
        "id": 153885197,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1492633258
    },
    {
        "content": "<p>Actually, the Patient.active element defaults to true.</p>",
        "id": 153885202,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1492634513
    },
    {
        "content": "<p>sorry, typo - not paying quite enough attention there</p>",
        "id": 153885205,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1492634988
    },
    {
        "content": "<p>By the way, how do defaults work in the presence of extensions? Is there a difference between:</p>\n<div class=\"codehilite\"><pre>&lt;Patient&gt;\n ...\n &lt;active&gt;\n    &lt;extension url=&quot;http://someURL...&quot; &gt;\n       &lt;valueDate value=&quot;20171511&quot; /&gt;\n   &lt;/extension&gt;\n &lt;/active&gt;\n&lt;/Patient&gt;\n</pre></div>\n\n\n<p>and</p>\n<div class=\"codehilite\"><pre>&lt;Patient&gt;\n ...\n &lt;active value=&quot;true&quot;&gt;\n    &lt;extension url=&quot;http://someURL...&quot; &gt;\n       &lt;valueDate value=&quot;20171511&quot; /&gt;\n   &lt;/extension&gt;\n &lt;/active&gt;\n&lt;/Patient&gt;\n</pre></div>\n\n\n<p>Do both match a search for active=true?</p>",
        "id": 153885209,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1492635277
    },
    {
        "content": "<p>My opinion is that both would be the same, but clarification would be good.  Would you mind submitting a change request?</p>",
        "id": 153885211,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1492635436
    },
    {
        "content": "<p>those are different, but both match for search active=true</p>",
        "id": 153885212,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1492635464
    },
    {
        "content": "<p>I can see rationale for either part of your statement, Grahame, but I'm not sure they make sense together.</p>",
        "id": 153885214,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1492635547
    },
    {
        "content": "<p>they are different in respects other than searching</p>",
        "id": 153885217,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1492636015
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13224\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13224\">GF#13224</a> filed.</p>",
        "id": 153885218,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1492636290
    },
    {
        "content": "<p>I understand the explanation for active. This means that for any real use of the Patient resource, the active=true will be a mandatory parameter, unless you really want inactive entries too (which is less likely).</p>",
        "id": 153885253,
        "sender_full_name": "John Moehrke",
        "timestamp": 1492689132
    },
    {
        "content": "<p>Wondering if the fhirpath data extraction expression should be updated for this also? Or is that some logic that need to know elsewhere.</p>",
        "id": 153886061,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1493178594
    },
    {
        "content": "<p>Was thinking something like <code>(Patient.active | true).first()</code> but that doesn't work if there is no value, and just an extension as the example given above has.</p>",
        "id": 153886062,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1493178642
    },
    {
        "content": "<p>I  guess it could be <code>iif(active.hasValue(), active, true)</code></p>",
        "id": 153886063,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1493179161
    },
    {
        "content": "<p>you could make a task for this; right now, there's no support for doing something like that in teh build</p>",
        "id": 153886369,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1493340593
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13339\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13339\">GF#13339</a> and <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13224\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13224\">GF#13224</a> are still open on this issue. Has there been any further discussion since Madrid? It seems this is something that will have to be nailed down for a normative release.</p>",
        "id": 153915734,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1508866268
    }
]