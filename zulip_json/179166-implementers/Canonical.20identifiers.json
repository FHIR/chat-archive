[
    {
        "content": "<p>Are all data elements with name &lt;ResourceName&gt;.url and datatype uri canonical identifiers which have to be globally unique? Examples are Library.url and Measure.url. In other words, can I enforce uniqueness on every such &lt;ResourceName&gt;.url data element? Or is there an explicit way to detect, with a StructureDefinition at hand, that a data element is such a unique identifier?</p>",
        "id": 172135173,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1564585298
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"197470\">@Alexander Kiel</span>, the <code>.url</code> values should uniquely identify the resource:<br>\n<a href=\"http://hl7.org/fhir/measure-definitions.html#Measure.url\" target=\"_blank\" title=\"http://hl7.org/fhir/measure-definitions.html#Measure.url\">http://hl7.org/fhir/measure-definitions.html#Measure.url</a></p>\n<blockquote>\n<p>...also called its canonical identifier. This SHOULD be globally unique... This URL can be the target of a canonical reference. It SHALL remain the same when the measure is stored on different servers.</p>\n</blockquote>\n<p>cf. <code>StructureDefinition.url</code>:<br>\n<a href=\"http://hl7.org/fhir/structuredefinition-definitions.html#StructureDefinition.url\" target=\"_blank\" title=\"http://hl7.org/fhir/structuredefinition-definitions.html#StructureDefinition.url\">http://hl7.org/fhir/structuredefinition-definitions.html#StructureDefinition.url</a></p>\n<p>Compare canonical url (author-assigned) vs. resource Id (usually server-assigned). Different copies of the same resource will have separate resource ids, however they will all share a common canonical url. The resource Id uniquely identifies a specific instance on a single server. The canonical url uniquely identifies a set of instances (clones) of the same resource (across many different servers).</p>",
        "id": 172136039,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1564585860
    },
    {
        "content": "<p>References to such resources are always based on the canonical url, i.e. refers to any matching instance of this resource (within context), not a single specific instance on a specific server.</p>",
        "id": 172136231,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1564585991
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> Thanks. I have read all that stuff. But is _every_ <code>.url</code> data element, regardless of concrete resource, a canonical identifier? I just generate my database schema from structure definitions and like to know if I can mark such data elements as unique. Oh wait, as I write this, I discover that <code>.url</code> isn't unique, because only the combination of <code>.url</code> and <code>.version</code> would be unique.</p>",
        "id": 172138302,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1564587501
    },
    {
        "content": "<p><code>StructureDefinition.version</code> is an author-assigned value:<br>\n<a href=\"http://hl7.org/fhir/structuredefinition-definitions.html#StructureDefinition.version\" target=\"_blank\" title=\"http://hl7.org/fhir/structuredefinition-definitions.html#StructureDefinition.version\">http://hl7.org/fhir/structuredefinition-definitions.html#StructureDefinition.version</a><br>\nFHIR dictates that if an author introduces breaking changes to a profile, then they should also change the canonical url. Because the new profile is no longer compatible with the previous version, they cannot share a common canonical url.<br>\nIn practice, I don't expect production servers to contain multiple compatible versions of the same profile, as this would be ambiguous. Typically, in a production environment, you install a single, final, definitive version of each profile.</p>",
        "id": 172140062,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1564588863
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> I think we talk about different things. My question was whether I can detect that data elements like <code>Library.url</code> or also <code>StructureDefinition.url</code> actually hold URIs which should be globally unique. Say I like to implement a FHIR server which uses a relational database as storage and I have a table for all my Library resources. Can I mark the <code>URL</code> column as unique? </p>\n<p>I discovered by myself, while asking, that I cannot because there can be two instances of say a Library resource with the same <code>Library.url</code> but different <code>Library.version</code>. </p>\n<p>On the other hand, the combination of <code>Library.url</code> and <code>Library.version</code> should be unique within one FHIR server. Or do I interpret to much in this and it would be ok for a FHIR server to hold multiple instances of resources with the same <code>.url</code> and <code>.version</code>?</p>",
        "id": 172141162,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1564589718
    },
    {
        "content": "<p>Usually, in a production scenario, canonical url's will be unique. This ensures that a client/server can resolve conformance resources uniquely, which is required for validation.<br>\nHowever there are (advanced) scenario's where this is not the case. For example Simplifier allows different users to upload profiles using the same canonical url; canonical url's are only unique within a user project. This requires a lot of additional complex logic, usually you don't have to deal with this c.q. reject this.</p>",
        "id": 172142751,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1564591051
    },
    {
        "content": "<p>So Simplifier uses a compound database key of the form { ProjectId, CanonicalUrl }</p>",
        "id": 172142816,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1564591098
    },
    {
        "content": "<p>However unless you are planning to implement a profile registry, you shouldn't have to worry about this.</p>",
        "id": 172142855,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1564591150
    },
    {
        "content": "<p>So generally a FHIR db could contain duplicate canonical urls, but usually this will not the case (nor desired).</p>",
        "id": 172143018,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1564591296
    },
    {
        "content": "<p>Even within a project canonical URL is not expected to be unique.  You can easily have multiple versions of the same profile or value set (distinguished by different .version elements) in the same project.</p>",
        "id": 172143504,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564591682
    },
    {
        "content": "<p>I especially look at <a href=\"https://www.hl7.org/fhir/library.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/library.html\">Library</a> and <a href=\"https://www.hl7.org/fhir/measure.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/measure.html\">Measure</a> which also have <code>.url</code> and <code>.version</code> data elements and are not terminology resources. However Measure references Library through canonical type. In case that reference would be point to multiple libraries, I wouldn't know which one to use for my queries. But then, it's the same with <code>Meta.profile</code>. In case a server has multiple profiles with the same url/version pair, the validation should properly just fail. </p>\n<p>So you would not check for duplicate url/version pairs at creation time? You would just fail in case you need to follow a canonical link?</p>",
        "id": 172144776,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1564592678
    },
    {
        "content": "<p>Yes!</p>",
        "id": 172144810,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1564592706
    },
    {
        "content": "<p>Because a single canonical url can be shared by many instances (clones) on different servers, per definition it is not <em>globally</em> unique. However canonical url's are expected to be unique within the limited scope of a (production) environment, for example within a single FHIR database. FHIR does not define how to implement the actual \"resolving\" of a canonical url to the target conformance resource. In a simple case, this only involves a simple lookup of the key (url) value in a local database or file system. However in advanced scenario's , the resolving process may also involve some contextual information, in addition to the canonical url; e.g. Simplifier also needs the ProjectId. Of course, this is implementation-specific.</p>",
        "id": 172145125,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1564592933
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> That's not true.  Canonical URLs are <em>NOT</em> expected to be unique in a single production environment.  Only the combination of url + version is expected to be unique.</p>",
        "id": 172145235,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564593024
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> - I sidestepped versioning here, to not further confuse matters</p>",
        "id": 172145300,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1564593081
    },
    {
        "content": "<p>So if you're building a very generic server, then you need to deal with all of this...</p>",
        "id": 172145447,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1564593190
    },
    {
        "content": "<p>Thank you both. I will move forward without any uniqueness checks upfront. I will just see that such canonical links (combination of uri and version) resolves to one single resource. It's right that the canonical resolution can be very divers.</p>",
        "id": 172145708,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1564593377
    },
    {
        "content": "<p>generally, operational servers would ensure that the combination of url+version is unique but the scope in which this happens is a business logic question, and there are use cases - general interop servers - where the business rule wouldn't apply</p>",
        "id": 172170209,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564610540
    },
    {
        "content": "<p>Concerning versioning, also see: <a href=\"http://hl7.org/fhir/resource.html#versions\" target=\"_blank\" title=\"http://hl7.org/fhir/resource.html#versions\">http://hl7.org/fhir/resource.html#versions</a></p>\n<blockquote>\n<p>There is no single best practice here; the correct choice depends on many factors outside the scope of this specification.</p>\n</blockquote>",
        "id": 172203324,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1564649777
    }
]