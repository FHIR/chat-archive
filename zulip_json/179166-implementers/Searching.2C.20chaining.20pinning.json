[
    {
        "content": "<p>Consider this search:</p>",
        "id": 153935111,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517612152
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>GET Observation?code=X&amp;component.code=Y&amp;component.value-quantity=grZ\n</pre></div>",
        "id": 153935112,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517612164
    },
    {
        "content": "<p>this won't do what most people want.... they think they're searching for an observation that has a component with a code Y and value &gt; 3.5</p>",
        "id": 153935113,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517612214
    },
    {
        "content": "<p>but they're not. Instead, they're searching for an observation that has a component with code Y, and a component with value 3.5</p>",
        "id": 153935114,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517612243
    },
    {
        "content": "<p>it's been claimed that this is counter-intuitive, and that we should say that all the component references are 'pinned' together, such that they automatically refer to the same component</p>",
        "id": 153935115,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517612297
    },
    {
        "content": "<p>but that would mean that this search would become impossible</p>",
        "id": 153935116,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517612346
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>GET Observation?code=X&amp;component.code=Y&amp;component.code=Z\n</pre></div>",
        "id": 153935117,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517612354
    },
    {
        "content": "<p>so far, we've said that if you really want control here, use the _filter parameter... but only my server implements it.</p>",
        "id": 153935118,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517612378
    },
    {
        "content": "<p>why is that.... I'm not really sure... maybe it's because the _filter parameter syntax looks crappy... well, we copied it from odata... but I agree it's pretty crappy syntax, even if it's powerful</p>",
        "id": 153935119,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517612579
    },
    {
        "content": "<p>so I don't know whether we want to see if we can make _filter better.... but there's another option, as shown in this query:</p>",
        "id": 153935120,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517612605
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>GET Observation?code=X&amp;component=$x&amp;$x.code=Y&amp;$x.value-quantity=grZ\n</pre></div>",
        "id": 153935121,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517612614
    },
    {
        "content": "<p>it suffers from the obvious disadvantage of squeezing a little more blood out the stone that is the parameter syntax.... but it might work. <span class=\"user-mention\" data-user-id=\"191351\">@Chris Grenz</span> <span class=\"user-mention\" data-user-id=\"191757\">@Christiaan Knaap</span> <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span></p>",
        "id": 153935122,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517612685
    },
    {
        "content": "<p>Presumably <code>x</code> here is any variable name that the client uses consistently at these three spots? I think we talked through something like this at the workgroup session; it's definitely the least worst change we've entertained, IMO.</p>",
        "id": 153935124,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1517615346
    },
    {
        "content": "<p>Yes. I didnâ€™t hear discussion of this variant</p>",
        "id": 153935132,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517625282
    },
    {
        "content": "<p>I think there was consensus in Mon Q1 or 2 about not extending the search syntax any further. And I find it hard to read. Plus it brings Observation.component into focus which is not a search parameter, so how do I evaluate that? Should I read $x.code as the search parameter 'component-code'? So I'm not in favour of this change.</p>",
        "id": 153935763,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1518012321
    },
    {
        "content": "<p>I'm not either. Not personally</p>",
        "id": 153935791,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518028083
    },
    {
        "content": "<blockquote>\n<p>Presumably <code>x</code> here is any variable name that the client uses consistently at these three spots? I think we talked through something like this at the workgroup session; it's definitely the least worst change we've entertained, IMO.</p>\n</blockquote>\n<p>Agree.  </p>\n<p>But as Christiaan and James have now promised to implement _filter, the rest of the world will soon follow ;-)</p>",
        "id": 153937806,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1518708217
    },
    {
        "content": "<p>well, I can only hope so.</p>",
        "id": 153937907,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518726304
    },
    {
        "content": "<p>so we can stop all this stupid syntax hack stuff</p>",
        "id": 153937908,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518726315
    }
]