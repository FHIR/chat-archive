[
    {
        "content": "<p>We increasingly encounter people who take issue with searches based on patient.identifier, because those would get logged in proxies and other places that may or may not have the same privacy protection in place. We actually have GDRP based auditors running around in the country who will tell you, you cannot do that.</p>\n<p>In MedMij, the patient oriented network here in NL, we have declared searches based on the national patient identifier forbidden. The way to know who the query is for is deferred to the HTTP Authentication token. </p>\n<p>The IHE MHD spec (<span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>) explicitly requires GET requests and explicitly requires patient.identifier as parameter which conflicts with the above. MHD simply bases on FHIR Search. FHIR Search which specifies a second option (POST application/x-www-form-urlencoded which would forego all concerns as https \"hides\" the body.</p>\n<ul>\n<li>Are there any other countries (e.g. European because of GDRP) who encounter issues like this?</li>\n<li>What solutions have other countries found?</li>\n</ul>",
        "id": 212665225,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1602149069
    },
    {
        "content": "<p>I'm confused about this. Why is the HTTP Authentication token logged differently to the URL?</p>",
        "id": 212665280,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602149124
    },
    {
        "content": "<p>generally this sounds like the auditors using HIPAA to say that you can't share data</p>",
        "id": 212665379,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602149165
    },
    {
        "content": "<p>It is not logged differently, but the token is a uuid or other meaningless string to any other party than the target endpoint</p>",
        "id": 212674304,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1602155568
    },
    {
        "content": "<p>You can share data, but in NL, PHRs cannot use the national patient identifier due to scoping issues in law. Patients negotiate a token that binds into that patient identifier outside the direct PHR context and then the PHR is handed the token by the endpoint for further use.</p>\n<p>But long story short: nothing is exchanged based on searches that include subject or patient.identifier and the like.</p>",
        "id": 212674535,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1602155755
    },
    {
        "content": "<p>so they negotiate a specific identifier for their context?</p>",
        "id": 212674611,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602155791
    },
    {
        "content": "<p>Token, not identifier. The token is a pointer into endpoint/FHIR server lookup table where the national PID is stored for the time-to-live of the token which currently is 15 minutes</p>",
        "id": 212674693,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1602155870
    },
    {
        "content": "<p>So endpoint/FHIR server reads the Bearer token, looks up which patient this is, in its lookup table for tokens, and uses that to answer the query</p>",
        "id": 212674769,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1602155917
    },
    {
        "content": "<p>so they only have one access to one patient?</p>",
        "id": 212674845,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602155977
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 212674958,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1602156034
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 212675134,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1602156197
    },
    {
        "content": "<blockquote>\n<p>so they only have one access to one patient?</p>\n</blockquote>\n<p>I think I misunderstood your question: yes, 1 token grants access to data of 1 patient.</p>",
        "id": 212676119,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1602156979
    },
    {
        "content": "<p>so you don't want an identifier at all - <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> this is a more generic IHE issue - XDS for consumers will typically work this way in any country.</p>",
        "id": 212678266,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602158459
    },
    {
        "content": "<p>Well, the MedMij use case is just that indeed. For Physician/Physician traffic the national patient id is actually allowed and those would follow normal patient id query patterns. However: law still requires the url to clear of that.</p>\n<p>You could solve this with a POST of application/x-www-form-urlencoded parameters because they would go into the HTTP Body and are thus obfuscated from intermediary logging.</p>\n<p>MHD disallows this. Maybe for good reason?</p>",
        "id": 212680129,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1602159554
    },
    {
        "content": "<p>mostly (I think) because there's a huge segment of the community out there falsely convinced that the body is more secure than the headers. Though I really shouldn't speak for IHE on that</p>",
        "id": 212681689,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602160397
    },
    {
        "content": "<p>Some of them are called  auditors, architects, productmanagers, or developers. They are too diverse to ignore, so we can either beat them (provide evidence otherwise), or join them (leave patient.identifier out of the url)?</p>\n<p>IHE actually chose to only support patient.identifier in url, so I guess they are not in the same group :-)</p>",
        "id": 212682467,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1602160744
    },
    {
        "content": "<p>Use an IHE <a href=\"https://wiki.ihe.net/index.php/ITI_Change_Proposals_2020-21\">change proposal</a> to request the addition of POST searches.</p>",
        "id": 212683452,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1602161261
    },
    {
        "content": "<p>I will, thanks Vassil. That works for MHD</p>",
        "id": 212683872,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1602161469
    },
    {
        "content": "<p>Note that in the US PHRs do not use MHD - or any other IHE protocol - to get data, they just use plain SMART-on-FHIR auth and then query data using the patient ID, so no identifiers are sent over.</p>",
        "id": 212685545,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1602162272
    },
    {
        "content": "<p>Presumably a patient user can access more information than just their own patient record - parents or others with medical power of attorney would need to be able to access records of children or others.  So merely logging in wouldn't tell you what patient's data to return.  How would the desired patient's information be indicated?</p>",
        "id": 212687570,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1602163085
    },
    {
        "content": "<blockquote>\n<p>query data using the patient ID, so no identifiers are sent over.</p>\n</blockquote>\n<p>This looks like a contradiction?</p>",
        "id": 212690686,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1602164407
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> in MedMij is impossible to ask data for any other patient than the one you logged in as.</p>\n<p>In 'normal' FHIR context you could do all that using the HTTP POST search.</p>",
        "id": 212690887,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1602164495
    },
    {
        "content": "<p>The patient ID  is a uuid or a sequential number or some other meaningless string to any other party than the target endpoint</p>",
        "id": 212692763,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1602165309
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>query data using the patient ID, so no identifiers are sent over.</p>\n</blockquote>\n<p>This looks like a contradiction?</p>\n</blockquote>\n<p>It highlights the confusing difference between <a href=\"http://Patient.id\">Patient.id</a> and Patient.identifier</p>",
        "id": 212692822,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1602165343
    },
    {
        "content": "<p>HTTP POST search isn't any more secure than a GET search.  </p>\n<p>Presumably MedMij then relies on the sharing of credentials - as there being no ability for someone with a legal right to access the patient information being unable to do so would presumably be problematic?</p>",
        "id": 212695680,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1602166485
    },
    {
        "content": "<p>Let me try to clarify... The concern is that http intermediaries and http endpoint technology will log the GET url, but will not automatically log a POST body.</p>",
        "id": 212702684,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602169205
    },
    {
        "content": "<p>so this is all driven by the default behavior of web infrastructure to log GET but not POST body</p>",
        "id": 212702746,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602169237
    },
    {
        "content": "<p>Patient.identifier vs <a href=\"http://Patient.id\">Patient.id</a> --- as <span class=\"user-mention\" data-user-id=\"192685\">@Vassil Peytchev</span> indicates this confusion has driven many bad decisions. If it was pointed out that the .id would tend to be mostly a guid, AND that it is the id that is in the GET parameter... then discussion might be more informed</p>",
        "id": 212702916,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602169314
    },
    {
        "content": "<p>MHD does not require Patient.identifier. Fact is MHD has been clear that it requires the Patient \"id\". we have been explicitly silent on the very fact that in FHIR today a token could carry the Patient id or the Patient identifier. In fact I have asked questions here on zulip to help me clarify how that actually works, especially in a federated Patient registry environment.</p>",
        "id": 212703177,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602169407
    },
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span> , there is nothing wrong with NL providing further clarification to MHD. There is a national extensions explicitly for this kind of specialization.</p>",
        "id": 212703330,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602169461
    },
    {
        "content": "<p>Broader.. I like the idea of having the OAuth token be patient specific... which could override the any patient parameter, thus making a patient parameter meaningless and potentially forbidden.  YES, this would require the app get new tokens each time the patient changes. Where a user is handling many patients at the same time, this might get more complex... but it is just software... we should not be afraid of complexity when it is needed.</p>",
        "id": 212703572,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602169551
    },
    {
        "content": "<p>I don't think I hear anything here that is difficult, but it is clearly new and different. These changes would be beyond what a Change Proposal could accomplish.  A new work item would be needed... ITI is accepting new work item proposals right now.</p>",
        "id": 212704077,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602169740
    },
    {
        "content": "<p>here is the request for new work items for ITI  <a href=\"https://groups.google.com/g/itiplan/c/DFMRAKtDnG4\">https://groups.google.com/g/itiplan/c/DFMRAKtDnG4</a></p>",
        "id": 212704324,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602169825
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179166-implementers/topic/FHIR.20Search.2FIHE.20MHD/near/212678266\">said</a>:</p>\n<blockquote>\n<p>so you don't want an identifier at all - <span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> this is a more generic IHE issue - XDS for consumers will typically work this way in any country.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I think it is a general purpose security/privacy preserving model... It certainly is not unique to XDS... it is driven by a Privacy preserving approach..... that said, it is fully driven by the fact that web infrastructure \"default\" logging logs GET parameters but does not log POST body. The problem can also be satisfied by just forbidding intermediaries and endpoints from logging GET parameters, or at least logging them into a log that is not privacy protecting (like AuditEvent schema enables).</p>",
        "id": 212704886,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602170033
    },
    {
        "content": "<p>it might also be driven by a fallacy that the GET parameters are visible on the network, when the POST body is not visible on the network. TLS protects everything on the network.</p>",
        "id": 212705654,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602170327
    },
    {
        "content": "<p>another factor... s that this is a discussion around where  http REST is used not in a point-to-point way. In point-to-point the two endpoints (client v server) are expected to have patient data exposure and are thus managed... the problem is when an architecture requires (or allows) trusted intermediaries. Hence, they are \"trusted but not fully trusted\"... when one designs an architecture that enables \"trusted but not fully trusted\", one creates problems like this.. once one starts with a problem like this, pushing the risks around does not eliminate the risks, it just pushes the risk around. The situation of \"trusted but not fully trusted\" is the problem.</p>",
        "id": 212706425,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602170629
    },
    {
        "content": "<p>SOAP has mature ways of handling \"trusted by not fully trusted\"... Thus using SOAP transport, with REST verbs... is likely the best solution... but sure does make REST more complex than \"simple http REST\"... might we call this \"end-to-end securable REST\"?  thus just re-inventing asynchronous SOAP...  European Commission has endorsed the SOAP profile \"AS4\" for these cross-boarder use-cases... this is why IHE XCA added an AS4 transport model.</p>",
        "id": 212706956,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602170824
    },
    {
        "content": "<p>Can you create a national extension that extends what’s been constrained?  FYI: my CP has been submitted to Sarah Bell: see CP-ITI-AHe-Addition-of-POST-based-query-option</p>",
        "id": 212718914,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1602175956
    },
    {
        "content": "<blockquote>\n<p>Patient.identifier vs <a href=\"http://Patient.id\">Patient.id</a> --- as @Vassil Peytchev indicates this confusion has driven many bad decisions. If it was pointed out that the .id would tend to be mostly a guid, AND that it is the id that is in the GET parameter... then discussion might be more informed</p>\n</blockquote>\n<p>I see... parameter patient exists in FHIR Core and is defined as reference, not token. Reference would indeed be based on <a href=\"http://Patient.id\">Patient.id</a>, hence presumably meaningless. Whether or not you would know what the <a href=\"http://Patient.id\">Patient.id</a> for a patient is on the documents you seek is doubtful. Would an XDS Index have 1 <a href=\"http://Patient.id\">Patient.id</a> across all documents?</p>\n<p>MHD in addition to FHIR Core defines patient.identifier as parameter. This seems to be clearly defined as based on the Patient.identifier which would be the national patient identifier we want to avoid.</p>\n<p>Finally MHD states \"The Document Consumer shall include search parameter <em>patient</em> or <em>patient.identifier</em>, and <em>status</em>.\" Since <em>patient</em> seems far fetched as it is unlikely I'd have that, I'd say my best bet becomes <em>patient.identifier</em>, but I cannot populate that in the URL (according to said auditors and the MedMij architecture)</p>\n<p>We could make this a very big thing, but if you say it is fine to just use the application/x-www-form-urlencoded search defined in FHIR Search for MHD then maybe it is enough to apply the CP to MHD as submitted? I really suspect that treating this as a national extension after MHD explicitly constrained it, is not conformant.</p>",
        "id": 212723950,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1602178315
    },
    {
        "content": "<p>Re: OAuth patient tokens</p>\n<p>Doing a SMART launch today with a patient context (e.g., <code>launch/patient</code>), is what you are describing, isn't it?  Based on implementations I've seen, that is the behavior enforced.</p>\n<p>That said, there are also valid use cases for user level access, such as a provider looking at a list of patients.</p>\n<p>I see a role for both, and feel confident that EHR vendors have policies in place to make sure that applications use the appropriate level based on their activity.</p>\n<p>Overall, I don't see where the current process is deficient - is there something I'm missing?</p>",
        "id": 212724418,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1602178540
    },
    {
        "content": "<p>We don't do SMART on FHIR in MedMij. The architects who designed it, decided against that. Knowingly or unknowingly, I could never establish. In any case: we create IGs within the constraints of the networks they run on. We don't make those rules.</p>",
        "id": 212735634,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1602183993
    },
    {
        "content": "<p>The PHRs, at least when interacting with MedMij, do OAuth but different from SoF</p>",
        "id": 212735749,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1602184068
    },
    {
        "content": "<p>so the parameter defined in MHD for \"patient.identifier\" was intended to look for the OID defined as the Affinity Domain ID.. but reality is that your national identifier would also be in the Patient.identifier... so it could be used that way without constraint that it can ONLY be used with the affinity domain ID (OID)</p>",
        "id": 212744206,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602188506
    },
    {
        "content": "<p>a realm could certain constrain OUT the Patient.identifier... forcing the use of Patient id only.</p>",
        "id": 212744468,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602188666
    },
    {
        "content": "<p>in an XDS affinity domain, a patient would have one and only one Patient id (and one and only one affinity domain identifier)</p>",
        "id": 212744550,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602188709
    },
    {
        "content": "<p>a realm could certainly require them be randomly assigned opaque values.</p>",
        "id": 212744658,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602188766
    },
    {
        "content": "<p>We all have to live with various constraints, I understand completely!</p>\n<p>However, I would also say that if you have an OAuth layer that needs items defined in SMART, it would be nice to use them (e.g., if you want patient-restricted tokens, using <code>launch/patient</code>, etc.).  Not only does it help in general with alignment, but it's less time for you spent re-inventing things.</p>",
        "id": 212745729,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1602189340
    },
    {
        "content": "<p>I suspect the trouble is that when your URL is \"<a href=\"https://fhirserver.com/Patient?identifier=http://ssa.gov|123456677\">https://fhirserver.com/Patient?identifier=http://ssa.gov|123456677</a>\" (Substitute appropriate values for NL or other.) No matter what you do, no matter the auth token, no matter the certificates involved, the URL will always always be transmitted across the wire as plain text. Every single router/proxy/gateway/ISP/backbone element that handles the message will see and can log that plain text URL. Moving the values into the message, whether as a header element or part of the body (any style) means that the contents are encrypted and even if packet sniffed and logged should be undecipherable. </p>\n<p>It would be great if every component between me and you could be trusted but it's public and by definition can't be.</p>\n<p>What if the URL was \"<a href=\"https://fhirserver.com/Patient?identifier=http://ssa.gov|123456677&amp;family=test&amp;given=Joe&amp;birthdate=1799-01-01\">https://fhirserver.com/Patient?identifier=http://ssa.gov|123456677&amp;family=test&amp;given=Joe&amp;birthdate=1799-01-01</a>\"? Any person that had access to any of those logs now can steal Joe test's identity. Perhaps enough that they will then be able to access his chart.</p>\n<p>Disclaimer: As I understand internet protocols.</p>",
        "id": 212829533,
        "sender_full_name": "Daniel Venton",
        "timestamp": 1602252150
    },
    {
        "content": "<p>That is not correct. The https encryption happens before the URL is transmitted.</p>",
        "id": 212831607,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1602253113
    },
    {
        "content": "<p>SOAP-transport REST AS4 sounds like a personal hell</p>",
        "id": 212835554,
        "sender_full_name": "Brendan Keeler",
        "timestamp": 1602254993
    },
    {
        "content": "<p>Please no</p>",
        "id": 212835623,
        "sender_full_name": "Brendan Keeler",
        "timestamp": 1602255010
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"192685\">Vassil Peytchev</span> <a href=\"#narrow/stream/179166-implementers/topic/FHIR.20Search.2FIHE.20MHD/near/212831607\">said</a>:</p>\n<blockquote>\n<p>That is not correct. The https encryption happens before the URL is transmitted.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"192685\">@Vassil Peytchev</span> take a look at my explanation why GET and POST are seen as different. You will note that I fully agree with you. The issue is not on-the-wire encryption, TLS is understood and used. The issue is trusted intermediaries audit logs. ---  at least this is my understanding, right <span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span> ? can you confirm?</p>",
        "id": 212853312,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602264043
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"200498\">Brendan Keeler</span> <a href=\"#narrow/stream/179166-implementers/topic/FHIR.20Search.2FIHE.20MHD/near/212835554\">said</a>:</p>\n<blockquote>\n<p>SOAP-transport REST AS4 sounds like a personal hell</p>\n</blockquote>\n<p>re-inventing it is worse hell.. but I agree SOAP and AS4 and re-invention are to be avoided.</p>",
        "id": 212853391,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602264109
    },
    {
        "content": "<p>Yes, <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> your explanation makes sense. I was responding to the claim that the URL would be \"transmitted across the wire as plain text\". That part is incorrect.</p>",
        "id": 212853828,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1602264360
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"192685\">Vassil Peytchev</span> <a href=\"#narrow/stream/179166-implementers/topic/FHIR.20Search.2FIHE.20MHD/near/212853828\">said</a>:</p>\n<blockquote>\n<p>Yes, <span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> your explanation makes sense. I was responding to the claim that the URL would be \"transmitted across the wire as plain text\". That part is incorrect.</p>\n</blockquote>\n<p>agreed... this is a fallacy that is so hard to kill.</p>",
        "id": 212854564,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602264774
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> That is what I'm told is the issue at hand yes.</p>",
        "id": 213163665,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1602599641
    }
]