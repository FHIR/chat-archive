[
    {
        "content": "<p>Currently at the early design phase of a new major version of an API. Previous version used a custom operation to return bundles of multiple resource types in order to ensure that the response \"maintained all necessary internal context\".</p>\n<p>The design principle was a bit like \"its only safe to sent everything in one go\".</p>\n<p>So for example, a request to retrieve a list of immunisations, the response bundle has<br>\n1) Patient resource<br>\n2) Organization resource (patient's gp practice)<br>\n3) Practitioner (Patient's usual gp )<br>\n4) PractionerRole (Patient's usual gp role)<br>\n5) List  of Immunization resources<br>\n6) List of Condition resources (Problem Header) associated with the immunization event</p>\n<p>It seems to me that a searchset of Imms resources would be safe to consume.</p>",
        "id": 264463236,
        "sender_full_name": "Brian Diggle",
        "timestamp": 1639150282
    },
    {
        "content": "<p>What if the consumer didn't need/want the patient/Organization(s)/Practitioner(s)/PractitionerRole(s) with their list of immunizations?<br>\nWhat if the consumer has authorization to retrieve every immunization, does that mean their bundle includes every patient, every org, every prac, every PR as well?<br>\nWhat if the immunization was provided by a practitioner/org that isn't the GP (say a pharmacy)?<br>\nWouldn't it be better for the server to just return what was asked for (Immunizations) and let the consumer dictate what they want additionally (if anything)?</p>",
        "id": 264464268,
        "sender_full_name": "Daniel Venton",
        "timestamp": 1639150745
    },
    {
        "content": "<p>somewhat related to this thread <a href=\"#narrow/stream/179166-implementers/topic/FHIR.20-.20Using.20extensions.20or.20contained.20instead.20of.20a.20resource\">https://chat.fhir.org/#narrow/stream/179166-implementers/topic/FHIR.20-.20Using.20extensions.20or.20contained.20instead.20of.20a.20resource</a></p>",
        "id": 264465614,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1639151337
    },
    {
        "content": "<p>Maintaining context in REST is generally achieved by passing the references.  If you've got a pointer to the patient and are able to retrieve it if/when you want it, then you have the context.  Having the context is distinct from having all of the data.</p>",
        "id": 264465904,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1639151447
    },
    {
        "content": "<p>removed</p>",
        "id": 264466805,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1639151794
    },
    {
        "content": "<p>removed</p>",
        "id": 264466992,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1639151870
    },
    {
        "content": "<p>Ahhhh.... just twigged which api you are referring to. </p>\n<p>I don't understand why all those resources are sent in one go. <br>\nI would like to understand where that requirement has come from, I don't think it's the suppliers or consumers.</p>",
        "id": 264473039,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1639154325
    },
    {
        "content": "<p>I think this is a misunderstanding on how a FHIR Resource+REST API works on a technical level.</p>\n<p>The logical model consists of all those resources and this extra resources represent the <strong>provenance</strong> of the focused resource e.g. Immunization. <br>\nIt is provenance not clinical safety.</p>\n<p>It is a well accepted pattern these resources can be referenced by well known codes/identifiers. With REST we can now add in resource references. Either pattern is fine. <br>\n<strong>As long as these resources can be retrieved (easily),</strong> then you have no technical reason for including them in the query and this is a clinically accepted pattern which has been implemented in all commonly used HL7 interfaces in the NHS.<br>\nAny consumer can retrieve the provenance if they need to.</p>",
        "id": 264546355,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1639205639
    }
]