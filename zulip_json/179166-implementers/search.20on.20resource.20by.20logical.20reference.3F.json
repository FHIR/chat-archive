[
    {
        "content": "<p>Let's say I have an Immunization that is on a FHIR server. That FHIR server does not have Patient resources.<br>\nEvery Immunization would always refer to its patient via a logical reference (i.e. a Reference.identifier with system X and value Y)<br>\nIs it at all possible to construct a GET that would give me all the immunizations that have as their Patient a logical reference to system X and value Y or is this simply not possible?<br>\n(I have read that a logical reference prevents chaining - is the conclusion my above scenario is not possible?)</p>",
        "id": 214216438,
        "sender_full_name": "Robin Bosman",
        "timestamp": 1603386026
    },
    {
        "content": "<p>yes, Immunization?patient:identifier=X|Y - this is a modifier available in R4 reference search</p>",
        "id": 214216887,
        "sender_full_name": "Paul Church",
        "timestamp": 1603386235
    },
    {
        "content": "<p>(ironically :identifier is one of the things the Google implementation doesn't support yet <span aria-label=\"cant talk\" class=\"emoji emoji-1f637\" role=\"img\" title=\"cant talk\">:cant_talk:</span> )</p>",
        "id": 214217501,
        "sender_full_name": "Paul Church",
        "timestamp": 1603386509
    },
    {
        "content": "<p>You can search on .identifier, but you couldn't do an _include that matched on identifier, nor could you do chained searching based on identifier.  I.e. you couldn't search Immunization?patient.name=foo if the Immunization.patient just had Reference.identifier and not Reference.reference</p>",
        "id": 214244676,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603398904
    },
    {
        "content": "<p>Thanks! So just to be sure, an Immunization resource that is uploaded like this:<br>\n&lt;Immunization xmlns=\"<a href=\"http://hl7.org/fhir\">http://hl7.org/fhir</a>\"&gt;<br>\n[...]<br>\n   &lt;patient&gt;<br>\n      &lt;identifier&gt;<br>\n         &lt;system value=\"X\"/&gt;<br>\n         &lt;value value=\"Y\"/&gt;<br>\n      &lt;/identifier&gt;<br>\n   &lt;/patient&gt;<br>\n[...]<br>\n&lt;/Immunization&gt;<br>\n-&gt; If now I would like to do a GET to give me all the Immunization that have their Patient only defined by their logical reference identifier X|Y -&gt; this is not possible.</p>",
        "id": 214281264,
        "sender_full_name": "Robin Bosman",
        "timestamp": 1603437888
    },
    {
        "content": "<p>No, as Paul said, it is possible using GET [base]/Immunization?patient:identifier=X|Y<br>\n<strong>As long as</strong> the particular server implementation supports that type of search.</p>",
        "id": 214313680,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1603460092
    },
    {
        "content": "<p>patient.identifier, not patient:identifier ..</p>",
        "id": 214315841,
        "sender_full_name": "René Spronk",
        "timestamp": 1603461237
    },
    {
        "content": "<blockquote>\n<p>patient.identifier, not patient:identifier ..</p>\n</blockquote>\n<p>Oh no - can be either (and the client has to figure out which one is the right one)</p>",
        "id": 214316534,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1603461600
    },
    {
        "content": "<p>Right.  Patient:identifier matches when Reference.identifier is present.  Patient.identifier matches when Reference.reference is present and the resolved resource has an identifier</p>",
        "id": 214320543,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603463407
    },
    {
        "content": "<blockquote>\n<p>Patient:identifier matches when Reference.identifier is present. Patient.identifier matches when Reference.reference is present </p>\n</blockquote>\n<p>Except that the client has to to do the search before seeing the resources, so it has to 'know' already (it would be so much better that patient.identifier always worked, but that ship has sailed I guess)</p>",
        "id": 214320928,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1603463585
    },
    {
        "content": "<p>surely we can move this complexity to the server... right?</p>",
        "id": 214321174,
        "sender_full_name": "John Moehrke",
        "timestamp": 1603463684
    },
    {
        "content": "<p>Someone could submit a change request that would propose that servers treat the chaining approach and the qualifier approach as covering both.  Whether we can get away with that post-normative, I'm not sure</p>",
        "id": 214321596,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603463882
    },
    {
        "content": "<p>Ah, yes, reference.identifier again. I wonder how often that's actually used in production systems (usage seems to be very low (but I could be wrong), so we're skipping this in our FHIR training courses. Not part of the 80% of the 80% ;-) )</p>",
        "id": 214322447,
        "sender_full_name": "René Spronk",
        "timestamp": 1603464275
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191372\">@René Spronk</span> In Saskatchewan, where they are converting from a V3 pharmacy system to FHIR, they actually use reference.identifier quite a bit.  In this architecture, the data comes into the V3 system and that kicks off a process to add the new data to FHIR.  Since the V3 system doesn't know the FHIR ids of the data, we use reference.identifier to reference the various resources, eg. Patient, Practitioner, Dispense.  But I do agree that this is not your normal case.</p>",
        "id": 214323229,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1603464627
    },
    {
        "content": "<p>Hmm - so if you had a Bundle of these resources, how would one populate fullUrl ? some urn: that's totally useless because it'll never be used for inter-resource-referencing ?</p>",
        "id": 214323988,
        "sender_full_name": "René Spronk",
        "timestamp": 1603465054
    },
    {
        "content": "<p>they are batch Bundles, so no fullUrl is needed.</p>",
        "id": 214324677,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1603465340
    },
    {
        "content": "<p><a href=\"https://jira.hl7.org/browse/FHIR-29410\">https://jira.hl7.org/browse/FHIR-29410</a></p>",
        "id": 214326340,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1603466124
    },
    {
        "content": "<p>Also patient:identifier matches in situations where Reference.identifier is populated and the server has a resource with that identifier (so the server could, in theory, have translated that reference to a local reference when it was created) and also where Reference.identifier is populated with something that doesn't correspond to a resource on the server. There might be different solutions depending on which case we're in.</p>",
        "id": 214328491,
        "sender_full_name": "Paul Church",
        "timestamp": 1603467222
    },
    {
        "content": "<p>Reference.identifier is pretty new, so most systems haven't had a chance to use it yet.  It's relevant when you're trying to point at stuff that doesn't have a RESTful endpoint - which in legacy environments is somewhat common.</p>",
        "id": 214335125,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603470633
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> how 'new' are we talking here? Is it something that also applies to STU3? I would have imagined that eg. the following search: <code>.../Communication?sender.identifier=1|2</code> should give me results that would contain the following eg.:</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n  &quot;resourceType&quot;: &quot;Communication&quot;,\n  ...\n  &quot;sender&quot;: {\n    &quot;identifier&quot;: {\n      &quot;system&quot;: &quot;1&quot;,\n      &quot;value&quot;: &quot;2&quot;\n    }\n  }\n}\n</code></pre></div>",
        "id": 225001302,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1612350666
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> is that functionality intended to be supported by HAPI in the future?</p>",
        "id": 225003355,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1612352044
    },
    {
        "content": "<p>No, to get that you have to use <code>../Communication?sender:identifier=1|2</code></p>",
        "id": 225017324,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1612360339
    },
    {
        "content": "<p>Reference.identifier was only introduced in R4.  <span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> is right.  sender.identifier=1|2 would only find a match if the Reference specified a Reference.reference that, when resolved, was to a resource with identifier system and value of 1,2.  It totally ignores Reference.identifier.</p>",
        "id": 225047141,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612372285
    },
    {
        "content": "<p>And FHIR-I just confirmed that it <em>should</em> ignore Reference.identifier.  If you want to search by either, you need to do two searches, because otherwise the server has no way of communicating what searches it actually supports.</p>",
        "id": 225047308,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612372347
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> / <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> point taken,  with the <code>':'</code>part. <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> regarding </p>\n<blockquote>\n<p>Reference.identifier was only introduced in R4</p>\n</blockquote>\n<p>-you mean as search parameter, right - because as a datatype, the  reference datatype definitely contained the <code>identifier</code>-part in STU3.</p>",
        "id": 225067412,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1612380151
    },
    {
        "content": "<p>Actually, I meant being introduced at all, but looks like I was wrong.  I guess it was introduced at the very tail end of STU3.  The :identifier search qualifier was definitely R4.</p>",
        "id": 225076674,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612384221
    },
    {
        "content": "<p>Just to be clear here, I'm not looking for an actual chained search. I don't expect the server holding the Communication instance, to also hold the actual Device instance. I'm only trying to identify the Communication instance which have a certain logical reference. But as you mention <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> , I can only see the <code>:identifier</code> as part of R4, not STU3. I guess I'll have to dig into the server implementation and either provide a custom search paramter or expand the allowed use of <code>:identifier</code>.</p>",
        "id": 225145446,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1612436957
    }
]