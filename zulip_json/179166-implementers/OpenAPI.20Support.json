[
    {
        "content": "<p>So the Java reference implementation includes code to produce openAPI documents from CapabilityStatement resources. Yesterday, some one told me that the big problem with FHIR is that it doesn't support openAPI....</p>",
        "id": 153993276,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536104636
    },
    {
        "content": "<p>so I presume that the problem is, the tool to produce openapi documents from capability statements is not deployed in a way that implementers can find/use.</p>",
        "id": 153993277,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536104679
    },
    {
        "content": "<p>what would change that?</p>",
        "id": 153993278,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536104686
    },
    {
        "content": "<p>Well I think we could add to the downloads page,  I haven't had a chance to really integrate into the published output yet.</p>",
        "id": 153993300,
        "sender_full_name": "Eric Haas",
        "timestamp": 1536105971
    },
    {
        "content": "<p>add what to the downloads page?</p>",
        "id": 153993301,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536106000
    },
    {
        "content": "<p>are we talking the spec or IGs??? I may be thinking of something else</p>",
        "id": 153993302,
        "sender_full_name": "Eric Haas",
        "timestamp": 1536106045
    },
    {
        "content": "<p>I meant the link to download the openAPI artifacts that are produced in the IG.</p>",
        "id": 153993304,
        "sender_full_name": "Eric Haas",
        "timestamp": 1536106213
    },
    {
        "content": "<p>But for the spec could add to the openAPI  Implementation Tools section here: <a href=\"http://build.fhir.org/downloads.html\" target=\"_blank\" title=\"http://build.fhir.org/downloads.html\">http://build.fhir.org/downloads.html</a> <br>\nif its a standalone tool,  (not really sure how it works )</p>",
        "id": 153993305,
        "sender_full_name": "Eric Haas",
        "timestamp": 1536106374
    },
    {
        "content": "<p>at the moment what I have is code. what kind of tool would be useful?</p>",
        "id": 153993339,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536125502
    },
    {
        "content": "<p>It sounds like an SEO problem. The first result from <code>FHIR openapi</code> that comes up in google is a Github gist from <span class=\"user-mention\" data-user-id=\"191318\">@nicola (RIO/SS)</span> <a href=\"https://gist.github.com/niquola/b7bce73d581425f147bad4a6f674a363\" target=\"_blank\" title=\"https://gist.github.com/niquola/b7bce73d581425f147bad4a6f674a363\">https://gist.github.com/niquola/b7bce73d581425f147bad4a6f674a363</a>. Searching for <code>FHIR Swagger</code> yields this: <a href=\"https://github.com/bobby-brennan/fhir-swagger\" target=\"_blank\" title=\"https://github.com/bobby-brennan/fhir-swagger\">https://github.com/bobby-brennan/fhir-swagger</a>. </p>\n<p>In terms of what kind of tool would be useful, it probably depends on the user. openAPI can be used to:</p>\n<ul>\n<li>auto-populate routes in an API management tool (so a <code>CapabilityStatement</code> works fine)</li>\n<li>generate structs based on the JSON schema within (so you need to get into the IG and structure definitions to make it work)</li>\n</ul>",
        "id": 153993394,
        "sender_full_name": "Nick Hatt",
        "timestamp": 1536152721
    },
    {
        "content": "<p>I think that my interest is producing OpenAPI. I think we expect that other communities to provide the tools that consume openAPI</p>",
        "id": 153993395,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536152833
    },
    {
        "content": "<p>I'll to a post on it once we figure out what our tooling strategy is</p>",
        "id": 153993396,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536152851
    },
    {
        "content": "<p>Swagger was \"donated\" to become OpenAPI, so some will still refer to them as one in the same.</p>",
        "id": 153993400,
        "sender_full_name": "Nick Hatt",
        "timestamp": 1536153204
    },
    {
        "content": "<p>Our team also has some received wisdom that Swagger/Open API doesn't work well with FHIR.  Someone thinks it has to do with Swagger not supporting the full capabilities of JSON and that the FHIR spec uses those features of JSON.  Does this have any merit?  If our project is just to make data available in FHIR format and not describe any specific things about the FHIR files then we should probably be fine with Swagger/OpenAPI to do our documentation right?</p>",
        "id": 153993613,
        "sender_full_name": "Michael Knoll",
        "timestamp": 1536202645
    },
    {
        "content": "<p>early versions of JSON schema were not up to supporting FHIR at all. More recent versions are theoretically able, but getting a diverse set of json schema validators to agree about a valid json schema is a tough problem.</p>",
        "id": 153993614,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536203095
    },
    {
        "content": "<p>the openAPI part is not difficult - there's things we say in our capability statement that are not part of an openAPI document and vice versa, but I think that these differences make sense.</p>",
        "id": 153993615,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536203148
    },
    {
        "content": "<p>OK so here is my proposed approach to openAPI artifacts in <strong>IG</strong> publications.   I will create a link to the openAPI json file  on the conformance page. ( Eventually I want to replace the much my documentation with the OpenApi generated docs but still on my todo list.)</p>\n<p>I think a nice to have would be a  IG-like-Publisher to just create the openApi based on the CapStatements   Or a command line tool like the validator...</p>",
        "id": 153993877,
        "sender_full_name": "Eric Haas",
        "timestamp": 1536251477
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 153993884,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1536252134
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195775\">@Michael Hansen</span> FYI (since Michael has been doing some work on using  OpenAPI representations of a FHIR server's endpoints to configure Azure API Management).</p>",
        "id": 153993929,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1536255311
    },
    {
        "content": "<p>so the IG publisher does just create the openAPI documents</p>",
        "id": 153994101,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536270711
    },
    {
        "content": "<p>IG publishing tool is powerful but too complicated.  It would be better to have a simpler tool to generate openAPI document from CapabilityStatement.</p>",
        "id": 153994113,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1536273269
    },
    {
        "content": "<p>what would that tool look like?</p>",
        "id": 153994117,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536273741
    },
    {
        "content": "<p>a command line tool?  inputs = Capstatement   output = openAPi???  or is it not that simple?</p>",
        "id": 153994120,
        "sender_full_name": "Eric Haas",
        "timestamp": 1536273912
    },
    {
        "content": "<p>well, that's what the publisher is - a command line tool</p>",
        "id": 153994121,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536273969
    },
    {
        "content": "<p>that's too complicated...</p>",
        "id": 153994122,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536273974
    },
    {
        "content": "<p>Michael has taken the a quick pass at building a tool that reads the capability statement and spits out and OpenAPI document matching the interactions listed in that statement. It doesn't get into details of data profiling, however. I wonder to what degree those kinds of details should be reflected?</p>",
        "id": 153994125,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1536274627
    },
    {
        "content": "<p>(the tool is also wrapped as a web service so you can call it with a URL to a capability statement and it returns the JSON.)</p>",
        "id": 153994126,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1536274653
    },
    {
        "content": "<p>it should at least use the base JSON Schema for resources</p>",
        "id": 153994128,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536274708
    },
    {
        "content": "<p>and it would be interesting to compare outputs.</p>",
        "id": 153994131,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536274749
    },
    {
        "content": "<p><a href=\"https://build.fhir.org/ig/HL7/US-Core/CapabilityStatement-server.json\" target=\"_blank\" title=\"https://build.fhir.org/ig/HL7/US-Core/CapabilityStatement-server.json\">https://build.fhir.org/ig/HL7/US-Core/CapabilityStatement-server.json</a></p>",
        "id": 153994134,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536274858
    },
    {
        "content": "<p>vs</p>",
        "id": 153994135,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536274859
    },
    {
        "content": "<p><a href=\"https://build.fhir.org/ig/HL7/US-Core/CapabilityStatement-server.openapi.json\" target=\"_blank\" title=\"https://build.fhir.org/ig/HL7/US-Core/CapabilityStatement-server.openapi.json\">https://build.fhir.org/ig/HL7/US-Core/CapabilityStatement-server.openapi.json</a></p>",
        "id": 153994137,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536274957
    },
    {
        "content": "<p>only that is not turned on for US core</p>",
        "id": 153994138,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536274965
    },
    {
        "content": "<p>Does the OpenAPI spit out the JSON and RDF too?</p>",
        "id": 153994140,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536275146
    },
    {
        "content": "<p>no RDF. just json</p>",
        "id": 153994141,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536275156
    },
    {
        "content": "<p>and xml</p>",
        "id": 153994142,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536275164
    },
    {
        "content": "<p>Sorry for being late here. I did create a small service, which can be used to return an openapi definition from a capability statement. It's pretty simplistic right now, e.g. try </p>\n<p>GET <a href=\"https://fhir2apim.azurewebsites.net/api/Swagger?fhirserver=http://hapi.fhir.org/baseDstu3/\" target=\"_blank\" title=\"https://fhir2apim.azurewebsites.net/api/Swagger?fhirserver=http://hapi.fhir.org/baseDstu3/\">https://fhir2apim.azurewebsites.net/api/Swagger?fhirserver=http://hapi.fhir.org/baseDstu3/</a></p>\n<p>Most notably it does <em>not</em> include the JSON schemas for the resources. I do have a version that does that, but I was struggling with the fact that there is so many references within each resource definition and a lot of services that ingest the openapi files struggle with that.</p>",
        "id": 153994403,
        "sender_full_name": "Michael Hansen",
        "timestamp": 1536352717
    },
    {
        "content": "<blockquote>\n<p>there is so many references within each resource definition</p>\n</blockquote>\n<p>which set of json schemas are you using?</p>",
        "id": 153994405,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536353032
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>there is so many references within each resource definition</p>\n</blockquote>\n<p>which set of json schemas are you using?</p>\n</blockquote>\n<p><a href=\"https://hl7.org/fhir/fhir.schema.json\" target=\"_blank\" title=\"https://hl7.org/fhir/fhir.schema.json\">https://hl7.org/fhir/fhir.schema.json</a></p>",
        "id": 153994708,
        "sender_full_name": "Michael Hansen",
        "timestamp": 1536367630
    },
    {
        "content": "<p>try with these</p>",
        "id": 153994709,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536367689
    },
    {
        "content": "<p><a href=\"https://build.fhir.org/fhir.schema.json\" target=\"_blank\" title=\"https://build.fhir.org/fhir.schema.json\">https://build.fhir.org/fhir.schema.json</a></p>",
        "id": 153994710,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536367692
    },
    {
        "content": "<p>but in general, json schema is only now able to describe our json, and tooling support seems very hit and miss; I cannot get a consistent set of schema and resources and tools to all agree</p>",
        "id": 153994712,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536367749
    },
    {
        "content": "<p>I'll try a bit later on this weekend. Have to go back and rework some code, but looking at it quickly there are still a few issues that some tools will not like: 1) all the definitions refer to other definitions (that refer to other definitions), some import tools don't like that, even if it is technically OK, 2) some tools complain about things like:</p>\n<div class=\"codehilite\"><pre><span></span>&quot;type&quot;: {\n          &quot;description&quot;: &quot;The kind of specimen conditioned for testing expected by lab.&quot;,\n          &quot;$ref&quot;: &quot;#/definitions/CodeableConcept&quot;\n        },\n</pre></div>\n\n\n<p>Having a description and then a reference (that may have a description). Not sure what is technically right or not, but I have seen errors due to that.</p>",
        "id": 153994717,
        "sender_full_name": "Michael Hansen",
        "timestamp": 1536367967
    },
    {
        "content": "<p>Having descriptions on both property and type seems to be a pretty fundamental thing - I might well have three different properties all with a type of CodeableConcept.  I'm certainly going to want different descriptions for each.  And I'll want a description on CodeableConcept to explain what it's for.  Any tool that can't handle that has a <em>very</em> simplified view of the world...</p>",
        "id": 153994721,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536368119
    },
    {
        "content": "<p>Definitely agree with that, but that was one of the things that were flagged in <a href=\"http://editor.swagger.io\" target=\"_blank\" title=\"http://editor.swagger.io\">editor.swagger.io</a>.</p>",
        "id": 153994728,
        "sender_full_name": "Michael Hansen",
        "timestamp": 1536368349
    },
    {
        "content": "<blockquote>\n<p>all the definitions refer to other definitions (that refer to other definitions)</p>\n</blockquote>\n<p>There should only be element/type in there, like the one you quoted. there shouldn't be anything else</p>",
        "id": 153994731,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536368467
    },
    {
        "content": "<p>Engaging <span class=\"user-mention\" data-user-id=\"192609\">@Mark Scrimshire</span> - have you seen this thread</p>",
        "id": 153997425,
        "sender_full_name": "Mario Hyland",
        "timestamp": 1537205104
    },
    {
        "content": "<blockquote>\n<p>Engaging <span class=\"user-mention\" data-user-id=\"192609\">@Mark Scrimshire</span> - have you seen this thread</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191460\">@Mario Hyland</span> If I come across anyone interested in FHIR, whether in Government or the Private Sector I encourage them to get to a Connectathon :)</p>",
        "id": 153997462,
        "sender_full_name": "Mark Scrimshire",
        "timestamp": 1537220127
    },
    {
        "content": "<p>Has anyone dragged Kin Lane into this conversation?</p>",
        "id": 154004314,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1538452070
    },
    {
        "content": "<p>I know he expressed an interest in seeing this get resolved -- and maybe helping? I dunno', it was a while ago.</p>",
        "id": 154004315,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1538452108
    },
    {
        "content": "<p>Anyways, I'll point him here on the twitters.</p>",
        "id": 154004316,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1538452122
    },
    {
        "content": "<p><a href=\"https://twitter.com/karlmdavis/status/1046971432507461639\" target=\"_blank\" title=\"https://twitter.com/karlmdavis/status/1046971432507461639\">https://twitter.com/karlmdavis/status/1046971432507461639</a></p>",
        "id": 154004317,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1538452506
    },
    {
        "content": "<p>I wanted to pick this discussion up again. <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> , any news on this? I have been searching here on Zulip and other places. As best as I can tell, the server.openapi.json files produced in the IGs are not valid. Even the most basic OpenAPI specs such as this example <a href=\"https://gist.github.com/hansenms/2cf6692186d98084343020244b2affaf\" target=\"_blank\" title=\"https://gist.github.com/hansenms/2cf6692186d98084343020244b2affaf\">https://gist.github.com/hansenms/2cf6692186d98084343020244b2affaf</a> cause <a href=\"http://editor.swagger.io\" target=\"_blank\" title=\"http://editor.swagger.io\">editor.swagger.io</a> to crash when inspecting the operation, etc. Do we have any tooling out there that can produce an OpenAPI spec (with schema references)?</p>",
        "id": 158849836,
        "sender_full_name": "Michael Hansen",
        "timestamp": 1550553695
    },
    {
        "content": "<p>what's invalid about them?</p>",
        "id": 158849903,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1550553783
    },
    {
        "content": "<blockquote>\n<p>what's invalid about them?</p>\n</blockquote>\n<p>Well, take this one for instance: <a href=\"https://build.fhir.org/ig/HL7/cdmh/server.openapi.json\" target=\"_blank\" title=\"https://build.fhir.org/ig/HL7/cdmh/server.openapi.json\">https://build.fhir.org/ig/HL7/cdmh/server.openapi.json</a> , the references to the schema look like:  <code>http://hl7.org/fhir/STU3/fhir.json.schema#/definitions/OperationOutcome</code>. The actual URL for the schema is <a href=\"https://www.hl7.org/fhir/STU3/fhir.schema.json\" target=\"_blank\" title=\"https://www.hl7.org/fhir/STU3/fhir.schema.json\">https://www.hl7.org/fhir/STU3/fhir.schema.json</a> so all the references are incorrect. There are a number of other structural and resolver errors.</p>",
        "id": 158852328,
        "sender_full_name": "Michael Hansen",
        "timestamp": 1550557120
    },
    {
        "content": "<p>so this is a chronic problem that everyone has a different answer to: the difference between logical and literal references for schema. I am assured that the references are logical not literal</p>",
        "id": 158852344,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1550557180
    },
    {
        "content": "<blockquote>\n<p>so this is a chronic problem that everyone has a different answer to: the difference between logical and literal references for schema. I am assured that the references are logical not literal</p>\n</blockquote>\n<p>Sorry for being a bit slow here. Can't say that I am an OpenAPI expert by any stretch, so I may be totally misunderstanding something. I am not sure what you mean by the distinction between logical and literal references, but the references in the openapi specs in the IGs are URL references (OpenAPI spec: <a href=\"https://swagger.io/docs/specification/using-ref/\" target=\"_blank\" title=\"https://swagger.io/docs/specification/using-ref/\">https://swagger.io/docs/specification/using-ref/</a>). It is expected that they be resolved. The current URLs refer to schema URLs that don't exist. The reference within the schema, e.g. <code>#/definitions/OperationOutcome</code> may be correct, but the URL itself is not. Moreover, when they are actually corrected, they cause most commonly used tooling, e.g. <a href=\"https://editor.swagger.io\" target=\"_blank\" title=\"https://editor.swagger.io\">https://editor.swagger.io</a>, to break. There are also structural errors, e.g. <code>info</code> must have <code>title</code>, etc. So I am wondering, how are these OpenAPI specs validated?</p>",
        "id": 158853397,
        "sender_full_name": "Michael Hansen",
        "timestamp": 1550558858
    },
    {
        "content": "<blockquote>\n<p>Even though the value of a $ref is a URI, it is not a network locator, only an identifier. This means that the schema doesn’t need to be accessible at that URI, but it may be. It is basically up to the validator implementation how external schema URIs will be handled, but one should not assume the validator will fetch network resources indicated in $ref values.</p>\n</blockquote>",
        "id": 158854096,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1550559897
    },
    {
        "content": "<p><a href=\"https://json-schema.org/understanding-json-schema/structuring.html\" target=\"_blank\" title=\"https://json-schema.org/understanding-json-schema/structuring.html\">https://json-schema.org/understanding-json-schema/structuring.html</a></p>",
        "id": 158854099,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1550559901
    },
    {
        "content": "<p>you might take this up with one of those communities....</p>",
        "id": 158854112,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1550559922
    },
    {
        "content": "<p>I validate the json schema with json schema tools</p>",
        "id": 158854119,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1550559942
    },
    {
        "content": "<p>So if the URL is not meant to be accessible, what is it meant to do? If the schema cannot be found either in the openapi spec file itself or as a remote schema then what is the purpose of the reference?<br>\nI understand that our schema is a valid schema file, what I am saying is that the openapi spec generated by the IG builder is not a valid openapi spec. How is the openapi spec validated?</p>",
        "id": 158888663,
        "sender_full_name": "Michael Hansen",
        "timestamp": 1550588857
    },
    {
        "content": "<p>it's not validated (obviously). How should it be validated?</p>",
        "id": 158901071,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1550598176
    },
    {
        "content": "<blockquote>\n<p>it's not validated (obviously). How should it be validated?</p>\n</blockquote>\n<p>Yeah, that is a good question ;) I think something like openapi-lint would catch the structural errors, but there are also tools that will try to resolve all the schema references and see if it is still valid. </p>\n<p>So I think the challenge is that one can have a perfectly valid json schema that will not work well for an openapi spec. The json schema has uses beyond creating an openapi spec, but the question is if the current one can actually be used for an openapi spec.  And if we have tooling, such as the IG publishing tools that generate an openapi spec, what can we do to validate it in that context.</p>\n<p>The purpose of having an openapi spec would be to be able to leverage other tools out there that generate client libraries, connectors, etc. If it cannot be used for that purpose, then we should maybe rethink that?</p>",
        "id": 158901854,
        "sender_full_name": "Michael Hansen",
        "timestamp": 1550598712
    },
    {
        "content": "<p>well, that's certainly the purpose. I've just found this whole area very troublesome - json schema itself has been a moving target and even now the tools differ over interpretations inside the the content. I think that 3 of the current 6 json schema tools agree enough to interpret the FHIR schemas correctly. I expect that we'll have more problems reported on them</p>",
        "id": 158902059,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1550598842
    },
    {
        "content": "<p>that openAPI deviates from json schema (this is the second place I've found that) makes matters worse...</p>",
        "id": 158902105,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1550598869
    },
    {
        "content": "<p>I</p>",
        "id": 158902109,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1550598871
    },
    {
        "content": "<p>I'll do a round of development on this next month (once I stop travelling). The code is here:</p>",
        "id": 158902136,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1550598897
    },
    {
        "content": "<blockquote>\n<p>I'll do a round of development on this next month (once I stop travelling). The code is here:</p>\n</blockquote>\n<p>Think the code link was missing. In any case, I have been doing quite a bit of exploring myself and I share your frustration. If there is something I can do to help, then I would be happy to.</p>",
        "id": 158902328,
        "sender_full_name": "Michael Hansen",
        "timestamp": 1550599021
    },
    {
        "content": "<p>package org.hl7.fhir.igtools.openapi in the FHIR github <a href=\"https://github.com/HL7/fhir/tree/master/tools/java/org.hl7.fhir.igtools/src/org/hl7/fhir/igtools/openapi\" target=\"_blank\" title=\"https://github.com/HL7/fhir/tree/master/tools/java/org.hl7.fhir.igtools/src/org/hl7/fhir/igtools/openapi\">https://github.com/HL7/fhir/tree/master/tools/java/org.hl7.fhir.igtools/src/org/hl7/fhir/igtools/openapi</a></p>",
        "id": 158902373,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1550599058
    },
    {
        "content": "<p>I was just digging it up</p>",
        "id": 158902379,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1550599064
    },
    {
        "content": "<p>well, I'll get back to you for testing help once I have revisited the generation</p>",
        "id": 158902405,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1550599081
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> would you mind extracting either the openapi package from the publisher as a separate lib and put in eg. the <a href=\"https://github.com/hapifhir/org.hl7.fhir.core\" target=\"_blank\" title=\"https://github.com/hapifhir/org.hl7.fhir.core\">https://github.com/hapifhir/org.hl7.fhir.core</a> repo or extract the igpublisher and put it there (I'll also be willing to do it if you will accept my PR's).</p>\n<p>I can tell that the OpenAPI package does not refer to any other libraries than the hapi r4 structure defs. Having it extracted and separated out makes it easier to enhance its generation for others (such as myself). I can't say that I've been digging deep into the OpenAPI spec, but I can say that <a href=\"https://editor.swagger.io\" target=\"_blank\" title=\"https://editor.swagger.io\">https://editor.swagger.io</a> have some complaints about the generated OpenAPI and branching the entire FHIR spec for introducing bug fixes and new features to the generation seems a bit overkill.</p>",
        "id": 159697230,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1551435507
    },
    {
        "content": "<p>I'm planning to move the igpublisher to maven (in a different repository). But I'll not be doing it until late April when there's no pressure on the publishing system - the downstream impact for moving core was considerable</p>",
        "id": 159703776,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1551440309
    },
    {
        "content": "<p>I will consider moving the OpenAPI stuff when I get a chance - internally, I'm midway through migrating the build to R5, and I need to commit that first</p>",
        "id": 159703826,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1551440352
    },
    {
        "content": "<p>Hi, A newbie on board. I was just about looking for tooling for generating swagger (openAPI) but there was no reference <a href=\"https://www.hl7.org/fhir/\" target=\"_blank\" title=\"https://www.hl7.org/fhir/\">https://www.hl7.org/fhir/</a>. I've actually found an external tool <a href=\"https://github.com/bobby-brennan/fhir-swagger/\" target=\"_blank\" title=\"https://github.com/bobby-brennan/fhir-swagger/\">https://github.com/bobby-brennan/fhir-swagger/</a> but unfortunately it is generating faulty swagger file. (It seems actually the metadata on the test server contains duplications that the tool cannot recognize that). The tooling you referring is something similar? How someone new can find the toolbox around fhir?</p>",
        "id": 159752984,
        "sender_full_name": "Zoltan Simon",
        "timestamp": 1551477529
    },
    {
        "content": "<p>Dumb question:  what is the scope of the <a href=\"https://github.com/hapifhir/org.hl7.fhir.core\" target=\"_blank\" title=\"https://github.com/hapifhir/org.hl7.fhir.core\">https://github.com/hapifhir/org.hl7.fhir.core</a> repo?  I also recently saw an announcement for <a href=\"https://github.com/FHIR/packages\" target=\"_blank\" title=\"https://github.com/FHIR/packages\">https://github.com/FHIR/packages</a> and I'm having a little trouble following the intent of the various repos.</p>",
        "id": 160004375,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1551794070
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span></p>",
        "id": 160013648,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1551800864
    },
    {
        "content": "<p>the core repository contains the code that is shared between the build and HAPI. Specifically: generated model code and related utilities, + the FHIR validator</p>",
        "id": 160022806,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1551807371
    },
    {
        "content": "<p>Should this be returning something, or is that value more like a canonical than an explicit thing?<br>\n<a href=\"https://hl7.org/fhir/STU3/fhir.json.schema\" target=\"_blank\" title=\"https://hl7.org/fhir/STU3/fhir.json.schema\">https://hl7.org/fhir/STU3/fhir.json.schema</a><br>\n<a href=\"https://editor.swagger.io\" target=\"_blank\" title=\"https://editor.swagger.io\">https://editor.swagger.io</a> seems to want to resolve it explictly (it could be wrong too)</p>",
        "id": 162420677,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1554291511
    },
    {
        "content": "<p>(yes I'm no OpenAPI/Swagger expert either)</p>",
        "id": 162420688,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1554291531
    },
    {
        "content": "<p>the problem is that Json schema says that the URLs are <em>not</em> literal. And openAPI says that they are</p>",
        "id": 162483704,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554338826
    },
    {
        "content": "<p>and I don't know how to resolve that</p>",
        "id": 162483710,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554338840
    },
    {
        "content": "<p>Also, should I expect the search parameters to be extracted into it?</p>",
        "id": 162484824,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1554340021
    },
    {
        "content": "<p>yes.</p>",
        "id": 162484839,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554340035
    },
    {
        "content": "<p>Ok, I must have something not quite right in my IG still.</p>",
        "id": 162484850,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1554340060
    },
    {
        "content": "<p>could be my code....</p>",
        "id": 162484923,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554340141
    },
    {
        "content": "<p>no looks like I haven't got to that yet</p>",
        "id": 162484957,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554340195
    },
    {
        "content": "<p>I'm doing a round of dev on the open api stuff in the next few days - will do that thne</p>",
        "id": 162485019,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554340222
    },
    {
        "content": "<p>Cool. The other thing I spotted was that the parameters in the read calls aren't there too as in {rid} and {hid} aren't defined.</p>",
        "id": 162485116,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1554340374
    },
    {
        "content": "<p>can you show me an example of what you mean?</p>",
        "id": 162485578,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554340920
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/7L7Z-Y6_l4FsmmuKR04Hvv4X/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a> <br>\n<a href=\"/user_uploads/10155/TVr69cB3jJkQ1zpPPffLKhEa/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a> <br>\nI can go dig for what the OpenAPI should look like to define that...</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/7L7Z-Y6_l4FsmmuKR04Hvv4X/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/7L7Z-Y6_l4FsmmuKR04Hvv4X/pasted_image.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/10155/TVr69cB3jJkQ1zpPPffLKhEa/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/TVr69cB3jJkQ1zpPPffLKhEa/pasted_image.png\"></a></div>",
        "id": 162485805,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1554341193
    },
    {
        "content": "<p>While you're looking at the OpenAPI stuff, the definition of many search parameters, and operation definitions will be from dependencies rather than local to the IG. I'm sure you're aware of that, but it's what my IG has and thought I'd put that fresh in mind while you're into it.</p>",
        "id": 162487892,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1554343976
    },
    {
        "content": "<p>And one more item, the Type History e.g. /ValueSet/_history</p>",
        "id": 162489999,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1554346956
    },
    {
        "content": "<p>Anyone know where can we find the latest <a href=\"https://hl7.org/fhir/STU3/fhir.json.schema\" target=\"_blank\" title=\"https://hl7.org/fhir/STU3/fhir.json.schema\">https://hl7.org/fhir/STU3/fhir.json.schema</a> file?</p>",
        "id": 162491951,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1554349802
    },
    {
        "content": "<p>doesn't matter where the content is declared</p>",
        "id": 162493394,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554351646
    },
    {
        "content": "<p><a href=\"https://hl7.org/fhir/STU3/fhir.schema.json\" target=\"_blank\" title=\"https://hl7.org/fhir/STU3/fhir.schema.json\">https://hl7.org/fhir/STU3/fhir.schema.json</a></p>",
        "id": 162493406,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554351665
    },
    {
        "content": "<p>Then should the value be the other way around that is generated, or doesn't that matter?<br>\n<a href=\"https://swagger.io/docs/specification/using-ref/\" target=\"_blank\" title=\"https://swagger.io/docs/specification/using-ref/\">https://swagger.io/docs/specification/using-ref/</a> is where I was looking.<br>\nand here too:<br>\n<a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#document-structure\" target=\"_blank\" title=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#document-structure\">https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#document-structure</a></p>",
        "id": 162495822,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1554355380
    },
    {
        "content": "<p>well, that's the issue with literal vs logical. I deliberately chose not to use literal because of versioning problems</p>",
        "id": 162496043,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554355740
    },
    {
        "content": "<p>The literal here is going to the versioned location, but I'm sure that's not what you're referring to right?</p>",
        "id": 162496909,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1554357051
    },
    {
        "content": "<p>Should the generation process save that file in each guide that its generated, and then reference the local file, rather than an absolute one?<br>\nThen versioning would be quite explicit?</p>",
        "id": 162497523,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1554357907
    },
    {
        "content": "<p>I don't know that that means</p>",
        "id": 162497598,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554357977
    },
    {
        "content": "<p>copy the file at  <a href=\"https://hl7.org/fhir/STU3/fhir.json.schema\" target=\"_blank\" title=\"https://hl7.org/fhir/STU3/fhir.json.schema\">https://hl7.org/fhir/STU3/fhir.json.schema</a> (or whichever version you need) into the local IG output (not an external reference) then the format is <code>$ref: 'fhir.schema.json#/definitions/Bundle'</code></p>",
        "id": 162498041,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1554358526
    },
    {
        "content": "<p>Then its now an IG specific reference, still external to the core document problem, but will resolve relative to the location of the generated file.</p>",
        "id": 162498074,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1554358565
    },
    {
        "content": "<p>Thus ducking the version problem (as the IG Publisher has decided that) and is still relative to the generated code.</p>",
        "id": 162498123,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1554358608
    },
    {
        "content": "<p>doesn't help if you are working across IGs</p>",
        "id": 162501032,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554362470
    },
    {
        "content": "<p>Nope.</p>",
        "id": 162508343,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1554370228
    },
    {
        "content": "<p>Have 3 more bug fixes for the OpenAPI support:<br>\n1. Parameters components casing is mixed<br>\nUpper case when used, lower case when defined</p>\n<div class=\"codehilite\"><pre><span></span>      parameters:\n        - $ref: &#39;#/components/parameters/summary&#39;\n        - $ref: &#39;#/components/parameters/format&#39;\n        - $ref: &#39;#/components/parameters/pretty&#39;\n        - $ref: &#39;#/components/parameters/elements&#39;\n</pre></div>\n\n\n<p>2. ETag definition is missing the schema</p>\n<div class=\"codehilite\"><pre><span></span>            ETag:\n              description: Version from Resource.meta.version as a weak ETag\n              schema:\n                type: string\n</pre></div>\n\n\n<p>3. Need rid and hid parameters defined and included where required in the GET DELETE HISTORY and other operations</p>\n<div class=\"codehilite\"><pre><span></span>        - $ref: &#39;#/components/parameters/rid&#39;\n        - $ref: &#39;#/components/parameters/hid&#39;\n\n    rid:\n      name: rid\n      in: path\n      description: The Resource.Id for a specific resourcetype\n      allowEmptyValue: false\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n    hid:\n      name: hid\n      in: path\n      description: The Resource.Meta.VerionId for a specific resourcetype\n      allowEmptyValue: false\n      required: true\n      style: simple\n      explode: false\n      schema:\n        type: string\n</pre></div>\n\n\n<p>The other thing that would be a \"nice to have\" is to filter down the search parameter descriptions to only the resource type that is being output.<br>\ne.g. Don't show the description details for Patient, Person and RelatedPerson when outputting the Practitioner search operation</p>\n<p>This is then very close to being able to work with the Swagger editor (even though it consumes a ridiculous amount of memory trying to process things.</p>",
        "id": 165587642,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1557801686
    },
    {
        "content": "<p>Is there any thought on generating the STU3 json schema files like this one?<br>\n<a href=\"https://www.hl7.org/fhir/R4/practitioner.schema.json.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/R4/practitioner.schema.json.html\">https://www.hl7.org/fhir/R4/practitioner.schema.json.html</a><br>\nAnd the actual .json file isn't there, only the html version of that file.</p>",
        "id": 165587852,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1557801977
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> was also thinking about producing a cut down version of the json schema embedded into itself based on the base profile for the resource defined in the guide, and not include any extensions or contained resources not defined in the profile, essentially then cutting it down to a restricted level, removing the issues with nesting. Thoughts?</p>",
        "id": 165620005,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1557839118
    },
    {
        "content": "<p>It’s on my todo list</p>",
        "id": 165621282,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557840047
    },
    {
        "content": "<p>This would be super valuable -- if as a rough test, It was something simple and limited enough to load in the default tooling from OpenAPI.</p>",
        "id": 165649384,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1557859223
    },
    {
        "content": "<p>I'm going to take a go at this, might take me a while though.</p>",
        "id": 165676966,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1557882248
    },
    {
        "content": "<p>How do you implement your FHIR HAPI API? Urgent for my TCC.<br>\nWhat resources can I use to represent this UML diagram?<br>\n<a href=\"/user_uploads/10155/Dqy6pErVPCJGyB1_0cBb-DgV/WhatsApp-Image-2019-05-31-at-5.07.29-PM.jpeg\" target=\"_blank\" title=\"WhatsApp-Image-2019-05-31-at-5.07.29-PM.jpeg\">WhatsApp-Image-2019-05-31-at-5.07.29-PM.jpeg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/Dqy6pErVPCJGyB1_0cBb-DgV/WhatsApp-Image-2019-05-31-at-5.07.29-PM.jpeg\" target=\"_blank\" title=\"WhatsApp-Image-2019-05-31-at-5.07.29-PM.jpeg\"><img src=\"/user_uploads/10155/Dqy6pErVPCJGyB1_0cBb-DgV/WhatsApp-Image-2019-05-31-at-5.07.29-PM.jpeg\"></a></div>",
        "id": 167418861,
        "sender_full_name": "morgana de cássia oliveira ribeiro",
        "timestamp": 1559760682
    },
    {
        "content": "<p>Hmmm. assuming that not <strong>everyone</strong> in this forum reads Portuguese...</p>",
        "id": 167419247,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1559760954
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"198823\">@morgana de cássia oliveira ribeiro</span> FHIR is for interoperability and is more specific, and it does not map 1:1 to your ER diagram. <br>\nYou have patient and device there, which don't even map to your relations (because we have several ways to link patient to device)</p>",
        "id": 167419506,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1559761101
    },
    {
        "content": "<p>Address is a datatype, not a resource, and could include your Endereco (address), municipio (city) and estado (state)</p>",
        "id": 167419671,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1559761206
    },
    {
        "content": "<p>Pessoa juridica e pessoa fisica (juridical and physical person) do not really map to resources</p>",
        "id": 167419739,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1559761265
    },
    {
        "content": "<p>Profissional may map to Practitioner</p>",
        "id": 167419780,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1559761312
    },
    {
        "content": "<p>Event is not mapping to how we capture things.</p>",
        "id": 167419856,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1559761349
    },
    {
        "content": "<p>If you need more insight, can you break down the problem and identify what information you are trying to exchange?</p>",
        "id": 167420199,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1559761579
    },
    {
        "content": "<p>Poderia me tirar uma dúvida?</p>\n<p>Zulip missed messages &lt;<a href=\"mailto:noreply@zulipchat.com\" title=\"mailto:noreply@zulipchat.com\">noreply@zulipchat.com</a>&gt; escreveu no dia quarta,<br>\n5/06/2019 à(s) 16:00:</p>",
        "id": 167425347,
        "sender_full_name": "morgana de cássia oliveira ribeiro",
        "timestamp": 1559765130
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> can you please advise if there are any progress on this for both to transform StructureDefinition  and capabilitystatement from FHIR to OpenApi and potentially swagger ?</p>",
        "id": 185133186,
        "sender_full_name": "Medi Harsini",
        "timestamp": 1578502879
    },
    {
        "content": "<p>Has anyone used an automated tool to generate openapi. I only the tool which transform the capability statement, nothing on the profiles or resources or structure definition or code system etc</p>",
        "id": 185235084,
        "sender_full_name": "Medi Harsini",
        "timestamp": 1578590998
    },
    {
        "content": "<p>the IG publisher publishes openAPI documents for capability statements, but there are many problems with open api in the json schema</p>",
        "id": 185261148,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1578607399
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> do you know any other tools which does the rest ?</p>",
        "id": 185269173,
        "sender_full_name": "Medi Harsini",
        "timestamp": 1578613605
    },
    {
        "content": "<blockquote>\n<p>does the rest</p>\n</blockquote>\n<p>?</p>",
        "id": 185269940,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1578614236
    },
    {
        "content": "<p>Profiles, structure definitions, terminology and codings</p>",
        "id": 185272613,
        "sender_full_name": "Medi Harsini",
        "timestamp": 1578617026
    },
    {
        "content": "<p>there's only a limited degree to which you can represent those things. The JSON schema does so the degree that jon schema supports that</p>",
        "id": 185279194,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1578626637
    },
    {
        "content": "<p>Hello everyone!<br>\nI'm using <code>hapi-fhir-server-openapi</code>.<br>\nI'm trying to configure OpenApiInterceptor.<br>\nHowever, when I'm trying to get <code>[baseurl]/fhir/swagger-ui/</code> I'm getting this log message: </p>\n<div class=\"codehilite\"><pre><span></span><code>.ExceptionHandlingInterceptor : Failure during REST processing: ca.uhn.fhir.rest.server.exceptions.InvalidRequestException: Unable to process request, this server does not know how to handle resources of type StructureDefinition - Can handle: [Coverage, Organization, Patient, Practitioner, SearchParameter]\n2021-05-31 11:42:56.237  INFO 13233 --- [nio-8093-exec-6] fhirtest.access                          : ERROR - GET http://localhost:8093/fhir/swagger-ui/\n</code></pre></div>\n<p>Any ideas about how to set it up correctly?</p>",
        "id": 240815316,
        "sender_full_name": "Jordi Cabré",
        "timestamp": 1622455863
    },
    {
        "content": "<p>you might ask on <a class=\"stream\" data-stream-id=\"179167\" href=\"/#narrow/stream/179167-hapi\">#hapi</a></p>",
        "id": 240827897,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1622464414
    },
    {
        "content": "<p>Hi - it seems that the openapi generated by publisher is currently v3.0.2. Is it possible to get it to generate other versions of openap (speciifcally v2)</p>",
        "id": 278494597,
        "sender_full_name": "Patrick Ryan",
        "timestamp": 1649632081
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span> ?</p>",
        "id": 278497766,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1649636902
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"416858\">@Jordi Cabré</span>, maybe this can help you: <a href=\"https://www.devdays.com/wp-content/uploads/2020/12/zupbb_201120_BrunoRNeves_GenerateAndExposeSwagger_OpenAPIDefinitionsForFHIR.pdf\">https://www.devdays.com/wp-content/uploads/2020/12/zupbb_201120_BrunoRNeves_GenerateAndExposeSwagger_OpenAPIDefinitionsForFHIR.pdf</a></p>",
        "id": 278514651,
        "sender_full_name": "Felipe Soriano",
        "timestamp": 1649660504
    },
    {
        "content": "<p>Oh no.. pdf implementation is from IBM. Try to see this documentation and not let the swagger enter into intercept<br>\n<a href=\"https://hapifhir.io/hapi-fhir/docs/security/authorization_interceptor.html\">https://hapifhir.io/hapi-fhir/docs/security/authorization_interceptor.html</a></p>",
        "id": 278515062,
        "sender_full_name": "Felipe Soriano",
        "timestamp": 1649660869
    },
    {
        "content": "<p>Looking at a couple of quick examples, it appears the generator is not using anything 'net new' in OAS 3 (e.g., <code>oneOf</code>, <code>anyOf</code>) that are not portable, so you should be able to do a simple conversion.  There is not as much tooling for downgrading, but with any library that supports both versions you should be able to 'read 3.x' -&gt; 'write 2.x'.</p>\n<p>Alternatively, I have some tooling which can output pieces in either version, though I have not looked at OpenAPI specifically in a while.  What is your goal with OpenAPI?  If it is something I already support I can go into more detail.</p>",
        "id": 278565438,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1649688828
    },
    {
        "content": "<p>Is this the right place to ask question about HAPI code?</p>",
        "id": 278569673,
        "sender_full_name": "Prince Matthew",
        "timestamp": 1649690308
    },
    {
        "content": "<p>There is a <a class=\"stream\" data-stream-id=\"179167\" href=\"/#narrow/stream/179167-hapi\">#hapi</a> channel for that</p>",
        "id": 278571867,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1649691145
    }
]