[
    {
        "content": "<p>Looking at the R4 fhir.schema.json schema, I noticed that fields having a primitive type that is also required (i.e., 1..1) has no validation to enforce requiredness. As an example, look at <code>careplan.profile.canonical.json</code>. Note that <code>\"id\": \"CarePlan.status\"</code> and <code>\"id\": \"CarePlan.intent\"</code> both have 1..1 cardinality. Now, look in R4 fhir.schema.json at lines 10527-10530 and note that the \"required\" property for careplan only contains \"subject\" and \"resourceType\". Using <code>example-json/careplan-example.json</code> and the R4 fhir.schema.json schema on the <a href=\"https://www.jsonschemavalidator.net/\" target=\"_blank\" title=\"https://www.jsonschemavalidator.net/\">https://www.jsonschemavalidator.net/</a> online validator confirms no validation errors when \"status\" and/or \"intent\" are deleted from the example. </p>\n<p>Primitive fields in the fhir.schema.json have the pattern of defining 2 fields: \"propName\" (normal field) and \"_propName\" (extention field). Requiredness must take an either/or approach to these 2 fields since only one of each \"status\" and \"intent\" is required.</p>\n<p>A straight forward change to the fhir.schema.json can fix this issue.<br>\nIn fhir.schemn.json, replace lines 10527-10530: </p>\n<div class=\"codehilite\"><pre><span></span>      &quot;required&quot;: [\n        &quot;subject&quot;,\n        &quot;resourceType&quot;\n      ]\n</pre></div>\n\n\n<p>with the following:</p>\n<div class=\"codehilite\"><pre><span></span>      &quot;allOf&quot;: [\n        {\n          &quot;required&quot;: [&quot;subject&quot;, &quot;resourceType&quot;]\n        },\n        {\n          &quot;anyOf&quot;: [{ &quot;required&quot;: [&quot;status&quot;] }, { &quot;required&quot;: [&quot;_status&quot;] }],\n          &quot;not&quot;: { &quot;required&quot;: [&quot;status&quot;, &quot;_status&quot;] }\n        },\n        {\n          &quot;anyOf&quot;: [{ &quot;required&quot;: [&quot;intent&quot;] }, { &quot;required&quot;: [&quot;_intent&quot;] }],\n          &quot;not&quot;: { &quot;required&quot;: [&quot;intent&quot;, &quot;_intent&quot;] }\n        }\n      ]\n</pre></div>\n\n\n<p>Retesting with <code>example-json/careplan-example.json</code> and the R4 fhir.schema.json schema with the above changes confirms errors for missing any/all of the required fields.</p>\n<p>NOTE: This is an issue for all resources having primitive fields that have a 1..1 cardinality!</p>\n<p>I'd be happy to create a bug against the generated fhir.schema.json if someone would point me in the right direction.</p>",
        "id": 165200639,
        "sender_full_name": "Joe Paquette",
        "timestamp": 1557349291
    },
    {
        "content": "<p>To log a bug, click on the \"propose a change\" link at the bottom of any page in the FHIR spec.  You'll need to do a one-time registration, after which you can log as many bugs as you like :)</p>",
        "id": 165207348,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1557354884
    },
    {
        "content": "<p>getting back to the issue....</p>",
        "id": 165585758,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557798895
    },
    {
        "content": "<p>returning to this, I do not understand what is going on here</p>",
        "id": 165591694,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557807396
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n     <span class=\"nt\">&quot;anyOf&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span> <span class=\"nt\">&quot;required&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;status&quot;</span><span class=\"p\">]</span> <span class=\"p\">},</span> <span class=\"p\">{</span> <span class=\"nt\">&quot;required&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;_status&quot;</span><span class=\"p\">]</span> <span class=\"p\">}],</span>\n    <span class=\"nt\">&quot;not&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"nt\">&quot;required&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;status&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_status&quot;</span><span class=\"p\">]</span> <span class=\"p\">}</span>\n<span class=\"p\">}</span><span class=\"err\">,</span>\n</pre></div>",
        "id": 165591712,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557807435
    },
    {
        "content": "<p>the anyOf I understand, but not the <code>not</code> - what's that about?</p>",
        "id": 165591719,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557807452
    },
    {
        "content": "<p><code>_primitive</code> just was a bad idea :/    - maybe it's not too late fix it :)</p>",
        "id": 165629186,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1557845664
    },
    {
        "content": "<p>I agree it was a bad idea and I said so at the time. (and people assured me I just didn't understand JSON at the time). But it is too late to change it now</p>",
        "id": 165656599,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557863963
    }
]