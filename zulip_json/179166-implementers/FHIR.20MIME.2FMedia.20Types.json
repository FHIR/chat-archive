[
    {
        "content": "<p>In the past few connectathons, I've consistently run in to issues with the FHIR MIME type as it's described in the specification (application/xml+fhir or application/json+fhir):</p>\n<p><a href=\"https://hl7-fhir.github.io/http.html#mime-type\" target=\"_blank\" title=\"https://hl7-fhir.github.io/http.html#mime-type\">https://hl7-fhir.github.io/http.html#mime-type</a></p>\n<p>The problem is that some RESTful frameworks (e.g. RESTEasy) have trouble dealing with the content type, and I believe that the reason for the problem is that the media types are not consistent with the current best practice for media types. At least, that's my reading of this RFC:</p>\n<p><a href=\"http://tools.ietf.org/html/rfc6838\" target=\"_blank\" title=\"http://tools.ietf.org/html/rfc6838\">http://tools.ietf.org/html/rfc6838</a></p>\n<p>In addition, a quick review of the media type registry here:</p>\n<p><a href=\"http://www.iana.org/assignments/media-types/media-types.xhtml\" target=\"_blank\" title=\"http://www.iana.org/assignments/media-types/media-types.xhtml\">http://www.iana.org/assignments/media-types/media-types.xhtml</a></p>\n<p>seems to support that interpretation because there are no media types registered that use the xml+XXXX or json+XXXX format.</p>\n<p>So I think this raises two questions:</p>\n<p>1) Should the FHIR spec be changed to specify the media types as application/fhir+xml and application/fhir+json</p>\n<p>2) Should these media types be registered with IANA?</p>",
        "id": 153833089,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1466022398
    },
    {
        "content": "<p>See FHIR list server for response (or ITS list)</p>",
        "id": 153833091,
        "sender_full_name": "Andy Stechishin",
        "timestamp": 1466023093
    },
    {
        "content": "<p>Implementers need to express their opinion on this one please - here or on the list </p>",
        "id": 153833124,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466036939
    },
    {
        "content": "<p>We haven't hit this (yet!), but I would think that using the standard XML and JSON MIME types would be better.  I'm very unclear on what practical advantage you'd get from using FHIR-specific ones.</p>",
        "id": 153833129,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466037375
    },
    {
        "content": "<p>pretty much the only identified advantage is not changing existing practice </p>",
        "id": 153833135,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466039730
    },
    {
        "content": "<p>+1 for using standard mime types - the joy of having your tools detect the data and handle it nicely for you seem to outweigh the need know you have  a FHIR resource (which is determinable from deeper inspection of content, no?)</p>",
        "id": 153833139,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466040259
    },
    {
        "content": "<p>I strongly support the change</p>",
        "id": 153833141,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1466040345
    },
    {
        "content": "<p>Without the fhir being included in the mimetype (somewhere) from a platform perspective there is no way that you can choose an app to load a document format (association).<br>\nShould we also request a file extension while we go through the stress?</p>",
        "id": 153833143,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1466040749
    },
    {
        "content": "<p>(Not that anyone is doing this at the moment anyway)</p>",
        "id": 153833144,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1466040765
    },
    {
        "content": "<p>fhir will be included in the mime type. Erich is wrong about that</p>",
        "id": 153833145,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466040819
    },
    {
        "content": "<p>?</p>",
        "id": 153833146,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466040890
    },
    {
        "content": "<p>application/fhir+xml, application/fhir+json, application/fhir+ttl</p>",
        "id": 153833147,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466040906
    },
    {
        "content": "<p>those are the new proposed types. Not sure about the validity of the last one. <span class=\"user-mention\" data-user-id=\"192267\">@Eric Prud'hommeaux</span> can you comment on our best choice for turtle mime type please</p>",
        "id": 153833148,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466040944
    },
    {
        "content": "<p>I don't think we want an extension registered</p>",
        "id": 153833150,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466040963
    },
    {
        "content": "<p>Thanks, just wanted to ensure that everyone was on the same page.<br>\nAnd *not* just using application/xml</p>",
        "id": 153833151,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1466041033
    },
    {
        "content": "<p>oh right - sorry for confusion</p>",
        "id": 153833153,
        "sender_full_name": "Erich Schulz",
        "timestamp": 1466041115
    },
    {
        "content": "<p>Register the <code>fhir-*</code> mime-types with IANA, but make them optional and for explicit opt-in scenarios.  They will enable a lot of great functionality, similar to the <code>/metadata</code> conformance statements.</p>",
        "id": 153833156,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1466042534
    },
    {
        "content": "<p>I don't know what this means 'make them optional and for explicit opt-in scenarios'</p>",
        "id": 153833158,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466043428
    },
    {
        "content": "<p>I'd really like to just be able to use <code>application/xml</code> or <code>text/xml</code>.  I think I understand what <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span>'s saying, but do we have to force everyone to do that?</p>",
        "id": 153833160,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466043764
    },
    {
        "content": "<p>I also agree with <span class=\"user-mention\" data-user-id=\"191678\">@Abigail Watson</span> that the extensions should be registered with IANA, especially if you always have to use them.</p>",
        "id": 153833161,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466043835
    },
    {
        "content": "<p>The previous version could not be registered IANA because they did not follow the specified format, if the decision was to move to the standard format ITS could then proceed with IANA registration just like we did for CDA and others</p>",
        "id": 153833163,
        "sender_full_name": "Andy Stechishin",
        "timestamp": 1466043933
    },
    {
        "content": "<p><img alt=\":thumbsup:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/thumbsup.png\" title=\":thumbsup:\"> </p>",
        "id": 153833164,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466043989
    },
    {
        "content": "<p>So, like, after registering them, don't require that they be used.  Let people opt-in at their own pace.  </p>",
        "id": 153833165,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1466044044
    },
    {
        "content": "<p>I think that changing the spec to say that you don't have to use specific mime types would be a huge step backwards. really big</p>",
        "id": 153833166,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466044138
    },
    {
        "content": "<p>Works for me.</p>",
        "id": 153833167,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466044146
    },
    {
        "content": "<p>and I don't know why just using application.xml would be good for anyone</p>",
        "id": 153833168,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466044170
    },
    {
        "content": "<p>That's not what I'm saying.  I'm saying stick with application/json and application/xml in the standard.  And application/fhir-json and application/fhir-xml are nice-to-haves.  But do register them.</p>",
        "id": 153833169,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1466044199
    },
    {
        "content": "<p>It's easy.  You don't have to think about.  So when you're in you're initial stages of development everything still works and you can address the MIME type later.</p>",
        "id": 153833170,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466044236
    },
    {
        "content": "<p>you mean, stick with pplication/json+fhir and application/xml+fhir in the standard. And then create chaos by letting people use either</p>",
        "id": 153833171,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466044248
    },
    {
        "content": "<p>I don't understand why you don't use the correct mime types, Stephen</p>",
        "id": 153833172,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466044276
    },
    {
        "content": "<p>Becuase the toolset I use gives me <code>application/xml</code> for free. I have to take explicit action if I want to be more precise about the flavour of XML.</p>",
        "id": 153833173,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466044337
    },
    {
        "content": "<p>you already had to take that action, yes? and why would we force everyone to accept the mime type application/xml as well as the proper one in order to save you some work? that doesn't make sense. As well as potentially breaking existing applications that are free to use application/xml for their own use now</p>",
        "id": 153833174,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466044444
    },
    {
        "content": "<p>There's a change required anyway, by the sound of things, so for those who've actually implemented the badly defined types (which it would seem is not everyone), just include the more general types when the change is made.  (I haven't had to take any action.  The whole toolset is XML-based and assumes <code>application/xml</code> unless you take individual action on every transaction to do otherwise.)</p>",
        "id": 153833177,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466044680
    },
    {
        "content": "<p>there's a big difference between changing from one fixed type to another, to changing from one fixed type to a set of types that have variable meaning. I'm really fiercely opposed to a change like that</p>",
        "id": 153833178,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466044762
    },
    {
        "content": "<p>I'm not that fussed myself, because I would get around to doing it properly at some point anyway, but it seems that I'm not the only one who's using <code>application/xml</code> and the like.</p>",
        "id": 153833179,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466044779
    },
    {
        "content": "<p>How do they have \"variable meaning\"?</p>",
        "id": 153833180,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466044794
    },
    {
        "content": "<p>application/xml has a very distinct meaning from application/xml+fhir or application/fhir+xml </p>",
        "id": 153833181,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466044827
    },
    {
        "content": "<p><code>application/xml</code> means XML and inspection of the content verifies that it's FHIR.  I know all I need to know (Brian's point aside, that is).</p>",
        "id": 153833182,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466044865
    },
    {
        "content": "<p>not so. You're only considering one use. There's other uses where there's no instance on which to decide. And then there's conformance questions - the instance isn't FHIR - is that a non-conformance or not? </p>",
        "id": 153833183,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466044916
    },
    {
        "content": "<p>Re conformance: for me, it's non-conformance.  When wouldn't it be?</p>",
        "id": 153833184,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466045011
    },
    {
        "content": "<p>Re no instance: not sure what you're talking about?</p>",
        "id": 153833185,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466045029
    },
    {
        "content": "<p>Further re conformance: I'm a FHIR server; if you don't send me FHIR data, you're not playing by the rules regardless of what the MIME type says.</p>",
        "id": 153833186,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466045182
    },
    {
        "content": "<p>again, not so simple, I'm afraid. And you request content by mime type. And specify it by mime type. But servers have here-to-fore been able to use application/xml for something other than FHIR. You're proposing to remove that. and I don't see any benefit except to save some people from doing some thing in their server stack</p>",
        "id": 153833187,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466045327
    },
    {
        "content": "<p>If I request <code>application/xml</code> data from a FHIR server, what data would I expect to get?  I can still use <code>application/xml</code> for other data, just not from my FHIR server.  (This assumes, which I do, that the FHIR server resides at an explicit URL that is all it's own.  I'm not sure why you'd design your server stack otherwise, but if that has to be catered for then that implementation would be a bit buggered. <img alt=\":frowning:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/frowning.png\" title=\":frowning:\"> )</p>",
        "id": 153833188,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466045590
    },
    {
        "content": "<p>right now you are *likely* to get fhir xml. you do from mine. But that's not behviour that's described in the spec, and you might get a different kind of data from some other server. that would be allowed behaviour</p>",
        "id": 153833189,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466045676
    },
    {
        "content": "<p>any xml response - odata, dicom xml, CDA, anything. It's all application/xml. And there are servers doing this sort of stuff now</p>",
        "id": 153833190,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466045719
    },
    {
        "content": "<p>I would think though that it would not be unreasonable for the FHIR specification to disallow returning non-FHIR data from a FHIR server.  DICOM, CDA, &amp;c., would have to wrapped in a FHIR package of some sort, not native.  But maybe that's too much.  I'd be surprised though if at least some of those servers providing the other data types are not using <code>application/xml</code> to describe it anyway.  So they should already know how to deal with the problem.</p>",
        "id": 153833193,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466046039
    },
    {
        "content": "<p>But, as I said, I'm not that fussed about it.  The intention is that we'd use the fully-specified MIME types eventually, so if that's sooner rather than later, it won't make that much difference to us.</p>",
        "id": 153833194,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466046080
    },
    {
        "content": "<p>Providing, of course, that we're talking compliant, registered MIME types!</p>",
        "id": 153833197,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466046143
    },
    {
        "content": "<p>This very thing came up in discussions about serving Observation attachments - I think my colleague Rowan asked about it here. Check out <a href=\"http://hl7.org/fhir/binary.html#rest\" target=\"_blank\" title=\"http://hl7.org/fhir/binary.html#rest\">http://hl7.org/fhir/binary.html#rest</a> for an example of the spec talking explicitly about different content types.</p>",
        "id": 153833199,
        "sender_full_name": "James Butler",
        "timestamp": 1466046222
    },
    {
        "content": "<p>ah yes that's one place changing to allow application/xml is explicitly nasty</p>",
        "id": 153833202,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466046266
    },
    {
        "content": "<p>I'm not sure why it's \"nasty\", but would you have to include <code>application/(xml|json)</code> in the list of MIME types alongside the FHIR-specific ones, i.e. the general types still mean \"give me FHIR data;\"  which is what they should from a FHIR server.</p>",
        "id": 153833207,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466046608
    },
    {
        "content": "<p>Although, I suppose, if the content of your binary resource is already <code>application\\xml</code> you could argue that you should serve it up as is.  But then, that could be an explicit exception to the exception! <img alt=\":stuck_out_tongue_winking_eye:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/stuck_out_tongue_winking_eye.png\" title=\":stuck_out_tongue_winking_eye:\"> </p>",
        "id": 153833208,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466046843
    },
    {
        "content": "<p>Given that it's a binary resource, the requester would have to deal with their own lack of specificity in the read request.</p>",
        "id": 153833209,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466046932
    },
    {
        "content": "<p>I'm in favor of doing the right thing.  Servers should be nice to people though, and do what they mean when they ask for it the old way, or if they can figure out what the user meant.  Apply Postel's principle here.</p>",
        "id": 153833273,
        "sender_full_name": "Keith Boone",
        "timestamp": 1466058269
    },
    {
        "content": "<p>I do strongly support using the standard mime type encodings (application/fhir+XXXX) and registering these mime types @IANA<br>\nAs a server I would gracefully accept application/xml, application/json as  shortcuts to the corresponding application/fhir+XXXX mime types but would use the \"official\" mime type specification on the response.</p>",
        "id": 153833303,
        "sender_full_name": "Peter Scholz",
        "timestamp": 1466064638
    },
    {
        "content": "<p>+1 to using the IANA standard and registering new mime types.</p>\n<p>The Binary resource is the only place our server wouldn't automatically translate the generic json request to a fhir json request because of how that resource works.</p>",
        "id": 153833339,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466093707
    },
    {
        "content": "<p>At least he only place as of now that we wouldn't automatically translate</p>",
        "id": 153833341,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466093736
    },
    {
        "content": "<p>I'm totally on board with this too (dirty secret of our current SMART sever is it just looks for the substring \"json\" anywhere in the accept header :-)</p>",
        "id": 153833342,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1466094649
    },
    {
        "content": "<p>Postel at work ... </p>",
        "id": 153833350,
        "sender_full_name": "Todd Cooper",
        "timestamp": 1466100750
    },
    {
        "content": "<p>+1 for IANA standard compliance.  This would be a minor code change for my client and server.  Same as <span class=\"user-mention\" data-user-id=\"191546\">@Peter Scholz</span> I gracefully accept application/xml and application/json, and respond with the official FHIR mime-types.</p>",
        "id": 153833351,
        "sender_full_name": "Richard Ettema",
        "timestamp": 1466102402
    },
    {
        "content": "<p>well, so far we haev strong endorsement of this idea in across all the forums</p>",
        "id": 153833368,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466109618
    },
    {
        "content": "<p>so, <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=10199\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=10199\">GF#10199</a></p>",
        "id": 153833370,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466109667
    },
    {
        "content": "<p>and also <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=10200\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=10200\">GF#10200</a></p>",
        "id": 153833372,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466110044
    },
    {
        "content": "<p><img alt=\":thumbsup:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/thumbsup.png\" title=\":thumbsup:\"> </p>",
        "id": 153833405,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466125387
    },
    {
        "content": "<p>When doing this it might be useful to add a table to the specification with columns for Request Accept Header, Request _format parameter and preferred Response Content Type and rows for each combination of the Request MIME Types application/xml, application/fhir+xml, application/json &amp; application/fhir+json. I don't find the 'overrides' advice in the current section on Content Types &amp; Encodings  particularly clear.</p>",
        "id": 153833419,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1466141591
    },
    {
        "content": "<p>what is 'preferred Response Content Type '?</p>",
        "id": 153833423,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466146318
    },
    {
        "content": "<p>What, according to the FHIR specification, the Server should return in the Response Content Type header - given what the client has placed in the Request Accept Header and/or the Request _format parameter.</p>",
        "id": 153833425,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1466146812
    },
    {
        "content": "<p>ah ok</p>",
        "id": 153833426,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466146865
    }
]