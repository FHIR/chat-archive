[
    {
        "content": "<p>StructureDefinition now allows for the \"logical\" kind in order to support arbitrary logical models defined using StructureDefinition.</p>\n<p>What is the best way to namespace a logical model in a StructureDefinition (in order to prevent naming collisions)?  Is it valid to put the namespace into the \"id\" itself (e.g., \"org.example.Foo\")?  I've done this, but one result is that in the snapshot/differential, all the paths must be prefixed by the \"id\", so now you end up with paths like \"org.example.Foo.bar\".  Since dot (\".\") is used to separate path elements, is it a problem to have \".\" in the \"id\", which puts it in the \"base\" part of the path?  Or might using \".\" in the id cause problems for code generators?</p>\n<p>I could also just make the \"id\" be \"Foo\" and use \"url\" (and possibly an alternate \"identifier\") to specify a more fully qualified name, but that would allow this \"Foo\" to clash with any other \"Foo\" logical models in the same system (even if they have different namespaces).</p>\n<p>Is there a recommended approach?</p>",
        "id": 153852168,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1475777870
    },
    {
        "content": "<p>we would expect that you'd just put the namespace in the URL</p>",
        "id": 153852174,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475779444
    },
    {
        "content": "<p>If a system wanted to use FHIR infrastructure to support a RESTful API for the logical models, then wouldn't it define the endpoints as <a href=\"http://path/to/base/${id}\" target=\"_blank\" title=\"http://path/to/base/${id}\">http://path/to/base/${id}</a> -- in which case, models with the same id would clash?  Or are instances of logical models never expected to be exchanged over the wire (despite the fact that StructureDefinition has serialization/deserialization semantics built in)?</p>",
        "id": 153852181,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1475781543
    },
    {
        "content": "<p>it's useful that there is serialization built in, and I've used that in several places (Logical model for CDA, for instance). But there's no support for using Logical Models with the RESTful API</p>",
        "id": 153852183,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475781801
    },
    {
        "content": "<p>OK.  Thanks for your help, Grahame!</p>",
        "id": 153852184,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1475781844
    },
    {
        "content": "<p>there's an ongoing discussion about that, but it's not going very far very fast. however in all the discussions we've had, we've assumed that there will be additional control over the naming if you want to use it in this context</p>",
        "id": 153852185,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475781868
    },
    {
        "content": "<p><a href=\"http://wiki.hl7.org/index.php?title=FHIR_Custom_Resources\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=FHIR_Custom_Resources\">http://wiki.hl7.org/index.php?title=FHIR_Custom_Resources</a></p>",
        "id": 153852186,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475781913
    },
    {
        "content": "<p>Alright.  But in your view, trying to put a namespace in the \"id\" (dot-separated) is probably a bad idea -- and we should avoid it?</p>",
        "id": 153852187,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1475781933
    },
    {
        "content": "<p>yes, indeed, it is problematic</p>",
        "id": 153852188,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475781995
    },
    {
        "content": "<p>OK.  Just reading through that wiki link you sent, I found this:</p>\n<blockquote>\n<p>In addition, all custom resource names will include at least one character '-' or '.', while official resources defined in the FHIR specification will never include the characters '-' or '.' in their name.</p>\n</blockquote>\n<p>and this:</p>\n<blockquote>\n<p>Applicants may apply for a custom name, or for a prefix that they can use with any custom resource that they define.</p>\n</blockquote>",
        "id": 153852189,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1475782090
    },
    {
        "content": "<p>That kind of sounds like the approach I was going toward.  But it sounds like that's still very much in flux -- so it would be premature to adopt it or to assume it is safe.</p>",
        "id": 153852190,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1475782140
    },
    {
        "content": "<p>indeed, you've identified something that would be problematic if we ever tried to operationalise that document. </p>",
        "id": 153852191,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475782142
    },
    {
        "content": "<p>OK.  Thanks again.  This has really been helpful.  We'll plan to use a simple name and use the url to indicate the namespace.</p>",
        "id": 153852192,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1475782200
    },
    {
        "content": "<p>yes, it was something I was pushing about a year ago, but it was extremely controversial for some members of the community, and no one was sufficiently interested in actually making use of it in practice</p>",
        "id": 153852193,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475782211
    },
    {
        "content": "<p>Ha.  OK.  Well, I'm glad that just the general concept of logical models made it through.  That will be of use to us, even without a well-defined strategy for exchange.</p>",
        "id": 153852194,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1475782287
    },
    {
        "content": "<p>We a;ready doing this in Aus and we do want our logical models to be available via the ReSTful API so we make sure we avoid collisions by using different model names, e.g. \"AdverseReaction\" instead of \"AllergyIntolerance\", and using a prefix, in our case \"dh-\".</p>",
        "id": 153852222,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1475803377
    },
    {
        "content": "<p>what do you mean 'available in the RESTful API'?</p>",
        "id": 153852226,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475803715
    },
    {
        "content": "<p>I mean that we will stand up a FHIR server at which you can query [base]/StructureDefinition/dh-AdverseReaction and get the StructureDefinition resource for the logical adverse reaction model in the same way you would get the StructureDefinition resource for AllergyIntolerance at [base]/StructureDefinition/AllergyIntolerance.</p>",
        "id": 153852245,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1475809572
    },
    {
        "content": "<p>that's a quite different thing that what Chris meant</p>",
        "id": 153852246,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475809873
    },
    {
        "content": "<p>How is that different from \"If a system wanted to use FHIR infrastructure to support a RESTful API for the logical models, then wouldn't it define the endpoints as <a href=\"http://path/to/base/${id}\" target=\"_blank\" title=\"http://path/to/base/${id}\">http://path/to/base/${id}</a> ...\"?</p>",
        "id": 153852248,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1475811370
    },
    {
        "content": "<p>the difference between GET [base]/StructureDefinition/dh-AdverseReaction and Get [base]/dh-AdverseReaction/[id]</p>",
        "id": 153852261,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475819328
    },
    {
        "content": "<p>Right-- I was talking about exchanging data that adhered to the logical definition, whereas it sounds like Stephen is talking about downloading the definition itself.  That said, the same risk of naming collisions exists in both cases.</p>",
        "id": 153852348,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1475872135
    },
    {
        "content": "<p>I don't see why there's a risk in the second case</p>",
        "id": 153852349,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475872330
    },
    {
        "content": "<p>With the \"dh-\" prefix, the risk is certainly smaller.  But, in general, here's the risk in each case (as I see it):</p>\n<ul>\n<li><code>GET [base]/StructureDefinition/Foo</code>: if the system wanted to support another logical model called \"Foo\", but with a different namespace, then this call wouldn't know which \"Foo\" StructureDefinition to return.</li>\n<li><code>Get [base]/Foo/[id]</code>: while the id would keep the full URL from clashing, the endpoint <code>[base]/Foo/</code> is ambiguous in regards to what type of thing it talks about.  Even if the backend could support resolving to the right thing, it would be terrible from a RESTful point-of-view.</li>\n</ul>",
        "id": 153852354,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1475873972
    },
    {
        "content": "<p>in the first case, there can only be one Foo. No ambiguity there. I'm not going to think about the second</p>",
        "id": 153852359,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475876683
    }
]