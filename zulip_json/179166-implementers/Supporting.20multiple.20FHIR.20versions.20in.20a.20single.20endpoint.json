[
    {
        "content": "<p>We are planning to support multiple FHIR versions in a single endpoint using the <code>fhirVersion</code> MIME type parameter as described in <a href=\"http://build.fhir.org/versioning.html\">http://build.fhir.org/versioning.html</a>, supporting R4 in addition to the existing STU3 version. We are planning to isolate the versions in distinct silos and any references between resources with different versions are not allowed. This is done so that searches with includes result in a Bundle corresponding to a single version. (Example: R4 Observation pointing to STU3 Patient and a search for /Observation?_include=Observation:subject:Patient will yield a bundle with mixed versions)<br>\nHowever, what to do if the client supports both versions with a preference for one? For example: <br>\nGET /Observation?criteria with <code>Accept: application/fhir+json;fhirVersion=4.0, application/fhir+json;fhirVersion=3.0;q=0.5</code><br>\nIs this even allowed? How is the server to identify which version silo to query?</p>",
        "id": 225003735,
        "sender_full_name": "Anand Mohan Tumuluri",
        "timestamp": 1612352367
    },
    {
        "content": "<p>I think you can safely assume that client would expect only one version. I would advise against using the fhirVersion mime type - just use separate end points, that's the standard way everyone uses currently</p>",
        "id": 225017847,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1612360576
    },
    {
        "content": "<p>The main issue with the multiple endpoint approach will come when IGs start being non-compatible.  Then you'd need to have different endpoints for each non-compatible profile.  I honestly expected more non-compatible IGs b y now, so maybe I'm wrong that day won't come and this won't end up being an issue.</p>",
        "id": 225019326,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1612361168
    },
    {
        "content": "<p>Single end points are obviously very attractive if they have a capability to transform resources (or whatever format one uses as a persistence layer) to all versions supported.</p>",
        "id": 225020693,
        "sender_full_name": "Ren√© Spronk",
        "timestamp": 1612361744
    },
    {
        "content": "<blockquote>\n<p>Single end points are obviously very attractive if they have a capability to transform resources</p>\n</blockquote>\n<p>Don't see that..?</p>",
        "id": 225023612,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1612363074
    },
    {
        "content": "<p>The largest problem I ran into (having done a test server that way) is that clients generally do not include that parameter.  If we could go back in time and make it the recommended (or even required) practice to include it, a single endpoint would work well.  Without that, the applications that use your 'default' version (e.g., if you accept a non-versioned MIME type) will work and  other users will ask for an endpoint with the other default.</p>",
        "id": 225038679,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1612368994
    },
    {
        "content": "<p>If multiple options are listed in the Accept header, they're listed in order of preference.  The algorithm is the server goes through the list and returns the first that it supports.</p>",
        "id": 225048802,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612372936
    },
    {
        "content": "<p>(That's HTTP rules, not anything FHIR-specific)</p>",
        "id": 225048821,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612372947
    },
    {
        "content": "<p>Thanks everyone. <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> 's answer makes sense and I am going to stick with that. Agree that single endpoint is indeed attractive &amp; that this doesn't even matter if we could support dynamic transform between versions but that is a whole other big topic that I don't want to shoot myself with at the moment.</p>",
        "id": 225067735,
        "sender_full_name": "Anand Mohan Tumuluri",
        "timestamp": 1612380291
    },
    {
        "content": "<p>Yes Lloyd, but my point is that clients typically don't include the version parameter on the MIME type.  In my experience, most clients (regardless of which version they implement) simply send <code>application/fhir+json</code>.  Asking a majority of clients to change their software doesn't lend itself to wide/easy adoption.</p>",
        "id": 225067963,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1612380385
    },
    {
        "content": "<blockquote>\n<p>most clients simply send application/fhir+json</p>\n</blockquote>\n<p>...and the other ones send <code>application/json</code> or <code>*</code> or nothing . . . .</p>",
        "id": 225074053,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1612382939
    },
    {
        "content": "<p>If servers don't include the version, then you can't use content negotiation to handle multiple versions on the same endpoint.</p>",
        "id": 225076770,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612384277
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179166-implementers/topic/Supporting.20multiple.20FHIR.20versions.20in.20a.20single.20endpoint/near/225076770\">said</a>:</p>\n<blockquote>\n<p>If servers don't include the version, then you can't use content negotiation to handle multiple versions on the same endpoint.</p>\n</blockquote>\n<p>Exactly.  While the specs indicate how this <em>should</em> work, in practice (since most clients don't provide the info), providing multiple versions in a single endpoint doesn't work well.</p>\n<p>Just wanted to be clear on expectations...  If someone is developing both sides, this works great.  If you're developing a server, most clients won't support it.  And, if you're developing a client; <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span>  (I <em>assume</em> most servers won't balk at it, but most servers I know of only support one version at an endpoint anyway).</p>",
        "id": 225080786,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1612385985
    },
    {
        "content": "<p>I'm just wondering how one would define the CapabilityStatement.fhirVersion (code, 1..1) to support two FHIR versions.</p>",
        "id": 225082055,
        "sender_full_name": "Shamil Nizamov",
        "timestamp": 1612386465
    },
    {
        "content": "<p>You cannot -  DSTU2 does not even have a CapabilityStatement</p>",
        "id": 225082573,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1612386675
    },
    {
        "content": "<p>I guess you could give a different response to /metadata depending on the fhirVersion in the request, then at least the client could probe for all the different versions at that endpoint.</p>",
        "id": 225082765,
        "sender_full_name": "Paul Church",
        "timestamp": 1612386737
    },
    {
        "content": "<p>If a single endpoint supports multiple versions, HTTP content negotiation determines what you get back.  Thus far, we don't have a use-case for knowing all versions a server supports.  What matters is \"do you support any of the versions I do?\" and \"What's the most preferred version you support of those I support\".</p>",
        "id": 225083100,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612386886
    },
    {
        "content": "<p>If you're using CapabilityStatement from an IG perspective, you'd have a different statement for each version</p>",
        "id": 225083173,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612386910
    },
    {
        "content": "<p>It sounds as [base]/stu3/... or [base]/r4/... is much easier to implement.</p>",
        "id": 225083321,
        "sender_full_name": "Shamil Nizamov",
        "timestamp": 1612386962
    },
    {
        "content": "<blockquote>\n<p>we don't have a use-case for knowing all versions a server supports</p>\n</blockquote>\n<p>yes we do. See <a href=\"http://hl7.org/fhir/capabilitystatement-operation-versions.html\">http://hl7.org/fhir/capabilitystatement-operation-versions.html</a></p>",
        "id": 225084238,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1612387337
    },
    {
        "content": "<blockquote>\n<p>It sounds as [base]/stu3/... or [base]/r4/... is much easier to implement.</p>\n</blockquote>\n<p>yes, in the short term. But it has other consequences that will become more evident over time</p>",
        "id": 225084315,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1612387369
    },
    {
        "content": "<p>Sorry, I'd looked on the versions page but missed the operation-versions link.</p>",
        "id": 225093644,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612391697
    },
    {
        "content": "<p>Once we get into R5, R6, R7 where the resources you support are essentially identical across all of those releases, it's going to suck to have to stand up a new endpoint only to spit out the same content.</p>",
        "id": 225093715,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612391755
    },
    {
        "content": "<p>Followup question: Is <code>fhirVersion</code> parameter also relevant for _format? It makes sense for full MIME types application/[fhir+]xml and application/[fhir+]json but is <code>_format=json;fhirVersion=4.0</code> valid?</p>",
        "id": 225095842,
        "sender_full_name": "Anand Mohan Tumuluri",
        "timestamp": 1612393058
    },
    {
        "content": "<p>Are we misrepresenting HTTP specs when we say using the content-type will not work though? To play the devil's advocate, from the HTTP standpoint, I don't see why using content-type is any different from a separate path. Even the questions about the metadata endpoint should be resolvable by the request content-type to the metadata endpoint (CapabilityStatement will respond for R4 and STU3, Conformance will respond for DSTU2)?</p>",
        "id": 225248097,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1612486936
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179166-implementers/topic/Supporting.20multiple.20FHIR.20versions.20in.20a.20single.20endpoint/near/225093715\">said</a>:</p>\n<blockquote>\n<p>Once we get into R5, R6, R7 where the resources you support are essentially identical across all of those releases, it's going to suck to have to stand up a new endpoint only to spit out the same content.</p>\n</blockquote>\n<p>Sometime back, I had asked if we can have a resource level FHIR version, so the same endpoint can mix and match resources - and perhaps transform libraries can help the client (and/or the server) where the desired version isn't available..</p>",
        "id": 225248637,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1612487421
    },
    {
        "content": "<p>You can't mix versions because schemas, reference implementations and other things all depend on consistent versioning.  Even when we get to the point where 'many' artifacts are locked down and remain compatible from release to release, that doesn't mean all of them will be - and there can still be addition of new elements that will cause at least some issues.  So all Bundles and other collections will still have to be restricted to a single version.</p>",
        "id": 225256020,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612494594
    },
    {
        "content": "<blockquote>\n<p>Followup question: Is <code>fhirVersion</code> parameter also relevant for _format? It makes sense for full MIME types application/[fhir+]xml and application/[fhir+]json but is <code>_format=json;fhirVersion=4.0</code> valid?</p>\n</blockquote>\n<p>Should I add a task for clarifying use of fhirVersion in _format?</p>",
        "id": 225270580,
        "sender_full_name": "Anand Mohan Tumuluri",
        "timestamp": 1612512658
    },
    {
        "content": "<p>Currently it wasn't intended to do that, but you could create a Jira issue to propose a change.</p>",
        "id": 225272163,
        "sender_full_name": "Ren√© Spronk",
        "timestamp": 1612514018
    }
]