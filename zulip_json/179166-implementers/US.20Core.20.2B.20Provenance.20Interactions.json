[
    {
        "content": "<p>Hi all,<br>\nQuick question for the group about <a href=\"http://hl7.org/fhir/us/core/STU3.1/StructureDefinition-us-core-provenance.html\">US Core Provenance profile</a> - are search + read support required? <a href=\"http://hl7.org/fhir/us/core/STU3.1/StructureDefinition-us-core-provenance.html\">The provenance specific page</a> only lists <code>_revInclude</code> from other resources as mandatory search parameters, but the <code>US core capability statement</code> has Provenance interactions as:</p>\n<div class=\"codehilite\"><pre><span></span><code>Profile Interaction Summary:\n\nSHALL support search-type, read.\nSHOULD support vread, history-instance.\nMAY support create, update, patch, delete, history-type.\n</code></pre></div>",
        "id": 203902292,
        "sender_full_name": "Weiyu Zhang",
        "timestamp": 1594770582
    },
    {
        "content": "<p>I don't think search-type should be listed there.  But you do need to support the <code>read</code> interaction.  <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> <span class=\"user-mention\" data-user-id=\"191410\">@Brett Marquard</span></p>",
        "id": 204470890,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1595276324
    },
    {
        "content": "<p>yep that is a good catch - copy/paste error -  not supposed to be there.  will add to the errata.</p>",
        "id": 204471559,
        "sender_full_name": "Eric Haas",
        "timestamp": 1595276686
    },
    {
        "content": "<p>thanks for the clarification! Regarding the read - we're working on adding provenance support on our FHIR server, and we're not sure how to make sure that callers are getting the \"correct\" version of provenance - e.g.</p>\n<p>1) client discovers provenance ID via _revInclude on a documentReference.search<br>\n2) documentReference resource changes, provenance is updated as well<br>\n3) client calls provenance read, only to get an updated provenance rather than the provenance version for the documentReference that they have</p>\n<p>Do you have any recommendations on how to enforce a \"sync\" in the reads? Or would you expect folks to mainly use _revInclude?</p>",
        "id": 204693863,
        "sender_full_name": "Weiyu Zhang",
        "timestamp": 1595437509
    },
    {
        "content": "<p>The Provenance resource wouldn't be changed when there's an update to the DocumentReference.  Instead, a new Provenance instance would be created - associated with that specific update.</p>",
        "id": 204697834,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1595439424
    },
    {
        "content": "<p>There'll be a separate Provenance instance for the creation and every update, delete, patch or other manipulation of the DocumentReference.</p>",
        "id": 204697873,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1595439452
    },
    {
        "content": "<blockquote>\n<p>The Provenance resource wouldn't be changed when there's an update to the DocumentReference</p>\n</blockquote>\n<p>Maybe yes, maybe no - depends on server internals. Servers generate some audit trail of changes that are then mapped to provenance, but how this happens can vary a lot I'd imagine</p>",
        "id": 204707384,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1595443997
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  and <span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span>! That's the exact issue that I'm dealing with - our current implementation is a many-to-one map of internal audit entries to a single provenance resource. Do you foresee a use case where someone might want to get \"older\" provenance entries only/\"older\" provenance entries without the corresponding resource (or an older version of the resource)?</p>",
        "id": 205304666,
        "sender_full_name": "Weiyu Zhang",
        "timestamp": 1595980553
    },
    {
        "content": "<p>It would be odd to have multiple AuditEvents for a single Provenance.  You can certainly search for Provenance and filter by dateTime.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>, what's the proper search to get back all Provenances for a resource, irrespective of version, when all of the references are version-specific?</p>",
        "id": 205313688,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1595991569
    },
    {
        "content": "<p>It is understood that with a versioning server there could be equal versions of a target resource and that target resources Provenance; but given that this is not generalizable, it is not the intended use of Provenance. The intention is that a new Provenance record is created each time a change to a resource happens. Thus Provenance would never be Updated.   Thus a client can always understand Provenance without having to first determine if the server is a versioning server or not.</p>",
        "id": 205356423,
        "sender_full_name": "John Moehrke",
        "timestamp": 1596029632
    },
    {
        "content": "<p>also relying on versioning would limit the use of Provenance to support marking many updates with one Provenance instance.</p>",
        "id": 205356549,
        "sender_full_name": "John Moehrke",
        "timestamp": 1596029686
    },
    {
        "content": "<blockquote>\n<p>The intention is that a new Provenance record is created each time a change to a resource happens.</p>\n</blockquote>\n<p>This is not going to be the case most of the times. Resources changes because people enter data into forms, V2 messages are received, CDA are processed, CSV files are imported etc etc etc. All interactions that know nothing of provenance or FHIR - they will record _some_ kind of audit log and _maybe_ those can be converted to provenance in some way</p>",
        "id": 205357278,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1596030048
    },
    {
        "content": "<p>That is inverted. There should be a Provenance on all of those reasons to update a record. Provenance is not just for direct human, it is for ALL changes.</p>",
        "id": 205357925,
        "sender_full_name": "John Moehrke",
        "timestamp": 1596030343
    },
    {
        "content": "<p>I don't think <span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> was arguing about what \"should be\", he was arguing about \"what is\" and can reasonably be expected...</p>",
        "id": 205362643,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596032359
    },
    {
        "content": "<p>misuse of any standard can't be prevented. I am just trying to set an intended use. and I thought that the us-core provenance was explicit. So we have done all we can to guide implementers. no question some won't follow. <br>\nAlso, noted that inside a non-FHIR system there will be  many proprietary ways that provenance will be stored or rooted-out.  This is systems-design, not anything that FHIR model can affect.</p>",
        "id": 205363237,
        "sender_full_name": "John Moehrke",
        "timestamp": 1596032634
    },
    {
        "content": "<p>It is not misuse. If you are getting data via an HL7v2 interface that was written 10 years ago you have no control over which kind of logging that generates.</p>",
        "id": 205382309,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1596041215
    },
    {
        "content": "<p>yes, that is recognized by my note about non-FHIR systems.</p>",
        "id": 205383220,
        "sender_full_name": "John Moehrke",
        "timestamp": 1596041680
    },
    {
        "content": "<p>All existing production systems are 'non-FHIR' systems</p>",
        "id": 205386841,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1596043492
    },
    {
        "content": "<p>I don't know about \"all\" - but certainly that's true of 'most major healthcare systems'</p>",
        "id": 205405144,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596052333
    }
]