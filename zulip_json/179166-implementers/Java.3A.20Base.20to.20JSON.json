[
    {
        "content": "<p>I'm curently trying to get a JSON/XML, or at least String representation of <a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/2e640accced5f5689e18abca57f0b4a8e45c9821/org.hl7.fhir.r4/src/main/java/org/hl7/fhir/r4/model/Base.java\">Base</a> Instances.</p>",
        "id": 241696215,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1622992397
    },
    {
        "content": "<p>I couldn't find an encoder for encoding Base Instances, or Elements. Did i miss something?<br>\nIf there is no code existent i would use: listChildrenByName in Base, check if these are primitives -&gt; get primitive Value, if non-primitive, iterate deeper.</p>",
        "id": 241696303,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1622992532
    },
    {
        "content": "<p>This could get me some kind of String representation, but i was wondering if i just missed existing code which produces nice XML or JSON fragments from Base/Element</p>",
        "id": 241696358,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1622992586
    },
    {
        "content": "<p>I'm getting the Base Instances while evaluating FHIRPaths, also tried: evaluateToString in the FhirPathEngine, wich isn't that helpful at the moment.</p>",
        "id": 241696383,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1622992653
    },
    {
        "content": "<p>is this a #hapi question? I'm not sure what to make of it in general; there is no representation for Base since it's abstract. Or are you looking for org.hl7.fhir.r5.elementmodel ?</p>",
        "id": 241718136,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623025817
    },
    {
        "content": "<p>When evaluation FHIR Paths you end up with a List&lt;Base&gt;. I wanted to encode these Base Objects/Elements to Json, but failed to do so.<br>\nI then looked at the hapi and Java Json Parser classes, but couldn't find methods to serialize a Base or Element Objekt.</p>",
        "id": 241734900,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1623048005
    },
    {
        "content": "<p>The code for creating Json/XML representations for Fhir elements seems to be only inluded online in the resource creating parts of the parser. I had the hope for a  method like this: <code>JSONObject getJsonFromBase(Base base)</code></p>",
        "id": 241735057,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1623048165
    },
    {
        "content": "<p>hmm yes. that's complicated since you might want either composer, depending on the actual specialization in the list of base objects. I can't get to it today, but I could add a method for that. Not exactly sure where, but it's certainly possible. Just a bit of  rooting around</p>",
        "id": 241735371,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623048423
    },
    {
        "content": "<p>Sounds great. I think this could also lead to some structural refactoring of the JsonEncoder. Extracting the String creator parts for elements into their own methods.</p>",
        "id": 241735511,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1623048579
    },
    {
        "content": "<p>really? which methods are you talking about?</p>",
        "id": 241735584,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623048614
    },
    {
        "content": "<p>it was too late yesterday.. i only saw the handling for meta and id in the hapi parser and assumed that every dataType is handled by its own code. Which was wrong.</p>",
        "id": 241737469,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1623050085
    },
    {
        "content": "<p>should i add an issue for this one on fhir.core?</p>",
        "id": 247084912,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627147513
    }
]