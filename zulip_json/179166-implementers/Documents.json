[
    {
        "content": "<p>I want to send a message with DocumentReferences and then build services that the client can call to retrieve the actual documents.  I would have services to retrieve CDA documents as well as other binary documents.  I'm looking for the most efficient way to implement the services.  The binary resource uses base64 in the resource which is not cool.  Is it compliant to simply return the raw binary with the appropriate mime type or is there a better way?  What if I want to return meta data about the document, but also return the raw binary content as well, how would one go about doing that?</p>",
        "id": 174805235,
        "sender_full_name": "Jeremy Chapman",
        "timestamp": 1567528362
    },
    {
        "content": "<p>this is described here: <a href=\"https://www.hl7.org/fhir/binary.html#rest\" target=\"_blank\" title=\"https://www.hl7.org/fhir/binary.html#rest\">https://www.hl7.org/fhir/binary.html#rest</a></p>",
        "id": 174805592,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1567528666
    },
    {
        "content": "<p>So if you have a GET request with a non-fhir mime type as accept, it is fine to directly return the binary</p>",
        "id": 174805680,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1567528726
    },
    {
        "content": "<p>You should also look to the IHE Implementation Guide on this topic -- MHD. <br>\nNote when you GET a binary the http negotiate is used to enable retrieval of formats other than FHIR wrapped (base64 encoded). Thus if you include in your GET on the binary that you prefer cda format, the server is free to provide it in that format (aka without the FHIR Binary wrapping and thus the base64 encoding).<br>\nBUT if you insist on using FHIR then it must be wrapped in a FHIR friendly Resource, ie the Binary Resource.</p>",
        "id": 174806333,
        "sender_full_name": "John Moehrke",
        "timestamp": 1567529124
    },
    {
        "content": "<p>So in that approach would you have a separate service to get the raw contents, and one to return meta data about the document?</p>",
        "id": 174806468,
        "sender_full_name": "Jeremy Chapman",
        "timestamp": 1567529210
    },
    {
        "content": "<p>the meta about a CDA document would be a DocumentReference Resource pointing to the CDA doc</p>",
        "id": 174807032,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1567529548
    },
    {
        "content": "<p>Right the metadata is the DocumentReference resource.... It is possible that the Binary is held on a different server. This is why the DocumentReference.content.attachment.url is a \"url\"... thus allowing the Binary to be anywhere.</p>",
        "id": 174807273,
        "sender_full_name": "John Moehrke",
        "timestamp": 1567529683
    },
    {
        "content": "<p>now, in the case of publishing... often a publishing workflow (and true in MHD) the publishing is a Transaction that includes both the DocumentReference and the Binary such that the receiving service is expected to persist them. In this case it is common for the Binary and the DocumentReference to be maintained on the same server. This arrangement is not manditory, just a common setting for publication using a FHIR transaction.</p>",
        "id": 174807411,
        "sender_full_name": "John Moehrke",
        "timestamp": 1567529783
    },
    {
        "content": "<p><a href=\"https://healthcaresecprivacy.blogspot.com/2015/03/what-is-mhd-beyond-xds-on-fhir.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2015/03/what-is-mhd-beyond-xds-on-fhir.html\">https://healthcaresecprivacy.blogspot.com/2015/03/what-is-mhd-beyond-xds-on-fhir.html</a></p>",
        "id": 174807563,
        "sender_full_name": "John Moehrke",
        "timestamp": 1567529880
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>  <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span>  If I wanted to include say a pdf document within a FHIR Doc bundle, should I use DocumentReference.content.attachment.data to include the pdf or should we be storing the pdf within the binary resource and referencing it from DocumentReference?  The pdf would be generated by us and would not need to be referenced to another server.</p>",
        "id": 174812235,
        "sender_full_name": "Ben Grey",
        "timestamp": 1567532752
    },
    {
        "content": "<p>There is no singular answer. The attachment.data is there for those that want to embed the data within the attachment. But the attachment.url is there for those that want to use the power of a URL... I prefer the URL method for the above stated reasons of being able to use the http negotiate methods to retrieve the PDF in native format, not forcing the recipient to un-base64.</p>",
        "id": 174812865,
        "sender_full_name": "John Moehrke",
        "timestamp": 1567533156
    }
]