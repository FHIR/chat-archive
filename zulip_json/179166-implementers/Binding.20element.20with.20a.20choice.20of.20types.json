[
    {
        "content": "<p>The <a href=\"http://hl7.org/fhir/R4/vitalsigns.html\">vital signs profile</a> binds component.value to <a href=\"http://hl7.org/fhir/R4/valueset-ucum-vitals-common.html\">Vital Signs Units</a>. The validator enforces this against valueQuantity. Nice.</p>\n<p>But the validator does not enforce it against ValueCodeableConcept. Just as well, that would make the profile less useful.</p>\n<p>Where in the docco does it say that a binding on an element with a choice of data types affects some of the data types and not others? The most relevant docco I could find was at <a href=\"http://hl7.org/fhir/R4/terminologies.html\">Using Codes in Resources</a>, but that does not cover this topic.</p>\n<p>Does binding only affect the first listed data type?</p>",
        "id": 268805244,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1642751013
    },
    {
        "content": "<p>How exactly does the validator enforce it?</p>",
        "id": 268850075,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1642775508
    },
    {
        "content": "<p>I don't see why it should disallow other datatypes - all the profile says is that if it's a type that can take in a code, it should be a code from this valueset.</p>",
        "id": 268850171,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1642775550
    },
    {
        "content": "<p>The general page you are looking for is <a href=\"http://build.fhir.org/profiling.html\">Profiling</a>, and I am guessing the exact part you are looking for is in <a href=\"http://build.fhir.org/profiling.html#slicing\">Slicing</a> or <a href=\"http://build.fhir.org/profiling.html#discriminator\">Discriminator</a>.</p>",
        "id": 268868578,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1642783338
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191682\">@Richard Townley-O'Neill</span> The required binding to the ucum-vitals-common value set is on Observation.component.value[x].  So the binding <strong>should</strong> apply to all of the data type slices (e.g., including both valueQuantity <strong>and</strong> valueCodeableConcept).  If the Validator <strong>isn't</strong> enforcing that binding on valueCodeableConcept, then that is not what I would expect from the StructureDefinition - and I think it probably would indicate that there is actually an issue with the Validator.  I think the reality is that the binding was done that way because there probably isn't any expected use of the Vital Signs profile with valueCodeableConcept, so it really might not matter much whether or not the validator does what is expected there.  Probably, it might have made sense and would be more clear if the binding to ucum-vitals-common was made directly on the valueQuantity slice, which is where it logically applies.  But, again, practically that may not matter too much in this case.</p>",
        "id": 268917270,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1642807460
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191405\">Rob Hausam</span> <a href=\"#narrow/stream/179166-implementers/topic/Binding.20element.20with.20a.20choice.20of.20types/near/268917270\">said</a>:</p>\n<blockquote>\n<p>I think the reality is that the binding was done that way because there probably isn't any expected use of the Vital Signs profile with valueCodeableConcept, so it really might not matter much whether or not the validator does what is expected there.  Probably, it might have made sense and would be more clear if the binding to ucum-vitals-common was made directly on the valueQuantity slice, which is where it logically applies.  But, again, practically that may not matter too much in this case.</p>\n</blockquote>\n<p>That makes sense to me as history. <br>\nHowever, I suspect that the VitalSigns profiles are being extensively used as design patterns and so obscure mistakes like that will be reproduced frequently. <br>\nSuggestions<br>\n1 / On the terminologies page clarify that binding an element with multiple types applies to all bindable types,<br>\n2/  Revise the VitalSigns profile in R5 to put the binding in the correct place.<br>\n3/ Revise the validator to apply the binding test as documented.</p>",
        "id": 269048083,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1642984074
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span>  If the binding is a good idea on VitalSigns.component.valueQuantity, why not also have it on VitalSigns.valueQuantity?</p>",
        "id": 269534004,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1643268065
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> should I create a Jira issue to request that the terminologies page clarify that binding an element with multiple types applies to all bindable types.</p>",
        "id": 269534306,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1643268367
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> should I create a GitHub issue to revise the validator to apply the binding test as documented?</p>",
        "id": 269534318,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1643268405
    },
    {
        "content": "<p>sure create a test case that demonstrates the problem</p>",
        "id": 269622346,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1643310641
    },
    {
        "content": "<p>You could also submit a Git issue against the publisher asking for a warning if a polymorphic element has a binding.  Best practice is generally to slice and put bindings on the slices.</p>",
        "id": 269642311,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1643319577
    },
    {
        "content": "<p>Jira issues:</p>\n<ul>\n<li>VitalSigns binding problem <a href=\"https://jira.hl7.org/browse/FHIR-35803\">FHIR-35803</a></li>\n<li>Document binding to multi data type element: <a href=\"https://jira.hl7.org/browse/FHIR-35891\">FHIR-35891</a></li>\n</ul>",
        "id": 269685406,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1643344394
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <br>\nValidator seems fine. It tests the binding on Quantity, CodeableConcept and string, and not on Range (which includes two Quantity elements, but is not mentioned as bindable on <a href=\"http://hl7.org/fhir/R4/terminologies.html\">http://hl7.org/fhir/R4/terminologies.html</a>)</p>",
        "id": 269691690,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1643350469
    },
    {
        "content": "<ul>\n<li>GitHub request for validator warning <a href=\"https://github.com/HL7/fhir-ig-publisher/issues/384\">#384</a></li>\n</ul>",
        "id": 269691803,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1643350597
    },
    {
        "content": "<p>Agree with this and with handling VitalSigns.valueQuantity and VitalSigns.component.valueQuantity the same.</p>",
        "id": 269750667,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1643382760
    }
]