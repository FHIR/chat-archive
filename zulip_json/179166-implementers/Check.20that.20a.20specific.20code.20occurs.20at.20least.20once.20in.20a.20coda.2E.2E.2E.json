[
    {
        "content": "<p>Hi all,<br>\nI want to define a profile on observation resource, that allows multiple coding's within Observation.code. But the profile should check that a specific code appears at least once in the coding list. Additional undefined codes are allowed.<br>\nI could achieve this by creating a slice with min cardinality = 1. But I wonder weather there is an easier way without slicing.</p>\n<p>Thank you in advance!</p>",
        "id": 213778733,
        "sender_full_name": "Moritz Kähler",
        "timestamp": 1603111319
    },
    {
        "content": "<p>Use patternCodeableConcept with a pattern that defines the desired coding.  Pattern allows other codings to be present</p>",
        "id": 213802713,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603121102
    },
    {
        "content": "<p>Would you recommend to use patternCodableConcept instead of slicing?</p>",
        "id": 214078294,
        "sender_full_name": "Moritz Kähler",
        "timestamp": 1603298364
    },
    {
        "content": "<p>It's less work to maintain and somewhat easier for implementers to read, so yes.</p>",
        "id": 214104581,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603309549
    },
    {
        "content": "<p>Where can I find docs on patternCodableConcept?</p>",
        "id": 214105538,
        "sender_full_name": "David Pyke",
        "timestamp": 1603309964
    },
    {
        "content": "<p>There aren't any specific to patternCodeableConcept.  There's documentation in the core spec on ElementDefinition.pattern[x].</p>",
        "id": 214105783,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603310056
    },
    {
        "content": "<p>That's a start.  I can work with that</p>",
        "id": 214105840,
        "sender_full_name": "David Pyke",
        "timestamp": 1603310076
    },
    {
        "content": "<p>On complex elements with a fixed[x] omitted elements are prohibited, with pattern[x] they are unconstrained.</p>",
        "id": 214145815,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1603345522
    },
    {
        "content": "<p>That interpretation has worked OK for me, so far.</p>",
        "id": 214145828,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1603345561
    },
    {
        "content": "<p>Thanks for the replies. But I'm not able to create this patterns. Could you provide a pattern to replace the slicing on Observation.code.coding in this example? ( <a href=\"https://simplifier.net/healthyme/bloodpressure\">https://simplifier.net/healthyme/bloodpressure</a>)</p>",
        "id": 214575144,
        "sender_full_name": "Moritz Kähler",
        "timestamp": 1603720158
    }
]