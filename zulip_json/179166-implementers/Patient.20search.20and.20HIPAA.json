[
    {
        "content": "<p>Hi, <br>\nI am building a patient search API - mostly using information from <a href=\"https://www.hl7.org/fhir/search.html#string\" target=\"_blank\" title=\"https://www.hl7.org/fhir/search.html#string\">https://www.hl7.org/fhir/search.html#string</a></p>\n<p>The search uses HTTP GET method to search for patient using name, dob etc.  In the US, patient name and dob are phi and are protected by HIPAA.Â Because the request is a GET request the URL will have the name and dob and it will get saved in the our server logs which are not encrypted. Does this constitute a HIPAA violation?</p>\n<p>Would it better to use an HTTP POST for this API?</p>",
        "id": 165083794,
        "sender_full_name": "Manoj Shenoy",
        "timestamp": 1557244130
    },
    {
        "content": "<p>Yes you should probably use a POST based search.<br>\n<a href=\"http://hl7.org/fhir/http.html#search\" target=\"_blank\" title=\"http://hl7.org/fhir/http.html#search\">http://hl7.org/fhir/http.html#search</a></p>",
        "id": 165083951,
        "sender_full_name": "Nick Radov",
        "timestamp": 1557244265
    },
    {
        "content": "<p>Thank you for the quick response</p>",
        "id": 165085474,
        "sender_full_name": "Manoj Shenoy",
        "timestamp": 1557245326
    },
    {
        "content": "<p>this is a permanent FAQ. There's nothing to stop servers storing bodies in  their logs, and some do.</p>",
        "id": 165085539,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557245369
    },
    {
        "content": "<p>so using POST doesn't really solve this. But post logs are distributed less widely than the url logs, so it can help</p>",
        "id": 165085579,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557245400
    },
    {
        "content": "<p>I think \"less widely\" undersells the point.  By default, IIS logs query parameters.  To log the POST body in IIS, you need to download and install an additional module that doesn't ship with the OS.</p>",
        "id": 165086637,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557246028
    },
    {
        "content": "<p>For my use case, I do have control over the server policy. So i won't be logging the POST body. <br>\nAs far as the client application is  concerned, it would be the responsibility of the application to ensure the logs are secured properly. A violation from the client end should not affect us as per our client agreement.</p>",
        "id": 165087511,
        "sender_full_name": "Manoj Shenoy",
        "timestamp": 1557246615
    },
    {
        "content": "<p>Solid.</p>",
        "id": 165087580,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557246680
    },
    {
        "content": "<p>If the server logs are accessible to people that shouldn't see data, (unless you're exporting them), then the data is accessible pretty easily as well. IE: securing the server and auditing access is a necessity either way</p>",
        "id": 165097997,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557254028
    },
    {
        "content": "<p>Also: caution because some languages and libraries default to dumping the request bodies where there are errors. There are many places in the stack where different pieces can leak.</p>",
        "id": 165098082,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557254066
    },
    {
        "content": "<p>it's important to make sure that the whole system is involved in protecting the data or auditing the access if it's done</p>",
        "id": 165098274,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557254209
    },
    {
        "content": "<p>\"There be dragons\" seems appropriate, in other words :)</p>",
        "id": 165098331,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557254270
    }
]