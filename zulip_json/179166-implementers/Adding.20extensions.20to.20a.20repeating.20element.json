[
    {
        "content": "<p>What is the best way to add an extension to a repeating element that is not a backbone element? An example is adding language proficiency to Practitioner.communication, which is 0..* CodeableConcept. You can't add that extension to Practitioner at the top level, because the language proficiency pairs with a specific language. All I can think of is to extend CodeableConcept by adding language proficiency, and then restrict Practitioner.communication to use that profiled version of CodeableConcept. This seems wrong, somehow. Maybe I'm getting hung up on why I should be making an extension to CodeableConcept, and not something more directly associated with communication ability.</p>",
        "id": 153872856,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1487615929
    },
    {
        "content": "<p>You can define the extension with a context of Practioner.communication</p>",
        "id": 153872859,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487617232
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>, in the StructureDefinition profiling Practitioner, does that mean we're defining elements with paths <code>Practitioner.communication.extension</code>?</p>",
        "id": 153872887,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1487639264
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> I'm not sure I understand the question.  When you're specifying the context for an extension, you can definitely list paths within the resource the extension applies to, not just the base data type or resource.  And you can pass type boundaries too.  So I could have an extension with a context of Observation.code.coding.system if I really needed to (though that would be a rather odd context for an extension).</p>",
        "id": 153872920,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487657321
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> Isn't the context defined in the extension definition itself?  And it just indicates allowable places?  How would we indicate in the profile itself that the extension should be applied in communication?  Perhaps the extension context is * or can go on <em>any</em> codeable concept -- Even if we list it in the profile, it's ambigous where it goes unless we somehow specifically tie it to the path in the structure definition.  Otherwise how does someone using my profile know where it is expected if the element definition context allows it in multiple places?</p>",
        "id": 153872923,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1487657862
    },
    {
        "content": "<p>When you include an extension in your profile, you slice one of the \".extension\" elements in your instance where you want the extension to appear.  So long as the path to that element jives with one of the context paths specified in that extension's definitions, you're fine.  I'm not sure I'm understanding the question here.</p>",
        "id": 153872928,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487667382
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> Sorry if I'm not being clear.  Let me try it this way:  In the use case above (wanting to add language-proficiency extension to Practitioner, related to Practitioner.communication) -- where do we put the language-proficiency extension in the profile structure definition?</p>\n<div class=\"codehilite\"><pre><span></span>Practitioner.extension:language-proficiency\n</pre></div>\n\n\n<p>(in which case the placement doesn't exactly match the context where it is intended to be used), or can we do this:</p>\n<div class=\"codehilite\"><pre><span></span>Practitioner.communication.extension:language-proficiency\n</pre></div>\n\n\n<p>The second is preferred, I think -- but <code>Practitioner.communication.extension</code> isn't an existing path element in the Practitioner structure definition snapshot (but you can get there by drilling into the <code>CodeableConcept</code>).  So I want to be sure it is legal to add that path to the profile on Practitioner.</p>",
        "id": 153872955,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1487686832
    },
    {
        "content": "<p>You can absolutely drill down into CodeableConcept - or any other data type - when profiling.</p>",
        "id": 153872971,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487699274
    },
    {
        "content": "<p>Thanks, <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>.  Sorry it took me so long to ask the right question.</p>",
        "id": 153872974,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1487700089
    },
    {
        "content": "<p>No worries.  Slicing is definitely in the deep end of the FHIR pool :)</p>",
        "id": 153872975,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487700309
    }
]