[
    {
        "content": "<p>For R4 we added this:</p>\n<p>\"References are also allowed to have an identifier. The modifier <code>:identifier</code> allows for searching by the identifier rather than the literal reference:</p>\n<p><code>GET [base]/Observation?subject:identifier=http://acme.org/fhir/identifier/mrn|123456</code></p>\n<p>This is a search for all observations that reference a patient by a particular patient MRN. When the :identifier modifier is used, the search value works as a <em>token</em> search. <br>\n\"</p>\n<p>I did not see a way to create custom search modifier using SearchParameter,  what is the best way to add this search functionality to a STU3 Implementation Guide.  As an Operation?</p>",
        "id": 153975298,
        "sender_full_name": "Eric Haas",
        "timestamp": 1531671885
    },
    {
        "content": "<p>I'm not understanding this.. you want to add different functionality to an IG?</p>",
        "id": 153975324,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531701597
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span>, I got it working with a SearchParameter - you'll need to follow the server-specific docs for adding it in</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;resourceType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;SearchParameter&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;observation-context-identifier&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://hl7.org/fhir/SearchParameter/observation-context-identifier&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Observation.context.identifier Search Parameter&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;status&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;draft&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;experimental&quot;</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;date&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;2018-07-11&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;publisher&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;blah&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;purpose&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Need to search Observation.context references by business identifier&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;context-identifier&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;base&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">&quot;Observation&quot;</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;token&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Search Observation contexts by their business identifier&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;expression&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Observation.context.identifier&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;target&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">&quot;Patient&quot;</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">&quot;modifier&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">&quot;missing&quot;</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>Then a query like <code> /Observation?context-identifier=my-system|my-code</code> will work</p>",
        "id": 153975381,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1531724630
    },
    {
        "content": "<p>Can't you already do that with a chained search (even in DSTU2): GET [base]/Observation?subject.dentifier=http://acme.org/fhir/identifier/mrn|123456</p>",
        "id": 153975476,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1531750996
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>   is not defined in STU3 only showed up in R4,  <span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span>   This is  not the resource identifier but the Reference.identifier element for the Reference Type.  <span class=\"user-mention\" data-user-id=\"191363\">@Vadim Peretokin</span>   thanks that just might be the answer I was looking for  - create my own SearchParameter!</p>",
        "id": 153975501,
        "sender_full_name": "Eric Haas",
        "timestamp": 1531761203
    },
    {
        "content": "<p>Yes...but shouldn't they be the same? Don't reference.identifier means 'referencing to a resource with this identifier' ?</p>",
        "id": 153975502,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1531761991
    },
    {
        "content": "<p>they may be, but not interested in chaining across Resources since the endpoint only has QuestionnaireAnswers or some other resource but no Patient.  Although I don't know if this buys you anything.  Is, Reference.reference is any more or less opaque than a  Reference.identifier from a privacy aspect?</p>",
        "id": 153975505,
        "sender_full_name": "Eric Haas",
        "timestamp": 1531762808
    },
    {
        "content": "<p>assuming the identifier is opaque</p>",
        "id": 153975506,
        "sender_full_name": "Eric Haas",
        "timestamp": 1531762842
    },
    {
        "content": "<p>A key difference is that for the chained version to work, the resource that is referenced to has to be available on the same server.<br>\nWhen searching directly on the identifier value of the Reference element, you don't need the referenced-to resource to be available.</p>",
        "id": 153975683,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1531816191
    },
    {
        "content": "<p>Why does the referenced resource has to be available? I don't see anything in the specs requiring that</p>",
        "id": 153975814,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1531852301
    },
    {
        "content": "<p>you can't chain without it.   need to access Patient to query the identifiers.  If your server only has QuestionnaireAnswers you are out of luck on your query.</p>",
        "id": 153975828,
        "sender_full_name": "Eric Haas",
        "timestamp": 1531857504
    },
    {
        "content": "<p>That's not strictly true in that if the Patient were contained, you could theoretically chain without supporting the Patient endpoint - but containing Patient would be weird...</p>",
        "id": 153975836,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531860611
    },
    {
        "content": "<p>Can be relevant when searching Bundles though - because all the data you chain through to could live in the Bundle.</p>",
        "id": 153975837,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531860639
    },
    {
        "content": "<p>I am not sure I am fully clear on where this conversation is ending. There are cases where the element in a Resource (Any). Plus I am told that in the case of a Reference.identifier, I can put a business identifier there even if there is no Resource yet holding that business identifier. For example where Observation.basedOn.identifier holds a HL7 v2 order number; but there is no actual instance of any of the given resource types that exist and hold that business identifier. Thus in this case  basedOn.reference is not populated.  So how do I search for this?</p>",
        "id": 153975929,
        "sender_full_name": "John Moehrke",
        "timestamp": 1531881789
    },
    {
        "content": "<p><code>GET [base]/Observation?subject:identifier=http://acme.org/fhir/identifier/mrn|123456</code> should do the trick in your case since this is querying the Observation.subject directly and not search for a yet to be created Patient resource.</p>",
        "id": 153975936,
        "sender_full_name": "Eric Haas",
        "timestamp": 1531882630
    },
    {
        "content": "<p>okay, that is what I was thinking....   so then I don't understand the subtly of this thread. What is different that makes it not as easy?</p>",
        "id": 153975944,
        "sender_full_name": "John Moehrke",
        "timestamp": 1531882859
    },
    {
        "content": "<p>My initial ask was how to do it in STU3? since the above Query is new for R4.  This stream went a little sideways for other use cases.  </p>\n<p>Is a Reference.reference is any more or less opaque than a Reference.identifier from a privacy aspect?... assuming the identifier is opaque</p>",
        "id": 153975946,
        "sender_full_name": "Eric Haas",
        "timestamp": 1531883136
    },
    {
        "content": "<p>you should do it the same way in R3 - just pre-adopt the R4 solution</p>",
        "id": 153975947,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531883196
    },
    {
        "content": "<p>Hm, so one can't do what I asked about in STU3? Didn't know that</p>",
        "id": 153975948,
        "sender_full_name": "John Moehrke",
        "timestamp": 1531883205
    },
    {
        "content": "<p>pre-adopt is fallacy... nice story, but not helpful... ultimately R4 will happen soon enough.</p>",
        "id": 153975949,
        "sender_full_name": "John Moehrke",
        "timestamp": 1531883245
    },
    {
        "content": "<p>As to the Reference.reference vs Reference.identifier.... if both are assigned given pseudorandom identifier mechanism, they are both equal from a Privacy perspective.</p>",
        "id": 153975950,
        "sender_full_name": "John Moehrke",
        "timestamp": 1531883307
    },
    {
        "content": "<p>I can definitely chain without having a Patient resource implemented. It is just a matter of convert ?subject.identifier=xxx in the appropriate query to the underlying data store - exactly like you would do for ?subject:identifier=xxxxx</p>",
        "id": 153975951,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1531883324
    },
    {
        "content": "<p>If the identifiers are issued poorly, which can happen with either URI or identifier, then they are equally bad.</p>",
        "id": 153975952,
        "sender_full_name": "John Moehrke",
        "timestamp": 1531883343
    },
    {
        "content": "<p>(that is why I'd rather always use the chained syntax - that is already established - instead of adding yet another way to do the same thing)</p>",
        "id": 153975953,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1531883380
    },
    {
        "content": "<p>so, given the query problem in STU3 as just outlined, I guess I am now glad I didn't simplify Provenance and AuditEvent until last week... The STU3 flavors were old school (pre STU3) model...</p>",
        "id": 153975954,
        "sender_full_name": "John Moehrke",
        "timestamp": 1531883525
    },
    {
        "content": "<p>I think there is some confusion here.<br>\nThe <code>:idenfitier</code> search modifier is not referring to an identifier value in the referenced resource, its specifying the value in the reference.reference property (which would have been indexed)<br>\nThis is not a chain, but a property in the resource.<br>\nI do however note that there is nothing in this part of the spec that talks about if the reference.identifier was resolved to fill in the reference.reference value.<br>\n<code>http://build.fhir.org/search.html#reference</code></p>",
        "id": 153975965,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1531888345
    },
    {
        "content": "<p>The example in the spec would be searching for observations like this one.</p>\n<div class=\"codehilite\"><pre><span></span>&lt;Observation&gt;\n    &lt;subject&gt;\n        &lt;identifier&gt;\n            &lt;system value=&quot;http://acme.org/fhir/identifier/mrn&quot; /&gt;\n            &lt;value value=&quot;123456&quot; /&gt;\n        &lt;/identifier&gt;\n    &lt;/subject&gt;\n&lt;/Observation&gt;\n</pre></div>\n\n\n<p>It would not be checking for a chained search to check Observation.subject.identifier= ...</p>",
        "id": 153975970,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1531888567
    },
    {
        "content": "<p>(Haven't implemented this in my R4 test server yet either)</p>",
        "id": 153975971,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1531888597
    },
    {
        "content": "<p>I've read through this thread, and admit I'm confused. I can successfully create this resource on <code>http://hapi.fhir.org/baseR4/</code></p>\n<div class=\"codehilite\"><pre><span></span><code>&lt;Observation&gt;\n    &lt;subject&gt;\n        &lt;identifier&gt;\n            &lt;system value=&quot;http://acme.org/identifier/mrn&quot; /&gt;\n            &lt;value value=&quot;000&quot; /&gt;\n        &lt;/identifier&gt;\n    &lt;/subject&gt;\n&lt;/Observation&gt;\n</code></pre></div>\n\n\n<p>(a Patient resource does not exist)<br>\nand then I attempt to search for it using<br>\n<code>GET http://hapi.fhir.org/baseR4/Observation?subject:identifier=http://acme.org/identifier/mrn|000</code><br>\nbut it doesn't find anything. Is this expected behavior? <br>\nHow would I search for Observation.subject.identifier?</p>",
        "id": 207663134,
        "sender_full_name": " Bob Milius",
        "timestamp": 1598032127
    },
    {
        "content": "<p>This might be completely off, but could an identifier \"000\" be hitting a strange edge case that breaks the search?</p>",
        "id": 207670402,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1598035898
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"192685\">Vassil Peytchev</span> <a href=\"#narrow/stream/179166-implementers/topic/How.20search.20on.20Reference.2Eidentifier.20in.20STU3/near/207670402\">said</a>:</p>\n<blockquote>\n<p>This might be completely off, but could an identifier \"000\" be hitting a strange edge case that breaks the search?</p>\n</blockquote>\n<p>I've used other values (eg 123456) with the same result.</p>",
        "id": 207671203,
        "sender_full_name": " Bob Milius",
        "timestamp": 1598036373
    },
    {
        "content": "<p>Try asking in #hapi ? This seems something specific to that server - a bug, or it does not support that search</p>",
        "id": 207687884,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1598046042
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191912\">Michele Mottini</span> <a href=\"#narrow/stream/179166-implementers/topic/How.20search.20on.20Reference.2Eidentifier.20in.20STU3/near/207687884\">said</a>:</p>\n<blockquote>\n<p>Try asking in #hapi ? This seems something specific to that server - a bug, or it does not support that search</p>\n</blockquote>\n<p>I did ask in <a class=\"stream\" data-stream-id=\"179167\" href=\"/#narrow/stream/179167-hapi\">#hapi</a>  (<a href=\"#narrow/stream/179167-hapi/topic/searching.20for.20subject.3Aidentifier\">https://chat.fhir.org/#narrow/stream/179167-hapi/topic/searching.20for.20subject.3Aidentifier</a>)  but haven't gotten anywhere so far. Can someone show me a working example on a public server that supports searching for observations based on subject:identifier?</p>",
        "id": 227815004,
        "sender_full_name": " Bob Milius",
        "timestamp": 1614278241
    }
]