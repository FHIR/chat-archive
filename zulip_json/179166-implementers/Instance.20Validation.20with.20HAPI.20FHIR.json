[
    {
        "content": "<p>Hello folks, does anyone have experience validating a FHIR instance (say a specific patient) against a 'home-made' (not US Core) profile programmatically (not via CLI)? If so, would you be able to share a code snippet on how to do that? I was hoping there would be a method such as validator.validate(myInstance, myProfile) or validator.validate(myInstance, myProfileURL) and if the latter, a way to register the profile with the FHIR context. Thank you!</p>",
        "id": 224503544,
        "sender_full_name": "Claude Nanjo",
        "timestamp": 1611940234
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"248736\">@Mark Iantorno</span></p>",
        "id": 224540378,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611957782
    },
    {
        "content": "<p>hey</p>",
        "id": 224540447,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611957801
    },
    {
        "content": "<p>What do you mean by \"validate a FHIR resource programmatically\" and not via the cli</p>",
        "id": 224540639,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611957847
    },
    {
        "content": "<p>Validating a resource is huge</p>",
        "id": 224540674,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611957858
    },
    {
        "content": "<p>Like...I can point you to the repository in GitHub where that code lives, but it is 100k+ lines of code</p>",
        "id": 224540762,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611957886
    },
    {
        "content": "<p>I presume \"how do you trigger validation from code\" - is there documentation about how to instantiate the ValidationEngine and then trigger validation of an instance?</p>",
        "id": 224540784,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611957893
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191703\">@Claude Nanjo</span></p>",
        "id": 224540796,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611957896
    },
    {
        "content": "<p>There is not documentation on that</p>",
        "id": 224540864,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611957915
    },
    {
        "content": "<p>you would have to clone the repository and the write the call the method in the validation package</p>",
        "id": 224540956,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611957948
    },
    {
        "content": "<p>I do this in the soon to be a real tool validation website, I can point you to that repo</p>",
        "id": 224541074,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611957971
    },
    {
        "content": "<p><a href=\"https://github.com/hapifhir/org.hl7.fhir.validator-wrapper\">https://github.com/hapifhir/org.hl7.fhir.validator-wrapper</a> is the project</p>",
        "id": 224541143,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611957996
    },
    {
        "content": "<p>If you look at this class here: <a href=\"https://github.com/hapifhir/org.hl7.fhir.validator-wrapper/blob/master/src/jvmMain/kotlin/routes/ValidationRoutes.kt\">https://github.com/hapifhir/org.hl7.fhir.validator-wrapper/blob/master/src/jvmMain/kotlin/routes/ValidationRoutes.kt</a></p>",
        "id": 224541362,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611958068
    },
    {
        "content": "<p>I create something called a ValidationRequest (<a href=\"https://github.com/hapifhir/org.hl7.fhir.validator-wrapper/blob/master/src/commonMain/kotlin/model/ValidationRequest.kt\">https://github.com/hapifhir/org.hl7.fhir.validator-wrapper/blob/master/src/commonMain/kotlin/model/ValidationRequest.kt</a>) and then send it to the Validator</p>",
        "id": 224541546,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611958119
    },
    {
        "content": "<p>it contains the Validation CliContext, in addition to the list of files that need to be validated</p>",
        "id": 224541633,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611958148
    },
    {
        "content": "<p>The CliContext contains all the information that a request for validation takes in</p>",
        "id": 224541687,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611958166
    },
    {
        "content": "<p>it's named CliContext because I originally refactored it when only the Cli existed</p>",
        "id": 224541746,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611958187
    },
    {
        "content": "<p>Take a look at that code, it should give you a starting point, but if you have other questions, let me know</p>",
        "id": 224541879,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611958218
    },
    {
        "content": "<p>Also, in the core libs the ValidationService class is here: <a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/master/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/cli/services/ValidationService.java\">https://github.com/hapifhir/org.hl7.fhir.core/blob/master/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/cli/services/ValidationService.java</a></p>",
        "id": 224543379,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611958623
    },
    {
        "content": "<p>James responded to my enquiry with the following recommendation which we are trying now:</p>\n<p>There is an example of how to supply custom definitions to the validator here: <a href=\"https://hapifhir.io/hapi-fhir/docs/validation/validation_support_modules.html#recipe-supplying-custom-definitions\">https://hapifhir.io/hapi-fhir/docs/validation/validation_support_modules.html#recipe-supplying-custom-definitions</a></p>\n<p>This example is actually a bit out of date, a new version is about to get pushed. You'll want to add the following two lines as well:<br>\n// This module supplies several code systems that are commonly used in validation<br>\nsupportChain.addValidationSupport(new CommonCodeSystemsTerminologyService(ctx));</p>\n<p>// This module implements terminology services for in-memory code validation<br>\nsupportChain.addValidationSupport(new InMemoryTerminologyServerValidationSupport(ctx));</p>",
        "id": 224544310,
        "sender_full_name": "Claude Nanjo",
        "timestamp": 1611959201
    },
    {
        "content": "<p>So, just keep in mind that the HAPI validator does not align 100% with the core validator</p>",
        "id": 224544410,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611959268
    },
    {
        "content": "<p>your results may vary</p>",
        "id": 224544412,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611959274
    },
    {
        "content": "<p>So, you may have a resource that passes in HAPI but when run through the core validator, it fails</p>",
        "id": 224544496,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611959311
    },
    {
        "content": "<p>or the other way around</p>",
        "id": 224544508,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611959316
    },
    {
        "content": "<p>but they are _mostly_ aligned</p>",
        "id": 224544528,
        "sender_full_name": "Mark Iantorno",
        "timestamp": 1611959329
    },
    {
        "content": "<p>Thank you Mark. Sounds good. At some point, hopefully the two will converge.</p>",
        "id": 224544532,
        "sender_full_name": "Claude Nanjo",
        "timestamp": 1611959332
    },
    {
        "content": "<p>I will post our code once we verify it works for others who need to do the same thing.</p>",
        "id": 224544561,
        "sender_full_name": "Claude Nanjo",
        "timestamp": 1611959356
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191703\">@Claude Nanjo</span> on the server se we implemented on top of hapi-fhir a $validate operation for both approaches and I think it might work similiar on the client side 1) hapi-fhir: <a href=\"https://github.com/ahdis/hapi-fhir-jpaserver-validator/blob/530/src/main/java/ch/ahdis/fhir/hapi/jpa/validation/ValidationProvider.java\">https://github.com/ahdis/hapi-fhir-jpaserver-validator/blob/530/src/main/java/ch/ahdis/fhir/hapi/jpa/validation/ValidationProvider.java</a> and 2) hapi-fhir but using directly the core validator: <a href=\"https://github.com/ahdis/matchbox/blob/master/src/main/java/ch/ahdis/matchbox/validation/ValidationProvider.java\">https://github.com/ahdis/matchbox/blob/master/src/main/java/ch/ahdis/matchbox/validation/ValidationProvider.java</a>. <span class=\"user-mention\" data-user-id=\"248736\">@Mark Iantorno</span> <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> happy to provide a pull request on the base hapi-fhir implementation if this would be something of interest to you to add $valdiate operation (it is not 100% spec conform because it is on the root of the server and not on the resource).</p>",
        "id": 224589315,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1612019202
    }
]