[
    {
        "content": "<p>Ostensibly, I should be able to search for Observations that have a Patient performer by:<br>\n<code>/Observation?performer:Patient:missing=false</code>, but test servers either disallow (<span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ) or silently ignore (<span class=\"user-mention\" data-user-id=\"191757\">@Christiaan Knaap</span> <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> ).  Is this a valid search (I hope so)?</p>",
        "id": 161438496,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1553252998
    },
    {
        "content": "<p>I don't think that would be valid with the spec as written- there is no description of stacking modifiers like that that I can see. Certainly HAPI wouldn't allow this, we just don't have indexes currently that would support this search.</p>\n<p>You could get this information pretty easily by defining a custom SP though that indexes only on something like <code>Observation.performer.where(resolve() is Patient)</code></p>",
        "id": 161443903,
        "sender_full_name": "James Agnew",
        "timestamp": 1553258402
    },
    {
        "content": "<p>It should have been documented that combining multiple modifiers is not valid. See <a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17220\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17220\">https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17220</a></p>",
        "id": 161444216,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1553258709
    },
    {
        "content": "<p>That's an unfortunate outcome I think...certainly there are valid uses for \"stacked\" modifiers.</p>",
        "id": 161444843,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1553259244
    },
    {
        "content": "<p>Procedural question - since search is normative, could we allow this in future? Or would that be a breaking change?</p>",
        "id": 161444874,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1553259282
    },
    {
        "content": "<p>Adding new capabilities that don't break existing systems is allowed.</p>",
        "id": 161452598,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1553265167
    },
    {
        "content": "<p>I don't like that combination and there are many combinations that would be problematic. I really think this is better done as James suggests</p>",
        "id": 161484702,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1553289350
    },
    {
        "content": "<p>If the patients are also stored in the server, you can search this with <code>{{url}}/Observation?performer._type=Patient</code>.<br>\nOn a side note: Vonk does not ignore it silently, it included an OperationOutcome in the bundle stating \"Parameter is not well formatted, expected 'parametername[:modifier]=value'.\"</p>",
        "id": 161538687,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1553368047
    },
    {
        "content": "<p>And agree on preferably not stacking modifiers.</p>",
        "id": 161538742,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1553368103
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191757\">@Christiaan Knaap</span> is there a tracker out there to standardize \"_type\" on resource? That'd be nice...</p>",
        "id": 162323245,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1554202879
    },
    {
        "content": "<p>As to the complexity of \"stacking\" modifiers, I'm increasingly of the opinion that :missing should be a special case addable to a few modifiers. What I really mean is something like <code>=null</code>, and not being able to add that anywhere a value would be appropriate is a problem.  For instance, <code>Observation?code:text:missing=true</code> or (maybe, reaching here) <code>Patient?identifier:of-type:missing=true</code></p>",
        "id": 162328394,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1554207438
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191757\">Christiaan Knaap</span> is there a tracker out there to standardize \"_type\" on resource? That'd be nice...</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191351\">@Chris Grenz</span> : I don't see how the <a href=\"http://hl7.org/fhir/R4/search.html#_type\" target=\"_blank\" title=\"http://hl7.org/fhir/R4/search.html#_type\">spec on _type</a> would limit it to a system search, so I already expect this to be standardized.</p>",
        "id": 162334583,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1554212290
    },
    {
        "content": "<p>It's not in this list: <a href=\"http://hl7.org/fhir/R4/search.html#table\" target=\"_blank\" title=\"http://hl7.org/fhir/R4/search.html#table\">http://hl7.org/fhir/R4/search.html#table</a></p>",
        "id": 162334616,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1554212338
    },
    {
        "content": "<p>and not defined as a SearchParameter on Resource maybe?</p>",
        "id": 162334651,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1554212361
    },
    {
        "content": "<p>Consequently, at least HAPI (<span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> ) doesn't implement by default for chained search (by my simple testing)</p>",
        "id": 162334740,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1554212407
    },
    {
        "content": "<p>It is indeed not in the <a href=\"http://hl7.org/fhir/R4/definitions.json.zip\" target=\"_blank\" title=\"http://hl7.org/fhir/R4/definitions.json.zip\">definitions</a>. Would be nice and consistent if it was.</p>",
        "id": 162334995,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1554212594
    },
    {
        "content": "<p>I'll open...</p>",
        "id": 162335689,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1554213074
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20640\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20640\">GF#20640</a></p>",
        "id": 162335916,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1554213214
    },
    {
        "content": "<p>Also <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20641\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20641\">GF#20641</a> - so much integration work needs to find the missing stuff...</p>",
        "id": 162338149,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1554214632
    }
]