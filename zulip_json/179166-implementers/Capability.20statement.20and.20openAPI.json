[
    {
        "content": "<p>I am trying to use the capability statement to describe the role a fhir server plays in a scenario. Using the IG publisher tool the openapi spec is generated that I would like to use. As inspiration I look at: <a href=\"https://www.hl7.org/fhir/us/core/CapabilityStatement-us-core-server.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/us/core/CapabilityStatement-us-core-server.html\">https://www.hl7.org/fhir/us/core/CapabilityStatement-us-core-server.html</a> this nicely shows the search parameters, combinations of these etc.<br>\nthe following I have not been able to do and would like to know of it is possible and how to do this:<br>\n-In the generated openapi spec I would like to have a post message e.g. $apply how to code this in the capability statement inorder to achieve this?<br>\n-How do I define the response as a bundle of certain resources in the capability statement?<br>\n-The table with all the search parameters in the IG generated by IG publisher can that table be generated from the capability statement by the IG publisher tool, how do I do this?</p>",
        "id": 190704435,
        "sender_full_name": "Hans van Amstel",
        "timestamp": 1584355036
    },
    {
        "content": "<p>I'm not exactly sure what the openapi bit has to do with the other questions...</p>",
        "id": 190708605,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584357679
    },
    {
        "content": "<p>what's \"$apply\"</p>",
        "id": 190708642,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584357703
    },
    {
        "content": "<p>you need a profile on the bundle</p>",
        "id": 190708665,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584357720
    },
    {
        "content": "<p>the page you refer to is hand written, I think</p>",
        "id": 190708748,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584357754
    },
    {
        "content": "<p>The $apply is just an example of an method that I would like to represent in the capability statement in such a way that the generated openAPI spec marks it as post and not get,put etc.<br>\nOK, I kinda hoped that this table was generated as the information is available in the capability statement.</p>",
        "id": 190727927,
        "sender_full_name": "Hans van Amstel",
        "timestamp": 1584368508
    },
    {
        "content": "<p>I'm working in this area right now (generating OpenAPI).  Once I finish jumping through hoops, it will be available on GitHub.</p>\n<p>The capability statement does not have enough information to produce the output you want, you also need to parse the various definition files.</p>\n<p>For example, there are files for everything core to the standard in the relevant FHIR NPM (e.g., <code>OperationDefinition-ActivityDefinition-apply.json</code>, <code>SearchParameter-AllergyIntolerance-verification-status.json</code>, etc.).</p>\n<p>For profiles, this gets trickier.  Essentially, you have to manually discover where the computable files are (if they are posted) and add them that way.  In some cases, the URL listed in the statement will lead you to a computable version, other times it leads to a human-readable page, which may or may not contain links to the files you want (e.g., they may or may not exist).  A note here is to make sure you then grab the correct version of those files (e.g., DSTU2 vs R4).  I started a thread on this the other day (1-2 weeks ago?).. either here or in the <a class=\"stream\" data-stream-id=\"179177\" href=\"/#narrow/stream/179177-conformance\">#conformance</a>  stream.</p>\n<p>For things published 'officially', there is a general pattern, for non-official versions there's a lot of hope in the process.</p>",
        "id": 190730882,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1584369639
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span>  Really interesting. I was looking into a way to use the generated IG + openAPI spec as a formal description for setting up a new FHIR server.</p>",
        "id": 190739268,
        "sender_full_name": "Hans van Amstel",
        "timestamp": 1584372964
    },
    {
        "content": "<p>The template for the narrative generation for USCore-like capabilty statements is available in Jupyter here:</p>\n<p><a href=\"https://mybinder.org/v2/gh/Healthedata1/MyBinder/master\" target=\"_blank\" title=\"https://mybinder.org/v2/gh/Healthedata1/MyBinder/master\">![Binder](https://mybinder.org/badge_logo.svg)</a></p>\n<p>under CapStatement/Narrative_generator.ipynb</p>\n<p>It requires the CS resource json file and the IG NPM package as inputs.  I have not completed all the documentation.</p>",
        "id": 190770057,
        "sender_full_name": "Eric Haas",
        "timestamp": 1584387614
    },
    {
        "content": "<blockquote>\n<p>For profiles, this gets trickier. Essentially, you have to manually discover where the computable files are (if they are posted)</p>\n</blockquote>\n<p>this makes no sense to me</p>",
        "id": 190783277,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584394673
    },
    {
        "content": "<p>use the package</p>",
        "id": 190783338,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584394705
    },
    {
        "content": "<p>For core content, it's all published in npm; but a Capability Statement can also point to profiles and search parameters outside of core.</p>",
        "id": 190783707,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1584394953
    },
    {
        "content": "<p>any IG we publish, all references will be to something in a package</p>",
        "id": 190783833,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584395046
    },
    {
        "content": "<p>But a server isn't limited to using IGs we publish. (Also, re: IGs we publish: what's the best/easiest way to find a complete set of all packages that exist?)</p>",
        "id": 190783892,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1584395097
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179166-implementers/topic/Capability.20statement.20and.20openAPI/near/190783833\" title=\"#narrow/stream/179166-implementers/topic/Capability.20statement.20and.20openAPI/near/190783833\">said</a>:</p>\n<blockquote>\n<p>any IG we publish, all references will be to something in a package</p>\n</blockquote>\n<p>Yes, anything published by HL7 will have a package.  However, unless I missed something the other day, they are NOT required to use versioned links.  So, you can try to grab a package, but it may not be valid for you.</p>\n<p>As Josh mentioned though, not everything gets published via HL7.  For anything 'external', it's checking and hoping (e.g., the server may have the relevant definition on the server, the URL may be to a page that points to one, the URL may be the definition file, etc.).  Unless I missed something?</p>",
        "id": 190852296,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1584454183
    },
    {
        "content": "<p>for stuff not published by HL7 and some affiliates, yes, you're right</p>",
        "id": 190893864,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584470761
    }
]