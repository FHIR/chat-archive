[
    {
        "content": "<p>Token search with modifier :text states that it searches on CodeableConcept.text, Coding.display, or Identifier.type.text.</p>\n<p>Why is Identifier.type.text in that list? A token search on Identifier without :of-type uses Identifier.system as URI and Identifier.value as code, so it does not seem to make sense to search on the text version of the Identifier type. It doesn't look like :of-type and :text can be combined.</p>",
        "id": 173834447,
        "sender_full_name": "Paul Church",
        "timestamp": 1566423642
    },
    {
        "content": "<p>Identifier.type.text is where you would put something like \"Michigan state physician license\".  I.e. the label for what kind of identifier you're dealing with.</p>",
        "id": 173835084,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566424210
    },
    {
        "content": "<p>Yes - doesn't it seem odd to be searching on the type of identifier instead of the content of the identifier? You can't do that on a CodeableConcept, it searches the text representation of the value rather than the system.</p>",
        "id": 173835936,
        "sender_full_name": "Paul Church",
        "timestamp": 1566424914
    },
    {
        "content": "<p>It's not the same, but it's useful :)</p>",
        "id": 173836952,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566425806
    },
    {
        "content": "<p>At <a href=\"https://www.hl7.org/fhir/search.html#modifiers\">https://www.hl7.org/fhir/search.html#modifiers</a>, it mentions:<br>\nFor token: :text (the match does a partial searches on the text portion of a CodeableConcept or the display portion of a Coding), instead of the default search which uses codes.</p>\n<p>The absence of Identifier.type.text makes it seem like it should not be included for :text searches; as it does feel a bit out of place in the first place.</p>",
        "id": 233319032,
        "sender_full_name": "Troy Biesterfeld",
        "timestamp": 1617716010
    },
    {
        "content": "<p>It's definitely intended to be included for :text searches.  If you think it needs to be listed in both places, please submit a change request.</p>",
        "id": 233350969,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1617726956
    },
    {
        "content": "<p>I agree with <span class=\"user-mention\" data-user-id=\"197072\">@Paul Church</span> that this seems odd.  If searching the Identifier.type is useful (in certain cases), why not create a search parameter to search that as its own token?</p>",
        "id": 233358002,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1617730035
    },
    {
        "content": "<p>The same reason we don't make you define a separate search parameter to search the text of CodeableConcepts.  If you have a 'token' search parameter against an element of type Identifier, we wanted an easy consistent way to search the identifier 'label' - which lives in Identifier.type.text.  And the <code>:text</code> modifier was what was landed on.  It's now normative, so it's not changing.</p>",
        "id": 233370157,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1617735221
    },
    {
        "content": "<p>its seems a lot different than searching on the text value of a CodeableConcept to me</p>",
        "id": 233373959,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1617736881
    },
    {
        "content": "<p>also, the two definitions for :text sort of conflict, so we thought (hoped) that maybe which is the normative one could still be up for debate</p>",
        "id": 233374209,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1617736981
    },
    {
        "content": "<p>I opened <a href=\"https://jira.hl7.org/browse/FHIR-31708\">https://jira.hl7.org/browse/FHIR-31708</a> which could be used to update the definition under the modifiers section to explain the strange Identifier.type behavior (if you wish)</p>",
        "id": 233375948,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1617737760
    },
    {
        "content": "<p>Both uses are normative, but we can certainly make the usage explicit in both places.</p>",
        "id": 233400104,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1617747793
    }
]