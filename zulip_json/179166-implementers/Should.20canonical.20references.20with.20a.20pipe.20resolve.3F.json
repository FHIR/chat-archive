[
    {
        "content": "<p>I'm trying to validate QuestionnaireResponse with a canonical reference with a '|' (pipe). But it doesn't work yet (not found). if in my questionnaireResponse is a canonical reference to a <a href=\"http://myfhir.server/Questionnaire/covid19|2.2\">http://myfhir.server/Questionnaire/covid19|2.2</a>, how would the instancevalidation then work? </p>\n<p>will it <br>\nA) directly try to resolve by sending a GET to url <a href=\"http://myfhir.server/Questionnaire/covid19|2.2\">http://myfhir.server/Questionnaire/covid19|2.2</a>? And should i first parse the request in order to get the business version (2.2) from the url? <br>\nB)  make a search available  a search with <a href=\"http://myfhir.server/Questionnaire/covid19|2.2\">http://myfhir.server/Questionnaire/covid19|2.2</a> and try to return a bundle with searchresults? <br>\nC) something else?</p>\n<p>Maybe there are some examples (java) with canonical url's in combination with valuesets, codesystems or questionnaire responses?</p>\n<p>Thx</p>",
        "id": 221644940,
        "sender_full_name": "Eric van der Zwan",
        "timestamp": 1609852947
    },
    {
        "content": "<p>I don't think the validator tries to resolve the URLs - it looks in the IG packages made available to the validator.  (Hitting arbitrary URLs is somewhat of a security risk, though I think there's a way to make it try).  If it <em>were</em> going to resolve, it would first hit known registries doing a search by URL and version and if it doesn't find that, should then search on the server endpoint implied by the URL using the same criteria.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> can you confirm current behavior?</p>",
        "id": 221661730,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1609861742
    },
    {
        "content": "<p>I think the sequence is:</p>\n<ul>\n<li>look in any provided packages </li>\n<li>hit provided URL</li>\n<li>hit the provided URL converted to a URL search if it looks like a restful API URL</li>\n</ul>",
        "id": 221701869,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1609880906
    },
    {
        "content": "<blockquote>\n<p>if it looks like a restful API URL</p>\n</blockquote>\n<p>To be clear: this implies that canonicals needn't <em>be</em> dereferenceable URLs, and indeed they might not even look like dereferenceable URLs. Is that right? (This came up with <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> in <a class=\"stream\" data-stream-id=\"179229\" href=\"/#narrow/stream/179229-subscriptions\">#subscriptions</a> recently.)</p>",
        "id": 221711640,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1609886561
    },
    {
        "content": "<p>There was also a question on <a class=\"stream\" data-stream-id=\"179177\" href=\"/#narrow/stream/179177-conformance\">#conformance</a> recently about a urn as a canonical (urn:iso:3166 or similar) . Those definitely won't resolve, with or without a pipe.</p>",
        "id": 221715091,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1609888733
    },
    {
        "content": "<p>they don't need to be, though HL7 published ones always are</p>",
        "id": 221720599,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1609892776
    },
    {
        "content": "<p>'|' is not a safe character in a URL -- I would not expect it to be resolvable / accepted by many libraries</p>",
        "id": 221720600,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1609892782
    },
    {
        "content": "<p>I apollogize for the long post in advance. I like to work with examples since they usually work better. I'm aware that most things need maintenance and have a history. In order to use (older) information you need to know how it was created. Here versions of a questionnaire comes in handy. However not all changes in the questionnaire are changes to the meaning of the questionnaire. Luckly the questionnaire has a business-version as well. When a reference is needed to a spefic business-version of a resource, an canonical url can be used. With a pipe a version can be added to the url. The question is how this canonical including a version should be used? And maybe more specific: how to used them when validating resources? </p>\n<p>I'm trying to validate a QuestionnaireResponse. To do so i need to know which questionnaire was used, which is referenced with a canonical including a business-version. Let me create a simplified example. For a long-running project i need to know if a patient is a intensive care or a medium care patient. </p>\n<p>-- Phase 1 -- </p>\n<p>Simple codesystem <br>\n&lt;CodeSystem&gt;<br>\n    &lt;id value=\"patienttypecode\"/&gt;<br>\n    &lt;meta&gt;<br>\n        &lt;versionId value=\"3\"/&gt;<br>\n    &lt;/meta&gt;<br>\n    &lt;url value=\"http://myfhir.server/CodeSystem/patienttypecode\"/&gt;<br>\n    &lt;version value=\"2.0\"&gt;<br>\n    &lt;concept&gt;<br>\n        &lt;code value=\"IC\"&gt;<br>\n        &lt;definition value=\"Intensive Care Patient\"/&gt;<br>\n    &lt;/concept&gt;<br>\n    &lt;concept&gt;<br>\n        &lt;code value=\"MC\"&gt;<br>\n        &lt;definition value=\"Medium Care Patient\"/&gt;<br>\n    &lt;/concept&gt;<br>\n&lt;/CodeSystem&gt;</p>\n<p>Create a valueset using the codesystem<br>\n&lt;ValueSet&gt;<br>\n    &lt;id value=\"patienttypevalue\"/&gt;<br>\n    &lt;url value=\"http://myfhir.server/CodeSystem/patienttypevalue\"/&gt;<br>\n    &lt;version value=\"1.1\"/&gt;<br>\n    &lt;compose&gt;<br>\n        &lt;include&gt;<br>\n            &lt;system value=\"http://myfhir.server/CodeSystem/patienttypecode\"/&gt; &lt;-- not canonical<br>\n            &lt;version value=\"2.0\"/&gt; &lt;-- pointing to the business version of the code system. <br>\n        &lt;/include&gt;<br>\n    &lt;/compose&gt;<br>\n&lt;/ValueSet&gt;</p>\n<p>Creating a questionnaire using the valueset as choices for an answer<br>\n&lt;Questionnaire&gt;<br>\n    &lt;id&gt;123&lt;/id&gt;<br>\n    &lt;meta&gt;<br>\n        &lt;versionId value=\"44\"/&gt;<br>\n    &lt;/meta&gt;<br>\n    &lt;url value=\"http://myfhir.server/Questionnaire/123\"/&gt;<br>\n    &lt;version value=\"5.0\"/&gt;<br>\n    &lt;item&gt;<br>\n        &lt;linkId value=\"pattype\"/&gt;<br>\n        &lt;text value=\"WHAt is the type of patient?\"/&gt;  &lt;-- oeps wrong capitals. <br>\n        &lt;type value=\"choice\"/&gt;<br>\n        &lt;answerValueSet value=\"http://myfhir.server/CodeSystem/patienttypevalue|1.1\"/&gt; <br>\n    &lt;/item&gt;<br>\n&lt;/Questionnaire&gt;</p>\n<p>Creating a questionnaireResponse using the codesystem.<br>\n&lt;QuestionnaireResponse&gt;<br>\n    &lt;questionnaire value=\"http://myfhir.server/Questionnaire/123|5.0\"/&gt;<br>\n    &lt;item&gt;  <br>\n        &lt;linkId value=\"pattype\"/&gt;<br>\n        &lt;answer&gt;<br>\n            &lt;valueCoding&gt;<br>\n                &lt;system value=\"http://myfhir.server/CodeSystem/patienttypecode\"/&gt;<br>\n                &lt;code value=\"IC\"/&gt;<br>\n            &lt;/valueCoding&gt;<br>\n        &lt;/answer&gt; <br>\n    &lt;/item&gt;<br>\n&lt;/QuestionnaireResponse&gt;</p>\n<p>-- phase 2 --<br>\nI have noticed i have used capitals where i did not want them. So i modified the questionnaire by correcting the capitals in the definition. Since there is no breaking change, i won't change the business-version and keep it \"5.0\". Saving it will create a new instance: </p>\n<p>&lt;Questionnaire&gt;<br>\n    &lt;id&gt;123&lt;/id&gt;<br>\n    &lt;meta&gt;<br>\n        &lt;versionId value=\"45\"/&gt;  &lt;-- new instance, so incremented the versionId<br>\n    &lt;/meta&gt;<br>\n    &lt;url value=\"http://myfhir.server/Questionnaire/123\"/&gt;<br>\n    &lt;version value=\"5.0\"/&gt;<br>\n    &lt;item&gt;<br>\n        &lt;linkId value=\"pattype\"/&gt;<br>\n        &lt;text value=\"What is the type of patient?\"/&gt;  &lt;-- corrected the typo's. <br>\n        &lt;type value=\"choice\"/&gt;<br>\n        &lt;answerValueSet value=\"http://myfhir.server/CodeSystem/patienttypevalue|1.1\"/&gt; <br>\n    &lt;/item&gt;<br>\n&lt;/Questionnaire&gt;</p>\n<p>Since the business-version is still \"5.0\", no futher actions are needed to the other resources. Nothing else changes in the meaning of the questionnaire or the response to it. Keep in mind that there are now two instances for the questionnaire with the canonical <a href=\"http://myfhir.server/Questionnaire/123|5.0\">http://myfhir.server/Questionnaire/123|5.0</a>. <br>\nWhen trying to validate the QuestionnaireResponse, the Questionnaire is needed. However the canonical is pointing to two resource instances now.</p>\n<p>Question is: which instance is used for the validation. </p>\n<p>In this case it would not matter which instance is used.<br>\ni would suggest that will always be the last updated. I can not find it in the documentation though. </p>\n<p>-- phase 3 -- <br>\nEverything is running well for a while, when suddenly there is a need for an extra patient type. The concept \"High Care Patient\" is needed and added to the codesystem. This i consider a big change, so the business version of the code system is incremented to \"3.0\". </p>\n<p>&lt;CodeSystem&gt;<br>\n    &lt;id value=\"patienttypecode\"/&gt;<br>\n    &lt;meta&gt;<br>\n        &lt;versionId value=\"4\"/&gt; <br>\n    &lt;/meta&gt;<br>\n    &lt;url value=\"http://myfhir.server/CodeSystem/patienttypecode\"/&gt;<br>\n    &lt;version value=\"3.0\"&gt; &lt;-- incremented<br>\n    &lt;concept&gt;<br>\n        &lt;code value=\"IC\"&gt;<br>\n        &lt;definition value=\"Intensive Care Patient\"/&gt;<br>\n    &lt;/concept&gt;<br>\n    &lt;concept&gt;<br>\n        &lt;code value=\"MC\"&gt;<br>\n        &lt;definition value=\"Medium Care Patient\"/&gt;<br>\n    &lt;/concept&gt;<br>\n    &lt;concept&gt;<br>\n        &lt;code value=\"HIGH\"&gt;<br>\n        &lt;definition value=\"High Care Patient\"/&gt;  &lt;-- new concept added<br>\n    &lt;/concept&gt;<br>\n&lt;/CodeSystem&gt;</p>\n<p>Now we have a new concept in the codesystem. In order to use it in questionnaire, we also need to update the valueset since it is pointing to version \"2.0\". Since the include changes due to the new concept, i'm also updating the business-version from \"1.1\" to \"1.2\". <br>\n&lt;ValueSet&gt;<br>\n    &lt;id value=\"patienttypevalue\"/&gt;<br>\n    &lt;url value=\"http://myfhir.server/CodeSystem/patienttypevalue\"/&gt;<br>\n    &lt;version value=\"1.2\"/&gt; &lt;-- new business version<br>\n    &lt;compose&gt;<br>\n        &lt;include&gt;<br>\n            &lt;system value=\"http://myfhir.server/CodeSystem/patienttypecode\"/&gt; <br>\n            &lt;version value=\"3.0\"/&gt; &lt;-- updated to point to the new business version.<br>\n        &lt;/include&gt;<br>\n    &lt;/compose&gt;<br>\n&lt;/ValueSet&gt;</p>\n<p>The questionnaire now have to be altered in order to use the updated valueset. Since i need to recognize if there where 2 or 3 options, i will change the business version of the questionnaire to \"5.1\". <br>\n&lt;Questionnaire&gt;<br>\n    &lt;id&gt;123&lt;/id&gt;<br>\n    &lt;url value=\"http://myfhir.server/Questionnaire/123\"/&gt;<br>\n    &lt;version value=\"5.1\"/&gt; &lt;-- small increment<br>\n    &lt;item&gt;<br>\n        &lt;linkId value=\"pattype\"/&gt;<br>\n        &lt;type value=\"choice\"/&gt;<br>\n        &lt;answerValueSet value=\"http://myfhir.server/CodeSystem/patienttypevalue|1.2\"/&gt;  &lt;-- changes from 1.1 to 1.2<br>\n    &lt;/item&gt;<br>\n&lt;/Questionnaire&gt;</p>\n<p>The updated questionnaire is released. Now we are receiving both 5.0 and 5.1 versions of the questionnaire. When processing i will havev to save this information. So i can identify which questionnaires had only two answer options (and so the high care patient was marked either medium or intensive) and which had all tree. <br>\nIn this example i have now 3 instances of the questionnaire/123; two with business-version 5.0 and on with version 5.1. </p>\n<p>Questions is: how does the instancevalidation validate the (same phase 1) QuestionnaireResponse now? </p>\n<p>Just hitting the URL (<a href=\"http://myfhir.server/Questionnaire/123\">http://myfhir.server/Questionnaire/123</a>) would 'fail', since that will just resolve to the lasted instance of the resource (=5.1). Technical it now won't fail since all previous concepts still exists, but what is a concept was removed? </p>\n<p>Personally i would like to see a 'rule', which would state somehting like 'if a canonical with a version is used, it will resolve to the latest instance of that business-version.' In other words: the combination of resource id and business-version should be unique and thus resolve to just one instance. With this 'rule' vailidation is always done with the proper business version. </p>\n<p>Although here i use the questionnaire as an example. The canonical's are use in more places and pointing to resources which have business-versions and (likely, i didn't check) to resources without. When a canonical is used, the version is probably important although i don't have the full perspective of all resource if this would break something elsewhere.</p>\n<p>Could you tell me:</p>\n<ul>\n<li>if my example follows the correct process of maintaining resources such as valuesets/codesystems/questionnaires/</li>\n<li>if i'm using the business-verison correctly in my example</li>\n<li>if the validation should honour the business-version (or fail it can not be found)</li>\n<li>if my suggestion of letting a canonical url including a version resolve to the lastest saved instance with that business version, is a valid one? </li>\n<li>and if this is just for the instancevalidation?</li>\n<li>'|' is not a safe chararcter as <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> mentioned. Maybe a canonical should look more like questionnaire/123/businessverion/5.1?</li>\n</ul>\n<p>Thank you.</p>",
        "id": 221754204,
        "sender_full_name": "Eric van der Zwan",
        "timestamp": 1609930379
    },
    {
        "content": "<p>To be pedantic, they're not URLs, they are URIs.  But if they look like a URL and you attempt a GET to resolve it, then I would expect you'd at least first want to %-encode the | symbol.  Alternatively, if you're operating on a heuristic like \"it looks like a restful API URL\", then by the rules of FHIR ids, they cannot include a | so you'd actually want to strip off the version part first (and probably then check that it matches the business version if you do successfully retrieve a Resource).</p>",
        "id": 221773568,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1609943811
    },
    {
        "content": "<p>This is actually a canonical reference - so you <em>should</em> be stripping off the vertical bar and trailing text - as it's referring to a version, and is NOT referring to the canonical URL of the resource.  There is not (and never was) an expectation that a canonical reference with URL would resolve.  If you'd like to see guidance to that effect included in the spec, you could submit a change request.</p>",
        "id": 221795583,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1609953901
    },
    {
        "content": "<p>So a canonical reference is referring to a version, but that can not be used in order to validate the resource since one should strip off the pipe and trailing text. i am probably missing something (sorry), but what then is the use of having the  pipe and version in the canonical? A computer/server/client can not use that?<br>\nSecondly: the questionnaire.version should never change. If this needs to change, one would have save the resource as a new instance with a new ID which has the result of having a new url which then can be used voor validation.  <br>\nCorrect?</p>",
        "id": 221819306,
        "sender_full_name": "Eric van der Zwan",
        "timestamp": 1609965152
    },
    {
        "content": "<ol>\n<li>canonical references allow you to reference a specific business version of a resource _relative to it's URI_ (which is not the URL where it might happen to be stored / available).</li>\n<li>yes, but we're talking about URIs (identifiers) not URLs</li>\n</ol>\n<p>There is a lot of very confusing terminology in the FHIR spec. around URLs, URIs, logical URLs, canonical URLs, Canonicals, canonical references, etc etc.  It would be really useful to have a dedicated page that disambiguates them all quite clearly, although I'm sure people will continue to mis-use the terms in forums, it might at least help get consistent use of the language throughout the spec and perhaps even in various IGs.</p>",
        "id": 221833289,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1609972876
    },
    {
        "content": "<p>The expected way to use a canonical reference is to query for it (by url &amp; version) in a local repository or some shared registry.  On the official server where the resource is maintained, the natural RESTful id of the resource probably wouldn't jive with the canonical URL because there could well be multiple instances of that same artifact (each a different version), and only one instance could exist with that id.  To the best of my knowledge, even the HL7 site doesn't support resolving references that include the pipe in the URL.  If you query by just the canonical, you'll get the 'current' release.</p>",
        "id": 221851842,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1609988504
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179166-implementers/topic/Should.20canonical.20references.20with.20a.20pipe.20resolve.3F/near/221701869\">said</a>:</p>\n<blockquote>\n<p>I think the sequence is:</p>\n<ul>\n<li>look in any provided packages </li>\n<li>hit provided URL</li>\n<li>hit the provided URL converted to a URL search if it looks like a restful API URL</li>\n</ul>\n</blockquote>\n<p>Hi Grahame <span aria-label=\"smiley\" class=\"emoji emoji-1f603\" role=\"img\" title=\"smiley\">:smiley:</span> ,<br>\nCould you please advise,  what can be done on an IG site side, so that the FHIR Validator was able to fetch a profile by the provided canonical URL without passing the <code>-ig</code> parameter? From your post I assume it is possible, isn't it?</p>\n<p>For example, The official URL for my profile is: <a href=\"https://semalexa.github.io/igpopdemo/StructureDefinition/AdverseEvent\">https://semalexa.github.io/igpopdemo/StructureDefinition/AdverseEvent</a>.<br>\nThe <a href=\"https://semalexa.github.io/igpopdemo/StructureDefinition/AdverseEvent\">https://semalexa.github.io/igpopdemo/StructureDefinition/AdverseEvent</a> URL resolves to the <a href=\"https://semalexa.github.io/igpopdemo/StructureDefinition/AdverseEvent.html\">https://semalexa.github.io/igpopdemo/StructureDefinition/AdverseEvent.html</a> page.<br>\nThe <a href=\"https://semalexa.github.io/igpopdemo/StructureDefinition/AdverseEvent.json\">https://semalexa.github.io/igpopdemo/StructureDefinition/AdverseEvent.json</a> file is located near the .html page.<br>\n<span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 223498780,
        "sender_full_name": "Aleksandra Pavlyshina",
        "timestamp": 1611230608
    },
    {
        "content": "<p>This is the validator output:</p>\n<div class=\"codehilite\"><pre><span></span><code>$ java -jar validator_cli.jar -version 4.0.1 resourcesToValidate/AZAdverseEventSample.json -tx n/a -profile https://semalexa.github.io/igpopdemo/StructureDefinition/AdverseEvent\nFHIR Validation tool Version 5.2.16 (Git# f815bc8fb8f0). Built 2021-01-14T22:39:23.297Z (6 days old)\n  Java:   14 from C:\\Program Files\\Java\\jdk-14 on amd64 (64bit). 3028MB available\n  Paths:  Current = D:\\Work\\Healthsamurai\\az-fhir-profiles, Package Cache = C:\\Users\\admin\\.fhir\\packages\n  Params: -version 4.0.1 resourcesToValidate/AZAdverseEventSample.json -tx n/a -profile https://semalexa.github.io/igpopdemo/StructureDefinition/AdverseEvent\nLoading\n  Load FHIR v4.0 from hl7.fhir.r4.core#4.0.1 - 4575 resources (00:10.0228)\n  Load hl7.terminology#2.0.0 - 3749 resources (00:02.0579)\n  Terminology server null - Version n/a: No Terminology Server (00:00.0000)\n  Get set...  go (00:00.0089)\n  Fetch Profile from https://semalexa.github.io/igpopdemo/StructureDefinition/AdverseEvent\nException in thread &quot;main&quot; org.hl7.fhir.exceptions.FHIRFormatError: This does not appear to be a FHIR resource (wrong namespace &#39;http://www.w3.org/1999/xhtml&#39;) (@ /)\n        at org.hl7.fhir.r5.formats.XmlParserBase.parse(XmlParserBase.java:135)\n        at org.hl7.fhir.r5.formats.XmlParserBase.parse(XmlParserBase.java:120)\n        at org.hl7.fhir.r5.formats.ParserBase.parse(ParserBase.java:61)\n        at org.hl7.fhir.validation.ValidationEngine.loadProfile(ValidationEngine.java:854)\n        at org.hl7.fhir.validation.ValidatorCli.doValidation(ValidatorCli.java:230)\n        at org.hl7.fhir.validation.ValidatorCli.main(ValidatorCli.java:159)\n</code></pre></div>",
        "id": 223498874,
        "sender_full_name": "Aleksandra Pavlyshina",
        "timestamp": 1611230676
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 223640190,
        "sender_full_name": "Aleksandra Pavlyshina",
        "timestamp": 1611321914
    },
    {
        "content": "<p>Grahame's on PTO until the end of month, so it may take time for him to get back to you.</p>",
        "id": 223646763,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611325258
    },
    {
        "content": "<p>this is on my todo list</p>",
        "id": 224939803,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1612301525
    },
    {
        "content": "<p>so the validator makes a request of <a href=\"https://semalexa.github.io/igpopdemo/StructureDefinition/AdverseEvent\">https://semalexa.github.io/igpopdemo/StructureDefinition/AdverseEvent</a> with the accept type set to application/json. The server needs to return json, not html</p>",
        "id": 225114266,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1612408461
    }
]