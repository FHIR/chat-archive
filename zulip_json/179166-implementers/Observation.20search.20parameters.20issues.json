[
    {
        "content": "<p>I think there could be some issues with the standard Observation search parameters that could be by design but if so could use some explanation in the text.</p>\n<p>1. Some parameters are missing (those for values of type bool, integer, range, time), others are for the top-level code-value but not for the components (values of type string and date)<br>\n2. The FHIRPath expression for some parameters isn't fully consistent with the description unless I'm just unaware of some standard FHIRPath conversions: for value-quantity the description includes searching the bounds of SampledData, for value-string the description includes searching CodeableConcept.text (which is inconsistent with the description for code-value-string)</p>\n<p>I've made a spreadsheet: <a href=\"https://docs.google.com/spreadsheets/d/19OhoT0EBAiB4XASsEXmcEemue8NnUoEyOT4P7l_XDGA/edit\" target=\"_blank\" title=\"https://docs.google.com/spreadsheets/d/19OhoT0EBAiB4XASsEXmcEemue8NnUoEyOT4P7l_XDGA/edit\">https://docs.google.com/spreadsheets/d/19OhoT0EBAiB4XASsEXmcEemue8NnUoEyOT4P7l_XDGA/edit</a></p>",
        "id": 153992711,
        "sender_full_name": "Eugene Lubarsky",
        "timestamp": 1535950076
    },
    {
        "content": "<p>I think you're right.  Boolean should be searchable with all of the value-concept ones, integer and range should be searchable with the quantity ones.  May need a new one for time.  <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> ?</p>",
        "id": 153992811,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1535989824
    },
    {
        "content": "<p>We didn't do all the permutations - just those that we thought would be the most common.   Make a change request for adding more.  In the meantime, you can always make your own SP and if you have please share with us so we don't have to reinvent the wheel.</p>",
        "id": 153992880,
        "sender_full_name": "Eric Haas",
        "timestamp": 1536019678
    },
    {
        "content": "<p>Including booleans in *value-concept and Ranges in *value-quantity sounds good, but for integers doesn't the value-quantity parameter require a unit as per <a href=\"http://build.fhir.org/search.html#quantity\" target=\"_blank\" title=\"http://build.fhir.org/search.html#quantity\">http://build.fhir.org/search.html#quantity</a> ?</p>",
        "id": 153992923,
        "sender_full_name": "Eugene Lubarsky",
        "timestamp": 1536032634
    },
    {
        "content": "<p>The unit can't be required as not all quantities will have units.  However it'd be good ot have an example showing that - can you submit a change request?</p>",
        "id": 153992926,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536034326
    },
    {
        "content": "<p>Ah okay. Sure, I've added <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17789\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17789\">GF#17789</a> for the Observation parameters, and <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17790\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17790\">GF#17790</a> for the Quantity parameters. </p>\n<p>Re. the corresponding FHIRPath expressions it would be nice if these search parameters could have a machine-processable definitions in the spec, but if that's not currently possible I think at least the definition of SearchParameter.expression should note that conversions via \"as\" may also have custom logic.</p>",
        "id": 153992937,
        "sender_full_name": "Eugene Lubarsky",
        "timestamp": 1536044691
    },
    {
        "content": "<p>what do you mean by \"machine-processable definitions\"  we usually have both a FHIRPath and XPath expression  (  I have been lobbying to get rid xpath of  since its a pain to maintain both manually  !! )?</p>",
        "id": 153993012,
        "sender_full_name": "Eric Haas",
        "timestamp": 1536072955
    },
    {
        "content": "<p>I mean enabling servers to extract search parameters for indexing  via general-purpose code that loads SearchParameter resources. Currently for something like Observation.value-string the description says to also search in valueCodeableConcept.text whereas the FHIRPath is only \"Observation.value as string\".</p>",
        "id": 153993322,
        "sender_full_name": "Eugene Lubarsky",
        "timestamp": 1536120239
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>     looking at <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17789\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17789\">GF#17789</a>.  there are couple of issues here.   I think <span class=\"user-mention\" data-user-id=\"192669\">@Eugene Lubarsky</span>  is right and the expression don't match the description.  Correcting this either by removing the text or expanding the xpath will be a breaking change.   Extending the other search parameters expressions would be breaking change in the expressions as well.    If OO were to agree and add for example boolean to value-concept -  I would need help with the fhirpath and xpath expressions.</p>",
        "id": 154013513,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540864917
    },
    {
        "content": "<p>You can define additional \"STU\" search parameters, but you can't fix the ones that exist unfortunately.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>, do we have the ability to differentiate STU search parameters?</p>",
        "id": 154013522,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1540866964
    },
    {
        "content": "<p>not at the moment - we've never really talked about trial-use for search parameters</p>",
        "id": 154013573,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540892022
    },
    {
        "content": "<p>Well I will defer this to R5 and deal with it then.  1) add new search parameters.  2) deprecate the text description for existing parameters?</p>",
        "id": 154013634,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540911548
    },
    {
        "content": "<p>I don't think you can deprecate a text description...</p>",
        "id": 154013655,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1540913129
    },
    {
        "content": "<p>Ideally in a non-normative world, to correct the error either the text needs to be changed or the expressions fixed to match or.. rip and replace the whole thing.   What do you suggest?</p>",
        "id": 154013659,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540913379
    },
    {
        "content": "<p>lemme see  the source first...</p>",
        "id": 154013660,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540913412
    },
    {
        "content": "<p>There were no expressions explicitly defined so it looks like the expression are generated base on the path.  The error lies in the description, which might have predated the xpath part and we didn't catch until the commenter noticed it.</p>",
        "id": 154013667,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540914012
    },
    {
        "content": "<p>The text is considered normative.  Fixing the computable expressions to align is a technical correction.</p>",
        "id": 154013677,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1540915131
    },
    {
        "content": "<p>If the descriptions are wrong, we could choose to leave the expressions right and try to fix the descriptions in R5.</p>",
        "id": 154013678,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1540915163
    },
    {
        "content": "<p>Well then we could try to fix the computable but I am not sure that we can do for</p>",
        "id": 154013693,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540917593
    },
    {
        "content": "<p>\"The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)\"</p>",
        "id": 154013694,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540917638
    },
    {
        "content": "<p>This one seems like its fixable:  \"The value of the observation, if the value is a string, and also searches in CodeableConcept.text\"</p>",
        "id": 154013695,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540917668
    },
    {
        "content": "<p>with  <code>(Observation.value as string) | (Observation.value as CodeableConcept).text</code></p>",
        "id": 154013696,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540917966
    },
    {
        "content": "<p>procedureally what do I need to do to make this a technical correction for R4?  (vote on tracker today and apply? even though have no clue how to fix the one?)  defer?</p>",
        "id": 154013697,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540918331
    },
    {
        "content": "<p>You can vote on it and make a decision on whether to apply in R4 or R5 later if you want</p>",
        "id": 154013699,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1540918559
    },
    {
        "content": "<p>as a technical correction... right.</p>",
        "id": 154013704,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540919903
    },
    {
        "content": "<p>you can make technical corrections to expressions on search parameters after this week</p>",
        "id": 154013820,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540929530
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>   how about right now?  and do you know if there is an expression for \"The value of the observation, if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)\"</p>",
        "id": 154013937,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540946208
    },
    {
        "content": "<p>Observation.value as Quantity | Observation.value as SampledData</p>",
        "id": 154013943,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540946762
    },
    {
        "content": "<p>Thanks and should I wait until next week to apply?</p>",
        "id": 154013945,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540946816
    },
    {
        "content": "<p>And document in narrative that </p>\n<blockquote>\n<p>(just search on the bounds of the values in sampled data)</p>\n</blockquote>\n<p>in this section: <a href=\"http://build.fhir.org/search.html#quantity\" target=\"_blank\" title=\"http://build.fhir.org/search.html#quantity\">build.fhir.org/search.html#quantity</a> - but I think that's procedurally a problem</p>",
        "id": 154013946,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540946818
    },
    {
        "content": "<p>I am interpreting \" but I think that's procedurally a problem \"  that I should hold off adding this text to the search page</p>",
        "id": 154014008,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540959448
    },
    {
        "content": "<p>yes, that's normative now. We could consider adding a trial-use note about SampledData, or just putting on Observation.. oh, that's normative too....</p>",
        "id": 154014009,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540959512
    },
    {
        "content": "<p>or we could leave it to implementer... discretion....</p>",
        "id": 154014010,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540959532
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> <span class=\"user-mention\" data-user-id=\"191407\">@Rick Geimer</span> FHIR-I co-chairs have an opinion?</p>",
        "id": 154014011,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540959559
    },
    {
        "content": "<p>We can add a note that a couple of the search parameters may not be optimally defined, that implementers are free to use their own search parameters and that they may want to monitor the CI build for guidance.  That wouldn't interfere with normative.</p>",
        "id": 154014012,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1540960033
    },
    {
        "content": "<p>add a note where?</p>",
        "id": 154014013,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540960162
    },
    {
        "content": "<p>Observation, near the search params</p>",
        "id": 154014014,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1540960431
    },
    {
        "content": "<p>we can define the search paraneters optimally. It's the search on SampledData that is procedurally tricky</p>",
        "id": 154014015,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540960470
    },
    {
        "content": "<p>We can't change the definitions of any of the search parameters from what went to ballot unless it's a very obvious technical correction.</p>",
        "id": 154014016,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1540960845
    },
    {
        "content": "<p>this case it is</p>",
        "id": 154014017,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540961000
    },
    {
        "content": "<p>that we dsicussed earlier in this topic</p>",
        "id": 154014018,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540961015
    },
    {
        "content": "<p>I am making the technical correction now,  adding extra words somewhere is the tricky part</p>",
        "id": 154014019,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540961093
    },
    {
        "content": "<p>I don't read adding in SampleData to the existing search criteria as an obvious technical correction?</p>",
        "id": 154014020,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1540961116
    },
    {
        "content": "<p>the description already says: \"if the value is a Quantity, or a SampledData (just search on the bounds of the values in sampled data)\"  in the search criteria</p>",
        "id": 154014021,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540961194
    },
    {
        "content": "<p>the search page says... \"SampledData    ...Not used in search\"</p>",
        "id": 154014022,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540961328
    },
    {
        "content": "<p>so I believe we are stuck or just say that a search expression on sampled data is server dependent?</p>",
        "id": 154014024,
        "sender_full_name": "Eric Haas",
        "timestamp": 1540961402
    },
    {
        "content": "<p>It's honestly not even clear to me yet what the important ways to search on Sample data are -- so leaving this behavior as not entirely defined, then later introducing more targeted parameters seems not horrible to me.</p>",
        "id": 154014135,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1540999771
    },
    {
        "content": "<p>seems to me that we will need to say something about it somewhere</p>",
        "id": 154014296,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1541015964
    },
    {
        "content": "<p>for a  little more background the  search text \"or a SampledData (just search on the bounds of the values in sampled data) \" has been around since DSTU1.   Since the issue was never raised  until now - either it has been completely ignored or everybody is doing it  ( which I doubt very much)</p>\n<p>Is removing the text from the search definition a substantive change if nobody every followed it in the first place?</p>",
        "id": 154014591,
        "sender_full_name": "Eric Haas",
        "timestamp": 1541086488
    },
    {
        "content": "<p>We actually do say something about sampled data serach - we say is it not used in search</p>",
        "id": 154014595,
        "sender_full_name": "Eric Haas",
        "timestamp": 1541086863
    },
    {
        "content": "<p>I have an  immediate issue of what to do in Observation... the bigger issue is how do you search Sampled data</p>",
        "id": 154014597,
        "sender_full_name": "Eric Haas",
        "timestamp": 1541086909
    },
    {
        "content": "<p>Yes, it's a substantive change.  Substantive change (from the ANSI perspective) isn't based on what implementers do, it's based on how someone reviewing the specification would have interpreted it.   We might well choose to allow breaking change between versions if we're confident it won't impact implementers, but it would still be a substantive change from an ANSI perspective - with all of the balloting impacts that implies.</p>",
        "id": 154014599,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1541087011
    },
    {
        "content": "<p>if you make an example - which isn't a breaking change - then that will trigger everyone to run into it</p>",
        "id": 154014750,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1541096088
    },
    {
        "content": "<p>How does an example help with search?</p>",
        "id": 154014757,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1541096520
    },
    {
        "content": "<p>it triggers all the server providers to get around to handling it</p>",
        "id": 154014768,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1541096709
    },
    {
        "content": "<p>how can we make a search example using sampled date when we say \"sampled data is not used in search\"</p>",
        "id": 154014907,
        "sender_full_name": "Eric Haas",
        "timestamp": 1541107148
    },
    {
        "content": "<p>that's the procedural issue, because Observation quite clearly says that we do.</p>",
        "id": 154014909,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1541107529
    },
    {
        "content": "<p>so I think we should add a trial-use clarification about how SampledData searching works</p>",
        "id": 154014910,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1541107559
    },
    {
        "content": "<ul>\n<li>Who task is this?</li>\n<li>Do we need a new Tracker?</li>\n<li>How does this resolve the Observation tracker - we still have an expression that is technically incorrect.   do we add<code>Observation.value as Quantity | Observation.value as SampledData</code>?</li>\n</ul>",
        "id": 154015973,
        "sender_full_name": "Eric Haas",
        "timestamp": 1541532092
    },
    {
        "content": "<p>yes add this</p>",
        "id": 154015997,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1541535340
    },
    {
        "content": "<p>this = new tracker or add the expression to observation?</p>",
        "id": 154016021,
        "sender_full_name": "Eric Haas",
        "timestamp": 1541540878
    },
    {
        "content": "<p>add the expression</p>",
        "id": 154016049,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1541545345
    },
    {
        "content": "<p>done</p>",
        "id": 154016135,
        "sender_full_name": "Eric Haas",
        "timestamp": 1541570622
    }
]