[
    {
        "content": "<p>I have a Questionnaire asking for \"date of test\" and \"date of sepecimen collection\". Normally this will map to Observation and to Specimen.<br>\nQuestion: since my specimen is only needed for that attribute, should I:</p>\n<ol>\n<li>Force the creation of the 2 resources, Observation and Specimen</li>\n<li>Just use a contained resource</li>\n<li>Simply add an extension to my Observation, for \"collection date\"?</li>\n</ol>\n<p>My preference is 1, otherwise 2, else 3.  Thoughts?<br>\nFor 1. it's not clear how I'd automatically populate the relation Observation-Specimen.</p>",
        "id": 221076194,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609176367
    },
    {
        "content": "<p>assuming some code (called \"Importer\") is consuming some external data and  translating into a FHIR Questionnaire, is the challenge populating the Obs and Specimen (which would apply to 1 and 2) or more extending Importer's capabilities to invent additional FHIR Resources?</p>",
        "id": 221076564,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1609176703
    },
    {
        "content": "<p>the conversion would be from a QuestionnaireResponse to the other 2 resources.</p>",
        "id": 221077288,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609177277
    },
    {
        "content": "<p>question is more if there is any recommendation or best practice.</p>",
        "id": 221077527,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609177491
    },
    {
        "content": "<p>I plan to use the approach defined in SDC which defines that resources can be updated or created (I'll get to that operation soon). <br>\nBut I do not recall any reference to creating 2 resources AND a relation between them.</p>",
        "id": 221077531,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609177494
    },
    {
        "content": "<p>still trying to grok this (which I'll need to do for some NHS stuff), the challenge isn't in creating the Obs or the Specimen, but in creating them and populating the specimen property in the observation?</p>",
        "id": 221077986,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1609177883
    },
    {
        "content": "<p>yes, since those will be created at the same time, and I don't see if there is any provision for that</p>",
        "id": 221078878,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609178578
    },
    {
        "content": "<p>I don't know if there is any (reference) implementation for this kind of operation<br>\n<a href=\"https://build.fhir.org/ig/HL7/sdc/extraction.html#structuremap-based-extraction\">https://build.fhir.org/ig/HL7/sdc/extraction.html#structuremap-based-extraction</a></p>",
        "id": 221078935,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609178635
    },
    {
        "content": "<p>Whether you create two independent resources or one resource with a second contained resource stems from whether you have enough information for both resources to be useful independently.  If all you've got is a collected date, that doesn't sound like enough information for a stand-alone resource to me.  (If you're querying a server and getting back a bunch of specimens with no information other than collected date, they're going to be nigh impossible to differentiate or do anything useful with.)  On the other hand, if the QuestionnaireResponse had more information about the specimen such that, when populated, it would actually form a useful independent resource, then it should certainly be handled as an independent resource.</p>",
        "id": 221082367,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1609181290
    },
    {
        "content": "<p>I only need specimen collected date and place.</p>",
        "id": 221082919,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609181747
    },
    {
        "content": "<p>(Requirements always change, but this one is not going far from here)</p>",
        "id": 221082989,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609181784
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>, I think you're advocating for <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span>'s  choice #2. Does that mean he should invent a local name for the contained Specimen to populate the contained Observation's specimen property?</p>",
        "id": 221083514,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1609182227
    },
    {
        "content": "<p>Indeed, in this case I'll also need to populate <a href=\"http://specimen.id\">specimen.id</a></p>",
        "id": 221083664,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609182342
    },
    {
        "content": "<p>Right.  He'd use a contained resource and need to define a local id for it he can use to reference it within the observation (e.g. <code>#spec</code>)</p>",
        "id": 221084094,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1609182686
    },
    {
        "content": "<p>The collection place is an extension. So I'll have a contained resource with one attribute and one extension...</p>",
        "id": 221086426,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609184836
    },
    {
        "content": "<p>I presume I'd need to be able to search on those. Will that cause suffering?</p>",
        "id": 221086522,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609184898
    },
    {
        "content": "<p>You can search on specimen properties in the context of the Observation using chaining.  Searching directly on the contained Specimen is theoretically possible but not widely supported.</p>",
        "id": 221086812,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1609185215
    },
    {
        "content": "<p>Chaining applies only if it's not contained, correct?</p>",
        "id": 221087761,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609186081
    },
    {
        "content": "<p>is there any implementation using the techniques described in SDC? <br>\nI'm looking for examples of the mappings (would be really neat to see if there is an OperationDefinition out there)</p>",
        "id": 221087837,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1609186135
    },
    {
        "content": "<p>Chained search works whether it's contained or not.</p>",
        "id": 221089186,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1609187430
    },
    {
        "content": "<p>With SDC, you can't do contained for Observation-based extraction.  It would be straight-forward for map-based extraction.  I'm not sure if we'd have to add anything special for path-based extraction or not.</p>",
        "id": 221089264,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1609187511
    }
]