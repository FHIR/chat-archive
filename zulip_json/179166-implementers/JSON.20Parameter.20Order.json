[
    {
        "content": "<p>within the JSON pages of FHIR it states \"Properties can appear in any order\". This has been pointed out to us by one of our development partners who is intended to utilise this feature. Do the HAPI and .NET client API libraries handle this?</p>",
        "id": 153846654,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1473241221
    },
    {
        "content": "<p>I've tested this by sending a JSON patient with the properties 'out of order' to the HAPI server, and by parsing the same JSON with the FhirParser of the .Net API. Both tests went fine, so, yes.</p>",
        "id": 153846660,
        "sender_full_name": "Mirjam Baltus",
        "timestamp": 1473243259
    },
    {
        "content": "<p>Great thank you <span class=\"user-mention\" data-user-id=\"191347\">@Mirjam Baltus</span> </p>",
        "id": 153846663,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1473248957
    },
    {
        "content": "<p>yes this routinely tested at connectathons; the FHIR examples are always strictly in order, for the benefit of readers. But all the other implementations assign order by their own rules e.g. my server does properties alphabetically</p>",
        "id": 153846668,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1473251335
    },
    {
        "content": "<p>An object is an unordered collection of zero or more name/value<br>\n   pairs, where a name is a string and a value is a string, number,<br>\n   boolean, null, object, or array.</p>\n<p>An array is an ordered sequence of zero or more values.</p>",
        "id": 153846694,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1473272218
    },
    {
        "content": "<p>Taken from <a href=\"http://www.rfc-editor.org/rfc/rfc7159.txt\" target=\"_blank\" title=\"http://www.rfc-editor.org/rfc/rfc7159.txt\">http://www.rfc-editor.org/rfc/rfc7159.txt</a></p>",
        "id": 153846695,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1473272228
    },
    {
        "content": "<p>So JSon is unordered pr. definition</p>",
        "id": 153846696,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1473272249
    }
]