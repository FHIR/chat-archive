[
    {
        "content": "<p>Hi, I have few queries regarding the Location search API:<br>\n1)  I want to get all root locations having partOf as empty or null. But when I query using partOf as null, it treats it as a string and does not bring out any records. I understand that partOf should be a valid Location reference or we could also pass an empty string.<br>\n2) When I pass an empty partOf param, it throws an error that an id part can not be null. I was wondering how this can be handled to get those records having an empty or null partOf params. <br>\n3) I also think the inability to query on a null value sounds like a general limitation for any resource. Can anyone please confirm this?</p>\n<p>Thanks!</p>",
        "id": 247172521,
        "sender_full_name": "Reham Muzzamil",
        "timestamp": 1627285983
    },
    {
        "content": "<p>You can't have empty or null partOf (or anything) in FHIR.  If you don't have a value for an element, you omit the element entirely.  You can query for missing elements using the <code>:missing</code> qualifier.  E.g. <code>Location?partof:missing=true</code> should work.</p>",
        "id": 247210637,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1627310137
    },
    {
        "content": "<p>Thanks for your prompt response. <br>\nI have tested using  Location?partof:missing=true it throws an exception of  \"The validated expression is false\" since it fails the validation of Validate.isTrue(id.hasIdPart());</p>\n<p>I am not sure, may be I am missing something.</p>",
        "id": 247322993,
        "sender_full_name": "Reham Muzzamil",
        "timestamp": 1627387001
    },
    {
        "content": "<p>Are you saying the instance fails validation or the profile fails validation?</p>",
        "id": 247329926,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1627391088
    },
    {
        "content": "<p>Thanks, Lloyd. <br>\nI am not actually running a validator standalone/or via code. Rather I just hit the end-point of Search Location with the <code>:missing</code> qualifier. And the API throws an exception <code>The validated expression is false</code>. On debugging I have figured out that there is a validation written inside the class <code>IdHelperService</code> that checks if id has a valid idPart, if not it throws an exception. I believe the logic is centralized for all the resource providers as it will be called when creating a predicate. Since <code>partOf</code> is of Reference dataType it verifies that the id part can not be null.</p>",
        "id": 247429454,
        "sender_full_name": "Reham Muzzamil",
        "timestamp": 1627457284
    },
    {
        "content": "<p>It sounds like your endpoint does not support the <code>:missing</code> modifier. Maybe you can reach out to the <a class=\"stream\" data-stream-id=\"179167\" href=\"/#narrow/stream/179167-hapi\">#hapi</a> stream to get guidance on how to implement that.</p>",
        "id": 247455888,
        "sender_full_name": "Mirjam Baltus",
        "timestamp": 1627477737
    },
    {
        "content": "<p>partOf can't be empty</p>",
        "id": 247460172,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1627479715
    },
    {
        "content": "<p>It can be omitted entirely.  :missing will check that it's been omitted entirely.</p>",
        "id": 247460241,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1627479737
    },
    {
        "content": "<p>Sure, Thanks!</p>",
        "id": 247552757,
        "sender_full_name": "Reham Muzzamil",
        "timestamp": 1627544216
    }
]