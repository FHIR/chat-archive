[
    {
        "content": "<p>Hey everyone! Have a quick question regarding HealthcareService locations and coverageAreas in FHIR.</p>\n<p>HealthcareService.location.reference &gt; Location.position saves latitude, longitude, and altitude as decimal values.</p>\n<p>HealthcareService.coverageArea.reference &gt; Location.position only allows for one position to be stored; In a case where we are storing multiple positions (i.e Municipal boundaries) and have many positions needing to be stored in a specific order, what would be the proper way to store a coverage area in this case?</p>\n<p><span class=\"user-mention\" data-user-id=\"193959\">@Tim Berezny</span></p>",
        "id": 153980339,
        "sender_full_name": "Tristan Wilson",
        "timestamp": 1533143637
    },
    {
        "content": "<p>Is creating an extension the only way put in a service's coverage area as a shapefile (like, .kml, which is a series of points that make up a shape such as a municipal boundary?)</p>",
        "id": 153980351,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1533150730
    },
    {
        "content": "<p>At the moment, yes, however look at <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13391\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13391\">GF#13391</a>, and <a href=\"#narrow/stream/4-implementers/subject/Input.20on.20representing.20geoshape.20data.20in.20FHIR\" title=\"#narrow/stream/4-implementers/subject/Input.20on.20representing.20geoshape.20data.20in.20FHIR\">https://chat.fhir.org/#narrow/stream/4-implementers/subject/Input.20on.20representing.20geoshape.20data.20in.20FHIR</a>. Please provide feedback on GForge tracker item if you have an opinion.</p>",
        "id": 153980352,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1533151288
    },
    {
        "content": "<p>This is one that I'm hoping we get into R4 as a standard extension, so yes, please put your thoughts in that tracker! Time is getting short for our change.<br>\nThe format of the boundary definition is the only thing to be decided right now.</p>",
        "id": 153980543,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533161682
    },
    {
        "content": "<p>(and yes, some guidance notes in the Location resource highlighting the extension, and how it relates to the address/position properties)</p>",
        "id": 153980544,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533161726
    },
    {
        "content": "<p>The GeoJSON looks good to me. Would love to have this included in R4...</p>",
        "id": 153981024,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1533235746
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193959\">@Tim Berezny</span> If a resource is retrieved in XML, do you feel GeoJSON for the location is still appropriate?</p>",
        "id": 153981162,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1533240962
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span> Well that's an interesting conundrum... Is there such as a shapefile format that has a parallel in both XML and JSON?</p>\n<p>We have very advanced use of shapefiles as it relates to HealthcareServices. We only use JSON, so I don't have much insight into XML specifically. However, I can say that in the converse scenario if the format chosen was KML (which is XML) and that KML was returned in my JSON-oriented world, I would be fine with getting a KML file with no complaints. </p>\n<p>In other words ... yes.</p>",
        "id": 153982074,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1533387066
    },
    {
        "content": "<p>I think the point here is to leverage external and commonly used standards. If the Geo standards are focused on JSON, then yes it is appropriate that JSON alone is used even when moving it around XML FHIR... SImilar is done in the Signature datatype, as we are leveraging external signature standards for the signature evidence.  Note that the Signature datatype does expose in FHIR encoding some signature elements that are considered important to FHIR world. Note also that Signature datatype leverages mime-type to distance us from picking an external standard, and supports multiple... I am bias, as I own the Signature Datatype.</p>",
        "id": 153982089,
        "sender_full_name": "John Moehrke",
        "timestamp": 1533394517
    },
    {
        "content": "<p>The fun bit is whether it's sent as XML or JSON, it'll be base64 encoded in both transports.</p>",
        "id": 153982096,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1533395839
    },
    {
        "content": "<p>I think a main criteria would be that’s it’s easily renderable in web mapping programs like google maps without conversions. It looks like geoJSON meets this criteria. </p>\n<p>If it’s being sent as a base64 anyway, whether it’s JSON or XML becomes pretty much irrelevant. It’s the kind of data you’ll be running my through some kind of library anyway.</p>",
        "id": 153982104,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1533399910
    },
    {
        "content": "<p>It'll be string encoded json (or XML), not base64endocded..<br>\nI've had a wonder through a bit of info online, and most things support both these formats, and there are converters for both available to get into and out of each other, and other platforms.<br>\nSo all things being equal, I suggest we go with GeoJSON as noted in the tracker item.<br>\nLast chance before this is done for R4! (plan to include in last PA R4 block vote)</p>",
        "id": 153982968,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533612732
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193959\">@Tim Berezny</span> , <span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span> , <span class=\"user-mention\" data-user-id=\"191604\">@Carl Leitner</span> , <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>, <span class=\"user-mention\" data-user-id=\"196530\">@Tristan Wilson</span></p>",
        "id": 153982969,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533612889
    },
    {
        "content": "<p>Note that I've drafted the resolution into the tracker item, so you can see exactly what it is that we are proposing, so you can compare with any internal definitions you may have defined.<br>\n<span class=\"user-mention\" data-user-id=\"191678\">@Abigail Watson</span> , <span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span></p>",
        "id": 153982970,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533613185
    },
    {
        "content": "<p>What are “both these formats”? </p>\n<p>I think that for clarity, if we have an always JSON string, it should be base64 encoded (potentially as a full Attachment). Saying it is an always-JSON string in a regular  convertible resource is going to lead to errors. </p>\n<p>Hmmm, the Atrachment parallel brings up an interesting issue: how large will these strings be? Do we want the ability to reference an external GeoJSON string?</p>",
        "id": 153982971,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1533613355
    },
    {
        "content": "<p>Sorry, the 2 main formats under consideration/suggestion were KML (google/XML) and GeoJson</p>",
        "id": 153982973,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533613677
    },
    {
        "content": "<p>I'll encode up some boundaries and check the sizes (it also depends on the level of accuracy/detail that is included in the shape)</p>",
        "id": 153982974,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533613712
    },
    {
        "content": "<p><a href=\"https://data.boston.gov/dataset/city-council-districts\" target=\"_blank\" title=\"https://data.boston.gov/dataset/city-council-districts\">https://data.boston.gov/dataset/city-council-districts</a><br>\nThe total of boston's location data (not sure on its granularity)<br>\nKML(XML) 205KB<br>\nGeoJson   202KB<br>\nBase64 encoded GeoJson 1.1MB</p>",
        "id": 153982975,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533614402
    },
    {
        "content": "<p>This is the 9 districts of Boston, so maybe divide the size by that as you'd likely only have 1 district per FHIR location resource, but I guess this gives you some idea as to the size.<br>\nAnd also a feel as to the cost of the encoding</p>",
        "id": 153982976,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533614493
    },
    {
        "content": "<p>(and we'd need to chose which charset to encode/decode with UTF-8?</p>",
        "id": 153982977,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533614528
    },
    {
        "content": "<p>always UTF-8 unless there's a really coherent reason</p>",
        "id": 153982978,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533615978
    },
    {
        "content": "<p>+1 for GeoJson.  Clear favorite.</p>\n<p>Won't bash KML, since it's tried and true.  Just not supported in browsers.  Good option for XML based systems.</p>\n<p>Base64 approach is... misguided, in my opinion.  Would vote against.</p>\n<p>Happy to provide code samples, application samples, FHIR based geomapping examples, etc.</p>",
        "id": 153982979,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1533615983
    },
    {
        "content": "<p>To bring in GeoJson officially, we need to think about the supporting geospatial primatives.  Good news is they're already defined, similar to FHIR Datatypes.  But if we want FeatureCollection, we'll need Feature, which generally relies on MultiPolygon, Polygon, Line, and Point.</p>",
        "id": 153982982,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1533616688
    },
    {
        "content": "<p>Would definitely love to see those example resources <span class=\"user-mention\" data-user-id=\"191678\">@Abigail Watson</span> !<br>\nWith your permission would like to include one/some updated to the formal name etc.</p>",
        "id": 153982983,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533617718
    },
    {
        "content": "<p>If they aren't already publicly available, could you put them on one of the public servers, mine if you like</p>\n<div class=\"codehilite\"><pre><span></span>http://sqlonfhir-stu3.azurewebsites.net/fhir/Location\n</pre></div>",
        "id": 153982985,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533617776
    },
    {
        "content": "<p>Mmmm....  not sure it's quite possible to upload the geojson to a /fhir/Location path.  Here's a .geojson file of 2014 Health Service Areas for the U.S. </p>\n<p><a href=\"/user_uploads/10155/Ic-cJFFrGLJXKtoMqTY_SqEq/health_service_areas.geojson\" target=\"_blank\" title=\"health_service_areas.geojson\">health_service_areas.geojson</a> </p>\n<p>Be forewarned, it's 22MB... pretty typical for geojson maps, and certainly not the largest file we work with.   (The geomapping files are similar in size to DICOM images.)  </p>\n<p>You can load this file up into Google Maps.  One can extract FHIR Organizations from this file; or do vice-versa and write FHIR Organizations into the <code>properties</code> field and and FHIR Locations into the <code>geometry</code> field.</p>",
        "id": 153982988,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1533618578
    },
    {
        "content": "<p>I thought you already had some fhir location resources already up and going from your screenshots pasted into the tracker ;)</p>",
        "id": 153982990,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533618969
    },
    {
        "content": "<p>Oh, I have those too.</p>",
        "id": 153982991,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1533618990
    },
    {
        "content": "<p>Um, are Chicago area hospitals okay?  That's the dataset we usually use.</p>",
        "id": 153982992,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1533619063
    },
    {
        "content": "<p>Yup, as long as we aren't violating any copyright issues.</p>",
        "id": 153982993,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533619112
    },
    {
        "content": "<p>Or privacy issues :P</p>",
        "id": 153982994,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533619126
    },
    {
        "content": "<p>Locations of hospitals are usually in the public domain, so we'll probably be okay.</p>",
        "id": 153982996,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1533619158
    },
    {
        "content": "<p>Ok, send the links on through and I'll check em over.</p>",
        "id": 153982997,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533619208
    },
    {
        "content": "<p>Just put it on tomorrow's inbox.  Let's check in tomorrow afternoon.</p>",
        "id": 153982998,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1533619330
    },
    {
        "content": "<p>Changes to the spec are getting closing soon, and we need to land this for voting before it can go into R4 which is closing soonish, would prefer not to miss the boat on this one if we can.<br>\nBut thanks so much for your contributions here!</p>",
        "id": 153983000,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533619460
    },
    {
        "content": "<p>I've pre-applied a version of the standard extension that we're discussing on the call today at 3pm eastern<br>\n<a href=\"http://build.fhir.org/extension-location-boundary-geojson.html\" target=\"_blank\" title=\"http://build.fhir.org/extension-location-boundary-geojson.html\">http://build.fhir.org/extension-location-boundary-geojson.html</a></p>",
        "id": 153983122,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533650731
    },
    {
        "content": "<p>GeoJSON vs. KML, i'll go with the flow. </p>\n<p>The question by <span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span>  is worth poking at a bit: \"Hmmm, the Atrachment parallel brings up an interesting issue: how large will these strings be? Do we want the ability to reference an external GeoJSON string\". </p>\n<p>In particular... being able to EXTERNALLY reference a GeoJSON string could be very quite helpful. So long as that's possible, the various sizes of potential GeoJSON strings becomes much less constraining.</p>\n<p>Definitely don't want to \"miss the boat\" as <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> says on this one.</p>",
        "id": 153983143,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1533652488
    },
    {
        "content": "<p>I don't know what resource type the external definition is.<br>\nInterested to get some real examples of the GeoJSON to check the sizing.<br>\nAn area of boston as defined above looks like it was around 20kb. Remember that this is the boundary of the specific resource, not of a group of areas.</p>",
        "id": 153983145,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533652663
    },
    {
        "content": "<p>I think what i mean is, you could allow the GeoJSON to be inline in the resource, and also allow it to be listed as a URL to go grab it anywhere on the internet.  (similar to how we have \"data\" and \"url\" in the attachment datatype). </p>\n<p>The size of shapefiles can vary wildly, especially when there are tight contours to shorelines. Our largest in 30k vertices. It's in PostGIS so the size won't be exactly the same but the structure is not too different from GeoJSON, and it clocks in at 2.5MB. That's the extreme end of the spectrum probably.</p>",
        "id": 153983152,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1533653877
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193959\">@Tim Berezny</span> , <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> , yes, the data/url capability was what I was referring to. At 20K, I'd say that's about where it makes sense to have references to the data rather than inline it. We don't want to have every reader of the location resource have to read/skip that content regardless of whether they are interested in the mapping info or not.</p>",
        "id": 153983223,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1533659461
    },
    {
        "content": "<blockquote>\n<p>In particular... being able to EXTERNALLY reference a GeoJSON string could be very quite helpful. So long as that's possible, the various sizes of potential GeoJSON strings becomes much less constraining.</p>\n</blockquote>\n<p>Yes, this is how GeoJSON is designed to be used.  No need for a Base64 encoded attachment.  We use it with great success.  Can sometimes be a bit slow to load; but it's been very reliable.</p>",
        "id": 153983266,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1533665720
    },
    {
        "content": "<blockquote>\n<p>The size of shapefiles can vary wildly, especially when there are tight contours to shorelines. Our largest in 30k vertices. It's in PostGIS so the size won't be exactly the same but the structure is not too different from GeoJSON, and it clocks in at 2.5MB. That's the extreme end of the spectrum probably.</p>\n</blockquote>\n<p>Haven't gotten around to drawing nation wide maps yet, eh?  :)   We have lots of 20MB+ files; and some of them get up to be 100MB files.  Same general size as DICOM, roughly speaking.  But no problems as long as the internet connection is reasonably fast.  My $0.02 is this is very dependent upon one's development environment... monitors, available RAM, and network speed.  The more screen real-estate and RAM you have, the more comfort you'll be pushing around large geodata files.</p>",
        "id": 153983268,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1533665860
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span>  Some Chicago Area Hospitals coded up as Locations.  Pretty typical.  We use these with pathfinding and paratransit ambulance routing applications.  We haven't been using the PUT functionality all that much, so currently working on that functionality.  In the meantime, here's a (virtual) hand delivered Bundle.  </p>\n<p><a href=\"/user_uploads/10155/WMq9cMn8GYmRT43YbHouuWiC/ChicagoAreaHospitals.Locations.fhir\" target=\"_blank\" title=\"ChicagoAreaHospitals.Locations.fhir\">ChicagoAreaHospitals.Locations.fhir</a></p>",
        "id": 153983270,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1533665982
    },
    {
        "content": "<p>That's our internal representation.  We extend the resources by adding a <code>location</code> field for a GeoJSON Point primitive, so we can use Mongo's 2-sphere geospatial index.  It duplicates the lat/lng data, which would be nice to have resolved.  But that would involve harmonizing the FHIR and GeoJSON specifications on the Point data primitive.</p>",
        "id": 153983271,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1533666167
    },
    {
        "content": "<p>Heh.  Tried to send over the Bundle via Postman, and your server really didn't like it.  Unknown Bundle, missing Narrative.div, unknown Location.location field, empty Location.address[0], and System.Xml.XmlTextReaderImpl errors.  Mostly all to be expected.</p>",
        "id": 153983286,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1533667640
    },
    {
        "content": "<p>Did you want to join the call which is just starting now to discuss?</p>",
        "id": 153983304,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533668623
    },
    {
        "content": "<p>A PA call?</p>",
        "id": 153983306,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1533668673
    },
    {
        "content": "<p>yes<br>\n<a href=\"https://global.gotomeeting.com/join/311685429\" target=\"_blank\" title=\"https://global.gotomeeting.com/join/311685429\">https://global.gotomeeting.com/join/311685429</a></p>\n<p>1-770-657-9270 Participant Code: 986210<br>\nfor non-US participants: <a href=\"https://www.intercallonline.com/listNumbersByCode.action?confCode=4603612751\" target=\"_blank\" title=\"https://www.intercallonline.com/listNumbersByCode.action?confCode=4603612751\">https://www.intercallonline.com/listNumbersByCode.action?confCode=4603612751</a></p>",
        "id": 153983307,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533668703
    },
    {
        "content": "<p>So change my extension to be extension.valueAttachment with the same thing?</p>",
        "id": 153983316,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533669414
    },
    {
        "content": "<p>I think that would be simplest.</p>",
        "id": 153983317,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1533669434
    },
    {
        "content": "<p>FYI:  application/vnd.geo+json is registered.</p>\n<p>Correction -- looks like they've upgraded: application/geo+json</p>",
        "id": 153983318,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1533669522
    },
    {
        "content": "<p>Joined on call.</p>",
        "id": 153983327,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1533670383
    },
    {
        "content": "<p>Thanks all for your contributions on this one, the committee has approved the standard extension (attachment) for this functionality.<br>\nThis results in it being contained (base64 encoded in the data) or external (through the URL property)</p>",
        "id": 153983329,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533672336
    },
    {
        "content": "<p>Was that a balloting call?  PA?  What does PA stand for again?  I feel like I just participated in something official, and I don't know what!  :D</p>",
        "id": 153983330,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1533672433
    },
    {
        "content": "<p>Yup, Patient Admin.</p>",
        "id": 153983331,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1533672497
    },
    {
        "content": "<p>HL7 is highly addicted to acronyms (starting with our own name :&gt;)  A cheat-sheet to the work group abbreviations can be found at the bottom of the FHIR WGM agendas (e.g <a href=\"http://wiki.hl7.org/index.php?title=FHIR_Agenda_201805_WGM\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=FHIR_Agenda_201805_WGM\">http://wiki.hl7.org/index.php?title=FHIR_Agenda_201805_WGM</a>).  Much of the reconciliation of tracker items is handled on conference calls like that one.  Far more gets handled at conference calls than face-to-face at WGMs (though we typically have fewer people on calls than at face-to-face sessions)</p>",
        "id": 153983371,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1533674984
    },
    {
        "content": "<p>For your viewing pleasure, the new standard extension (only took how long for us to get there?)<br>\n<a href=\"http://build.fhir.org/extension-location-boundary-geojson.html\" target=\"_blank\" title=\"http://build.fhir.org/extension-location-boundary-geojson.html\">http://build.fhir.org/extension-location-boundary-geojson.html</a></p>",
        "id": 153983378,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533675677
    },
    {
        "content": "<p>On a related note, I'm updating the definition of the Location near search parameter (<a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=14216\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=14216\">GF#14216</a>) and wanted to give a preview of the new format for comment. (this is a \"special\" type search parameter and isn't able to use generic search processing logic)</p>\n<div class=\"codehilite\"><pre><span></span>GET [base]/Location?near=-83.694810|42.256500|11.20|km,active=true\n</pre></div>\n\n\n<p>near = {latitude}|{longitude}|{distance}[|{unit}) If distance is missing, then default is kms.<br>\nThe new format is done as a single parameter, and therefore can work with multiples, and also through chaining.<br>\n<em>This also got me thinking about our new standard extension, should we also have a new search parameter for that to cover the point in area space - tracker and thoughts for the future on this one</em></p>",
        "id": 153983468,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533693765
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span> , <span class=\"user-mention\" data-user-id=\"191678\">@Abigail Watson</span> , <span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span> , <span class=\"user-mention\" data-user-id=\"191604\">@Carl Leitner</span>  Thoughts on this?</p>",
        "id": 153983469,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533693872
    },
    {
        "content": "<p>p.s. the near-distance search parameter will also dissappear as is no longer required, its merged into this single parameter</p>",
        "id": 153983470,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533693921
    },
    {
        "content": "<p>If units is missing, then it defaults to km?</p>",
        "id": 153983471,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1533694129
    },
    {
        "content": "<p>Distance is max distance from point?</p>",
        "id": 153983472,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1533694173
    },
    {
        "content": "<p>Hmm, so we now have two definitions of the place of something - the lat/long, and the boundary. What does it mean when both are populated? Is one the front door, and the other the area it is responsible for?</p>\n<p>When you search, are you looking for the nearest front door, or who is responsible for a particular place? You may be dealing with the case where the neighbouring jurisdiction office is closer than your jurisdiction’s office. </p>\n<p>There may be multiple locations that all cover the same point. What does that mean for nearest?</p>\n<p>(Aside - is “nearest” expected to be straight-line, travel distance, travel time, ...?)</p>",
        "id": 153983474,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1533695395
    },
    {
        "content": "<p>y (within distance) - server could have its own decision as what nearest means</p>",
        "id": 153983475,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533695414
    },
    {
        "content": "<p>Multiple locations at same point, then they'll get returned in the search results. As you'd expect.</p>",
        "id": 153983476,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533695511
    },
    {
        "content": "<p>There is no expectation that the near relates to the boundary, I expect people will use near to locate a place, where they will use the boundary to perform a different search on that extension, maybe:</p>\n<div class=\"codehilite\"><pre><span></span>GET [base]/HealthcareService?coverageArea.contains=-83.694810|42.256500\n</pre></div>\n\n\n<p>This would check that the provided point is in the coverage area of the Healthcare Service</p>",
        "id": 153983477,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533695828
    },
    {
        "content": "<p>In the search results you may get a distance from the location to the point you specified, which would help you locate the appropriate location</p>",
        "id": 153983479,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533695898
    },
    {
        "content": "<p>Ok, so you are asking if we need a search specifically on the new extension? nearestBoundary (or insideBoundry) search?</p>\n<p>I’m mixed on that. On the face of it, it might be useful, but it also seems like a smart server could use it in calculating the response to near. </p>\n<p>What does strike me as useful, is the ability to specify modes or hints in the near search: straight-line, driving distance, walking time, jurisdiction not point,...</p>\n<p>Do we need to be able to search against another boundary or just a point? Another boundary opens up several cans of worms. </p>\n<p>I filed the original issue on behalf of IHE and <span class=\"user-mention\" data-user-id=\"193299\">@Luke Duncan</span>, and don’t deal with GIS issues myself. Although I find the topic interesting, I’ll step back and let other with experience answer further.</p>",
        "id": 153983490,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1533698157
    },
    {
        "content": "<p><code>near</code> and <code>contain</code> roughly map onto the geospatial database operators, and are pretty good parameters to support, in the same way that GET/PUT/POST/DELETE roughly map onto CRUD.   They're a pragmatic choice.</p>\n<p>The issue of 'near' in terms of travel time, distance, gas mileage costs, or other metrics are compound functions built on top of those geospatial primitives.  Scalars vs vectors.  So, if we have <code>near</code> and <code>contain</code>, we have the necessary information to do the geometry, and can build up most of the other details from them.  </p>\n<p>All things considered, we get a lot of mileage from them, it's a bit more than I expected to see in the API, and they provide enough functionality to keep a lot of people busy for awhile.</p>\n<p>I keep stressing the following point, and need to reiterate it again:  Before building out more search parameters, I think FHIR needs to have official support for geospatial primitives (Point, Line, Polygon, MultiPolygon).     <code>near</code> and <code>contain</code> are freebies that geospatial databases often optimize for and expose as special operators because they're so commonly used.  But more advanced functionality like paths, pathfinding, region intersections, etc need those primitives.</p>",
        "id": 153983493,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1533699039
    },
    {
        "content": "<p>And I think those really should stay outside of the FHIR space and let the geospatial things do their bit.<br>\n(I think that is agreeing with you Abigail?)</p>",
        "id": 153983494,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533699218
    },
    {
        "content": "<p>I think contains and near are actually quite different things.<br>\nIn some contexts the contains is the eligibility, if you're over the street, you don't get service.</p>",
        "id": 153983495,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533699264
    },
    {
        "content": "<p>Well, we can let the geospatial folks define and manage the geospatial primitives.  We can also forklift/piggyback on their work, and simply say that any GeoJSON primitive is also a FHIR datatype.  But that probably needs to be explicit.</p>",
        "id": 153983496,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1533699310
    },
    {
        "content": "<p>Except that then doesn't help with the XML world. And extensions wouldn't apply to it.</p>",
        "id": 153983497,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533699389
    },
    {
        "content": "<p>So not feeling very fhir-y</p>",
        "id": 153983498,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533699401
    },
    {
        "content": "<p>And therein is the rub.</p>",
        "id": 153983499,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1533699405
    },
    {
        "content": "<p>I kinda like where we got things to, enough to permit the overlap to occur, now we just need to see how we can make them work together before we get too excited <span class=\"emoji emoji-1f600\" title=\"grinning\">:grinning:</span></p>",
        "id": 153983501,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533699457
    },
    {
        "content": "<p>(Not proposing we put the contains operation in R4, but maybe consider at connectathons if people are keen enough)</p>",
        "id": 153983502,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533699495
    },
    {
        "content": "<p>I 1000% support a contains search parameter (searching for an address within a coverage area). In our application we focus on home and commuity care services, and contains is acutely relevant for finding homecare services. i.e., for home care services, it's irrelevant what a HealthcareService's office address distance from home is (near function), need to know where it deliver's home care to (contains function). </p>\n<p>contains search is to coverageArea as near search is to point</p>",
        "id": 153983632,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1533734251
    },
    {
        "content": "<p>In other words, it's GREAT that there is now a (proposed) method for storing shapefiles, but that really is only half of the equation. Most of the benefit from having a shape comes from being able to do a search (contains) within that shape.</p>",
        "id": 153983633,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1533734388
    },
    {
        "content": "<p>I haven't done any work with extensions yet ... so this is probably my extension newbiness speaking, but should i expect to see something at the link referenced in the extension (which is blank now)? <a href=\"http://hl7.org/fhir/StructureDefinition/location-boundary-geojson\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/location-boundary-geojson\">http://hl7.org/fhir/StructureDefinition/location-boundary-geojson</a></p>",
        "id": 153983635,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1533734526
    },
    {
        "content": "<p>Once the R4 is officially published that URL should resolve, however the details of the extension are here<br>\n<a href=\"http://build.fhir.org/extension-location-boundary-geojson.html\" target=\"_blank\" title=\"http://build.fhir.org/extension-location-boundary-geojson.html\">http://build.fhir.org/extension-location-boundary-geojson.html</a></p>",
        "id": 153983816,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533761707
    },
    {
        "content": "<p>And yes, we can probably talk about the search operation at the connectathon, and get some agreement on that, and try it out</p>",
        "id": 153983826,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533762259
    },
    {
        "content": "<p>Sequoia (CareQuality and eHEX) have a Provider Directory with geolocation information in it. <span class=\"user-mention\" data-user-id=\"191646\">@Eric Heflin</span>    see this javascript page driven off of their FHIR API <a href=\"https://sequoiaproject.org/carequality/active-sites-search/\" target=\"_blank\" title=\"https://sequoiaproject.org/carequality/active-sites-search/\">https://sequoiaproject.org/carequality/active-sites-search/</a></p>",
        "id": 153983886,
        "sender_full_name": "John Moehrke",
        "timestamp": 1533764544
    },
    {
        "content": "<p>I suspect that one is just using the positions, rather than boundaries (which is the new part)<br>\nBut thanks for the link too!</p>",
        "id": 153983895,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533764826
    },
    {
        "content": "<p>I also assume that in that implementation the distance is in miles?</p>",
        "id": 153983902,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533765089
    },
    {
        "content": "<p>(Must test that my server handles the Mi/Km conversion correctly, have tested Km/m but not the other)</p>",
        "id": 153983903,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533765128
    },
    {
        "content": "<p>And those looking for an example of the new format!<br>\n<a href=\"http://build.fhir.org/ig/HL7/VhDir/Location-wash-dc-metro.xml.html\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/VhDir/Location-wash-dc-metro.xml.html\">http://build.fhir.org/ig/HL7/VhDir/Location-wash-dc-metro.xml.html</a></p>",
        "id": 153989058,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1534649200
    }
]