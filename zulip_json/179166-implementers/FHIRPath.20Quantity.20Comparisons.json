[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> I thought that we set up quanity for comparisons - and I did comparisons in my code...?</p>",
        "id": 153923048,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1512509461
    },
    {
        "content": "<p>see <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=14194\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=14194\">GF#14194</a></p>",
        "id": 153923049,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1512509476
    },
    {
        "content": "<p>Yeah, I thought we did as well, and we even have examples in the spec that use quantity comparisons. But after looking for it, the submitter is right, we don't explicitly define the semantics for quantity arithmetic, except for date/time values.</p>",
        "id": 153923061,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1512510298
    },
    {
        "content": "<p>Here's what we say about it in general in CQL:</p>",
        "id": 153923062,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1512510556
    },
    {
        "content": "<p>Note that complete support for unit conversion for all valid UCUM units would be ideal, but practical CQL implementations will likely provide support for a subset of units for commonly used clinical dimensions. At a minimum, however, a CQL implementation must respect units and throw an error if it is not capable of normalizing the quantities involved in a given expression to a common unit.</p>",
        "id": 153923064,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1512510563
    },
    {
        "content": "<p>And then we have specific wording for each operator family, for instance, comparisons:</p>",
        "id": 153923065,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1512510591
    },
    {
        "content": "<p>For comparisons involving quantities, the dimensions of each quantity must be the same, but not necessarily the unit. For example, units of 'cm' and 'm' are comparable, but units of 'cm2' and  'cm' are not. Attempting to operate on quantities with invalid units will result in a run-time error.</p>",
        "id": 153923066,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1512510597
    },
    {
        "content": "<p>I can certainly see the value of adding it - how else to create meaningful constraints on quantity or use FhirPath expressions in CQL?  The only counter argument may be that implementing quantity comparisons is not easy, so it sets a higher bar for implementers of an evaluation engine if we add it.</p>",
        "id": 153923105,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1512549870
    },
    {
        "content": "<p>True about the bar for implementation, but the language we have in CQL only requires that implementations respect units, not that necessarily implement full support. In addition, we have Java, .NET, and I believe JS implementations of the UCUM library, so integrating the support should be straightforward.</p>",
        "id": 153923193,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1512573944
    }
]