[
    {
        "content": "<p>Hi guys,<br>\ni am just reading through the document bundle specifications.<br>\n\"Once assembled into a bundle, the document is immutable - its content can never be changed, and the document id can never be reused.\" <br>\nDoes that mean, on a document bundle query I am not even allowed to reconcile patient information referenced in the bundle?<br>\nOr is that just related to a signed document bundle?</p>",
        "id": 276454121,
        "sender_full_name": "Florian Wolf",
        "timestamp": 1648116740
    },
    {
        "content": "<p>if you reconcile the data, you will be creating a new document, thus a new Bundle, thus a new id.</p>",
        "id": 276471138,
        "sender_full_name": "John Moehrke",
        "timestamp": 1648126636
    },
    {
        "content": "<p>thanks for the answer... so that means a document bundle is always a kind of snapshot.? even if the document is in status preliminary or something like this?</p>",
        "id": 276485653,
        "sender_full_name": "Florian Wolf",
        "timestamp": 1648133078
    },
    {
        "content": "<p>correct. specifically a document Bundle is 'the' instantiation of a snapshot. the original content can be made into many instances. We just call each a unique instance. There is relationships, so the lifecycle of replacement etc is visible. But each document Bundle is a snapshot, and thus given a unique id.</p>",
        "id": 276499799,
        "sender_full_name": "John Moehrke",
        "timestamp": 1648138517
    },
    {
        "content": "<p>I don't think it's absolutely black and white. The language you quote is not normative; there are no \"shalls\" in it that require a certain behaviour or you're not FHIR-compliant. It describes expectations. I can imagine, in some use cases, something like changing the status could be an update, while in others that might be prohibited. My reading of the intent though, is that the content is not expected to be maintained over time--you wouldn't have a \"current medications\" document.</p>",
        "id": 276500279,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1648138683
    },
    {
        "content": "<p>I hope that is not true. -- I created <a href=\"http://jira.hl7.org/browse/FHIR-36636\">FHIR-36636</a></p>",
        "id": 276501272,
        "sender_full_name": "John Moehrke",
        "timestamp": 1648139071
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> , in your POV, can a server process the document on receipt, perhaps replacing the included patient with a patient resource on the local server? What about stripping unknown extensions from the content?</p>",
        "id": 276502258,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1648139473
    },
    {
        "content": "<p>A server can 'process' the document however it likes - but if it stores something other than the original document as a Binary blob, then if it spits it out again, it's a different document.</p>",
        "id": 276502572,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1648139578
    },
    {
        "content": "<p>that would seem to me to be a new document, with a relationship to the old, and provenance as to why the data was changed.</p>",
        "id": 276502613,
        "sender_full_name": "John Moehrke",
        "timestamp": 1648139600
    },
    {
        "content": "<p>document lifecycle is fully defined and supportable.</p>",
        "id": 276502910,
        "sender_full_name": "John Moehrke",
        "timestamp": 1648139698
    },
    {
        "content": "<p>IMHO, Document lifecycle is poorly defined in Bundle.</p>",
        "id": 276503010,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1648139732
    },
    {
        "content": "<p>that is what DocumentReference is about</p>",
        "id": 276503130,
        "sender_full_name": "John Moehrke",
        "timestamp": 1648139765
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> <a href=\"#narrow/stream/179166-implementers/topic/immutable.20document.20bundle/near/276503130\">said</a>:</p>\n<blockquote>\n<p>that is what DocumentReference is about</p>\n</blockquote>\n<p>...if you're using DocRef in conjunction with Documents. But if you're not, lifecycle becomes much more difficult.</p>",
        "id": 276504174,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1648140124
    },
    {
        "content": "<p>well, no problem in my view.. DocumentReference does have a defined scope and purpose.</p>",
        "id": 276505226,
        "sender_full_name": "John Moehrke",
        "timestamp": 1648140518
    },
    {
        "content": "<p>but a document Bundle also has the Composition within, and thus each instance of a document Bundle can be known the relationship to that Composition, and the lifecycle management that Compostion supports</p>",
        "id": 276505389,
        "sender_full_name": "John Moehrke",
        "timestamp": 1648140581
    }
]