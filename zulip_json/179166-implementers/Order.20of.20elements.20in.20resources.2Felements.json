[
    {
        "content": "<p>I have never been able to get a solid answer on this:  There is this statement in the spec<br>\nElements must be in the same order as the baseDefinition, and child elements appear in depth-first order.<br>\nWhat I don't know is if this applies only to the structure definition or does it apply to the resources build on that structure definition?</p>\n<p>If the structure definition has </p>\n<p>\"subject\" : { Reference(Any) }, // The subject of the questions<br>\n  \"encounter\" : { Reference(Encounter) }, // Encounter created as part of</p>\n<p>is it an error if in the JSON representation the 'encounter' element precedes the subject as in<br>\n\"encounter\":\"....,<br>\n\"subject\":\"....</p>\n<p>thanks!</p>",
        "id": 254107620,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1632167531
    },
    {
        "content": "<p>Yes</p>",
        "id": 254107920,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1632167670
    },
    {
        "content": "<p>The fhir validator reports on these issues. Even in the StructureDefinition.</p>",
        "id": 254107998,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1632167716
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191421\">Michael van der Zel</span> So if the 'encounter' element is before the 'subject' element in the JSON representation of the resource, this is an ERROR.<br>\nSo while this is good</p>\n<div class=\"codehilite\"><pre><span></span><code>        &quot;item&quot;: [\n        {\n          &quot;linkId&quot;: &quot;/matrix/69671-6&quot;,\n          &quot;text&quot;: &quot;Stomach pain&quot;,\n          &quot;answer&quot;: [\n            {\n              &quot;valueCoding&quot;: {\n                &quot;code&quot;: &quot;LA18334-5&quot;,\n                &quot;display&quot;: &quot;Not bothered&quot;\n              }\n            }\n          ]\n        },\n</code></pre></div>\n<p>This is bad</p>\n<div class=\"codehilite\"><pre><span></span><code>      &quot;item&quot;: [\n        {\n          &quot;answer&quot;: [\n            {\n              &quot;valueCoding&quot;: {\n                &quot;code&quot;: &quot;LA18334-5&quot;,\n                &quot;display&quot;: &quot;Not bothered&quot;\n              }\n            }\n          ],\n          &quot;linkId&quot;: &quot;/matrix/69671-6&quot;,\n          &quot;text&quot;: &quot;Stomach pain&quot;\n        },\n</code></pre></div>\n<p>Note that the structure definition has the 'linkId' and the 'text' elements before the 'answer'.</p>",
        "id": 254113077,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1632169812
    },
    {
        "content": "<p>We don't yell about order in JSON because many JSON serializers don't allow control over order.  However, in XML order absolutely must be correct.</p>",
        "id": 254122375,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1632173805
    },
    {
        "content": "<p>this is a confusing question - what order are we talking about?</p>",
        "id": 254122435,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1632173837
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179166-implementers/topic/Order.20of.20elements.20in.20resources.2Felements/near/254122375\">said</a>:</p>\n<blockquote>\n<p>We don't yell about order in JSON because many JSON serializers don't allow control over order.  However, in XML order absolutely must be correct.</p>\n</blockquote>\n<p>Thanks. THat clarifies it!</p>",
        "id": 254124040,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1632174621
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span><br>\nThe order here is referring to the order of the elements in a resource instance in xml/json and whether it must follow that of the structure definition.</p>",
        "id": 254134156,
        "sender_full_name": "Brian Reinhold",
        "timestamp": 1632180423
    },
    {
        "content": "<p>xml yes, json no</p>",
        "id": 254144251,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1632188811
    },
    {
        "content": "<p>RDF also no, I believe (if anyone cares :&gt;)</p>",
        "id": 254144338,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1632188888
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179166-implementers/topic/Order.20of.20elements.20in.20resources.2Felements/near/254144251\">said</a>:</p>\n<blockquote>\n<p>xml yes, json no</p>\n</blockquote>\n<p>Really? The validator gives a lot of errors when the elements are out of order.</p>",
        "id": 254167573,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1632210099
    },
    {
        "content": "<p>Ah. I found it. The order in the elements of a StructureDefinition give the errors.</p>",
        "id": 254168025,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1632210429
    },
    {
        "content": "<p>yes that's why I asked which order were we asking about</p>",
        "id": 254207707,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1632231394
    }
]