[
    {
        "content": "<p>This may have been answered, as it seems basic.  We have FHIR Groups that have hundreds of thousands of members.  When we read the resource, we crash the java heap if many users are pulling it.  Is there a cursor or iterator that can be used to traverse the array of members in the Group?</p>",
        "id": 153927789,
        "sender_full_name": "Radu Craioveanu",
        "timestamp": 1515176415
    },
    {
        "content": "<p>No.  Resources cannot be retrieved in chunks.  It's possible to update them in chunks using PATCH, but we haven't defined a way to retrieve them that way.  Feel free to submit a change request and we can think about it.  I can see the possibility of this being an issue for List occasionally too.</p>",
        "id": 153927798,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1515185475
    },
    {
        "content": "<p>(Groups with hundreds of thousands of members is not something anyone else has hit yet - what are the groups for?)</p>",
        "id": 153927799,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1515185511
    },
    {
        "content": "<p>The Groups are for tracking Patient eligible for various programs, such as HepC vaccination, or some Pilot treatments... Basically there is some enrollment criteria (based on clinical, financial or otherwise) which Adds a member onto a Group.  The member may  become ineligible and then eligible again, so he may appear multiple times in the Group.  We need that for tracking history also.<br>\nI thought Groups were meant for doing Population level tracking based on criteria.  We have a very large patient population.  Are we not using the right resource?</p>",
        "id": 153927808,
        "sender_full_name": "Radu Craioveanu",
        "timestamp": 1515186619
    },
    {
        "content": "<p>Does the List behave the same way?  One cannot paginate through it, or pull only a limited number of items?</p>",
        "id": 153927809,
        "sender_full_name": "Radu Craioveanu",
        "timestamp": 1515186739
    },
    {
        "content": "<p>Groups aren't intended to represent history - they represent current membership.  To see history, you'd need to look at older versions of the resource.  Are you using a modifier extension to indicate members that aren't actually current members?</p>",
        "id": 153927813,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1515188464
    },
    {
        "content": "<p>It's not so much that this use is \"wrong\", but it's certainly not anticipated.  I would probably have used the group to define the criteria, but I'd have created individual Eligibility instances for each period of time over which a given patient was deemed eligible.  That gives you your history and also makes it much easier to filter when retrieving information.  You can also capture any patient-specific constraints on eligibility, information about when elegibility was determined (which might be distinct from when the eligibility became effective), etc.</p>",
        "id": 153927814,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1515188588
    },
    {
        "content": "<p>Lloyd,  I don't follow the model you are suggesting.  In my scenario I wanted to capture the following, see below.  Please check it out and let me know:</p>\n<p>Say I have 10 patients that have been enrolled in SpecialProgram  based on their BP &gt; 150 (making stuff up here). One can look at the Group and see all 10 patients be Active, with an enrollment date (Period Start = 1/1/2018).  Patient_1 gets better, his BP is now less than 150, so the Group.member is updated an Inactive status, and the Period End  = 1/5/2018.  Two days later,  Patient_1 gets high BP again, so he gets put back in the group, new entry in the Member array, status is set to Active, Period Start is 1/7/2018. </p>\n<p>Application_Y wants to know if Patient_1 is part of the SpecialProgram, so it queries teh SpecialProgram Group for that Patient identifier<br>\nApplication_Z wants to view all Patients that have been in the Special Program during the month of January, so it queries SpecialProgram for all Members who have a Period Start before January and Period End during or after January.  Accounts for no Period End.</p>",
        "id": 153927824,
        "sender_full_name": "Radu Craioveanu",
        "timestamp": 1515190062
    },
    {
        "content": "<p>there is graphQL. That's the only tool we offer to grapple with very large resources like this</p>",
        "id": 153927839,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515201596
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192495\">@Radu Craioveanu</span> Apparently I haven't looked at Group in a long time.  I didn't realize that period or \"active\" had been added to it.  I'm rather nervous about \"active\" as that's essentially a status - and resources are only supposed to have one state.  If we're trying to manage something more sophisticated than \"these are the 20 rats in the cage\" or \"these are the 50 people who were exposed to agent X\", then that's going a bit beyond the realm of the originally intended use of the resource.  <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span>, has PA thought about what the boundaries should be between using Group and capturing membership as enrollments?</p>",
        "id": 153927848,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1515211360
    },
    {
        "content": "<p>What did you mean by enrolments here in terms of fhir?</p>",
        "id": 153927850,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1515218874
    },
    {
        "content": "<p>I was thinking of EnrollmentRequest/EnrollmentResponse (though EnrollmentResponse needs to evolve a bit more - the ability to say \"no\" should be handled by Task and saying \"yes\" should be an Enrollment \"event\" resource if we want to be consistent with workflow everywhere else.</p>",
        "id": 153927869,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1515293943
    }
]