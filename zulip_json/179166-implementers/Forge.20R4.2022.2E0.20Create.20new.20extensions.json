[
    {
        "content": "<p>When using FORGE R4 to define data type of new extension, the value stays at value[x] instead of the actual data type being selected; it used to work properly with FORGE STU3.  <br>\nWhen loaded to <a href=\"http://simplifier.net\" target=\"_blank\" title=\"http://simplifier.net\">simplifier.net</a> site, the extension failed to render due to 'Invalid resource format: Type checking the data: Encountered unknown element 'type' at location 'StructureDefinition.context[0].type[0] while parsing.<br>\nEmailed Firely Support Team, was told it's likely a bug but it's summer holidays, will have to take couple of weeks for the fix.</p>\n<p>Does anyone has a workaround meanwhile to get the extension created properly?  Please advise, thanks.</p>",
        "id": 170583373,
        "sender_full_name": "Maria Hu",
        "timestamp": 1562796269
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"196916\">@Maria Hu</span>, this is due to a change in FHIR R4 about the interpretation of type slices (i.e. type constraints on a polymorphic element whose name ends with <code>[x]</code>): <a href=\"http://build.fhir.org/elementdefinition.html#typesx\" target=\"_blank\" title=\"http://build.fhir.org/elementdefinition.html#typesx\">http://build.fhir.org/elementdefinition.html#typesx</a></p>\n<p>In R4, constraints on the original <code>[x]</code> element (without a slice name) apply to all element values that may occur in an actual instance, regardless of the datatype. You can further constrain the list of datatypes of the original <code>[x]</code> element in order to disallow certain datatypes (allowed by the base profile). You can also specify type-specific constraints by adding a named type slice for a specific datatype.<br>\nIn comparison, STU3 allows you to constrain the original <code>[x]</code> element itself to a single datatype, optionally including other element constraints associated with that type, by means of a short-hand notation (without using slicing).<br>\nThe new FHIR R4 syntax is more verbose, but also more powerful and flexible. However as a result, this also complicates the relevant UI/UX in Forge R4. The current implementation is somewhat crude and we're looking into ways to improve the user experience.</p>",
        "id": 170980158,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1563279771
    }
]