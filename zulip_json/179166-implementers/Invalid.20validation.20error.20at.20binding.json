[
    {
        "content": "<p>Hey,</p>\n<p>i got a validation error while validating this resoure: <a href=\"/user_uploads/10155/yqjeLhOoFGKwc1H_M60Oby4m/Practioner.xml\" target=\"_blank\" title=\"Practioner.xml\">Practioner.xml</a> </p>\n<p>&lt;issue&gt;<br>\n      &lt;severity value=\"error\"/&gt;<br>\n      &lt;code value=\"processing\"/&gt;<br>\n      &lt;diagnostics value=\"provide either a reference or a description (or both) [valueSet.exists() or description.exists()]\"/&gt;<br>\n      &lt;location value=\"StructureDefinition.differential.element[28].binding\"/&gt;<br>\n   &lt;/issue&gt;</p>\n<p>element[28]:</p>\n<div class=\"codehilite\"><pre><span></span>&lt;element id=&quot;Practitioner.qualification.code&quot;&gt;\n  &lt;path value=&quot;Practitioner.qualification.code&quot; /&gt;\n  &lt;binding&gt;\n    &lt;strength value=&quot;required&quot; /&gt;\n  &lt;/binding&gt;\n&lt;/element&gt;\n&lt;element id=&quot;Practitioner.qualification.code.coding&quot;&gt;\n  &lt;path value=&quot;Practitioner.qualification.code.coding&quot; /&gt;\n  &lt;min value=&quot;1&quot; /&gt;\n  &lt;max value=&quot;1&quot; /&gt;\n&lt;/element&gt;\n</pre></div>\n\n\n<p>I think this error is <strong>invalid</strong>, since the required valueset is defined in the snapshot:</p>\n<div class=\"codehilite\"><pre><span></span>  &lt;binding&gt;\n    &lt;strength value=&quot;required&quot; /&gt;\n    &lt;description value=&quot;Specific qualification the practitioner has to provide a service&quot; /&gt;\n    &lt;valueSetUri value=&quot;http://fhir.de/ValueSet/kbv/s-bar2-arztnrfachgruppe&quot; /&gt;\n  &lt;/binding&gt;\n</pre></div>\n\n\n<p>is this correct? could somebody confirm this?</p>\n<p>greetings Max</p>",
        "id": 175525671,
        "sender_full_name": "Maximilian Reith",
        "timestamp": 1568293051
    },
    {
        "content": "<p>i just tried validating with the java validator:</p>\n<div class=\"codehilite\"><pre><span></span>*FAILURE* validating Practioner.xml:  error:2 warn:0 info:0\n  Error @ StructureDefinition.snapshot.element[30].example[0].value.ofType(uri) (line 1333, col135) : URI values cannot have whitespace\n  Error @ StructureDefinition.differential.element[27].binding (line 4296, col16) : provide either a reference or a description (or both) [valueSet.exists() or description.exists()]\n</pre></div>\n\n\n<p>This binding just has the binding strength an no ValueSet to bind to</p>",
        "id": 175529026,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1568295041
    },
    {
        "content": "<p>yes you can't do what that is trying to do. It's probably a mistake, but the spec says that if you specify anything about the binding in a diff, you need to specify a value set</p>",
        "id": 175529708,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568295564
    },
    {
        "content": "<p>That would be a bug in Forge then?</p>",
        "id": 175529739,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568295593
    },
    {
        "content": "<p>Or a bug in the spec?</p>",
        "id": 175529846,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568295656
    },
    {
        "content": "<p>well.. that depends on your perspective.</p>",
        "id": 175529868,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568295689
    },
    {
        "content": "<p>It depends on whether your name is Grahame or Michel <span aria-label=\"joy\" class=\"emoji emoji-1f602\" role=\"img\" title=\"joy\">:joy:</span><br>\nAny way, currently Forge creates differentials that will not validate against the spec whenever you just change the binding strength of a VS binding.</p>",
        "id": 175530047,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568295819
    },
    {
        "content": "<blockquote>\n<p>the spec says that if you specify anything about the binding in a diff, you need to specify a value set</p>\n</blockquote>\n<p>Where is this defined? Do you think this is something that Forge should verify?</p>",
        "id": 175530106,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1568295850
    },
    {
        "content": "<p>Well, at least there is a validation in the spec that acts this way</p>",
        "id": 175530187,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568295893
    },
    {
        "content": "<p>Apparently, but where can I find this on the FHIR spec website?</p>",
        "id": 175530254,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1568295943
    },
    {
        "content": "<p>it's one of the formal constraints on ElementDefinition</p>",
        "id": 175530324,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568295972
    },
    {
        "content": "<p>Which one?</p>",
        "id": 175530351,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1568295988
    },
    {
        "content": "<p>I've tried to cover all relevant FHIRPath invariants in Forge. Did I miss one?</p>",
        "id": 175530433,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1568296036
    },
    {
        "content": "<p>eld-11 and eld-12 seem to verify something else</p>",
        "id": 175530472,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1568296071
    },
    {
        "content": "<p>eld-10 in STU3</p>",
        "id": 175530475,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568296075
    },
    {
        "content": "<p>I think there's a reason eld-10 got removed from R4?</p>",
        "id": 175530737,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568296223
    },
    {
        "content": "<p>so this invariant is DSTU3 only, in R4 you could just change the binding strenght in a diff, right?</p>",
        "id": 175530743,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1568296228
    },
    {
        "content": "<p>Yes, I see, in R4 this is now sdf-10</p>",
        "id": 175530751,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1568296231
    },
    {
        "content": "<p>Right, as probably originally intended sdf-10 does not cover differential</p>",
        "id": 175530823,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568296279
    },
    {
        "content": "<p>Forge indeed verifies this invariant. However the current implementation checks if the values are empty in the generated snapshot, so taking into effect any values inherited from the base.</p>",
        "id": 175530847,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1568296289
    },
    {
        "content": "<p>So if the base profile introduces a valueset for a binding, then the invariant currently always succeeds.</p>",
        "id": 175530955,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1568296339
    },
    {
        "content": "<p>So Forge/STU3 apparently acts as intended in R4, but does not follow eld-10/STU3</p>",
        "id": 175531186,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568296506
    },
    {
        "content": "<p>To follow eld-10, you definitely need to fill valueSet or description in the differential</p>",
        "id": 175531352,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568296619
    },
    {
        "content": "<p>It's basically not something that Forge should verify, but it's an exception to the rule that you only have changed elements within the differential</p>",
        "id": 175531584,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568296767
    },
    {
        "content": "<p>So Forge/STU3 probably should add valueSet/description to the element in the diff when binding is present.<br>\nThis would keep eld-10 silent without hurting anything else.</p>",
        "id": 175532021,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568297032
    },
    {
        "content": "<p>Forge STU3 verifies eld-10 from STU3 spec.<br>\nForge R4 verifies sdf-10 from R4 spec.<br>\nLooks like no change required.</p>",
        "id": 175536302,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1568299715
    },
    {
        "content": "<p>As I understand, the error <span class=\"user-mention\" data-user-id=\"195854\">@Maximilian Reith</span> mentions is triggered by a STU3 profile created by Forge STU3</p>",
        "id": 175536489,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568299830
    },
    {
        "content": "<p>STU3 eld-10 expects valueSet and/or description to be in the SD.differential, even though neither of these are changed against the baseDefinition.<br>\nIt does so when strength <em>has</em> changed and therefor exists in the diff.<br>\nSo Forge needs to add valueSet/description (whichever is filled in the <em>snapshot</em>) to the <em>differential</em></p>",
        "id": 175536838,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568300066
    },
    {
        "content": "<p>Indeed, I can confirm that Forge STU3 does not warn about eld-10 when opening the practitioner profile above. I'm reluctant with making changes to user profiles. However I could update eld-10 logic in STU3 to actually check the diff instead of the snapshot, as is currently the case.</p>",
        "id": 175537221,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1568300310
    },
    {
        "content": "<p>I think this is more about the way Forge creates the actual diff.<br>\nIf Forge doesn't fill binding.valueSet/binding.description whenever binding.strength exists <em>in the diffferential</em>, eld-10 will always complain</p>",
        "id": 175537610,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568300543
    },
    {
        "content": "<p>I'd have to check the commit history. Possibly the validation logic has been slightly relaxed after community feedback that eld-10 was too strict...</p>",
        "id": 175537652,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1568300577
    },
    {
        "content": "<p>Makes sense, but apparently didn't get through to at least the Java implementation ;-)</p>",
        "id": 175537834,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568300691
    },
    {
        "content": "<p>yes i created this profile by Forge STU 3 22.0</p>\n<blockquote>\n<p>I think this is more about the way Forge creates the actual diff.<br>\nIf Forge doesn't fill binding.valueSet/binding.description whenever binding.strength exists <em>in the diffferential</em>, eld-10 will always complain</p>\n</blockquote>\n<p>i would support Stefan...that is something Forge could do for you.</p>",
        "id": 175598384,
        "sender_full_name": "Maximilian Reith",
        "timestamp": 1568356612
    },
    {
        "content": "<p>It's not completely trivial. Forge contains a diffing engine that automatically strips all redundant constraints, i.e. constraints that are already defined by the base profile, to generate the differential. Forge would need to dynamically override this behavior and force the <code>binding.valueSet</code> property to the output in some circumstances, even if seemingly redundant.</p>",
        "id": 175604054,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1568363172
    },
    {
        "content": "<p>The alternatives to changing Forge would be:<br>\n- technical correction in STU3 (may be reasonable, since probably hundreds or thousands of STU3 profiles are out there that do not conform to eld-10, and eld-10 is broken anyway)<br>\n- just change the validators to ignore eld-10 (bad)<br>\n- tell everybody to just ignore the error (worse)</p>",
        "id": 175605384,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568364815
    },
    {
        "content": "<p>Oh, and:<br>\n- just don't validate StructureDefinitions ;-)</p>",
        "id": 175605491,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568364902
    }
]