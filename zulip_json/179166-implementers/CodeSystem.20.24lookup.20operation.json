[
    {
        "content": "<p>According to the specification (<a href=\"https://www.hl7.org/fhir/operation-codesystem-lookup.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/operation-codesystem-lookup.html\">https://www.hl7.org/fhir/operation-codesystem-lookup.html</a>), $lookup operation on CodeSystem is only defined on type level. However, other operations on CodeSystem are generally defined either on the type level or on the instance level (<a href=\"https://www.hl7.org/fhir/operationslist.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/operationslist.html\">https://www.hl7.org/fhir/operationslist.html</a>).</p>\n<p>Why is this difference? Is it accidental or on purpose? I don't see any reason why $lookup cannot be defined on the instance level.</p>",
        "id": 155134146,
        "sender_full_name": "Ivan Dubrov",
        "timestamp": 1547513102
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ?</p>",
        "id": 155134241,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1547513205
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 155139633,
        "sender_full_name": "Eric Haas",
        "timestamp": 1547519627
    },
    {
        "content": "<p>and it would presume you knew the CodeSystem id which I don' t think is always the case.  You don't need it as it is so why go to the extra trouble?</p>",
        "id": 155139753,
        "sender_full_name": "Eric Haas",
        "timestamp": 1547519784
    },
    {
        "content": "<p>You are correct. <br>\nI was curious about discrepancy with other operations. For example, <a href=\"https://www.hl7.org/fhir/codesystem-operation-subsumes.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/codesystem-operation-subsumes.html\">https://www.hl7.org/fhir/codesystem-operation-subsumes.html</a> can be invoked both on type level and on an instance level. I can see how invoking it on an instance level might introduce a conflict (what if CodeSystem identified via \"id\" does not match the system provided as \"coding\" parameter?), but same argument could be applied to the \"$subsumes\" operation.</p>",
        "id": 155144213,
        "sender_full_name": "Ivan Dubrov",
        "timestamp": 1547525852
    },
    {
        "content": "<p>Yes, this does seem to be an anomaly.  I'm not thinking of any discussions or any reason why this operation should not also have been defined at the instance level.  Unless <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  knows of something?  But the question now is, I guess, is whether we would want to attempt to change this for a normative operation?  At least the change itself would be compatible.</p>",
        "id": 155167446,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1547557699
    },
    {
        "content": "<p>I can't think of any deliberate reason</p>",
        "id": 155169750,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1547559914
    },
    {
        "content": "<p>So do we (or can we) add it in R5?</p>",
        "id": 155223421,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1547607394
    },
    {
        "content": "<p>yes</p>",
        "id": 155247714,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1547639701
    },
    {
        "content": "<p>According to the specification,  code is not compulsory (0..1). What is the expected the behavior of the $lookup in that case ?<br>\nAre there tests available to validate the proper behavior of $lookup ?</p>",
        "id": 161430477,
        "sender_full_name": "Luca Toldo",
        "timestamp": 1553244841
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"196897\">@Luca Toldo</span> the optionality is so you can provide a <code>code</code> (and <code>system</code>) or a <code>coding</code></p>",
        "id": 161445290,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1553259682
    },
    {
        "content": "<p>Thankyou <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span>  ! so if I understand correctly <br>\neither<br>\na) A code and system<br>\nor<br>\nb) a coding<br>\nmust be provided<br>\nright ?</p>",
        "id": 161445674,
        "sender_full_name": "Luca Toldo",
        "timestamp": 1553260018
    },
    {
        "content": "<p>Yes.  It's there in the text:</p>\n<blockquote>\n<p>When invoking this operation, a client SHALL provide both a system and a code, either using the system+code parameters, or in the coding parameter. Other parameters are optional.</p>\n</blockquote>",
        "id": 161445869,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1553260159
    },
    {
        "content": "<p>I'd never noticed that <code>[base]/CodeSystem/[id]/$lookup</code> wasn't defined!<br>\nI guess this is some kind of hang-over from when it was defined on <code>ValueSet</code>, because <code>CodeSystem</code> instances didn't exist.</p>",
        "id": 161446140,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1553260371
    },
    {
        "content": "<p>I think that's an oversight. I was certainly surprised when I read that. But I see my server doesn't support it</p>",
        "id": 161484469,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1553289156
    },
    {
        "content": "<p>Neither does ours; looks like a HAPI limitation - <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span></p>",
        "id": 161492474,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1553296211
    },
    {
        "content": "<p>I mean, yeah.. HAPI was written to implement the operation as its defined in the spec. :)</p>",
        "id": 161596692,
        "sender_full_name": "James Agnew",
        "timestamp": 1553461363
    },
    {
        "content": "<p>My Server insists on the system/codeSystem uri input parameter being completed for all operation requests on the CodeSystem resource., regardless of whether an id is passed. That's my own limitation! However, it does support the /[id]/ syntax for the other terminology resources.</p>",
        "id": 161599756,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1553466043
    },
    {
        "content": "<p>Since the code/system or coding already provide system url, I don't know why there's need for codesystem/id/$lookup?</p>",
        "id": 161659422,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1553530593
    },
    {
        "content": "<p>No actual need, but neither is there one for <code>/ValuseSet/[id]/$expand</code>. However, it would be slightly faster as resolving the system -&gt; Resource (search) naturally takes longer than simply using a lookup for id -&gt; Resource.</p>",
        "id": 161717848,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1553559299
    },
    {
        "content": "<p>I think the value set expand has a quite different functional reason to call it, as compared to code system expand. But I donâ€™t see any harm in allowing the code system lookup to explicitly identify an id- it would function as a check on the system as well as the system/code combo</p>",
        "id": 161717947,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1553559428
    },
    {
        "content": "<p>Would CodeSystem/$expand take into account available supplements?</p>",
        "id": 161719546,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1553561257
    },
    {
        "content": "<p>Open discussion.</p>",
        "id": 161721447,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1553563376
    },
    {
        "content": "<p>...so the debate is moving from ValueSet/$lookup to CodeSystem/$expand as a suggested mechanism for requesting multiple properties about a group of concepts?</p>",
        "id": 161722897,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1553565428
    },
    {
        "content": "<p>It is?? That certainly wasn't anything like the original question (at least as I read it)</p>",
        "id": 161722964,
        "sender_full_name": "Jim Steel",
        "timestamp": 1553565496
    },
    {
        "content": "<p>I was merely posing the question, based on some of the above posts, but can see some advantages in doing it that way.</p>",
        "id": 161724082,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1553567030
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> If allowing id in URL and both id and sysystem URI (in parameter) were provided, which one should take higher priority? For example, id points to SCT and coding.system is LOINC.</p>",
        "id": 161759116,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1553605444
    },
    {
        "content": "<p>Checking ValueSet.$expand, I noticed that the same was not clarified between valueset/id and url parameter. Is that up to the implementer to decide? My implementation is that if there's id, use id. Otherwise, check url.</p>",
        "id": 161759360,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1553605635
    },
    {
        "content": "<p>I do the same for ValueSet/$expand.</p>",
        "id": 161800561,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1553632655
    },
    {
        "content": "<p>for $lookup - I would say that neither has priority; they both must agree</p>",
        "id": 161800576,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1553632674
    },
    {
        "content": "<p>[I thought that was a typo above from <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> when he said \"code system expand\" and that he actually meant \"code system lookup\"?]</p>",
        "id": 161800858,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1553632901
    },
    {
        "content": "<p>y i did</p>",
        "id": 161801946,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1553633777
    }
]