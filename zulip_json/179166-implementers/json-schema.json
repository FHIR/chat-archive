[
    {
        "content": "<p>I'm working on qa issues prior to publishing STU3. One on my list is validating the json-schemas - they are not quite valid right now. </p>",
        "id": 153865116,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1483124822
    },
    {
        "content": "<p>I'm hoping I can get some help with this...</p>",
        "id": 153865117,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1483124840
    },
    {
        "content": "<p>I'm not sure what the id should be for the json schemas; does anyone have any comments?</p>",
        "id": 153865118,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1483124865
    },
    {
        "content": "<p>What id do you mean? Attribute <code>id</code>  in a root object?</p>",
        "id": 153865125,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1483133080
    },
    {
        "content": "<p>It's related to how $ref's are resolved. <a href=\"https://github.com/json-schema/json-schema/wiki/The-id-keyword\" target=\"_blank\" title=\"https://github.com/json-schema/json-schema/wiki/The-id-keyword\">https://github.com/json-schema/json-schema/wiki/The-id-keyword</a></p>",
        "id": 153865126,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1483133188
    },
    {
        "content": "<p>yes, that's the one. how should we use it </p>",
        "id": 153865128,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1483134602
    },
    {
        "content": "<p>it depends on how we are going $ref-erence </p>",
        "id": 153865130,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1483135064
    },
    {
        "content": "<p>one option-  do not use it at all</p>",
        "id": 153865131,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1483135136
    },
    {
        "content": "<p>it had been my intent that it would be the canonical reference to the schema - the way we usually do it </p>",
        "id": 153865132,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1483135291
    },
    {
        "content": "<p>most convenient distribution format - put everything in one file - so json schema engine does not need resolve external refs . In   one file we could use json pointers -  #/definitions/Patient</p>",
        "id": 153865133,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1483135771
    },
    {
        "content": "<p>because all resources are cross-referencing (contained element) - and most of engines are eagerly loading all references  - i think, this is right way</p>",
        "id": 153865134,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1483135897
    },
    {
        "content": "<p><a href=\"https://github.com/json-schema-org/json-schema-spec/issues/66\" target=\"_blank\" title=\"https://github.com/json-schema-org/json-schema-spec/issues/66\">https://github.com/json-schema-org/json-schema-spec/issues/66</a> here is a long discussion about problems with $ref resolution - so lets keep it simple </p>",
        "id": 153865135,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1483136372
    },
    {
        "content": "<p>ok that's sort of a persausive argument. </p>",
        "id": 153865136,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1483143419
    },
    {
        "content": "<p>so there's no point generating single schema then. What's the correct schema reference for a type then?</p>",
        "id": 153865137,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1483143574
    },
    {
        "content": "<p>as in, from outside the schema (already using the correct one internally)</p>",
        "id": 153865138,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1483156342
    },
    {
        "content": "<p>Not sure, I understand question.  You could reference by absolute, relative uri (resolved using id as base or if no id - current document location) + fragment ( #id or #/json/pointer). So formula is uri#/json/pointer (referencing by id inside doc is not common for json schema). You could ref like -  datatypes.json#/definitions/HumanName  - like a common logic of links resolution, but where #id replaced by #/json-pointer. We can generate schema per resource/type and use only uri part fo referencing</p>",
        "id": 153865144,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1483171258
    },
    {
        "content": "<p>if I generate schema per resource type, then I need to give them an id. At least experimentally that was true. I'm generating a single schema now, with no id, and it validates all the resources</p>",
        "id": 153865147,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1483212422
    },
    {
        "content": "<p>How do you handle bundle and contained resources (anyOf - is not exactly what we need) and polymorphic elements (again :) We use discriminator to dispatch to specific schema in bundle or in contained (<a href=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#models-with-polymorphism-support\" target=\"_blank\" title=\"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#models-with-polymorphism-support\">https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#models-with-polymorphism-support</a>) and introduced new extension for json-schema - exclusiveProperties to describe polymorphic elements.</p>",
        "id": 153865179,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1483295517
    },
    {
        "content": "<p>well, for json-schema I'm generating oneOf. We agreed that I would use the swagger extension for swagger, but I haven't done the swagger generation yet - looks like that will be in Feb</p>",
        "id": 153865180,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1483295706
    },
    {
        "content": "<p>We also could add FHIR specific extensions for json-schema - for example binding keyword and reference - to validate codes and references.</p>",
        "id": 153865181,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1483295937
    },
    {
        "content": "<p>Paper about Foundation of JSON-schema - <a href=\"http://www2016.net/proceedings/proceedings/p263.pdf\" target=\"_blank\" title=\"http://www2016.net/proceedings/proceedings/p263.pdf\">http://www2016.net/proceedings/proceedings/p263.pdf</a></p>",
        "id": 153879948,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1490645988
    }
]