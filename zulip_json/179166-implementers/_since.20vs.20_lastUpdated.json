[
    {
        "content": "<p>In different areas of the specification, both a _since parameter and a _lastUpdated parameter are described. _lastUpdated is defined as a common search parameter: <a href=\"http://www.hl7.org/fhir/search.html#lastUpdated\" target=\"_blank\" title=\"http://www.hl7.org/fhir/search.html#lastUpdated\">http://www.hl7.org/fhir/search.html#lastUpdated</a></p>",
        "id": 164922165,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557067284
    },
    {
        "content": "<p>with this example: <br>\n \"GET [base]/Observation?_lastUpdated=gt2010-10-01\"<br>\nThis search finds any observations changed since 1-Oct 2010. When this search parameter is used, applications should consider synchronization approaches (RESTful history or the Subscription resource).</p>",
        "id": 164922217,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557067337
    },
    {
        "content": "<p>_since is defined in the <em>history</em> page: <a href=\"http://www.hl7.org/fhir/http.html#history\" target=\"_blank\" title=\"http://www.hl7.org/fhir/http.html#history\">http://www.hl7.org/fhir/http.html#history</a></p>\n<p>\"_since : instant   Only include resource versions that were created at or after the given instant in time\"</p>",
        "id": 164922241,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557067393
    },
    {
        "content": "<p>But in subscriptions, we currently reference _since: <a href=\"http://www.hl7.org/fhir/subscription.html#2.46.7.1\" target=\"_blank\" title=\"http://www.hl7.org/fhir/subscription.html#2.46.7.1\">http://www.hl7.org/fhir/subscription.html#2.46.7.1</a></p>\n<p>\"When the subscriber receives a POST to <a href=\"https://biliwatch.com/customers/mount-auburn-miu/on-result\" target=\"_blank\" title=\"https://biliwatch.com/customers/mount-auburn-miu/on-result\">https://biliwatch.com/customers/mount-auburn-miu/on-result</a>, it re-issues the criteria as a query to the server, appending &amp;_since=:last (where :last is replaced by the time at which the client last checked). In this way it can fetch all new relevant Observations.\"</p>",
        "id": 164922313,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557067464
    },
    {
        "content": "<p>And I believe the bulk data spec also uses _since: <a href=\"http://hl7.org/fhir/us/bulkdata/2019May/export/index.html#query-parameters\" target=\"_blank\" title=\"http://hl7.org/fhir/us/bulkdata/2019May/export/index.html#query-parameters\">http://hl7.org/fhir/us/bulkdata/2019May/export/index.html#query-parameters</a></p>\n<p>\"_since (FHIR instant type, optional)<br>\nResources updated after this period will be included in the response\"</p>",
        "id": 164922401,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557067573
    },
    {
        "content": "<p>But should _since apply to those use cases? Or should it be _lastUpdated? If you use _since, should you expect to get the latest version, or all versions of a resource since that time?</p>",
        "id": 164922428,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557067628
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span></p>",
        "id": 164922439,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557067641
    },
    {
        "content": "<p>_lastUpdated=ge2014-05-00  is the same as _since=ge2014-05-00</p>",
        "id": 164923933,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557069935
    },
    {
        "content": "<p>so since isn't quite the same thing. Also, servers are not required to populate lastUpdated but they can support _since even if they don't since there may be underlying sources of information not made available through the API</p>",
        "id": 164923987,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557069997
    },
    {
        "content": "<p>I think the documentation could be clearer, but I'm not really in favor of replacing _since with _lastUpdated with a GE prefix</p>",
        "id": 164924001,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557070038
    },
    {
        "content": "<p>So, is the expectation that if you use since, you get all versions? I only see it defined in the history operation. It's not listed in common search params</p>",
        "id": 164924882,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557071573
    },
    {
        "content": "<p>I may not be following what your intent is - both of your examples had ge in them</p>",
        "id": 164924908,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557071639
    },
    {
        "content": "<p>grrr. Was meant to say: </p>\n<p>_lastUpdated=ge2014-05-00 is the same as _since=2014-05-00</p>",
        "id": 164925087,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557071934
    },
    {
        "content": "<p>So, should since be defined as a common search parameter then?</p>",
        "id": 164925652,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557072758
    },
    {
        "content": "<p>I would love to support since instead of lastUpdated, for example, because today we don't have use cases where people are looking anywhere but GE :)</p>",
        "id": 164925667,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557072795
    },
    {
        "content": "<p>If that's really the only difference (I question the usefulness of lastUpdated now)</p>",
        "id": 164925673,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557072831
    },
    {
        "content": "<p>plus _since is defined as instance... whereas lastUpdated is just Date/Time. We require the time on our server anyway so that bad and unexpected things don't happen</p>",
        "id": 164925757,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557072914
    },
    {
        "content": "<p>I think that there are wider use cases for lastUpdated - finding something that happened during a period in the past, for instance.</p>",
        "id": 164926377,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557073835
    },
    {
        "content": "<p>not as strong as _since, that's for sure. But I'm not sure that's enough to drop _lastUpdated and reaplce it - specially since it's normative</p>",
        "id": 164926393,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557073873
    },
    {
        "content": "<p>Do we need to add _since to the common search params? If so I can log a tracker (and I think we would want to link to history where the behavior is special)</p>",
        "id": 164926850,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557074586
    },
    {
        "content": "<p>well, it's probably at the point of logging a tracker for FHIR-I to discuss</p>",
        "id": 164926928,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557074721
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22099\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22099\">GF#22099</a></p>",
        "id": 165166787,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557325104
    },
    {
        "content": "<p>Missed adding FHIR-I as the reviewing group... doh.</p>",
        "id": 165166829,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1557325145
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>  Notice the outcome of that tracker above. If it stands, I think bulk data will need to remove _since from query params?</p>",
        "id": 176968611,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569873869
    },
    {
        "content": "<p>Technically, bulk data is defining a custom operation - so it can define whatever parameters it likes and name them as it sees fit.  It's not actually using the \"query\" mechanism - even if that might be how the operation gets executed under the covers.  If the intention is to have identical behavior to _since and to prohibit prefixes like \"gt\", \"le\", etc., then _since is a reasonable and appropriate name for your parameter.</p>",
        "id": 176983909,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1569886010
    },
    {
        "content": "<p>I'm more confused now :)</p>",
        "id": 177052110,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569934792
    },
    {
        "content": "<p>What was the reasoning for <em>not</em> adding _since as a common query param? Requiring a full instance and not allowing the prefixes to do the most basic \"I want changes since...\" query was appealing :)</p>",
        "id": 177052239,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569934848
    },
    {
        "content": "<p>There's not really much on the tracker except \"it's only defined in history,\" but that's why the tracker was created</p>",
        "id": 177052271,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569934874
    },
    {
        "content": "<p>There's already a query parameter defined - _lastupdated.  If you use it with =gt, then it does the same thing _since does.  We don't want to introduce a new search parameter that doesn't add new functionality.</p>",
        "id": 177057633,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1569938463
    },
    {
        "content": "<p>_since is just the name of an operation parameter that's used on the history operation and $everything.  It's given a different name than _lastupdated because the behavior is different.  You can't use 'ge', 'lt', etc. with it.</p>",
        "id": 177057729,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1569938523
    },
    {
        "content": "<p>So no concerns if my server requires lastUpdated to be defined all the way to offset?</p>",
        "id": 177058640,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569939079
    },
    {
        "content": "<p>that's the other big difference between the two. Since is defined as an instant, not a DateTime</p>",
        "id": 177058671,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569939097
    },
    {
        "content": "<p>and without that offset, it creates a lot of complication on what time zone a multi-time zone server would choose on behalf of an app</p>",
        "id": 177058770,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569939131
    },
    {
        "content": "<p>I'm not following.  With _since, you must specify a full timestamp and it's always \"gt\".  With _lastUpdated, it's a standard search parameter where all of the comparison operations are allowed and precision can be variable (and the expectation of behavior in terms of variable precision is clearly defined).  A client can search using _lastUpdated in a way that will behave exactly like _since, but they can also use _lastUpdated in a variety of other ways.  A server could, if it chose, decide not to support all of that flexibility, though it's not totally obvious to me why it would do that.</p>\n<p>As for a multi-time zone server, why does _since vs. _lastUpdated make any difference?</p>",
        "id": 177061780,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1569940895
    },
    {
        "content": "<p>Specifically because we would have to restrict the way they can pass in the data for _lastUpdated</p>",
        "id": 177062149,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569941161
    },
    {
        "content": "<p>_lastUpdated allows \"1999\" and 01-10-1999 as valid parameters</p>",
        "id": 177062210,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569941185
    },
    {
        "content": "<p>even though the _lastUpdated field itself is an instant</p>",
        "id": 177062237,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569941205
    },
    {
        "content": "<p>which means the server has to interpret that and determine a random time zone to apply</p>",
        "id": 177062254,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569941219
    },
    {
        "content": "<p>instead of taking that on (described in the spec with a \"here be dragons\": <a href=\"http://hl7.org/fhir/r4/search.html#date\" target=\"_blank\" title=\"http://hl7.org/fhir/r4/search.html#date\">http://hl7.org/fhir/r4/search.html#date</a>), our server would likely require the param be passed including the offset</p>",
        "id": 177062390,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569941292
    },
    {
        "content": "<p>most apps don't actually want the server to do something somewhat \"undefined,\" and know what dates they care about in the context of their use, I would hope</p>",
        "id": 177062420,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569941321
    },
    {
        "content": "<p>You can require inclusion of time zone if you like.  If you chose not to support _lastUpdated at all, that means you lose the ability to search for things updated \"before\" a particular timestamp or within a particular range of times.  _since doesn't provide that.  However, if you wanted to enforce that _lastUpdated could only be used like _since, you could.  The key thing, is it covers the same space, so there's no real reason to define an additional search parameter.</p>",
        "id": 177062637,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1569941455
    },
    {
        "content": "<p>No, we support _lastUpdated already today. But the main use is exactly what _since is. Just means the server has to document the single prefix allowed and the limit on precision. It's fine, we just need to make sure _since is understood to only be history</p>",
        "id": 177062798,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569941542
    },
    {
        "content": "<p>consistently. I'm not sure I'm a fan of people re-defining core params as something else/with a different use in IGs and operations</p>",
        "id": 177062844,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569941584
    },
    {
        "content": "<p>since that just makes it more confusing</p>",
        "id": 177062852,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569941590
    },
    {
        "content": "<p>I'm not following.  _since has been part of the history operation since the beginning.  You can't do \"search\" with history.  And you can't search for information before a particular date.  All you can do is _since.  When defining new operations, if the behavior you have is equivalent to _since, it makes sense to use that name.  If the behavior you have is equivalent to _lastUpdated, it makes sense to use that name.  Where are you seeing re-defining going on?</p>",
        "id": 177063161,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1569941788
    },
    {
        "content": "<p>I may have misinterpreted your statement above: \"Technically, bulk data is defining a custom operation - so it can define whatever parameters it likes and name them as it sees fit. It's not actually using the \"query\" mechanism - even if that might be how the operation gets executed under the covers. If the intention is to have identical behavior to _since and to prohibit prefixes like \"gt\", \"le\", etc., then _since is a reasonable and appropriate name for your parameter.\"</p>",
        "id": 177063496,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569941990
    },
    {
        "content": "<p>I don't think the bulk data use would match since if it's for history (anymore than the subscription use did)</p>",
        "id": 177063599,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569942017
    },
    {
        "content": "<p>They're both using it in a very similar way</p>",
        "id": 177063621,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569942036
    },
    {
        "content": "<p>The difference is that Subscription is using the Query mechanism in FHIR - so it has to use defined search parameters.  Bulk data is defining an operation - so it can define whatever parameters it likes.  It may be that in Subscription you want to constrain the use of _lastUpdated, but that's still the parameter you need to use because that's what's defined for use in search.</p>",
        "id": 177063893,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1569942189
    },
    {
        "content": "<p>I'll have to look at how we redefined it in subscription - it's not a query on topic or subscription - it's borderline history now. Either way, I don't think I would want to use _since for anything other than the actual history operation, since that is where it's defined</p>",
        "id": 177064248,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569942439
    },
    {
        "content": "<p>it's actually barely mentioned now in subscription since we dropped the definition that allowed any random type of query</p>",
        "id": 177064296,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1569942467
    },
    {
        "content": "<p>it's still mentioned in one place and it shouldn't be mentioned there. I have a task to fix it to _lastUpdated instead</p>",
        "id": 177110502,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1569975115
    }
]