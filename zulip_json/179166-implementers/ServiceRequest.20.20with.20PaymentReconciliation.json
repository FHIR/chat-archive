[
    {
        "content": "<p>how can I present ServiceRequest with payment of service in Bundle Resource. I used ServiceRequest Resource with PaymentReconciliation Resource but they were not reference together.</p>",
        "id": 173076476,
        "sender_full_name": "Dongtu",
        "timestamp": 1565659151
    },
    {
        "content": "<p>I need helper. Who known this topic ?</p>",
        "id": 173167114,
        "sender_full_name": "Dongtu",
        "timestamp": 1565745840
    },
    {
        "content": "<p>ask on the <a class=\"stream\" data-stream-id=\"179283\" href=\"/#narrow/stream/179283-DaVinci\">#DaVinci</a>  stream. There might be more experts there</p>",
        "id": 173208562,
        "sender_full_name": "John Moehrke",
        "timestamp": 1565793390
    },
    {
        "content": "<p>DaVinci doesn't use PaymentReconciliation.  <span class=\"user-mention\" data-user-id=\"230970\">@Dongtu</span>, what kind of Bundle are you using?  What are you actually trying to accomplish?</p>",
        "id": 173677226,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566321753
    },
    {
        "content": "<p>I want to send the information of the service along with the amount paid for that service. I used ServiceRequest as a Parent Resource and and placed PaymentReconciliation in the ServiceRequest 's contained. Is that reasonable?</p>",
        "id": 173757872,
        "sender_full_name": "Dongtu",
        "timestamp": 1566352033
    },
    {
        "content": "<p>'contained' should only be used when the contained resource can't exist independently of the container - which seems an unusual situation for a payment reconciliation.  Typically the PaymentReconciliation would be a stand-alone instance.  It would have pointers to the Claims and ClaimResponses for which the reconciliation is being asserted.  The Claims would then point to the ServiceRequests that justified the cost items within the Claim.  If you wanted to, you could send all of that information in a message or document Bundle or retrieve it using a RESTful search with a bunch of _include parameters.</p>",
        "id": 173759120,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566354042
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191430\">@Paul Knapp</span> <span class=\"user-mention\" data-user-id=\"191369\">@Andy Stechishin</span></p>",
        "id": 173759126,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566354067
    },
    {
        "content": "<p>How about MedicationRequest and Medication ?<br>\nCan I placed Medication in the MedicationRequest 's contained?<br>\nStructurally, you right. I want flexibility and brevity. My Fhir server is also easier to handle</p>",
        "id": 173759890,
        "sender_full_name": "Dongtu",
        "timestamp": 1566355408
    },
    {
        "content": "<p>Medication inside a MedicationRequest is more common as often the information for a compound isn't maintained or relevant outside that one order.  The choice of using 'contained' should never be driven by brevity - it should be driven by the degree of dependence of the contained item on the container.</p>",
        "id": 173760521,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566356414
    },
    {
        "content": "<p>I agree with Lloyd.  Medication resources are commonly found contained inside the other Medication resources because you tend not need the compounds to have an independent life cycle from the resource they are contained within.  But that is rarely the case for the rest of the resources.    You need to know that the contained resources generally can't be searched on and have no life beyond the resources they are contained within.  That normally isn't what you want.  Basically, putting all of the individual resources into a Bundle and storing them as a transaction or a batch gives you the convenience of shipping them together while getting the lifecycle needs that you probably want.</p>",
        "id": 173761478,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1566358013
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"230970\">@Dongtu</span> You could create a bundle with a PaymentReconciliation and the ServiceRequest(s) where the PaymentReconciliation.detail.request would point to the ServiceRequest being paid.</p>",
        "id": 173942463,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1566536655
    },
    {
        "content": "<p>You can certainly send the PaymenReconciliation and ServiceRequest together in a message or a transaction, though transaction is asking for all of the resources to be created on the target system and messaging loses some of the interoperability benefits that REST provides.</p>",
        "id": 173962898,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566561662
    }
]