[
    {
        "content": "<p>This is somewhat related to the discussion at <a href=\"#narrow/stream/179166-implementers/topic/Search.20the.20text.20of.20a.20specific.20section.20of.20Composition\">https://chat.fhir.org/#narrow/stream/179166-implementers/topic/Search.20the.20text.20of.20a.20specific.20section.20of.20Composition</a></p>\n<p>I tend to think that <em>_content</em> search, searches at least all <strong>searchable fields</strong> in the resource. Going by Lloyd's response in the thread above, it is supposed to search only string instances? I couldn't locate the specific language in the spec, and I see HAPI is implemented that way. But, the problem with that is it misses out on other important fields which are not necessarily string types. If the search term matches a string instance of something like linkId, it will pull up those resources, but not if it matches codes in the resource (IMHO linkIds are meaning less in search context).</p>\n<p>I think this needs some more clarification.</p>",
        "id": 235245631,
        "sender_full_name": "Ajay Kanduru",
        "timestamp": 1618865061
    },
    {
        "content": "<p>I don't know that it's limited to searchable fields.  Realistically, different systems will support different combinations of elements and would behave differently.</p>",
        "id": 235278725,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1618885897
    },
    {
        "content": "<p>I agree it need not be limited to searchable fields, but it I think is good to include them at minimum, along with other string instances or any other criteria. One thought is to include all searchable fields, plus any string datatypes and token datatypes. It will help to have some common behavior among different systems.</p>",
        "id": 235590307,
        "sender_full_name": "Ajay Kanduru",
        "timestamp": 1619042973
    }
]