[
    {
        "content": "<p>In FHIRPath we have the two system types, Date and DateTime. Both can handle year, year month and date precision. Date will implicitly convert to DateTime. So a Date 2020 should be equal to a DateTime 2020 because of this implicit conversion. </p>\n<p>The <a href=\"https://github.com/HL7/fhirpath.js\">JavaScript implementation</a> seems to have no Date type. I was not able to construct one. <code>@2021-01-01.type()</code> results in DateTime. Furthermore the conversion table from primitive FHIR types to FHIRPath system types, also doesn't use the Date type: <a href=\"https://www.hl7.org/fhir/fhirpath.html#types\">https://www.hl7.org/fhir/fhirpath.html#types</a> Here FHIR.date, FHIR.dateTime, FHIR.instant are all converted to DateTime.</p>\n<p>If a FHIRPath implementation skips the Date type altogether, it seems that this would only be perceivable through reflection and the is-operator.</p>\n<p>My question: Do I have overlooked something or would it be save for an implementation to skip the Date type?</p>\n<p>At the end, if the Date type has no value, wouldn't it be better to eliminate it from the FHIRPath spec?</p>",
        "id": 211274646,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1601048330
    },
    {
        "content": "<p>you might try asking on <a class=\"stream\" data-stream-id=\"179169\" href=\"/#narrow/stream/179169-javascript\">#javascript</a> if no one answers here? (give it a day...)  (<span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span>)</p>",
        "id": 211275153,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1601048562
    },
    {
        "content": "<p>Also the FHIRPath parser of <a href=\"https://github.com/cqframework/clinical_quality_language\">https://github.com/cqframework/clinical_quality_language</a> has only a DateTime literal and no Date literal. So @2020 is parsed as DateTime literal. According the spec @2020T should be a DateTime literal and @2020 should be a Date literal. <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span></p>",
        "id": 211276270,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1601049172
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197470\">@Alexander Kiel</span> , I've just verified the translator has a Date literal, it has since the Date type was introduced in CQL STU3. Can you tell me where you're seeing the CQL parser return a DateTime for a Date literal? That would definitely be a bug if it's behaving that way.</p>",
        "id": 211279628,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1601050682
    },
    {
        "content": "<p>I agree that FHIR.date should map to Date, that looks like just an oversight because that table was built before the Date type existed, can you log a tracker for that?</p>",
        "id": 211279779,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1601050759
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197470\">Alexander Kiel</span> <a href=\"#narrow/stream/179166-implementers/topic/FHIRPath.20Implementation.20skip.20System.2EDate/near/211274646\">said</a>:</p>\n<blockquote>\n<p>The <a href=\"https://github.com/HL7/fhirpath.js\">JavaScript implementation</a> seems to have no Date type. I was not able to construct one. <code>@2021-01-01.type()</code> results in DateTime. Furthermore the conversion table from primitive FHIR types to FHIRPath system types, also doesn't use the Date type: <a href=\"https://www.hl7.org/fhir/fhirpath.html#types\">https://www.hl7.org/fhir/fhirpath.html#types</a> Here FHIR.date, FHIR.dateTime, FHIR.instant are all converted to DateTime.</p>\n</blockquote>\n<p>fhirpath.js was originally written for the previous version of the FHIRPath specification, which did not have a Date type.  We are stilling working on completing support for the current FHIRPath specification.  How important is support for the Date type in fhirpath.js to you?  If you are not just exploring, but actually need it, I could try to prioritize it.</p>\n<p>BTW, although I am subscribed to implementers, I usually ignore it for lack of time.  A better stream to raise questions about the FHIRPath spec would be the fhirpath stream, and there is also a fhirpath.js stream for fhirpath.js (though questions about fhirpath.js also get asked on the fhirpath stream).</p>",
        "id": 211287002,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1601054226
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span> I don't need the Date type in fhirpath.js. I just explore other implementations in order to decide wether I should implement the Date type in my Clojure implementation used for the Blaze server.</p>\n<p>Thanks for pointing me to the fhirpath stream. I will ask further questions there.</p>",
        "id": 211355917,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1601119811
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> I saw the lack of a Date type in the org.cqframework.cql.gen.fhirpathParser in version 1.4.9. You added the Date type with <a href=\"https://github.com/cqframework/clinical_quality_language/commit/8e1ca7d1d6cedee98090a7acfe214e60389cdb48\">https://github.com/cqframework/clinical_quality_language/commit/8e1ca7d1d6cedee98090a7acfe214e60389cdb48</a>. So it will arrive with 1.5 or do you plan a back port in 1.4? </p>\n<p>I raised the issue <a href=\"http://jira.hl7.org/browse/FHIR-28617\">FHIR#28617</a> for the translation table.</p>",
        "id": 211356454,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1601120791
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197470\">@Alexander Kiel</span> , if you need it in the 1.4 translator, we can pull that in, submit a Github issue. I'll note though that as of the current 1.5.0-SNAPSHOT, the translator is multi-version, there is a compatibilityLevel option that you can use to indicate what version of CQL you want to translate, and it works for the 1.3, 1.4, and 1.5 versions.</p>",
        "id": 211371888,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1601143292
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> Thanks, I'll first see if I really need it.</p>",
        "id": 211372562,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1601144363
    }
]