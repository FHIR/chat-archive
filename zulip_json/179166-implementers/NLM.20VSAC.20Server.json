[
    {
        "content": "<p>How does everyone think resolving VSAC value sets and code systems should work, architecturally?   Obviously the NLM servers (both FHIR and REST API) are the source of truth for these value sets ... but can or should they be asked to handle requests from all the installed FHIR servers in the world?    Are the NLM servers behind a CDN (thus spreading the load)?   Should everyone use a prescribed caching design?  What do people do now?</p>",
        "id": 213459691,
        "sender_full_name": "Robert Nielsen",
        "timestamp": 1602782998
    },
    {
        "content": "<p>They certainly should not be used from production systems. The lack of a SLA should ensure that, but NLM should state that somewhere.</p>",
        "id": 213474074,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602789228
    },
    {
        "content": "<p>we distribute an NPM package containing the value sets from the authoritative source so systems don't need to hit the NLM servers directly</p>",
        "id": 213474373,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602789363
    },
    {
        "content": "<p>Where can I get that NLM package?</p>",
        "id": 213477986,
        "sender_full_name": "Robert Nielsen",
        "timestamp": 1602791130
    },
    {
        "content": "<p>And that only works for intensional value sets, right?</p>",
        "id": 213478012,
        "sender_full_name": "Robert Nielsen",
        "timestamp": 1602791150
    },
    {
        "content": "<p>the package contains all the value sets, intensional or not. FHIR servers should be able to work with both. The package is here: <a href=\"http://fhir.org/packages/us.nlm.vsac/\">http://fhir.org/packages/us.nlm.vsac/</a>  (I really need to put an HTML interface there...)</p>",
        "id": 213489365,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1602796782
    },
    {
        "content": "<p>Grahame, a quick question.   I downloaded the package.tgz file from the web site you referenced, and unpacked it.  I was playing around and checking references to other ValueSets inside the ValueSets in that file, and found that some of them (well, actually 190) weren't in the package ... but the ValueSet URIs start with <a href=\"http://cts.nlm.nih.gov/fhir/ValueSet/\">http://cts.nlm.nih.gov/fhir/ValueSet/</a> and when I look on the VSAC web site, they seem to be valid.</p>\n<p>For example, ValueSet 2.16.840.1.113883.3.666.5.2316 is referenced by 2.16.840.1.113883.3.666.5.696 and 2.16.840.1.113883.3.666.5.2256 ... but is not included in the package.tgz file.</p>\n<p>Should it (and the others) have been included in the file?  Or do I need to go somewhere else to get the definition of that ValueSet?</p>\n<p>(Happy to send you the full list .. but thought I would ask first).</p>\n<p>Thanks,<br>\nRobert</p>",
        "id": 214122941,
        "sender_full_name": "Robert Nielsen",
        "timestamp": 1603319258
    },
    {
        "content": "<p>it should be in there. I don't know why it isn't?</p>",
        "id": 214126060,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1603321593
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191503\">@Robert McClure</span> is this one of the intentional value sets?</p>",
        "id": 214656399,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1603767119
    },
    {
        "content": "<p>2.16.840.1.113883.3.666.5.696 (Any infection) is a grouping value set containing.                                                                                                      2.16.840.1.113883.3.666.5.903 Any Infection ICD10CM<br>\n2.16.840.1.113883.3.666.5.902   Any Infection ICD9CM<br>\n2.16.840.1.113883.3.666.5.2316 Any Infection SNOMED CT<br>\n<em>All of these are extensional sets, NOT intensional ones.</em> So, that is not the cause. Do intensional sets typically cause this retrieval issue STILL?</p>",
        "id": 214708567,
        "sender_full_name": "Gay Dolin",
        "timestamp": 1603809669
    },
    {
        "content": "<p>As Gay noted, these are not intensional, and they exist in the published space (all member value sets must be also published to get included in a grouper.) Given the approach you took to generate the package I don't know why those did not get included.</p>\n<p>I'm compelled to note that VSAC does require a <a href=\"https://www.nlm.nih.gov/vsac/support/usingvsac/requestumlslicense.html\">free license</a> to gain access to the value sets. While there is no explicit (that I can find) noted prohibition of redistribution of VSAC content, VSAC use falls under the UMLS license and <a href=\"https://www.nlm.nih.gov/research/umls/knowledge_sources/metathesaurus/release/license_agreement.html\">that license</a> in section 3 and 12 does prohibit redistribution of \"subsets\" or derivative works. <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> should confirm the package you've made available is in compliance with the UMLS license or is covered by a different agreement.</p>",
        "id": 214714300,
        "sender_full_name": "Robert McClure",
        "timestamp": 1603811772
    },
    {
        "content": "<p>no there's no different agreement. I'm going to withdraw it and require everyone to provide an APIKey to use VSAC value sets</p>",
        "id": 215046796,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1604019528
    },
    {
        "content": "<p>won't that effectively mean that no one can reference NLM VSAC value sets in their implementation guides?  How would it work if I wanted to and needed to provide an APIKey?</p>",
        "id": 215048541,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1604021981
    },
    {
        "content": "<p>you'll have to register with NLM for an APIKey. Then you'll have to put the key in a local configuration file, so that the IG Publisher has a copy. The ci-build and publication machines will use my own personal APIKey for their builds</p>",
        "id": 215051636,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1604026026
    },
    {
        "content": "<p>FYI: <span class=\"user-mention\" data-user-id=\"191410\">@Brett Marquard</span>  <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span></p>",
        "id": 215055715,
        "sender_full_name": "Gay Dolin",
        "timestamp": 1604031538
    },
    {
        "content": "<p>Ah understood.</p>",
        "id": 215056967,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1604033706
    },
    {
        "content": "<p>So Grahame, you still think it is a good and proper thing to download the ValueSet definitions and use them locally (with the understanding that they become stale after a while), right?   Or is the proper way to handle ValueSets defined by VSAC to always contact the VSAC API ... every FHIR request?   I would think not (and of course there would be caching).  But I would like your opinion.</p>",
        "id": 215126485,
        "sender_full_name": "Robert Nielsen",
        "timestamp": 1604079104
    },
    {
        "content": "<p>And I suppose I could just contact the VSAC server and cache the definitions of the 190 or so that are missing from the package.  Not sure how much of a load that would even be.</p>",
        "id": 215126637,
        "sender_full_name": "Robert Nielsen",
        "timestamp": 1604079181
    },
    {
        "content": "<p>OK so catching up here.  What I hear is if we intend to use VSAC where we can  (and we do) we need to:</p>\n<ol>\n<li>get an API Key </li>\n<li>add it the fhir.ini file so we can see the VSAC terminology in our local builds</li>\n<li>when we push it to the auto-publisher it will still work</li>\n</ol>",
        "id": 215159672,
        "sender_full_name": "Eric Haas",
        "timestamp": 1604098266
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  do you have an example fhir.ini with a fake key populated for us to follow?</p>",
        "id": 215358238,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1604341417
    },
    {
        "content": "<p>It is likely not in fhir.ini, as that is tracked in git. Grahame wrote \"a local configuration file\".</p>",
        "id": 215361696,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1604343185
    },
    {
        "content": "<p>Yes whatever it is ... where is is documented/and  an example so I can get started?</p>",
        "id": 215363302,
        "sender_full_name": "Eric Haas",
        "timestamp": 1604343924
    },
    {
        "content": "<p>I am assuming that there will be an announcement, with documentation, when the change will take place. It is pretty clear how it will work, isn't it?<br>\nMaybe we can give Grahame some time to flesh it out, especially if the API may be still in a fine-tuning stage.</p>\n<p>I appreciate the \"early access\" running commentary on things to come.</p>",
        "id": 215368506,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1604346047
    },
    {
        "content": "<blockquote>\n<p>Or is the proper way to handle ValueSets defined by VSAC to always contact the VSAC API ... every FHIR request?</p>\n</blockquote>\n<p>My understanding is that the VSAC API will be contacted when an IG is being built and published. The use of the IG would not require contacting the VSAC API.</p>",
        "id": 215368727,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1604346177
    },
    {
        "content": "<p>Here is the technical documentation for the <a href=\"https://documentation.uts.nlm.nih.gov/rest/authentication.html\">UMLS REST API</a> that beginning Jan1, 2021 all NLM API will require. As has always been a characteristic for NLM API use, this also expects a specific user's credentials. As it stands, any access will need to generate the ticket with <em>their own UMLS API Key</em>. This is not \"being fine tuned,\" it is set and has been operational for months. </p>\n<p>Of particular note <span class=\"user-mention\" data-user-id=\"192685\">@Vassil Peytchev</span> is that use of an IG <strong>absolutely</strong> will be under the requirement that the user meets the requirements of the UMLS license. This is the same for all HL7 artifacts: IE: any user of an IG <strong>MUST</strong> satisfy the IP requirements for any terminology utilized by the user in implementing the IG.</p>",
        "id": 215372291,
        "sender_full_name": "Robert McClure",
        "timestamp": 1604348124
    },
    {
        "content": "<p>My point was that the <em>IP requirements for using VSAC value sets</em> is not equivalent to <em>requiring the use the UMLS REST API</em> when there is a code placed in a FHIR resource, which a system is returning as a result of a FHIR RESTful GET or search.</p>",
        "id": 215373377,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1604348664
    },
    {
        "content": "<p>I have not yet done this - I was just getting the external requirements in place for when I do it</p>",
        "id": 215376076,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1604349861
    },
    {
        "content": "<p>I will give doco when I do. For now, you still have to use the VSAC package</p>",
        "id": 215376101,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1604349882
    },
    {
        "content": "<p>I am eager to use VSAC in US Core and my question is specific to local builds where I put the basic authentication stuff:</p>\n<ul>\n<li>Will this be available near term and  within the ballot deadline</li>\n<li>Is the VSAC package approach = dependency in the IG resource?</li>\n</ul>",
        "id": 215377148,
        "sender_full_name": "Eric Haas",
        "timestamp": 1604350407
    },
    {
        "content": "<p>yes for now, do it as a dependency.</p>",
        "id": 215377887,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1604350785
    }
]