[
    {
        "content": "<p>The InstanceValidator imposes the following rules on the default \"all codes in the system\" ValueSet of a CodeSystem:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">vs</span><span class=\"o\">.</span><span class=\"na\">hasCompose</span><span class=\"o\">()</span> <span class=\"o\">&amp;&amp;</span> <span class=\"o\">!</span><span class=\"n\">vs</span><span class=\"o\">.</span><span class=\"na\">hasExpansion</span><span class=\"o\">(),</span> <span class=\"s\">&quot;CodeSystem &quot;</span><span class=\"o\">+</span><span class=\"n\">url</span><span class=\"o\">+</span><span class=\"s\">&quot; has a &#39;all system&#39; value set of &quot;</span><span class=\"o\">+</span><span class=\"n\">vsu</span><span class=\"o\">+</span><span class=\"s\">&quot;, but it is an expansion&quot;</span>\n</pre></div>\n\n\n<p>Why is no expansion allowed?  We stumbled across this because we include the <code>valueset-unclosed</code> extension by default, and this extension goes on the expansion element.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">vs</span><span class=\"o\">.</span><span class=\"na\">getCompose</span><span class=\"o\">().</span><span class=\"na\">getInclude</span><span class=\"o\">().</span><span class=\"na\">size</span><span class=\"o\">()</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"o\">,</span> <span class=\"s\">&quot;CodeSystem &quot;</span><span class=\"o\">+</span><span class=\"n\">url</span><span class=\"o\">+</span><span class=\"s\">&quot; has a &#39;all system&#39; value set of &quot;</span><span class=\"o\">+</span><span class=\"n\">vsu</span><span class=\"o\">+</span><span class=\"s\">&quot;, but doesn&#39;t have a single include&quot;</span>\n</pre></div>\n\n\n<p>This might be a problem in case the CodeSystem is some kind of composite as is commonly seen with OWL-based terminologies.  Granted a canonical \"all codes\" ValueSet definition should only require a single include that specifies the system URI (and possibly the version as well), but there may be other semantically equivalent definitions that convey useful information to a person.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">vs</span><span class=\"o\">.</span><span class=\"na\">getCompose</span><span class=\"o\">().</span><span class=\"na\">getInclude</span><span class=\"o\">().</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">).</span><span class=\"na\">getSystem</span><span class=\"o\">().</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"n\">url</span><span class=\"o\">),</span> <span class=\"s\">&quot;CodeSystem &quot;</span><span class=\"o\">+</span><span class=\"n\">url</span><span class=\"o\">+</span><span class=\"s\">&quot; has a &#39;all system&#39; value set of &quot;</span><span class=\"o\">+</span><span class=\"n\">vsu</span><span class=\"o\">+</span><span class=\"s\">&quot;, but doesn&#39;t have a matching system (&quot;</span><span class=\"o\">+</span><span class=\"n\">vs</span><span class=\"o\">.</span><span class=\"na\">getCompose</span><span class=\"o\">().</span><span class=\"na\">getInclude</span><span class=\"o\">().</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">).</span><span class=\"na\">getSystem</span><span class=\"o\">()+</span><span class=\"s\">&quot;)&quot;</span>\n</pre></div>\n\n\n<p>See point above.</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"o\">!</span><span class=\"n\">vs</span><span class=\"o\">.</span><span class=\"na\">getCompose</span><span class=\"o\">().</span><span class=\"na\">getInclude</span><span class=\"o\">().</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">).</span><span class=\"na\">hasValueSet</span><span class=\"o\">()</span> <span class=\"o\">&amp;&amp;</span> <span class=\"o\">!</span><span class=\"n\">vs</span><span class=\"o\">.</span><span class=\"na\">getCompose</span><span class=\"o\">().</span><span class=\"na\">getInclude</span><span class=\"o\">().</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">).</span><span class=\"na\">hasConcept</span><span class=\"o\">()</span> <span class=\"o\">&amp;&amp;</span> <span class=\"o\">!</span><span class=\"n\">vs</span><span class=\"o\">.</span><span class=\"na\">getCompose</span><span class=\"o\">().</span><span class=\"na\">getInclude</span><span class=\"o\">().</span><span class=\"na\">get</span><span class=\"o\">(</span><span class=\"mi\">0</span><span class=\"o\">).</span><span class=\"na\">hasFilter</span><span class=\"o\">(),</span> <span class=\"s\">&quot;CodeSystem &quot;</span><span class=\"o\">+</span><span class=\"n\">url</span><span class=\"o\">+</span><span class=\"s\">&quot; has a &#39;all system&#39; value set of &quot;</span><span class=\"o\">+</span><span class=\"n\">vsu</span><span class=\"o\">+</span><span class=\"s\">&quot;, but the include has extra details&quot;</span>\n</pre></div>\n\n\n<p>Again, we ran into this because we included an explicit filter condition with the SNOMED ECL expression \"*\".  Why should validation exclude this possibility?</p>",
        "id": 165865428,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1558057844
    },
    {
        "content": "<p>what I was thinking is that any enumeration in an expansion is problematic from a version control perspective</p>",
        "id": 165865525,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1558058024
    },
    {
        "content": "<p>but I accept that this is a policy thing not a base conformance issue</p>",
        "id": 165865529,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1558058038
    },
    {
        "content": "<p>also I didn't know how to validate an expansion in this context</p>",
        "id": 165865576,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1558058063
    },
    {
        "content": "<p>Agreed.  However the ValueSet itself may be version-specific (and ours is in this case)</p>",
        "id": 165865602,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1558058106
    },
    {
        "content": "<p>make an issue report (<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/issues\" target=\"_blank\" title=\"https://github.com/hapifhir/org.hl7.fhir.core/issues\">https://github.com/hapifhir/org.hl7.fhir.core/issues</a>) and I'll get to it</p>",
        "id": 165865670,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1558058187
    },
    {
        "content": "<p>(or better, make an issue report + a PR)</p>",
        "id": 165865675,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1558058198
    }
]