[
    {
        "content": "<p>Is it possible (in a profile) to constrain an element so it must conform to a choice of profiles?  For example, if the element has type Address, can I put two types into the element's type array, both with \"Address\" as the \"code\", but each with a different value for \"profile\"?  Since this technically still *narrows* the original type, it seems valid -- but I wanted to confirm since it would increase the length of the element's type array (which some tools might misinterpret as a value[x]).</p>",
        "id": 153870376,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1486416110
    },
    {
        "content": "<p>It definitely *should* be allowed.  As for tooling support, only way to know is to try . . .</p>",
        "id": 153870402,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1486431204
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> FYI I've always interpreted the FHIR spec as allowing this. Forge, the FHIR profile editor, tries to validate resource reference constraints. The current validation logic specifically allows multiple element type constraints with identical type code and different profiles.</p>",
        "id": 153870452,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1486461484
    },
    {
        "content": "<p>Great!  Thank you both for the confirmation!</p>",
        "id": 153870550,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1486472725
    }
]