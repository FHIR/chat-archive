[
    {
        "content": "<p>Is it OK for a resource to reference FHIR resources on servers that are of different versions? For example an R4 Observation to reference a Patient on a Patient store (server) that holds (and serves out  the Patient as an STU3 resource?</p>",
        "id": 239260087,
        "sender_full_name": "Dave Barnet",
        "timestamp": 1621347088
    },
    {
        "content": "<p>that's very difficult to answer. OK in what sense?</p>",
        "id": 239260255,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1621347158
    },
    {
        "content": "<p>Most (all?) clients won't be happy about that</p>",
        "id": 239260377,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1621347217
    },
    {
        "content": "<p>We are thinking that in a \"modular environment\" - a Patient store, an Organization &amp; Location store, a Practitioner store all on different servers (and endpoints), they may offer only interfaces at certain FHIR versions as the estate as a whole evolves. A rsource created may be in later version than the store it needs to point to (hence the example of  an R4 Observation pointing to the STU3 Patient endpoint).</p>",
        "id": 239261000,
        "sender_full_name": "Dave Barnet",
        "timestamp": 1621347475
    },
    {
        "content": "<p>If you perform a search, all resources in the Bundle must be of the same version.  So if you attempt an _include or _revinclude that spans version boundaries, it won't work.</p>",
        "id": 239276410,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621352770
    },
    {
        "content": "<p>use resource.identifier</p>",
        "id": 239287297,
        "sender_full_name": "John Moehrke",
        "timestamp": 1621356622
    },
    {
        "content": "<blockquote>\n<p>use resource.identifier</p>\n</blockquote>\n<p>Reference.identifier?</p>",
        "id": 239294842,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1621359474
    },
    {
        "content": "<p>Just to be clear, its not mixing versions of resources in the same bundle, its about whether a R4 resource can reference an STU3 resource (endpoint). John's solution of using reference.identifier is what we are doing at present, so (for example) if a R4 Encounter resource wants to reference a Patient, and that Patient record can only be gotten on an STU3 endpoint, then we put in a reference.identifier to the primary identifier for the patient (in out case the NHS Number). It's then up to the client to deal with the STU3 based endpoint for Patient - i.e. find the endpoint, query the CapabilityStatement, and retrieve the Patient record.</p>",
        "id": 239381881,
        "sender_full_name": "Dave Barnet",
        "timestamp": 1621411106
    },
    {
        "content": "<p>Our basic reference will look something like this </p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"nt\">\"patient\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Patient\"</span><span class=\"p\">,</span>\n                    <span class=\"nt\">\"identifier\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                        <span class=\"nt\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://fhir.nhs.uk/Id/nhs-number\"</span><span class=\"p\">,</span>\n                        <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"9912003888\"</span>\n                    <span class=\"p\">},</span>\n                   <span class=\"nt\">\"display\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Bilbo Baggins\"</span>\n                <span class=\"p\">},</span>\n</code></pre></div>",
        "id": 239383405,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1621411888
    },
    {
        "content": "<p>Which is useful to consumers, they get the identifier and the name but if they want to resolve the reference then supplying a resource reference would be useful.</p>\n<p>I'm not convinced saying the reference MUST be the the same version is helpful. We would be including the version in the url, so a consumer would know the FHIR version. If that version is usable then they follow the reference else they query using the identifier.</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"nt\">\"patient\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                   <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Patient\"</span><span class=\"p\">,</span>\n                     <span class=\"nt\">\"reference\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://spine-directory-services.nhs.uk/STU3/Patient/9912003888\"</span><span class=\"p\">,</span>\n                    <span class=\"nt\">\"identifier\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                        <span class=\"nt\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://fhir.nhs.uk/Id/nhs-number\"</span><span class=\"p\">,</span>\n                        <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"9912003888\"</span>\n                    <span class=\"p\">},</span>\n                   <span class=\"nt\">\"display\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Bilbo Baggins\"</span>\n                <span class=\"p\">},</span>\n</code></pre></div>",
        "id": 239383815,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1621412102
    },
    {
        "content": "<p>A reference isn't actually version-specific.  It's possible to query the same resource and ask for it in different FHIR versions, just as you can ask for it in XML or JSON.  So exposing the 'version' in the URL wouldn't really make sense.</p>",
        "id": 239449819,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621439581
    }
]