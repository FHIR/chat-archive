[
    {
        "content": "<p>The spec says:</p>\n<blockquote>\n<p>Note, in addition, that a reference may be by identifier, and if it is, and there is no URL, it may be resolved by scanning the ids in the bundle</p>\n</blockquote>\n<p>What does \"scanning the ids\" mean here? Does it mean looking through each <code>entry.resource.identifier[]</code> , or is really about <em>ids</em>?</p>",
        "id": 213598378,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1602873492
    },
    {
        "content": "<p>It says <code>ids</code>, why would it be about <code>identifier</code> ?</p>",
        "id": 213598547,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1602873589
    },
    {
        "content": "<p>I honestly don't know what it's supposed to mean. How do you compare an identifier with an ID?</p>",
        "id": 213598610,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1602873604
    },
    {
        "content": "<p>It should have said identifiers.  If you have a Reference.identifier, it could only be matched against Resource.identifier.</p>",
        "id": 213598714,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1602873680
    },
    {
        "content": "<p>I'll add this to my write-up in Jira, thanks.</p>",
        "id": 213598741,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1602873694
    },
    {
        "content": "<p>Though resolving references that way would be plain weird</p>",
        "id": 213598748,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1602873696
    },
    {
        "content": "<p>I agree!</p>",
        "id": 213598765,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1602873706
    },
    {
        "content": "<p>It's not even clear to me that this is necessarily talking about reference.identifier. It could almost be talking about urn:uuid values in the ID field.</p>",
        "id": 213598870,
        "sender_full_name": "Paul Church",
        "timestamp": 1602873751
    },
    {
        "content": "<p>Resolving reference.identifier by looking at Identifiers in the bundle or on the server is its own can of worms.</p>",
        "id": 213599007,
        "sender_full_name": "Paul Church",
        "timestamp": 1602873842
    },
    {
        "content": "<p>The wording in this section does not address other transaction semantics, so calling out conditional references in the next sentence seems out of place. One of the most interesting aspects of resolving resource identity within a bundle is that a conditional create or update entry could resolve to either a new identity or the identity of an existing resource on the server.</p>",
        "id": 213599559,
        "sender_full_name": "Paul Church",
        "timestamp": 1602874118
    },
    {
        "content": "<p>Agreed. I've done my best to update the rules for clarity at <a href=\"http://jira.hl7.org/browse/FHIR-29271\">FHIR#29271</a> -- but of course in the process of spelling out details, I'm sure to have raised some issues. Would love comments/notes on this Jira issue, so we can do a round of revisions <em>before</em> taking this up in a <a class=\"stream\" data-stream-id=\"179280\" href=\"/#narrow/stream/179280-fhir.2Finfrastructure-wg\">#fhir/infrastructure-wg</a> call.</p>",
        "id": 213601166,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1602874969
    },
    {
        "content": "<p>Resolving logical references (via reference.identifier) is not avoidable. Nothing has prohibited their use in Bundles, and it is too late to start now. I think it would be reasonable that such references are only resolved within the bundle, and only when reference.reference.value is not populated.</p>",
        "id": 213607008,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1602878288
    },
    {
        "content": "<p>I have asked a few months back about similar and got no useful answer. Add into this mix the fact that a Reference is no longer just a Reference. It is now a complex datatype holding a Reference.reference that you are all talking about, but it also has Reference.identifier which you are all saying is in conflict. This is all very confusing...</p>",
        "id": 213653920,
        "sender_full_name": "John Moehrke",
        "timestamp": 1602944138
    },
    {
        "content": "<p>Hello<br>\nA question on modifier: identifier.</p>\n<p>Does the below search matches the search value to 'Patient.managingOrganization.identifier.value' or ' Organization.identifier[].value' ?<br>\n<a href=\"http://test.fhir.org/r4/Patient?organization:identifier=Hostpital10\">http://test.fhir.org/r4/Patient?organization:identifier=Hostpital10</a></p>\n<p>Would it result the Patient if 'Patient.managingOrganization.identifier.value' is null but Organization has a identifier ?</p>",
        "id": 258191035,
        "sender_full_name": "Chidamber Kumar",
        "timestamp": 1634648895
    },
    {
        "content": "<p>The identifier modifier searches Reference.identifier, not Reference.resolve().identifier.</p>",
        "id": 258193876,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1634650006
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  for clarifying that.</p>",
        "id": 258195020,
        "sender_full_name": "Chidamber Kumar",
        "timestamp": 1634650468
    }
]