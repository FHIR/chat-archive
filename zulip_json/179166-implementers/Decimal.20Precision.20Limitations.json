[
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22655\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22655\">GF#22655</a> discusses problems with decimal precision - in this case, the limits of precision. There are implicit limits from the underlying definitions in json and xml, but we haven't formalised any restrictions or requirements in regard to the FHIR data type itself </p>\n<p>We could say things like:</p>\n<ul>\n<li>the number can't have more than 18 digits. </li>\n<li>the number can't have an exponent with more than 4 digits </li>\n<li>systems must support at least 10 digits of precision</li>\n</ul>\n<p>But what should say? Does anyone have any thoughts about this? </p>\n<p>Btw, the only place I know of where highly precise decimals really matter in healthcare is actually GPS locations.....</p>",
        "id": 174833813,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1567548260
    },
    {
        "content": "<p>Are you sure about GPS? On the 30th latitude, 7 digits, i.e. 0.000001 degrees of longitude, is accurate to about 1 cm. I don't think we need to  be this precise, nor is any of the commercial GPS systems able to deliver such accuracy. <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 174865124,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1567589217
    },
    {
        "content": "<p>yes, that's the only place I've ever seen 7 digits matter. elsewise....2-3 digits is the norm</p>",
        "id": 174920508,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1567629384
    },
    {
        "content": "<p>the actual computational limits are far outside that</p>",
        "id": 174920530,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1567629401
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  - are there any use cases for genomic data that require more precision?</p>",
        "id": 174972147,
        "sender_full_name": "John Silva",
        "timestamp": 1567689459
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194183\">@John Silva</span> Good point.  The primary numbers involved in genomics are locations and read counts.  Both are integers, but they can be outside the range supported by FHIR Integer.  In humans, the longest chromosome is 249 million base pairs.  I'd have to presume that some organisms can have chromosomes longer than that.  And, to identify variant location, we need absolute precision.  (Precision on read counts isn't so important.)  So in genetics, we'd need 9 digits for sure.  For some weird species maybe 10 or even 11 - I'm not sure what the longest chromosome in nature is and Google wasn't much help.  <span class=\"user-mention\" data-user-id=\"192198\">@Bob Freimuth</span> <span class=\"user-mention\" data-user-id=\"191916\">@ Bob Milius</span> ?</p>",
        "id": 174984434,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1567697081
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  That is an impossible question, choose 11 as a practical number. There is a physical upper limit (as evidenced here: <a href=\"https://www.cell.com/fulltext/S0092-8674(00)81891-7\" target=\"_blank\" title=\"https://www.cell.com/fulltext/S0092-8674(00)81891-7\">https://www.cell.com/fulltext/S0092-8674(00)81891-7</a>) but one cannot be sure that we've evaluated every species existent. If some future organism is found with a trillion nucleotides in a chromosome we'll have to reevaluate then. Additionally,  positional information can be given respective to a reference. If 11 is not enough, one can always create reference sequences with less than a trillion nucleotides, and thus not need the extra precision. Make sense? I recommend 11 and moving on.</p>",
        "id": 174985878,
        "sender_full_name": "Bret H",
        "timestamp": 1567697865
    },
    {
        "content": "<p>this is decimal or integer? Surely this is an integer question?</p>",
        "id": 175012940,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1567716183
    },
    {
        "content": "<p>Integer can't go that big.  The FHIR spec says if you need numbers that exceed a 32 bit integer, use decimal.  And a 250 million is more than a 32 bit integer can handle :)</p>",
        "id": 175013225,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1567716431
    },
    {
        "content": "<p>not so. max is 2,147,483,647</p>",
        "id": 175013384,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1567716543
    },
    {
        "content": "<p>You'd think I should know that...  Even read the spec and my brain twisted it.  Ok.  So that's enough for humans, but perhaps not quite big enough for the theoretical max.  As Bret H notes, there are potential workarounds for unusual organisms.  And the MolecularSequence does use integer for location information.  So I withdraw my concern.</p>",
        "id": 175013820,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1567716835
    },
    {
        "content": "<p>I would refer to <a href=\"https://en.wikipedia.org/wiki/Decimal64_floating-point_format\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Decimal64_floating-point_format\">IEEE decimal64</a> as the decimal datatype FHIR uses. It offers 16 significant digits and an exponent range of âˆ’383 to +384. The advantage is, that most programming languages have full support for decimal64. In Java one can use BigDecimal with MathContext.DECIMAL64. Besides a defined maximal precision, IEEE decimal64 also defines a rounding mode with is essential for correct computations.</p>\n<p>CQL uses a rather special fixed-point decimal format with max 20 digits in front of the point and max 8 digits after the point. On top of that the rounding mode isn't defined precisely.  I understand part of the reason for this, but it is a pain to implement it correctly. FHIR shouldn't go the CQL route in my opinion. <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span></p>",
        "id": 175044255,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1567757582
    },
    {
        "content": "<p>The FHIR spec requires precision to be represented and preserved: <a href=\"http://hl7.org/fhir/datatypes.html#primitive\" target=\"_blank\" title=\"http://hl7.org/fhir/datatypes.html#primitive\">http://hl7.org/fhir/datatypes.html#primitive</a>, and the FHIRPath/CQL Decimal type is consistent with that. Precision is important in the operations defined for FHIRPath and CQL, so the datatype has to support precision, at a minimum as specified in the base FHIR spec.</p>",
        "id": 175065377,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1567777383
    }
]