[
    {
        "content": "<p>The codesystem on <a href=\"https://terminology.hl7.org/2.1.0/CodeSystem-v2-0203.html\">https://terminology.hl7.org/2.1.0/CodeSystem-v2-0203.html</a> for identifierType contains the code <code>NNxxx </code> with the definition <code>National Person Identifier where the xxx is the ISO table 3166 3-character (alphabetic) country code</code> - that is sort of non-computable and cannot be verified by the validators since the validation set is not really a computable part of the codesystem</p>",
        "id": 256566092,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1633608525
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span></p>",
        "id": 256577206,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1633613387
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> Yes - \"sort of non-computable\" is rather an understatement! :)  This kind of shorthand template expression (not an actual code value!) appears fairly frequently in the V2 tables.  We went through all of this and should have cleaned all of it up in the V2 Tables Project in Vocabulary WG a while back.  I thought the cleaned up versions are what went into v2.9 and ultimately also in THO, but apparently I'm recalling that incompletely or incorrectly, as that's obviously not true in this case (maybe it could have just been missed?).  I'm pinging <span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> for his recollection and thoughts about what we should do to address it now.</p>",
        "id": 256581067,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1633614927
    },
    {
        "content": "<p>Sigh.   I have been trying to get the V2 group to fix this for YEARS.   My two proposed solutions were rejected.   If someone wants to put in a UTG ticket and we get the community to weigh in on Consensus Review maybe they can be embarrassed into adopting a fix.  This being represented as a code because people are either too lazy to enumerate and put in the pattern codes, or just put it in the code system description and as implementers to actually RTFM, needs to be decided and done.   Leaving it like this for decades is just idiocy.   BTW several code V2 systems have a code  value of \"...\" (ellipsis) for similar reasons.    It was removed and the V2 management group insisted that it be brought back.   Sigh.</p>",
        "id": 256604984,
        "sender_full_name": "Ted Klein",
        "timestamp": 1633623173
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>   We have the means to just fix it through the UTG process.  At this point I would recommend we just do it, or perhaps ask TSMG to tell us to just do it, and deal with the V2 Mgt group kvetching.</p>",
        "id": 256605331,
        "sender_full_name": "Ted Klein",
        "timestamp": 1633623282
    },
    {
        "content": "<p>This particular one in table 0203 was perhaps missed when we cleaned up the old \"HL7nnnn\" entry with was basically the same kind of issue.</p>",
        "id": 256606096,
        "sender_full_name": "Ted Klein",
        "timestamp": 1633623542
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span>  I'm in for whatever it takes to fix this. Do you need a JIRA from me or anything else?</p>",
        "id": 256617027,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1633627629
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> Yes, a Jira ticket - but not the ones you are used to putting in for FHIR it must be a ticket in the UTG ( Jira UP project).    Take a look at the information for Submitting Change Requests to HL7 terminology at <a href=\"https://confluence.hl7.org/display/VMAH/How+To+Submit+a+UTG+Change+Proposal\">https://confluence.hl7.org/display/VMAH/How+To+Submit+a+UTG+Change+Proposal</a>.   Things are all done through what are called 'UTG Proposals'.    For a more complete overview of how we are now maintaining vocabulary content in HL7, see the pages at <a href=\"https://confluence.hl7.org/display/VMAH/Vocabulary+Maintenance+at+HL7\">https://confluence.hl7.org/display/VMAH/Vocabulary+Maintenance+at+HL7</a>.  You will have to submit a request to be a Submitter (I process those).  Right now, unless special permission given by TSC, a Submitter must be an HL7 member in the HL7 member database.    There are slightly different rules for members of HL7 Affiliates.</p>",
        "id": 256733565,
        "sender_full_name": "Ted Klein",
        "timestamp": 1633697016
    },
    {
        "content": "<p>Im chair of HL7 DK so Im a member</p>",
        "id": 256733929,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1633697192
    },
    {
        "content": "<p>ROTFL!!</p>",
        "id": 256734913,
        "sender_full_name": "Ted Klein",
        "timestamp": 1633697654
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> - here you go -&gt; <a href=\"https://jira.hl7.org/browse/UP-242\">https://jira.hl7.org/browse/UP-242</a>. For the record, I've created this as a bug and not as a Change Request, as it is a bug according to my own terminology ;)</p>",
        "id": 256856573,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1633772692
    },
    {
        "content": "<p>And I've assigned the bug to you</p>",
        "id": 256856586,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1633772709
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> As this is a request to change the vocabulary content, it is a change request.  Sorry it is not clear what a 'bug' issue is; that is intended when the UTG workflow screens and process fail in some way.     It is scheduled to be removed as an issue type as we now have a different Jira project - HSCR - for the software change requests when bugs and deficiencies are found.</p>",
        "id": 256868136,
        "sender_full_name": "Ted Klein",
        "timestamp": 1633783984
    },
    {
        "content": "<p>Right now it is in a 'Dead End' state as we have no process for dealing with content issues that are entered as a Bug.   Thank you for pointing out that the Issue Type 'Bug' is confusing, improper, and should be removed as its very existence is, in face, a bug.    <span class=\"user-mention\" data-user-id=\"196635\">@Jessica Bota</span> <span class=\"user-mention\" data-user-id=\"196484\">@Joshua Procious</span> Let us get this removed asap if we can.</p>",
        "id": 256868393,
        "sender_full_name": "Ted Klein",
        "timestamp": 1633784239
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> As far as the content change to the v2 table content itself goes, you have two choices:   to create a UP ticket as a Change Request and include a BitBucket branch with the suggested/requested technical change to the XML content through the Draft A proposal function, or just create it with a Description asking that it be fixed and sent it to Waiting For Input with the Report A Problem transition.   The problem with that is we still do not have any HL7 process to get these fixed, as no HL7 resources are dedicated to or funded for content correction.    The only things assigned to me that get dealt with are software issues ad Jira tooling issues/</p>",
        "id": 256868691,
        "sender_full_name": "Ted Klein",
        "timestamp": 1633784454
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> its not a semantical change, it's syntax, so I'll still consider it a bug. Anyways, the reason why I looked at it in the first place is because I wanted a type for my identifer - in HL7 FHIR, not HL7 v2 so I looked at <a href=\"https://www.hl7.org/fhir/datatypes.html#Identifier\">https://www.hl7.org/fhir/datatypes.html#Identifier</a> and found the valueset type <code>extensible</code> bound  to <a href=\"https://www.hl7.org/fhir/valueset-identifier-type.html\">https://www.hl7.org/fhir/valueset-identifier-type.html</a> but not of the values in the valueset was the best fit for my case, so I naturally looked at the backing codesystem and found NNxxx, which at a semantic level fit my case. As such I don't see this as being bound to v2 only - it also affects FHIR, IMHO.</p>\n<p>I'm willing to do my share and submit a new ticket as a Change Request with a branch with the enriched Codesystem. Where's the repo located?</p>",
        "id": 256949471,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1633866962
    },
    {
        "content": "<p>Thanks.    All of the HL7 terminology, whether it was originally for V2 or CDA or whatever, will eventually be used in FHIR IMHO.  The labeling of it as v2 is really where it was imported from when we started THO/UTG a couple years ago.</p>",
        "id": 256962062,
        "sender_full_name": "Ted Klein",
        "timestamp": 1633878541
    },
    {
        "content": "<p>You will need to request Submitter permissions from the Confluence form on the pages describing Submitting a Change Request, and then clone a local copy from the Bitbucket master.    The xml file for the V2 code system underlying the table 0203 content is at .../input/sourceOfTruth/v2/codeSystems/cs-v2-0203.xml (the FHIR CodeSystem resource holding the code definitions).   The documentation is pretty good, if you get stuck I can help, or <span class=\"user-mention\" data-user-id=\"196635\">@Jessica Bota</span> (new incoming Vocabulary WG cochair).</p>",
        "id": 256962331,
        "sender_full_name": "Ted Klein",
        "timestamp": 1633878786
    },
    {
        "content": "<p><a href=\"https://confluence.hl7.org/display/VMAH/How+To+Submit+a+UTG+Change+Proposal\">https://confluence.hl7.org/display/VMAH/How+To+Submit+a+UTG+Change+Proposal</a></p>",
        "id": 256964647,
        "sender_full_name": "Ted Klein",
        "timestamp": 1633881071
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> Note that \"extensible\" means that if any of the codes apply (even if they don't provide the level of specificity you might like), you must use one of the provided codes.  (You are however free to send additional codings as translations with more or less specificity in additional to the mandated coding.)</p>",
        "id": 256967973,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1633884243
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> I know. I do however find that the codesystem needs to be fixed, regardless of the binding being extensible or not</p>",
        "id": 256983025,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1633898465
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> you do release that this will expand the codesystem with a factor of 3, right?</p>",
        "id": 256983687,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1633899151
    },
    {
        "content": "<p>That is the main reason the v2 folks declined to do it - when the code system was a published in a paper pdf document, this matters.   As a web page...not so much.   Take a look at the page for the expansion of the IPS value set - after 1000 codes the Publisher says it won't print more of them.    If you can do it, wonderful IMHO.   But as a change request for all non-ballot-bound code systems and value sets are subject to Consensus Review, the community may feel otherwise.   But I would MUCH rather have something complete and processable regardless if folks find it obnoxiously large.</p>",
        "id": 256984071,
        "sender_full_name": "Ted Klein",
        "timestamp": 1633899543
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 256984104,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1633899584
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span>  does the value of the concept Id's bear any special value in this partiuclar codesystem?</p>",
        "id": 256984325,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1633899742
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> here you are: <a href=\"https://bitbucket.hl7.org/projects/UTG/repos/utg/pull-requests/4/overview\">https://bitbucket.hl7.org/projects/UTG/repos/utg/pull-requests/4/overview</a></p>",
        "id": 257113138,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1633984239
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span>  You need to create a UP ticket and that branch need to be included in it.     Did you look at the instructions for Submitting a Change Request?   <span class=\"user-mention\" data-user-id=\"196635\">@Jessica Bota</span> did we ever document how to create a UP ticket where the BitBucket branch may have been created first, and outside of the ticket creation process?</p>",
        "id": 257122038,
        "sender_full_name": "Ted Klein",
        "timestamp": 1633989857
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> now I have: <a href=\"https://bitbucket.hl7.org/projects/UTG/repos/utg/pull-requests/5/overview\">https://bitbucket.hl7.org/projects/UTG/repos/utg/pull-requests/5/overview</a></p>",
        "id": 257154964,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634019602
    },
    {
        "content": "<p>(meaning that I've renamed the branch, pushed it, removed the old one,  created a jira ticket,  and linked the jira ticket to the branch)</p>",
        "id": 257177641,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634032841
    },
    {
        "content": "<p>ok you are almost there - you need to transition it to Draft state, make your changes to the resources (which looks like you may have done), commit and push them to the BitBucket branch.   If you do local IG builds, then build the IG and see it looks ok.    If you do not then Submit the proposal, and the UTG process will build the IG and check for errors.    If a problem, the ticket will go back to Draft state and you will be notified.  If ok, then it is part of the UTG machine and goes through the states as documented until done.   So you need to move the ticket through Draft and Submit.</p>",
        "id": 257190289,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634039929
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> how? Do I have permissions to do that?</p>",
        "id": 257206083,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634046729
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> , no we do not have a documented process for that. Last I recall, having a branch named differently than the auto-generated branch name was causing issues in the proposal. Happy to discuss and document if there is a repeatable process.</p>",
        "id": 257210380,
        "sender_full_name": "Jessica Bota",
        "timestamp": 1634048315
    },
    {
        "content": "<p>I can rename the branch to whatever you guys need</p>",
        "id": 257213855,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634049573
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> the reason we ask people to follow exactly the process outlined in the documentation is because we have Jira scripts and automation to do and help with various parts of the workflow.  So it is a pain if you are already familiar with Git and BitBucket and know what you are doing and seems nothing but trouble.  But is is needed, as syntactic elements of various created fields are used later in the process for Jira scripts, validation, voting, etc.    That having been said...I am not sure how to figure out what the automatically script-created name of the proposal that would have been created would be.   But we can attempt to push it through and see if something fails in the workflow...as instructed in the documentation, you do not automatically have permission to Submit a proposal.   This gets given by filling out the Confluence Form to request Submitter permissions on page <a href=\"https://confluence.hl7.org/display/VMAH/Get+Access+to+Jira+UTG+Proposal+Project\">https://confluence.hl7.org/display/VMAH/Get+Access+to+Jira+UTG+Proposal+Project</a>    Right now that is manually handled as the Jira scripts are not yet debugged; in the future, persons can ONLY submit proposals by using this form, as it will be automated.      In the interest of time I went ahead and processed you as if you had submitted form just now, but please submit it anyway, as data linked to the form macros is used for audit for Submitter requests, etc.    Now you should see two buttons on your ticket: Draft A Proposal, and Waiting for Input.    Since you already have designed the requested change, you should NOT click Waiting For Input (this is for if folks don't have all the information needed to create the XML for the changes).  Then click Draft A Proposal, and you should see a button to Submit it.  That takes your BitBucket branch content and validates it, processes it, does all kinds of scripting and processing, and then moves it to Consensus Review for community approval as a V2 proposal (which means persons identified by the V2 management group must be aware of the changes and weigh in on the requested change, along with others in the implementation and standards-writing HL7 community).    This is done as part of moving all non-structural terminology used in HL7 IGs out of ballot update cycles and into this new process for validation and publishing.   Kind of a lightweight balloting in some ways.    <span class=\"user-mention\" data-user-id=\"196635\">@Jessica Bota</span> did I cover everything here for Jens?    Let me know if you run into further problems.</p>",
        "id": 257254302,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634065137
    },
    {
        "content": "<p>you know, <span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> <span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> I could work around this in the terminology server with some special logic when validating, since any resolution of the definitions is likely to be messy. Ted, do we have a list of these things somewhere?</p>",
        "id": 257259634,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634067353
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  The issue is that many implementers just blindly import the entries from &lt;code&gt; into their servers never looking at the content.  I prefer leaving a gremlin to force the TSMG and management groups to actually fix the issue.   We have had an outstanding ticket to fix the issue in table 0396 for over a year...and for at least four years before that we have had complaints from implementers of v2 tables that entries like \"HL7nnnn\" and \"...\" were for human readers of pdf documents but they were shown as code entries and dutifully imported by techies.  When we converted to machine readable from PDF the problem became worse.    IMHO we need some kind of indicator or element or extension which can hold syntax definitions (e.g. hold BNF for instance) for those code systems which have grammars that permit any code consistent with the grammar to be conformant.    Such as IANA media types.  BCP-47.   UCUM, for that matter...    If we were not so busy doing other things, we would figure out and implement a general solution to this, which was explored in Vocabulary with David Markwell over 10 years ago.</p>",
        "id": 257292139,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634084720
    },
    {
        "content": "<p>well, we could do this: mark that those code systems have a grammar, and then user some extension to indicate what the grammar is for those elements, and then code up the renderers and validators to understand the codes</p>",
        "id": 257293142,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634085590
    },
    {
        "content": "<p>I don't think we need special logic in special places. We need transparent, operational codesystems and we need to fix what is broken</p>",
        "id": 257337842,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634118159
    },
    {
        "content": "<p>don't like grammar, huh?</p>",
        "id": 257342739,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634120811
    },
    {
        "content": "<p>grammar is fine, as long as it is computable</p>",
        "id": 257350068,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634125115
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> Not a problem with a system where the grammar allows only a few hundred codes, which is a simple matter of a bit of scripting to create them as pre-coordinated codes.    Much harder with a grammar where the numbers are not numerable (mediatypes, for instance), and may be millions.   The issue with the \"HL7nnnn\" requires about 700 new codes to be added.</p>",
        "id": 257352312,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634126322
    },
    {
        "content": "<p>Jens, did you assign UP-243 to me?   You should not have been able to do that, there must be a hitherto undiscovered bug in the workflow.   Assignee only should get assigned when entering Proposal Draft, otherwise in Environment Setup and Wating for Input, there should be only a Reporter.    We have entered a change request in the UTG Jira bug reporting system to fix this.   My curator workflow does not allow me to move the ticket through the workflow so by assigning it to me, you have essentially moved it into a dead end; nothing further will happen on the ticket.   You need to reassign it to yourself and move it through Draft A Proposal and Submit as described in the instructions.   <span class=\"user-mention\" data-user-id=\"196484\">@Joshua Procious</span> Jess and I put in an HSCR ticket to address this - it is a big problem with our workflow.</p>",
        "id": 257394471,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634142137
    },
    {
        "content": "<blockquote>\n<p>grammar is fine, as long as it is computable</p>\n</blockquote>\n<p>which existing grammar would you nominate as computable?</p>",
        "id": 257424797,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634153900
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> - yep I assigned it to you -and <span class=\"user-mention\" data-user-id=\"196484\">@Joshua Procious</span> reassigned it back to me ;)</p>",
        "id": 257439324,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634159765
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> I'm sorry but you need to carve it out in stone for me as I do not understand what I'm missing here. I've made a change request as mentioned on <a href=\"https://confluence.hl7.org/display/VOC/Draft+a+Proposal\">Draft a Proposal</a>. I've made sure my branch name is alligned with the change and Jira even shows this. What is it that I haven't done correctly? - followup question: why isn't my branch to be found here: <a href=\"https://build.fhir.org/ig/HL7/UTG/branches/\">https://build.fhir.org/ig/HL7/UTG/branches/</a></p>",
        "id": 257440640,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634160274
    },
    {
        "content": "<p>I've even made the pull request and assigned you as reviewer</p>",
        "id": 257440942,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634160407
    },
    {
        "content": "<p>Ah ok - the good thing is that you are showing where our documentation is insufficient.   The process is:   you create the ticket and document what is needed. Then you have a CHOICE:   if you know what needs to be done, you Draft A Proposal, which involves creating and linking the branch.  Then you MUST get an HL7 workgroup sponsor for the change, who must APPROVE your designed changes.  In your case, I think it can either be the International Council, or more rightly, the V2 Management group OR the INM (Infrastructure and Messaging) workgroup, which deals with things like this in V2.   They must APPROVE the change request, and the link to their minutes showing the approval decision must be put in the ticket.    Then you Submit, which sends it into the Curator workflow to run a FHIR build and validation, and check for errors in the context of all the content in the ci build.    If it builds cleanly (zero errors from the IG Publisher) then it gets transitioned to Consensus Review for tracked and audited voting by the team of Vocabulary Reviewers.     For Pro Forma proposals, it bypasses the voting as those are usually decided in ballot reconciliation, and the vote to approve is linked from there.  Then it goes to a QA review.</p>",
        "id": 257443913,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634161678
    },
    {
        "content": "<p>So for you, you need to click Draft a Proposal, add INM as sponsor and send the link to those cochairs asking that its approval be place on the agenda for their next conference call.  Then wait until they approve it (or change or modify it if they demand for approval), and then click Submit.  After that is the mostly automatic in the workflow (unless questions are asked in the Comments, which you need to respond to).</p>",
        "id": 257444186,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634161786
    },
    {
        "content": "<p>It is a pretty formal process now, as you see.</p>",
        "id": 257444297,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634161816
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179166-implementers/topic/Buggy.20codesystem/near/257293142\">said</a>:</p>\n<blockquote>\n<p>well, we could do this: mark that those code systems have a grammar, and then user some extension to indicate what the grammar is for those elements, and then code up the renderers and validators to understand the codes</p>\n</blockquote>\n<p>I really like this idea.</p>",
        "id": 257500091,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1634200974
    },
    {
        "content": "<p>I am very much in support of this.    But if we want to do it well and comprehensively, we need a way to define the grammars in a machine processable wy in a single place so the all servers and processing handles it the same way.  Couple ways to do this, but none are trivial.</p>",
        "id": 257537836,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634219308
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> should we schedule a short meeting? I still fail to understand what I'm missing here:</p>\n<blockquote>\n<p>The process is: you create the ticket and document what is needed</p>\n</blockquote>\n<p>Done, thats <a href=\"https://jira.hl7.org/browse/UP-243\">https://jira.hl7.org/browse/UP-243</a></p>\n<blockquote>\n<p>Then you MUST get an HL7 workgroup sponsor for the change, who must APPROVE your designed changes</p>\n</blockquote>\n<p>Well ... ain't that the reason that we have and use pull requests for. It is right here: <a href=\"https://bitbucket.hl7.org/projects/UTG/repos/utg/pull-requests/5/overview\">https://bitbucket.hl7.org/projects/UTG/repos/utg/pull-requests/5/overview</a></p>\n<blockquote>\n<p>Then you Submit, which sends it into the Curator workflow to run a FHIR build and validation, and check for errors in the context of all the content in the ci build.</p>\n</blockquote>\n<p>Wait what? What is it that I haven't submitted?</p>",
        "id": 257585118,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634237191
    },
    {
        "content": "<p>I've now added Craig Newman (V2 Management Group), Peter Jordan (IC) and Anthony Julian (InM) as reviewers on the PR. Anyone of them can approve the PR and anyone of them can decline it</p>",
        "id": 257585876,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634237481
    },
    {
        "content": "<blockquote>\n<p>we need a way to define the grammars in a machine processable wy in a single place so the all servers and processing handles it the same way</p>\n</blockquote>\n<p>I don't really believe in that. a meta-language for grammars... too much. Even for v2. But do we have a list of all the v2 codes that work like this? Maybe it's acheivable just for those... but I'm still not sure it's worth it</p>",
        "id": 257588271,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634238452
    },
    {
        "content": "<p>that's why I propose to document them in narrative and just identify them computably</p>",
        "id": 257588347,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634238482
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> - you might wanna have an extra more careful look at the bitbucket authorization stuff as I seems like I can just bypass all this and just press \"merge\" - thereby bypassing the ENTIRE process.</p>\n<p><a href=\"/user_uploads/10155/D7y8az-ch8SNBbrAs_K8HV2E/Screenshot-2021-10-14-at-21.11.09.png\">Screenshot-2021-10-14-at-21.11.09.png</a> Screenshot 2021-10-14 at 21.11.09</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/D7y8az-ch8SNBbrAs_K8HV2E/Screenshot-2021-10-14-at-21.11.09.png\" title=\"Screenshot-2021-10-14-at-21.11.09.png\"><img src=\"/user_uploads/10155/D7y8az-ch8SNBbrAs_K8HV2E/Screenshot-2021-10-14-at-21.11.09.png\"></a></div>",
        "id": 257589395,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634238895
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  agree that will achieve something for the less than 5% of things having this problem (maybe even fewer) with less Tham 5% (maybe less) of the required effort.</p>",
        "id": 257630914,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634259949
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> ok - I think I see what you do not understand.   In UTG BItBucket is ONLY a convenient place for Submitters to assemble their content.    Nothing in BitBucket goes into the THO release until lots of other tooling run by the curator and the consensus and notification process of and to the HL7 Reviewer pool gets done, then audit trail history records are created and validated, and only THEN does it get applied against the source of truth for the ci build - which is NOT built from the BitBucket content.    The master of the BitBucket content is OVERWRITTEN on every ci build update.  So if you think you want to be clever and bypass all this stuff that is unknown to you, all your work will simply be overwritten and lost.</p>",
        "id": 257631203,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634260194
    },
    {
        "content": "<p>I think you do not want that.</p>",
        "id": 257631209,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634260199
    },
    {
        "content": "<p>The branch in BitBucket is NOT manually pulled to process the changes; tooling does that, managed through the JIRA process.    If you do not want to run the Jira workflow, then we have no facility to get your requested content into THO.  Full Stop.</p>",
        "id": 257631376,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634260312
    },
    {
        "content": "<p>On the top of the Jira ticket screen for your ticket there should be a button labeled \"Draft a Proposal\".  If you do not trigger this, your changes will never get looked at or processed by anyone, and they will be overwritten as BitBucket is a scratchpad temporary environment.</p>",
        "id": 257631474,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634260387
    },
    {
        "content": "<p>Once in Draft, you will see a button \"Submit\" on the top of the ticket screen.   This is what starts the machinery to process the changes.  If you do not trigger this workflow, the ticket will stay there forever, and eventually it will be deleted probably.</p>",
        "id": 257631589,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634260466
    },
    {
        "content": "<p>The CTO and TSC chair at HL7 have directed that all change requests for any HL7 Terminology published in THO be reviewed and approved by an HL7 workgroup before Submit to UTG for incorporation.   If a Submitter feels circumstances warrant it, a petition directly to the TSC chair can be made to waive this.</p>",
        "id": 257631733,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634260577
    },
    {
        "content": "<p>The key thing you seem to be missing is that BitBucket is just a temporary scratchpad environment to create the changes in context; all the real works happens in Jira, and the processes triggered through Jira.</p>",
        "id": 257632037,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634260809
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/nT4sweVNdXoxOniX96QwKPf6/Screen-Shot-2021-10-14-at-9.22.26-PM.png\">Screen-Shot-2021-10-14-at-9.22.26-PM.png</a> Screen Shot 2021-10-14 at 9.22.26 PM.png</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/nT4sweVNdXoxOniX96QwKPf6/Screen-Shot-2021-10-14-at-9.22.26-PM.png\" title=\"Screen-Shot-2021-10-14-at-9.22.26-PM.png\"><img src=\"/user_uploads/10155/nT4sweVNdXoxOniX96QwKPf6/Screen-Shot-2021-10-14-at-9.22.26-PM.png\"></a></div>",
        "id": 257632282,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634261031
    },
    {
        "content": "<p>Note that on my screen there I have a bunch of admin functions on top and in the dropdown that you will not see.  What you WILL see is Draft A Proposal, which you must execute to start the process.</p>",
        "id": 257632410,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634261118
    },
    {
        "content": "<p>well, <span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> can we get a full list easily?</p>",
        "id": 257635748,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634264117
    },
    {
        "content": "<p>no idea how.  I know of the one in table 0396, and the one Jens pointed out in 0203.  I know there are others, but other than eyeballing the content of each one, I have no clue how to recognize it.  Any &lt;code&gt; values that are an ellipsis (\"...\") would be an indication of one, but not an absolute signpost.</p>",
        "id": 257637148,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634265376
    },
    {
        "content": "<p>I think one of those used in the v2 TQ datatype for repeat patterns might be one...</p>",
        "id": 257637181,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634265423
    },
    {
        "content": "<p>my list:</p>",
        "id": 257638948,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634267043
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>#0354\n RTB_Knn : Message structure\n QBP_Qnn : Message structure\n\n#0396\n IBTnnnn: ISBT 128 codes where nnnn  specifies a specific table within ISBT 128\n HL7nnnn: Health Level Seven defined table of codes, where nnnn is the HL7 table number\n ISOnnnn: ISO Defined Codes where nnnn is the ISO table number.\n X12Dennnn: value=&quot;ASC X12 Code List nnnn\n\n#0203\n NNxxx: National Person Identifier where the xxx is the ISO table 3166 3-character (alphabetic) country code\n\n#0066\n ...:  see chapter 6\n\n#0200\n ...: No suggested values defined\n\n#0291\n ...: Source RFC 2046\n\n#0359\n 2 ...: For ranked secondary diagnoses\n ...: No suggested values defined\n\n#0365\n ...: (null) No state change\n\n#0366\n ...: (null) No state change\n\n#0367\n ...: (null) No level change\n\n#0418\n ...: No suggested values defined\n\n#0466\n ...: No suggested values defined\n\n#0487\n ...: No suggested values defined\n\n#0544\n ...: No suggested values defined\n</code></pre></div>",
        "id": 257638964,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634267047
    },
    {
        "content": "<p>in all cases, nnnn is replaced with a code from a value set. So we could define a value set that extends the code by replacing the suffix (and maybe standardise the suffix). This would work fine for the nn/xx ones. I don't think any of the ... are controlled grammars that this logic applies to - they're all something else</p>",
        "id": 257639021,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634267117
    },
    {
        "content": "<p>without delving into seeing if that covers all I think you have them - certainly the worst offenders.   That is a good machine processable solution...</p>",
        "id": 257683938,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634298000
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> thanks for bearing with me. I've found the button for \"Draft a proposal\"</p>",
        "id": 257693572,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634302862
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/H0itKpCn3mpKsxs9qhsCyzlW/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/H0itKpCn3mpKsxs9qhsCyzlW/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/H0itKpCn3mpKsxs9qhsCyzlW/image.png\"></a></div>",
        "id": 257693629,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634302884
    },
    {
        "content": "<p>in regards to the sponsor approval date. Should I reach out to the sponsor here beforehand of pressing submit?</p>",
        "id": 257693758,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634302923
    },
    {
        "content": "<p>(and ... I do have a lot of feedback for your flow if you're interested. From a software dev perspective, it seems funky that you use the bitbucket repo as just a scratchpad and not the actual place to deal with changes and change proposals, using pull requests and so on - the current process ain't that friendly for people that actually brings the changesets as part of the jira ticket).</p>",
        "id": 257694154,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634303097
    },
    {
        "content": "<p>it is to allow the entire community free access to work on their proposals, but to completely protect the actual HL7 source of truth where only a couple of admins have access to it.    And Submit will give you an error without a Sponsor and Approval date.</p>",
        "id": 257696226,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634304027
    },
    {
        "content": "<p>UTG was designed for primarily non-development people who used to submit change proposals as vague and ambiguous Word documents, then complain when the dev team implemented what they interpreted which was different than what the non-techie wrote.   Now the Submitter creates and can build exactly what they want, and all the HL7 tech staff do is create the audit entries and merge it to the main Git repo.</p>",
        "id": 257696541,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634304168
    },
    {
        "content": "<p>HL7 has ZERO funded tech resources for content development work.</p>",
        "id": 257696660,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634304226
    },
    {
        "content": "<p>That can be guarded on the bitbucket repo as well. You dont need a second repo for that</p>",
        "id": 257714694,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634311013
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> - <a href=\"https://confluence.atlassian.com/bitbucketserver050/using-branch-permissions-913474668.html\">https://confluence.atlassian.com/bitbucketserver050/using-branch-permissions-913474668.html</a></p>",
        "id": 257715784,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634311435
    },
    {
        "content": "<p>see <a href=\"https://jira.hl7.org/browse/UP-244\">https://jira.hl7.org/browse/UP-244</a></p>",
        "id": 257753861,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634327164
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> Correct.  But three years ago when this was a fully explored and the system architected, the decision was made to use separate repos.  You may want to look over the architecture documents for UTG/THO.</p>",
        "id": 257756618,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634328180
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> - but anything could be changed, right? - I mean if the actual source of truth is here (right?): <a href=\"https://github.com/HL7/UTG\">https://github.com/HL7/UTG</a> - I might as well do the pull request there and save someone the work, and then link to that PR in the jira.</p>",
        "id": 257817509,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634376583
    },
    {
        "content": "<p>if you do that, your branch will be ignored.  BitBucket is used as the intermediary scratchpad location for builds and merges and implementing.    Your content will become stale rapidly, and be overwritten or erased in a relatively short period of time.</p>",
        "id": 257852603,
        "sender_full_name": "Ted Klein",
        "timestamp": 1634410281
    }
]