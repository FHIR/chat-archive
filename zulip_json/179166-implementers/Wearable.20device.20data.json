[
    {
        "content": "<p>Hi all, I'm new to implementing FHIR. </p>\n<p>I have a bunch of smartwatch data generated from Garmin. It includes 13 different metrics passively tracked daily, like daily summaries, pulseOx, sleep, stress, automatic activity detection, and recorded activities. I'm looking at the list of FHIR Resources and it seems that Observation is the best/maybe only resource that fits with these. However is the resource enough to cover these 13 categories/does anybody have advice for a beginner in how to get started converting all the data to FHIR? I couldn't find any official extensions or profiles specifically for passive smartwatch data.</p>",
        "id": 225938248,
        "sender_full_name": "Jeannie Huang",
        "timestamp": 1613007244
    },
    {
        "content": "<p>A related github repo:<br>\n<a href=\"https://github.com/microsoft/iomt-fhir\">https://github.com/microsoft/iomt-fhir</a></p>",
        "id": 225941519,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1613010434
    },
    {
        "content": "<p>They will likely all be Observations, with the possible exception of recorded activities which could theoretically live in Procedure.  There is a standard profile for pulseOx (<a href=\"https://www.hl7.org/fhir/oxygensat.html\">https://www.hl7.org/fhir/oxygensat.html</a>).  The others would probably be similar.  You'll have a separate observation instance for each.  If you're capturing regularly sampled intervals, you might look at using the <a href=\"https://www.hl7.org/fhir/datatypes.html#SampledData\">SampledData</a> data type.</p>",
        "id": 225944840,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613014284
    },
    {
        "content": "<p>in oxygensat, should i expect <a href=\"https://www.hl7.org/fhir/oxygensat-definitions.html#oxygensat.Observation.code.coding:OxygenSatCode\">https://www.hl7.org/fhir/oxygensat-definitions.html#oxygensat.Observation.code.coding:OxygenSatCode</a> to give me a set of codings for SpO2 readings?</p>",
        "id": 225958822,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1613031031
    },
    {
        "content": "<p>I guess that if a singleton Obs looked like:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span> <span class=\"nt\">\"resourceType\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Observation\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"status\"</span><span class=\"p\">:</span> <span class=\"s2\">\"final\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"nt\">\"coding\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span> <span class=\"nt\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://loinc.org\"</span><span class=\"p\">,</span> <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"59417-6\"</span><span class=\"p\">,</span> <span class=\"p\">}</span>\n  <span class=\"p\">]</span> <span class=\"p\">},</span>\n  <span class=\"nt\">\"effectiveInstant\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2013-04-02T10:30:10+01:00\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"valueQuantity\"</span><span class=\"p\">:</span>\n    <span class=\"p\">{</span> <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"mi\">12</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"kPa\"</span><span class=\"p\">,</span> <span class=\"nt\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://unitsofmeasure.org\"</span> <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>that a SampleData analog would look like:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span> <span class=\"nt\">\"resourceType\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Observation\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"status\"</span><span class=\"p\">:</span> <span class=\"s2\">\"final\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"nt\">\"coding\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span> <span class=\"nt\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://loinc.org\"</span><span class=\"p\">,</span> <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"59417-6\"</span><span class=\"p\">,</span> <span class=\"p\">}</span>\n  <span class=\"p\">]</span> <span class=\"p\">},</span>\n  <span class=\"nt\">\"effectivePeriod\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"start\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2013-04-02T10:30:10+01:00\"</span><span class=\"p\">,</span> <span class=\"nt\">\"end\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2013-04-02T12:00:10+01:00\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"valueSampledData\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"origin\"</span><span class=\"p\">:</span>\n      <span class=\"p\">{</span> <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"mi\">12</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"kPa\"</span><span class=\"p\">,</span> <span class=\"nt\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://unitsofmeasure.org\"</span> <span class=\"p\">},</span>\n    <span class=\"nt\">\"period\"</span><span class=\"p\">:</span> <span class=\"mi\">600000</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"dimensions\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"s2\">\"12.3 12.2 12.4 12.4 12.1 12.2 12.4 12.4 12.1 11.9\"</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>where the end of the effectivePeriod would equal the start + (data items * period / dimensions)</p>",
        "id": 225991440,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1613051150
    },
    {
        "content": "<p>I imagine this isn't meant for structure data, e.g. streaming BP readings</p>",
        "id": 225991990,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1613051391
    },
    {
        "content": "<p>(unless the structure was homogeneous so you were able to hide the cardinality of the structure in the dimension. e.g.</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"nt\">\"dimension\"</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span>\n<span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"s2\">\"140 90 150 100 150 90\"</span>\n</code></pre></div>\n<p>)</p>",
        "id": 225992726,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1613051670
    },
    {
        "content": "<p>For BP, you'd have an Observation with two components and a sampledData for each.</p>",
        "id": 226007726,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613057473
    },
    {
        "content": "<p>Interesting, instead of an array of tuples, it's two arrays of scalar values</p>",
        "id": 226059657,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1613078482
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179166-implementers/topic/Wearable.20device.20data/near/225944840\">said</a>:</p>\n<blockquote>\n<p>They will likely all be Observations, with the possible exception of recorded activities which could theoretically live in Procedure.  There is a standard profile for pulseOx (<a href=\"https://www.hl7.org/fhir/oxygensat.html\">https://www.hl7.org/fhir/oxygensat.html</a>).  The others would probably be similar.  You'll have a separate observation instance for each.  If you're capturing regularly sampled intervals, you might look at using the <a href=\"https://www.hl7.org/fhir/datatypes.html#SampledData\">SampledData</a> data type.</p>\n</blockquote>\n<p>Thanks for your answer Lloyd. If I want to represent resp rate taken at regular 1 minute intervals, can I used the SampledData data type within the resp rate resource? I only see valueQuantity which is just one data point @ <a href=\"http://hl7.org/fhir/R4/resprate.html\">http://hl7.org/fhir/R4/resprate.html</a>. Or would the sampledData instead go into the component attribute?</p>",
        "id": 226896332,
        "sender_full_name": "Jeannie Huang",
        "timestamp": 1613689006
    },
    {
        "content": "<p>The oxygensat profile isn't set up to allow continuous measurements.  I'd do two things:</p>\n<ol>\n<li>Submit a change request calling that out and asking either for valueSampledData to be allowed within the profile, or to call out continuous measures as an exception to the requirement to use the profile</li>\n<li>Proceed on the basis that the change request is accepted (because it'll have to be one way or the other).</li>\n</ol>",
        "id": 226899323,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613690709
    },
    {
        "content": "<p>For strava import I modeled this as a FHIR Transaction/Message Bundle (roughly based on HL7v2 ORU_R01 unsolicited-observations), with the activity mapping to FHIR DiagnosticReport and the summary values as Observations.</p>",
        "id": 226937243,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1613725924
    }
]