[
    {
        "content": "<p>Why is it necessary to submit a task in order to have a typo fixed in the spec? It seems a bit counterproductive</p>",
        "id": 173665573,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566313007
    },
    {
        "content": "<p>could the spec be put on a git repo and the people could make PR's in an instant for such small details</p>",
        "id": 173665633,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566313056
    },
    {
        "content": "<p>You could submit a task to improve procedure... ;p</p>",
        "id": 173665989,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1566313260
    },
    {
        "content": "<p>thats almost funny ...</p>",
        "id": 173683586,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566326246
    },
    {
        "content": "<p>git is probably known as one of the most successful collaboration tools out there ... why not join in on that, making it a lot easier to add contributions?</p>",
        "id": 173683688,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566326326
    },
    {
        "content": "<p>and ... Github and friends makes it pretty easy to make contributions while keeping transparency</p>",
        "id": 173684307,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566326789
    },
    {
        "content": "<p>I'm confused.  Are you talking about something other than the spec that is here: <a href=\"https://github.com/hl7/fhir\" target=\"_blank\" title=\"https://github.com/hl7/fhir\">https://github.com/hl7/fhir</a> ?</p>",
        "id": 173686052,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1566327835
    },
    {
        "content": "<p>The spec is on github: <a href=\"https://github.com/HL7/fhir\" target=\"_blank\" title=\"https://github.com/HL7/fhir\">https://github.com/HL7/fhir</a> and we do use PRs to make actual changes to it. But because the specification is an HL7 standard, changes made have to be approved following the standards required by HL7, so for that process we use gforge.</p>",
        "id": 173686149,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1566327888
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> so you are saying that if I actually did a PR on github, it would not be processed unless I created a gforge task, right?</p>",
        "id": 173777131,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566379018
    },
    {
        "content": "<p>Someone would have to create it - and we certainly prefer it be created by the person who's asking for the change/correction</p>",
        "id": 173787274,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566389363
    },
    {
        "content": "<p>So ... a git webhook that automatically created a gforge task referring the PR could probably do the trick, right? (<span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> )</p>",
        "id": 173794323,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566394652
    },
    {
        "content": "<p>Does this API reflect the capabilities of the HL7 Gforge? <a href=\"https://next.gforge.com/apidoc\" target=\"_blank\" title=\"https://next.gforge.com/apidoc\">https://next.gforge.com/apidoc</a></p>",
        "id": 173795982,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566395727
    },
    {
        "content": "<p>Two challenges:<br>\n- extracting the mandatory gForge metadata from the Git PR (e.g. what page or resource does it apply to)<br>\n- converting between Github user id and gForge registered user</p>\n<p>I'm not sure we're on the current version of gForge.  Also, I hope for us to be <em>off</em> gForge in the next 6-8 weeks, so I'm not sure there's a lot of value in doing that.  Playing around with Jira is probably a better time investment (though the same issues as above will still be there).</p>",
        "id": 173798247,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566397280
    },
    {
        "content": "<p>Developing a GH PR -&gt; Jira Request interface would be a great project though, for someone who wanted to \"bridge\" from \"convenient developer experience\" to \"formal HL7 process requirements.\" (An even better project would be getting HL7 to \"deem\" certain GH PRs as an acceptable place for us to review/approve issues.</p>",
        "id": 173798766,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566397637
    },
    {
        "content": "<p>1) Default to use the current defaults when creating a new tracker item<br>\n2) create a new user on Gforge that matches you github creds.</p>\n<p>I as a developer am lazy - yet I like to contribute with my findings, meaning: I would like to do the PRs to the existing material, using the usual dev tools.</p>",
        "id": 173798773,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566397646
    },
    {
        "content": "<p>Would definitely encourage you to experiment with what you can connect/integrate!</p>",
        "id": 173798996,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566397778
    },
    {
        "content": "<blockquote>\n<p>Developing a GH PR -&gt; Jira Request interface would be a great project though, for someone who wanted to \"bridge\" from \"convenient developer experience\" to \"formal HL7 process requirements.\" (An even better project would be getting HL7 to \"deem\" certain GH PRs as an acceptable place for us to review/approve issues.</p>\n</blockquote>\n<p>The funny thing is here that making the process cumbersome by not using eg. GH, means that valuable input never reach the standard due to laziness.</p>",
        "id": 173799012,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566397784
    },
    {
        "content": "<p>Agreed 100%.</p>",
        "id": 173799035,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566397799
    },
    {
        "content": "<blockquote>\n<p>Would definitely encourage you to experiment with what you can connect/integrate!</p>\n</blockquote>\n<p>its 2019 ... there's a tesla circling around the planet ... it shouldn't be impossible to do</p>",
        "id": 173799126,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566397822
    },
    {
        "content": "<p>1. There are no defaults.  And gForge doesn't enforce HL7's rules that say \"you must pick at least one page or resource\" - instead that's done by a manual report after the fact and badgering submitters or fixing it for them (because gForge sucks).  I don't want an automated process that increases that workload</p>",
        "id": 173799128,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566397823
    },
    {
        "content": "<p>From personal experience though: trying to automate GForge tasks is a huge pain. <a href=\"https://github.com/jmandel/csv-to-fhir-tracker/blob/master/drive-gforge.py\" target=\"_blank\" title=\"https://github.com/jmandel/csv-to-fhir-tracker/blob/master/drive-gforge.py\">https://github.com/jmandel/csv-to-fhir-tracker/blob/master/drive-gforge.py</a> has what I put together for loading ballots...</p>",
        "id": 173799147,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566397837
    },
    {
        "content": "<p>2. Not kosher.  If a user already has a gForge id, that's the id the item needs to be tied to.</p>",
        "id": 173799153,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566397843
    },
    {
        "content": "<p>Otherwise, filtering for \"my\" items, permissions about editing, etc. get messed up (and will be worse in Jira)</p>",
        "id": 173799205,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566397877
    },
    {
        "content": "<p>Lloyd, I think we could look a bit more expansively at what the process allows. Let's talk through this a bit in FMG if we have time today. At least from the brainstorming perspective.</p>",
        "id": 173799210,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566397881
    },
    {
        "content": "<blockquote>\n<p>2. Not kosher.  If a user already has a gForge id, that's the id the item needs to be tied to.</p>\n</blockquote>\n<p>laziness would probably make me create a new gforge id</p>",
        "id": 173799216,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566397887
    },
    {
        "content": "<p>My two cents are: make it dev friendly to submit content. That is all</p>",
        "id": 173799312,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566397932
    },
    {
        "content": "<p>Dixi</p>",
        "id": 173799342,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566397961
    },
    {
        "content": "<p>I'm happy for us to explore a process to make this work with Jira.  I'm not much interested in trying to make it work now with gForge.</p>\n<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> I'm not sure that pull requests against HL7's source (which doesn't necessarily have clear logical correspondence with published content) is super developer friendly.  I'm not opposed to enabling that (in Jira) for those that want to, but I certainly expect the majority of feedback to come without a pull request.</p>",
        "id": 173799428,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566398033
    },
    {
        "content": "<p>actually, I'll process pure typos as GH PRs without needing gforge tasks. But only pure typos . Otherwise, please join the refrain: <em>we hate gForge</em>.  But honestly, I don't see how Jira will really make a difference here; you aren't going to have the metadata about the work from a github PR to feed into the HL7 process</p>",
        "id": 173825858,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566416407
    },
    {
        "content": "<p>Great -- just confirmed Grahame's process on our weekly <a class=\"stream\" data-stream-id=\"179192\" href=\"/#narrow/stream/179192-fmg-.28members-only.29\">#fmg (members only)</a> call. So if you have a simple typo fix, just go ahead and create a PR. (But keep in mind that many things that <em>look</em> like simple typos can be deeper / more complex, originating from generated code rather than hand-authored content.)</p>",
        "id": 173831212,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566420914
    },
    {
        "content": "<p>also, we get lots of 'typos' that are not typos at all; they are readers misunderstanding what is being said</p>",
        "id": 173831397,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566421085
    },
    {
        "content": "<p>It's not clear that for normative elements, we can do this.  I think ANSI rules require us to have clear traceability for all changes - and gForge/Jira is our traceability mechanism.  If we're going to allow an alternative process, we're going to need to get it cleared by both the TSC and Karen.</p>",
        "id": 173831484,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566421173
    },
    {
        "content": "<p>For STU stuff it's not a big deal.  (And for draft stuff, it's always been \"fix at will\" - typo or not.)</p>",
        "id": 173831505,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566421201
    },
    {
        "content": "<p>(And if we're going to have different rules for content with different statuses, we'll need to ensure the process includes evaluation of the status before changes are applied - and figure out whether that added complexity is going to be confusing to those who want to use the process - particularly as more content becomes normative.)</p>",
        "id": 173831642,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566421309
    },
    {
        "content": "<blockquote>\n<p>It's not clear that for normative elements, we can do this.  I think ANSI rules require us to have clear traceability for all changes - and gForge/Jira is our traceability mechanism.  If we're going to allow an alternative process, we're going to need to get it cleared by both the TSC and Karen.</p>\n</blockquote>\n<p>Who defines what constitutes the accepted traceability mechanism here? The ones bringing the content of the standard or the curators of the standard?</p>",
        "id": 173832227,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566421865
    },
    {
        "content": "<p>HL7 - the organization that is the custodian of the standard and is accountable to ANSI for the process.</p>",
        "id": 173832335,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566421963
    },
    {
        "content": "<p>And they like to keep their typo's regardless of how easy it ought to be to fix it?</p>",
        "id": 173832404,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566422021
    },
    {
        "content": "<p>They like to ensure that the process to make changes adhere's to what they've agreed with ANSI they will follow and meets ANSI's requirements.</p>",
        "id": 173832515,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566422109
    },
    {
        "content": "<p>And yes, they'd rather have typos than fall outside of ANSI's rules</p>",
        "id": 173832525,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566422123
    },
    {
        "content": "<p>How would a PR fall outside the rules?</p>",
        "id": 173832543,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566422149
    },
    {
        "content": "<p>Its fully traceable</p>",
        "id": 173832591,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566422164
    },
    {
        "content": "<p>It requires a distinct set of people to accept it</p>",
        "id": 173832617,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566422182
    },
    {
        "content": "<p>It's a question of how it's traceable, who approves it, how it manifests to the \"approval pool\", etc.</p>",
        "id": 173832629,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566422195
    },
    {
        "content": "<p>thats seems possible in PR's</p>",
        "id": 173832665,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566422233
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> You should look at HL7's requirements and see if your proposal meets the traceability rules.  tl;dr - it might, but it needs to be clearly documented so that HL7 can answer any questions that are asked when ANSI audits us to ensure openness and traceability.</p>",
        "id": 173832666,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1566422235
    },
    {
        "content": "<p>That's not to say we can't find a way to make PRs work, but it's not as simple as us just saying \"let's do it\".</p>",
        "id": 173832676,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566422241
    },
    {
        "content": "<p><a href=\"http://www.hl7.org/documentcenter/public/procedures/HL7_Essential_Requirements.pdf\" target=\"_blank\" title=\"http://www.hl7.org/documentcenter/public/procedures/HL7_Essential_Requirements.pdf\">http://www.hl7.org/documentcenter/public/procedures/HL7_Essential_Requirements.pdf</a></p>",
        "id": 173832772,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1566422301
    },
    {
        "content": "<p>I find it hard to believe that I'm the first one to suggest this</p>",
        "id": 173832776,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566422306
    },
    {
        "content": "<p>And if we decide to have PRs to normative content (which requires strict traceability), without also capturing information in gForge Jira, there's administrative complexities about managing our documentation of changes and approvals.  We'd have to balance the trade-offs of that with the benefit of accepting PRs</p>",
        "id": 173832845,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566422376
    },
    {
        "content": "<blockquote>\n<p>And if we decide to have PRs to normative content (which requires strict traceability), without also capturing information in gForge Jira, there's administrative complexities about managing our documentation of changes and approvals.  We'd have to balance the trade-offs of that with the benefit of accepting PRs</p>\n</blockquote>\n<p>you don't believe you have strict traceability in git?</p>",
        "id": 173832966,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566422451
    },
    {
        "content": "<p>PRs work best when the developer is working with the content that needs to be fixed.  In this case, what the developer sees is HTML, generated schemas, generated code, etc.  There can be a long (and complicated) walk from there to the source.  So it's not a path we would expect to be tread by many.</p>",
        "id": 173832972,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566422459
    },
    {
        "content": "<blockquote>\n<p>PRs work best when the developer is working with the content that needs to be fixed.  In this case, what the developer sees is HTML, generated schemas, generated code, etc.  There can be a long (and complicated) walk from there to the source.  So it's not a path we would expect to be tread by many.</p>\n</blockquote>\n<p>thats another problem ... but essentially a detail</p>",
        "id": 173833021,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566422513
    },
    {
        "content": "<p>Traceability means \"what reports do the ANSI folks look at to see what content was changed in the published specification, why, and by whom and with what oversight\".   Pull requests don't directly answer those questions because they aren't documented in terms of the published spec, they're documented in terms of the source.  They don't capture oversight in the way HL7 typically does either (i.e. what WG voted to approve).</p>",
        "id": 173833131,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566422602
    },
    {
        "content": "<p>Again, we're not saying \"no\".  We're saying \"it's not as straight-forward is you might hope\" :)</p>",
        "id": 173833155,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566422634
    },
    {
        "content": "<p>git blame ...</p>",
        "id": 173833205,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566422649
    },
    {
        "content": "<p>Git blame is a user thing - not an \"organization\" thing</p>",
        "id": 173833247,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566422711
    },
    {
        "content": "<p>I might approve a pull request - but on behalf of which work group did I do that?</p>",
        "id": 173833265,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566422733
    },
    {
        "content": "<p>users makes the standard</p>",
        "id": 173833268,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566422735
    },
    {
        "content": "<p>Not in HL7.  Work groups make the standard.  Work groups are the basis of authority for making changes.</p>",
        "id": 173833289,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566422761
    },
    {
        "content": "<p>work groups consists of users</p>",
        "id": 173833336,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566422779
    },
    {
        "content": "<p>Individuals are responsible for applying the will of the work group.</p>",
        "id": 173833338,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566422781
    },
    {
        "content": "<p>The same user might be part of multiple work groups.</p>",
        "id": 173833368,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566422794
    },
    {
        "content": "<p>good for him - then make a user that reflects that group</p>",
        "id": 173833424,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566422832
    },
    {
        "content": "<p>this is not entirely fruitful ...</p>",
        "id": 173833508,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566422898
    },
    {
        "content": "<p>ANSI rules around normative content are - rightfully - strict. </p>\n<ul>\n<li>you have to have an open transparent documented process</li>\n<li>you have to do what you say, and say what you do</li>\n<li>you have to be able to prove that to us</li>\n</ul>\n<p>That seems pretty reasonable to me. So, no, it's not a simple open source process where you can just do things. I haven't approved a typo in normative content before this.</p>",
        "id": 173833646,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566423018
    },
    {
        "content": "<p>And who gets that user id - when multiple users can work on behalf of the same group.</p>\n<p>I agree.  If you haven't been immersed in HL7 process for a decade or two, you won't necessarily understand our concerns.  At this point, just accept that your desire to submit fixes directly as PRs has been heard.  It'll be an agenda item for the relevant governance groups to figure out if/how to make it work within the processes HL7 needs to adhere to.  When we have answers to share, we'll share them here.</p>",
        "id": 173833686,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566423061
    },
    {
        "content": "<p>I never compared this to some 'simple open source process'. I would rather compare it to a highly complex software setup containing loads of 'here be dragons'. And as such, I would imagine that any changes would be tested, reviewed and confirmed in a firmly controlled CD/CI environment with total traceability.</p>",
        "id": 173834160,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566423421
    },
    {
        "content": "<p>indeed. that's the PR approval process. But the question in effect becomes: who needs to do the work for traceability - the hopelessly overloaded approvers, or the not-so-interested submitters?</p>",
        "id": 173834286,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566423513
    },
    {
        "content": "<p>Such setups however do not run in twenty years by itself. Either the project dies or the environment gets upgraded and tweaked continuously to reflect new needs and processes.</p>",
        "id": 173834356,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566423592
    },
    {
        "content": "<blockquote>\n<p>indeed. that's the PR approval process. But the question in effect becomes: who needs to do the work for traceability - the hopelessly overloaded approvers, or the not-so-interested submitters?</p>\n</blockquote>\n<p>traceability in terms of ... ? I seem to have another understanding of that term than you I think.</p>",
        "id": 173834495,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566423707
    },
    {
        "content": "<p>tracability in terms of documented HL7 process</p>",
        "id": 173834716,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566423890
    },
    {
        "content": "<p>which includes more metadata than just what a github PR collects</p>",
        "id": 173834741,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566423908
    },
    {
        "content": "<p>I imagine there's a reason for that extra metadata requirement, or else the process could be changed, right?</p>",
        "id": 173834841,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566424018
    },
    {
        "content": "<p>Yes - ANSI needs to know that the whole stakeholder community has had appropriate opportunity to review and approve the content published - and that includes fixes to typos.  There are variations in expectation depending on the type of change, but there still needs to be review by appropriate groups - and documentation of what groups reviewed and when.</p>",
        "id": 173834962,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566424130
    },
    {
        "content": "<p>It's not enough to just know who asked for the change and who applied it.</p>",
        "id": 173834995,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566424157
    },
    {
        "content": "<p>It must be an ANSI thing. ISO accepts corrections of typos if im not mistaken without a lot of fuzz</p>",
        "id": 173835139,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566424270
    },
    {
        "content": "<p>PRs for typos could be made as eg. a corrigendum</p>",
        "id": 173835745,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566424752
    },
    {
        "content": "<p>can't say if that changes much in the proces</p>",
        "id": 173835779,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566424790
    },
    {
        "content": "<p>How does ISO accept typo reports?</p>",
        "id": 173837081,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566425985
    },
    {
        "content": "<blockquote>\n<p>How does ISO accept typo reports?</p>\n</blockquote>\n<p>It's something that I recall I've seen, but in essence its probably the same process as with HL7/ANSI, that the typo corrections are handed over to a working group and so on. I can reach out to ISO, if I should dig deeper into this.</p>",
        "id": 173857661,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1566457109
    },
    {
        "content": "<p>sure you'll find it's not too different to our process - it's not a PR for sure</p>",
        "id": 173881726,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566480052
    },
    {
        "content": "<p>Zapier has quite a few zaps for integrating GitHub and JIRA.  $0.02<br>\n<a href=\"https://zapier.com/apps/github/integrations/jira\" target=\"_blank\" title=\"https://zapier.com/apps/github/integrations/jira\">https://zapier.com/apps/github/integrations/jira</a></p>\n<p>Now, if only there were a Zapier like service/product for FHIR....</p>",
        "id": 174062389,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1566696818
    }
]