[
    {
        "content": "<p>Does anyone have advice on the best way to batch high-frequency data into Observation resources?</p>\n<p>Specifically, we're looking at heart rate data from a wearable sensor that could be polling up to every 15 or 30 seconds. We'd like to avoid having a separate Observation for each data point. We've looked at batching data points by the hour into an observation with components for each data point - but ran into the issue of not being able to associate a timestamp with each component. We also looked at SampledData, though it's difficult to use in this case because the sample rate isn't fixed. </p>\n<p>Would love to hear anyone's thoughts!</p>",
        "id": 248780220,
        "sender_full_name": "Vishnu Ravi",
        "timestamp": 1628443723
    },
    {
        "content": "<p>If you don't have a fixed sample rate, I'm not sure we've got a solution.  Sounds like what you're looking for is a list of values and their associated timestamps?</p>",
        "id": 248780444,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1628444126
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179166-implementers/topic/Batching.20high-frequency.20Observation.20data/near/248780444\">said</a>:</p>\n<blockquote>\n<p>If you don't have a fixed sample rate, I'm not sure we've got a solution.  Sounds like what you're looking for is a list of values and their associated timestamps?</p>\n</blockquote>\n<p>Yes, that's exactly what I'm looking for! I've been able to store a list of values as a set of component observations, but haven't found a way to store a timestamp with each value. Wondering if there's another way to do this.</p>",
        "id": 248780712,
        "sender_full_name": "Vishnu Ravi",
        "timestamp": 1628444580
    },
    {
        "content": "<p>No standard way at the moment.  You can submit a change request for us to introduce a data type that would handle it in R5.  (Long term solution is probably a data type rather than Observation.component.)  In the short term, you'll have to use extensions.</p>",
        "id": 248781052,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1628445111
    },
    {
        "content": "<p>another easy answer is to use a binary like a csv  + valueAttachment extension.  (R5 element)</p>",
        "id": 248876769,
        "sender_full_name": "Eric Haas",
        "timestamp": 1628528645
    },
    {
        "content": "<p>That's possible, but makes the data essentially opaque to FHIR.</p>",
        "id": 248877640,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1628529018
    }
]