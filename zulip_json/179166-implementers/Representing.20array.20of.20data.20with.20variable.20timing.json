[
    {
        "content": "<p>I need to represent two arrays of data coming from a device - representing head movement (in degrees) and the amount of time between measurements (in seconds). SampledData does not work here because it assumes the sampling period is consistent, which is not the case here.</p>\n<p>What's the best way to go?</p>\n<p>1) SampledData + extension on the 1..1 <code>period</code> to say that the element isn't applicable?<br>\n2) string extension with space-separated values<br>\n3) any others?</p>",
        "id": 262678622,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1637829575
    },
    {
        "content": "<p>well, if period didn't apply, how do you use SampledData?</p>",
        "id": 262681393,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637831199
    },
    {
        "content": "<p>The problem with period in SampledData is that it assumes a fixed interval, but I've got a variable interval here which is represented by another array</p>",
        "id": 262681555,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1637831303
    },
    {
        "content": "<p>One way could be to populate with period with an extension that has this array of timings...</p>",
        "id": 262681603,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1637831347
    },
    {
        "content": "<p>that's quite the extension.</p>",
        "id": 262690004,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637836709
    },
    {
        "content": "<p>yep... any better approaches?</p>",
        "id": 262690284,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1637836884
    },
    {
        "content": "<p>another way to do it  is to set period to 0 - this is not data that has a regular period, and use the first dimension as the time offset</p>",
        "id": 262690297,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637836892
    },
    {
        "content": "<p>but... no, I don't like that</p>",
        "id": 262690303,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637836899
    },
    {
        "content": "<p>the choices are massacring sampleddata or creating a custom extension with semantics that fit variable timings, maybe the latter is better?</p>",
        "id": 262690473,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1637837024
    },
    {
        "content": "<p>maybe. But you have to massacre it whatever.</p>",
        "id": 262691472,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637837679
    },
    {
        "content": "<p>it's really grounds for a new data type, since the definition of SampleData is quite clear.</p>",
        "id": 262691508,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637837706
    },
    {
        "content": "<p>but that doesn't help you either</p>",
        "id": 262691536,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637837731
    },
    {
        "content": "<p>how much data are we talking about?</p>",
        "id": 262691641,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637837787
    },
    {
        "content": "<p>I'll find out the max, in the sample I got - one array has 90 data points (degrees of range) for every exercise rep + corresponding array of timings (seconds taken per rep). There's also a 2D array of degrees of range that measures two degrees instead of one</p>",
        "id": 262699995,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1637843430
    },
    {
        "content": "<p>Around a hundred would be max</p>",
        "id": 262715133,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1637852217
    },
    {
        "content": "<p>that may seem large, but could these be recorded as independent Observation? There are some kinds of data that are today recorded multiple times a day continuously (continuous blood-sugar, body weight, activity status).</p>",
        "id": 262718883,
        "sender_full_name": "John Moehrke",
        "timestamp": 1637854064
    },
    {
        "content": "<p>Yeah, I think that would be too much... even separate Observation.component's would be big and not be really putting FHIR in a good light</p>",
        "id": 262721936,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1637855993
    },
    {
        "content": "<p>what's the semantics around repeated measurements? Do they ever have 'failed to record' fro some of the data?</p>",
        "id": 262730842,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637862977
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191363\">@Vadim Peretokin</span> If you do decide to use an extension, I think it needs to be a modifier extension. It totally changes how to interpret the data.</p>",
        "id": 262731488,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1637863564
    },
    {
        "content": "<p>Agreed for sure.</p>",
        "id": 262804894,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1637938059
    },
    {
        "content": "<p>create your own structure ( json, yaml, csv, whatever ) and send as binary using the valueAttachment extension  ( note this is  a  R5 pre-adoption element : <a href=\"http://hl7.org/fhir/5.0/StructureDefinition/extension-Observation.valueAttachment\">http://hl7.org/fhir/5.0/StructureDefinition/extension-Observation.valueAttachment</a>)</p>",
        "id": 262898874,
        "sender_full_name": "Eric Haas",
        "timestamp": 1638056268
    },
    {
        "content": "<p>ping on </p>\n<blockquote>\n<p>Do they ever have 'failed to record' fro some of the data?</p>\n</blockquote>",
        "id": 262958026,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1638147624
    },
    {
        "content": "<p>I'm told that would not happen (perhaps data wouldn't be sent at all). Either way there wouldn't be 'holes' in the array</p>",
        "id": 264275156,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1639042081
    },
    {
        "content": "<p>Given how sampleddata works, I am thinking of going with solution (2) string modifier extension with space-separated values</p>",
        "id": 264275469,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1639042241
    },
    {
        "content": "<p>that would be simpler to work with than a custom structure and follow an existing pattern already in the standard</p>",
        "id": 264275531,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1639042300
    },
    {
        "content": "<p>how long between sampling? is it in milliseconds or seconds? or longer than that</p>",
        "id": 264278047,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639043786
    },
    {
        "content": "<p>we could add a new element offsets : string that has the same format as data, and specifies the instants at which measurements were made. In this scheme, period is redefined as the default offset increment for any data point that runs off the end of the array of offsets. That's procedurally possible, and the least worst way to handle sampled data that doesn't have regular time intervals</p>",
        "id": 264278339,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639043955
    },
    {
        "content": "<p>it's in seconds</p>",
        "id": 265680905,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1640090729
    },
    {
        "content": "<p>That suggestion sounds great to me! I'll verify it &amp; file a JIRA ticket.</p>",
        "id": 265681218,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1640090957
    },
    {
        "content": "<p>I take it <code>offsets</code> should also take on the same time unit that <code>period</code> works with, so <code>ms</code>. Example:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"nt\">\"valueSampledData\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"origin\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"code\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"deg\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"unit\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"degree\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"system\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"http://unitsofmeasure.org\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"period\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1000</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"dimensions\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"data\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"47.53885435017747 90.00021045865756 90.00021045865756\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"offsets\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"3378.787878787879 42.26542688081149 2500.000000000009\"</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p><code>data</code> is degrees, <code>offsets</code> is when the measurement was made in ms, and logically <code>period</code> doesn't mean anything because the data and offsets are aligned in the amount of measurements</p>",
        "id": 270356510,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1643794575
    },
    {
        "content": "<p>r4 version -</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"nt\">\"valueSampledData\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"origin\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"code\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"deg\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"unit\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"degree\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"system\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"http://unitsofmeasure.org\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"period\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1000</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"dimensions\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"data\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"47.53885435017747 90.00021045865756 90.00021045865756\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"extension\"</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"url\"</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"http://example.org/fhir/StructureDefinition/offsets\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"valueString\"</span><span class=\"w\"> </span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"3378.787878787879 42.26542688081149 2500.000000000009\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">}]</span><span class=\"w\"></span>\n<span class=\"p\">},</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 270357784,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1643795243
    },
    {
        "content": "<p>well, yes, though I don't understand this because the offsets aren't ordered. Surely they'd have to be in order...</p>",
        "id": 270480215,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1643847274
    },
    {
        "content": "<p>Right. Fixed - it was previously doing intervals not offsets -</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"nt\">\"valueSampledData\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"origin\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"code\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"deg\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"unit\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"degree\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"system\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"http://unitsofmeasure.org\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"period\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1000</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"dimensions\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"data\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"47.53885435017747 90.00021045865756 90.00021045865756\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"offsets\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"3378.787878787879 3421.053306 5921.053306\"</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 270507607,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1643871137
    },
    {
        "content": "<p>Bigger example -</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"nt\">\"code\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"coding\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[{</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">\"system\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"http://snomed.info/sct\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">\"code\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"404979006\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"nt\">\"display\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Neck joint - range of movement\"</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}],</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"text\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Range of head turns in yaw plane (Left-Right)\"</span><span class=\"w\"></span>\n<span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"nt\">\"valueSampledData\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"data\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"90.537109375 60.652740478515625 26.10601806640625 27.388641357421875 29.38006591796875 29.771392822265625 36.079193115234375 36.02728271484375 39.947265625 39.11334228515625 36.36187744140625 39.76837158203125 35.002655029296875 37.106689453125 37.569183349609375 39.219970703125 36.10723876953125 36.199798583984375 38.24993896484375 40.15887451171875 30.865631103515625 30.717041015625 35.72735595703125 34.045623779296875 32.52325439453125 35.46441650390625 39.65191650390625 40.89208984375 38.74102783203125 38.68255615234375 34.196502685546875 33.570281982421875 33.662353515625 36.50860595703125 36.3001708984375 34.88165283203125 29.999114990234375 32.201751708984375 38.925994873046875 38.350677490234375 35.208740234375 36.309783935546875 35.1832275390625 36.083221435546875 35.595458984375 32.995849609375 32.04583740234375 36.79669189453125 31.879791259765625 32.9957275390625 37.14227294921875 31.359344482421875 30.902557373046875 28.116241455078125 35.347015380859375 39.050323486328125 35.38067626953125 37.117340087890625 38.162139892578125 36.11517333984375 34.652191162109375 39.923004150390625 45.19793701171875 44.25115966796875 35.553466796875 36.464996337890625 39.7689208984375 39.8714599609375 27.531036376953125 26.58917236328125 41.603363037109375 42.4051513671875 35.62786865234375 34.12286376953125 37.003570556640625 36.39971923828125 33.043701171875 37.58795166015625 40.32501220703125 37.0455322265625 33.568450927734375 37.696990966796875 37.075408935546875 37.482086181640625 35.437286376953125 38.6829833984375 30.6162109375 31.314422607421875 37.43499755859375\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"origin\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"unit\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"degree\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"system\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"http://unitofmeasure.org\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"code\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"deg\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"dimensions\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"period\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">1000</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"modifierExtension\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"url\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"http://example.org/fhir/StructureDefinition/offsets\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"valueString\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"3378 3921 4672 5921 6789 7239 7674 8109 8544 8979 9414 9849 10284 10719 11154 11589 12024 12459 12894 13329 13764 14199 14634 15069 15504 15939 16374 16809 17244 17679 18114 18549 18984 19419 19854 20289 20724 21159 21594 22029 22464 22899 23334 23769 24204 24639 25074 25509 25944 26379 26814 27249 27684 28119 28554 28989 29424 30159 30894 31629 32364 33099 33834 34569 35304 36039 36774 37509 38244 38979 39714 40449 41184 41919 42654 43389 44124 44859 45594 46329 47064 47799 48534 49269 50004 50739 51474 52209 52944\"</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">}]</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 270539495,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1643890847
    },
    {
        "content": "<p>do we have a task for this?</p>",
        "id": 270617791,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1643922448
    },
    {
        "content": "<p>yup, here it is <a href=\"https://jira.hl7.org/browse/FHIR-35948\">https://jira.hl7.org/browse/FHIR-35948</a></p>\n<p>JIRA corrupted the json example and I can't seem to edit it</p>",
        "id": 270681911,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1643963079
    }
]