[
    {
        "content": "<p>Has anyone experience with implementation of FHIR data structure on MS SQL?</p>",
        "id": 153913408,
        "sender_full_name": "Max Milto",
        "timestamp": 1507727632
    },
    {
        "content": "<p>My colleague <span class=\"user-mention\" data-user-id=\"191757\">@Christiaan Knaap</span> certainly has.</p>",
        "id": 153913409,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1507727667
    },
    {
        "content": "<p>Maybe you know... <br>\nIs his project open source?</p>",
        "id": 153913410,
        "sender_full_name": "Max Milto",
        "timestamp": 1507727998
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"194605\">@Max Milto</span>, our current FHIR Server (called \"Vonk\") is a commercial project and not open source. Vonk provides flexible support for different storage layers via facade interfaces and includes out-of-the-box support for MS SQL Server.</p>\n<p>Earlier, we have published an open source reference implementation of a FHIR Server called \"Spark\":<br>\n<a href=\"https://github.com/furore-fhir/spark\" target=\"_blank\" title=\"https://github.com/furore-fhir/spark\">https://github.com/furore-fhir/spark</a><br>\nHowever we no longer actively maintain the Spark repository.</p>",
        "id": 153913412,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1507728999
    },
    {
        "content": "<p>But the give-away is: If you need to support many different or even all resourcetypes, don't try to put the resource in a schema, but only the search parameters. If you have a fixed profile for only a couple of resources you could map the resources to a table schema. But you'll end up with a lot of joining quickly due to the hierarchical nature of resources.</p>",
        "id": 153913491,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1507743561
    },
    {
        "content": "<blockquote>\n<p>But the give-away is: If you need to support many different or even all resourcetypes, don't try to put the resource in a schema, but only the search parameters. </p>\n</blockquote>\n<p>Why?  Which issues we will have if decide to put resource in a schema?  How you propose to store resources?</p>",
        "id": 153913557,
        "sender_full_name": "Vadim Potapenko",
        "timestamp": 1507785059
    },
    {
        "content": "<p>if you are purely serving a FHIR Api, you just store the resources as a binary, and pull the values needed to support the search parameters out into one or more separate tables.</p>",
        "id": 153913587,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1507805202
    },
    {
        "content": "<p>if you're writing process code and don't want to be tied to the FHIR API - typically, this means you want to do analysis/aggregation - you will want to extract more/all information out of the resources.</p>",
        "id": 153913588,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1507805261
    },
    {
        "content": "<p>Or you could use native JSON support in MSSQL - <a href=\"https://docs.microsoft.com/en-us/sql/relational-databases/json/json-data-sql-server\" target=\"_blank\" title=\"https://docs.microsoft.com/en-us/sql/relational-databases/json/json-data-sql-server\">https://docs.microsoft.com/en-us/sql/relational-databases/json/json-data-sql-server</a>. That's how we do it with PostgreSQL</p>",
        "id": 153913593,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1507805702
    },
    {
        "content": "<p>We working on mobile application which have own db schema. We should simplify interoperability to support FHIR or it elements.  Please, advise how this can be accomplished with minimal efforts? </p>\n<p>Is it good idea to implement on db schema primitive and complex data types <a href=\"http://hl7.org/fhir/datatypes.html\" target=\"_blank\" title=\"http://hl7.org/fhir/datatypes.html\">http://hl7.org/fhir/datatypes.html</a>  ? so later then FHIR support will be needed it will be easier to create resource data and exchange with third-party system.</p>",
        "id": 153913597,
        "sender_full_name": "Vadim Potapenko",
        "timestamp": 1507809038
    },
    {
        "content": "<p>Depending on the phase of development and the needs of your mobile app you can choose:<br>\n1. Use FHIR resources as 'native' storage, and use one of the generic FHIR servers available to do so, and in your app use the resources directly. Interoperablity will then be 'for free'.<br>\n2. Keep your existing db schema, but for interoperability you will have to make the mapping to (and maybe also from) FHIR resources somewhere. This can be:<br>\n2a. in a separate 'syncing app' that maps your data and puts a copy of it in the form of FHIR resources in a generic FHIR server, or <br>\n2b. by having a FHIR layer (a 'facade') on top of your database (or on top of a web API if you have that) that does the mapping on-the-fly.</p>",
        "id": 153913612,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1507813194
    },
    {
        "content": "<p>BTW: JSON support in SQL Server is nowhere near as powerful as that in PostgreSQL.</p>",
        "id": 153913613,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1507813228
    },
    {
        "content": "<p>HAPI JPA Server works fine on SQL Server but you need to mess around a bit with the JDBC drivers.</p>",
        "id": 153913643,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1507824075
    },
    {
        "content": "<p>The structure behind this project (also HAPI based) follows the structure of FHIR model more closely <a href=\"https://github.com/nhsconnect/careconnect-reference-implementation\" target=\"_blank\" title=\"https://github.com/nhsconnect/careconnect-reference-implementation\">https://github.com/nhsconnect/careconnect-reference-implementation</a> We have changed a few items here and there for practical reason, CodeSystem is CodeSystem but Concept is separated out into another class/table.</p>",
        "id": 153913644,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1507824161
    },
    {
        "content": "<p>Note: We are only implementing the most common elements and features - so it's not at the cutting edge of FHIR. The inital version of the server is here: <a href=\"http://194.189.27.193/careconnect/\" target=\"_blank\" title=\"http://194.189.27.193/careconnect/\">http://194.189.27.193/careconnect/</a></p>",
        "id": 153913645,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1507824288
    },
    {
        "content": "<p>We’ve created the tables using hibernate but you can use Hibernate to map an existing SQL schema. So what we showing is how a SQL database can be made available using HAPI FHIR. The database schema we have created is very similar to several EPR/PAS systems I’ve worked with.</p>",
        "id": 153913646,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1507824414
    },
    {
        "content": "<p>The Telstra Health sqlonfhir server also uses SQLServer underneath, and we store the FHIR resources as an XML column (instead of JSON) and we extract the search data into dedicated indexing tables/columns</p>",
        "id": 153913987,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1508117390
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194630\">@basil stolyarov</span> This conversation may also provide some helpful insight WRT your question in the 'SQL DDL for FHIR' stream..</p>",
        "id": 153915149,
        "sender_full_name": "Thomas Lukasik",
        "timestamp": 1508535882
    }
]