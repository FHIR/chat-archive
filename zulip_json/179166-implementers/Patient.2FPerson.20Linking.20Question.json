[
    {
        "content": "<p>I'm going through implementing linking of Person to Patient and even potentially Practitioner to Person. (One Person can be a Patient and a Practitioner).  Is it safe to assume that any 3rd party consumers of our server will update the \"Master\" resource, for example: Person.  Or will our server need to keep the 3 resources in sync?  (demographics, address, etc.)  I'm afraid of 3rd party consumers updating the Patient resource demographics where we pull the Demographics from Person resource.</p>",
        "id": 177267006,
        "sender_full_name": "Justin Jones",
        "timestamp": 1570123782
    },
    {
        "content": "<p>It depends on the environment you're in.  You're free to prohibit/ignore updates to demographics on Patient if you want them done via Person.  Alternatively, you could process updates to Patient as an update to Person as well.  In the ideal world, clients wouldn't have to know that you use Person at all, but that increases your complexity.</p>",
        "id": 177270762,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1570126167
    },
    {
        "content": "<p>Is processing updates to Patient as Person something i would have to implement in my server?  And would my clients know to update Person if i inhibit updating of Patient?</p>",
        "id": 177274077,
        "sender_full_name": "Justin Jones",
        "timestamp": 1570128399
    },
    {
        "content": "<p>Yes and probably not.</p>",
        "id": 177277039,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1570130147
    },
    {
        "content": "<p>Most systems won't ever care about the Person resource, it just adds complexity for client apps reading things.<br>\nBut as a server knowing that stuff can help you keep content in sync (where it's actually wanted - many uses will want to have different names for the patient(s) and practitioners intentionally - aliases or official names that don't desire to be spread around)</p>",
        "id": 177294467,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1570141554
    }
]