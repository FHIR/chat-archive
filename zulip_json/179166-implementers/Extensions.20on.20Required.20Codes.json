[
    {
        "content": "<p>I need to know how to extend a required value set.  The particular case in mind is <code>AllergyIntolerance.type</code> whose bound value set has only 2 values.  We are currently using a much more sophisticated set of values  such as Allergic reaction, Drug interaction, Food intolerance, Hypersensitivity reaction, Medication side-effect and including levels of immuno-responses &amp;c.  <br>\nWe have 2 problems:<br>\n1. clearly we carry categories of reactions which cannot be described using either value in the required value set (allergy, intolerance); and<br>\n2. while the value set provides suitable categories for several of our codes, we want to attach finer-grained codes.</p>",
        "id": 153850958,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1475022095
    },
    {
        "content": "<p>I'm not too worried about the first problem -- at least, not at this stage -- but I urgently need to know how to add finer-grained codes to the data.  I have thought of 2 options:<br>\n1. Add an extension to the <code>AllergyIntolerance.type</code> element inside the <code>code</code> data type.<br>\n2. Add an extension to the <code>AllergyIntolerance</code> resource as a whole.<br>\nThe first seems the better option to me, but I have a further question regarding that: is it legal, if my fine-grained code cannot be satisfactorily categorised by the 2 current values of the value set, to just leave out the actual code value and carry only the extension?  (I suspect not, but if it was, that would solve my first problem too!)</p>",
        "id": 153850959,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1475022519
    },
    {
        "content": "<p>P.S. I assume that there must be something about this in the FHIR documentation. An, admittedly light, scan of the documentation didn't turn anything up, but if it exists, just point me at it and I'll take it from there myself. <img alt=\":smiley:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/smiley.png\" title=\":smiley:\"> </p>",
        "id": 153850960,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1475022952
    },
    {
        "content": "<p>I would use an extension on the AllergyIntolerance resource... sm like   Extension \"moretypes\"  0..1 type \"code\" and bind it to your codes. </p>",
        "id": 153850962,
        "sender_full_name": "Eric Haas",
        "timestamp": 1475024797
    },
    {
        "content": "<p>This seems to be an easy answer, but the simple truth is that, if we do this, <code>AllergyIntolerance.type</code> will never get populated -- not in practice -- so the extension effectively becomes \"we're ignoring your type and using our own\" which is <strong>really bad</strong> for interoperability. <img alt=\":disappointed:\" class=\"emoji\" src=\"/static/third/gemoji/images/emoji/disappointed.png\" title=\":disappointed:\"> </p>",
        "id": 153850964,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1475032360
    },
    {
        "content": "<p>Good practice is to map the codes that you have to the corresponding FHIR attribute and also send the extension.  That's what your profile should enforce to ensure maximum interoperability.  You can't extend required value sets.  </p>",
        "id": 153850971,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1475033324
    },
    {
        "content": "<p>By \"you can't extend required value sets\" do you mean we can't add additional values to the set (which I get) or we can't even add an extension on the data type?</p>",
        "id": 153850972,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1475033443
    },
    {
        "content": "<p>You can't add to the value set.  You can add an extension on the code data type</p>",
        "id": 153850973,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1475033496
    },
    {
        "content": "<p>Right.  So is an extension on the <code>code</code> data type the way to go, or should we just add an extension to the <code>AllergyIntolerance</code> resource?</p>",
        "id": 153850978,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1475034356
    },
    {
        "content": "<p>In general, nesting extensions beneath the element they're most closely tied to is best practice - they're less likely to get wiped due to another change that way.</p>",
        "id": 153850983,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1475034825
    },
    {
        "content": "<p>Right so inside the code data type then.  However, here's the rub, what about codes that cannot be properly classified as either \"allergy\" or \"intolerance\"?  Can I send the code with just the extension and without the actual code?</p>",
        "id": 153850998,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1475042153
    },
    {
        "content": "<p>Out of curiosity, which code can you not properly classify as allergy or intolerance? Would that be the drug-drug interaction? I'm wondering whether the <code>AllergyIntolerance</code> resource is the right choice for interactions?</p>",
        "id": 153851033,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1475052070
    },
    {
        "content": "<p>I'd be curious about what concepts you're trying to convey because the expectation is those two choices are exhaustive for the intended use of the resource.</p>",
        "id": 153851112,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1475094484
    },
    {
        "content": "<p>I'm curious about that, as well.  Since it's the AllergyIntolerance resource, the intent is to classify the type as either \"allergy\" or \"intolerance\", and if you are unable to determine that or otherwise choose not to state that, then you omit the element. </p>",
        "id": 153851127,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1475097740
    },
    {
        "content": "<p>Hmmm ...<br>\nSo our current model is a model for future propensity of an adverse reaction, so we include items like <strong>idiosyncratic</strong> drug-drug interactions.  We also include temporary reactions such as while the patient is taking warfarin they are \"allergic\" to aspirin.</p>",
        "id": 153851148,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1475103523
    },
    {
        "content": "<p>this is defined as not part of an AllergyIntolerance, for purposes of consistency with OpenEHR - consult the scope. </p>",
        "id": 153851171,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475117110
    },
    {
        "content": "<p>that's why you don't find a matching code</p>",
        "id": 153851172,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475117119
    },
    {
        "content": "<p>Okay. So where would such data go?</p>",
        "id": 153851182,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1475122296
    },
    {
        "content": "<p>don't know</p>",
        "id": 153851185,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475123557
    },
    {
        "content": "<p>It's interesting though. In general, should we be able to express consequences of one resource with another resource? So if there is a <code>MedicationOrder</code> for warfarin, is there a need to be able to describe an implication for aspirin (and x and y and z and ...)? Typing these words it seems to me that that's Pandora's box and better left to CDS, but that's just me thinking about one use case.</p>",
        "id": 153851236,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1475139750
    },
    {
        "content": "<p>See DetectedIssue</p>",
        "id": 153851247,
        "sender_full_name": "Eric Haas",
        "timestamp": 1475159711
    }
]