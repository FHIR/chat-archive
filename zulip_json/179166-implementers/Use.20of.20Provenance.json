[
    {
        "content": "<p>Hi All, For which resources, we can use provenance? What is the best way to implement provenance either in front end application or in server side? Can any one suggest me.</p>",
        "id": 153991764,
        "sender_full_name": "Vanitha",
        "timestamp": 1535606117
    },
    {
        "content": "<p>Provenance can (and generally should) be used for all resources.  Typically the Provenance will be stored on the same system as the record it's associated with, but there's not a firm requirement that be the case.  In principle, it can be stored on multiple systems.</p>",
        "id": 153991768,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1535606348
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> . <br>\nWe can't create a provenance for every resource?<br>\nFor example, If we have 10 medications  --&gt;  10 provenances<br>\n                                                    5 Allergies         --&gt;   5 provenances<br>\n                                          20 Conditions    --&gt;   20 provenances<br>\nLike that for each &amp; every resource, we need to create provenance.<br>\nIf it continues, there will be many provenances.<br>\nFor which resources we have to create provenance, Is there any way to implement provenance resource?</p>",
        "id": 153991773,
        "sender_full_name": "Vanitha",
        "timestamp": 1535608422
    },
    {
        "content": "<p>Actually, you'll have a Provenance for the creation of the record, plus each time it is updated or transformed or deleted or otherwise changed.  So there will indeed be a LOT of Provenances :)  I is possible for one Provenance to refer to multiple resource instance versions - e.g. if multiple resources were created or updated as a single action, but most typically there will be one Provenance for each version of each resource.  </p>\n<p>There's no \"have to\" with respect to Provenance (or any other resource) in the core spec.  We indicate that it's generally a good idea to have Provenance, but it's not mandatory.  Provenance provides several things - it exposes details about what happened to a resource when, why, caused by whom, etc.  This information often has clinical relevance.  If your users are going to want to see resource history, they're probably going to want to see the associated Provenance records too.  Also, the Provenance resources can be extremely relevant when integrating data from multiple sources.  Knowing where data came from originally can help when determining how best to combine data and can also help users better understand the context of the information.  As data gets shared more easily, having that context becomes more important.</p>\n<p>As for \"any way to implement\", I'm not sure what you mean.  Provenance is a resource like any other.  In some ways it's simpler, as there's almost never a need to update it and it's pretty uncommon to need to delete it.  So in most cases all you have to worry about is \"create\" and \"search\".</p>",
        "id": 153991774,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1535609311
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> . <br>\n  Should we create provenance to each resource? <br>\n  We will create a Provenance for a patient (like how we load conformance for server),<br>\n  it will have all the resources(references for Patient resource).<br>\n  Can any one suggest me.</p>",
        "id": 153992224,
        "sender_full_name": "Vanitha",
        "timestamp": 1535692704
    },
    {
        "content": "<p>As I stated, every single version of every single resource should have it's own provenance instance.  The purpose of Provenance is to capture how each version of each resource came into being - who created it, when, why, from where, under whose supervision, etc.  It doesn't make sense to have a single Provenance for all resources unless they were all created by the same person at the same time.</p>",
        "id": 153992225,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1535693323
    },
    {
        "content": "<p>I think of Provenance resources as like entries in a log of changes. If it is important to know about additions, modifications and deletions, use provenance resources to hold the information.</p>",
        "id": 153992226,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1535693656
    },
    {
        "content": "<p>I will only add that you do have a choice on how many Provenance resources you create. For example, in IHE we have a the mXDE implementation guide that describes a use-case of decomposing CDA documents into FHIR Resources. Given that these FHIR Resources came from CDA documents, this is useful Provenance. IHE defines that for every CDA document that is decomposed, ONE Provenance resource would exist. That Provenance resource would have Provenance.entity reference back to the CDA document, and that Provenance.target would point at EVERY FHIR Resource that was found within that CDA document. In this way when one finds in 10 CDA documents an allergy to peanuts, one would have one FHIR AllergyIntolerance indication for peanuts, that one AllergyIntolerance would be pointed to by 10 different Provenance resources, each Provenance resource points at their own CDA document. Thus one can also look at the Provenance that is pointing at a CDA document as an entity (source of data), and see all the information derived from that CDA document. (Same can be done with other  document types,  I am using CDA only for illustrative clarity).</p>",
        "id": 153992307,
        "sender_full_name": "John Moehrke",
        "timestamp": 1535719619
    },
    {
        "content": "<p>Right.  It's one Provenance instance per \"record action\".  If a single action affects multiple records, you only need one Provenance.</p>",
        "id": 153992370,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1535730864
    }
]