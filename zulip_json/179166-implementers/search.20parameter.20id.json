[
    {
        "content": "<p>I’m a bit confused about the search parameter of ‘id’. What search parameter type do we class 'id' as? If I search like this <code>Patient?id=12345</code> then is that a Token or a String search parameter? I suspect it is Token with no System. If it was String then it would have to return all id's like 12345 and 123456 and 1234567 ..etc. So it must be Token? Or is this a special case?<br>\nBut it can’t be Token as a Tokens Code is not case sensitive and yet the ‘id’ datatype allows mixed case?</p>",
        "id": 153886953,
        "sender_full_name": "Angus Millar",
        "timestamp": 1493885466
    },
    {
        "content": "<p>Does it matter which formal type is it?</p>",
        "id": 153886954,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1493887093
    },
    {
        "content": "<p>ah the case sensitivity thing is a real problem - can you make a task for it?</p>",
        "id": 153886966,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1493891035
    },
    {
        "content": "<p>Will do Grahame. More broadly. It would be nice if there was a formal table that mapped Search Parameter Types to FHIR data types. At present there appears to be nothing stopping a person defining a new search parameter that points to any FHIR resource data type and defined as almost any other Search Parameter Type, excluding Token types. At present I could map a FHIR dateTime to a String Search parameter type or vice versa, and String to a number…etc. <br>\nOf course logic prevails, but I feel it leaves the server developer having to cater for all the edge cases. Token and DateTime are the only two that provide some guidance but even here the statements are a little loose: <br>\n‘Date parameters may be used with the following data types’<br>\n“may be used!” does that mean they may not be used?  <br>\n‘Token search parameters are used for the following data types:’<br>\nAt least this one is a bit more concrete.<br>\nIs this my design? Is the standard intentional leaving this open for a reason rather than having a formal table stating what can map to what? It feels too obvious to have just been missed.</p>",
        "id": 153886980,
        "sender_full_name": "Angus Millar",
        "timestamp": 1493895226
    },
    {
        "content": "<p>there is a table.</p>",
        "id": 153887008,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1493901394
    },
    {
        "content": "<p>bottom of the search page</p>",
        "id": 153887011,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1493901413
    },
    {
        "content": "<p>Well bugger me, how did I miss that. Thanks Grahame.</p>",
        "id": 153887072,
        "sender_full_name": "Angus Millar",
        "timestamp": 1493903423
    }
]