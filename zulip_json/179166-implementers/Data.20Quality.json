[
    {
        "content": "<p>Not sure if this is the right place - but no other channel/topic seems to fit. </p>\n<p>I'm curious if anyone has thoughts on how to approach data quality in a FHIR context. We are engaged in architecting a solution where we have a FHIR server, alongside a Data Lake and MDM solution. In this context, FHIR is used as the ingest layer as well as consumption layer so we have varying levels of data 'quality'. For example, some entries may not be fully complete, some may have corrupt data (incorrect references), and some resources may fail some business rules. We are coming up with a grading scheme on how to bucket the data into varying levels of quality, but I'm wondering if anyone's thought about how to flag that back to the user. My interim solution is to create an identifier which provides a quality 'level' or 'score' for each resource. Would love to get others' thoughts on this. </p>\n<p>Thanks!</p>",
        "id": 213835226,
        "sender_full_name": "OS",
        "timestamp": 1603136763
    },
    {
        "content": "<p>data quality is a multidimensional thing. do you consider that?</p>",
        "id": 213836486,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603137377
    },
    {
        "content": "<p>I'd go at it like this:</p>\n<ol>\n<li>define and keep an inventory of your quality metrics (because they will change). There's a resource Measure for that.</li>\n<li>If you want to keep track of the quality of each resource, you can make an extension for that resource. I would not use an identifier, I would use a reference to a MeasureReport, basically saying: \"for this Patient resource, quality is [0.9 , 0.5 , 0.9, 1, 0.4, 0.25] = 0.75 overall\"</li>\n</ol>",
        "id": 213838151,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603138089
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191832\">Jose Costa Teixeira</span> <a href=\"#narrow/stream/179166-implementers/topic/Data.20Quality/near/213838151\">said</a>:</p>\n<blockquote>\n<p>I'd go at it like this:</p>\n<ol>\n<li>define and keep an inventory of your quality metrics (because they will change). There's a resource Measure for that.</li>\n<li>If you want to keep track of the quality of each resource, you can make an extension for that resource. I would not use an identifier, I would use a reference to a MeasureReport, basically saying: \"for this Patient resource, quality is [0.9 , 0.5 , 0.9, 1, 0.4, 0.25] = 0.75 overall\"</li>\n</ol>\n</blockquote>\n<p>That's a fantastic approach! And it allows you to model multi-dimensional measures as well!<br>\nThe reason I was going for a single dimension was so that for a consumer, we could indicate very simply the state/health of a resource (kind of like red/yellow/green), but I think your approach enables that in a much more flexible way!</p>",
        "id": 213841936,
        "sender_full_name": "OS",
        "timestamp": 1603139736
    },
    {
        "content": "<p>If you're looking to flag low-quality resources for 'action', you could look at Resource.meta.tag.</p>",
        "id": 213845089,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603141181
    },
    {
        "content": "<p>One other benefit of using tags is that you can generally change them without impacting signatures (if that's a consideration)</p>",
        "id": 213845192,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603141219
    },
    {
        "content": "<p>Extensions can be in Resource.meta, right?</p>",
        "id": 213846756,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603141961
    },
    {
        "content": "<p>Yes, but those aren't guaranteed to be outside signature I don't think?</p>",
        "id": 213859812,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603150568
    },
    {
        "content": "<p>There is a valueSet including many codes related to data quality (integrity) for use in .meta.security.  <a href=\"http://hl7.org/fhir/v3/SecurityIntegrityObservationValue/vs.html\">http://hl7.org/fhir/v3/SecurityIntegrityObservationValue/vs.html</a></p>",
        "id": 213867510,
        "sender_full_name": "John Moehrke",
        "timestamp": 1603158228
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> <a href=\"#narrow/stream/179166-implementers/topic/Data.20Quality/near/213867510\">said</a>:</p>\n<blockquote>\n<p>There is a valueSet including many codes related to data quality (integrity) for use in .meta.security.  <a href=\"http://hl7.org/fhir/v3/SecurityIntegrityObservationValue/vs.html\">http://hl7.org/fhir/v3/SecurityIntegrityObservationValue/vs.html</a></p>\n</blockquote>\n<p>Hmm  the flags listed on that page would be super useful, but they are all in a security context. I'm thinking about data quality independent of security - am I thinking about that incorrectly?</p>",
        "id": 214216760,
        "sender_full_name": "OS",
        "timestamp": 1603386171
    },
    {
        "content": "<p>You wouldn't use <a href=\"http://meta.security\">meta.security</a>, you'd use meta.tag or meta.extension</p>",
        "id": 214226190,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603390276
    },
    {
        "content": "<p>just because they are on <a href=\"http://meta.security\">meta.security</a> does not make them special and only useful for security.</p>",
        "id": 214260013,
        "sender_full_name": "John Moehrke",
        "timestamp": 1603409643
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179166-implementers/topic/Data.20Quality/near/213859812\">said</a>:</p>\n<blockquote>\n<p>Yes, but those aren't guaranteed to be outside signature I don't think?</p>\n</blockquote>\n<p>I'd prefer to have guidance on that. If we add extensions to resource.meta, do they have an impact on signature?</p>",
        "id": 214279730,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1603436397
    },
    {
        "content": "<p>The 'static' canonicalization excludes the whole 'meta' element, so extensions on meta would be excluded</p>",
        "id": 214319853,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603463112
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> Our upstream ETL pipelines allow us to \"blacklist\" bad ingestions/batches (e.g., in a scenario where we got a bad batch from a claims or lab vendor, or ran into a transformation error). Trying to figure out what the conventions/guidelines are for how this should translate to the FHIR server. If we've written a batch of data to the FHIR server and then need to revert it, is the standard practice to delete the impacted records/versions? Vs. using something like <code>entered-in-error</code>?</p>",
        "id": 229861579,
        "sender_full_name": "Anusha",
        "timestamp": 1615474581
    },
    {
        "content": "<p>The choice of deleting vs. flagging as \"entered in error\" is generally driven by whether there's an likelihood of the data having been disclosed and used by someone.  If it has, entered-in-error is going to be preferred.</p>",
        "id": 229870361,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1615477553
    }
]