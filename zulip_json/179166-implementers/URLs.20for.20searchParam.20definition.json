[
    {
        "content": "<p>Hi; in the CapabilityStatement, is the url for a searchParam definition (i.e., <code>CapabilityStatement.rest.resource.searchParam.definition</code>) expected to be a valid url pointing to a <code>SearchParameter</code> resource? I have seen in some implementations that it is a standard-like url, e.g., <code>http://hl7.org/fhir/SearchParameter/Observation-subject</code> but it gives an error. Examples of this can be seen in the test HAPI server <code>https://hapi.fhir.org/baseR4/metadata</code>.</p>",
        "id": 272456891,
        "sender_full_name": "Bashir Sadjad",
        "timestamp": 1645218075
    },
    {
        "content": "<p>It's expected to refer to the SearchParameter.url of the SearchParameter in question.</p>",
        "id": 272469658,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1645224988
    },
    {
        "content": "<p>I see, thanks, but where can I find the actual SearchParameter resource associated to that searchParam? Looking at <a href=\"http://hl7.org/fhir/searchparameter-definitions.html#SearchParameter.url\">SearchParameter.url documentation</a>, it says \"<em>This SHOULD be globally unique and SHOULD be a literal address at which at which an authoritative instance of this search parameter is (or will be) published.</em>\" Doesn't this mean that for example <code>http://hl7.org/fhir/SearchParameter/Observation-subject</code> should return a valid SearchParameter resource?</p>",
        "id": 272494440,
        "sender_full_name": "Bashir Sadjad",
        "timestamp": 1645247962
    },
    {
        "content": "<p>With any canonical URL, you look for it on your own server first, then search your favorite registry(ies) and, as a last resort (if you don't mind the security risks), you can resolve the URL and see if you can retrieve it that way.  But it's not guaranteed to resolve.  (And if it does resolve, you're not guaranteed to have access permissions.)</p>",
        "id": 272502204,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1645258019
    }
]