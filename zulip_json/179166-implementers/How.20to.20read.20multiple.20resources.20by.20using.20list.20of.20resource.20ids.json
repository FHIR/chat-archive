[
    {
        "content": "<p>Hello,</p>\n<p>I am building pagination for a custom Encounter search method. There is a nice instruction how to do this:</p>\n<p><a href=\"https://hapifhir.io/hapi-fhir/docs/server_plain/paging.html\">https://hapifhir.io/hapi-fhir/docs/server_plain/paging.html</a></p>\n<p>So far I have listed all the ids.</p>\n<div class=\"codehilite\"><pre><span></span><code>  private List&lt;Long&gt; ids() {\n    Bundle bundle = client\n      .search()\n      .forResource(Encounter.class)\n...\n      .execute();\n\n    List&lt;IBaseResource&gt; resources = new ArrayList&lt;&gt;();\n    resources.addAll(BundleUtil.toListOfResources(ctx, bundle));\n\n    List&lt;Long&gt; list = new ArrayList&lt;&gt;();\n    for (IBaseResource e : resources) {\n      list.add(e.getIdElement().getIdPartAsLong());\n    }\n\n    return list;\n}\n</code></pre></div>\n\n\n<p>Next step would be to get list of Encounters using:</p>\n<div class=\"codehilite\"><pre><span></span><code>private List&lt;IBaseResource&gt; loadResourcesByIds(List&lt;Long&gt; theIdsToReturn) {\n// TODO: how to get Encounters by list of ids?\n}\n</code></pre></div>\n\n\n<p>You can get single Encounter by id:</p>\n<div class=\"codehilite\"><pre><span></span><code>Encounter e = client.read().resource(Encounter.class).withId(id).execute();\n</code></pre></div>\n\n\n<p>Running above query in a loop does not feel as a correct implementation. Read operation does not support reading multiple Encounters using list of ids, I think. Should I use \"where\" operation? </p>\n<div class=\"codehilite\"><pre><span></span><code>    Bundle bundle = client\n      .search()\n      .forResource(Encounter.class)\n      .where(&lt;what should I place here?)\n      .execute();\n\n    List&lt;IBaseResource&gt; encounters = new ArrayList&lt;&gt;();\n    encounters.addAll(BundleUtil.toListOfResources(ctx, bundle));\n</code></pre></div>",
        "id": 204398671,
        "sender_full_name": "Markku Nikkanen",
        "timestamp": 1595234764
    },
    {
        "content": "<p>Search returns a bundle of resources. Why do you want to get the id of returned resources and read from server again? did I miss something herer?</p>",
        "id": 204424915,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1595253398
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191506\">Yunwei Wang</span></p>\n<p>I think you missed something. In Bundle search I must return Encounters (with ref resources, thats why Bundle). Problem is that I do not know how do I formulate \"where\" operation so that it matches list of Encounter IDs.</p>\n<div class=\"codehilite\"><pre><span></span><code>    Bundle bundle = client\n      .search()\n      .forResource(Encounter.class)\n      .where(&lt;what should I place here?)\n      .execute();\n</code></pre></div>",
        "id": 204448109,
        "sender_full_name": "Markku Nikkanen",
        "timestamp": 1595264635
    },
    {
        "content": "<p>I'm not sure what you're asking for still, but [baseUrl]/Encounter?_id=id1,id2,id3 should return a searchset bundle including the three Encounters whose ids are listed.</p>",
        "id": 204452086,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1595266724
    },
    {
        "content": "<p>Sorry, I still don't get it. In your first code block, you received a bundle of Encounter and returns a list of Encounter Ids. And in your second code block, you are trying to read Encounter using the Encounter Ids returned from first code block. Is that correct? My question is if so, why not just return Encounters from the first block?</p>",
        "id": 204452836,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1595267131
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191506\">Yunwei Wang</span> <br>\nBecause I am building pagination see: <a href=\"https://hapifhir.io/hapi-fhir/docs/server_plain/paging.html\">https://hapifhir.io/hapi-fhir/docs/server_plain/paging.html</a></p>",
        "id": 204513945,
        "sender_full_name": "Markku Nikkanen",
        "timestamp": 1595310159
    }
]