[
    {
        "content": "<p>Hi,<br>\nI am using trying to build an implementation guide with several profiles built using the profile template spreadsheet. I noted that the profiles generated have a \"Profile \" added before the name attribute of the resulting StructureDefinition and that the description attribute is not populated.<br>\nI also noted that unlike when extensions are build as part of the build process, extensions in the IG do not get assigned the name extension-abc as they do with the build.<br>\nAre these differences intentional?<br>\nSadiq</p>",
        "id": 153869815,
        "sender_full_name": "Sadiq Saleh",
        "timestamp": 1486065418
    },
    {
        "content": "<p>Ill take a stab at the last question.  If you want an extension to be named <br>\n<code>http://hl7.org/fhir/StructureDefinition/extension-o</code> instead of<br>\n<code>http://hl7.org/fhir/StructureDefinition/observation-bodyPosition</code><br>\nyou can add the 'extension-' prefix in the metadata table in the row with the label \"extension.uri\"</p>\n<p>If you mean the title doesn't say \"Extension: The body position during the observation\"<br>\nbut instead something like \" D.4.1 StructureDefinition-bservation-bodyPosition\"  that depends on how you customize the template used for extensions.  They are using the same templates for Profiles and Extensions by default.  </p>",
        "id": 153869819,
        "sender_full_name": "Eric Haas",
        "timestamp": 1486072719
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span>  for the response. I was able to fix both the uri and title on the generated webpages as you described. However I was referring to the names of the generated JSON and xml files. As I had described, during the build process these are renamed to start with Extension-abc.json and profiles to abc.profile.json for example, but in this case they are all made with a common Structuredefinition-abc.json.</p>",
        "id": 153869904,
        "sender_full_name": "Sadiq Saleh",
        "timestamp": 1486132256
    },
    {
        "content": "<p>Yes those are the IG build generated fragments.  Since extensions use StructureDefinition they share the same prefix as profiles.</p>",
        "id": 153869963,
        "sender_full_name": "Eric Haas",
        "timestamp": 1486152407
    },
    {
        "content": "<p>this is a deliberate difference from the main build</p>",
        "id": 153870187,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1486362700
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  and <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> , it is something that we will work with for the file names. Is this also the reason for the other observation: that the profiles generated have a \"Profile \" added before the name attribute of the resulting StructureDefinition and that the description attribute is not populated?</p>",
        "id": 153870326,
        "sender_full_name": "Sadiq Saleh",
        "timestamp": 1486406228
    },
    {
        "content": "<p>Just a follow up for the question about why \"Profile \" is added by the IG tool in the name attribute of profiles authored using spreadsheets and that the description attribute is not populated?<br>\nAny feedback would be much appreciated.</p>",
        "id": 153870571,
        "sender_full_name": "Sadiq Saleh",
        "timestamp": 1486484227
    },
    {
        "content": "<p>OK here is my quick and dirty summary to using the spreadsheet with the IG publisher.</p>",
        "id": 153870576,
        "sender_full_name": "Eric Haas",
        "timestamp": 1486486854
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/ZqFQ5IlEeiqtTJH-5bjvwYBX/Capture.PNG\" target=\"_blank\" title=\"Capture.PNG\">Capture.PNG</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/ZqFQ5IlEeiqtTJH-5bjvwYBX/Capture.PNG\" target=\"_blank\" title=\"Capture.PNG\"><img src=\"/user_uploads/10155/ZqFQ5IlEeiqtTJH-5bjvwYBX/Capture.PNG\"></a></div>",
        "id": 153870577,
        "sender_full_name": "Eric Haas",
        "timestamp": 1486486866
    },
    {
        "content": "<p>The above snapshot is all you need for creating a profile.  don't need definition, id,  etc, the\"published-structure becomes the id and url through the IG tooling.  Why?  well the IG publisher is based on stitching together the fragments created by the publisher into static web pages using Jekyll so the user can customize the content to her liking.  That means the description is typically replaced by custom content - for example in my case I create the descriptions in Markdown files that are then rendered into html along side the tool-generated profiles by Jekyll.</p>",
        "id": 153870579,
        "sender_full_name": "Eric Haas",
        "timestamp": 1486487370
    },
    {
        "content": "<p>Thanks for that explanation <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span><br>\nSo from what I understand from this is that the IG tool allows me to make descriptions for importing into the Jekyll generated webpages, but these decriptions will not be included into the Json/XML files? </p>",
        "id": 153870582,
        "sender_full_name": "Sadiq Saleh",
        "timestamp": 1486487727
    },
    {
        "content": "<p>Yes these descriptions will not be included into the Json/XML files - they  are separate artifacts from the JSON/XML files and the idea of the IG is to combine all these artifacts into a single document.</p>",
        "id": 153870583,
        "sender_full_name": "Eric Haas",
        "timestamp": 1486487988
    },
    {
        "content": "<p>Perfect, thank you!</p>",
        "id": 153870584,
        "sender_full_name": "Sadiq Saleh",
        "timestamp": 1486488090
    },
    {
        "content": "<p>Is there a reason why the code adds a \"Profile \" tag to the \"Published structure\" for the name?</p>",
        "id": 153870585,
        "sender_full_name": "Sadiq Saleh",
        "timestamp": 1486488947
    },
    {
        "content": "<p>because the old code for spreadsheet to SD conversion did, and the only reason that code still exists is for legacy support. We are trying to get people to stop using spreadsheets for profiles</p>",
        "id": 153870595,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1486492118
    },
    {
        "content": "<p>I see. However given the lack of other tools for generating profiles for the STU3 fhir build, does this warrant an update of this code till other alternatives are available? </p>",
        "id": 153870605,
        "sender_full_name": "Sadiq Saleh",
        "timestamp": 1486496589
    },
    {
        "content": "<p>don't know. you haven't identified a functional problem here</p>",
        "id": 153870662,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1486518945
    },
    {
        "content": "<p>As far as we can see, there are a variety of fields of the StructureDefinition for which there is currently no way to populate except to go in an manually edit the resulting JSON/XML files:<br>\n1) Version<br>\n2) Description<br>\n3) FhirVersion<br>\namong others. I am not sure if this constitutes a functional problem, or is a functional problem just something that breaks the build process?</p>",
        "id": 153870735,
        "sender_full_name": "Sadiq Saleh",
        "timestamp": 1486565256
    },
    {
        "content": "<p>fhirVersion is driven by the version you build against.  Description and version are set on the metadata tab</p>",
        "id": 153870741,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1486570744
    },
    {
        "content": "<p>As far as I can tell this information is pulled from the spreadsheet when using the publish process but not when using the IG tool. <br>\ni.e. I see these fields in JSON files when I build using the publish process, but I don't see any of these three fields populated in  the JSON files that result from the IG tool.</p>",
        "id": 153870743,
        "sender_full_name": "Sadiq Saleh",
        "timestamp": 1486572920
    },
    {
        "content": "<p>Hmm.  May need to submit a tooling correction request then - they should be grabbed.</p>",
        "id": 153870755,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1486580789
    },
    {
        "content": "<p>Au Contraire the version is defined in the definition file  see documentation here: <a href=\"http://wiki.hl7.org/index.php?title=IG_Publisher_Documentation\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=IG_Publisher_Documentation\">http://wiki.hl7.org/index.php?title=IG_Publisher_Documentation</a></p>",
        "id": 153870760,
        "sender_full_name": "Eric Haas",
        "timestamp": 1486581552
    },
    {
        "content": "<p>The version certainly *can* be set in the definition file - that forces the definition of all of the conformance artifacts to the same value.  But, if that's not populated, the version *should* come from the source for each artifact, which means it should come from the spreadsheet.  (There's a bit of an issue in that the spreadsheet only lets you have one set of metadata for everything defined in the sheet, but you can get around that by splitting things into multiple spreadsheets as need be.)</p>",
        "id": 153870767,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1486585231
    },
    {
        "content": "<p>so is there some missing code around metadata in the IG publisher? I'm confused about this thread?</p>",
        "id": 153870803,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1486612187
    },
    {
        "content": "<p>To summarize...<br>\nCurrently there are some fields from metadata which are not put into the final StructureDefinition json object (or put incorrectly) for the following attributes:<br>\n1) name: \"Profile \" is added to the name taken from the published structure name, which means it is not computer friendly.<br>\n2) version is not set from metadata. Can only be set using the \"fixed-business-version\" but this makes all resources conform to the same version.<br>\n3) the fhirVersion is also left empty</p>\n<p>The name and fhirversion attributes are properly populated for the extensions JSON files that are generated, but not the version.</p>",
        "id": 153870873,
        "sender_full_name": "Sadiq Saleh",
        "timestamp": 1486650763
    },
    {
        "content": "<p>1) - the name is only populated like that if you don't have a short description on the root element. But from my next commit, you can use the metadata entry 'name' to set the name directly </p>\n<p>2) version will be set from the metadata from my next commit</p>\n<p>3) fhirVersion will be populated from my next commit</p>",
        "id": 153870899,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1486666857
    },
    {
        "content": "<p>Great, thank you <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> </p>",
        "id": 153870914,
        "sender_full_name": "Sadiq Saleh",
        "timestamp": 1486667759
    }
]