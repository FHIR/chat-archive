[
    {
        "content": "<p>I recently came across a FHIR server where the <code>Reference.reference</code> values were populated with search strings like <code>Patient?identifier=123</code>. I'm pretty sure this isn't allowed, but there was some confusion. The developer also pointed out the <a href=\"https://www.hl7.org/fhir/http.html#2.21.0.17.2\" target=\"_blank\" title=\"https://www.hl7.org/fhir/http.html#2.21.0.17.2\">following note from http.html</a>:</p>\n<blockquote>\n<p>in a transaction (and only in a transaction), references to resources may be replaced by a search URI that describes how to find the correct reference:<br>\n...             &lt;reference value=\"Patient?identifier=12345\"/&gt;</p>\n</blockquote>\n<p>Now that we have <code>Reference.identifier</code>, couldn't this special-case rule go away?</p>",
        "id": 153927525,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1514994698
    },
    {
        "content": "<p>Reference.identifier doesn't support the same capabilities for auto-resolution.</p>",
        "id": 153927530,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1514996512
    },
    {
        "content": "<p>why would we forbid search in a Reference.reference? It would be unsual, but I could see how i might be useful when the target is on another system.</p>",
        "id": 153927537,
        "sender_full_name": "John Moehrke",
        "timestamp": 1514998872
    },
    {
        "content": "<p>We say that a reference \"resolves,\" which I took to mean \"Resolves to a resource\" -- which is different from \"Resolves to a Bundle that may contains resources.\"</p>",
        "id": 153927540,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1515005180
    },
    {
        "content": "<p>Can you say more about the capabilities that <code>Reference.identifier</code> is missing for the use case above?</p>",
        "id": 153927541,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1515005199
    },
    {
        "content": "<p>If it resolves to a bundle of more than one, that would be an error.  If it resolves to 0, not sure if that's an error or not.</p>",
        "id": 153927542,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1515006090
    },
    {
        "content": "<p>Ah, good point. I kind of thought of that after I hit enter.</p>",
        "id": 153927543,
        "sender_full_name": "John Moehrke",
        "timestamp": 1515006102
    },
    {
        "content": "<p>Reference.identifier works to hold the identifier, but not the location</p>",
        "id": 153927544,
        "sender_full_name": "John Moehrke",
        "timestamp": 1515006131
    },
    {
        "content": "<p>in your example, they should just do it right... Is there a good reason for us to accept that example?</p>",
        "id": 153927545,
        "sender_full_name": "John Moehrke",
        "timestamp": 1515006163
    },
    {
        "content": "<p>\"Do it right\"?  If they don't know what the resource id is going to be, but the expect the query to resolve, what other mechanism can they use?</p>",
        "id": 153927547,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1515007290
    },
    {
        "content": "<p>so Lloyd, you are okay with the example Josh found? It seems it is not proper... right? You have indicated yourself that it is an error</p>",
        "id": 153927553,
        "sender_full_name": "John Moehrke",
        "timestamp": 1515009383
    },
    {
        "content": "<p>seems to me if they don't yet know the URL, then they should use Reference.Identifier...right?</p>",
        "id": 153927554,
        "sender_full_name": "John Moehrke",
        "timestamp": 1515009437
    },
    {
        "content": "<p>I didn't indicate it was an error.  I indicated that it could be an error depending on how it resolves.  It's a feature we've defined in the spec and I don't see a good way to make it go away.  Using Reference.identifier wouldn't accomplish the same thing.</p>",
        "id": 153927555,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1515011872
    },
    {
        "content": "<p>(because there's no expectation on servers to resolve Reference.identifier)</p>",
        "id": 153927556,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1515011891
    },
    {
        "content": "<p>I'll chime in here as the owner of the server that Josh \"recently came across\" that was doing this.</p>\n<p>Background:</p>\n<ul>\n<li>This was a holdover from back when we were using HAPI's JPA storage layer, and HAD to submit our bundles to it that way -- we didn't know the logical IDs yet, so we couldn't reference them.</li>\n<li>When we switched to our own storage layer, our mapping code didn't get changed to account for the fact that our mapping now happens at query time, when we DO know the logical IDs.</li>\n</ul>\n<p>My thoughts:</p>\n<ul>\n<li>I don't think that the spec (<a href=\"https://www.hl7.org/fhir/references.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/references.html\">https://www.hl7.org/fhir/references.html</a>) is super clear about what relative URL Reference.reference values SHOULD be. All it (sort of) states is that those relative references should be resolvable.</li>\n<li>I can't think of any scenarios where a relative reference returned by a server _couldn't_ be a logical ID. Can anyone else?</li>\n<li>If not, I'd suggest that the spec be modified to include something like, \"Relative Reference.reference values SHOULD be the logical ID, e.g. <code>Patient/abc123</code>, of a resource on the same server, which SHOULD be resolvable (barring authorization issues).\" Sound reasonable?</li>\n</ul>",
        "id": 153927557,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1515012001
    },
    {
        "content": "<p>you are allowed to include anything in the reference that resolves to a single resource. It's not really expected to be a general query - we only specifically document the query use for transactional behaviour, and in those cases, a server is required to resolve them or blow up. I suppose there's some ambiguity then, if you mean for them to be a query and not to be resolved in the transaction. </p>\n<p>but out general guidance is simply: it must resolve to a single resource. It <em>may</em> be specified on a FHIR RESTful interface (and veyr often is) but this is not required</p>",
        "id": 153927595,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515059254
    },
    {
        "content": "<p>And when you say \"Resolves to a single resource,\" <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> do you mean that <code>GET $url</code> returns a resource? How about a Bundle containing a resource? How about a PDF file containing a text box containing a serialized resource? (The latter, I would expect, is  _not_ what you mean, but I'd like to be explicit about what \"resolve\" means, because finding a Bundle when I expect a Patient would be pretty surprising.)</p>",
        "id": 153927637,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1515089843
    },
    {
        "content": "<p>Also <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> I still don't get what this special case for transactions is all about. If there's a _special case_, why couldn't we use <code>Reference.identifier</code> to address the special case? Why overload <code>Reference.value</code>?</p>",
        "id": 153927638,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1515089936
    },
    {
        "content": "<p>Because you're not always going to search by identifier.  You're going to search by some set of criteria that you expect will resolve to a single resource.</p>",
        "id": 153927641,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1515091574
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> can explain more about the use-cases</p>",
        "id": 153927643,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1515094818
    },
    {
        "content": "<p>identifier doesn't have the obligation to resolve.</p>",
        "id": 153927677,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515099150
    },
    {
        "content": "<p>a bundle containing a resource is a reference to a bundle, not a reference to the resource in the bundle. So that might be legal if you meant to refer to the bundle. but not if you meant to refer to the resource inside the bundle</p>",
        "id": 153927678,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515099192
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  -- and you're saying that populating (say) Observation.subject.reference with <code>Patient?identifier=123</code> (which returns a bundle) is not okay in a \"normal\" Patient resource, but <em>is</em> okay in a Patient resource that appears in a transaction bundle?</p>",
        "id": 153927702,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1515103058
    },
    {
        "content": "<p>yes</p>",
        "id": 153927705,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515103412
    },
    {
        "content": "<p>Conditional reference is the Client saying to the server \"please resolve this for me\". With logicel reference it's up to the server to decide whether to resolve or not.<br>\nIt is also important to note that an unresolvable conditional reference will cause the transaction to fail, whereas an unresolvable logical reference would probably just reamin untouched. A typical use case for conditional references is pretty much every HL7 V2 message that reports something about a Patient. When you map this to FHIR you will have Observations, ChargeItems, Procedures etc. that need to be linked with a Patient of which you only know the logical Identifier.</p>",
        "id": 153927731,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1515138161
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span>!</p>",
        "id": 153927750,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1515160391
    },
    {
        "content": "<p>That sounds like a fantastic capability. Is it required of all servers? Or do we need to identify a way a server declares support for this? I can see this being very helpful in PUSH style communication, and MHD specifically. Would really save a roundtrip at times.</p>",
        "id": 153927752,
        "sender_full_name": "John Moehrke",
        "timestamp": 1515163667
    },
    {
        "content": "<p>I believe it's required if transactions are supported (personally I think the transaction functionality is a bit monolithic and it'd be easier for implementers if they could specify which parts are supported)</p>",
        "id": 153927784,
        "sender_full_name": "Ben Spencer",
        "timestamp": 1515173495
    },
    {
        "content": "<p>we always only introduce complexity like this if people ask. you're the first</p>",
        "id": 153927838,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1515201527
    }
]