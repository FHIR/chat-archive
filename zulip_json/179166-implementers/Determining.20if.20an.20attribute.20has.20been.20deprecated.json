[
    {
        "content": "<p>Is there a simple way to determine if a particular attribute on a Resource has been deprecated and will be removed in a future version?</p>",
        "id": 154004013,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1538424343
    },
    {
        "content": "<p>Something like a <code>deprecated</code> flag in the documentation would be helpful.</p>",
        "id": 154004016,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1538424521
    },
    {
        "content": "<p>Good point.  I don't think we discussed how to actually flag things that have been deprecated.</p>",
        "id": 154004023,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1538424873
    },
    {
        "content": "<p><a href=\"http://build.fhir.org/versions.html#std-process\" target=\"_blank\" title=\"http://build.fhir.org/versions.html#std-process\">http://build.fhir.org/versions.html#std-process</a></p>",
        "id": 154004037,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1538425367
    },
    {
        "content": "<p>Looks like the description is the same as for Informative?</p>",
        "id": 154004051,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1538425677
    },
    {
        "content": "<p>Indeed LOL</p>",
        "id": 154004062,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1538425954
    },
    {
        "content": "<p>IIRC we talked a bit about deprecation during a discussion about FHIR release versioning (in Cologne?)</p>",
        "id": 154004071,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1538426048
    },
    {
        "content": "<p>Some more details here: <a href=\"http://build.fhir.org/versions.html#deprecation\" target=\"_blank\" title=\"http://build.fhir.org/versions.html#deprecation\">http://build.fhir.org/versions.html#deprecation</a></p>",
        "id": 154004082,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1538426147
    },
    {
        "content": "<p>What I'm thinking of is a scenario like this... There's a resource with an attribute we don't want to use anymore <code>Resource.foo</code>.  One way to manage getting rid of this attribute would be to flag <code>foo</code> as <code>deprecated</code> in the next minor version and then delete it completely in the next one after that.  This way in 3.8.0 we might label <code>Resource.foo</code> as deprecated and it would be dropped in 3.9.0.  When it's marked that way in the documentation it gives folks a chance to alter their usage without needing to keep up with the tracker.</p>",
        "id": 154004087,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1538426195
    },
    {
        "content": "<p>Yes we discussed <a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17214\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17214\">https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17214</a> in Cologne.  While I think there was discussion on saying what version a deprecated item would be dropped, the conversation steered more towards duration (current indicates as 2 years per Michel's link).  <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> may recall the details</p>",
        "id": 154004095,
        "sender_full_name": "Dennis Patterson",
        "timestamp": 1538426610
    },
    {
        "content": "<p>What's the reasoning behind 2 years instead of the next major version?</p>",
        "id": 154004096,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1538426726
    },
    {
        "content": "<p>IIRC it's deprecated in the next major version and can't be removed entirely for at least two years after that.</p>",
        "id": 154004117,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1538430985
    },
    {
        "content": "<p>We may move to faster cycle than every 18-24 months once most things are normative.  Specifying a time period rather than a number of releases was a better way of meeting the objective of \"try to ensure time to migrate/plan to adapt\"</p>",
        "id": 154004141,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1538431594
    },
    {
        "content": "<p>We didn't specify how we'd differentiate deprecated and retired content.  However, we've committed to adding an extension  to indicate when content became normative.  I presume we'll follow the same pattern for the others.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ?</p>",
        "id": 154004156,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1538431908
    },
    {
        "content": "<p>we have one deprecated element: OperationOutcome.issue.location</p>",
        "id": 154004176,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1538433219
    },
    {
        "content": "<p>And no computable way of exposing that fact at present it looks like <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ?</p>",
        "id": 154004206,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1538435656
    },
    {
        "content": "<p>I'm just debugging - it used to be</p>",
        "id": 154004225,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1538436422
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Deprecated&quot;</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/extension&gt;</span>\n</pre></div>",
        "id": 154004239,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1538437529
    },
    {
        "content": "<p>valueString and not valueCode?</p>",
        "id": 154004268,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1538443846
    },
    {
        "content": "<p>(Would much prefer the latter...)</p>",
        "id": 154004270,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1538443872
    },
    {
        "content": "<p>I was planning on updating the .net FHIR client code generator to use this to add the code attribute to help developers know what is going on. (and also the hide the property from the intelisense too)</p>",
        "id": 154004307,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1538449291
    },
    {
        "content": "<p>I wouldn't necessarily hide it on deprecated - but might on retired.  Best would be raise a compile warning for deprecated stuff</p>",
        "id": 154004368,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1538483309
    },
    {
        "content": "<p>I would <em>definitely</em> hide it from intellisense.  The idea of deprecation is that we don't want anyone new to use it.</p>",
        "id": 154004369,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1538483481
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191936\">@Michael Donnelly</span>  <strong>DEPRECATED</strong> should be used for elements that are in the process of being replaced by newer ones. IE, you don't hide these items as they are in current use, but you are giving notice that they will be <em>retired</em> in the future. <strong>RETIRED</strong> should be used when the element is no longer available for use at all. Is that how you are using the phrase?</p>",
        "id": 154004405,
        "sender_full_name": "Robert McClure",
        "timestamp": 1538486323
    },
    {
        "content": "<p>They aren't necessarily being replaced.  As we defined it (I'll hunt down the tracker in a minute), when we deprecate an element, servers are still supposed to support it, but we'd rather clients didn't use it any more.  Clients already using that element aren't required to change, but new ones ought not start using it.</p>",
        "id": 154004427,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1538486750
    },
    {
        "content": "<p>So a deprecated element should be in the spec (but marked as deprecated) so people understand what's being used currently.  But I don't think a deprecated element should be in Intellisense, because we don't want someone writing new code to have that deprecated element appear.</p>",
        "id": 154004428,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1538486874
    },
    {
        "content": "<p>Here's the tracker from the last WGM where we added the concept of deprecation: <a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17214\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17214\">https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17214</a></p>",
        "id": 154004440,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1538487312
    },
    {
        "content": "<p>My concern around this was mostly in discoverability.  I want there to be mechanisms in place to alert developers that it's been deprecated and thus should not be used.  Adding flags to attributes and/or extensions would allow tooling to know this, and the documentation should clearly indicate when it will be removed and what to use instead (when appropriate).  <span class=\"user-mention\" data-user-id=\"191936\">@Michael Donnelly</span> what does your IDE do when you try to use a deprecated method in other languages?  That might be a good model for how to handle this.</p>",
        "id": 154004441,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1538487395
    },
    {
        "content": "<p>.NET provides an Obsolete attribute that generates warnings in the IDE.</p>",
        "id": 154004447,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1538487599
    },
    {
        "content": "<p>We already use this in the .NET API to indicate deprecated classes and methods.</p>",
        "id": 154004448,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1538487657
    },
    {
        "content": "<p>We use .NET too, so <span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> beat me to it.  :)</p>",
        "id": 154004470,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1538487912
    },
    {
        "content": "<p>Yep, all of this.<br>\nIf at some point we get more serious than deprecated, then the warning would become an error. But we're a long way from it today.</p>",
        "id": 154005102,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1538532138
    },
    {
        "content": "<p>(Sounds like I have support to do what I was going to do)</p>",
        "id": 154005103,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1538532150
    },
    {
        "content": "<p>It looks like the descriptive text for Deprecated in <a href=\"http://build.fhir.org/versions.html#std-process\" target=\"_blank\" title=\"http://build.fhir.org/versions.html#std-process\">2.7.0.1 The Standards Development Process</a> is copied from the line above.  I made a tracker for this with proposed wording: <a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19280\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19280\">https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19280</a></p>",
        "id": 154005307,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1538576085
    }
]