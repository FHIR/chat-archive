[
    {
        "content": "<p>Is it weird to create a query parameter that is a \"short cut\" to query by identifier? IE: driversLicense, username, ssn... rather than requiring the caller know the specific system, or chain to identifier type?</p>",
        "id": 153842670,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1470412257
    },
    {
        "content": "<p>I think it's an idea worth exploring.</p>",
        "id": 153842671,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1470412579
    },
    {
        "content": "<p>we're looking at doing this for some internal/back channel calls backed by FHIR. It's common for a system to know they have a DL number, for example, or an MRN, without knowing the unique system it belongs to. And chaining is doable, but for really common identifiers it seems like having that short cut would be nice</p>",
        "id": 153842673,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1470412930
    },
    {
        "content": "<p>Can you describe what you mean by chaining (like with an example of what it looks like)?</p>",
        "id": 153842674,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1470413050
    },
    {
        "content": "<p>Sure. These all essentially map to the identifier.type field. So, for example, querying a patient by MRN (knowing you have an MRN, but not necessarily the org it's tied to)</p>",
        "id": 153842675,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1470413100
    },
    {
        "content": "<p>This is a really good point, but unrelated to chaining think.  Basically, there's no way to say \"Patient where identifier.type={{drivers license}}\"</p>",
        "id": 153842676,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1470413243
    },
    {
        "content": "<p>Because identifier search is is a<code>token</code> type (<a href=\"http://hl7-fhir.github.io/search#token\" target=\"_blank\" title=\"http://hl7-fhir.github.io/search#token\">http://hl7-fhir.github.io/search#token</a>)</p>",
        "id": 153842677,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1470413281
    },
    {
        "content": "<p>Patient?identifier=M12345&amp;identifier.type=http://hl7.org/fhir/v2/0203|MR</p>",
        "id": 153842678,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1470413281
    },
    {
        "content": "<p>Is <code>identifier.type</code>even valid in a search??</p>",
        "id": 153842679,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1470413296
    },
    {
        "content": "<p>That's what I was about to ask</p>",
        "id": 153842680,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1470413304
    },
    {
        "content": "<p>identifier is</p>",
        "id": 153842681,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1470413309
    },
    {
        "content": "<p>Yeah, but the FHIR API has no way to refer to the type. Seems like a gap to me</p>",
        "id": 153842682,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1470413327
    },
    {
        "content": "<p>the type is a field on identifier. Can you not chain down to any field? Or must it always be identifier as a search parameter on its own? (which won't ever work for fields that aren't a resource)</p>",
        "id": 153842683,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1470413412
    },
    {
        "content": "<p>Yeah, you can't chain into datatypes -- chaining only works when you want to follow resource links.</p>",
        "id": 153842684,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1470413453
    },
    {
        "content": "<p>well. fun. So we would have to create a short cut</p>",
        "id": 153842685,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1470413477
    },
    {
        "content": "<p>for this to work now</p>",
        "id": 153842686,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1470413489
    },
    {
        "content": "<p>I think so.</p>",
        "id": 153842687,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1470413511
    },
    {
        "content": "<p>we could add identifier type as a parameter but it would have unexpected effects here:</p>\n<div class=\"codehilite\"><pre>Patient?identifier=M12345&amp;identifier.type=http://hl7.org/fhir/v2/0203|MR\n</pre></div>",
        "id": 153842708,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1470433108
    },
    {
        "content": "<p>return any patient with an identifier M12345 and with a MRN</p>",
        "id": 153842709,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1470433131
    },
    {
        "content": "<p>no need for the MRN to be M12345</p>",
        "id": 153842710,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1470433138
    },
    {
        "content": "<p>needs further thought</p>",
        "id": 153842711,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1470433170
    },
    {
        "content": "<p>This seems like a place where a composite search parameter would be appropriate</p>",
        "id": 153842738,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1470450311
    },
    {
        "content": "<p>hello all, i'm little bit confusing with an <em>Identifiers</em> in fhir. we have id(Resource id) which is generated by the server(HAPI FHIR) and Identifier(business purpose). but don't know how to take care of that. so any suggesions please. <br>\nThank you.</p>",
        "id": 153892079,
        "sender_full_name": "Jayashree Surnar",
        "timestamp": 1496398645
    },
    {
        "content": "<p>You don't have to fill in <code>Identifier(business purpose)</code>, it's optional. Does that help?</p>",
        "id": 153892080,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1496399399
    },
    {
        "content": "<p>yes it's optional. but if we want. then how to take care of that?</p>",
        "id": 153892081,
        "sender_full_name": "Jayashree Surnar",
        "timestamp": 1496399531
    },
    {
        "content": "<p>Have a look at these examples: <a href=\"http://hl7.org/fhir/STU3/datatypes-examples.html#identifier\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/datatypes-examples.html#identifier\">http://hl7.org/fhir/STU3/datatypes-examples.html#identifier</a> :)</p>",
        "id": 153892082,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1496399613
    },
    {
        "content": "<p>An identifier can be whatever is appropriate for the context and use case.<br>\nLike:<br>\n- a patient's insurance number<br>\n- a medical record number within a hospital information system<br>\n- some official \"number\" for a hospital or a practitoner<br>\n- the number of a pathology/radiology/... report<br>\n- and so on<br>\nWhenever you have this kind of data, Identifier is the place to put it</p>",
        "id": 153892083,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1496399617
    },
    {
        "content": "<p>okay thank you <span class=\"user-mention\" data-user-id=\"191363\">@Vadim Peretokin</span> , <span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span> .</p>",
        "id": 153892087,
        "sender_full_name": "Jayashree Surnar",
        "timestamp": 1496400852
    },
    {
        "content": "<p>I have identifiers of a common type which are not singletons but tuples. That is, the \"identifier\" consists of a pair of values, the \"group\", which in our case is essentially an organization but in the more generalized case could be a unit in an organization, and the \"id\", which is a value unique only w/in the context of the \"group\". The FHIR Identifier type specifies that the identifier.value SHALL be unique w/in identifier.system.<br>\nSo, options I see are: 1) append the “group” to identifier.system (<a href=\"http://address.com/system/GROUP\" target=\"_blank\" title=\"http://address.com/system/GROUP\">http://address.com/system/GROUP</a>), 2) concatenate the “group” and “id” values using a delimiter guaranteed to not be in either, 3) create an extension of the resource (in our case Patient) which has a new type of identifier which has sub-groups, or 4) modify the FHIR Identifier type to add a 0..1 string (“group”?) where if the “group” is present, then the tuple (Identifier.group, Identifier.value) SHALL be unique w/in Identifier.system.<br>\nWe don’t have a need for multi-level hierarchies, no groupings of groups. But in the most general case, that may be possible, which would rule out #4 above.<br>\nWhat is the best approach?</p>",
        "id": 154002480,
        "sender_full_name": "Kirt Schaper",
        "timestamp": 1538256157
    },
    {
        "content": "<p>thanks for the question, I struggle with that too (also already in CDA ...). if a group is itself a unique string  within the organization 1) or 2) is my preferred approach.  if a group is by itself an identifier (combination of system, value) 3) looks like the next option, but then I have not the possibility to search it directly over the api, i guess 4 would be the way to go but that then group should be a 0..1 Identifier, don't know if that is within 80%.</p>",
        "id": 154002625,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1538299951
    }
]