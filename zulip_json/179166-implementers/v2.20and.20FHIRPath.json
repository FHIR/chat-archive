[
    {
        "content": "<p>I need to standardise the use of fluentpath against v2 content. With that in mind, I'd like to ask anyone interested in that to check this UML class diagram:</p>",
        "id": 153855834,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478571978
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/OYhJ8PHh2SYbpcovR_F4lLQi/v2-class.png\" target=\"_blank\" title=\"v2-class.png\">v2-class.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/OYhJ8PHh2SYbpcovR_F4lLQi/v2-class.png\" target=\"_blank\" title=\"v2-class.png\"><img src=\"/user_uploads/10155/OYhJ8PHh2SYbpcovR_F4lLQi/v2-class.png\"></a></div>",
        "id": 153855835,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478572013
    },
    {
        "content": "<p>this would allow fluent path statements like these:</p>",
        "id": 153855836,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478572025
    },
    {
        "content": "<p>Message.segment.where(code = 'PID').field[3].repeat.first.simple()<br>\nMessage.segment[2].elements(3).simple()<br>\nMessage.segment.where(code = 'PID').field[3].repeat.where(component[4].value = 'MR').simple()<br>\nMessage.segment.where(code = 'PID').elements(3).where(component[4].value = 'MR').component[1].text</p>",
        "id": 153855838,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478572030
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191397\">@Jared Davison</span> - finishing our discussion here</p>",
        "id": 153855839,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478572043
    },
    {
        "content": "<p>Comments welcome...</p>",
        "id": 153855840,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478572132
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191430\">@Paul Knapp</span> <span class=\"user-mention\" data-user-id=\"191637\">@Dale Nelson</span> <span class=\"user-mention\" data-user-id=\"191369\">@Andy Stechishin</span> Maybe worth adding a v2 appendix to FHIRPath for this little content</p>",
        "id": 153855842,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478572322
    },
    {
        "content": "<p>My mental map for v2 content has always been <code>Message &gt; Group &gt; Segment &gt; Component &gt; Subcomponent</code></p>\n<p>What's element? And you're missing group. And is it better to model component and subcomponent separately, since they are not able to be nested arbitrarily deep as this implies.</p>",
        "id": 153855843,
        "sender_full_name": "James Agnew",
        "timestamp": 1478572475
    },
    {
        "content": "<p>I don't care about Group. There's a theoretical abstract message syntax, but you can't rely on anyone actually following it. That's been a problem with the v2.xml</p>",
        "id": 153855844,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478572634
    },
    {
        "content": "<p>field/element is for repeats</p>",
        "id": 153855845,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478572650
    },
    {
        "content": "<p>in my earlier models, I treated component and subcomponent separately, but when you start profiling this for v2 versions, you find that there's only one data type, whether it's used on an element or a component. </p>",
        "id": 153855846,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478572706
    },
    {
        "content": "<p>this way, the meta model matches more closely, and you can generate profiles for these things. </p>",
        "id": 153855847,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478572728
    },
    {
        "content": "<p>if I was only interested in fhirpath, I probably would've gone with component and subcomponent separately, but I'm also interested in profiling...</p>",
        "id": 153855848,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478572762
    },
    {
        "content": "<p>For some types of messages I don't see how you could ever get away without group.</p>\n<p>ORU^R01 messages often have sequences like <code>ORC OBR OBX OBX ORC OBR OBX OBX</code> and it's nearly useless to know you have the 3rd OBX without knowing it's the first in the econd group</p>",
        "id": 153855849,
        "sender_full_name": "James Agnew",
        "timestamp": 1478572799
    },
    {
        "content": "<p>\"you find that there's only one data type, whether it's used on an element or a component.\" My goodness is that part a pain in the ass sometimes. :)</p>",
        "id": 153855851,
        "sender_full_name": "James Agnew",
        "timestamp": 1478572839
    },
    {
        "content": "<p>back in a few, but it might be worth adding accessors for selecting subgroups following segments or something....</p>",
        "id": 153855852,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478572875
    },
    {
        "content": "<p>improve on iterating logic</p>",
        "id": 153855853,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478572889
    },
    {
        "content": "<p>.subset(start, end) - select all the segments after start, and before end</p>",
        "id": 153855872,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478578056
    },
    {
        "content": "<p>alternatively, we could present a grouping struture as an optional way to iterate the content</p>",
        "id": 153855873,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478578079
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/qTD1_k-NH_SDQdKcZCEWF70F/v2-class.png\" target=\"_blank\" title=\"v2-class.png\">v2-class.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/qTD1_k-NH_SDQdKcZCEWF70F/v2-class.png\" target=\"_blank\" title=\"v2-class.png\"><img src=\"/user_uploads/10155/qTD1_k-NH_SDQdKcZCEWF70F/v2-class.png\"></a></div>",
        "id": 153855881,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478578810
    }
]