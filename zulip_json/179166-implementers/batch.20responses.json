[
    {
        "content": "<p>Hi all -<br>\nI have a case where I'm in need of implementing Bundle batch processing. Due to the nature of batch processing, some of the requests within the batch bundle may fail - some may succeed. Looking at <a href=\"https://www.hl7.org/fhir/stu3/bundle.html#transaction-response\">https://www.hl7.org/fhir/stu3/bundle.html#transaction-response</a>, I don't see any examples of how errors for some of the requests within the bundle should look like. I also seem to lack the understanding of how a response can refer to the requests within the origin batch bundle (I suspect a fullUrl reference would be proper). Guidance to this matter is highly appreciated.</p>",
        "id": 212079145,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1601647702
    },
    {
        "content": "<p>A transaction either fails (one or more of its contents could not be processed), or succeeds (all of the contents are succesfully processsed). By definition a transaction response won't ever be a mixture of successfully and non-sucessfully processed transaction contents. <br>\nIn Batches, partial failure could happen. Entry x in the Bundle (the x-th entry) has a corresponding entry x in the Responde Bundle.</p>",
        "id": 212081609,
        "sender_full_name": "René Spronk",
        "timestamp": 1601648923
    },
    {
        "content": "<p>Yes i know - but I dont see any example of this in the spec</p>",
        "id": 212086672,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1601651201
    },
    {
        "content": "<p>The link holds the text \"Transaction/batch Response\"</p>",
        "id": 212086758,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1601651246
    },
    {
        "content": "<p>I would like to see a batch response where the content has partially failed</p>",
        "id": 212086864,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1601651286
    },
    {
        "content": "<p>And the originating request</p>",
        "id": 212086917,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1601651320
    },
    {
        "content": "<p>And i would like such example to be part of the specification <span class=\"user-mention\" data-user-id=\"191372\">@René Spronk</span></p>",
        "id": 212087338,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1601651439
    },
    {
        "content": "<p>The response entry does not link to the request entry but the response entries has the same order as the request entries. The section states \"... contains one entry for each entry in the request, <em>in the same order</em>, with the outcome of processing the entry\"</p>",
        "id": 212087798,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1601651635
    },
    {
        "content": "<p>Good point <span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span> - I guess order really matters on this point</p>",
        "id": 212089267,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1601652218
    },
    {
        "content": "<p>But why wouldnt a reference to the entry's fullUrl in the request be sufficient?</p>",
        "id": 212089490,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1601652310
    },
    {
        "content": "<p>I mean that in theory, that is</p>",
        "id": 212091393,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1601653146
    },
    {
        "content": "<p>entry.fullUrl is optional. Especially when batch several independent requests, requester may not bother to create a fullUrl for each entry.</p>",
        "id": 212093114,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1601653925
    }
]