[
    {
        "content": "<p>We're making a CDS system that recommends templates for sets of treatments. We're planning on using OrderSet to represent these recommendations because it seems tailored to do just that. However, these treatment set templates need codings because they need to be mapped across different systems. We're thinking of using OrderSet.action.concept for those codings. Just want to sanity-check all of that -- does that seem sound?</p>",
        "id": 153816119,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458229024
    },
    {
        "content": "<p>Hi Andrew, yes, that's the intent of that element, to provide meaning to the action so it can be shared between different systems.</p>",
        "id": 153816122,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458229384
    },
    {
        "content": "<p>And I don't know if you saw it yet, but I added the relatedAction element there to support relationships between actions, I still owe you an example there, but does that element look like it will support the relationships you need?</p>",
        "id": 153816123,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458229437
    },
    {
        "content": "<p>cool. The other question we have is -- let's say the doctor decides to use this particular OrderSet. We'd want to then create a CarePlan based off of the OrderSet</p>",
        "id": 153816124,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458229505
    },
    {
        "content": "<p>We could programmatically construct the exact CarePlan, but we'd actually prefer to just make a POST with a reference to the OrderSet</p>",
        "id": 153816125,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458229529
    },
    {
        "content": "<p>How would you recommend structuring that CarePlan POST request to reference the OrderSet?</p>",
        "id": 153816126,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458229578
    },
    {
        "content": "<p>maybe just <code>CarePlan.activity.detail.code</code>?</p>",
        "id": 153816127,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458229661
    },
    {
        "content": "<p>er, or <code>CarePlan.activity.reference</code>?</p>",
        "id": 153816128,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458229684
    },
    {
        "content": "<p>So, typically with the order sets that we've encountered, there are choices that the practitioner makes as part of using the order set. Do you have that in your order sets?</p>",
        "id": 153816131,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458230759
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> could you clarify what you mean by that? we're considering each order set (each template of treatments) as an individual choice, and the doctor just picks one of them. it's possible there could be sub-choices/sub-options eventually within the order set, so i guess if we structured everything to support that possibility it wouldn't be the end of the world</p>",
        "id": 153816137,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458235784
    },
    {
        "content": "<p>but even so, what the practitioner would be choosing is still something like a full OrderSet</p>",
        "id": 153816138,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458235824
    },
    {
        "content": "<p>Okay, that makes sense, but I wonder if it wouldn't be an operation against the OrderSet? Something like OrderSet/XYZ$place...?</p>",
        "id": 153816143,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458236341
    },
    {
        "content": "<p>That operation would then be where the realization of the OrderSet actually occurred.</p>",
        "id": 153816145,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458236387
    },
    {
        "content": "<p>Sure, that makes sense</p>",
        "id": 153816146,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458236408
    },
    {
        "content": "<p>I'll mock something up then so we can have an example to discuss further.</p>",
        "id": 153816147,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458236452
    },
    {
        "content": "<p>it wouldn't be POST /OrderSets, because we're not creating an OrderSet, but it could be POST /OrderSets/:id/place? with patient params</p>",
        "id": 153816148,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458236453
    },
    {
        "content": "<p>ok</p>",
        "id": 153816149,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458236456
    },
    {
        "content": "<p>Right, exactly.</p>",
        "id": 153816150,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458236468
    },
    {
        "content": "<p>but the resource that gets created probably would be a CarePlan, at least in our case</p>",
        "id": 153816151,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458236486
    },
    {
        "content": "<p>maybe not in every case</p>",
        "id": 153816152,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458236488
    },
    {
        "content": "<p>The intention is to update CarePlan (and all other \"requestish\" resources to be able to point to a \"Protocol/Orderset\" they're based on.  Note that this won't generate a fully populated care plan.  If you want that, you'll need an operation, not a simple POST.</p>",
        "id": 153816153,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1458236493
    },
    {
        "content": "<p>ok</p>",
        "id": 153816154,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458236519
    },
    {
        "content": "<p>that makes sense to me</p>",
        "id": 153816155,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458236522
    },
    {
        "content": "<p>Right, this would be an operation, but against the OrderSet that may generate a CarePlan.</p>",
        "id": 153816156,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458236526
    },
    {
        "content": "<p>i feel like it's more RESTful to POST to the resource you're hoping to create</p>",
        "id": 153816157,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458236544
    },
    {
        "content": "<p>but perhaps both could be supported?</p>",
        "id": 153816158,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458236551
    },
    {
        "content": "<p>for \"template\" resources like this it needs to be clear how to create the realized resource given the necessary patient/time/practitioner context</p>",
        "id": 153816160,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458236592
    },
    {
        "content": "<p>Well, I think the POST to a CarePlan would be if you manually realized the OrderSet, but if you want the server to realize it, seems like an operation would be necessary.</p>",
        "id": 153816161,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458236630
    },
    {
        "content": "<p>right. i guess in our case the main server we're integrating with already knows how to draft a care plan (or its internal representation of this type of care plan) from a reference to the order set</p>",
        "id": 153816163,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458236796
    },
    {
        "content": "<p>but we want to structure that request in a way that will be compatible with other systems we integrate with</p>",
        "id": 153816164,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458236818
    },
    {
        "content": "<p>all of whom will have pretty formalized representations of this type of care plan (template), but not necessarily identical ones</p>",
        "id": 153816165,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458236844
    },
    {
        "content": "<p>also -- apologies, this is a very nitpicky question, but <code>ActionDefinition.concept</code> appears to be an array (<code>0..*</code> elements) even though each element is itself a <code>CodeableConcept</code> with <code>0..*</code> elements in <code>coding</code>. Is there any reason why we should have an array of arrays of codings on an <code>ActionDefinition</code>?</p>",
        "id": 153816166,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458237267
    },
    {
        "content": "<p>and another nitpicky question -- it looks like <code>OrderSet.action</code> is a <code>0..*</code> array too. we were hoping to use <code>OrderSet.action.concept</code> to represent the entire order set's coding, but if there can be multiple actions, shouldn't that codeable concept be at the top level?</p>",
        "id": 153816167,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458237380
    },
    {
        "content": "<p>if there was always _one_ top-level action (which could have <code>0..*</code> sub-actions), that would work, but i guess it would be best to just have <code>OrderSet.concept</code>.</p>",
        "id": 153816168,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458237482
    },
    {
        "content": "<p>that or have <code>moduleMetadata.concept</code></p>",
        "id": 153816169,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458237652
    },
    {
        "content": "<p>The reason there are multiple concepts on the action is that each Coding within a given CodeableConcept should be equivalent, so to express two different concepts, you'd need two different CodeableConcepts. And you may have multiple meanings (from different perspectives) that you want to attach to each action within the order set.</p>",
        "id": 153816172,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458238220
    },
    {
        "content": "<p>As far as a concept to represent the entire order set, yes, that would be more appropriate in the metadata.</p>",
        "id": 153816173,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458238245
    },
    {
        "content": "<p>ok</p>",
        "id": 153816174,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1458238251
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> , from before -- any updates on how relative timings of actions should be specified</p>",
        "id": 153818423,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459197049
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191516\">@Andrew Ross</span>, yes, the relatedAction element of the ActionDefinition that is used to specify the actions of an order set can be used to define relative timings between items in the order set:</p>",
        "id": 153818432,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1459198346
    },
    {
        "content": "<p><a href=\"https://hl7-fhir.github.io/actiondefinition-definitions.html#ActionDefinition.relatedAction\" target=\"_blank\" title=\"https://hl7-fhir.github.io/actiondefinition-definitions.html#ActionDefinition.relatedAction\">https://hl7-fhir.github.io/actiondefinition-definitions.html#ActionDefinition.relatedAction</a></p>",
        "id": 153818433,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1459198347
    },
    {
        "content": "<p>Each action defines an identifier that you can use to point to it.</p>",
        "id": 153818434,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1459198402
    },
    {
        "content": "<p>The relationship allows you to specify before/after and a relative offset.</p>",
        "id": 153818435,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1459198413
    },
    {
        "content": "<p>great, thank you!</p>",
        "id": 153818436,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459198430
    },
    {
        "content": "<p>hi <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> , one more question about action definitions and timings. Right now I've found a really good way to represent everything about the relative timings of my actions, except for the total length of time of an action. And I have a way of getting around it but it makes things less modular.</p>\n<p>Let me give a bit more detail -- I'm working with chemotherapy regimens, and there are 2 \"courses\" of chemotherapy, each of which I want to represent as their own top-level action. The second course starts after the first course. What I would like to do is say that the second course has a related action equal to the first course, and it starts after the first course ends. However, it seems like I have no way of specifying exactly how long the first course lasts (the first  course has subactions with relative offsets, but its full length is a little bit longer than the longest offset).</p>\n<p>I could get around this by just creating a parent action that represents both courses, then giving the second course a relative offset of the exact amount of time of the first course. However, it feels hacky, because I'm specifying the length of the first course on the second course, and also if the first course ends up being lengthened for any reason, the second course would be delayed, so I'd like to express it more semantically.</p>\n<p>Any thoughts? I can make what is there work (and once again, it's awesome), but I feel like the current spec is missing a \"duration\" attribute for action definitions.</p>",
        "id": 153818797,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459260703
    },
    {
        "content": "<p>also... if i wanted to be really greedy, I would also ask for a \"repeat\" attribute as well, but it's not as necessary</p>",
        "id": 153818804,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459261008
    },
    {
        "content": "<p>that one might not make as much sense, maybe. but the duration seems important</p>",
        "id": 153818806,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459261051
    },
    {
        "content": "<p>What are the targets of your action? MedicationAdministration?</p>",
        "id": 153818809,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1459261931
    },
    {
        "content": "<p>yes</p>",
        "id": 153818810,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459261950
    },
    {
        "content": "<p>or MedicationOrder, not sure which is more appropriate</p>",
        "id": 153818811,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459261962
    },
    {
        "content": "<p>MedicationOrder, which would then be converted to a MedicationAdministration by the workflow of actually doing the administering. Or at least, that's my reading of it. So you're using the Timing within the MedicationOrder, but it doesn't allow you to specify both the overall duration and the timing of the specific instance, right?</p>",
        "id": 153818813,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1459262102
    },
    {
        "content": "<p>Because it's something like \"administer this medication weekly for 12 weeks\"?</p>",
        "id": 153818814,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1459262182
    },
    {
        "content": "<p>something like that. i think it's fine for us to just make 12 separate sub-actions for each order</p>",
        "id": 153818815,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459262212
    },
    {
        "content": "<p>but we want to say \"this whole cycle is 12 full weeks\"</p>",
        "id": 153818816,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459262225
    },
    {
        "content": "<p>because the last sub-action takes place at the start of the 12th week</p>",
        "id": 153818817,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459262239
    },
    {
        "content": "<p>not the end</p>",
        "id": 153818818,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459262242
    },
    {
        "content": "<p>and then we want the next cycle to start at the start of the 13th week</p>",
        "id": 153818819,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459262251
    },
    {
        "content": "<p>Yeah, would be nice to be able to model that with a repeat somehow so you don't have to repeat each action.</p>",
        "id": 153818821,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1459262354
    },
    {
        "content": "<p>it's true, but sometimes there are slight differences in later repeats</p>",
        "id": 153818822,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459262371
    },
    {
        "content": "<p>so it might be too complicated</p>",
        "id": 153818823,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459262375
    },
    {
        "content": "<p>and it's maybe harder for implementers</p>",
        "id": 153818824,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459262381
    },
    {
        "content": "<p>but -- the main thing is to say that the second cycle should start after the first cycle</p>",
        "id": 153818825,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459262392
    },
    {
        "content": "<p>i guess the \"anchor\"ing doesn't make sense without the duration</p>",
        "id": 153818826,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459262415
    },
    {
        "content": "<p>Right, so put all the first cycle actions within a containing action, and then set up the relationship to that container.</p>",
        "id": 153818827,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1459262433
    },
    {
        "content": "<p>right, that works, but it requires specifying the second cycle relative to the root</p>",
        "id": 153818828,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459262451
    },
    {
        "content": "<p>rather than the first</p>",
        "id": 153818829,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459262454
    },
    {
        "content": "<p>e.g. saying the second cycle starts 13 weeks after the start</p>",
        "id": 153818830,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459262473
    },
    {
        "content": "<p>so we're effectively defining the length of the first cycle but only on the second cycle</p>",
        "id": 153818831,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459262486
    },
    {
        "content": "<p>I see, you could set it to be after the last action of the first cycle though, right?</p>",
        "id": 153818834,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1459262810
    },
    {
        "content": "<p>So each action in the first cycle starts after the previous one by a week.</p>",
        "id": 153818835,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1459262841
    },
    {
        "content": "<p>it's true, but it feels a bit icky to me</p>",
        "id": 153818839,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459263313
    },
    {
        "content": "<p>semantically, the second cycle starts after the end of the first one</p>",
        "id": 153818840,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459263330
    },
    {
        "content": "<p>that's what the current modeling seems to encourage</p>",
        "id": 153818841,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459263338
    },
    {
        "content": "<p>it's just missing a way to say when \"the end of the first one\" is</p>",
        "id": 153818842,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459263351
    },
    {
        "content": "<p>if you're going to have a concept of anchoring something to the end of an action, there needs to be a way to specify when that action ends</p>",
        "id": 153818843,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459263392
    },
    {
        "content": "<p>Yeah, the reason I didn't put that in though was that's dependent on the type of the target. So a MedicationOrder has a Timing that says how long it is.</p>",
        "id": 153818844,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1459263438
    },
    {
        "content": "<p>right, it's true</p>",
        "id": 153818845,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459263453
    },
    {
        "content": "<p>that works when the action is a single resource</p>",
        "id": 153818848,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459263472
    },
    {
        "content": "<p>anyway, it's just a suggestion -- we can work around it by adding a parent action</p>",
        "id": 153818849,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459263498
    },
    {
        "content": "<p>I realize that then becomes an implementation complexity, but I wanted to avoid introducing a redundant element if possible.</p>",
        "id": 153818850,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1459263501
    },
    {
        "content": "<p>yeah</p>",
        "id": 153818851,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459263508
    },
    {
        "content": "<p>i just feel like it completes what's there, logically</p>",
        "id": 153818852,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459263524
    },
    {
        "content": "<p>but maybe it's worth sitting and thinking about it more</p>",
        "id": 153818853,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459263573
    },
    {
        "content": "<p>Yeah it makes sense and the chemotherapy order sets are particularly detailed so it's a great use case and I appreciate you working through it. I'll look at adding a duration there. With the repeat it would allow for some economy there too.</p>",
        "id": 153818854,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1459263627
    },
    {
        "content": "<p>sounds good, and thanks.</p>",
        "id": 153818855,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459263732
    },
    {
        "content": "<p>Is this chemotherapy use case published / available anywhere? I am working on an equivalent openEHR medication order /timing model for use inside systems, but high expectation that FHIR will be used for data exchange, and I am trying to ensure that we stay closely aligned.  The chemo test case would be a helpful 'stress test'.</p>",
        "id": 153818856,
        "sender_full_name": "Ian McNicoll",
        "timestamp": 1459263965
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191650\">@Ian McNicoll</span> i might be able to send you some of what we've been working on, and we've been talking to other organizations that are doing the same thing. let me get back to you after i check if it's okay</p>",
        "id": 153818857,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459264096
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191516\">@Andrew Ross</span> many thanks</p>",
        "id": 153818858,
        "sender_full_name": "Ian McNicoll",
        "timestamp": 1459264142
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191650\">@Ian McNicoll</span> and <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> -- here is a gist where I laid out how we're thinking of representing and querying chemotherapy templates as order sets: <a href=\"https://gist.github.com/asross/e32c7735e20f356d34fc16b49c261cb9\" target=\"_blank\" title=\"https://gist.github.com/asross/e32c7735e20f356d34fc16b49c261cb9\">https://gist.github.com/asross/e32c7735e20f356d34fc16b49c261cb9</a></p>",
        "id": 153819116,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459350835
    },
    {
        "content": "<p>let me know what you think. i did add <code>duration</code> to <code>ActionDefinition</code> because it made the representation more concise, let me know what you think</p>",
        "id": 153819117,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459350868
    },
    {
        "content": "<p>also important is whether we're using <code>moduleMetadata.identifier</code> and <code>moduleMetadata.topic</code> correctly</p>",
        "id": 153819118,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459350898
    },
    {
        "content": "<p>...and finally, if there's any update on how a <code>CarePlan</code> might eventually point back to the <code>OrderSet</code> it was placed from, let me know (cc <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> )</p>",
        "id": 153819119,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459350945
    },
    {
        "content": "<p>There's an intention that all \"request\" type resources, including CarePlan will have the ability to point to a protocol.  That was recently approved for CarePlan by PC.  It will point to Questionnaire, Protocol and OrderSet (though there's some rationalization that needs to happen for Protocol/OrderSet)</p>",
        "id": 153819131,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1459357002
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191516\">@Andrew Ross</span> Very nice, I commented on the gist. And I have on my list to bring up adding a duration element to the action definition.</p>",
        "id": 153819592,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1459473399
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> . I replied with a few more thoughts.</p>",
        "id": 153819666,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1459558781
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191516\">@Andrew Ross</span> thanks for putting together the sample.  I'm working with NCCN to express their order templates in FHIR and we have similarities and differences with your approach.  In particular, I have some concerns with the 'flattening' of the schedule data</p>",
        "id": 153820930,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1460409187
    },
    {
        "content": "<p>two different reasons<br>\n1. in definitional resources like these we often have optionality that makes it hard to flatten.<br>\nexample:  14- or 21-day cycle for 2 – 4 cycles <br>\n2. ongoing/pattern-based definitions where you repeat some cycle indefinitely or until some condition is met</p>",
        "id": 153820931,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1460409362
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> I discussed our current approach with Andrew where we use Timing datatype to represent the cycle definition.  Wondering if it would make sense to add that datatype to your ActionDefinition so that it could still be used to express the definition of some repeating schedule</p>",
        "id": 153820932,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1460409467
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191676\">@Lee Surprenant</span> thanks for the suggestion, I will add it to the discussion for Wednesday morning's CQF-on-FHIR call, as well as bring it up in the CDS WG.</p>",
        "id": 153820945,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1460428070
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> <span class=\"user-mention\" data-user-id=\"191676\">@Lee Surprenant</span> one difficulty i foresee with that kind of optionality is that it makes the OrderSet $place operation ambiguous unless you provide additional parameters to resolve it</p>",
        "id": 153821220,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1460469058
    },
    {
        "content": "<p>e.g. if the second chemo course is 2-4 cycles, you need to pass or be able to pass some kind of structured parameter to nail it down</p>",
        "id": 153821221,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1460469061
    },
    {
        "content": "<p>as an architectural question, what should a \"template\" require to be realized?</p>",
        "id": 153821222,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1460469108
    },
    {
        "content": "<p>right now i think the vision is that OrderSet just needs a patient and some basic clinical context to generate a CarePlan</p>",
        "id": 153821223,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1460469156
    },
    {
        "content": "<p>but we are encountering looser concepts of templates that might require more parameters</p>",
        "id": 153821224,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1460469183
    },
    {
        "content": "<p>it's also worth noting that the medication quantities in these regimens are expressed over patient weight or patient body surface area (or other characteristics) -- so to be translated into a \"real\" care plan, they need to potentially query patient observations and do unit-aware multiplication</p>",
        "id": 153821227,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1460469563
    },
    {
        "content": "<p>I have heard from others that these medications are often ordered this way as well (by mg/m2)...not sure when it finally resolves to an actual amount</p>",
        "id": 153821228,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1460469794
    },
    {
        "content": "<p>ah, ok. i guess if they don't need to be resolved before ordering, we don't need that as a parameter</p>",
        "id": 153821229,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1460469851
    },
    {
        "content": "<p>but I think your point about other optionality is still spot-on.  in my example above the 14 or 21 day cycle bit could probably be split into two different regimen options, but I don't think we'd want to do that with the 2-4 cycles part</p>",
        "id": 153821230,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1460469919
    },
    {
        "content": "<p>we have had to deal with that issue in our CDS system a few times, e.g. when computing the expected cost</p>",
        "id": 153821231,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1460469928
    },
    {
        "content": "<p>right</p>",
        "id": 153821232,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1460469931
    },
    {
        "content": "<p>especially if there are multiple axes of optionality, the total number of options will combinatorically explode</p>",
        "id": 153821234,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1460469952
    },
    {
        "content": "<p>realistically though, i think in the systems we've worked with where we're actually dealing with placing orders, we might help pick the regimen but the doctor is still taken to a (domain-specific) order placing page where they resolve all of the ambiguities themselves, and can finalize the order. so ultimately the final details of the chemotherapy aren't being set through a standards-based API, the doctor is entering them on an application-specific UI screen</p>",
        "id": 153821237,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1460470139
    },
    {
        "content": "<p>but we want to try to get past that if we can</p>",
        "id": 153821238,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1460470213
    },
    {
        "content": "<p>That's true. The intent of the OrderSet was always to enable that kind of functionality though. I do like the idea of having different levels of support, so a consuming system could work with the level of Order Set appropriate to their capabilities.</p>",
        "id": 153821252,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1460474096
    },
    {
        "content": "<p>Hello,  I have questions concerning OrderSet/Protocol.  </p>\n<p>Should Protocol/OrderSet also support organizational processes such as tumor boards or is there a different Resource planned for this?</p>\n<p>Should we think about process-abstraction? For example re-usable process steps/activities in Protocol, similar to how ActionDefinition is reusable in OrderSet. To my recollection we didn't talk about reusability yet in the workflow-calls.</p>",
        "id": 153822595,
        "sender_full_name": "Oliver Krauss",
        "timestamp": 1461150615
    },
    {
        "content": "<p>See discussion here: <a href=\"https://chat.fhir.org/#narrow/stream/workflow/subject/Protocol\" target=\"_blank\" title=\"https://chat.fhir.org/#narrow/stream/workflow/subject/Protocol\">https://chat.fhir.org/#narrow/stream/workflow/subject/Protocol</a></p>",
        "id": 153822608,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1461159976
    },
    {
        "content": "<p>just finished first attempt at mapping nccn chemo order template to OrderSet resource:  <a href=\"https://gist.github.com/lmsurpre/1c0e38ab868b503b37df352dddc39626\" target=\"_blank\" title=\"https://gist.github.com/lmsurpre/1c0e38ab868b503b37df352dddc39626\">https://gist.github.com/lmsurpre/1c0e38ab868b503b37df352dddc39626</a></p>",
        "id": 153824658,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462460296
    },
    {
        "content": "<p>main differences from what <span class=\"user-mention\" data-user-id=\"191516\">@Andrew Ross</span> did earlier are<br>\n1. included additional info like indications / emetic risk schedule / cautionary notes<br>\n2. used a timing extension in the parent activity instead of attempting to flatten the schedule<br>\n3. included relativeTime extension on the medicationOrder resources instead of putting all timing data into the action attribute</p>",
        "id": 153824659,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462460325
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191676\">@Lee Surprenant</span> awesome, thanks for sharing. the only thing i feel a little strange about is how the <code>MedicationOrder</code> combines days 1 and 8 (and requires a reference to <code>periodStart</code> outside of the <code>ActionDefinition</code>). i feel like, especially for systems that have already implemented <code>MedicationOrder</code> processing using FHIR, it would be hard to make that work. instead I would just list two actions within the <code>ActionDefinition</code> section, with offsets of 1 and 8 days, since there's already support for that within that resource</p>",
        "id": 153824662,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462462364
    },
    {
        "content": "<p>i do like the <code>cycle</code> extension within the <code>ActionDefinition</code> though, and I think that's a great candidate for inclusion in the actual spec</p>",
        "id": 153824663,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462462396
    },
    {
        "content": "<p>if <code>ActionDefinition</code> supports cycles with variable length/repeats, then I think we can represent everything else without the need for any more timing-related extensions</p>",
        "id": 153824664,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462462453
    },
    {
        "content": "<p>I really wonder how these things are 'ordered' in practice.  Are they ordered 1 day at a time?</p>",
        "id": 153824665,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462462474
    },
    {
        "content": "<p>what if it was days 1-4</p>",
        "id": 153824666,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462462484
    },
    {
        "content": "<p>right, would you really want to list out four orders?</p>",
        "id": 153824667,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462462506
    },
    {
        "content": "<p>that doesn't seem terrible to me, but it could get worse</p>",
        "id": 153824668,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462462515
    },
    {
        "content": "<p>i can ask people that actually work on that part of the EHR we're interfacing with</p>",
        "id": 153824669,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462462544
    },
    {
        "content": "<p>that would be awesome</p>",
        "id": 153824670,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462462555
    },
    {
        "content": "<p>i can ask around a bit as well</p>",
        "id": 153824671,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462462563
    },
    {
        "content": "<p>cool. might take me a little bit of time to get back but i should be able to get input from them within a week or so.</p>",
        "id": 153824672,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462462579
    },
    {
        "content": "<p>great</p>",
        "id": 153824673,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462462586
    },
    {
        "content": "<p>you planning to attend WGM next week in Montreal?</p>",
        "id": 153824675,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462462597
    },
    {
        "content": "<p>or maybe Daniel/someone else from the group gonna be there?</p>",
        "id": 153824676,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462462614
    },
    {
        "content": "<p>i was hoping to go, but i've got family in town that weekend</p>",
        "id": 153824677,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462462622
    },
    {
        "content": "<p>i'm not sure if anyone else from our group is going</p>",
        "id": 153824678,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462462630
    },
    {
        "content": "<p>definitely seems like it would be super useful</p>",
        "id": 153824679,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462462657
    },
    {
        "content": "<p>ok, we made last-second decision to go.  would be pretty cool to meet up if someone is gonna be there (wednesday looking best)</p>",
        "id": 153824680,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462462665
    },
    {
        "content": "<p>hmm, middle of the week might be more plausible. i'll check in with folks here again and see if something can happen</p>",
        "id": 153824681,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462462693
    },
    {
        "content": "<p>if there's any more detailed schedule information about oncology-specific FHIR things happening, let me know</p>",
        "id": 153824682,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462462729
    },
    {
        "content": "<p>k.  i'm not that well hooked in, just know that CDS has convo with CarePlan on wed 3Q that Bryn thinks it would be good to attend (think i copied you on that note)</p>",
        "id": 153824683,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462462786
    },
    {
        "content": "<p>We could organize an informal \"birds of a feather\" session on OrderSet/Protocol Wed. Q6 as well (after the reception)</p>",
        "id": 153824893,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462574036
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191676\">@Lee Surprenant</span> here's my attempt at structuring an OrderSet with cycles, using only one very basic extension: <a href=\"https://gist.github.com/asross/65077e4237f43692f519794fe171b768\" target=\"_blank\" title=\"https://gist.github.com/asross/65077e4237f43692f519794fe171b768\">https://gist.github.com/asross/65077e4237f43692f519794fe171b768</a></p>",
        "id": 153826550,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462911525
    },
    {
        "content": "<p>Thanks, Andrew.  Looks like you were able to represent 'Days 1 and 8' using the standard Timing datatype (via a period of 7 days)</p>",
        "id": 153826555,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462911726
    },
    {
        "content": "<p>Bryn and I discussed that as well, it may be a possibility but some of these regimen get pretty complicated</p>",
        "id": 153826556,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462911756
    },
    {
        "content": "<p>Days 1 – 4, 9 – 12, and 17 – 20</p>",
        "id": 153826557,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462911776
    },
    {
        "content": "<p>Days 1, 2, 4, 5, 8, 9, 11, and 12</p>",
        "id": 153826558,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462911799
    },
    {
        "content": "<p>ah, right. it would be nice if Timing could support a list of offsets like that -- and it ought to, if that's how individual orders are represented in EHRs</p>",
        "id": 153826560,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462911873
    },
    {
        "content": "<p>so, there is a pattern to all of the ones I've looked at so far, but expressing those just via period seems a quite tricky</p>",
        "id": 153826561,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462911876
    },
    {
        "content": "<p>maybe a question for your colleagues?</p>",
        "id": 153826563,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462911890
    },
    {
        "content": "<p>i can ask if a regimen to be administered on days 1 – 4, 9 – 12, and 17 – 20 would still be represented by a single order</p>",
        "id": 153826564,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462911899
    },
    {
        "content": "<p>yeah, good quesiton</p>",
        "id": 153826565,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462911909
    },
    {
        "content": "<p>it still really feels like those \"on days\" timings are a concern of the MedicationOrder, while cycle start date, \"on day of cycle,\" and \"in cycles\"  are all concerns of the OrderSet/Protocol</p>",
        "id": 153826566,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462911967
    },
    {
        "content": "<blockquote>\n<p>days 1 – 4, 9 – 12, and 17 – 20 </p>\n</blockquote>\n<p>That would most commonly be one order</p>",
        "id": 153826567,
        "sender_full_name": "Daniel Lanphear",
        "timestamp": 1462911996
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191791\">@Daniel Lanphear</span> that matches what NCCN pharmacists have told me as well</p>",
        "id": 153826568,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462912023
    },
    {
        "content": "<p>which i think would make it hard to support with the 'period' construct of the current timing datatype...</p>",
        "id": 153826570,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462912240
    },
    {
        "content": "<p>pardon the pseudo-code, but hopefully a bit easier to see the structure than full json/xml:</p>\n<div class=\"codehilite\"><pre>action\n  &lt;!-- would be nice if actionDefinition supported this type of timing info directly --&gt;\n  extension cycle\n    valueTiming\n      repeat count=6 duration=21 durationUnit=d\n\n  actionIdentifier\n    http://nccn.org/ordertemplates/KDN5/1\n  textEquivalent &quot;21-day cycle for 6 cycles&quot;\n  behavior\n    type &quot;cardinality&quot;\n    value &quot;multiple&quot;\n  action\n    detail\n      code http://www.nlm.nih.gov/research/umls/rxnorm/12574 gemcitabine\n      dosageInstruction\n        text &quot;1250 mg/m² IV over 30 minutes on days 1 and 8&quot;\n        timing\n          extension relativeTime\n            base periodStart\n            offset 0d, 7d\n          repeat\n            duration 30 min\n        route &quot;IV&quot;\n        doseQuantity 1250 mg/m²\n\n  action\n    detail\n      code http://www.nlm.nih.gov/research/umls/rxnorm/40048 CARBOplatin\n      dosageInstruction\n        text &quot;AUC 5 IV over 30 minutes on Day 1&quot;\n        timing\n          extension relativeTime\n            base periodStart\n            offset 0d\n          repeat\n            duration 30 min\n          route &quot;IV&quot;\n          doseQuantity AUC 5 http://snomed.info/sct/413573002\n</pre></div>",
        "id": 153826571,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462912275
    },
    {
        "content": "<p>then, a system that knows how to convert an orderset to a set of MedicationOrder would probably need to resolve that relativeTime extension down into actual days</p>",
        "id": 153826572,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462912325
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> ^ above is what i put together after our talk today. ideally each action in OrderSet could define its own timing using a relativeTime which some order placement system/service could help the physician to place for a particular patient with absolute timings (using Timing.event)</p>",
        "id": 153826575,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462912916
    },
    {
        "content": "<p>that would allow actions to repeat without having a different action for each repetition</p>",
        "id": 153826577,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462913046
    },
    {
        "content": "<p>My thought on offsets is that there should be a standard extension for datetime that allows you to express both an offset and either a URI or a code to indicate \"offset from what\".  Because offsets are going to be needed pretty much anywhere we allow datetime (including inside Period and inside Timing) and we can't really argue that's a core property for those types.</p>",
        "id": 153826582,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462913523
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> we actually don't need to reference \"offset from what\" for this example, because the \"what\" is the top-level date of the medication order. all we need is the ability to specify an arbitrary number doses to be administered at specific offsets from that top-level date</p>",
        "id": 153826583,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462913605
    },
    {
        "content": "<p>(which is defined by the actionDefinition that references the order)</p>",
        "id": 153826584,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462913629
    },
    {
        "content": "<p>Which date is that?  The creation date?  How does someone know that's the intended anchor point for an arbitrary resource?</p>",
        "id": 153826585,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462913726
    },
    {
        "content": "<p>hmm. I was thinking <code>MedicationOrder</code> had an <code>effectiveDateTime</code> but that's <code>MedicationAdministration</code></p>",
        "id": 153826589,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462913862
    },
    {
        "content": "<p>nevertheless, if you have a <code>MedicationOrder</code> now whose timing has a repeat with <code>count</code> equal to 2 and <code>period</code> equal to 7 days, what does that mean?</p>",
        "id": 153826590,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462913918
    },
    {
        "content": "<p>if there's a problem with what i'm proposing, there's also a problem with the standard as-is</p>",
        "id": 153826591,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462913933
    },
    {
        "content": "<p>does that make sense <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> ?</p>",
        "id": 153826592,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462914031
    },
    {
        "content": "<p>unless all <code>MedicationOrder</code>s are supposed to be \"effective immediately\", or at least until <code>dateEnded</code></p>",
        "id": 153826594,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462914141
    },
    {
        "content": "<p>it could also be relative to <code>dispenseRequest.validityPeriod</code></p>",
        "id": 153826596,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462914194
    },
    {
        "content": "<p>that actually might make the most sense</p>",
        "id": 153826597,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462914231
    },
    {
        "content": "<p>so, to reiterate, we're thinking it would make sense to be able to schedule 1..* doses to be administered 0-N days after <code>dispenseRequest.validityPeriod.start</code>, or maybe reusing the same anchoring structure</p>",
        "id": 153826598,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462914342
    },
    {
        "content": "<p>and i guess that could be made relative pretty easily, but it seems easiest from an EHR implementation perspective if the medication order is somewhat self-contained</p>",
        "id": 153826599,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462914380
    },
    {
        "content": "<p>i think 'bounds' *could* be used for start period as well, but i guess your point is valid that if its not there then the repeat is sort of just a pattern without an explicit base (i took it to mean effective immediately unless a bounds is provided)</p>",
        "id": 153826600,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462914661
    },
    {
        "content": "<p>anyway, in this case I was more focused on the OrderSet resource (presuming we go with the Protocol approach of putting the details in-line rather than referencing an external/contained resource like MedicationOrder)</p>",
        "id": 153826601,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462914708
    },
    {
        "content": "<p>ah, yes, i guess it should be bounds.</p>",
        "id": 153826602,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462914722
    },
    {
        "content": "<p>BTW, for me I think a standard relativeTime extension *could* work...but part of me still wondering if there is a way to do it in 'core' for Protocol/OrderSet since it seems so common in this definitional space</p>",
        "id": 153826603,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462915002
    },
    {
        "content": "<p>especially if that relativeTime could be resolved to events as part of the $place operation</p>",
        "id": 153826604,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462915040
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> another question Bryn raised:  is 'relativeTime' extension on Timing even allowed?  modifierExtensions not allowed on dataTypes but i could argue this doesn't modify meaning of other attributes.  still, it would be rather important to understand.  is it possible for an extension to be marked as mustSupport without it being a modifier?</p>",
        "id": 153826606,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462915179
    },
    {
        "content": "<p><a href=\"https://www.hl7.org/fhir/profiling.html#mustsupport\" target=\"_blank\" title=\"https://www.hl7.org/fhir/profiling.html#mustsupport\">https://www.hl7.org/fhir/profiling.html#mustsupport</a> makes it sound like a yes...we just need to declare it as such in a profile</p>",
        "id": 153826607,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1462915508
    },
    {
        "content": "<p>The start time for most prescriptions, in the absence of a value in <code>dosageInstruction.timing.repeat.bounds.start</code> is \"when the patient gets their hands on the med\", which in a hospital setting is usually shortly after authorship and could be several days in a community setting.</p>",
        "id": 153826636,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462924758
    },
    {
        "content": "<p>My concern with having a relative expression that doesn't anchor the relativity is there's no way to know what the anchor should be.  Is it <code>MedicationOrder.dateWritten</code>?  <code>MedicationOrder.dispenseRequest.validityPeriod.start</code>?  <code>MedicationOrder.dosageInstruction.timing.repeat.bounds.start</code>?  Something else?</p>",
        "id": 153826637,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462924898
    },
    {
        "content": "<p>And the rules could be different for each attribute in each resource</p>",
        "id": 153826638,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462924992
    },
    {
        "content": "<p>It seems like <code>MedicationOrder.dosageInstruction.timing.repeat.bounds</code> is the most intuitive/possibly only sensical choice for anchoring. <code>dateWritten</code> clearly has no relationship to when the medication should be administered, and while <code>dispenseRequest.validityPeriod</code> probably overlaps with <code>dosageInstruction...bounds</code>, it's really about when the medication can be dispensed, not when it should be taken.</p>",
        "id": 153826956,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462987840
    },
    {
        "content": "<p>basically i think the anchoring has to be to a start or end time within <code>MedicationOrder.dosageInstruction</code> for its timing to make sense without needing to reference other resources</p>",
        "id": 153826957,
        "sender_full_name": "Andrew Ross",
        "timestamp": 1462987925
    },
    {
        "content": "<p>But what if the expression was on <code>dispenseRequest.validityPeriod</code>?  What would the anchor point be then?  The point is that the anchor point could potentially be different for each attribute you chose to make \"relative\" and would be different for each resource.  And while you could hope that recipients would make the same presumption about the anchor point as you did, it's hard to guarantee that.</p>",
        "id": 153827141,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1463017890
    },
    {
        "content": "<p>We could certainly define distinct extensions for each attributes and embed within the definition of the extension what the extension was relative to, but that's a lot of extensions, and a lot of complexity for systems to deal with in other ways.</p>",
        "id": 153827142,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1463017936
    }
]