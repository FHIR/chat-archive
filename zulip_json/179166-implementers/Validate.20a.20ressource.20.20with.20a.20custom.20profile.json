[
    {
        "content": "<p>Hi,</p>\n<p>I'm using a custom profile of a patient and I want to validate it against an HAPI server.</p>\n<p>I'm currently using this library (<a href=\"https://github.com/FirelyTeam/fhir-net-api\" target=\"_blank\" title=\"https://github.com/FirelyTeam/fhir-net-api\">https://github.com/FirelyTeam/fhir-net-api</a>) to communicate with this HAPI server.<br>\nFirelyTeam provide this library (<a href=\"https://www.nuget.org/packages/Hl7.Fhir.Specification.R4/\" target=\"_blank\" title=\"https://www.nuget.org/packages/Hl7.Fhir.Specification.R4/\">https://www.nuget.org/packages/Hl7.Fhir.Specification.R4/</a>) to validate ressource, but it seems that this validation is done on the client side.</p>\n<p>Do you have any advices for validating ressource with a custom profile against HAPI server ?</p>\n<p>Thanks !</p>",
        "id": 175605246,
        "sender_full_name": "Thomas",
        "timestamp": 1568364679
    },
    {
        "content": "<p>To validate server side the server needs to know the profile. So:<br>\n- Create the profile and all Extensions and Vocabulary it uses on the server. On a public server, this is done by just POSTing to [base]/StructureDefinition<br>\n- Declare conformity of your resource instance (Patient) to the profile by adding a meta.profile element containing the profile's canonical url<br>\n- POST your resource instance to [base]/[resourcetype]/$validate, e.g. [base]/Patient/$validate</p>",
        "id": 175605870,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568365269
    },
    {
        "content": "<p>Of course you need to create the profile and all other conformance and terminology only once</p>",
        "id": 175606012,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568365402
    },
    {
        "content": "<p>Hi Stefan and thanks for your answer !</p>\n<p>I've already done all your steps but I'm wondering :<br>\n- if FirelyTeam library((<a href=\"https://github.com/FirelyTeam/fhir-net-api\" target=\"_blank\" title=\"https://github.com/FirelyTeam/fhir-net-api\">https://github.com/FirelyTeam/fhir-net-api</a>) propose an API to directly call this [base]/[resourcetype]/$validate endpoint ?<br>\n- Do I need to create custom POST with the serialized resource ?<br>\n- Any other best practices ?</p>\n<p>Thanks again !</p>",
        "id": 175608548,
        "sender_full_name": "Thomas",
        "timestamp": 1568367951
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"238039\">@Thomas</span>, the .NET FHIR library contains a validator component. So you can perform validation locally, without having to call out to a FHIR server.</p>",
        "id": 175612142,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1568371894
    },
    {
        "content": "<p>If I understand it correct, <span class=\"user-mention\" data-user-id=\"238039\">@Thomas</span> ' question is: How to implement a server side validation with a client that's built upon the Dotnet library.</p>\n<p>When it comes to Dotnet, I'm out ;)</p>",
        "id": 175613719,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1568373434
    },
    {
        "content": "<p>Thanks for your answers <span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> <span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span> !</p>\n<p>I'll try to have a look to this validator component, I guess we can specify custom profiles.</p>\n<p>Thanks again</p>",
        "id": 175615273,
        "sender_full_name": "Thomas",
        "timestamp": 1568375067
    },
    {
        "content": "<p>Indeed, you can implement the Validator component in a client and/or in a server. There is a Validator desktop application in our GitHub repo that demonstrates the implementation:<br>\n<a href=\"https://github.com/FirelyTeam/Furore.Fhir.ValidationDemo\" target=\"_blank\" title=\"https://github.com/FirelyTeam/Furore.Fhir.ValidationDemo\">https://github.com/FirelyTeam/Furore.Fhir.ValidationDemo</a></p>",
        "id": 175616097,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1568375826
    }
]