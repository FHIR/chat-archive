[
    {
        "content": "<p>I'm working on a scenario of something like 'If patients is admitted to ED with an asthma condition send a Medication review to their GP (primary carer or organisation)'.</p>\n<p>That's likely to be a message either HL7v2 ORM^O01 or FHIR equivalent and I'm not expecting for pub/sub to build the message or handle the delivery. I think I need a message-trigger channel which contains:</p>\n<ul>\n<li>EventCode (e.g. ORM^O01)</li>\n<li>Recipient (endpoint) </li>\n<li>Triggering resource (payload?)</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;channel&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;message-trigger&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;eventCoding&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;system&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://example.org/fhir/message-events&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;order&quot;</span>\n  <span class=\"p\">},</span>\n    <span class=\"nt\">&quot;endpoint&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n     <span class=\"nt\">&quot;identifier&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">&quot;system&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://fhir.hl7.org.uk/Id/gmc-number&quot;</span><span class=\"p\">,</span>\n            <span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;C3456789&quot;</span>\n          <span class=\"p\">}</span>\n     <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>",
        "id": 185089735,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1578472872
    },
    {
        "content": "<p>Is this the best of doing this? I wouldn't expect the subscription handler to know how to send the message at this point (in my use case I think this would result in a HL7v3 message or an email)</p>",
        "id": 185089910,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1578473107
    },
    {
        "content": "<p>Seems like I'm describing R5 Subscription and main difference is using something like reference for endpoint.</p>",
        "id": 185090435,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1578473746
    },
    {
        "content": "<p>Hi Kevin.  First, apologies if this is a little disjointed - I'm at a connectathon and have had this open for a few hours.  I'm going to try and tackle your question in parts, with a few questions.  I'm going to go through it in Subscriptions R5:</p>\n<p>1) I would start with basic Encounter-Start topic, and derive a new topic to add filtering for Encounter.class, which would allow a Subscription.filterBy on Encounter.class='EMER'.</p>\n<p>2) To filter on asthma would be the same process (likely same step, no need to derive twice).</p>\n<p>This process should work well if your use cases map well (e.g., the same topic will be useful for any type of admission and any condition).  IF this is representative of a class of scenarios with different fields, we should open some discussions on how to put events into SubscriptionTopics (e.g., have a topic which is defined solely by the event).</p>\n<p>On the other side, I would recommend using a standard channel (e.g., REST) to get the notification to another internal system, which could then build the specific graph and forward on the notification in whatever channel fits your workflow.</p>",
        "id": 185153164,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1578515167
    },
    {
        "content": "<p>Yep that's sounds good. I need to research messaging side a little more, I think I may just  want to start a workflow - that could be rest channel to a process that converts it to a full message.</p>",
        "id": 185187791,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1578552827
    },
    {
        "content": "<p>On second thoughts what I'm wanting out from the Subscription is pass a message to pass to the another process to action the subscription.... Something like a message-hook channel which outputs a message bundle and includes:</p>\n<ul>\n<li>MessageHeader[1..1]</li>\n<li>Resource[0..1] (rest-hook)</li>\n<li>eventCoding[0..1] (for message)</li>\n<li>Communication[0..1] (for SMS and email]</li>\n</ul>\n<p>This is based at looking at HAPI and wanting to decouple delivery from the server.</p>",
        "id": 185293614,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1578648128
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191687\">@Kevin Mayfield</span>  are you referring to using the messaging channel? to output from a subscription a message?</p>",
        "id": 185457097,
        "sender_full_name": "Eric Haas",
        "timestamp": 1578875543
    },
    {
        "content": "<p>In part yes but I'm thinking the role of a subscription service (especially in a epr/ehr) is mainly to trigger events. It shouldn't action the events (build a fhir message, deliver sms or email). <br>\nSo in hapi jpa, subscription works as is but events (email, sms, message--trigger) are sent to middleware (service) such as apache camel to action.</p>\n<p>A subscription in a middleware service would work as is. </p>\n<p>Wonder if I'm describing new channel types?</p>",
        "id": 185473017,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1578903738
    }
]