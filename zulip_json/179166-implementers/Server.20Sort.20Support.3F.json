[
    {
        "content": "<p>How does FHIR server indicate which sort options it supports?   Is this part of the metadata/CapabilityStatement?   (I realize that the _sort options use the same names as the search options but how does a FHIR client know which sort options a server supports --- or is this even specified?)</p>",
        "id": 200604425,
        "sender_full_name": "John Silva",
        "timestamp": 1591908714
    },
    {
        "content": "<p>I <em>think</em> the answer is that there's no way to declare this right now.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> ?</p>",
        "id": 200614067,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1591913672
    },
    {
        "content": "<p>I think so</p>",
        "id": 200614355,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591913856
    },
    {
        "content": "<p>Also related to this is how can paging work if the sorting isn't known?   I suppose that the FHIR server could (or must support _lastUpdated) as a sort mechanism so it has a consistent way to page through data.   (even with _lastUpdated there could be data changes in between the time the client requests page 1, page 2, etc.)</p>",
        "id": 200628284,
        "sender_full_name": "John Silva",
        "timestamp": 1591927482
    },
    {
        "content": "<p>we've said that it's up to the server how to handle paging through data that might change</p>",
        "id": 200628310,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591927553
    },
    {
        "content": "<p>if you really care about keeping up with out missing stuff, you can't depend on search - you have to use subscription or history</p>",
        "id": 200628356,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591927597
    },
    {
        "content": "<p>So if there's no way for a FHIR server to \"declare this\" are the FHIR specs silent about how a server should (must?) support sort options?   Is there a requirement to at least support _lastUpdated ?</p>\n<p>I see now what Grahame was referring to w.r.t. paging:</p>\n<hr>\n<p>\"Note: It is at the discretion of the search engine as to how to handle ongoing updates to the resources while the search is proceeding.</p>\n<p>Note: The combination of _sort and _count can be used to return only the latest resource that meets a particular criteria - set the criteria, and then sort by date in descending order, with _count=1. This way, the last matching resource will be returned.\"</p>\n<hr>\n<p>I guess this leaves the sorting up to middleware or UI layers if sort order is important for business use cases.</p>",
        "id": 200652479,
        "sender_full_name": "John Silva",
        "timestamp": 1591955988
    },
    {
        "content": "<p>Servers don't have to support sort at all - any more than they have to support any search capabilities.  We're looking at how to allow CapabilityStatement to support declaring all sorts of nuanced conformance expectations.  I suspect this requirement will end up getting handled there.</p>",
        "id": 200673967,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1591970615
    }
]