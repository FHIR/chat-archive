[
    {
        "content": "<p>Hi,<br>\nI'm implementing a custom authorization interceptor for the hapi jpa server and need to get/load a resource there. I did not find anything about reading/getting resources \"inside\" the server in the documentation; maybe it's something quite obvious - but can anybody help me out? :) Thx!</p>",
        "id": 153957124,
        "sender_full_name": "Stefanie Ververs",
        "timestamp": 1525856276
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> ?</p>",
        "id": 153957128,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1525857779
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194673\">@Stefanie Ververs</span> I may not be James, but I can try to answer your question as I'm wearing same shoes. </p>\n<p>If you build your own interceptor you can still inject resource providers into it. Not sure how you assembly your runtime image, but most likely you have some kind of injection mechanism. If you rely on Spring then you can safely use all resource providers as they are not intercepted by default. Interception layer is built on top of them using custom http processing logic.<br>\nThis means that you can make search operations by passing SearchMap instances to resource providers from your interceptor and, I believe, its gonna be just fine.</p>",
        "id": 153957141,
        "sender_full_name": "Łukasz Dywicki",
        "timestamp": 1525864160
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195497\">@Łukasz Dywicki</span> Thanks a lot - I had to figure out a bit how to use the providers and the search parameters, but in the end I managed to get the required resources!</p>",
        "id": 153957738,
        "sender_full_name": "Stefanie Ververs",
        "timestamp": 1526035977
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194673\">@Stefanie Ververs</span> I'm glad it worked :-)</p>",
        "id": 153957769,
        "sender_full_name": "Łukasz Dywicki",
        "timestamp": 1526039878
    }
]