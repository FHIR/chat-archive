[
    {
        "content": "<p>Recently noticed that Epic is planning on providing Bulk Data Export in August 2021 (now?):<br>\n<a href=\"https://fhir.epic.com/Documentation?docId=fhir_bulk_data\">https://fhir.epic.com/Documentation?docId=fhir_bulk_data</a></p>\n<p>It references supporting the 1.0.1 Bulk Data Export specs --- but it doesn't show supporting NDJSON and the example on the page shows Accept: application/fhir+json not the required application/fhir+ndjson. (<a href=\"http://hl7.org/fhir/uv/bulkdata/export/index.html#query-parameters\">http://hl7.org/fhir/uv/bulkdata/export/index.html#query-parameters</a>); is this an oversight on the documentation page?  (a compliant server is allowed to support other formats but \"Servers SHALL accept the full content type of application/fhir+ndjson\" )</p>\n<p>Also, for the Group export, who or how are the Groups defined?  Is that done in the Epic EHR or can it be done by a Epic FHIR API creating the Group resource?</p>",
        "id": 248391451,
        "sender_full_name": "John Silva",
        "timestamp": 1628102975
    },
    {
        "content": "<p>It says right in the docs:</p>\n<blockquote>\n<p>The format of the bulk data files is ndjson. The ndjson format is similar to JSON, but is newline-sensitive. For more information, refer to the ndjson specification. Resource instances are included in the bulk data file through a search by Patient ID or through a reference in a previously gathered resource instance. The files do not differentiate by patient, so results for all patients are included in each resource file.</p>\n</blockquote>",
        "id": 248391676,
        "sender_full_name": "David Pyke",
        "timestamp": 1628103100
    },
    {
        "content": "<p>OK, thanks!  I missed that but I saw this (seemingly incorrect) requirement for HTTP headers:</p>\n<div class=\"codehilite\"><pre><span></span><code>Your request must include the following headers:\n\nAccept: application/fhir+json\nPrefer: respond-async\n</code></pre></div>",
        "id": 248392438,
        "sender_full_name": "John Silva",
        "timestamp": 1628103462
    },
    {
        "content": "<p>The <a href=\"http://hl7.org/fhir/uv/bulkdata/export/index.html#headers\">Bulk FHIR spec</a> requires application/fhir+json on the export request, not ndjson.  That accept header controls the OperationOutcome response format to $export, not the file format.</p>",
        "id": 248401840,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1628107792
    },
    {
        "content": "<p>Our file format is ndjson.</p>",
        "id": 248401915,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1628107816
    },
    {
        "content": "<p>Groups are defined out-of-band by the admins at the healthcare orgs using Epic.</p>",
        "id": 248402034,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1628107886
    },
    {
        "content": "<p>P.S.  Accept headers for kickoff was discussed recently here:  <a href=\"#narrow/stream/179250-bulk-data/topic/Bulk.20Export.20Headers.20-.20required.20for.20servers.20or.20clients.3F\">https://chat.fhir.org/#narrow/stream/179250-bulk-data/topic/Bulk.20Export.20Headers.20-.20required.20for.20servers.20or.20clients.3F</a></p>",
        "id": 248402263,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1628108003
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span>  - thanks for these answers.  </p>\n<p>So, is this available yet on any Epic systems or does \"August 2021\" mean the end of the month?   Is it available on the Epic sandbox(es) in AppOrchard?    [I guess that might become obvious if we see the ability to enable the Bulk Data APIs as described in the Epic Bulk Data Export documentation.]</p>\n<p>OK, Groups are defined \"out-of-band\" -- but how would an integrator/developer find these since there doesn't seem to be an Epic API search for the Group resource?   Does an Epic admin, after they create a Group, have to capture the Group ID string and send it to the developer?</p>\n<p>BTW, the Epic Bulk Data Documentation page has some error that causes this popup to come up:<br>\n<a href=\"/user_uploads/10155/AFaVgbTqN2BuWWORjJt5eWrh/Screen-Shot-2021-08-04-at-5.19.41-PM.png\">Screen-Shot-2021-08-04-at-5.19.41-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/AFaVgbTqN2BuWWORjJt5eWrh/Screen-Shot-2021-08-04-at-5.19.41-PM.png\" title=\"Screen-Shot-2021-08-04-at-5.19.41-PM.png\"><img src=\"/user_uploads/10155/AFaVgbTqN2BuWWORjJt5eWrh/Screen-Shot-2021-08-04-at-5.19.41-PM.png\"></a></div>",
        "id": 248410752,
        "sender_full_name": "John Silva",
        "timestamp": 1628112068
    },
    {
        "content": "<p>Aug 21 is our release (Epic versions are named based on the quarter they come out).  In the coming weeks we'll have our sandboxes up to that version.  Healthcare organizations will be updating to the Aug 21 release over the next several months (the exact timelines are up to the healthcare organizations).</p>",
        "id": 248411313,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1628112405
    },
    {
        "content": "<p>And for Group IDs, you are exactly right - the healthcare organization's admin (not Epic staff) will define the group, and send you the group ID via (for example) email.</p>",
        "id": 248411374,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1628112445
    },
    {
        "content": "<p>And yeah, I noticed that popup.  I'll work on getting that fixed.</p>",
        "id": 248411411,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1628112470
    },
    {
        "content": "<p>It's going to be interesting to see how this workflow process pans out --- the Group(s) of patients can be very dynamic it would seem.  It also seems like the group would (should?) be defined by some search criteria, e.g. (disease) Conditions, CareTeams, Providers, etc.. I assume the Epic Admin interface will provide Epic \"super users\" (?) the ability to define these groups in a flexible way.</p>",
        "id": 248412102,
        "sender_full_name": "John Silva",
        "timestamp": 1628112943
    },
    {
        "content": "<p>Our groups are defined by criteria.  Technically you could make that criteria be a fixed list of patients, but we expect that most use cases will be using rule-based group definitions (for example, all patients with condition X discharged in the last week, or all patients with a specific insurance plan or payer).</p>",
        "id": 248412947,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1628113453
    },
    {
        "content": "<p>Really exciting stuff to see this so early in the wild, even with the out of band Group definition and patient limits</p>",
        "id": 248571140,
        "sender_full_name": "Brendan Keeler",
        "timestamp": 1628225162
    },
    {
        "content": "<p>I'm curious if folks think that doing Group definition via  the API is ever going to be realistic or reasonable from a data security perspective.  Are there cases where a data holder is going to allow a data consumer to arbitrarily define what patients the consumer wants to access without an approval process?  The system trust would have to be super high for that to happen I'd think.</p>",
        "id": 248601660,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1628251257
    },
    {
        "content": "<p>Absolutely -- in many cases the api client is managed by and run on behalf of the healthcare system, so the level of trust is as high as possible (it's trust in self).</p>",
        "id": 248611959,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1628257221
    },
    {
        "content": "<p>I think is realistic. Permissions will still be enforced, data consumers won't be able to see things they are not already able to see with normal REST calls</p>",
        "id": 248612032,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1628257260
    },
    {
        "content": "<p>The Epic AppOrchard config already allows an admin to enable/disable a particular READ or SEARCH API per application so it would be possible, if the Group resource had the ability to enable READ/SEARCH/WRITE for those specific applications that need to create Groups.   I would suspect that, at a minimum, Group READ would need to be enabled in order to run the Bulk Export in the first place.</p>",
        "id": 248661269,
        "sender_full_name": "John Silva",
        "timestamp": 1628280118
    },
    {
        "content": "<p>You don't need <a href=\"http://Group.read\">Group.read</a> to do the export.  We consider the read interaction and the $export operation to be different APIs.</p>",
        "id": 248661859,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1628280388
    },
    {
        "content": "<p>OK, but AppOrchard config could expose Group.WRITE as a way to control which applications have the ability to create Groups for the purpose of Bulk Export (and other use cases as well).</p>\n<p>[Currently I guess AppOrchard, in fact the Epic API in whole, only allows read/search so allowing Write/Update would be a 'new thing'.  I remember checking the CompatibilityStatement and I think it only advertises READ and SEARCH.]</p>",
        "id": 248662161,
        "sender_full_name": "John Silva",
        "timestamp": 1628280552
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 248663576,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1628281287
    }
]