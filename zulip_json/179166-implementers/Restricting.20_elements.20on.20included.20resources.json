[
    {
        "content": "<p>Currently <a href=\"https://www.hl7.org/fhir/search.html#elements\" title=\"https://www.hl7.org/fhir/search.html#elements\">https://www.hl7.org/fhir/search.html#elements</a> states that</p>\n<blockquote>\n<p>The list of elements does not apply to included resources.</p>\n</blockquote>\n<p>It'd obviously be nice to write queries like \"Fetch me Observations, and for each one, include a patient but just give me gender\", which could be accomplished with a pretty small tweak to our <code>_elements</code> syntax. (e.g., to allow a query like</p>\n<div class=\"codehilite\"><pre><span></span><code>Observation?_include=Observation:patient&amp;_elements=Observation.value,Patient.gender\n</code></pre></div>\n\n\n<p>Has this been considered? (A similar issue came up in discussion of Bulk Export, but the question applies to search more broadly.)</p>",
        "id": 196788086,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1588865497
    },
    {
        "content": "<p>That would be nice, but most server do not implement _elements to begin with, don't know if there is much point to expanding the specs</p>",
        "id": 196791020,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1588866724
    },
    {
        "content": "<p>The off-the-shelf FHIR servers generally support _elements, no? (\"native FHIR servers\", I should say.)</p>",
        "id": 196791341,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1588866869
    },
    {
        "content": "<p>Added <a href=\"http://jira.hl7.org/browse/FHIR-27054\" title=\"http://jira.hl7.org/browse/FHIR-27054\">FHIR#27054</a> to discuss in FHIR-I</p>",
        "id": 196793047,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1588867519
    },
    {
        "content": "<p>This would be relatively easy to implement but is it likely to get significant usage? Seems a bit obscure.</p>",
        "id": 196793648,
        "sender_full_name": "Paul Church",
        "timestamp": 1588867754
    },
    {
        "content": "<p>Or 'demo servers'</p>",
        "id": 196794156,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1588867986
    },
    {
        "content": "<p>Re: usage, it's unclear. I know <span class=\"user-mention\" data-user-id=\"191318\">@nicola (RIO/SS)</span> has experience supporting fine-grained access policies in Aidbox; curious if this has come up?</p>",
        "id": 196796234,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1588868981
    },
    {
        "content": "<p>We extended _elements notation  in two directions  - if it starts from resource type - it will be applied to included resources with this type  /Enc?_incl=patient&amp;_elements=Patient.name.... and we allow use . to filter nested elements - _els=address.city</p>",
        "id": 196834202,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1588887892
    },
    {
        "content": "<p>in aidbox access policy you can require list of elements implementing  this way elements visibility</p>",
        "id": 196834415,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1588887999
    },
    {
        "content": "<p>we also think to add elements to read operation - /Patient/id?elements=...</p>",
        "id": 196834477,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1588888051
    },
    {
        "content": "<p>Cool -- I think this is a good pattern. Curious if others have developed anything similar.</p>",
        "id": 196926139,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1588959256
    }
]