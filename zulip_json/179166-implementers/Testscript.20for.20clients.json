[
    {
        "content": "<p>Can we use TestScript to say to a system</p>\n<ol>\n<li>send your CapStatement</li>\n<li>create a valid patient with last name Smets (we're not going to tell you how that resource looks like because that's  cheating)</li>\n<li>here's an allergy - btw, send us a screenshot of how it looks like on your end<br>\n?</li>\n</ol>",
        "id": 196874889,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1588930678
    },
    {
        "content": "<p>you can in cucumber</p>",
        "id": 196902065,
        "sender_full_name": "John Moehrke",
        "timestamp": 1588948158
    },
    {
        "content": "<p>Is there an example TestScript with some scripting in it?</p>",
        "id": 196906055,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1588950081
    },
    {
        "content": "<p>Any idea about this? <br>\nI want to see if I can use testscript to support testing of clients. I know i can use scripting for the clients, what I'm looking for is how this plays with the TestScript resource</p>",
        "id": 197108036,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1589181432
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191370\">@Richard Ettema</span> ?</p>",
        "id": 197193569,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1589225606
    },
    {
        "content": "<p>For the actual requests you expect from the client you can use the same operation/assert structure as for server testing and to test the request for things like validation of the Patient POST you can just use assert.direction to specify request asserts.</p>\n<p>As for not giving the tester a proper patient resource, in Touchstone you could just define a invalid patient as the source fixture and describe in the operation.description what you actually want the testers to do. </p>\n<p>As for sending the screenshot, I don't believe that there is any way to do that besides again just adding description text for the testers to follow.</p>",
        "id": 197194573,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1589226110
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"237342\">ryan moehrke</span> <a href=\"#narrow/stream/179166-implementers/topic/Testscript.20for.20clients/near/197194573\">said</a>:</p>\n<blockquote>\n<p>For the actual requests you expect from the client you can use the same operation/assert structure as for server testing and to test the request for things like validation of the Patient POST you can just use assert.direction to specify request asserts.</p>\n</blockquote>\n<p>How would this look like in a TestScript for a client?</p>",
        "id": 197205352,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1589231467
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"237342\">ryan moehrke</span> <a href=\"#narrow/stream/179166-implementers/topic/Testscript.20for.20clients/near/197194573\">said</a>:</p>\n<blockquote>\n<p>As for not giving the tester a proper patient resource, in Touchstone you could just define a invalid patient as the source fixture and describe in the operation.description what you actually want the testers to do. </p>\n</blockquote>\n<p>I prefer not to give an invalid resource (what is an \"invalid patient\"?) but just tell the client \"last name should be Smet. Do your thing\". I don't want to instruct the client that this should be in name.family.</p>",
        "id": 197205525,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1589231576
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"237342\">ryan moehrke</span> <a href=\"#narrow/stream/179166-implementers/topic/Testscript.20for.20clients/near/197194573\">said</a>:</p>\n<blockquote>\n<p>As for sending the screenshot, I don't believe that there is any way to do that besides again just adding description text for the testers to follow.</p>\n</blockquote>\n<p>Ok, but description text  seems short - what I would want is a way to say \"ah, here is a script\"</p>",
        "id": 197205587,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1589231619
    },
    {
        "content": "<p>The reason why I said to give an invalid Patient is because you wanted to not tell the tester how the client is set up and if I remember correctly Touchstone (the testing platform I have experience in) requires a sourceId for create operations, and if there is a sourceId fixture testers can see it. <br>\nSo if you want to not give the tester a valid Patient resource to work off of then you must have an invalid patient (which could literally just be the string \"Patient with last name Smets\")</p>",
        "id": 197206481,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1589232183
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>Ok, but description text  seems short - what I would want is a way to say &quot;ah, here is a script&quot;\n</code></pre></div>\n\n\n<p>What are you looking to display? I don't believe there is any character limit on String and I'm not sure what \"ah, here is a script\" is trying to convey..</p>",
        "id": 197206592,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1589232250
    },
    {
        "content": "<p>I'd hope there is something in between string and a valid resource.</p>",
        "id": 197206616,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1589232271
    },
    {
        "content": "<p>I would like to tell the client \"here is where you will find the script for you to run in this step\"</p>",
        "id": 197206692,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1589232328
    },
    {
        "content": "<p>that doesn't seem in scope for anything in the testscript, because if they're reading any part of the test script then they shouldn't have to be pointed to said test script.. That sounds more like something you'd put on a Confluence site</p>",
        "id": 197206864,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1589232430
    },
    {
        "content": "<p>Back to this, <br>\nfor 3. I will see if I can need to add an extension to say \"in this step, take a screenshot\".<br>\nfor 2. I will think of something. I don't want to maintain confluence pages with my test data<br>\nfor 1. I still have no idea</p>",
        "id": 207137146,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1597667581
    },
    {
        "content": "<p>For 1, I would think some kind of extension is required unless it is a requirement of the client in your context to send its capability statement in a specific RESTful FHIR-conformant way.  There is no /metadata equivalent for clients that I'm aware of, so you'd have to define it.  And then you could use TestScript to test it.  That wouldn't make sense to do unless the server is expected to do something with that information though (I can think of some contexts where it would matter, but for most it wouldn't).</p>",
        "id": 207152542,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1597675654
    },
    {
        "content": "<p>For 2, could you use <code>test.action.assert.expression</code> for the specific value, and maybe <code>validateProfileId</code> to ensure the rest of the resource is valid?</p>",
        "id": 207152847,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1597675812
    },
    {
        "content": "<p>Now knowing that you don't actually want a test runner to be able to interpret and automate the testscript,<br>\nI don't see any reason why for 2 you couldn't just use a descriptive txt file loaded into a fixture as your sourceId for the Patient create operation; then the testers could see and read it without any 'cheating' of how it looks like<br>\n3 does feel like a situation where you would need an extension, but depending on where/when in the execution you want the user to screenshot you may be able to use an extended code on operation.type to mean that the operation with that 'screenshot' code is not a restful operation but rather a test step for the user (and you could have them POST the screenshot as a DocumentReference.content etc. if you wanted to store it elsewhere)<br>\n1 could be something similar to the operation.type 'screenshot' code where you define a post of the client capability statement to whatever validation you are using, bypassing the target fhir system completely. </p>\n<p>I don't know any system that could interpret those codes properly today, but if these are test steps you need to do I see no reason why they shouldn't be operation codes. </p>\n<p>But yes, as Rob noted you could still use asserts to validate 1 and 2 regardless of how you ask the tester to send it, and if you choose to have them POST the screenshot as well you could do some minimal assertion on that as well.</p>",
        "id": 207161831,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1597680099
    },
    {
        "content": "<p>for 2 I can use test.action.assert.description or an extension of it. <br>\n.expression is a fhirpath which is yucky for the end users</p>",
        "id": 207163984,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1597681134
    },
    {
        "content": "<p>for posting the screenshot I expect a Binary is sufficient</p>",
        "id": 207164329,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1597681321
    }
]