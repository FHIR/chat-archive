[
    {
        "content": "<p>Howdy, all!</p>\n<p>Just wondering if anyone has OPINIONS on how this best ought to be implemented on our side:</p>\n<ul>\n<li>We need to start filtering out certain ExplanationOfBenefit resources for certain peers/queries (filtering out SAMHSA-related claims).</li>\n<li>The peers are trusted, so we could just ask them to add an HTTP header or URL query param, but I don't know if/how that fits in to the FHIR spec at all.</li>\n<li>We're using HAPI (not the JPA layer, though), so we could go investigate whatever options it offers for resource authorization and see if that's workable.<br>\n    * But, our authentication is using mutual TLS and having quite gotten the principals visible in the app layer yet. I can fix that, probably.</li>\n</ul>\n<p>I'm inclined to add a query parameter for right now, e.g. <code>nonSamhsa=true</code>, but like I said: curious if anyone has OPINIONS about that. This is all internal usage, so FHIR spec compliance is a nice-to-have, but also not a huge priority.</p>\n<p>Thanks!</p>",
        "id": 159069763,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1550758013
    },
    {
        "content": "<p>So you are using mutual authenticated TLS... the server thus knows who the client is... so what more is needed for the server to understand the rule distinction?  I presume that some clients will get everything others will get a subset... is that what you are looking for?<br>\nI would not use parameters, they are not 'secure'...   however if a client is found, during an audit analysis, to be misbehaving then you know who to punish... You are doing good audit logging, possibly using AuditEvent... right?</p>",
        "id": 159070039,
        "sender_full_name": "John Moehrke",
        "timestamp": 1550758240
    },
    {
        "content": "<p>Confirming, you are not using OAuth?</p>",
        "id": 159070054,
        "sender_full_name": "John Moehrke",
        "timestamp": 1550758261
    },
    {
        "content": "<p>Typo above: _haven't_ quite gotten the principals visible in our app layer.</p>",
        "id": 159070163,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1550758338
    },
    {
        "content": "<p>there's no particular spec statement on this, so no compliance issues. </p>\n<p>Opinions: </p>\n<ul>\n<li>you should default to not sending, and only send when asked (instead of the opposite, which is what you appear to choose). </li>\n<li>you can choose to do it by parameter, by header, or configuration. choosing the last is a fucntional question - better if you can, but not always possible. parameter vs header - I'd probably lean towards a parameter, except:</li>\n<li>this feels like it overlaps with Consent. Is it per-user? Should look at using X-Consent header?</li>\n</ul>",
        "id": 159104805,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1550783539
    },
    {
        "content": "<p>Excellent advice!</p>\n<p>We're a bit constrained by this being 1 of 3 active peers we have, and the only one that needs this filtering. So I'm inclined to make it opt-in for now, just to avoid accidental breakage.</p>\n<p>It's less of a consent thing, and more of a policy thing: \"not per-Patient, but instead per-peer/user/system -- this peer/system can see SAMHSA claims for any Patient, but this one can't.\" I'll look into X-Consent, though, to see if that's a reasonable stretch of its use case.</p>\n<p>And agreed: definite preference is for configuration (security roles). Just need to get our app server to play ball, which will likely take more time than I have. (Been banging on Wildfly about it occasionally for like a year now.)</p>",
        "id": 159110212,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1550787601
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192789\">@Karl M. Davis</span> <br>\nIf this is something that could become necessary for other partners or in other forms in future, it would be advisable to make it a configurable part of your authorization policy. If you add support for redaction obligations in your authorization policy, i.e. the ability to express a rule to grant access conditioned on applying an obligation, this case then seems to be a redaction obligation applied to all access requests from that particular partner. <br>\nI have discussed some more implementation considerations and alternatives for redaction policies <a href=\"https://medium.com/@jafarim/using-fhir-search-filter-to-express-and-enforce-redaction-obligations-981838c355f6\" target=\"_blank\" title=\"https://medium.com/@jafarim/using-fhir-search-filter-to-express-and-enforce-redaction-obligations-981838c355f6\">here</a>.</p>",
        "id": 159296780,
        "sender_full_name": "Mohammad Jafari",
        "timestamp": 1551043663
    }
]