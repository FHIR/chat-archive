[
    {
        "content": "<p>I think there's no good way to query for Encounters about a patient who is in my group, other than maaaaybe</p>\n<div class=\"codehilite\"><pre><span></span> Encounter?patient:_has:Group:patient:_id=my-group-id\n</pre></div>\n\n\n<p>What would people think about an explicit modifier on reference searches like:</p>\n<div class=\"codehilite\"><pre><span></span>Encounter?patient:member-of-group=my-group-id\n</pre></div>\n\n\n<p>This is similar to \"in\" for valueset membership. For example it can apply to intensionally defined groups, where no materialized list of patients exists on the server. It's also similar to the <code>_list</code> search parameter, so in theory it could be addressed with a kind of <code>_group</code> parameter, but this feels kind of implicit.</p>\n<p>This is all relevant because of subscriptions use cases, so we might wind up doing something special just for subsriptions, but seemed worth some broader discussion.</p>",
        "id": 165158418,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1557318861
    },
    {
        "content": "<p>I would actually like to consider just using the :in modifier.</p>",
        "id": 165677935,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1557883362
    },
    {
        "content": "<p>Sure, it seems like a reasonable extension of the semantics. As long as we pick something :-)</p>",
        "id": 165680570,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1557887016
    },
    {
        "content": "<p>Added <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22690\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22690\">GF#22690</a></p>",
        "id": 167867900,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560271580
    },
    {
        "content": "<p>Just took this up in FHIR-I. We have a draft disposition but wanted to check here for feedback from server authors about a few different ways we might define the <code>:in</code> modifier for reference-type searches. We'd say that <code>:in</code> modifier can be used to search for references that belong to a specific <code>List</code> (as in <code>List.entry.item</code>) or <code>Group</code> (as in <code>Group.member.entity</code>).</p>",
        "id": 173578843,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566248449
    },
    {
        "content": "<p>For the case of Lists and enumeration-based Groups, supporting this kind of lookup basically boils down (for server developers) to filtering based on a known set of references in the specified List (or Group). But for characteristic-based Groups, there is no pre-computed enumeration of members -- which would make support for <code>:in</code> quite a bit more challenging.</p>",
        "id": 173578844,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566248450
    },
    {
        "content": "<p>Among the following options, what would folks prefer to see? (Please thumbs-up your preferred options.)</p>",
        "id": 173578883,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566248503
    },
    {
        "content": "<p>1. The <code>:in</code> modifier for reference-based searches is defined for Lists and for enumeration-based Groups but is undefined for characteristics-based (non-enumerated) Groups.</p>",
        "id": 173578946,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566248542
    },
    {
        "content": "<p>2. The <code>:in</code> modifier for reference-based searches is defined for all Lists and Groups, but some servers supporting <code>:in</code> MAY refuse to work on non-enumerated Groups.</p>",
        "id": 173579041,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566248623
    },
    {
        "content": "<p>(Or feel free to present other options here ;-))</p>",
        "id": 173579120,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566248669
    },
    {
        "content": "<p>To the extent that group characteristics can be evaluated in terms of search parameters, I can see :in being an indirection that retrieves some criteria from the group and evaluates them. Even if those criteria are internal server magic rather than expressed in standard search terms, that still makes sense.</p>\n<p>But I don't see how this makes sense in more abstract characteristic groups - for example, the R4 Group examples include a characteristic group for <a href=\"http://hl7.org/implement/standards/fhir/group-example-herd1.json.html\" target=\"_blank\" title=\"http://hl7.org/implement/standards/fhir/group-example-herd1.json.html\">\"Herd of 2500 breeding sows\"</a>. How do I know if Patient/123, which is a pig and matches the characteristics, is one of those 2500 specifically? Or is that not a valid and relevant example?</p>",
        "id": 173581617,
        "sender_full_name": "Paul Church",
        "timestamp": 1566250518
    },
    {
        "content": "<p>Why adding this at all? Can't you just use <code>_has</code> ?</p>",
        "id": 173581634,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1566250536
    },
    {
        "content": "<p><code>Encounter?patient._has:Group:member:</code>  ....? I just got lost.</p>",
        "id": 173581868,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566250717
    },
    {
        "content": "<p><code>Encounter?patient._has:Group:member: _id=xxxx</code> (xxx is the id of the group)</p>",
        "id": 173581927,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1566250779
    },
    {
        "content": "<p>Right.</p>",
        "id": 173581939,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566250792
    },
    {
        "content": "<p>I think this technically works but I'm not sure that argues against adding a more explicit/limited modifier.</p>",
        "id": 173581998,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566250822
    },
    {
        "content": "<p>i.e., I think the readability of <code>Encounter?patient:in=Group/123</code> is itself a value proposition.</p>",
        "id": 173582046,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566250883
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197072\">@Paul Church</span> regarding the specific example with those pigs, I think that's not a group that's well-defined enough to ever resolve individuals. (If it said \"Group of Farmer John's Breeding Sows\" and had no <code>quantity</code> and instead characterics that established the sow-ness and belonging-to-farmer-john-ness, then I guess it could apply, since you could deterministically evaluate a particular Patient against the characateristics to resolve membership. But I think this is a separate discussion about Groups.)</p>",
        "id": 173582144,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566250997
    },
    {
        "content": "<p>I don't see how a general-purpose server can decide whether a particular characteristic group is or is not the kind that is well-defined enough to do this operation. It's fine for facade or customized servers, but from an interoperability perspective it seems like enumerated groups are the only case a client can rely on.</p>",
        "id": 173583215,
        "sender_full_name": "Paul Church",
        "timestamp": 1566251972
    },
    {
        "content": "<p>Yeah, I wonder if there is any way to tell whether a group is fully defined by its characteristics vs merely described by them. <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  has there been anything on this question? (It has echoes of modeling concepts in description logic like SNOMED.)</p>",
        "id": 173583524,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566252240
    },
    {
        "content": "<p>I think the readability of :in for enumerated groups/lists is a plus, and potentially an opportunity for optimization over _has.</p>",
        "id": 173583571,
        "sender_full_name": "Paul Church",
        "timestamp": 1566252259
    },
    {
        "content": "<p>In theory we could resolve this issue with an additional flag on Group. I wonder how often we expect to see non-enumerated groups with characteristics that are merely descriptive (like the example from the spec).</p>",
        "id": 173583612,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566252314
    },
    {
        "content": "<p>my server will resolve some groups - e.g. gender = female</p>",
        "id": 173583636,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566252342
    },
    {
        "content": "<p>it knows what group characteristics it knows how to resolve or not</p>",
        "id": 173583651,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566252358
    },
    {
        "content": "<p>though I do not pre-index this. I could, if I did the work</p>",
        "id": 173583702,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566252370
    },
    {
        "content": "<p>I prefer the :in based syntax</p>",
        "id": 173583756,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566252452
    },
    {
        "content": "<p>The intention for Group was that the characteristics are the definition.  Enumeration of members is optional and not necessarily complete.  Some characteristics may not be searchable.  E.g.  \"Everyone who came within 2 miles of coordinates xyz between start date and end date\" is a completely logical group definition for certain public health scenarios, but certainly not something you could hope to search by.  (Though the public health folks would surely love us if we could come up with a way :&gt;)</p>",
        "id": 173623089,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566266925
    },
    {
        "content": "<p>In practice, I think Group is being used in two different ways.  In some cases, the members are simply enumerated and the criteria are either missing or informational.  This would be things like practice groups and capitation groups.  On the other hand, for clinical trial definitions and public health, the criteria hold sway and members might not be enumerated at all.  In some cases, you'll start with a set of criteria and eventually have a full enumeration (e.g. a clinical trial where the group eventually enumerates all enrolled participants).</p>",
        "id": 173623164,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566267036
    },
    {
        "content": "<p>But Paul's example <a href=\"http://hl7.org/implement/standards/fhir/group-example-herd1.json.html\" target=\"_blank\" title=\"http://hl7.org/implement/standards/fhir/group-example-herd1.json.html\">http://hl7.org/implement/standards/fhir/group-example-herd1.json.html</a> is not enumerated, and doesn't have fully definitional characteristics. Is that invalid?</p>",
        "id": 173625945,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566271682
    },
    {
        "content": "<p>I don't think so.</p>",
        "id": 173632899,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566283161
    },
    {
        "content": "<p>Okay -- and what's <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>'s take?</p>",
        "id": 173669926,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566316302
    },
    {
        "content": "<p>Yet another use-case for group.  In this case, the \"identity\" of the group is in its identifier.  The herd of cows or crate of mice is managed by its identifier.  The criteria <em>could</em> be fully specified by designating owner or crate number or barn or something, but for the intended use, that would be unnecessary.  Someone, somewhere should know exactly which cows are in the herd or mice are in the crate, but that information might not always be shared.</p>",
        "id": 173671837,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566317668
    },
    {
        "content": "<p>Okay -- and do you think there's value in expressing this distinction (i.e. \"This group is defined by its characteristics\" vs \"This group is described by its characteristics but not defined\") in our model (e.g., <code>Group.fullyDefinedByCharacteristics</code>: Boolean)? To <span class=\"user-mention\" data-user-id=\"197072\">@Paul Church</span>'s point it's impossible for a generic server to navigate these distinctions otherwise.</p>",
        "id": 173679493,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566323305
    },
    {
        "content": "<p>I'll add a GForge item for this unless folks find it abhorrent here :)</p>",
        "id": 173679508,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566323321
    },
    {
        "content": "<p>Added <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23724\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23724\">GF#23724</a>.</p>",
        "id": 173681351,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566324600
    },
    {
        "content": "<p>As an alternative, could change \"actual\" from a bool to an enum with 3 values. Otherwise there are 2x2 possible values, one of which doesn't make sense.</p>",
        "id": 173681977,
        "sender_full_name": "Paul Church",
        "timestamp": 1566325068
    },
    {
        "content": "<p>The one that doesn't make sense is \"actual: false\" and \"fullyDefined: true\"?</p>",
        "id": 173682060,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566325123
    },
    {
        "content": "<p>Yes. (Or does it? I'm not sure how actual: false is used.)</p>",
        "id": 173682117,
        "sender_full_name": "Paul Church",
        "timestamp": 1566325170
    },
    {
        "content": "<p>I'm not totally sure either, but I think you're right. I updated the GF issue to include this point.</p>",
        "id": 173682209,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566325234
    },
    {
        "content": "<p>I already had a task about this</p>",
        "id": 173824710,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566415620
    },
    {
        "content": "<p>I was thinking of <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17457\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17457\">GF#17457</a></p>",
        "id": 173825083,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566415858
    },
    {
        "content": "<p>Yeah, it's related but distinct.</p>",
        "id": 173826673,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566417117
    },
    {
        "content": "<p>(<a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17457\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17457\">GF#17457</a> gets at the question of whether enumerations are always expected to be complete, but <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23724\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23724\">GF#23724</a> gets at the question of whether membership can automatically be inferred. For the \"pile of pigs\" Group, the characteristics don't actually define the group, so membership couldn't automatically be inferred.)</p>",
        "id": 173826756,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1566417165
    },
    {
        "content": "<p>Could this also be applied to organization or location hierarchies?</p>",
        "id": 174674397,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1567366935
    },
    {
        "content": "<p>Or is that a seperate tracker?</p>",
        "id": 174674401,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1567366949
    },
    {
        "content": "<p>I think it's a separate tracker (or should be) but I'd like to see it</p>",
        "id": 174748520,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1567468451
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=24849\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=24849\">GF#24849</a> added to suggest Group.characteristicCombination to enable specifying union (combine characteristics with OR) in addition to the 'default' intersection (combine characteristics with AND). This element could also have codes that would capture 'definedByCharacteristics' and 'characteristicsAsNondefinitionalDescriptions'</p>",
        "id": 176265122,
        "sender_full_name": "Brian Alper",
        "timestamp": 1569072923
    },
    {
        "content": "<p>Reviewing where we are with <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22690\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22690\">GF#22690</a> -- I'd like to suggest we move ahead with defining <code>:in</code> as a modifier on reference-type searches, enabling search by <code>Group</code> and <code>List</code> to start. Are there concerns / comments on this approach before we take up in FHIR Infrastructure?</p>",
        "id": 176508727,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1569360915
    },
    {
        "content": "<p>(We've been through discussion above; just checking back here before we more ahead.)</p>",
        "id": 176508769,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1569360959
    },
    {
        "content": "<p>Would there need to be a matching <code>:not-in</code>, or is that a solution to a problem that doesn't exist?</p>",
        "id": 176508884,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1569361033
    },
    {
        "content": "<p><code>:not-in</code> hasn't really come up -- so I'm comfortable moving ahead without it. The problem may exist  but we can add negation if/when we hit that problem.</p>",
        "id": 176567321,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1569420126
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>  why not simply using:</p>\n<div class=\"codehilite\"><pre><span></span>Encounter?subject:Group/123\n</pre></div>",
        "id": 178587137,
        "sender_full_name": "natus",
        "timestamp": 1571566408
    },
    {
        "content": "<p>this apply to any resource referecing a group.</p>\n<p>The only corner case is for patients (give me all patients in this group):</p>\n<div class=\"codehilite\"><pre><span></span>Patient?_has:Group:member:_id=xxxx\n</pre></div>",
        "id": 178587258,
        "sender_full_name": "natus",
        "timestamp": 1571566626
    },
    {
        "content": "<p>I was wrong, encounter.group is for people present during the encounter.<br>\nThen both would use reverse chaining (in my case xxxx is a patient cohort):</p>\n<div class=\"codehilite\"><pre><span></span>Encounter?patient._has:Group:member:_id=xxxx\nPatient?_has:Group:member:_id=xxxx\n</pre></div>",
        "id": 178587544,
        "sender_full_name": "natus",
        "timestamp": 1571567225
    },
    {
        "content": "<p>In case <code>Encounter?patient:in=Group/123</code> is adopted, how would this apply for patient ?</p>\n<div class=\"codehilite\"><pre><span></span>Patient?_id:in=Group/123\n</pre></div>\n\n\n<p>?</p>",
        "id": 178587654,
        "sender_full_name": "natus",
        "timestamp": 1571567425
    },
    {
        "content": "<p>As an alternative:</p>\n<p><code>List</code> resource can be linked to a <code>Group</code>. So in order to retrieve the members of an <code>Encouter</code> from a given <code>Group</code> doing so:</p>\n<div class=\"codehilite\"><pre><span></span>List?subject=Group/123 // get the list for the given group ; returns 456\nEncounter?_list=456 // returns the encounters of patients within the group 123\n</pre></div>",
        "id": 178588498,
        "sender_full_name": "natus",
        "timestamp": 1571569133
    },
    {
        "content": "<p>We have a use case 'return all DiagnosticReport where DiagnosticReport.subject is in myPatientList'. We did some testing on <a href=\"http://test.fhir.org/r4\" target=\"_blank\" title=\"http://test.fhir.org/r4\">test.fhir.org/r4</a> and HAPI fhir server.</p>\n<p>1) on <a href=\"http://test.fhir.org/r4\" target=\"_blank\" title=\"http://test.fhir.org/r4\">test.fhir.org/r4</a>: created a new group <br>\n<a href=\"http://test.fhir.org/r4/Group/105\" target=\"_blank\" title=\"http://test.fhir.org/r4/Group/105\">http://test.fhir.org/r4/Group/105</a>  containing the patient <br>\n<a href=\"http://test.fhir.org/r4/Patient/0379d9a0-a010-49b8-9aa3-defd2c3fb2\" target=\"_blank\" title=\"http://test.fhir.org/r4/Patient/0379d9a0-a010-49b8-9aa3-defd2c3fb2\">http://test.fhir.org/r4/Patient/0379d9a0-a010-49b8-9aa3-defd2c3fb2</a></p>\n<p>1.a) the following reverse chaining using the group ID did not work as expected - it returned all the records without filtering. <br>\n<a href=\"http://test.fhir.org/r4/Patient?_has:Group:member:_id=105\" target=\"_blank\" title=\"http://test.fhir.org/r4/Patient?_has:Group:member:_id=105\">http://test.fhir.org/r4/Patient?_has:Group:member:_id=105</a><br>\n1.b) tried to query DiagnosticReport based on the group of patient but got an error.<br>\n<a href=\"http://test.fhir.org/r4/DiagnosticReport?patient:_has:Group:member:_id=105\" target=\"_blank\" title=\"http://test.fhir.org/r4/DiagnosticReport?patient:_has:Group:member:_id=105\">http://test.fhir.org/r4/DiagnosticReport?patient:_has:Group:member:_id=105</a></p>\n<p>2) on the HAPI test server, the query outlined in 1.b above didn't return any record however it didn't error out either. </p>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> &amp; <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> , are the queries in 1.a and 1.b above syntactically correct in FHIR R4 for our use case? The proposed :in modifier definitely will make the query more readable, however we need to figure out how to support our use case in R4 for the time being. Look forward to your advice!</p>",
        "id": 181306537,
        "sender_full_name": "Cindy Jiang",
        "timestamp": 1574344888
    },
    {
        "content": "<p>Your query on 1b looks invalid: You have \"patient:_has:...\" but I'm<br>\nassuming you intended that to be \"_has:patient:...\"</p>",
        "id": 181308101,
        "sender_full_name": "James Agnew",
        "timestamp": 1574345894
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span>  thanks for your suggestion.  with the following queries, still not successful.</p>",
        "id": 181716050,
        "sender_full_name": "Sanjaai",
        "timestamp": 1574515844
    },
    {
        "content": "<ol>\n<li>\n<p>Original query <br>\n<a href=\"http://hapi.fhir.org/baseR4/DiagnosticReport?patient:_has:Group:member:_id=52152\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/DiagnosticReport?patient:_has:Group:member:_id=52152\">http://hapi.fhir.org/baseR4/DiagnosticReport?patient:_has:Group:member:_id=52152</a> <br>\nno syntax errors, returns empty result set. however there are matching DIagnosticReports</p>\n</li>\n<li>\n<p>Tried following, per suggestion,<br>\n2.1. <a href=\"http://hapi.fhir.org/baseR4/DiagnosticReport?_has:patient:_has:Group:member:_id=52152\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/DiagnosticReport?_has:patient:_has:Group:member:_id=52152\">http://hapi.fhir.org/baseR4/DiagnosticReport?_has:patient:_has:Group:member:_id=52152</a> <br>\n2.2. <a href=\"http://hapi.fhir.org/baseR4/DiagnosticReport?_has:Patient:_has:Group:member:_id=52152\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/DiagnosticReport?_has:Patient:_has:Group:member:_id=52152\">http://hapi.fhir.org/baseR4/DiagnosticReport?_has:Patient:_has:Group:member:_id=52152</a><br>\n2.3 <a href=\"http://hapi.fhir.org/baseR4/DiagnosticReport?_has:Patient:Group:member:_id=52152\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/DiagnosticReport?_has:Patient:Group:member:_id=52152\">http://hapi.fhir.org/baseR4/DiagnosticReport?_has:Patient:Group:member:_id=52152</a><br>\n2.4 <a href=\"http://hapi.fhir.org/baseR4/DiagnosticReport?_has:Patient:group:member:_id=52152\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/DiagnosticReport?_has:Patient:group:member:_id=52152\">http://hapi.fhir.org/baseR4/DiagnosticReport?_has:Patient:group:member:_id=52152</a><br>\nall of them are returning syntax errors.</p>\n</li>\n</ol>",
        "id": 181716183,
        "sender_full_name": "Sanjaai",
        "timestamp": 1574516159
    },
    {
        "content": "<p>1 is a valid query IMHO..</p>",
        "id": 181717879,
        "sender_full_name": "René Spronk",
        "timestamp": 1574519308
    },
    {
        "content": "<p>I don't get how 1 could be valid.. Where in the spec is the syntax <code>[searchparam]:_has</code> described?</p>",
        "id": 181726508,
        "sender_full_name": "James Agnew",
        "timestamp": 1574534495
    },
    {
        "content": "<p><a href=\"http://hl7.org/fhir/search.html#has\" target=\"_blank\" title=\"http://hl7.org/fhir/search.html#has\">http://hl7.org/fhir/search.html#has</a> - 'The _has parameter can be chained'  - the example chains two <code>_has</code> but there seems to be no reason chaining it with a normal search parameter should be forbidden</p>",
        "id": 181726951,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1574535247
    },
    {
        "content": "<p>My need is same as what is stated at the top of the post. I have a List or Group of patients and want to get the DiagnosticReports for everyone in the List or Group. Is there a simpler way to get it if Query 1 is questionable?</p>",
        "id": 181727573,
        "sender_full_name": "Sanjaai",
        "timestamp": 1574536358
    },
    {
        "content": "<p>Ahh if it's a chain we're trying to do, that syntax uses a dot, not a colon. The query you're after is probably this one:</p>\n<p><a href=\"http://hapi.fhir.org/baseR4/DiagnosticReport?subject._has:Group:member:_id=52152\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/DiagnosticReport?subject._has:Group:member:_id=52152\">http://hapi.fhir.org/baseR4/DiagnosticReport?subject._has:Group:member:_id=52152</a></p>",
        "id": 181727804,
        "sender_full_name": "James Agnew",
        "timestamp": 1574536791
    },
    {
        "content": "<p>..or even better this one, which will be slightly more efficient in HAPI: </p>\n<p><a href=\"http://hapi.fhir.org/baseR4/DiagnosticReport?subject._has:Group:member:_id=Patient/52152\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/DiagnosticReport?subject._has:Group:member:_id=Patient/52152\">http://hapi.fhir.org/baseR4/DiagnosticReport?subject._has:Group:member:_id=Patient/52152</a></p>",
        "id": 181727859,
        "sender_full_name": "James Agnew",
        "timestamp": 1574536831
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> it appears to be returning the correct data set.</p>",
        "id": 181731918,
        "sender_full_name": "Sanjaai",
        "timestamp": 1574544307
    }
]