[
    {
        "content": "<p>The Meta component has a curret property lastModified which indicates when the record was last updated/created.<br>\nI'm interested to know if anyone has considered exposing the user details that made the change also? (I know it should be in the AuditEvent, but you're not always getting that)</p>",
        "id": 153834247,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1466651824
    },
    {
        "content": "<p>Yep.  I'm also interested in retaining created date.</p>",
        "id": 153834263,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466656945
    },
    {
        "content": "<p>Unfortunately, that's back in the history of the resource.</p>",
        "id": 153834266,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1466657343
    },
    {
        "content": "<p>(in the oldest version of the resource)<br>\n[base]/Patient/34/_history?_count=1&amp;_elements=meta.lastModified (then use the last link in the bundle returned)<br>\nNot sure how many of the reference servers would do this _elements filtering into the history.</p>",
        "id": 153834268,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1466657491
    },
    {
        "content": "<p>Yeah; so that's all well and good, but it's a ginormous pain when you could just copy it forward in the metadata each time.</p>",
        "id": 153834269,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466657624
    },
    {
        "content": "<p>(I know, might also want the createdbyuser too)</p>",
        "id": 153834287,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1466659706
    },
    {
        "content": "<p>Yep; original author is <strong>very</strong> useful to know, especially when they're authoring StructureDefinitions. <img alt=\":expressionless:\" class=\"emoji\" src=\"static/third/gemoji/images/emoji/expressionless.png\" title=\":expressionless:\"> </p>",
        "id": 153834288,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1466659778
    },
    {
        "content": "<p>We (Orion Health) are using an extension to express author/custodian on all our CDA- and v2-derived resources - it is indeed useful.</p>",
        "id": 153834289,
        "sender_full_name": "James Butler",
        "timestamp": 1466660032
    },
    {
        "content": "<p>Can you share the details of these extensions?<br>\n(where you put them and what is in them)</p>",
        "id": 153834294,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1466661867
    },
    {
        "content": "<p>We put the extension on every top-level resource we serve (or do you mean where is the definition registered? We haven't got that far yet). The structure is inspired by Provenance.agent - a role code (I stole the valueset from <a href=\"https://www.hl7.org/fhir/valueset-provenance-agent-role.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/valueset-provenance-agent-role.html\">https://www.hl7.org/fhir/valueset-provenance-agent-role.html</a>) plus an identifier and a reference to a Practitioner or Organization. The idea is to populate the identifier and optionally a (contained) resource depending on the richness of the source data.</p>\n<p>The intended use is for writing privacy/access rules in a multi-participant HIE-style system. Ideally this or something like it would be standard metadata or at least a standard extension, I guess that depends on how widespread the use case is.</p>",
        "id": 153834578,
        "sender_full_name": "James Butler",
        "timestamp": 1466717246
    },
    {
        "content": "<p>This post - <a href=\"https://fhirblog.com/2016/02/18/where-did-that-data-come-from/\" target=\"_blank\" title=\"https://fhirblog.com/2016/02/18/where-did-that-data-come-from/\">https://fhirblog.com/2016/02/18/where-did-that-data-come-from/</a> describes the process we went through at the time...</p>",
        "id": 153834690,
        "sender_full_name": "David Hay",
        "timestamp": 1466732872
    },
    {
        "content": "<p>It sure seems like you are reinventing Provenance... why can't Provenance be used?   More importantly, can you help us improve Provenance so that it can be used? Having two different ways of doing Provenance, with one being extensions, seems like a bad design for us this early in FHIR lifecycle.</p>",
        "id": 153834817,
        "sender_full_name": "John Moehrke",
        "timestamp": 1466778978
    },
    {
        "content": "<p>Its that you don't want the rest of it, and always have to ask for it. All other data would be expected in either provenance or AuditEvent</p>",
        "id": 153834964,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1466918674
    },
    {
        "content": "<p>As David mentioned in his linked blog, and as Brian points out, Provenance is a heavy beast when all you want to know is a single identifier; and the direction of the Provenance references makes it difficult to serve up at the point we need it. Also we're not building a FHIR server de novo - we're adding FHIR read APIs to an existing solution where constructing a useful Provenance endpoint would be difficult and of (so far) limited value. Maybe we'll get there one day though.</p>",
        "id": 153834984,
        "sender_full_name": "James Butler",
        "timestamp": 1466983222
    },
    {
        "content": "<p>We've contemplated operations to provide summary Audit and Provenance information for each resource that would take into account the existence of those resources...anyone else?</p>",
        "id": 153835089,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1467038566
    },
    {
        "content": "<p>Chris, how is this not simply a query on the Provenance resource? or query on AuditEvent resource? If you have Resource X, and you want to know all Provenance resources about it, you just query for Provenance resources with target of X. Similarly with AuitEvent.</p>",
        "id": 153835095,
        "sender_full_name": "John Moehrke",
        "timestamp": 1467040420
    },
    {
        "content": "<p>Return parameters would be what the above have requested - create by/time, update by/time, optionally some information gleaned from provenance records.  Nothing that you couldn't get by querying and summarizing client-side AuditEvent and Provenance resources, but in a more usable form.</p>",
        "id": 153835098,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1467040585
    },
    {
        "content": "<p>And, potentially at scale (a record for each of a large set of resources) that wouldn't be as practical when executed a record at a time.</p>",
        "id": 153835099,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1467040628
    },
    {
        "content": "<p>Not sure this needs to be a standardized operation or not...again, more spit-balling here than proposing...</p>",
        "id": 153835102,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1467040835
    },
    {
        "content": "<p>Okay... since you are just spit-balling.... I will ask for your perspective on what makes the existing Provenance and AuditEvent such that you need something 'more usable'? How are they not useable? I presume you have looked and found them problematic, if so, now is the time to fix them. Or you have some use-case scenario that has different needs?</p>",
        "id": 153835106,
        "sender_full_name": "John Moehrke",
        "timestamp": 1467041004
    },
    {
        "content": "<p>Not sure I have an issue with them as-is...the issue for me is probably just a lack of good client-side tooling to access them.  Digging through an auditevent log with postman is painful, and generally I'm just after a list of creates/edits (who and when).  A nice summary operation would cover many of my \"what's going on here?\" kinds of questions...</p>",
        "id": 153835110,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1467041297
    },
    {
        "content": "<p>We did try to make the _summary query useful... Your argument might be indicating a few more elements could be eliminated from a _summary request?  This would be a nice CP I would like the committee to consider; could you write up that CP?</p>",
        "id": 153835129,
        "sender_full_name": "John Moehrke",
        "timestamp": 1467042447
    },
    {
        "content": "<p>Will give it some thought....</p>",
        "id": 153835131,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1467042675
    },
    {
        "content": "<p>there's other resources where server side summarization is a very useful thing too. Observation is one where we have a draft for server summarization. I can see a provenance summary being useful too. </p>",
        "id": 153835191,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467060640
    },
    {
        "content": "<p>of course these are things that could be implemented by making the client fetch the data and do the analysis itself, but there's several advantages in getting the server to do the analysis</p>",
        "id": 153835192,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467060695
    },
    {
        "content": "<p>and none of this indicates that the resources themselves are at all deficient</p>",
        "id": 153835193,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467060706
    },
    {
        "content": "<p>Looking at the Provenance structure, in order to display on in a search result set the createby/date, updateby/date I would need to:<br>\n1. perform queries to retrieve the provenance for the record in the result,<br>\n2. grab the history of the resource to locate retreive the link to the first version of the resource<br>\n3. retrieve the provenance for that first version of the resource.<br>\nThen my issue is that the userId is there, but the username isn't. The security system is likely not FHIR resources, and hence i'd need to just read the display from the Reference on the actor<br>\nNote: For our system we wouldn't record anything else from this resource, except where the content was introduced by external systems (such as via an integration engine/messaging).<br>\nAuditEvent however, we do use basically as is, and the only oddity I've had with that is the lack of the simple requestURI that was used.</p>",
        "id": 153835276,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1467074779
    },
    {
        "content": "<p>I think that captures my thoughts, if I'm misusing things, I'd like to know about it.</p>",
        "id": 153835278,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1467074816
    },
    {
        "content": "<p>Hi!</p>\n<p>I'm wondering if there are any appropriate fields to put \"custom\" metadata? Use case: I have a codesystem that has a product brand and a URL to some medication site online. Only 0..* I see is Coding, but I guess this is not correct use. Any input on this?</p>\n<p>// Thomas</p>",
        "id": 153960389,
        "sender_full_name": "Thomas Johansen",
        "timestamp": 1526305815
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"195227\">@Thomas Johansen</span>, you could define some custom extensions. This would allow you to exchange and process the custom metadata.</p>",
        "id": 153960393,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1526306056
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> Hi Michel! I see, I was hoping this was a common use case and therefore within the spec without turning to extensions. But I guess this kind of data is of non importance and ok to put in extension. Thanks so much for your time :)</p>",
        "id": 153960768,
        "sender_full_name": "Thomas Johansen",
        "timestamp": 1526358999
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"195227\">@Thomas Johansen</span>, I wouldn't say the data is of non-importance - it is just not covered by the core FHIR resource definitions.</p>",
        "id": 153960807,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1526368598
    }
]