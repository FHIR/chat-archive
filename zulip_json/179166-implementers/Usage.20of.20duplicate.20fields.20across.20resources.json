[
    {
        "content": "<p>We are profiling a referral/ServiceRequest process, and are trying to figure out how to deal with redundant links to resources.</p>\n<p>In the referral process, we send a ServiceRequest, and then there is a bunch of other data that can come with it (or be added later) that is always related to the ServiceRequest and POINTS to the serviceRequest. e.g.,<br>\n- Appointment.basedOn --&gt; ServiceRequest<br>\n- Communication.basedOn --&gt; ServiceRequest<br>\n- QuestionnaireResponse.basedOn --&gt; ServiceRequest</p>\n<p>Each of these resources also references the Patient who is the subject of the ServiceRequest, but the ServiceRequest itself identifies the patient ... so it becomes redundant for appointment/communication/questionnaireResponse to reference the patient when we can find out who the patient is via the ServiceRequest.</p>\n<p>My Question is: should we reference the Patient resource from Appointment/Communication/QuestionnaireResponse when it has to always be the same Patient that is referenced in the linked ServiceRequest? My first inclination is NO, because it could cause confusion if ever the referenced patient is different than in the ServiceRequest (which they never should be).</p>",
        "id": 177054671,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1569936448
    },
    {
        "content": "<p>Note: We are using a messaging paradigm for this specification.</p>",
        "id": 177056885,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1569937955
    },
    {
        "content": "<p>Yes.  There's no context inheritance with FHIR.  If something is for a patient, that must be explicitly declared, it can't be inferred.  The data that is received in a message might subsequently be exposed with REST and the relationships will all need to exist.  As well, the logic for propagating context is inevitably complex and scenario-specific, which significantly increases implementer cost.  The references don't take up much extra bandwidth and the compression that happens during transmission makes them take up considerably less.</p>",
        "id": 177058321,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1569938899
    },
    {
        "content": "<p>Is it fair to say in an implementation Guide that the Patient in ServiceRequest and Appointment must match (when in the same message), or else the message will be rejected?</p>",
        "id": 177063807,
        "sender_full_name": "Tim Berezny",
        "timestamp": 1569942124
    },
    {
        "content": "<p>For this scenario would these not be considered Contained Resources? <a href=\"http://hl7.org/fhir/references.html#contained\" target=\"_blank\" title=\"http://hl7.org/fhir/references.html#contained\">http://hl7.org/fhir/references.html#contained</a>. i.e. contained in the message bundle with ServiceRequest? In which case an external  RESTful reference may never exist.</p>",
        "id": 177065342,
        "sender_full_name": "John Wills",
        "timestamp": 1569943124
    },
    {
        "content": "<p>Contained means that the resource is contained within one of the resources.  Contained resources can't be referenced by any other resources in the Bundle.  There's no requirement that the resources be exposed RESTfully in the source system.  The target system might choose to expose them RESTfully, which means the RESTful principles still need to be adhereed to.</p>",
        "id": 177065830,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1569943440
    },
    {
        "content": "<p>It's absolutely possible to set business rules about what references must be the same in the context of a particular message event.  (GraphDefinition tries to provide a way to do this, though it hasn't been terribly well exercised in the context of MessageDefinition (or anywhere, really)</p>",
        "id": 177065957,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1569943505
    },
    {
        "content": "<blockquote>\n<p>Contained resources can't be referenced by any other resources in the Bundle</p>\n</blockquote>\n<p>That's not true. But it's certainly generally true that you should only ever use contained resources when you can't identify the content (e.g. you have just a name for a practitioner)</p>",
        "id": 177095964,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1569962471
    }
]