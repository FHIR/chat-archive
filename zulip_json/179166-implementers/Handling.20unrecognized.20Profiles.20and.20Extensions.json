[
    {
        "content": "<p>The FHIR documentation is pretty clear on handling unrecognized (non-modifier) extensions <a href=\"https://www.hl7.org/fhir/extensibility.html#Summary2\">https://www.hl7.org/fhir/extensibility.html#Summary2</a> \"When reading elements, read and process the extensions you know and use, and ignore other extensions except for modifier extensions\"</p>\n<p>Is there any similar guidance on handling unknown/unrecognized Profile URIs?</p>\n<p>Based on HL7 FHIR Validator's behaviour, it  handles unknown Profile URIs as Warnings, and unknown Extensions are Informational.</p>\n<p>Compared with HAPi's implementation that handles unknown Profile URIs as Errors: <a href=\"#narrow/stream/179167-hapi/topic/5.2E1.2E0.20FhirInstanceValidator.20not.20allowing.20unknown.20profiles\">https://chat.fhir.org/#narrow/stream/179167-hapi/topic/5.2E1.2E0.20FhirInstanceValidator.20not.20allowing.20unknown.20profiles</a> .  I'm not sure how HAPI handles unkown Extensions, but I think they may be throwing errors as well.</p>",
        "id": 227650136,
        "sender_full_name": "Ken Sinn",
        "timestamp": 1614192084
    },
    {
        "content": "<p>since profile references never change the meaning of the content of the resource, you should automatically ignore them when processing the meaning of the resource</p>",
        "id": 227681634,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1614204273
    },
    {
        "content": "<p>You should ignore the ones you recognize when processing meaning too :)  (Except insofar as you <br>\na) presume the declaration is correct - while they must be correct for the instance to be valid, \"trust but verify\" is often the best policy<br>\nb) you're just looking at the profile declaration as a short-cut to know what constraints hold for the data and the real meaning is coming from those constraints)</p>",
        "id": 227697911,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1614211889
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> I am having trouble following those guidance ^ as I just upgraded from 4.1 to 5.3 and I am getting bunch of errors </p>\n<div class=\"codehilite\"><pre><span></span><code>Error: HTTP 422 : Unknown extension http://hl7.org/fhir/StructureDefinition/us-core-race\n</code></pre></div>\n<p>obviously in our first implementation using HAPI 4.1 we did not create any profile but had an extension SearchParameter</p>\n<p>But my question is <strong>How do you get past these errors</strong> as I cannot even access any data from 5.3 FHIR server bcoz of these errors. Please see this <strong>test/staging</strong> fhir server <a href=\"http://52.91.59.1:8080/fhir/Patient?_format=json&amp;_pretty=true\">http://52.91.59.1:8080/fhir/Patient?_format=json&amp;_pretty=true</a></p>",
        "id": 234719682,
        "sender_full_name": "dsh",
        "timestamp": 1618507829
    },
    {
        "content": "<p>Hmm.  When validating within the HL7 space, having an HL7-namespaced extension that's unrecognized is definitely something that should be treated as an error.  However, when using the HL7 validator in an independent production space, it should probably just be a warning.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>, do you agree?</p>\n<p>In the meantime, if you ensure your validator has the US Core IG loaded, you shouldn't get the error anymore (and it'll properly validate those extensions as well as any US Core profile declarations).</p>",
        "id": 234751271,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1618520237
    },
    {
        "content": "<p>this is a question for the  @hapi stream; it's entirely about how the validator is configured inside HAPI</p>",
        "id": 234751521,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1618520346
    }
]