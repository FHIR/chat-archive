[
    {
        "content": "<p>I would like to send my ECG Observations to a local VONK Server using SWIFT-SMART but I am having trouble grasping the concept on how to do it.</p>\n<p>I started off creating a client according to the official SWIFT-SMART documentation (<a href=\"https://github.com/smart-on-fhir/Swift-SMART/wiki/Client\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/Swift-SMART/wiki/Client\">https://github.com/smart-on-fhir/Swift-SMART/wiki/Client</a>) but I am now stuck on how to actually transmit the data. I don't have a lot of experience in Client-Server communication but usually I would create an object for the server and then perform operations with this very object. However, in SWIFT-SMART it looks like the operations are performed on the resources, which I don't really seem to understand. My question precisely is:</p>\n<p>How do I transmit resources (regardless of whether they are a patient or observation) to a local VONK-Server in Swift using SWIFT-SMART?</p>\n<p>I got as far as this (<a href=\"https://gist.github.com/ylboerner/10be4373780a870d2dd5e014e9f7062a\" target=\"_blank\" title=\"https://gist.github.com/ylboerner/10be4373780a870d2dd5e014e9f7062a\">https://gist.github.com/ylboerner/10be4373780a870d2dd5e014e9f7062a</a>) but can't seem to find a way to transmit resources using the client or server when looking at the documentation. (<a href=\"http://docs.smarthealthit.org/Swift-SMART/Classes/Client.html\" target=\"_blank\" title=\"http://docs.smarthealthit.org/Swift-SMART/Classes/Client.html\">http://docs.smarthealthit.org/Swift-SMART/Classes/Client.html</a>)</p>",
        "id": 187549583,
        "sender_full_name": "Yannick Börner",
        "timestamp": 1580997570
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191339\">@Pascal Pfiffner</span></p>",
        "id": 187575812,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1581014459
    },
    {
        "content": "<p>Your thoughts are correct. You create a <code>Client</code> instance that represents the server you connect to. Then you call <code>resourceInstance.create(server: client.server)</code>. See <a href=\"https://github.com/smart-on-fhir/Swift-SMART/wiki/Resources#type-level\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/Swift-SMART/wiki/Resources#type-level\">https://github.com/smart-on-fhir/Swift-SMART/wiki/Resources#type-level</a> linked from <a href=\"https://github.com/smart-on-fhir/Swift-SMART/wiki\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/Swift-SMART/wiki\">https://github.com/smart-on-fhir/Swift-SMART/wiki</a>.</p>",
        "id": 187584911,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1581020540
    },
    {
        "content": "<p>Thank you so much! Works like a charm now.</p>",
        "id": 187633466,
        "sender_full_name": "Yannick Börner",
        "timestamp": 1581077317
    },
    {
        "content": "<p>I'm currently struggling to send observations to an open VONK server via Swift-SMART. </p>\n<p>This is my current code: <a href=\"https://gist.github.com/ylboerner/25f55d11ef8833e2419ab4acaa699494\" title=\"https://gist.github.com/ylboerner/25f55d11ef8833e2419ab4acaa699494\">https://gist.github.com/ylboerner/25f55d11ef8833e2419ab4acaa699494</a></p>\n<p>The error apparently happens in line 23 and the error output is the following: \"Optional(“Location” header resource type mismatch. Expecting “CapabilityStatement” in “<em>serveraddress</em>/metadata”)\" </p>\n<p>I suspect that I am not initiating my client correctly. The server is open and should not require any authentication. Any suggestions? </p>\n<p>Thank you in advance!</p>",
        "id": 194463537,
        "sender_full_name": "Yannick Börner",
        "timestamp": 1587139642
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span></p>",
        "id": 194463874,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1587139785
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>. Let me loop in Vonk experts <span class=\"user-mention\" data-user-id=\"191347\">@Mirjam Baltus</span> <span class=\"user-mention\" data-user-id=\"191757\">@Christiaan Knaap</span></p>",
        "id": 194478024,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1587146338
    },
    {
        "content": "<p>Which FHIR version is the open Vonk server using?</p>",
        "id": 194479466,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1587147023
    },
    {
        "content": "<p>Vonk uses STU3 on the regular endpoint (<a href=\"https://vonk.fire.ly/\" title=\"https://vonk.fire.ly/\">https://vonk.fire.ly/</a>), but if you need R4, you can use <a href=\"https://vonk.fire.ly/r4\" title=\"https://vonk.fire.ly/r4\">https://vonk.fire.ly/r4</a>.<br>\nBoth endpoints do respond to the /metadata request with a CapabilityStatement, but I do see that we have &lt;endpoint&gt;/metadata in the Location header of the response. It seems that the client does not expect that?</p>",
        "id": 194482373,
        "sender_full_name": "Mirjam Baltus",
        "timestamp": 1587148420
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260054\">@Yannick Börner</span> The Swift client looks at the headers of the response, and if it finds a Location header, it expects the resource type to be part of the url. In this case, our Vonk server does not send the resource type as part of that url, so your client generates an error. I do think that the client should not inspect that header, but I've found that other servers do not send that header at all. I'll discuss this internally to see if we need to eliminate the Location from our response.<br>\nIn the meantime, could you do without the smartConnection.ready call to avoid the request to /metadata, and just start sending the Observations?</p>",
        "id": 194487621,
        "sender_full_name": "Mirjam Baltus",
        "timestamp": 1587151058
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191912\">Michele Mottini</span> <a href=\"#narrow/stream/179166-implementers/topic/Sending.20Observations.20to.20VONK.20Server.20with.20Swift-SMART/near/194479466\" title=\"#narrow/stream/179166-implementers/topic/Sending.20Observations.20to.20VONK.20Server.20with.20Swift-SMART/near/194479466\">said</a>:</p>\n<blockquote>\n<p>Which FHIR version is the open Vonk server using?</p>\n</blockquote>\n<p>The server is using version 3.5.0.0.</p>",
        "id": 194533644,
        "sender_full_name": "Yannick Börner",
        "timestamp": 1587199363
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191347\">Mirjam Baltus</span> <a href=\"#narrow/stream/179166-implementers/topic/Sending.20Observations.20to.20VONK.20Server.20with.20Swift-SMART/near/194487621\" title=\"#narrow/stream/179166-implementers/topic/Sending.20Observations.20to.20VONK.20Server.20with.20Swift-SMART/near/194487621\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"260054\">Yannick Börner</span> The Swift client looks at the headers of the response, and if it finds a Location header, it expects the resource type to be part of the url. In this case, our Vonk server does not send the resource type as part of that url, so your client generates an error. I do think that the client should not inspect that header, but I've found that other servers do not send that header at all. I'll discuss this internally to see if we need to eliminate the Location from our response.<br>\nIn the meantime, could you do without the smartConnection.ready call to avoid the request to /metadata, and just start sending the Observations?</p>\n</blockquote>\n<p>Thank you for your thorough explanation! The location header with the resource type included would be responsible for confirming the transaction right? If I send my request via Postman, the resource type is included within the location header. </p>\n<p>I did try to send my observations without the smartConnection.ready() call but received the following error: </p>\n<p>Optional(Error 423: [error] unknown)</p>\n<p>Oddly enough, when I simply ran the application again with breakpoints enabled, the observations were successfully sent! This is a kind of behaviour which I observed before, where the first call simply failed and the second one succeeded without any changes made on my end.</p>",
        "id": 194534123,
        "sender_full_name": "Yannick Börner",
        "timestamp": 1587200127
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"260054\">@Yannick Börner</span> The 423 Locked error is sent by Vonk when it is still starting up and loading conformance resources. Some platforms like IIS stop the server when it has been idle for some time, and start it again when a request comes in. This results in the 423 on the first request, but subsequent requests succeed since Vonk has started by then. How are you running your Vonk server?</p>",
        "id": 194654574,
        "sender_full_name": "Mirjam Baltus",
        "timestamp": 1587376946
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191347\">@Mirjam Baltus</span> I assume that the server is an instantiation on MS Azure without any additional configurations. Your answer makes sense, as I am the only one using that server every other day. Azure is likely putting it into an idle state because of that. Thank you so much!</p>",
        "id": 194662382,
        "sender_full_name": "Yannick Börner",
        "timestamp": 1587382394
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"260054\">Yannick Börner</span> <a href=\"#narrow/stream/179166-implementers/topic/Sending.20Observations.20to.20VONK.20Server.20with.20Swift-SMART/near/194533644\" title=\"#narrow/stream/179166-implementers/topic/Sending.20Observations.20to.20VONK.20Server.20with.20Swift-SMART/near/194533644\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191912\">Michele Mottini</span> <a href=\"#narrow/stream/179166-implementers/topic/Sending.20Observations.20to.20VONK.20Server.20with.20Swift-SMART/near/194479466\" title=\"#narrow/stream/179166-implementers/topic/Sending.20Observations.20to.20VONK.20Server.20with.20Swift-SMART/near/194479466\">said</a>:</p>\n<blockquote>\n<p>Which FHIR version is the open Vonk server using?</p>\n</blockquote>\n<p>The server is using version 3.5.0.0.</p>\n</blockquote>\n<p>Just to avoid confusion: Version 3.5.0.0 is the version of <em>Vonk</em>. There is no FHIR version 3.5.0.0. The FHIR Version in use is 3.0.2. (Or , on the /R4 endpoint: 4.0.1).</p>",
        "id": 194900037,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1587543580
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191757\">Christiaan Knaap</span> <a href=\"#narrow/stream/179166-implementers/topic/Sending.20Observations.20to.20VONK.20Server.20with.20Swift-SMART/near/194900037\" title=\"#narrow/stream/179166-implementers/topic/Sending.20Observations.20to.20VONK.20Server.20with.20Swift-SMART/near/194900037\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"260054\">Yannick Börner</span> <a href=\"#narrow/stream/179166-implementers/topic/Sending.20Observations.20to.20VONK.20Server.20with.20Swift-SMART/near/194533644\" title=\"#narrow/stream/179166-implementers/topic/Sending.20Observations.20to.20VONK.20Server.20with.20Swift-SMART/near/194533644\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191912\">Michele Mottini</span> <a href=\"#narrow/stream/179166-implementers/topic/Sending.20Observations.20to.20VONK.20Server.20with.20Swift-SMART/near/194479466\" title=\"#narrow/stream/179166-implementers/topic/Sending.20Observations.20to.20VONK.20Server.20with.20Swift-SMART/near/194479466\">said</a>:</p>\n<blockquote>\n<p>Which FHIR version is the open Vonk server using?</p>\n</blockquote>\n<p>The server is using version 3.5.0.0.</p>\n</blockquote>\n<p>Just to avoid confusion: Version 3.5.0.0 is the version of <em>Vonk</em>. There is no FHIR version 3.5.0.0. The FHIR Version in use is 3.0.2. (Or , on the /R4 endpoint: 4.0.1).</p>\n</blockquote>\n<p>You're absolutely right! I read that question too quickly :-)</p>",
        "id": 194917697,
        "sender_full_name": "Yannick Börner",
        "timestamp": 1587555687
    }
]