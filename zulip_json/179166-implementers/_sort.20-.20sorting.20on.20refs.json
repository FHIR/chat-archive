[
    {
        "content": "<p>The examples I've been able to find regarding sorting all seem to show sorting on types such as string, date, token, etc.  My instinct is that sorting on a reference type would take the form of chaining in searches?</p>\n<p>eg:  </p>\n<p>GET [base]/DiagnosticReport?_sort=subject.name</p>",
        "id": 198346226,
        "sender_full_name": "Rob Resendez",
        "timestamp": 1590080024
    },
    {
        "content": "<p>Don't believe that's supported by the standard, only direct search parameters can be used</p>",
        "id": 198367008,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1590090257
    },
    {
        "content": "<p>Interesting.  To make sure I'm understanding... The spec does allow for searching on refs...</p>\n<p>GET [base]/DiagnosticReport?subject.name=peter</p>\n<p>But won't allow for sorting...</p>\n<p>GET [base]/DiagnosticReport?_sort=subject.name</p>\n<p>I think this would be useful to explicitly call out in the \"sorting\" portion of the search documentation</p>",
        "id": 198466987,
        "sender_full_name": "Rob Resendez",
        "timestamp": 1590166914
    },
    {
        "content": "<p>The specs do specify it: 'Each item in the comma separated list is a search parameter' - <code>subject.name</code> is not a search parameter, <code>subject</code> is</p>",
        "id": 198470279,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1590168556
    },
    {
        "content": "<p>It is possible, though, to use \"<a href=\"http://subject.name\">subject.name</a>\" in a search. That example, above, is copied straight from the search documentation.   So, the spec demonstrates explicit examples of search via ref types (for example, subject)... the spec does not explicitly demonstrate any example of a ref type being used in a sort</p>",
        "id": 198786383,
        "sender_full_name": "Rob Resendez",
        "timestamp": 1590509877
    }
]