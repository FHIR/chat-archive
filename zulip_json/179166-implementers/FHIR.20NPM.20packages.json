[
    {
        "content": "<p>Has anyone worked with FHIR NPM packages and have any insight on how it can be used to have more systematic Implementation Guides? Are there examples of FHIR NPM packages?</p>",
        "id": 154012267,
        "sender_full_name": "Kesara Liyanage",
        "timestamp": 1540495617
    },
    {
        "content": "<p>Hi Kesara, this is <em>very</em> new technology - but the R4 publication tool and IG builder will now create these NPM packages. Also, materials hosted on <a href=\"http://simplifier.net\" target=\"_blank\" title=\"http://simplifier.net\">http://simplifier.net</a> can be exported as a package.  <span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> has a link to some demo materials.</p>\n<p>I don't know exactly what you mean with \"systematic\", but packages solve versioning issues.  It makes resolution of references from one (conformance)resource to another unambiguous in terms of to which version you are referring. More details can be found here: <a href=\"https://simplifier.net/organization/firely/news/55\" target=\"_blank\" title=\"https://simplifier.net/organization/firely/news/55\">https://simplifier.net/organization/firely/news/55</a> and here <a href=\"https://blog.fire.ly/2017/11/28/versioning-and-canonical-urls/\" target=\"_blank\" title=\"https://blog.fire.ly/2017/11/28/versioning-and-canonical-urls/\">https://blog.fire.ly/2017/11/28/versioning-and-canonical-urls/</a></p>",
        "id": 154012359,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1540555648
    },
    {
        "content": "<p>Thanks Ewout,  i was thinking of NPM Packages from the Java world. Is it possible to create the resources and value sets and profiles in a FHIR IG into an NPM Package to make them more machine readable? save development time?</p>",
        "id": 154012363,
        "sender_full_name": "Kesara Liyanage",
        "timestamp": 1540557363
    },
    {
        "content": "<p>Definitely, that is the intent.</p>",
        "id": 154012370,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1540558900
    },
    {
        "content": "<p>Thank you.</p>",
        "id": 154012374,
        "sender_full_name": "Tom Pick",
        "timestamp": 1540559041
    },
    {
        "content": "<p>FYI you can download a free command-line tool \"Torinox\" from simplifier that provides a set of commands for creating and consuming FHIR NPM packages:<br>\n<a href=\"https://simplifier.net/downloads/torinox\" target=\"_blank\" title=\"https://simplifier.net/downloads/torinox\">https://simplifier.net/downloads/torinox</a></p>",
        "id": 154012375,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1540559051
    },
    {
        "content": "<p>all the existing published implementation guides on <a href=\"http://hl7.org\" target=\"_blank\" title=\"http://hl7.org\">hl7.org</a> or <a href=\"http://fhir.org\" target=\"_blank\" title=\"http://fhir.org\">fhir.org</a> now have published NPM packages. Most of the tools that work with IGs now use NPM packages</p>",
        "id": 154012377,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540559328
    },
    {
        "content": "<p>perhaps you're asking for something slightly different than that....</p>",
        "id": 154012378,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540559346
    },
    {
        "content": "<p>are we using official npm repo?</p>",
        "id": 154012379,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1540559365
    },
    {
        "content": "<p>we discussed with <span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span>  - at least to mirror to it</p>",
        "id": 154012380,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1540559390
    },
    {
        "content": "<p>We don't have a repo strategy yet. I'm patching around not having one in the hope that we will get one. I had hoped to discuss this in Baltimore but it didn't happen.</p>",
        "id": 154012383,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540559476
    },
    {
        "content": "<p>My preferred strategy is that we use <a href=\"http://registry.fhir.org\" target=\"_blank\" title=\"http://registry.fhir.org\">registry.fhir.org</a> as the master and mirror them to the npm repository</p>",
        "id": 154012384,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540559500
    },
    {
        "content": "<p>i mean this - <a href=\"https://www.npmjs.com/\" target=\"_blank\" title=\"https://www.npmjs.com/\">https://www.npmjs.com/</a></p>",
        "id": 154012385,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1540559505
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> <span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> can we move this forward?</p>",
        "id": 154012386,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540559528
    },
    {
        "content": "<ul>\n<li>Our package registry on Simplifier is up-and-running. You can publish your own packages just by uploading your resources to a Simplifier project.</li>\n<li>Our package client Torinox (fhir command line) is ready to consume packages for validation. </li>\n<li>We are currently working on canonical resource resolving through packages for Simplifier online validation, snapshot generation and rendering.</li>\n<li>We are designing package consumption in Forge.</li>\n<li>With the next release of Simplifier you can upload a package file to a project.</li>\n<li>Torinox implements basic npm install and also some specific FHIR packaging commands, like finding packages that contain a specific canonical.</li>\n</ul>",
        "id": 154012508,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1540564484
    },
    {
        "content": "<blockquote>\n<p>With the next release of Simplifier you can upload an package file to a project.</p>\n</blockquote>\n<p>Good. So we will upload all the pubished IGs as packages, and this will both update the contents of <a href=\"http://registry.fhir.org\" target=\"_blank\" title=\"http://registry.fhir.org\">registry.fhir.org</a>, and make the packages available on a package server?</p>",
        "id": 154012510,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540564545
    },
    {
        "content": "<p>In the coming release, publishing a package is still a separate step, but we are looking into making it auto-publishable.</p>",
        "id": 154012512,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1540564614
    },
    {
        "content": "<p>But the update to <a href=\"http://registry.fhir.org\" target=\"_blank\" title=\"http://registry.fhir.org\">registry.fhir.org</a> is automatical.</p>",
        "id": 154012514,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1540564657
    },
    {
        "content": "<p>... I'm not exactly sure that that means. Focusing for now on the uploading a package generated outside simplifier... how does that work?</p>",
        "id": 154012515,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540564696
    },
    {
        "content": "<p>Next week we will deploy a new version of Simplifier. Then you can just go to your Simplifier project(s), press upload, choose a package and that's it.</p>",
        "id": 154012519,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1540564898
    },
    {
        "content": "<p>can there be more than one package per project?</p>",
        "id": 154012521,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540564976
    },
    {
        "content": "<p>No. We are going to treat a project as the 'editing environment' of a package.</p>",
        "id": 154012524,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1540565013
    },
    {
        "content": "<p>But a few weeks ago, I have already created all the projects you asked for.</p>",
        "id": 154012526,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1540565037
    },
    {
        "content": "<p>ok. thx</p>",
        "id": 154012527,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1540565044
    },
    {
        "content": "<p><a href=\"https://simplifier.net/organization/hl7\" target=\"_blank\" title=\"https://simplifier.net/organization/hl7\">https://simplifier.net/organization/hl7</a></p>",
        "id": 154012532,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1540565114
    },
    {
        "content": "<p>(see tab Projects)</p>",
        "id": 154012533,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1540565119
    },
    {
        "content": "<p>i just downloaded a npm package from simplifier and found all examples in the package folder. According to the fhir npm spec these shouldn't be inside of the package folder. Is this a bug or is this: <a href=\"http://wiki.hl7.org/index.php?title=FHIR_NPM_Package_Spec\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=FHIR_NPM_Package_Spec\">http://wiki.hl7.org/index.php?title=FHIR_NPM_Package_Spec</a> not up to date?</p>",
        "id": 155111963,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1547496097
    },
    {
        "content": "<p>Kind of related question: what exactly is an example? E.g. Simplifier treats Questionnaire instances as \"Example of a Questionnaire\", though these are definitional artifacts.</p>",
        "id": 155112806,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1547496775
    },
    {
        "content": "<p>hmm: </p>\n<blockquote>\n<ul>\n<li>It MAY contain additional content, like example resources or documentation:</li>\n<li>\n<ul>\n<li>such files SHALL not be in the package subfolder</li>\n</ul>\n</li>\n</ul>\n</blockquote>",
        "id": 155169416,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1547559607
    },
    {
        "content": "<p>that's not true in true in practice</p>",
        "id": 155169431,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1547559624
    },
    {
        "content": "<p>all resources are in the \\package folder, and package processors can read which types they are interested in</p>",
        "id": 155169451,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1547559661
    },
    {
        "content": "<p>How will a processor than distinguish between the conformance related resources (CS,VS,Profiles) and the additional content like examples? A very theoretical edge case: A package with profiles and examples of profiles derived/conformant from the profiles.</p>",
        "id": 155181732,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1547568652
    },
    {
        "content": "<p>any difference that mattered would have to be explicit in the resource somehow</p>",
        "id": 155186306,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1547572228
    },
    {
        "content": "<p>Question to the community. In the package specification we have defined HL7 FHIR packages to have the following name:<br>\n<strong>hl7.fhir.core</strong><br>\nWhere the NPM version (semver) also desginates the FHIR version.<br>\nSo: <br>\nFHIR STU3 -&gt; hl7.fhir.core v3.0.1<br>\nFHIR R4 -&gt; hl7.fhir.core v4.0.0</p>\n<p>For people downloading - and using packages this can be confusing. Since users will assume they need the latest version.<br>\nIf they are working on an STU3 project, they will get the R4 spec by accident.</p>\n<p>My prososal would be to follow the logic that we defined for multi-version support to apply to the FHIR spec itself as well. <br>\nSo:<br>\nFHIR STU3 -&gt; hl7.fhir.core.r3<br>\nFHIR R4 -&gt; hl7.fhir.core.r4</p>\n<p>(in a sense: the FHIR spec is a multi-versioned IG)</p>",
        "id": 162509279,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1554371228
    },
    {
        "content": "<p>so I have decided that I actually prefer this - it solves a distribution problem for me. But it will break every tool in a single go, since they are all welded to the current arrangement - that is, my server, the validator, the toolkit, the notepad++ plug-in, the ig publisher, the canadian build process, some other internal code of mine, and I will have to republish every package</p>",
        "id": 162510449,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554372430
    },
    {
        "content": "<p>every IG, every core package (5 of them)</p>",
        "id": 162510475,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554372461
    },
    {
        "content": "<p>so, if we make this change: I will make it in my own time, and the eco-system will be broken for a few days. and I will fiercely oppose making any more changes like this</p>",
        "id": 162510544,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554372505
    },
    {
        "content": "<p>and although I approve this change. I do not approve doing IGs the same - so that we have hl7.fhir.core.us.r2.1( which would actually be based on R4)</p>",
        "id": 162510689,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554372660
    },
    {
        "content": "<blockquote>\n<p>in a sense: the FHIR spec is a multi-versioned IG</p>\n</blockquote>\n<p>Quite elegant, I like the symmetry!</p>\n<blockquote>\n<p>I will fiercely oppose making any more changes like this</p>\n</blockquote>\n<p>Yes. If we decide to break this, then we should do it ASAP while adoption of packages &amp; impact of change is still limited.</p>",
        "id": 162516248,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1554378235
    },
    {
        "content": "<p>... it's not that limited already</p>",
        "id": 162520051,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554381463
    },
    {
        "content": "<p>Yes, so I suggest we make a decision ASAP.</p>",
        "id": 162526158,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1554385455
    },
    {
        "content": "<p>Would you like to solicit community feedback at the WGM in Montreal?</p>",
        "id": 162526199,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1554385499
    },
    {
        "content": "<p>really, I'd rather break everything before Montreal along with the breaking changes to IG publication</p>",
        "id": 162565051,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554409655
    },
    {
        "content": "<p>I'm struggling to understand the driver here.  If you want the current release of FHIR, you grab 4.0.0.  If you want something earlier, you grab something earlier.  I don't understand the need for the switch, nor why the rationale for switching differs for the core spec vs. IGs</p>",
        "id": 162566338,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1554410444
    },
    {
        "content": "<p>I'm not quite convinced that this is good idea, either. From my personal \"NPM intution\", I would expect the different FHIR release to map to major versions of the same package. My feeling is also that the \"default to latest\" problem here is no worse than it already is in general. That if, if you use STU3 you still need to deliberately navigate to the right (STU3)  documentation pages, use the right HAPI packages etc. So it has to be a conscious decision which, in my view, means that it's OK to expect users to also make a conscious choice of major NPM package version and fix it (though I acknowledge that there is a lot of less-than-conscious use of NPM versions out there...).</p>",
        "id": 162598888,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1554447640
    },
    {
        "content": "<p>Also, if the FHIR releases are in different packages, how would the versioning of those look like? E.g. would STU 3.0.1 map to hl7.fhir.core.r3 v 0.0.1 ,  v1.0.1,  v3.0.1, or something else? I think it might unclear to the users how to compute the right FHIR version from the package name and the package version (and, conversely, which package version to get for a given FHIR version).</p>",
        "id": 162598889,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1554447642
    },
    {
        "content": "<p>The core problem here is that the FHIR standard does not use Semver for versioning. It was not as widely adopted then.</p>",
        "id": 162605844,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1554455434
    },
    {
        "content": "<p>And so it's almost impossible to correctly map FHIR versions to correct semver.</p>",
        "id": 162605849,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1554455450
    },
    {
        "content": "<p>A clear example is that FHIR specification 3.5 is actually a 4.0 ballot.</p>",
        "id": 162605880,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1554455468
    },
    {
        "content": "<p>And so if FHIR would have used semver, that would be 4.0.0-ballot-2</p>",
        "id": 162605892,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1554455491
    },
    {
        "content": "<p>As a result it is close to impossible and therefore misleading to communicate FHIR versions with semver.</p>",
        "id": 162605954,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1554455525
    },
    {
        "content": "<p>Take version 3.5a.0. That cannot even be expressed as semver.</p>",
        "id": 162606001,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1554455596
    },
    {
        "content": "<p>I see, I hadn't taken that whole history into consideration - that does make the single-package solution less attractive.  Under the proposed new scheme, how would the versioning of the individual packages work (e.g. how would one distinguish ballot releases from technical updates etc.)?</p>",
        "id": 162606584,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1554456223
    },
    {
        "content": "<p>For organizations that publish their own packages it is up to them. They can use the package version as the official release version. But anyone is free to use their own release marketing. Like MacOS: Leopart, Tiger, Panther, Jaguar. </p>\n<p>But the packages versioning standard (SemVer) is very clear, precisely defined, and limited in options.</p>",
        "id": 162606920,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1554456559
    },
    {
        "content": "<p>For the FHIR spec itself it's a different issue.</p>",
        "id": 162606930,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1554456576
    },
    {
        "content": "<p>And of course that will serve as example to others.</p>",
        "id": 162606937,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1554456584
    },
    {
        "content": "<p>SemVer has a very specific purpose, and that is a technical form of communication for developers and tools how to do (automatic) upgrades.</p>",
        "id": 162607025,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1554456649
    },
    {
        "content": "<p>It helps managing and communicating breaking changes.</p>",
        "id": 162607181,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1554456811
    },
    {
        "content": "<p><a href=\"https://semver.org/\" target=\"_blank\" title=\"https://semver.org/\">https://semver.org/</a></p>",
        "id": 162607386,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1554456997
    },
    {
        "content": "<p>A technical update would be either a minor 3.x.0)or a patch (3.0.x).<br>\nA ballot release can probably be seen as a pre-release. But that's open for debate.</p>",
        "id": 162607562,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1554457162
    },
    {
        "content": "<p>3.5a.0 was special. there was never a package for it</p>",
        "id": 162617677,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554467043
    },
    {
        "content": "<p>and it's true we don't quite use semver- not for the pre-release cycle. but we do nearly use it for the actual releases</p>",
        "id": 162617728,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554467083
    },
    {
        "content": "<p>but the pre-release versions have no approach in your scheme. that's one problem with it</p>",
        "id": 162617759,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554467108
    },
    {
        "content": "<p>In which scheme?</p>",
        "id": 162617792,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1554467144
    },
    {
        "content": "<p>hl7.fhir.core.r3 - that works nice for the milestone releases - which work anyway.</p>",
        "id": 162617866,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554467179
    },
    {
        "content": "<p>what to call what was release 3.5.0 if you want to refer to it.</p>",
        "id": 162617878,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554467193
    },
    {
        "content": "<p>at least with the current approach it's simple - every release has a version and that's the version of the core package</p>",
        "id": 162617907,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1554467217
    },
    {
        "content": "<p>A related question to this - <span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> and I are discussing the package structure for core. I am presently distributing the core package as a single big package. It's 25MB. A little of that is supporting files (xml and json schema, images) but most of it is resources</p>",
        "id": 163170419,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1555058328
    },
    {
        "content": "<p>the biggest set of resources is all the terminology.</p>",
        "id": 163170433,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1555058344
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> says it's too big and slow and should be split up for ease of use. My response to that is: splitting it up makes things slower in general, not faster, since the biggest set is at the bottom of the dependency stack</p>",
        "id": 163170469,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1555058399
    },
    {
        "content": "<p>We've been talking about<br>\n.tx - all the terminologies<br>\n.types - the base structure definitions<br>\n.profiles - extensions and profiles<br>\n. api - capability statement and search parameters</p>",
        "id": 163170537,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1555058449
    },
    {
        "content": "<p>most tools will depend on the first 3. Which is nearly all the content. Which is why I think that splitting it up will be slower.</p>",
        "id": 163170572,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1555058486
    },
    {
        "content": "<p>(oh: then you have a base package that just depends on the split up packages - so the package tooling just has to fetch all the packages instead of one of them)</p>",
        "id": 163170588,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1555058514
    },
    {
        "content": "<p>and anyone thinking about this should understand: we have no process that leads to releasing one of these packages and not the others</p>",
        "id": 163170655,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1555058550
    },
    {
        "content": "<p>Tx. Grahame.<br>\nIn detail, the proposed alternative would be to create four packages:<br>\n    - hl7.fhir.r3.types<br>\n    - hl7.fhir.r3.profiles<br>\n    - hl7.fhir.r3.api<br>\n    - hl7.fhir.r3.tx<br>\nAnd one meta package hl7.fhir.r3 referencing the others.<br>\nAlthough there are arguments for both ways, I believe that these base sets should not depend on each other. Not all tools need the actual terminology sets in order to work. And people who need the terminology, don't necessarily need the types (structure definitions).<br>\nJust like I think the DataElements should go in a different package.</p>",
        "id": 163171790,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1555059603
    },
    {
        "content": "<p>.types + .profiles must depend on .tx, since they refer to the content in there extensively. and .profiles must depend on .types for the same reason. And .api depends on them all</p>",
        "id": 163180091,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1555067881
    },
    {
        "content": "<p>even if some tools don't use them (not sure what tool can do anything useful without the terminologies)</p>",
        "id": 163180144,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1555067907
    },
    {
        "content": "<p>That is what you have meta packages for, right?</p>",
        "id": 163182042,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1555070004
    },
    {
        "content": "<p>What set of tools don't use the terminologies?</p>",
        "id": 163197101,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1555080671
    },
    {
        "content": "<p>I am currently generating hl7.fhir.core + hl7.fhir.core.gen which only contains the bits needed for code generation</p>",
        "id": 163283958,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1555190387
    },
    {
        "content": "<p>well, we're not getting a lot of feedback on this...</p>",
        "id": 163375366,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1555331813
    },
    {
        "content": "<p>As an example, Forge only requires access to core <code>StructureDefinition</code> resources. Forge only tries to resolve external references to other StructureDefinitions (base profile, element type profiles). Specifically, Forge never resolves references to <code>ValueSet</code> resources. So Forge can function without the terminology definitions.<br>\nNonetheless, it may still be useful to include core terminology definitions with Forge, as this allows modellers to select valueset references from a directory listing (instead of having to search for the correct canonical url externally, e.g. on the internet). Breaking up the packages would allow load-on-demand and decrease startup delay during the initial run.</p>",
        "id": 163376408,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1555332808
    },
    {
        "content": "<p>it's definitely a requirement to allow a user to look up on value set.</p>",
        "id": 163376711,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1555333079
    },
    {
        "content": "<p>as for load on demand... you can do load on demand without breaking the packages up. If you're only loading a subset, sure... it's quicker <em>once</em>. And you only ever download the core package once.... but it's slower for every other tool ...</p>",
        "id": 163376995,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1555333267
    },
    {
        "content": "<p>I don't really see how subsets are slower.</p>",
        "id": 163380039,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1555335674
    },
    {
        "content": "<p>Unless you put the same content in there that was already delivered through a different package.</p>",
        "id": 163380132,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1555335729
    },
    {
        "content": "<p>But that in itself is 'fighting' the package philosophy.</p>",
        "id": 163380151,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1555335748
    },
    {
        "content": "<blockquote>\n<p>it's definitely a requirement to allow a user to look up on value set.</p>\n</blockquote>\n<p>Of course. But considering that Forge currently does not actually resolve <code>ValueSet</code> references, there is no \"hard\" dependency.</p>",
        "id": 163380935,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1555336235
    },
    {
        "content": "<p>subsets are slower because you get the same content, but latencies for each pacakge instead of one</p>",
        "id": 163415264,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1555361614
    },
    {
        "content": "<p>I think for less than 10 sub packages that is not significant. <br>\nThe upside is of course that there is more frequent intermediate feedback to the user that also summarizes to the user what he/she's going to get.</p>",
        "id": 163461973,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1555415651
    },
    {
        "content": "<p>a group of tool smiths talked about this last night. We will be making the change to package ids, such that fhir core packages are identified as hl7.fhir.core.r[X]. I will be making this change as soon as possible</p>",
        "id": 165150838,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557311396
    },
    {
        "content": "<p>github announced npm packages support <a href=\"https://github.com/features/package-registry\" target=\"_blank\" title=\"https://github.com/features/package-registry\">https://github.com/features/package-registry</a></p>",
        "id": 165448601,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1557638947
    },
    {
        "content": "<p>Should we investigate using this?</p>",
        "id": 165467592,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557672438
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> <span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> I'm exploring use of Torinox sync command to update my project files on Simplifier. However it looks like the sync --up always POSTs and never PUTs. Each time I sync --up, new resources are generated in my project even when nothing has changed in the profiles I'm uploading with sync --up. Is there a way to update and not create via Torinox?</p>",
        "id": 168950874,
        "sender_full_name": "Natasha Singh",
        "timestamp": 1561478389
    },
    {
        "content": "<p>The sync command identifies based on the file name. So it should do a PUT for files that are already in the project.</p>",
        "id": 169012384,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1561540780
    },
    {
        "content": "<p>We can take a look, if you tell us which project.</p>",
        "id": 169012459,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1561540871
    },
    {
        "content": "<blockquote>\n<p>The sync command identifies based on the file name. So it should do a PUT for files that are already in the project.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> <br>\nAh I see..I could have sworn that didn't work before but I just tried uploading a few times without changing anything, and I see that it does seem to PUT for the files that already exist. </p>\n<p>Also, I notice the Settings  &gt; Delete button is back too. So now I can delete the extra files I accidentally uploaded. Thanks :)</p>",
        "id": 169035769,
        "sender_full_name": "Natasha Singh",
        "timestamp": 1561559446
    },
    {
        "content": "<p>Happy to hear that.</p>",
        "id": 169036779,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1561560029
    },
    {
        "content": "<p>I have to come back to this issue:</p>\n<blockquote>\n<p>hmm: </p>\n<blockquote>\n<ul>\n<li>It MAY contain additional content, like example resources or documentation:</li>\n<li>\n<ul>\n<li>such files SHALL not be in the package subfolder</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>all resources are in the \\package folder, and package processors can read which types they are interested in</p>\n</blockquote>\n<p>the wiki page still states that examples shouldn't be in package, in reality they are.<br>\nI'm still searching for a method to distinguish if a file is an example or a conformance resource. (theoretical edge use case: i have example StructureDefinitions which souldn't be used for conformance testing)</p>",
        "id": 171442205,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1563810566
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> Maybe you can use the <code>StructureDefinition.experimental</code> property:<br>\n<a href=\"http://hl7.org/fhir/structuredefinition-definitions.html#StructureDefinition.experimental\" target=\"_blank\" title=\"http://hl7.org/fhir/structuredefinition-definitions.html#StructureDefinition.experimental\">http://hl7.org/fhir/structuredefinition-definitions.html#StructureDefinition.experimental</a></p>",
        "id": 171442390,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1563810710
    },
    {
        "content": "<p>Examples should be in the NPM package because they might be referenced by downstream IGs</p>",
        "id": 171442480,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1563810767
    },
    {
        "content": "<p>ok. But how do i know if an example is an example?</p>",
        "id": 171445487,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1563812952
    },
    {
        "content": "<p>Why do you care?</p>",
        "id": 171448200,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1563815017
    },
    {
        "content": "<p>because i'm going to implement a package importer which takes a package and uploads it to a (modified) hapi \"validate-all\" FHIR server.<br>\nI only want to upload conformance related resources and skip the examples.</p>",
        "id": 171499116,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1563870374
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> context provides a function, see <a href=\"https://github.com/ahdis/matchbox/blob/master/src/main/java/ch/ahdis/matchbox/util/IgUploadR4.java\" target=\"_blank\" title=\"https://github.com/ahdis/matchbox/blob/master/src/main/java/ch/ahdis/matchbox/util/IgUploadR4.java\">https://github.com/ahdis/matchbox/blob/master/src/main/java/ch/ahdis/matchbox/util/IgUploadR4.java</a></p>",
        "id": 171517026,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1563887891
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"191478\">@Oliver Egger</span> i just checked the hapi code: </p>\n<div class=\"codehilite\"><pre><span></span> <span class=\"kd\">public</span> <span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">MetadataResource</span><span class=\"o\">&gt;</span> <span class=\"nf\">allConformanceResources</span><span class=\"o\">()</span> <span class=\"o\">{</span>\n    <span class=\"k\">throw</span> <span class=\"k\">new</span> <span class=\"n\">UnsupportedOperationException</span><span class=\"o\">();</span>\n  <span class=\"o\">}</span>\n</pre></div>\n\n\n<p>seems not to be implemented yet. <br>\nAlso if it was, how do you distinguish between examples and conformance resources (i don't want to rely on filenames as these could be anything.)</p>",
        "id": 171517434,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1563888195
    },
    {
        "content": "<p>the answer is that you cannot tell. I can't tell either. And that's not because I can't be bothered but because there is no fixed answer. Things that are example conformance resources may be used for real by implementers</p>",
        "id": 171598746,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1563968765
    },
    {
        "content": "<p>but the new packages should help you in this regard.... have you followed that discussion?</p>",
        "id": 171598757,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1563968782
    },
    {
        "content": "<p>i agree that no one can tell and think that is a problem. The creator of a package should be able to mark resources as an example explicitly. So i can decide if i skip examples when i add a package to my fhir server conformance module.<br>\nthanks for the heads up <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> i haven't yet. You mean this thread: <a href=\"#narrow/stream/179177-conformance/topic/Package.20rework\" title=\"#narrow/stream/179177-conformance/topic/Package.20rework\">https://chat.fhir.org/#narrow/stream/179177-conformance/topic/Package.20rework</a>   ?</p>",
        "id": 171616520,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1563982546
    },
    {
        "content": "<p>yes. that thread. For an IG, there is an explicit answer - the IG resource has a marker for each resource for whether it's an example. It's in the core spec where the answer is ambiguous</p>",
        "id": 171646809,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564005463
    },
    {
        "content": "<p>for CodeSystem, ValueSet, StructureDefinition, ConceptMap, that is. Not ambiguous for any other resource. But since we're talking about 10-15 resources, who care?</p>",
        "id": 171646876,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564005508
    },
    {
        "content": "<p>i care, and other implementers as well. i think not being explicit and loosing information from IG -&gt; package is bad practice.<br>\nNPM package format knows \"directories.example\" why not put examples in a example folder (like it is described on the FHIR package spec site) and use the directories attribute in package.json to specify in which folder the examples are contained.</p>",
        "id": 171701152,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564068432
    },
    {
        "content": "<p>As for packages created on Simplifier I suppose the issue is the same. Examples of ConformanceResources can't be put into a separate example folder as we don't have a flag to differentiate between them and \"real\" resources. Correct <span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> ?</p>",
        "id": 171702774,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1564069712
    },
    {
        "content": "<p>I would agree with Patrick in the sense that we should at least separate example out into a separate folder for which we can know for sure that they are examples. Safes you the trouble of filtering them out in the process of importing them to a server.</p>",
        "id": 171702957,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1564069874
    },
    {
        "content": "<p>Given the new examples package, the core spec should be fine now in this regard.</p>",
        "id": 171703073,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1564069996
    },
    {
        "content": "<p>I agree that examples should be distinguishable and would like to add Questionnaire and the full list of other definitional artifacts to the list of potentially ambigous resources.<br>\nSo having a subfolder called \"examples\" may be a solution. Or, as Alex says, having a seperate package for examples.<br>\nThe latter might also have advantages in that you can add examples at a later point in time without changing the actual package of conformance and terminology resources.</p>",
        "id": 171704529,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1564071161
    },
    {
        "content": "<p>i like extra example packages. We then would need a propertie in the package.json to specify the kind of package</p>",
        "id": 171705235,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564071788
    },
    {
        "content": "<p>the information is not lost in the package , you just have to parse the IG resource</p>",
        "id": 171725877,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564087362
    },
    {
        "content": "<p>but I don't mind generated x.y.core and x.y.examples as well as x.y</p>",
        "id": 171725931,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564087401
    },
    {
        "content": "<blockquote>\n<p>the information is not lost in the package , you just have to parse the IG resource</p>\n</blockquote>\n<p>ahhhh! Thanks for pointing that out. Just had a look at the CG IG, ig.json is part of a package. I wasn't aware of that. Probably because i was looking at Simplifier packages all the time, Simplifier doesn't include a IG resource.<br>\n<span class=\"user-mention\" data-user-id=\"193430\">@Alexander Zautke</span> <span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> could Simplifier include a IG resource as well for this purpose?</p>",
        "id": 171753661,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564126394
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> including the actual IG resource into the package should be mentioned here: <a href=\"http://wiki.hl7.org/index.php?title=FHIR_NPM_Package_Spec\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=FHIR_NPM_Package_Spec\">http://wiki.hl7.org/index.php?title=FHIR_NPM_Package_Spec</a><br>\nI assume this is a SHALL requirement?</p>",
        "id": 171753747,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564126513
    },
    {
        "content": "<p>On Simplifier you can create packages independently of an IG. Some implementers want to publish the profiles separately and I think that should still be valid.</p>",
        "id": 171758740,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1564131939
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> might be able to come up with a solution on how to separate the examples into a different package or folder</p>",
        "id": 171758922,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1564132128
    },
    {
        "content": "<p>Yes. The center use case of FHIR packages is conformance resource distribution. You can publish IG's through packages, but that is basically a separate spec.</p>",
        "id": 171776696,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1564150275
    },
    {
        "content": "<p>And Yes. There are a lot of organizations who have a separate cadence for publishing conformance packages and their corresponding IG's.</p>",
        "id": 171776778,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1564150330
    },
    {
        "content": "<p>We see it as good practice to either include examples with your package or have a separate package that contains the examples.</p>",
        "id": 171777357,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1564150763
    },
    {
        "content": "<p>If there are a lot of examples, it becomes more logical to separate them, since consumers might want to distribute the profiles without their examples in their app or tool.</p>",
        "id": 171777449,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1564150821
    },
    {
        "content": "<blockquote>\n<p>We see it as good practice to either include examples with your package or have a separate package that contains the examples.</p>\n</blockquote>\n<p>Ok, how do i distinguish examples from non-examples? If the package contains a whole IG it is easy, but if i have a package without an IG.json containing examples and conformance resources i can't do it.<br>\nAn easy fix would be to use <a href=\"https://docs.npmjs.com/files/package.json#directoriesexample\" target=\"_blank\" title=\"https://docs.npmjs.com/files/package.json#directoriesexample\">https://docs.npmjs.com/files/package.json#directoriesexample</a> the directories.example propertie is part of the npm spec and could be used to point to all examples...</p>",
        "id": 171928958,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564390739
    },
    {
        "content": "<p>Or make an ig.json...</p>",
        "id": 171932985,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564395036
    },
    {
        "content": "<blockquote>\n<p>Or make an ig.json...</p>\n</blockquote>\n<p>Yes, either way would work. As <span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> pointed out, packages could be used without an IG context so they don't have an ig.json.<br>\nSo we could: \n* make the ig.json mandatory in the FHIR package spec<br>\nor\n* specify examples in the package.json and include this in the package spec</p>\n<p>Either way would work for us, but we need consensus.</p>",
        "id": 171937696,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564399946
    },
    {
        "content": "<p>Can you explain your use-case?</p>",
        "id": 171937798,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1564400073
    },
    {
        "content": "<p>Because, adding that kind of logic, can push a burden on all package consumer software.</p>",
        "id": 171937837,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1564400137
    },
    {
        "content": "<p>I want to upload/integrate packages into hapi. If i just upload a package to the Validation Module the i would upload examples as well. Which i don't want, especially not if examples are StructureDefinitions.</p>",
        "id": 171937904,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564400218
    },
    {
        "content": "<p>Fhir packing is based on (compatible?) with NPM. NPM know example dirs: <a href=\"https://docs.npmjs.com/files/package.json#directoriesexample\" target=\"_blank\" title=\"https://docs.npmjs.com/files/package.json#directoriesexample\">https://docs.npmjs.com/files/package.json#directoriesexample</a></p>",
        "id": 171938025,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564400375
    },
    {
        "content": "<p>So this could be used an be still compliant to NPM</p>",
        "id": 171938037,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564400392
    },
    {
        "content": "<p>On the other hand all the FHIR packing implementations are wrong as:</p>\n<div class=\"codehilite\"><pre><span></span>A FHIR package is a tarball (tar in gzip). The package contains\n\na subfolder named &#39;package&#39;\na package manifest (package/package.json)\nA set of conformance resource files, also in the package subfolder\nIt MAY contain additional content, like example resources or documentation:\nsuch files SHALL not be in the package subfolder\n</pre></div>",
        "id": 171938105,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564400419
    },
    {
        "content": "<p><a href=\"http://wiki.hl7.org/index.php?title=FHIR_NPM_Package_Spec#Format\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=FHIR_NPM_Package_Spec#Format\">http://wiki.hl7.org/index.php?title=FHIR_NPM_Package_Spec#Format</a></p>",
        "id": 171938142,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564400500
    },
    {
        "content": "<p>In theory, we could adopt the npm example spec.  But the thing is -- not only will all package creation software have to implement that. Which won't happen. But you also have to provide tooling for users to properly implement it. Which I don't see happening either.</p>",
        "id": 171938151,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1564400515
    },
    {
        "content": "<p>examples are currently inside the package folder - in contrast to the FHIR package spec</p>",
        "id": 171938205,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564400537
    },
    {
        "content": "<p>Good point.</p>",
        "id": 171938445,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1564400851
    },
    {
        "content": "<p>I agree. My proposal is: let's make it a convention to move example resources to a folder 'examples' next (on the same level as) the packages folder<br>\nRoot<br>\n- Package<br>\n- Examples<br>\nAnd I am ok with implementing that in Simplifier.</p>",
        "id": 171939133,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1564401686
    },
    {
        "content": "<p>I am pretty sure that not all authors are going to properly separate them, though.</p>",
        "id": 171939223,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1564401755
    },
    {
        "content": "<blockquote>\n<p>I agree. My proposal is: let's make it a convention to move example resources to a folder 'examples' next (on the same level as) the packages folder<br>\nRoot<br>\n- Package<br>\n- Examples<br>\nAnd I am ok with implementing that in Simplifier.</p>\n</blockquote>\n<p>sounds great. <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> could the IG publisher also move all examples to an extra folder?</p>",
        "id": 171940125,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564402614
    },
    {
        "content": "<p>make me a task</p>",
        "id": 171981426,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564432726
    },
    {
        "content": "<p>what happens for hl7.fhir.rX.examples?</p>",
        "id": 171981451,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564432748
    },
    {
        "content": "<p>everything in the FHIR example NPM packages would be under root/examples</p>",
        "id": 172028192,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564486051
    },
    {
        "content": "<p>so</p>",
        "id": 172298349,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564741754
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/J2Dc0quiy1xUamp2fczYcc8v/package.tgz\" target=\"_blank\" title=\"package.tgz\">package.tgz</a></p>",
        "id": 172298355,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564741768
    },
    {
        "content": "<p>this is what we are talking about, right?</p>",
        "id": 172298357,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564741776
    },
    {
        "content": "<p>yes <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> <span aria-label=\"tada\" class=\"emoji emoji-1f389\" role=\"img\" title=\"tada\">:tada:</span></p>",
        "id": 172301724,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564746352
    },
    {
        "content": "<p>do you still need a task?</p>",
        "id": 172301771,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564746365
    },
    {
        "content": "<p>... probably not</p>",
        "id": 172304133,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564749059
    },
    {
        "content": "<p>actually, yes. FHIR-I have to sign off on it</p>",
        "id": 172304145,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564749070
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23043\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23043\">GF#23043</a>]</p>",
        "id": 172307244,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1564751788
    },
    {
        "content": "<p>Grahame, as promised, the last bit of feedback on the current Fhir Package spec before finalizing:</p>\n<p>- Section: Package Name:  <br>\n    -- the text \"package name consists of one or more namespaces\" - shall we make it at least two? <br>\n    -- Add: \"If you have packages for multiple FHIR versions, it's a best practice to add that in the package name in the form of: Rx, where x is the release version. Example: hl7.fhir.r3.core\"</p>\n<p>- Section: Versions<br>\n    -- The link to SemVer (and several other links) is formatted incorrectly <br>\n    -- Let's be more specific that we use semver 2 (that includes the non string based comparing)<br>\n    Since we want to adhere to NPM, we should change that SHOULD to MUST follow SemVer2, since no package server can support it otherwise.<br>\n     and the update and install logic of clients depend on it.</p>\n<p>- Section: Version selection strategy<br>\n    - This paragraph still contains a lot of broken sentences.</p>\n<p>- Section: Format<br>\n    - Add: \"Example resources SHOULD be placed in an /examples folder. Tools working with examples, SHALL understand this.\"</p>\n<p>- Section: Package manifest    <br>\n    - canonical - is this the canonical base?</p>\n<p>- Section: Dependencies<br>\n    -Change text to: \"A fhir package SHALL have a dependency to at least one FHIR core package (hl7.fhir.r3.core, hl7.fhir.r4.core)\"<br>\n    we probably want some future flexibility here. So maybe replace SHALL with SHOULD.</p>\n<p>Finally: we have implemented search in Simplifier, but differently than NPM, because it was not very helpful for FHIR.<br>\nShall we add/discuss this later?<br>\nWe currently implemented:<br>\n~/catalog<br>\nWith the following optional parameters<br>\n?name=(packageid)<br>\n?canonical=<br>\n?fhirversion=2|3|4<br>\n?prerelease= true|false</p>",
        "id": 176940738,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1569855926
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 176940770,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1569855945
    },
    {
        "content": "<p>Late to the discussion (sorry)... I don't have much to add, except I noticed:<br>\nThe package manifest example has this:</p>\n<blockquote>\n<p>\"web\" : \"<a href=\"http://hl7.org/fhir/us/acme/Draft1\" target=\"_blank\" title=\"http://hl7.org/fhir/us/acme/Draft1\">http://hl7.org/fhir/us/acme/Draft1</a>\",</p>\n</blockquote>\n<p>but the doc doesn't list <code>web</code>, it lists <code>url</code>:</p>\n<blockquote>\n<p>url - optional = where information about the package can be found on the web</p>\n</blockquote>\n<p>and also further down it says:</p>\n<blockquote>\n<p>url = ImplementationGuide.manifest.rendering - required for IGs</p>\n</blockquote>\n<p>The actual NPM package.json spec, however, defines a <a href=\"https://docs.npmjs.com/files/package.json#homepage\" target=\"_blank\" title=\"https://docs.npmjs.com/files/package.json#homepage\">homepage</a> property:</p>\n<blockquote>\n<p>The url to the project homepage.<br>\nExample:<br>\n\"homepage\": \"<a href=\"https://github.com/owner/project#readme\" target=\"_blank\" title=\"https://github.com/owner/project#readme\">https://github.com/owner/project#readme</a>\"</p>\n</blockquote>\n<p>Is there a reason that FHIR package.json does not use the already established <code>homepage</code> property?</p>",
        "id": 176945388,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1569858639
    },
    {
        "content": "<p>The NPM doc also provides a way for the package.json to indicate where certain things (like docs, examples, etc) exist.  It's fine for FHIR to require things like examples be in a specific location, but I wonder if we should also follow NPM guidance and list that in the <a href=\"https://docs.npmjs.com/files/package.json#directories\" target=\"_blank\" title=\"https://docs.npmjs.com/files/package.json#directories\">directories</a> portion of package.json?</p>",
        "id": 176945699,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1569858837
    },
    {
        "content": "<p>There are of course a lot of things where we implicitly follow the NPM spec. You can use any field that NPM describes. The question is does it specificying it explicitly make the experience in FHIR better. </p>\n<p>Maybe we can follow the regular FHIR way here and see if anyone wants to actually implement it.</p>",
        "id": 177141931,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1570016775
    },
    {
        "content": "<p>Do you think we are explicit enough in the document that we try to to adhere to the NPM spec?</p>",
        "id": 177141986,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1570016863
    },
    {
        "content": "<p>(in as much as NPM is a spec)</p>",
        "id": 177141999,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1570016876
    },
    {
        "content": "<p>We could use the directories node for the \"examples\" folder, in case you put the examples outside of the package folder.</p>",
        "id": 177142075,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1570016923
    },
    {
        "content": "<blockquote>\n<p>Do you think we are explicit enough in the document that we try to to adhere to the NPM spec?</p>\n</blockquote>\n<p>I think I was mainly thrown off by the invention of <code>web</code>/<code>url</code> properties and the ignoring of the existing <code>homepage</code> property.  If that's intentional because you want to allow <code>homepage</code> to point to some other location (for whatever reason), then maybe we should document that to avoid confusion.  If it's not intentional though, it seems to me like if \"we try to adhere to the NPM spec\" then there's no good reason not to use <code>homepage</code> instead of <code>web</code> or <code>url</code>.</p>",
        "id": 177145905,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1570020525
    },
    {
        "content": "<p>homepage isn't the same as what we are doing, or I would have used it</p>",
        "id": 177145943,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1570020554
    },
    {
        "content": "<p>OK.  I think of what you're calling <code>url</code>/<code>web</code> as the home page of the IG -- but maybe that's just me.  Is the intent that home page would be a page <em>about</em> the IG, rather than the IG itself?  If so, that makes sense, but I still think we should document it so that people like me don't wonder why FHIR had to invent a new <code>url</code> or <code>web</code> property when there's already a perfectly good <code>homepage</code> property.</p>",
        "id": 177146438,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1570020899
    },
    {
        "content": "<p>The definition is:</p>\n<blockquote>\n<p>The url to the project homepage</p>\n</blockquote>\n<p>The IG is not the <em>project</em> home page, it's a human readable representation of the <em>package version</em></p>",
        "id": 177182984,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1570043975
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> </p>\n<blockquote>\n<p>Add: \"If you have packages for multiple FHIR versions</p>\n</blockquote>\n<p>Added, but watered down, given there was already slightly different advice in the page</p>\n<blockquote>\n<p>Version selection strategy</p>\n</blockquote>\n<p>Apparently I added that, but I don't remember doing so. I cleaned it up</p>\n<p>Anything I didn't comment on I accepted and changed</p>",
        "id": 177185732,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1570045946
    },
    {
        "content": "<p>I did clarify the documentation on url vs web vs package - it's url</p>",
        "id": 177186345,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1570046332
    },
    {
        "content": "<p>I think it looks good Grahame. <br>\nWe probably want to merge the two sections about having the Rx version in the package id at some point..</p>",
        "id": 177502687,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1570439893
    },
    {
        "content": "<p>just downloaded a Simplifier package. package.json is not contained in the root dir as i would have expected/it is done at <a href=\"http://npmjs.com\" target=\"_blank\" title=\"http://npmjs.com\">npmjs.com</a>.  It is placed into the package folder.<br>\nCould this be alligned between <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> and <span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> ? I would be in favor of doing it like the npm guys do: put it in the package root</p>",
        "id": 186127139,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1579548118
    },
    {
        "content": "<p>the specification is here:</p>",
        "id": 186129531,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1579550524
    },
    {
        "content": "<p><a href=\"https://confluence.hl7.org/display/FHIR/NPM+Package+Specification\" target=\"_blank\" title=\"https://confluence.hl7.org/display/FHIR/NPM+Package+Specification\">https://confluence.hl7.org/display/FHIR/NPM+Package+Specification</a></p>",
        "id": 186129534,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1579550524
    },
    {
        "content": "<p>as far as I know, we are fully aligned on this point</p>",
        "id": 186129542,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1579550537
    },
    {
        "content": "<p>from day #1 that document as said that package.json goes in /package.</p>",
        "id": 186129576,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1579550575
    },
    {
        "content": "<p>i'm fine with putting it into /package or ROOT as long its aligned.</p>",
        "id": 186133302,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1579554526
    },
    {
        "content": "<p>Which it is, i just realised. Didn't see the surrounding package folder of the IG produced package at first.<br>\nSorry, my bad.</p>",
        "id": 186133331,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1579554571
    }
]