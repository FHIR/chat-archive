[
    {
        "content": "<p>The resource resolution scheme described at <a href=\"http://build.fhir.org/references.html#literal\">http://build.fhir.org/references.html#literal</a>, indicates that Reference.reference can contain a canonical, and that canonicals are part of the reference resolution scheme. Is this intended, or is it an accidental leftover from before we cleaved off canonical from Reference?</p>",
        "id": 262007728,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1637278458
    },
    {
        "content": "<p>Hmmm. I don't know the intention, but canonical URLs are valid absolute URIs which makes them valid <code>Reference.reference</code>s. Should there be an explicit statement that it's okay to resolve them from a cache of canonical content rather than dereferencing them over http? I kinda think it's a fair approach whether or not we specify it.</p>",
        "id": 262010665,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1637280494
    },
    {
        "content": "<p>I think we do say you can get them from a cache: \"The URL may contain a reference to a canonical URL (see below) and applications can use the canonical URL resolution methods they support...\"</p>",
        "id": 262010981,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1637280758
    },
    {
        "content": "<p>I'm just surprised to see us allow canonical resolution in Reference when we have a whole other data type specifically for canonicals.</p>",
        "id": 262011086,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1637280849
    },
    {
        "content": "<p>The <em>other data type</em> is great for reference that _need to be canonical_. I'm not sure that's an argument against allowing references that <em>might or might not be canonical</em> to be canonical.</p>",
        "id": 262020830,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1637289856
    },
    {
        "content": "<p>OK. It isn't that big an issue to me, I just saw it and thought it might have accidentally slipped through in. And I realize at this point even if we wanted to remove that ability, it would probably be pretty hard to do. (I've got other breaking changes I'd rather fight.)</p>",
        "id": 262021596,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1637290899
    },
    {
        "content": "<blockquote>\n<p>it might have accidentally slipped through</p>\n</blockquote>\n<p>I agree <span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span> -- I have no idea whether this is intentional. Bet <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> will tell us when he has a chance. I'm just saying I happen to like it (but can understand why others might not).</p>",
        "id": 262023998,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1637293920
    },
    {
        "content": "<p>I'm pretty sure I never wrote that text.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>?</p>",
        "id": 262024594,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637294598
    },
    {
        "content": "<p>OK, so <a href=\"https://github.com/HL7/fhir/commit/13e9c9f10ce30f7a0c47c07652f32ece4bfd46b8\">https://github.com/HL7/fhir/commit/13e9c9f10ce30f7a0c47c07652f32ece4bfd46b8</a> --  based on <a href=\"http://jira.hl7.org/browse/FHIR-16865\">FHIR-16865</a>. Definitely intentional, explicit, and came after the canonical datatype was introduced.</p>",
        "id": 262024880,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1637294913
    },
    {
        "content": "<p>(I used <a href=\"https://github.com/HL7/fhir/blame/master/source/references.html\">git blame on references.html</a>)</p>",
        "id": 262024899,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1637294948
    },
    {
        "content": "<p>yes I thought I wrote it. The question that lead to that was 'can Any contain a reference to a canonical resource?\" and the answer must be yes</p>",
        "id": 262025087,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637295233
    },
    {
        "content": "<p>But you can only specify the canonical resource in the reference if it's an actual valid reference, not if it's a canonical that doesn't resolve to a FHIR server, correct?</p>",
        "id": 262025317,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637295498
    },
    {
        "content": "<p><em>should</em> only. Not sure about \"can\".</p>",
        "id": 262025841,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1637296169
    },
    {
        "content": "<p>It makes a huge difference to code.  I mean, sure, you can include a URL that won't resolve and fail to resolve it.  If if you can have a reference to a canonical and you're expect to do a canonical-like search to find it rather than just hitting the URL and bringing back whatever's there, that's a pretty significant imposition on Reference.</p>",
        "id": 262026119,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637296493
    },
    {
        "content": "<p>Sure, but the same argument can be applied for almost any content that is sitting at a URL and resolvable only if you have the right security in place, where that could be plenty of interesting and arbitrary security approaches that have their own flavors of authentication and authorization,  all of which also requires writing specific code.  We certainly don't prohibit that.</p>",
        "id": 262069700,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1637330614
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179166-implementers/topic/Canonicals.20within.20references/near/262025087\">said</a>:</p>\n<blockquote>\n<p>The question that lead to that was 'can Any contain a reference to a canonical resource?\" and the answer must be yes</p>\n</blockquote>\n<p>Absolutely, a reference can contain a reference to a ValueSet, CodeSystem, StructureDefinition or any other canonical resource. That reference can also use the canonical URL for that resource, if the canonical URL resolves to a resource using the FHIR resource resolution rules. So yes, Any can contain a reference to a canonical resource, but that doesn't mean it needs to be a canonical reference. What is the use case for supporting this?</p>\n<p>I agree with <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> . Adding this complexity to reference seems like a significant imposition.</p>",
        "id": 262099818,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1637343089
    },
    {
        "content": "<p>If you have a Reference, the expectation (as I understood it) was that the sole way to resolve it is executing a GET on that URL to retrieve the content.  There was never <em>any</em> expectation that you might search through all of the registries you knew for a resource where url=[Reference.reference.value].  I'm fine with references that don't resolve in some circumatances.  I'm not fine with adding an additional mechanism to go find them or references that aren't required to follow FHIR's rules for RESTful URLs.</p>",
        "id": 262108639,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637346710
    },
    {
        "content": "<p>We're not adding anything; we're discussing something that we added (or explicitly documented as allowed) in 2018.</p>",
        "id": 262109037,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1637346887
    },
    {
        "content": "<p>Yeah, that tracker item is pretty clear.  I just don't think the vast majority of the world knows and understands that's an expectation.</p>",
        "id": 262111201,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637347737
    },
    {
        "content": "<p>Is there a \"master list\" of HL7-defined canonicals?</p>",
        "id": 262113360,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1637348521
    },
    {
        "content": "<p>well, in the base spec, yes: <a href=\"https://hl7.org/fhir/ns.html\">https://hl7.org/fhir/ns.html</a></p>",
        "id": 262234467,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637492003
    },
    {
        "content": "<p>there's no master list that covers all the IGs too</p>",
        "id": 262234474,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637492020
    },
    {
        "content": "<p>I think it's true to say that we have no language that prevents a system from doing canonical-type resolution on a reference, but we we have no language that suggests that systems should do that, or should be capable of it</p>",
        "id": 262234531,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637492070
    },
    {
        "content": "<p>\"applications can use the canonical URL resolution methods they support\" is a lot more than \"no language that prevents\". It's an explicit affirmation of this practice.</p>",
        "id": 262243600,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1637505625
    },
    {
        "content": "<p>that was Lloyd's wording not what the spec says</p>",
        "id": 262291493,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637570402
    }
]