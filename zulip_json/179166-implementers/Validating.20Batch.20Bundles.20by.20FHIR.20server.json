[
    {
        "content": "<p>Hi,</p>\n<p>I have a question regarding batch bundle execution on a FHIR server. I would appreciate some clarification on this: <br>\n(This is the part of spec I am referring to <a href=\"https://www.hl7.org/fhir/http.html#transaction\" target=\"_blank\" title=\"https://www.hl7.org/fhir/http.html#transaction\">https://www.hl7.org/fhir/http.html#transaction</a> &amp; <a href=\"https://www.hl7.org/fhir/bundle.html#bundle-unique\" target=\"_blank\" title=\"https://www.hl7.org/fhir/bundle.html#bundle-unique\">https://www.hl7.org/fhir/bundle.html#bundle-unique</a>)  </p>\n<p>Can a batch bundle contain multiple request of the same type for the same resource, e.g. multiple updates for the same resource? and if the answer is no, then should the server:<br>\n - return an invalid bundle error<br>\n- or just execute the entries in the correct order and expect the user knows what they are doing</p>\n<p>thanks</p>",
        "id": 153974947,
        "sender_full_name": "Zohreh Jabbari",
        "timestamp": 1531408748
    },
    {
        "content": "<p>From <a href=\"http://build.fhir.org/http.html#3.1.0.18.1\" target=\"_blank\" title=\"http://build.fhir.org/http.html#3.1.0.18.1\">http://build.fhir.org/http.html#3.1.0.18.1</a>: <code>there SHALL be no interdependencies between the different entries in the Bundle that cause change on the server. The success or failure of one change SHOULD not alter the success or failure or resulting content of another change. Servers SHOULD validate that this is the case</code><br>\nMultiple updates on the same resource would violate the SHALL and the first SHOULD.  However, the second SHOULD says you don't have to check.  If you do check, you ought to reject the entire batch, but some systems won't bother doing the pre-processing to check and thus some changes will already have been applied.  Some systems might quit processing the batch as soon as they find a problematic request.  Others might reject the problematic request and keep processing the rest of the entries.</p>",
        "id": 153974949,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531409375
    },
    {
        "content": "<p>The example for inter-dependencies in the spec was when an update refers to a resource yet to be created; that makes sense since that could cause a failure. where as multiple updates on the same resource doesn't cause a failure and only create a different outcome. Which is why I wasn't sure if this was considered a dependency</p>",
        "id": 153974951,
        "sender_full_name": "Zohreh Jabbari",
        "timestamp": 1531409828
    },
    {
        "content": "<p>Multiple updates on the same object create an ordering dependency - and the text indicates that order should not matter due to the no dependency rule.</p>",
        "id": 153974955,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531410434
    },
    {
        "content": "<p>A server could choose to just apply the updates as it encounters them, but it would be allowed to yell.  I presume the multiple updates in the batch were because you wanted to create mirrored history entries?</p>",
        "id": 153974956,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531410496
    },
    {
        "content": "<p>makes sense. thanks for clarifying.</p>\n<p>I don't have a specific case for multiple updates on a single record, but I assume that might be a common scenario if user creates a batch from different data sources or when running a migration on the data.</p>",
        "id": 153974971,
        "sender_full_name": "Zohreh Jabbari",
        "timestamp": 1531415372
    },
    {
        "content": "<p>Grabbing the latest update should generally be sufficient.  The only thing that wouldn't give you is a history that mirrors the history on another system</p>",
        "id": 153974973,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531415739
    }
]