[
    {
        "content": "<p>Is that possible or do we need a special symbol to indicate that when 0..* or 1..* cardinality is constrained to 0..1/1..1 the array representation in JSON still should be preserved?</p>",
        "id": 154000090,
        "sender_full_name": "Shamil Nizamov",
        "timestamp": 1537987869
    },
    {
        "content": "<p>My understanding is that if it's an array (i.e., max is <code>'*'</code>) in the base resource, then it's <em>always</em> represented as an array in instances, even if the instance conforms to a profile that narrows it to max <code>1</code>.  Although not explicitly stated for this exact use case, I think the general spirit is reflected in <a href=\"http://hl7.org/fhir/STU3/json.html#repeat\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/json.html#repeat\">2.6.2.2</a>:</p>\n<blockquote>\n<p>An item that may repeat is represented as an array even in the case that it doesn't repeat so that the process of parsing the resource is the same either way</p>\n</blockquote>",
        "id": 154000099,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1537993280
    },
    {
        "content": "<p>Correct.  If it's an array in the base spec, it's always an array, even if the maximum repetitions is constrained to 1</p>",
        "id": 154000101,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1537994583
    },
    {
        "content": "<p>FYI this aspect is explicitly captured by ElementDefinition.base.max:<br>\n<a href=\"http://hl7.org/fhir/elementdefinition-definitions.html#ElementDefinition.base.max\" target=\"_blank\" title=\"http://hl7.org/fhir/elementdefinition-definitions.html#ElementDefinition.base.max\">http://hl7.org/fhir/elementdefinition-definitions.html#ElementDefinition.base.max</a></p>",
        "id": 154000116,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1537998705
    },
    {
        "content": "<p>Great, thank you all.</p>",
        "id": 154000290,
        "sender_full_name": "Shamil Nizamov",
        "timestamp": 1538060741
    }
]