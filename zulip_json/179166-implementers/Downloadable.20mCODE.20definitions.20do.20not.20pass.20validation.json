[
    {
        "content": "<p>I recently downloaded the mCODE JSON definitions from here:<br>\n<a href=\"http://hl7.org/fhir/us/mcode/STU1/definitions.json.zip\" target=\"_blank\" title=\"http://hl7.org/fhir/us/mcode/STU1/definitions.json.zip\">http://hl7.org/fhir/us/mcode/STU1/definitions.json.zip</a></p>\n<p>And what I found is that much of the generated XHTML content in Narrative text contain template URLs that looks like this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\\&quot;{{[type]}}-{{[id]}}-definitions.html#Observation\\&quot;</span><span class=\"p\">&gt;</span>Observation<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n</pre></div>\n\n\n<p>This causes validation errors:</p>\n<div class=\"codehilite\"><pre><span></span>Unable to add: StructureDefinition-mcode-karnofsky-performance-status.json to the index due to exception: Invalid XHTML content: cvc-datatype-valid.1.2.1: &#39;{{[type]}}-{{[id]}}-definitions.html#Observation&#39; is not a valid value for &#39;anyURI&#39;. [StructureDefinition.text]\n</pre></div>\n\n\n<p>The JSON definitions that are inline on the spec website don't appear to have the same issue. I'm guessing that there is a find/replace step that didn't happen in generating the JSON definition package.</p>\n<p>I also tried downloading the full IG site and the definitions.json.zip file contained within that also has the issue.</p>\n<p>Is this a tooling problem?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">URI</span> <span class=\"n\">uri</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">URI</span><span class=\"p\">(</span><span class=\"s\">&quot;{{[type]}}-{{[id]}}-definitions.html#Observation&quot;</span><span class=\"p\">);</span>\n</pre></div>\n\n\n<p>yields the following exception:</p>\n<div class=\"codehilite\"><pre><span></span>java.net.URISyntaxException: Illegal character in path at index 0: {{[type]}}-{{[id]}}-definitions.html#Observation\n</pre></div>\n\n\n<p>It doesn't like the curly braces or the square braces. Escaping them using the proper character entity references seems to alleviate the problem but I think the fix is that these values should be replaced with the actual type and id values that were intended.</p>\n<p>The downloadable XML definitions suffer from the same problem.</p>",
        "id": 191135144,
        "sender_full_name": "John Timm",
        "timestamp": 1584633921
    },
    {
        "content": "<p>this is not exactly a tooling problem. But I'm not sure what to do about it</p>",
        "id": 191149153,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584639565
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192302\">@May Terry</span>  <span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span></p>",
        "id": 191149927,
        "sender_full_name": "Halina Labikova",
        "timestamp": 1584639891
    },
    {
        "content": "<p>I also found an issue with an Id value in the ImplementationGuide resource itself</p>\n<div class=\"codehilite\"><pre><span></span>Unable to add: ImplementationGuide-hl7.fhir.us.mcode.json to the index due to exception: Id value: &#39;_str_abstractprofile&#39; contain invalid character &#39;_&#39; [ImplementationGuide.definition.resource[0]]\n</pre></div>",
        "id": 191153354,
        "sender_full_name": "John Timm",
        "timestamp": 1584641282
    },
    {
        "content": "<p>I have created the following ticket to track this issue:<br>\n<a href=\"https://jira.hl7.org/projects/FHIR/issues/FHIR-26611\" target=\"_blank\" title=\"https://jira.hl7.org/projects/FHIR/issues/FHIR-26611\">https://jira.hl7.org/projects/FHIR/issues/FHIR-26611</a></p>",
        "id": 191154734,
        "sender_full_name": "John Timm",
        "timestamp": 1584641926
    },
    {
        "content": "<p>I just spent some time looking at this - this is not a feature of the current mcode ig, and I con't figure out how it was produced</p>",
        "id": 191521064,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584990123
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  Is there anything we (mCODE) should be doing to address this problem?</p>",
        "id": 191604190,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1585054325
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> at some point during the IG authoring/publication process it seems like there is a find/replace that needs to happen. For our purposes, we ended up post-processing the JSON definitions by replacing instances of the pattern <code>{{[type]}}-{{[id]}}</code> in the XHTML content with the actual type name and id (e.g. <code>StructureDefinition-mcode-cancer-condition-patient</code>) for each artifact. That's our current \"workaround\".</p>",
        "id": 191614286,
        "sender_full_name": "John Timm",
        "timestamp": 1585058962
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span> it doesn't happen in the current version, so no, you don't need to do anything. I'm not sure whether the problem in the past published version is something I need to do anything about. the {{[type]}}-{{[id]}} syntax is something that is processed in templates but I don't think there's any reason for it to be in resources. James, <span class=\"user-mention\" data-user-id=\"248736\">@Mark Iantorno</span> and I spent 20 minutes looking at this and couldn't figure out whether there's a valid reason for this to appear, but I will beef up URL validation</p>",
        "id": 191658643,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585076908
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> -- would it be worth re-publishing the mCODE package so that people like <span class=\"user-mention\" data-user-id=\"192334\">@John Timm</span> don't have to implement a workaround like he described above?</p>",
        "id": 191661315,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1585078308
    },
    {
        "content": "<p>maybe. I'm not sure how to evaluate the 'worth' there - John's already worked around it...</p>",
        "id": 191667206,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585081502
    },
    {
        "content": "<p>what I do know is: I don't have time right now :-(</p>",
        "id": 191667224,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585081511
    },
    {
        "content": "<p>FYI <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span>  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> unfortunately, the examples share the same fate as the definitions.</p>",
        "id": 195972123,
        "sender_full_name": "John Timm",
        "timestamp": 1588346817
    },
    {
        "content": "<p>I have fixed additional bugs here, so I could issue a technical correction. but I can only do so if the committee requests it and gets internal approval</p>",
        "id": 196010187,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1588367231
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span> -- see above.  You may want to start a process to get a technical correction to fix these issues in mCODE.</p>",
        "id": 196201943,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1588608226
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Which committee?</p>",
        "id": 196222752,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1588617801
    },
    {
        "content": "<p>mCode itself says CIC owns it, so it would be CIC. Of course, the issue here is a purely publishing one, so they may not really understand. That can be a challenge with the domain committees.</p>",
        "id": 196228151,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1588620272
    },
    {
        "content": "<p>but I don't believe with a process to side-step the owning committee even for purely technical issues.</p>",
        "id": 196228196,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1588620298
    }
]