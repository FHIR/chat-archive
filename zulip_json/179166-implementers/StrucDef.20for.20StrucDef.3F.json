[
    {
        "content": "<p>It seems the Java based validator requires snapshots (usually I never look at such 'tooling' details, but now I have to, wishing to support a validation training exercise on multiple servers). Are servers expected to publish a profile for StuctureDefinition, so one is aware of what variation it's using?</p>",
        "id": 203505030,
        "sender_full_name": "Ren√© Spronk",
        "timestamp": 1594387087
    },
    {
        "content": "<p>To validate you either have to have the snapshot or access to all of the downstream resources needed to generate one.</p>",
        "id": 203518615,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1594393920
    },
    {
        "content": "<p>the validator generates it's own snapshots if they aren't provided</p>",
        "id": 203553998,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1594412556
    },
    {
        "content": "<p>If they aren't provided <em>and</em> the base models are available, presumably?  (Couldn't generate them without)</p>",
        "id": 203558980,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1594415973
    },
    {
        "content": "<p>sure</p>",
        "id": 203559005,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1594415991
    },
    {
        "content": "<p>Hello All, <br>\nI have started exploring FHIR Recently and trying to explore more on StructureDefinition. I have created an API for FHIR and trying to create new Structure Definition for any of the resource. Could you please help me in this?</p>",
        "id": 204553248,
        "sender_full_name": "Haritha",
        "timestamp": 1595341281
    },
    {
        "content": "<p>Hi Team, I also have similar question on Structure definition. In addition to question from <span class=\"user-mention\" data-user-id=\"323816\">@Haritha</span> , I would like to know the business use case of implementing structure definition, does the structure definition should vary from client to client based on level of permission that I decide to provide?</p>",
        "id": 204643939,
        "sender_full_name": "PKumar",
        "timestamp": 1595408615
    },
    {
        "content": "<p>It <em>could</em>.  If you have a profile referenced by a CapabilityStatement and the CapabilityStatement is specific to a user, it's possible for the profile to be user-specific too.  For example, if a user has access to vital signs but not lab data, the Observation referenced by the user-specific CapabilityStatement could be constrained to only vital signs.  That said, I'm not aware of any systems that are actually doing this.</p>",
        "id": 204673336,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1595428293
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> </p>\n<p>In your example, how does the actual work flow should look like? I am assuming that, when a client sends out API request to access vital signs, Should the request pass through the capability statement resource and validate if this request can be allowed to fetch vital signs or not? and if yes, the request now should hit the corresponding API to get vital signs??</p>",
        "id": 204693646,
        "sender_full_name": "PKumar",
        "timestamp": 1595437416
    },
    {
        "content": "<p>I am fundamentally confused from the implementation standpoint...in fact, I have this doubt with respect to struc def, capability statement and consent. Are these resources are meerly to educate the end users or allow thirdparty to know the system capabilities or does these play active role in the workflow of fetching a resource data securely as per set rules?</p>",
        "id": 204693952,
        "sender_full_name": "PKumar",
        "timestamp": 1595437558
    },
    {
        "content": "<p>Client systems would typically query the 'metadata' endpoint of the server to determine what its capabilities are before interacting with it to do other things.  However, they aren't <em>required</em> to do that.  And how often they do that is up to them.  The CapabilityStatement exposed at metadata allows clients to configure themselves appropriately to interact with the server, but the server is still responsible for rejecting non-valid requests.  (And typically, the CapabilityStatement won't be able to express all the rules, so some permissions will only be known by trying something and having it fail.)</p>",
        "id": 204698213,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1595439629
    },
    {
        "content": "<p>Thanks very much <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> </p>\n<p>So, this confirms to me that metadata endpoints are for educating the client on what they can do with my FHIR server and accordingly design their interactions.</p>",
        "id": 204795554,
        "sender_full_name": "PKumar",
        "timestamp": 1595510342
    },
    {
        "content": "<p>In your context, yes.  You can also have CapabilityStatements that define what systems <em>should</em> do (as part of an implementation guide or an RFP) or as a declaration of what a particular shrink-wrapped piece of software is capable of (independent of where it's installed)</p>",
        "id": 204805837,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1595515126
    },
    {
        "content": "<p>Ok <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> , Thank You!</p>",
        "id": 204809294,
        "sender_full_name": "PKumar",
        "timestamp": 1595516633
    }
]