[
    {
        "content": "<p>In HL7 version 3 datatypes  1 and 2 there was a requirement to send upper-case UUIDs. In FHIR this requirement has shifted to lower-case UUIDs. The UUID 'standard' marks UUIDs as case insensitive.</p>\n<p>The HL7 V3 and FHIR requirements to do case conversion both represent a problem. The requirement for a UUID should have been that once it is created, it shall be an immutable string and shall not be converted to upper or lower in any way.</p>\n<p>I'm writing this from real world experience where all communication with our national \"CDC\" like institute is broken based on the case conversion requirements of UUIDs.</p>\n<p>What were the reasons behind specifying V3 and FHIR this way? <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  / <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> / <span class=\"user-mention\" data-user-id=\"192440\">@Marc de Graauw</span></p>",
        "id": 153929587,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1516358410
    },
    {
        "content": "<p>it's a running problem in v3 too. But we inherited lowercase from RFC 4122 (<a href=\"https://tools.ietf.org/html/rfc4122\" target=\"_blank\" title=\"https://tools.ietf.org/html/rfc4122\">https://tools.ietf.org/html/rfc4122</a>), which says: The hexadecimal values \"a\" through \"f\" are output as<br>\n      lower case characters and are case insensitive on input</p>",
        "id": 153929590,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516358694
    },
    {
        "content": "<p>Just below there it also says:</p>\n<p>The formal definition of the UUID string representation is<br>\n      provided by the following ABNF [7]:</p>\n<div class=\"codehilite\"><pre><span></span>  UUID                   = time-low &quot;-&quot; time-mid &quot;-&quot;\n                           time-high-and-version &quot;-&quot;\n                           clock-seq-and-reserved\n                           clock-seq-low &quot;-&quot; node\n  time-low               = 4hexOctet\n  time-mid               = 2hexOctet\n  time-high-and-version  = 2hexOctet\n  clock-seq-and-reserved = hexOctet\n  clock-seq-low          = hexOctet\n  node                   = 6hexOctet\n  hexOctet               = hexDigit hexDigit\n  hexDigit =\n        &quot;0&quot; / &quot;1&quot; / &quot;2&quot; / &quot;3&quot; / &quot;4&quot; / &quot;5&quot; / &quot;6&quot; / &quot;7&quot; / &quot;8&quot; / &quot;9&quot; /\n        &quot;a&quot; / &quot;b&quot; / &quot;c&quot; / &quot;d&quot; / &quot;e&quot; / &quot;f&quot; /\n        &quot;A&quot; / &quot;B&quot; / &quot;C&quot; / &quot;D&quot; / &quot;E&quot; / &quot;F&quot;\n</pre></div>",
        "id": 153929591,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1516358875
    },
    {
        "content": "<p>That appears to include upper case A-F too right?</p>",
        "id": 153929592,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1516358903
    },
    {
        "content": "<p>it does. I don't know why since it clearly says to use lower case chars</p>",
        "id": 153929593,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516358983
    },
    {
        "content": "<p>I would propose, <em>not</em> to impose any case conversion in FHIR (or V3, but that ship has sailed). If real world databases generate A-F and a-f, then we break those and that just seems wrong</p>",
        "id": 153929594,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1516359138
    },
    {
        "content": "<p>I think the ship has sailed in fhir too. but what does \"case insensitive on input\" mean?</p>",
        "id": 153929595,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516359200
    },
    {
        "content": "<p>are there real world databases that generate invalid urns?</p>",
        "id": 153929596,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516359233
    },
    {
        "content": "<p>No idea. I only use the result of the input, i.e. the UUID. The input (in think) is all things you consider in generating the UUID?</p>",
        "id": 153929597,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1516359249
    },
    {
        "content": "<p>also: \"he requirement for a UUID should have been that once it is created, it shall be an immutable string and shall not be converted to upper or lower in any way.\" - where do you get that from? The rules are more complex than that - in a given URI, some parts may or may not be case sensitive</p>",
        "id": 153929598,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516359288
    },
    {
        "content": "<p>There are real world databases that generate UUIDs. If you convert them to lower-case/upper-case, there is no way to get back to the original UUID</p>",
        "id": 153929599,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1516359293
    },
    {
        "content": "<p>If you cannot get back to the original UUID, you get mismatches, or really ineffcient matching</p>",
        "id": 153929600,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1516359347
    },
    {
        "content": "<p>I think the point is, they are case insensitive, and should be treated accordingly; that's how I understand the rfc: write lower case, accept either case</p>",
        "id": 153929601,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516359348
    },
    {
        "content": "<p>That sounds to me as if the urn is de facto case insensitive too and that there is no need for FHIR to require lower-case</p>",
        "id": 153929602,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1516359404
    },
    {
        "content": "<p>I don't follow that.</p>",
        "id": 153929603,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516359428
    },
    {
        "content": "<p>Oracle/Java supports both cases <a href=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\" target=\"_blank\" title=\"https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html\">https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html</a> (see method toString)</p>",
        "id": 153929604,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1516359700
    },
    {
        "content": "<p>I'm just saying that FHIR should not impose the lower-case (or upper-case). I do not read that requirement in the RFC either. Any UUID can have both upper and lower case letters and that does not change when you communicate it in a urn.</p>",
        "id": 153929605,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1516359857
    },
    {
        "content": "<p>Breaking my argument somewhat I also found this link: <a href=\"https://stackoverflow.com/questions/34585957/postgresql-9-3-how-to-insert-upper-case-uuid-into-table#34586013\" target=\"_blank\" title=\"https://stackoverflow.com/questions/34585957/postgresql-9-3-how-to-insert-upper-case-uuid-into-table#34586013\">https://stackoverflow.com/questions/34585957/postgresql-9-3-how-to-insert-upper-case-uuid-into-table#34586013</a></p>",
        "id": 153929606,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1516360064
    },
    {
        "content": "<p>forced convert to urn:oid..    joking...</p>",
        "id": 153929610,
        "sender_full_name": "John Moehrke",
        "timestamp": 1516367538
    },
    {
        "content": "<p>Given that everyone must process a UUID in case insensitive ways... therefore there is no advantage or need to force a conversion of case... and that forcing, as Alex points out well, is problematic.  I would be against a requirement to force the case.</p>",
        "id": 153929611,
        "sender_full_name": "John Moehrke",
        "timestamp": 1516367722
    },
    {
        "content": "<p>\"A universally unique identifier (UUID) is a 128-bit number (...)\"</p>\n<p>So, I think equality of UUIDs is based on their 128-bit value, and differences in the (canonical) serialization format are immaterial.  This also means you are not \"changing\" the UUID in any way when you change lower to upper case.  And we could still tell everyone that in FHIR, we want you to send it in lowercase.</p>",
        "id": 153929612,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1516367959
    },
    {
        "content": "<p>I agree on the equality (hence why urn:oid conversion is also acceptable)... However by forcing a case change, you are forcing unnecessary work; and in some cases creating a failure-mode.   What is the advantage in FHIR for forcing lowercase?</p>",
        "id": 153929615,
        "sender_full_name": "John Moehrke",
        "timestamp": 1516369482
    },
    {
        "content": "<p>my read of rfc 4122 is that is requires lower case: \"The hexadecimal values \"a\" through \"f\" are output as lower case characters\". That's why we specifiy lower case. It's true that the grammar allows uppercase, but the text doesn't.</p>",
        "id": 153929763,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516425664
    }
]