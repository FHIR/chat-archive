[
    {
        "content": "<p>Something I briefly raised in Atlanta: in our system (that is an IHE basically) it impossible to generate provenances as currently  specified in the implementation guide - we do not have that level of detailed information available, for example no distinct author and organization</p>",
        "id": 176569046,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1569421188
    },
    {
        "content": "<p>Do you record who provided you the data? At minimum the spec is pushing to collect and pass along who sent them data.</p>",
        "id": 176574328,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1569424332
    },
    {
        "content": "<p>Use case 4 is likely to be reworked, we plan to discuss on Structured documents tomorrow.</p>",
        "id": 176574365,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1569424359
    },
    {
        "content": "<p>Yes, we do record where the data comes from - that is sort-of an organization, but not exactly: we can receive two feeds from the same organization and they could be recorded as different.</p>",
        "id": 176581328,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1569428453
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span>  can you be more specific about what is not available? Everything you need should be in either the SubmissionSet (DocumentManifest), or the DocumentEntry (DocmentReference). What specifically is missing? <br>\nIs this simply the nature of some publishing actors that don't fill out the optional author data? When it is filled, it should be useful. The PCC profiles do encourage proper filling.</p>",
        "id": 176938132,
        "sender_full_name": "John Moehrke",
        "timestamp": 1569854305
    },
    {
        "content": "<p>We do not receive data as FHIR DocumentReference or submissions sets. WE have some tens of different drivers (CDAs, X protocols, flat files, HL7v2, direct database connections) with hundreds of different configurations. What we store is a general 'record authority' for each data source, that roughly corresponds to the organization that data comes from (but not exactly) and that's what we have</p>",
        "id": 176939882,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1569855433
    },
    {
        "content": "<p>Okay, well that is your problem.. not XDS...</p>",
        "id": 176940445,
        "sender_full_name": "John Moehrke",
        "timestamp": 1569855739
    },
    {
        "content": "<p>Maybe is my problem but makes Provenance as currently profiled uninplementable - and I wonder how many other systems are in the same boat</p>",
        "id": 176940697,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1569855894
    },
    {
        "content": "<p>Understood. getting this level of detail might be hard. But this \"basic provenance\" is being asked for on the consuming side. Thus the overall intent is to improve quality; knowing that this improvement might be painful to some.</p>",
        "id": 176941160,
        "sender_full_name": "John Moehrke",
        "timestamp": 1569856169
    },
    {
        "content": "<p>Be cautious about using a base-line profile to drive improvement in behavior.  Baseline profiles should generally reflect the lowest common denominator.  You can define \"raising the bar\" profiles that encourage systems to do more, but it shouldn't be a situation of systems simply can't.  If the data isn't coming in, then it can't be populated.  The system has no control over that.</p>",
        "id": 176943757,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1569857609
    },
    {
        "content": "<p>Base line profile is very baseline.... Provide the author organization if you have it; provide the organization that handed you the data (Transmitter).</p>",
        "id": 176944877,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1569858312
    },
    {
        "content": "<p>Both are must support (send if you have). If the current profile is unimplementable, I am curious what would be more baseline then keep track of who gave you the data.</p>",
        "id": 176945006,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1569858385
    },
    {
        "content": "<p>OK - maybe I am just misunderstanding things - the way I understand 'must support' is 'you must have this in your data model - even if sometimes it is not populated'</p>",
        "id": 176950320,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1569862056
    },
    {
        "content": "<p>If it is just 'send if you have' then we are good</p>",
        "id": 176950388,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1569862084
    },
    {
        "content": "<p>'must support' never means send it always.  That would be a minimum cardinality of 1.  Here is what the spec says about 'must support': Labeling an element MustSupport means that implementations that produce or consume resources SHALL provide \"support\" for the element in some meaningful way.<br>\nDepending on the profile, that might mean that you have to be able to store and send the element, i.e. if I send you an instance with this element and then read the same instance, I expect that element to be there, or it could be something more or less.  The profile needs to define what it means for 'support'.</p>",
        "id": 176950686,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1569862344
    },
    {
        "content": "<p>mustSupport generally means \"you must be capable of sending\".  It wouldn't be considered 'supported' if your system was never capable of providing a value.</p>",
        "id": 176950764,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1569862407
    },
    {
        "content": "<p>If there are situations where you'll have the data and some where you won't, you're fine.  If you'll <em>never</em> have data and couldn't pass it on if someone gave it to you, that would be a problem.</p>",
        "id": 176950858,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1569862471
    },
    {
        "content": "<p>Lloyd's correct. For the current profile, if you aren't able to provide author organization, and transmitter organization when it's available to you, that's a problem.</p>",
        "id": 176952877,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1569863875
    },
    {
        "content": "<p>I am curious <span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> , for each of the different drivers what you capture for 'source information'...I would expect you would need some bread crumbs to trace back to where you got the data</p>",
        "id": 176953004,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1569863999
    },
    {
        "content": "<p>Might be related, but want to get thoughts on this. What about writes? If system A supports a mustSupport element, but system B doesn't. Is it OK that system B never accepts that data on a write from system A, or an error should be returned?</p>",
        "id": 176953567,
        "sender_full_name": "Drew Torres",
        "timestamp": 1569864409
    },
    {
        "content": "<p>If a system claims conformance to a profile, they are claiming conformance to the mustSupport elements of that profile along with whatever the profile dictates about what mustSupport means.  If SystemB didn't conform to the profile, then they could do whatever they wanted with the mustSupport element.</p>",
        "id": 176954539,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1569865041
    },
    {
        "content": "<p>That makes sense.</p>",
        "id": 176955506,
        "sender_full_name": "Drew Torres",
        "timestamp": 1569865662
    },
    {
        "content": "<p>(The relevant definition of 'Must support' is at <a href=\"https://build.fhir.org/ig/HL7/US-Core-R4/general-guidance.html#must-support\" target=\"_blank\" title=\"https://build.fhir.org/ig/HL7/US-Core-R4/general-guidance.html#must-support\">https://build.fhir.org/ig/HL7/US-Core-R4/general-guidance.html#must-support</a>)</p>",
        "id": 176956257,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1569866121
    },
    {
        "content": "<p>(that from a responder point of view I interpreted as 'element must be in the data model' but not required to be populated)</p>",
        "id": 176956485,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1569866237
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191410\">@Brett Marquard</span> all the data coming in from a specific driver instance is tagged with a 'record authority' - that is basically a string with values like 'Lourdes Health System (Camden - Invision)', 'Lourdes Cclf Caregiver', 'Holy Cross (Allscripts/IDX)', 'Holy Cross (Meditech)'</p>",
        "id": 176957065,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1569866541
    },
    {
        "content": "<p>so a sort of organization</p>",
        "id": 176957079,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1569866552
    },
    {
        "content": "<p>'must support' continues to be a thorn, we plan to discuss further (again) on SD this week.</p>",
        "id": 176957473,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1569866767
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 176963654,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1569870691
    }
]