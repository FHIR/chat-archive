[
    {
        "content": "<p>All, I have a question for <em>clients</em> (not servers!). When you receive a resource that contains a HumanName element, and you want to display the name, would you use HumanName.text (if present) or Would you use HumanName.family and HumanName.given? </p>\n<p>For servers, do you populate HumanName.text? I see that US Core doesn't make that mandatory?</p>",
        "id": 177784241,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1570690674
    },
    {
        "content": "<p>the background to this question is that for internationalization purposes, it seems as though we want to make HumanName.text mandatory and must support. It sweeps a whole lot of curly name issues around order and weird part name customs under the carpet. How do people feel about that?</p>",
        "id": 177784315,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1570690758
    },
    {
        "content": "<p>My server will populate the text if it isn't supplied. And when filling out reference.display, I use that value.<br>\nAnd for my client usage, I use the text if it is there (and ref.display when that is there)</p>",
        "id": 177788228,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1570695018
    },
    {
        "content": "<p>Cerner's server populates text using the formatting rules of the underlying system</p>",
        "id": 177811165,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1570715299
    },
    {
        "content": "<p>I don't believe we use text in any of our apps as of yet. The ones I'm most familiar with use an internal routine to build the name from the parts (family &amp; given). All our customers to date have been from North America, so we have not had an issue with needing to support other formatting but will probably in the near future. If text was always available and met our needs, we would consider it.</p>",
        "id": 177811868,
        "sender_full_name": "Brian Zimbelman",
        "timestamp": 1570715741
    },
    {
        "content": "<p>We figure out which HumanName to pick based on <code>use</code> and <code>period</code> and then construct the name to show from <code>family</code> and <code>given</code>. It'd be easier to just use <code>text</code> if that was required. :P</p>",
        "id": 177968808,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1570852006
    },
    {
        "content": "<blockquote>\n<p>All, I have a question for <em>clients</em> (not servers!). When you receive a resource that contains a HumanName element, and you want to display the name, would you use HumanName.text (if present) or Would you use HumanName.family and HumanName.given? </p>\n<p>For servers, do you populate HumanName.text? I see that US Core doesn't make that mandatory?</p>\n</blockquote>\n<p>I don't necessarily trust servers to do reasonable things in HumanName.text.  I still see EHRs sending last, first in text fields or when using simple &lt;name&gt; elements in CDA (w/o &lt;given&gt; and &lt;family&gt;), or displaying in a variety of different ways.  For an end user experience, client apps generally want to ensure that there's consistency in what the end user sees.  When attaching a client to multiple EHR endpoint's, it's still very much \"wild west\" if you let the server create the text that shows up in the UI.</p>\n<p>Examples of variations in server text include: \"LAST, FIRST\", \"FIRST LAST\", \"First Last\", \"First M. Last\", \"First Middle Last\").</p>",
        "id": 178658820,
        "sender_full_name": "Keith Boone",
        "timestamp": 1571667276
    },
    {
        "content": "<p>I don't necessarily trust my own client to do the reasonable thing for each culture and environment. So our apps prefer <code>text</code> and constructs a name string from pieces only in the case that field does not exist. But it's mainly for displaying the name on the UI, we don't use the name for any matching purposes.</p>",
        "id": 181910049,
        "sender_full_name": "Mikael Rinnetm√§ki",
        "timestamp": 1574765812
    },
    {
        "content": "<p>thx</p>",
        "id": 182064650,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574894287
    }
]