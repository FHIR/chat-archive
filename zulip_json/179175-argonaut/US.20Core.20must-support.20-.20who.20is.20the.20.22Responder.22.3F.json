[
    {
        "content": "<p><strong>Spec references:  </strong><br>\n<a href=\"http://hl7.org/fhir/us/core/STU3.1.1/general-guidance.html#must-support\">US Core 3.1.1 Must Support Guidance</a></p>\n<ul>\n<li>In situations where information on a particular data element is not present and the <strong>reason for absence is unknown</strong>, US Core Responders SHALL NOT include the data elements in the resource instance returned as part of the query results.</li>\n<li>In situations where information on a particular data element is missing and the US Core Responder <strong>knows the precise reason </strong>for the absence of data, US Core Responders SHALL send the reason for the missing information using values (such as nullFlavors) from the value set where they exist or using the dataAbsentReason extension.</li>\n</ul>\n<p><strong>Question:</strong><br>\nIn the must-support guidance, is the \"US Core Responder\" intended to be the software product (FHIR server) or the developer / organization that designed the software product (EHR developer)?  To whom must the \"reason\" be known?  The <strong>developer </strong>who programmed the FHIR server, or the <strong>technology </strong>that is the API server?</p>\n<p>That very high-level question I think could impact how Inferno could validate must-support compliance.  Specifically, if a data element just is not supported by the EHR at all (even in the EHR's internal database), then either:</p>\n<ol>\n<li>If the responder is the EHR developer, then they shall DAR the element with 'unsupported'.  I.e. intentionally declare that the field is not supported.</li>\n<li>Return nothing in the property (assuming a 0..* or 0..1 cardinality).  In this case, the FHIR server would be compliant if a must-support, since the software product was never programmed to know that the field isn't supported.</li>\n</ol>\n<p><strong>Consequences:</strong><br>\nWhile it might be simple to \"just DAR it\" if an EHR developer doesn't support something, that can have consequences as other FHIR IGs become popular, and are using the US Core definition of must-support (which I think is happening).  This means that API servers will have to explicitly DAR every must-support property that they don't support, which seems like it would result in bloated resources.</p>",
        "id": 252346122,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1631037704
    },
    {
        "content": "<blockquote>\n<p>In the must-support guidance, is the \"US Core Responder\" intended to be the software product (FHIR server) or the developer / organization that designed the software product (EHR developer)? To whom must the \"reason\" be known? The developer who programmed the FHIR server, or the technology that is the API server?</p>\n</blockquote>\n<p>We define the the \"US Core Responder\" as : <em>A product that responds to the data access request providing patient data. This can be thought of as the server in a client-server interaction. The terms “US Core Responder” and “Server” and “EHR” are used interchangeably throughout this guide and are not meant to limit this actor to electronic health record systems. The same technology can be used in HIEs, care coordination platforms, population health systems, etc. Consider these terms as a short-hand notation for something like “interoperable healthcare platform”.</em></p>\n<p>There is a general  expectation that  business rules may dictate the recording of why a particular datum is missing.   The assumption is that a  developer is meeting those business needs.  US Core MS rules provide a way to capture that information.</p>\n<p>RE the statement:  \"While it might be simple to \"just DAR it\" if an EHR developer doesn't support something, \"  That is not US Core conformant based on the first (and most important MS bullet) :</p>\n<p><em>US Core Responders SHALL be capable of populating all data elements as part of the query results as specified by the US Core Server Capability Statement.</em></p>\n<p>Do that answer your question or  is there some other underlying intent of your question?</p>",
        "id": 252360384,
        "sender_full_name": "Eric Haas",
        "timestamp": 1631043450
    },
    {
        "content": "<p>...as a consequence, we relaxed some MS elements in 4.0.0 so Implementation Guides reusing US Core wouldn't have to support. For example, 'Birth Sex' Is NOT  necessary for medication prior auth, so we removed MS. The ONC regulation/certification will still test since 'Birth Sex' is in USCDI. This is a tricky dance to provide a foundation for certification, and support reuse within HL7.</p>",
        "id": 252466151,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1631110206
    },
    {
        "content": "<blockquote>\n<p>This is a tricky dance to provide a foundation for certification, and support reuse within HL7.</p>\n</blockquote>\n<p>It also implies that some rules are modeled in a different place (not US Core) and possibly a different language? (e.g.,  does certification testing define its own FHIR profiles to lock these details down, or are these tests implemented based on code/constraints modeled in a different formalism?)</p>",
        "id": 252482724,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1631115515
    },
    {
        "content": "<p>We are doing out best to have the modeling in US Core and making it optional -- ONC then references/reuses the US Core StructuredDefinitions when necessary.</p>",
        "id": 252485903,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1631116666
    },
    {
        "content": "<p>(our original approach was directly support USCDI with no additional  ONC commentary required -- we learned very quickly this made US Core not very reusable)</p>",
        "id": 252486145,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1631116751
    },
    {
        "content": "<p>Have you looked at the possibility of two IGs - one that defines the structures and one that depends on the base and imposes USCDI rules?</p>",
        "id": 252487962,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1631117367
    },
    {
        "content": "<p>We have discussed the idea of a 'US Base' -- we are collecting requirements through the 'variance ' request process (anytime someone can't reuse US Core, Cross Group Projects votes on granting a variance).  The idea is with sufficient requirements we will generate one. But to manage only a handful of differences it's a fair bit of overhead to manage two IGs.</p>",
        "id": 252496383,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1631120506
    },
    {
        "content": "<p>I did write <a href=\"http://jira.hl7.org/browse/FHIR-33609\">FHIR#33609</a> for this.  I do think we have a small problem today, but it could grow larger.  We either need to be much more targeted about what we flag as must-support, or consider shifting the meaning of it (again).</p>\n<p>I'll hold up Goal.target.dueDate as an example.  I'm sure there are more.  It sounds like there are two different things we need to separate:<br>\n1) Pretty please send the data if you have it.  But we get that data is messy and it is always possible it will be missing.<br>\n2) This is required by some entity that wants to point to this IG.</p>",
        "id": 253138001,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1631558137
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span>  we already haved addressed this missing data in great detail and 2 is self-evident.  I am not sure what you are saying</p>",
        "id": 253138510,
        "sender_full_name": "Eric Haas",
        "timestamp": 1631558354
    },
    {
        "content": "<p>let's be specific - Is Inferno is asking you to support things you don't have in your system ever?</p>",
        "id": 253138672,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1631558413
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191410\">@Brett Marquard</span>  Yes.</p>",
        "id": 253138692,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1631558420
    },
    {
        "content": "<p>Though it is actually US Core.  Not (directly) Inferno.</p>",
        "id": 253138750,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1631558455
    },
    {
        "content": "<p>Thank you. I suspect you (Epic) are not alone...if you can help us identify the specific places, we can continue to improve.</p>",
        "id": 253138863,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1631558511
    },
    {
        "content": "<p>The Inferno team is incredibly detailed, they often find things the silly editors of US Core didn't intend.</p>",
        "id": 253139025,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1631558562
    },
    {
        "content": "<p>Would that improvement be removing the must-support flag from relevant properties?  Or changing must-support?  Because I think those are the two main options.</p>",
        "id": 253139133,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1631558606
    },
    {
        "content": "<p>This is extremely maddeningly frustrating for me.  We had all these design discussion all the way back in Argo Data Query with participation from all the major players.   Many of these are not new requirements.</p>",
        "id": 253139203,
        "sender_full_name": "Eric Haas",
        "timestamp": 1631558640
    },
    {
        "content": "<p>Take a peek at the text we added to <a href=\"https://build.fhir.org/ig/HL7/US-Core/StructureDefinition-us-core-vital-signs.html\">Vital Signs</a> when this first came up.</p>\n<blockquote>\n<p>Systems that never provide an observation without a value are not required to support Observation.dataAbsentReason</p>\n</blockquote>",
        "id": 253139258,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1631558649
    },
    {
        "content": "<p>Yeah.  I think we just didn't get into the really fine-grained nitty-gritty.  We're just now getting there.</p>",
        "id": 253139297,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1631558668
    },
    {
        "content": "<p>Will look at goals.</p>",
        "id": 253139312,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1631558674
    },
    {
        "content": "<p>Yeah - should that Vital Signs clarification be rolled up into the top-level must-support definition?</p>",
        "id": 253139364,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1631558694
    },
    {
        "content": "<p>My initial reaction is probably not -- this could create a hole in the spec for folks to say 'oh, we never support that, we are ok'</p>",
        "id": 253139575,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1631558773
    },
    {
        "content": "<p>(let me read your tracker, before I comment further)</p>",
        "id": 253139670,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1631558815
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191764\">Cooper Thompson</span> <a href=\"#narrow/stream/179175-argonaut/topic/US.20Core.20must-support.20-.20who.20is.20the.20.22Responder.22.3F/near/253139364\">said</a>:</p>\n<blockquote>\n<p>Yeah - should that be rolled up into the top-level must-support definition?</p>\n</blockquote>\n<p>We have had this discussion before ...   you either have requirements or you don't,  testing is impossible if you can opt out of anything.</p>",
        "id": 253139736,
        "sender_full_name": "Eric Haas",
        "timestamp": 1631558846
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span>  - you have no way to put a target date on a goal?</p>",
        "id": 253139881,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1631558886
    },
    {
        "content": "<p>( I am channeling the inferno team here :-))</p>",
        "id": 253139911,
        "sender_full_name": "Eric Haas",
        "timestamp": 1631558899
    },
    {
        "content": "<p>What is the vehicle that should be requiring functional support?  The profile? Or the regulation?  I would think that FHIR IGs would be dictating how systems exchange the data they have.  It shouldn't be requiring that an implementer change their system to build new functionality that is unrelated to interoperability (though regulations might).</p>",
        "id": 253139922,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1631558904
    },
    {
        "content": "<p>Yup.  We don't support goal target dates.  I was kinda surprised too.</p>",
        "id": 253139952,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1631558917
    },
    {
        "content": "<p>Let me good find an old Epic Review on SMART goals...</p>",
        "id": 253139983,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1631558931
    },
    {
        "content": "<p>Part of the issue is how you define end date vs. expected end date vs target date.</p>",
        "id": 253140066,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1631558968
    },
    {
        "content": "<p>well, then we need to clean up the definition in the base resource.</p>",
        "id": 253140229,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1631559019
    },
    {
        "content": "<p>can you put together a list of the elements where these issue exist?</p>",
        "id": 253140369,
        "sender_full_name": "Eric Haas",
        "timestamp": 1631559082
    },
    {
        "content": "<p>Yeah, but there will always be base spec issues.  I still think we need to separate the \"must support for interop\" vs. \"must support fundamental functionality\".</p>",
        "id": 253140385,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1631559093
    },
    {
        "content": "<p>IGs are definitely crafted with an intention of forcing implementers to change what their systems can do.  Regulation can be one of the drivers of adoption of such IGs, but there can be others.</p>",
        "id": 253140423,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1631559110
    },
    {
        "content": "<p>If there's no regulation, then the IG designers need to ensure that the lift required to implement is offset by the benefits that accrue to implementation.  (And that everything that's demanded actually makes sense and is clearly necessary to support the use-case.)</p>",
        "id": 253140602,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1631559176
    },
    {
        "content": "<p>\"must support for interop\" vs. \"must support fundamental functionality\".  I don't know what that means.  Our intent is to establish a common baseline which I am guessing  is the latter?</p>",
        "id": 253140655,
        "sender_full_name": "Eric Haas",
        "timestamp": 1631559194
    },
    {
        "content": "<p>The problem with US Core is that it's trying to satisfy two wildly distinct use-cases.  For example, it's quite reasonable to demand support to store, display and share race &amp; ethnicity when talking about USCDI.  Not so much in other circumstances.</p>",
        "id": 253140805,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1631559247
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span>  but the focus of g10 is specifically on \"interop\".  There are other criteria about EHR functionality, but g10 is really just about interop.</p>",
        "id": 253140883,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1631559287
    },
    {
        "content": "<p>g10?</p>",
        "id": 253140996,
        "sender_full_name": "Eric Haas",
        "timestamp": 1631559325
    },
    {
        "content": "<p><a href=\"https://www.healthit.gov/test-method/standardized-api-patient-and-population-services\">§170.315(g)(10) Standardized API for patient and population services</a></p>",
        "id": 253141066,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1631559353
    },
    {
        "content": "<p>what do you mean by \"must support fundamental functionality\"</p>",
        "id": 253141216,
        "sender_full_name": "Eric Haas",
        "timestamp": 1631559401
    },
    {
        "content": "<p>For example, <a href=\"https://www.healthit.gov/test-method/care-plan#cures_ccg\">§170.315(b)(9) Care plan</a> requires that a certified EHR support the ability for users to document a Care Plan.</p>",
        "id": 253141459,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1631559496
    },
    {
        "content": "<p>(off topic a bit) <span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span> funny what you find in old drawer after a move...this goal with a target date in an old review changed my future <a href=\"/user_uploads/10155/F9x4DLHwCc8mY4ZV4MThe1Dz/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/F9x4DLHwCc8mY4ZV4MThe1Dz/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/F9x4DLHwCc8mY4ZV4MThe1Dz/image.png\"></a></div>",
        "id": 253141493,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1631559510
    },
    {
        "content": "<p>i.e. b9 requires that an EHR have a care plan in the first place, and g10 requires that the EHR share it using FHIR.    The question is whether g10 should be implying a functional requirement via the requirement that something be shared.</p>",
        "id": 253141881,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1631559654
    },
    {
        "content": "<blockquote>\n<p>\"must support for interop\" vs. \"must support fundamental functionality\".</p>\n</blockquote>\n<p>I think you need to push ONC on policy side. US Core is intended to reflect what Systems support -- I am a still surprised Epic doesn't have a Goal target date.</p>",
        "id": 253141918,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1631559670
    },
    {
        "content": "<p>Serious question - should ONC require an SDOH module before requiring specific elements for exchange?</p>",
        "id": 253141977,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1631559698
    },
    {
        "content": "<p>That is a perfect question for this discussion.</p>",
        "id": 253142285,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1631559837
    },
    {
        "content": "<p>So <span class=\"user-mention\" data-user-id=\"191410\">@Brett Marquard</span>  - about your suggestion to push ONC on the policy side, what do you think I should push them toward?  It seems like I'd be asking them to basically ignore the US Core 3.1.1 must support flags and come up with their own list.  If I were ONC, I'd probably rather have something in the industry to point to.  Could we do another pass at must-support fields in US Core 4.0.1 and (pre)publish a 4.0.2 and maybe suggest ONC issue a clarification in the CCG saying that folks can implement 3.1.1. but according to must-support rules defined in 4.0.2?</p>",
        "id": 255105477,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1632770649
    },
    {
        "content": "<p>The Must Support elements and definitions in US Core have been refined  in almost ever ballot since 2015 (DAF!) -- in the 4.0.0 release <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> and I went field by field and then added a new <a href=\"https://build.fhir.org/ig/HL7/US-Core/conformance-expectations.html\">Conformance Expectations</a> page to cover all the different profile scenarios, and added MS on any expected MS for references. I think it is much improved.  If any are unclear, please log trackers.</p>",
        "id": 255110485,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1632772688
    },
    {
        "content": "<p>What other fields are giving you trouble?</p>",
        "id": 255110930,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1632772855
    },
    {
        "content": "<p>re:ONC. It would be interesting to understand when/how they decide to add  'module requirement' vs just adding a new 'Data element/class'.</p>",
        "id": 255111762,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1632773170
    },
    {
        "content": "<p>As I've been doing more research, things are getting less clear to me.  I think my clarification request will be how ONC wants to split out <strong>recording</strong> vs. <strong>exchanging</strong> requirements.  There are some ONC artifacts that I think imply different things.  </p>\n<p>Am I correct that the focus and intent of US Core was on how to exchange data, and that we weren't considering the \"recording\" implications?  Or was recording of data something we were explicitly thinking about?</p>",
        "id": 255116148,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1632775097
    },
    {
        "content": "<p>During the discussion on MS we regularly asked the question -- \"Is this  available in your system?\" We were very careful to be conservative with MS (mark very few elements).</p>",
        "id": 255116923,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1632775473
    },
    {
        "content": "<p>But we weren't thinking that marking MS was imposing a new requirement that folks who don't have it available now must make it available?</p>",
        "id": 255117042,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1632775530
    },
    {
        "content": "<p>I am not quite sure how to answer that question -- US Core MS defines the bare minimum systems must be able to capture and communicate.</p>",
        "id": 255117241,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1632775613
    },
    {
        "content": "<p>What elements are problematic for your system? If you told me we missed the ball by 10 elements, then we have a serious problem... if we missed a couple, then I am less concerned.</p>",
        "id": 255117311,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1632775646
    },
    {
        "content": "<p>Yeah, it isn't a lot.  Goal.target.dueDate is still the focus for us.  The philosophy is what is causing us heartache.  We have been accustomed to referring to ONC's list of certification criteria for what development we needed for <strong>recording</strong> data.  Now, the requirements for recording data are split between direct requirements in certification criteria and indirect requirements via (g)(10) naming US Core (and in the future, any SVAPs).</p>\n<p>Ultimately, this means we need to stop looking at US Core as just a standard for exchanging data if it can also impose requirements to record data.  We had not been thinking about it that way before.</p>",
        "id": 255118160,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1632775998
    },
    {
        "content": "<blockquote>\n<p>ONC's list of certification criteria for what development we needed for recording data. Now, the requirements for recording data are split between direct requirements in certification criteria and indirect requirements via (g)(10) naming US Core (and in the future, any SVAPs).</p>\n</blockquote>\n<p>Isn't that also incomplete for C-CDA? I mean, things are bit more buried, but I think it's pretty hard to have an exchange standard not layer in some additional application requirements.</p>",
        "id": 255123462,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1632778210
    },
    {
        "content": "<p>I am sorry for the heartache -- I agree I hadn't thought of a US Core as standard for what systems 'must record' but with the way certification has adopted, my views have changed also....</p>",
        "id": 255123626,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1632778284
    },
    {
        "content": "<p>I have  looked at \"recording vs. exchanging requirements.\" as 2 sides of the coin.  If you can record it then I assumed you can exchange it and vice versa.</p>",
        "id": 255144899,
        "sender_full_name": "Eric Haas",
        "timestamp": 1632790733
    },
    {
        "content": "<p>Yeah, I think that we just missed that fundamental point when we were reviewing US Core in the past.  <span aria-label=\"sad\" class=\"emoji emoji-2639\" role=\"img\" title=\"sad\">:sad:</span></p>",
        "id": 255273536,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1632853688
    },
    {
        "content": "<p>I am a little bit concern about the current US Core's adoption of \"If the server never have xxx data, then server does not have to support xxx\". I think this is the same as saying \"server may support xxx\" (or removing the MS label from xxx element). I understand such MS is still meaningful for client so may be it is time to have MS for server and MS for client.</p>",
        "id": 255277964,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1632855190
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span>  Where is the language today? I am only aware of similar language on Vital Signs for a MS data absent reason (DAR) since some servers ALWAYS have the data and will never send DAR</p>",
        "id": 255288402,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1632859161
    },
    {
        "content": "<p>I think that is the one.</p>",
        "id": 255296785,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1632862147
    },
    {
        "content": "<p>whew -- I think that one is reasonable :)</p>",
        "id": 255385474,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1632916655
    },
    {
        "content": "<p>That one is ok since there is vs-2 invariant.</p>",
        "id": 255406748,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1632924994
    },
    {
        "content": "<blockquote>\n<p>I understand such MS is still meaningful for client so may be it is time to have MS for server and MS for client.</p>\n</blockquote>\n<p>We define the expectations for both as well</p>",
        "id": 255412138,
        "sender_full_name": "Eric Haas",
        "timestamp": 1632926936
    }
]