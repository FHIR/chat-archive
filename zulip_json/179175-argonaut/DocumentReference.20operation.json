[
    {
        "content": "<p>The Argonaut data query team defined an operation for DocumentReference  in the<a href=\"http://build.fhir.org/ig/Healthedata1/Argo-DSTU2/OperationDefinition-docref.html\" target=\"_blank\" title=\"http://build.fhir.org/ig/Healthedata1/Argo-DSTU2/OperationDefinition-docref.html\"> Argonaut-DSTU2 Implemenation Guide</a>. However, I haven't gotten much feedback on it and since I don't have the ability to test it out on server, I would like to get some here.   Feedback on the operation itself and how its defined, technical edits,  <strong>not</strong>  the use case. </p>",
        "id": 153864846,
        "sender_full_name": "Eric Haas",
        "timestamp": 1482445743
    },
    {
        "content": "<p>Why did you make an operation for this? It is a simple REST query on DocumentReference? It would seem making an operation is more complexity with less flexibility.</p>",
        "id": 153864903,
        "sender_full_name": "John Moehrke",
        "timestamp": 1482497872
    },
    {
        "content": "<p>I ask so that I can understand and provide better feedback.</p>",
        "id": 153864904,
        "sender_full_name": "John Moehrke",
        "timestamp": 1482498031
    },
    {
        "content": "<p>the operation has a feature that the search doesn't have - sort of.</p>",
        "id": 153864922,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1482520203
    },
    {
        "content": "<p>the operation prompts the server to consider creating document references for the patient. </p>",
        "id": 153864923,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1482520234
    },
    {
        "content": "<p>where as search is looking for documents that already exist </p>",
        "id": 153864924,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1482520248
    },
    {
        "content": "<p>though you won't find it documented anywhere expliicitly that search is only for that. But it's details point against it's use for managing on-demand documents </p>",
        "id": 153864925,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1482520295
    },
    {
        "content": "<p>That is not the same pattern as on-demand documents in XDS. The DocumentReference exists, it is the document that does not yet exist. It would be the GET on the document URL that would 'create' a new document.  But given that hint, I could see how this operation is asking for a document with the given constants to be created. Thus the constraints get to be defined by the client. In XDS on-demand the constraints are still defined by the server, the existence of the document content is just deferred until it is needed. This client side constraint system does appear to be able to control the time frame under which a summary is built. I would thus just question why that is considered a useful document? It might be technically logical, but medically it seems very suspect. </p>",
        "id": 153864946,
        "sender_full_name": "John Moehrke",
        "timestamp": 1482592122
    },
    {
        "content": "<p>When you do a Get for an DocuementReference you are looking for an pre-existing index and not asking the server to create one on the fly.  In this use case neither the document nor the documentreference exists.  ( but it can be generated) so you can not technically search for something that does not exist -  you will get an empty bundle.  The assumption is the documentreference reference will be used to fetch/generate the document on demand.  </p>",
        "id": 153865007,
        "sender_full_name": "Eric Haas",
        "timestamp": 1482949463
    }
]