[
    {
        "content": "<p>All, I was absent for the call that discussed requiring all Medications to be contained. I'm curious about the reasoning behind this (I've heard it's primarily for consistency and ease of use for client apps).</p>",
        "id": 153834467,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466694351
    },
    {
        "content": "<p>We originally used all contained Medications in our server, but switched most \"simple\" meds over to codeable concept based on pressure from applications, Grahame, and others in Argonaut (and since that was possible in DSTU 2)</p>",
        "id": 153834468,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466694404
    },
    {
        "content": "<p>I'm curious about the reverse in stance now - it seems easier for apps to access the codeableConcept directly rather than digging into the Medication resource when possible</p>",
        "id": 153834469,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466694439
    },
    {
        "content": "<p>previous conversations: <a href=\"https://groups.google.com/forum/#!searchin/argonaut-project/contained/argonaut-project/CyzzVBdoxO0/xLT2iHLVAQAJ\" target=\"_blank\" title=\"https://groups.google.com/forum/#!searchin/argonaut-project/contained/argonaut-project/CyzzVBdoxO0/xLT2iHLVAQAJ\">https://groups.google.com/forum/#!searchin/argonaut-project/contained/argonaut-project/CyzzVBdoxO0/xLT2iHLVAQAJ</a> and <a href=\"https://groups.google.com/forum/#!searchin/argonaut-project/contained/argonaut-project/50wSm34WhZQ/P3hBgATVAQAJ\" target=\"_blank\" title=\"https://groups.google.com/forum/#!searchin/argonaut-project/contained/argonaut-project/50wSm34WhZQ/P3hBgATVAQAJ\">https://groups.google.com/forum/#!searchin/argonaut-project/contained/argonaut-project/50wSm34WhZQ/P3hBgATVAQAJ</a></p>",
        "id": 153834470,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466694570
    },
    {
        "content": "<p>Also, to specifically require a server to \"contain\" a resource where it may have been a pure reference seems wrong/a misuse of the contained concept (I was told one of the servers had pure references but were going to switch to contained)</p>",
        "id": 153834471,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466694630
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span>! There are two issues for clients:</p>\n<p>1. Ensuring the medication data are always available directly from a prescription (without an additional HTTP call)</p>\n<p>2. Ensuring that client-side logic is as simple as possible (but not simpler).</p>\n<p>For #1, <code>medicationCodeableConcept</code> and <code>reference--&gt;contained</code> both work â€”  but not <code>reference--&gt;external</code>.</p>\n<p>For #2, the issue is that if data can live in 2 places, you need to maintain two code paths and check in both places all the time. So this is strictly harder to manage than just having a rule like \"Always look in <code>medicationCodeableConcept</code>\" or \"Always look in <code>medicationReference</code>\". </p>\n<p>Cerner indicated that the semantics of <code>medicationReference</code> are sometimes required (e.g. for compounded drugs, because a single codeable concept is not expressive enough).</p>\n<p>--&gt;  the only logical conclusion I could reach to satisfy all constraints is: always use <code>medicationReference</code>, and always make the reference contained.</p>",
        "id": 153834472,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1466695430
    },
    {
        "content": "<p>I should also add: if Argonaut vendors wanted to support \"_include\" directives, issue #1 would go away :-)</p>",
        "id": 153834473,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1466695510
    },
    {
        "content": "<p>It still feels like abuse of the spec to require contained when something is indeed a reference.</p>",
        "id": 153834474,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466695634
    },
    {
        "content": "<p>As to the \"where to look\" I could make the same argument for any value[x] type field. Why are we particularly concerned with this one? Why make it harder for the larger use cases where meds are single ingredient?</p>",
        "id": 153834476,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466695694
    },
    {
        "content": "<p>Don't most of the open source libraries make this flexing somewhat simple?</p>",
        "id": 153834477,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466695718
    },
    {
        "content": "<p>I personally feel like the Medication resource is fundamentally broken - it's part reference data and part activity data right now. But so far there's been resistance to moving this resource closer to a representation of \"formulary\"</p>",
        "id": 153834478,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466695800
    },
    {
        "content": "<p>However, we're currently limited to what we have. I would love to continue conversations around how to make the \"what was ordered/given\" simpler within HL7</p>",
        "id": 153834479,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466695849
    },
    {
        "content": "<p>I agree the <code>Medication</code> resource as specified isn't ideal, but <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> can you clarify what you mean by \"activity data\"? In the context of this Argonaut DSTU2 IG: we're just trying to work with it as published.</p>\n<p>When it comes to client library support: I don't know any open-source client that, given a <code>MedicationOrder</code>, allows you to say \"what's the drug code\" with automated resolution across (<code>medicationCodeableConcept</code> vs. <code>medicationReference</code>) and also across (local vs. in-bundle vs. remote-fetch). It'd be nice, but it also forces all code to be written asynchronously, etc. In other words, it's hard.</p>\n<p>Now, writing a single function to resolve a contained reference isn't hard. And it's reliable. The actual function is 2 lines instead of 1 line long, but once you write it, you're done.</p>",
        "id": 153834482,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1466696557
    },
    {
        "content": "<blockquote>\n<p>It still feels like abuse of the spec to require contained when something is indeed a reference.</p>\n</blockquote>\n<p>Agreed, it could be considered \"an abuse\", but it seems like the \"least worst\" solution (because it doesn't create practical issues I can see).</p>",
        "id": 153834483,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1466696578
    },
    {
        "content": "<p>Also, re <code>value[x]</code>: different types are used to convey different information. So there's a reason for the pain. Whereas with this drug resolution issue, it's the <strong>same information</strong> in both cases (just more or less detailed).</p>",
        "id": 153834484,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1466696685
    },
    {
        "content": "<p>For the contained on simple, would only the Medication.code be filled out? For multi-ingredient, is the Medication.code always filled out? If so, with what?</p>",
        "id": 153834492,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466698069
    },
    {
        "content": "<p>Also <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> When I said activity data - some of the fields on Medication are specifically set based on an instance of an order. Whereas others are primarily \"reference\" - like if it's tylenol 325 and other packaging/product details</p>",
        "id": 153834494,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466698140
    },
    {
        "content": "<p>which fields are order-specific? That's the part I want to understand.</p>",
        "id": 153834495,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1466698162
    },
    {
        "content": "<blockquote>\n<p>For the contained on simple, would only the Medication.code be filled out? For multi-ingredient, is the Medication.code always filled out? If so, with what?</p>\n</blockquote>\n<p>I think we'd want <code>Medication.code</code> to be reliably populated -- even if just with a \"text\" element describing the compounded product.</p>",
        "id": 153834496,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1466698202
    },
    {
        "content": "<p>Examle of \"activity\" on Medication are primarily the dosages of multi-ingredient meds, IIRC</p>",
        "id": 153834497,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466698245
    },
    {
        "content": "<p>It's not clear to me -- I mean, if you're prescribing a tylenol/codeine, I'd expect to see an RxNorm code in Medication.code, and that's it. But even if you did populate Medication.product.ingredient (x2), that's still not activity-specific.</p>",
        "id": 153834501,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1466698321
    },
    {
        "content": "<p>Also, the lot info gets weird, depending on what you're tracking/what level. Since many pharmacy regulations state you need toknow the lot/exp of the specific order/fill, this is the only place to put that</p>",
        "id": 153834502,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466698333
    },
    {
        "content": "<p>Oh, I see - batch (lot number) would definitely fall in that category though</p>",
        "id": 153834503,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1466698337
    },
    {
        "content": "<p>Yeah</p>",
        "id": 153834504,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1466698339
    },
    {
        "content": "<p>The amounts are order specific. Otherwise, how do you say exactly how much of each item is in a bag (for IV or TPN)?</p>",
        "id": 153834505,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466698378
    },
    {
        "content": "<p>The form also gets clumsy for a compound or multi-ingrient. I believe we do this by setting form for the order. But for compound, the ingredients may be compounded into a cream. That I'm less concerned about as you likely don't care if the things that were compounded together started as powder or something else</p>",
        "id": 153834507,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466698562
    },
    {
        "content": "<p>Agreed!</p>",
        "id": 153834508,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1466698702
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> I started eiditing IG to show how this decision would look in the IG.  I got stuck on the Medication Resource part and is thus unfinished.  Yes as Josh said code is required.  That is a no brainer but what about the compounded stuff.  <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> is saying text in code.display.  If that is the case the why not just use Medication.medicationCodeableConcept?</p>",
        "id": 153834532,
        "sender_full_name": "Eric Haas",
        "timestamp": 1466704315
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> For IVs, Compounds, etc, there are likely other things filled out on that Medication to provide enough detail to apps doing logic based on dose or ingredient info (ie: not just displaying). However, I'm not sure any of that is required for MU</p>",
        "id": 153834533,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466704502
    },
    {
        "content": "<p>S4S likely has other concerns there, in that they likely do want RxNorms/coded ingredient information which is buried in the ingredient lists on Medication</p>",
        "id": 153834534,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466704532
    },
    {
        "content": "<p>(as would other apps)</p>",
        "id": 153834535,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466704549
    },
    {
        "content": "<p>adding <span class=\"user-mention\" data-user-id=\"191410\">@Brett Marquard</span>  I don't see the distinction.   It seems like a Kludge if we use the Medication resource but then only use the text to do compounded meds.   We could then  say must support codes and use the contained MedicationResource if you want to fill out anything more than a text description of a compounded medication.   BTW we expected push back so thanks for bringing this up.</p>",
        "id": 153834537,
        "sender_full_name": "Eric Haas",
        "timestamp": 1466705455
    },
    {
        "content": "<p>Are clients prepared to handle IVs, Compounds, etc? We started modeling some of this in C-CDA and folks stopped because they got very complicated and the value on a document exchange wasn't clear. I am sure these would be valuable for S4S and other exchange, but wonder if we should nail the simpler use case first.</p>",
        "id": 153834540,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1466705983
    },
    {
        "content": "<blockquote>\n<p>S4S likely has other concerns there, in that they likely do want RxNorms/coded ingredient information </p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> Maybe for compounded drugs. But for products <em>in</em> RxNorm, we can easily look up ingredients (i.e. just give us the <code>SCD</code>; we don't need the EHR to tell us what ingredients belong to an <code>SCD</code>, since NLM already provides that information).</p>",
        "id": 153834541,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1466706010
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> For most things that qualify as IVs/Multi-ingredient/TPN, AFAIK there's no single RxNorm that represents them. This was the only remaining reason our server used the contained Medication resource</p>",
        "id": 153834550,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466708625
    },
    {
        "content": "<p>They usually only have those codes if there's a premix available</p>",
        "id": 153834551,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466708695
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> Totally -- that makes sense, and for these mixtures, reporting ingredients is great. I'm just saying we don't need/expect that same level of detail for prescribables.</p>",
        "id": 153834555,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1466710764
    },
    {
        "content": "<p>interestingly, there's nothing AFAIK in FHIR that indicates an order is inpatient vs. outpatient</p>",
        "id": 153834558,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466711530
    },
    {
        "content": "<p>Well, <code>MedicationOrder.encounter</code> --&gt; <code>Encounter.class</code> is a window onto that info.</p>",
        "id": 153834559,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1466712281
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> That doesn't work when the ER or hospital prescribes you meds for home</p>",
        "id": 153834604,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466719657
    },
    {
        "content": "<p>You *might* be able to get there by who eventually dispenses, but that's assuming you know that info</p>",
        "id": 153834605,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466719693
    },
    {
        "content": "<p>I suppose that for inpatient or ED meds,  you'd expect to find some MedicationAdministrations pointing back to the order. </p>",
        "id": 153834606,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1466719754
    },
    {
        "content": "<p>Maybe, though there's nothing stopping home care or patients from inputing admins (at least in the spec)</p>",
        "id": 153834814,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466778408
    },
    {
        "content": "<p>But yes, many different methods to try to determine the origin of the med</p>",
        "id": 153834815,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1466778478
    },
    {
        "content": "<p>back to this</p>",
        "id": 153835001,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466990346
    },
    {
        "content": "<p>we expected that mainly systems would reference medications in one of 3 ways:<br>\n- a code that refers to an national drug dictionary that implicitly defines a Medication resource (and In Australia, we'll be making that explicit for the national drig dictionaries - they'll publish Medication resources)<br>\n- a direct reference to the institutional pharmacy formulary  (not usually an option for ambulatory prescriptions)<br>\n- an inline custom formulation (TPN, some IVs, creams etc)</p>",
        "id": 153835002,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466990502
    },
    {
        "content": "<p>we expected that since all these are valid choices at the clinical level, clients would naturally need to be able to handle all these 3 options - codes, contained and external references. </p>",
        "id": 153835003,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466990549
    },
    {
        "content": "<p>my opinion is that trying to restrict the options to less than these is 'too simple' </p>",
        "id": 153835004,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466990566
    },
    {
        "content": "<p>I don't think there's much mileage in Argonaut trying for something simpler here either. </p>",
        "id": 153835005,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466990638
    },
    {
        "content": "<p>I thnk that the feature that's currently in medication that belongs outside of it as well is the product.form. Frequently, clinicians order by code + form</p>",
        "id": 153835006,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466990684
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> - what specificially were you referring to when you talked about resistance to fixing medication? </p>",
        "id": 153835007,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466990710
    },
    {
        "content": "<p>But if they want code + form, why wouldn't that be a contained Medication?  (because in addition to code + form, sometimes there's code + strength or other things too.</p>",
        "id": 153835018,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1466999788
    },
    {
        "content": "<p>because it's not the rest of the medication</p>",
        "id": 153835033,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467006309
    },
    {
        "content": "<p>If it's a contained resource, it doesn't need to be - it's just the details you happen to have.  We don't want to propagate medication details into the order.</p>",
        "id": 153835034,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1467006855
    },
    {
        "content": "<p>If you need more than a bare code, then you need the resource - and can choose whether you have enough to make it stand-alone or whether it should be contained</p>",
        "id": 153835035,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1467006889
    },
    {
        "content": "<p>no that missed the point. If I use a contained medication, I have to populate all of the correct details for medication. There's no way to just do code + form</p>",
        "id": 153835052,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467008051
    },
    {
        "content": "<p>Why on earth not?  You can have a contained Patient that just lists name and gender, why not a contained Medication that just lists code and form?  You send the information you know  (and can skip sending information pre-coordinated into the code).</p>",
        "id": 153835058,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1467008714
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> We discussed some of the challenges with Medication at the last WGM, along with what the intent was for this resource. IE: if it was inteded to represent a formulary. Also, that most non-premix multi-ingredient type prescriptions/administrations would all require a contained medication as it is now (or for Medication to be unique by order for those). I don't think we landed what the intent was (though I get the impression it may not be representative of a formulary). We discussed possibly turning the references from Med Order/Admin/Dispense into a list of Medications instead of single reference to help with multi-ingredient. However, sounds like the concern was that someone might misuse that for placing multiple separate prescriptions/orders. EG: Ibuprofen for pain, Amoxicillin x 10 days on the same order</p>",
        "id": 153835080,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1467035466
    },
    {
        "content": "<p>The general feeling I got from the Pharmacy group was that there wasn't a concern that all mutli-ingredient/non-premix would always need to be contained on the Order/Admin/Dispense side</p>",
        "id": 153835081,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1467035528
    },
    {
        "content": "<p>Sooo... are we good with leaving simple meds = to code or reference &amp; multi ingredient = reference? And does it really matter if the reference is contained or remote?</p>",
        "id": 153835503,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1467142461
    },
    {
        "content": "<p>Until some future time when we land on something better?</p>",
        "id": 153835505,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1467142485
    },
    {
        "content": "<p>For apps that only want display - we can require that display/text is populated on codeable or display is required on reference?</p>",
        "id": 153835506,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1467142522
    },
    {
        "content": "<p>I think it doesn't matter if it's contained or remote, but if you do remote references, it would be good to support _include (even if just for this use case)</p>",
        "id": 153835517,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467143419
    },
    {
        "content": "<blockquote>\n<p>I think it doesn't matter if it's contained or remote, but if you do remote references, it would be good to support _include (even if just for this use case)</p>\n</blockquote>\n<p>I have a very different take here <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> -- I think it's basically broken to offer developers an API where they're forced to issue 11 separate HTTP API calls just to fetch the drug codes associated with a patient's ten-medication-long list. We've built clients that work this way and they're complicated and slow. The complexity is manageable, but the slowness is not. Just being able to display a name isn't enough; interesting apps need access to semantics!</p>\n<p>The fixes for this include: always use <code>_contained</code>, or support <code>_include=MedicationOrder:medication</code>. But if you do neither, you leave clients in a lurch. And Argonaut should specify that that's not okay.</p>",
        "id": 153835654,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1467207796
    },
    {
        "content": "<p>Alternatively, vendors could support <code>batch</code> so an app could issue multiple queries together. We just need <strong>some way</strong>.</p>",
        "id": 153835691,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1467213848
    },
    {
        "content": "<p>Of course read-only batches would be fine.</p>",
        "id": 153835692,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1467213864
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> This specific instance doesn't require batch, but if you didn't support _include, it would require at least one more query, assuming the server supportted the _id parameter, correct? ie: get all medications, then get all the unique referenced id's like so: <br>\n/Medication?_id=1,2,3,4...</p>",
        "id": 153835699,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1467217421
    },
    {
        "content": "<p>(note: as to _include, I currently have no skin in this game other than trying to find a common approach since our references are either code or contained, so others should add/discuss here...)</p>",
        "id": 153835700,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1467217490
    },
    {
        "content": "<p>What I am understanding so far is that we need the following:<br>\n'.medicationCodeableConcept' = mandatory to support for both client and server<br>\n'.medicationReference' = mandatory to support for both client and server   <br>\n   need to agree on whether servers must always use contained ( this is current state of  IG)  or must support _include  or both ( whichi is what I think GG is saying)  -  If we only say must always support _include that does not preclude a reference from being  contained. </p>",
        "id": 153835704,
        "sender_full_name": "Eric Haas",
        "timestamp": 1467219782
    },
    {
        "content": "<p>Jenni: Indeed, comma-separated IDs are also a fine way to do this. I just want to make sure we have at least *one* required way that argonaut clients can rely on. Whether that's batch, or _id with commas, or _contained ,or _include -- just as long as we agree on at least one way.</p>",
        "id": 153835706,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1467221172
    },
    {
        "content": "<blockquote>\n<p>'.medicationCodeableConcept' = mandatory to support for both client and server</p>\n</blockquote>\n<p>This doesn't quite make sense. Are we saying that a server would be in violation of the spec it just happened to always use medicationReference? How would we decide?</p>",
        "id": 153835707,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1467221342
    },
    {
        "content": "<p>I think we'd have to say \"servers can choose, and clients must be prepared to deal with both\"</p>",
        "id": 153835708,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1467221353
    },
    {
        "content": "<p>Despite how great it would be if everyone used RXNorm as codeable when appropriate.  I'm OK with splitting the server and client requirements.     </p>",
        "id": 153835712,
        "sender_full_name": "Eric Haas",
        "timestamp": 1467223333
    },
    {
        "content": "<p>...for now</p>",
        "id": 153835713,
        "sender_full_name": "Eric Haas",
        "timestamp": 1467223349
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>: \"I have a very different take here\" - I didn't think this was a very different take - I agree. Perhaps 'would be good' wasn't expressed strongly enough...</p>",
        "id": 153835769,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467236990
    },
    {
        "content": "<p>Ah, great. I misinterpreted your emphasis. But good :-)</p>",
        "id": 153835781,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1467242620
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>Do you have any concerns if we require a server support <strong>code</strong> and <strong>contained</strong>; or always <strong>contained</strong>? I am trying to find the middle ground...</p>",
        "id": 153835804,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1467253317
    },
    {
        "content": "<p>my opinion is that all 3 cases - code, contained, and external reference - are all valid workflows. Even we we said that we could prohibit the first so that you always used code.contained - which is functionally equivalent - I see little prospect that other groups with different dynamics than Argonaut would make the same choice, particularly in the ambulatory context. So my opinion is that we might as well say that clients should support all 3 options, and servers can choose any combination of the three. </p>",
        "id": 153835816,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467256558
    },
    {
        "content": "<p>but since <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>  is always watching .... if we allow external references, we should make it clear what the most efficient way to retrieve all the medications information is</p>",
        "id": 153835817,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467256614
    },
    {
        "content": "<p>If I just keep repeating  myself... ;-)</p>\n<p>I think making it clear is good -- but we also need to clarify that at least one acceptably-fast method is required of Argonaut implementors. So far: <code>contained</code> and <code>_include</code> work (with no extra HTTP calls) and  <code>batch</code>, and <code>?_id=a,b,c,d,...</code> work (with one extra HTTP call). We need to pick at least one of these four and require it (or somebody can suggest a 5th!)</p>",
        "id": 153835889,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1467299625
    },
    {
        "content": "<p>I vote for<br>\n  - code<br>\n - contained<br>\n - _include<br>\nwhere  clients SHALL support all 3 options, and servers can choose any combination of the three.</p>",
        "id": 153835907,
        "sender_full_name": "Eric Haas",
        "timestamp": 1467303326
    },
    {
        "content": "<p>Is there a need to specify what clients shall support? Because that's usually not done.</p>",
        "id": 153836041,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1467370665
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191339\">@Pascal Pfiffner</span> DAF actually specifies both client and server behavior</p>",
        "id": 153836073,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1467388847
    },
    {
        "content": "<p>eg: requestors (client) and responders (server): <a href=\"http://hl7.org/fhir/dstu2/daf/daf.html#D.0.3.1\" target=\"_blank\" title=\"http://hl7.org/fhir/dstu2/daf/daf.html#D.0.3.1\">http://hl7.org/fhir/dstu2/daf/daf.html#D.0.3.1</a></p>",
        "id": 153836074,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1467389091
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> what exactly does it mean, for a client to have \"SHALL support\" both <code>contained</code> and <code>_include</code>? A client has to write a specific query -- which one would it write? If we said \"clients always are allowed to pass an <code>_include</code> parameter, and servers must accept it -- either by implementing _include, or by sticking meds in <code>contained</code>\", that could work.</p>",
        "id": 153836079,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1467391074
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> Isn't this scenario precisly what the conformance doc is expected to be used for?</p>",
        "id": 153836095,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1467394583
    },
    {
        "content": "<p>We have competing goals/previous discussions here</p>",
        "id": 153836096,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1467394595
    },
    {
        "content": "<p>EG: wanting servers to fail if known  but unsupportted parameters are passed vs. ignoring parameters they don't really support</p>",
        "id": 153836097,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1467394618
    },
    {
        "content": "<p>Well, maybe a server could have a way to express this in a conformance statement. We'd have to define two or three different patterns and require that each server fit one of those two or three, and that clients could then resolve/determine each and adjust behavior to fit? It's <strong>possible</strong>, but 1) I'm skeptical we can get it right, and 2) even if we do, I'm kind of worried about the complexity of it.</p>",
        "id": 153836111,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1467406433
    },
    {
        "content": "<p>Is summarized this discussion and subsequent offline discussion to: <a href=\"https://github.com/argonautproject/implementation-program/issues/46\" target=\"_blank\" title=\"https://github.com/argonautproject/implementation-program/issues/46\">https://github.com/argonautproject/implementation-program/issues/46</a></p>",
        "id": 153836126,
        "sender_full_name": "Eric Haas",
        "timestamp": 1467416265
    }
]