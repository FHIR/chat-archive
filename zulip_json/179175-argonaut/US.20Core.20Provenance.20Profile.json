[
    {
        "content": "<p>Hi Team,<br>\nI need a clarification whether a separate API needs to be built as part of USCore provenance profile for the provenance resource or provenance can support the profiles through search options provided in USCore Provenance. There is a statement given in the USCore server capability statement for Provenance as mentioned below - <br>\nFetch and Search Criteria for Provenance - <br>\nA Server SHALL be capable of returning a Provenance resource using:<br>\nGET [base]/Provenance/[id]<br>\nSo does this mean that in addition to support the provenance for other resources such as Observation or Allergy Intolerance or care plan <a href=\"http://etc.in\">etc.in</a> their API search option, Provenance itself is mandatory to have its own API with Provenance logical ID search? Please clarify.</p>",
        "id": 218323773,
        "sender_full_name": "SSM",
        "timestamp": 1606760022
    },
    {
        "content": "<p>Not sure what you mean. To 'to support the provenance for other resources such as Observation or Allergy' you need to implement the Provenance resource, and yes, that means that at the very least the server should support GETting Provenance doing a GET [base]/Provenance/[id]</p>",
        "id": 218325055,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1606760626
    },
    {
        "content": "<p>One would tend to get the Provenance thru the reverse include search parameter (_revinclude) on the other Resources. Thus there is not a need to mandate any specific Provenance search API. So what you see there is just retrieve, not a search.   This does mean that for all the other US-Core resources they MUST support the _revinclude search parameter.   The down side is that if you forgot to _revinclude, and you have an other Resource. You can't do a query against Provenance for target equal to that other Resource id. This is indeed not mandated.</p>",
        "id": 218327669,
        "sender_full_name": "John Moehrke",
        "timestamp": 1606761849
    },
    {
        "content": "<p>US Core IG says that system SHALL support search with <code>_revInclude=Provenance:target</code><br>\n<a href=\"http://hl7.org/fhir/us/core/StructureDefinition-us-core-provenance.html#mandatory-search-parameters\">http://hl7.org/fhir/us/core/StructureDefinition-us-core-provenance.html#mandatory-search-parameters</a></p>",
        "id": 218333075,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1606764221
    },
    {
        "content": "<p>@SSM Yes. Server SHALL support <strong>read</strong> Provenance using its id.</p>",
        "id": 218333280,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1606764318
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191506\">Yunwei Wang</span> <a href=\"#narrow/stream/179175-argonaut/topic/US.20Core.20Provenance.20Profile/near/218333280\">said</a>:</p>\n<blockquote>\n<p>@SSM Yes. Server SHALL support <strong>read</strong> Provenance using its id.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span> - Just to reconfirm are you recommending that Provenance will have a separate API apart from _revinclude search.</p>",
        "id": 218338530,
        "sender_full_name": "SSM",
        "timestamp": 1606766817
    },
    {
        "content": "<p>I don't quite understand what \"separate API\" mean. Just as IG states, server SHALL support <code>GET [base]/Provenance/[id]</code></p>",
        "id": 218342608,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1606768708
    },
    {
        "content": "<p>I was just distinguishing a GET id from a GET with search parameters.</p>",
        "id": 218343504,
        "sender_full_name": "John Moehrke",
        "timestamp": 1606769143
    },
    {
        "content": "<p>Separate API means i am referring to Provenance having its own API endpoint.</p>",
        "id": 218347307,
        "sender_full_name": "SSM",
        "timestamp": 1606770976
    },
    {
        "content": "<p>do you have the answer to the question? Yes you must support Provenance/id; you are not required to support Provenance search. But you are not forbidden from supporting Provenance search. Search by target would be helpful; but was not seen as universally supported by all possible servers that would be compelled to implement us-core</p>",
        "id": 218350858,
        "sender_full_name": "John Moehrke",
        "timestamp": 1606772894
    },
    {
        "content": "<p>Picking this back up - but in what case do folks think a <a href=\"http://Provenance.read\">Provenance.read</a> would make sense?</p>",
        "id": 244948892,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1625498796
    },
    {
        "content": "<p>Is anyone seeing use cases with Provenance contained as opposed to being returned in a searchset bundle along with it's target resource?  Or is this better for the implementers stream?</p>",
        "id": 245036068,
        "sender_full_name": "Douglas DeShazo",
        "timestamp": 1625577089
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span></p>",
        "id": 245055084,
        "sender_full_name": "David Pyke",
        "timestamp": 1625585226
    },
    {
        "content": "<p>What is the reasoning behind wanting it contained? the use of contained should be only used when there is not enough detail to standalone. A big problem I see with containment of Provenance is how revisions are handled.</p>",
        "id": 245055613,
        "sender_full_name": "John Moehrke",
        "timestamp": 1625585427
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> No reason was given.  I got involved with an implementation after the fact and was questioning the exact same thing.  My take is how you see it so I'm comfortable with my position.  Thanks again.  I'll try to get a reason for containing it and post here.</p>",
        "id": 245080883,
        "sender_full_name": "Douglas DeShazo",
        "timestamp": 1625596627
    }
]