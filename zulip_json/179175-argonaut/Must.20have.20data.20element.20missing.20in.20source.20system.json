[
    {
        "content": "<p>Hi, if any of mandatory where card is 1* or must have data element is missing as defined by IG, then what shall we display in response in facade FHIR. There may be data issue in source system where in response some data may not be available for mandatory or must have elements. Since we are having a FHIR facade layer without a fhir repository and the responses are real time from source system directly to the requester so in that case, can we errored out the entire response because for one data element the data is not available/bad or we need to restrict that particular data element is some way and show the rest of the response. Plz suggest.</p>",
        "id": 205810845,
        "sender_full_name": "SSM",
        "timestamp": 1596469774
    },
    {
        "content": "<p>Read the <a href=\"https://www.hl7.org/fhir/us/core/general-guidance.html#missing-data\">section on Missing data</a></p>",
        "id": 205811904,
        "sender_full_name": "Eric Haas",
        "timestamp": 1596470267
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> . But this concept can we also use in other IGs such as CARIN or DaVinci or this is only applicable for USCORE IG?</p>",
        "id": 206036444,
        "sender_full_name": "SSM",
        "timestamp": 1596641189
    },
    {
        "content": "<p>unless they prohibit you should be able to.</p>",
        "id": 206036747,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1596641333
    },
    {
        "content": "<p>Different IGs may set tighter expectations.  Da Vinci sets tighter expectations on profiles it defines, but follows US Core rules where we use US Core.  (The challenge with the US Core rules is that it allows implementers to omit <em>anything</em> - which means sharing data that can't be safely interpreted/used at all.  With most Da Vinci profiles, if a minOccurs = 1, data absent reason can only be used if it's explicitly contemplated (i.e. those places where we think it's reasonable to omit the element)</p>",
        "id": 206085187,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596666151
    },
    {
        "content": "<p>safely interpreted? US Core target use case is much broader -- and we wanted to give some flexibility for the messiness of real-world data</p>",
        "id": 206185567,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1596741823
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 206185656,
        "sender_full_name": "Eric Haas",
        "timestamp": 1596741857
    },
    {
        "content": "<p>Things like an Observation where the code is a DAR isn't terribly useful.  You may well have data in your system that looks like that, but exposing it via your interface doesn't accomplish much.</p>",
        "id": 206200685,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596750228
    },
    {
        "content": "<p>Same thing for no 'subject'</p>",
        "id": 206200771,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596750269
    },
    {
        "content": "<p>There are places where allowing systems to omit data can't help but break other systems - and it's better to just not expose those records that can't be usefully used in the first place.</p>",
        "id": 206200858,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596750326
    },
    {
        "content": "<p>So Far actual implementers have not commented on this.</p>",
        "id": 206201144,
        "sender_full_name": "Eric Haas",
        "timestamp": 1596750510
    },
    {
        "content": "<p>and has been around since Argonaut data query</p>",
        "id": 206201174,
        "sender_full_name": "Eric Haas",
        "timestamp": 1596750541
    },
    {
        "content": "<p>I consider it a moot point for now.</p>",
        "id": 206201327,
        "sender_full_name": "Eric Haas",
        "timestamp": 1596750631
    },
    {
        "content": "<p>Probably because no-one has tried to stretch the spec as far as it's allowed to go.  I'm pretty sure that if you tested systems sticking DAR everywhere it's technically allowed by US Core, a lot of apps would blow up.</p>",
        "id": 206201565,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596750824
    },
    {
        "content": "<p>Apps have to be pretty tolerant - stuff that comes back from production servers can be ... how can I put it? surprising?</p>",
        "id": 206202467,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1596751434
    },
    {
        "content": "<p>The required RESTful search parameters cull out the most problematic elements for DAR (you always are querying by subject, and for observations you are <em>almost</em> always querying by code).  Though those may be a problem when transmitted over something like the bulk data interface.</p>",
        "id": 206203047,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1596751816
    },
    {
        "content": "<p>The key question is why would we <em>allow</em> a resource to come back without the essential elements that allow you to use it?  There's no requirement to share garbage data.  If we can come up with scenarios where omitting the element would still allow utility, it shouldn't be 1..x.  If there are no such cases, we shouldn't allow DAR.  DAR is really only useful for those situations where \"if you're not going to give me the data, I have a business need to know why\".  I.e. It's not about a get-out-of-jail-free card for the sender, it's to provide relevant &amp; needed information to the recipient.  If something is important and should almost always be there, but there are legitimate reasons why it might occasionally be absent and if it's absent, the record is still at least somewhat useful, the element should be 0..x, mustSupport=true.</p>",
        "id": 206204451,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596752914
    },
    {
        "content": "<p>If you have a clear definition of '<em>the elements that allow you to use it</em>' then maybe that should be in base FHIR?</p>",
        "id": 206218749,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1596767465
    },
    {
        "content": "<p>Our goal is not to bake in a 'get out of jail free', it's to allow systems to return the best they got. Hopefully over time the consumer (client) will start reporting back poor data and it can improve over time. Thanks <span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span>  for your real-world response, sadly, I am not surprised.</p>",
        "id": 206218822,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1596767614
    },
    {
        "content": "<p>\"elements that allow you to use it\" are context-specific.  So it needs to be set by IGs.  But setting min=1, but then saying \"but anyone's free to ignore that if they've got bad data\" doesn't seem like it's going to produce interoperable solutions to me.</p>",
        "id": 206220143,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596769583
    },
    {
        "content": "<p>Some specific examples:</p>\n<ul>\n<li>AllergyIntolerance.code - how is it useful to capture an AllergyIntolerance but not say what they're allergic to?  (There's lots of uses for AllergyIntolerance that wouldn't query by code.)</li>\n<li>Condition.code - same issue</li>\n<li>DocumentReference.content - What's the point of metadata that doesn't point to or contain the content?</li>\n<li>everything.subject - Though it's true you'll almost always search by Patient, the reality is that it's not true that you <em>can</em> put a DAR on subject - so why do we say that you can?</li>\n</ul>",
        "id": 206220449,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596770044
    },
    {
        "content": "<p>I think we have different goals. I want to share the good, bad, ugly so we can make it better. Not lock it away to never see the light if day....</p>",
        "id": 206220820,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1596770619
    },
    {
        "content": "<p>I also firmly believe vendors are doing their best. They don't want to share crapola either.</p>",
        "id": 206220881,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1596770673
    },
    {
        "content": "<p>I'm not suggesting in any way that vendors aren't doing their best.  If the data is missing key elements, I'm not sure how exposing information that clients can't use provides opportunities to make it better.  I just think it creates complexity for clients - by meaning that they can't count on anything and have to treat bad data as 'valid'.</p>",
        "id": 206221761,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596772232
    },
    {
        "content": "<p>A pair of profiles:<br>\nSender-friendly: send whatever you have<br>\nReader-friendly: send something I can use</p>",
        "id": 206222857,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1596774195
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191410\">Brett Marquard</span> <a href=\"#narrow/stream/179175-argonaut/topic/Must.20have.20data.20element.20missing.20in.20source.20system/near/206218822\">said</a>:</p>\n<blockquote>\n<p>Our goal is not to bake in a 'get out of jail free', it's to allow systems to return the best they got. Hopefully over time the consumer (client) will start reporting back poor data and it can improve over time. Thanks <span class=\"user-mention silent\" data-user-id=\"191912\">Michele Mottini</span>  for your real-world response, sadly, I am not surprised.</p>\n</blockquote>\n<p>The realworld will always be messy beyond what any profile has said. The profile should not throw up their hands and stoop to the depth of these bad systems / data. The profile should set a realistic bar of appropriate data quality.    Apps better be written to be more robust than the profile defines, the world of bad data is well beyond what you could possibly explain. DAR will be ignored by most apps, they will see the data element they want is missing and discard that resource and move to the next. DAR is not helpful to most applications, only a few will handle it, and they  have few use-cases.</p>",
        "id": 206249265,
        "sender_full_name": "John Moehrke",
        "timestamp": 1596802211
    },
    {
        "content": "<p>in the last two weeks my developers have encountered three different  instances of garbage data from a FHIR api. the app that wrote it simply had a very different view of the world, they were not following us-core, they were ignorant of it.. to a human looking at the json, it was clear what they were recording, but not any pattern published in a profile. ..  but the point is that it came to our app, and we learned of yet another way that data can look.</p>\n<p>Postel's Law: Be strict when sending and tolerant when receiving. --- not just a good idea, it is the Interoperability LAW!</p>",
        "id": 206249560,
        "sender_full_name": "John Moehrke",
        "timestamp": 1596802461
    },
    {
        "content": "<p>The core question for me is whether an instance (and the system that produces it) can reasonably be conformant with the objectives of the US-Core IG if it shares an allergy that doesn't identify the subject or the allergen, or metadata about a document that doesn't actually point to the document in question.  If those instances aren't conformant with the intention and there's no value in the system sharing them, then don't define the profiles in a way that allows that to conformantly occur.</p>",
        "id": 206261343,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596809567
    },
    {
        "content": "<p>US Core is walking a fine line, it's trying to set a bar to move everyone forward -- in your example it's a shame they weren't using US Core! Certification with inferno will verify system capabilities, it will be important to get those out in the field.</p>",
        "id": 206277711,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1596817372
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191410\">@Brett Marquard</span> I don't understand.  Inferno (if it's just checking US core validity) would be totally happy with an AllergyIntolerance with a DAR for code or a DocumentReference with a DAR for content.</p>",
        "id": 206278230,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596817645
    },
    {
        "content": "<p>nope.</p>",
        "id": 206278276,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1596817677
    },
    {
        "content": "<p>That doesn't meet the \"US Core Responders SHALL be capable of populating all data elements\"</p>",
        "id": 206278440,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1596817744
    },
    {
        "content": "<p>aren't you on vacation?</p>",
        "id": 206278452,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1596817755
    },
    {
        "content": "<p>Vacation starts tomorrow.  I'm not talking about an application that's not capable.  I'm talking about an application that has garbage data - that we're allowing to be shared as conformant data.</p>",
        "id": 206278648,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596817854
    },
    {
        "content": "<p>Presumably the application would also have 'good' data that didn't use DAR in inappropriate places.</p>",
        "id": 206278700,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596817885
    },
    {
        "content": "<p>I'm very skeptical of the viewpoint that data must have certain content to be shared.  The real world is just far too messy for that to be successful.  If an IG were to prohibit the use of DAR, that just means that IG is prohibiting the sharing of real-world data.  I always bring up legacy data and patient-entered data.  Consider a patient-entered allergy that was provided during a time window when there was a bug in the form validation for the allergen.  The system has that data.  Preventing it from being shared is not appropriate for a data-sharing IG in my opinion.  I feel like the manta \"Garbage in, miracle out\" best describes how you have to approach healthcare data.</p>",
        "id": 206279159,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1596817995
    },
    {
        "content": "<p>1..* cardinality should mean \"in the future you should try your best to make sure you have this\", not \"all the historical data in the system must have this\".</p>",
        "id": 206279437,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1596818135
    },
    {
        "content": "<p>Otherwise, in conjunction with regulatory requirements, you'd be requiring that clinical users perform manual review and cleanup of years worth of clinical data.  Which practically just isn't gonna happen.</p>",
        "id": 206279588,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1596818200
    },
    {
        "content": "<p>mustSupport means \"try your best to have this\".  1..x says \"you can count on this being present\".</p>",
        "id": 206282143,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596819550
    },
    {
        "content": "<p>In the example where there was a bug in the form validation and a system receives a record that says \"Patient has an allergy to 'not available'\", what is anyone downstream supposed to do with that?</p>",
        "id": 206282309,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596819617
    },
    {
        "content": "<p>If the downstream is a patient app, they could review it and submit a correction (of course correction submission isn't quite there yet).  Or submit a deletion request.  Or if it is provider facing, and the reaction is severe for an unconscious patient, that might alter the treatment plan.</p>",
        "id": 206283850,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1596820464
    },
    {
        "content": "<p>Ultimately, \"low quality data\" is not currently an Info Blocking exception in the US.  So at least for data covered by Info Blocking, preventing the sharing of that data just because it is low quality is not an option.</p>",
        "id": 206283955,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1596820529
    },
    {
        "content": "<blockquote>\n<p>I don't understand. Inferno (if it's just checking US core validity) would be totally happy with an AllergyIntolerance with a DAR for code or a DocumentReference with a DAR for content.</p>\n</blockquote>\n<p>Inferno's US Core tests have profile-wide must support checks, which looks across all resources provided for each profile and determines if the system has demonstrated support for every must support in aggregate.  If they haven't yet, the test will 'SKIP' and ask the tester to choose a patient (or set of patients) with more complete data.  If the tests ever sees a resource that is invalid, on the other hand, it will FAIL the system.</p>",
        "id": 206289401,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1596823002
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"192576\">Robert Scanlon</span> <a href=\"#narrow/stream/179175-argonaut/topic/Must.20have.20data.20element.20missing.20in.20source.20system/near/206289401\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>I don't understand. Inferno (if it's just checking US core validity) would be totally happy with an AllergyIntolerance with a DAR for code or a DocumentReference with a DAR for content.</p>\n</blockquote>\n<p>Inferno's US Core tests have profile-wide must support checks, which looks across all resources provided for each profile and determines if the system has demonstrated support for every must support in aggregate.  If they haven't yet, the test will 'SKIP' and ask the tester to choose a patient (or set of patients) with more complete data.  If the tests ever sees a resource that is invalid, on the other hand, it will FAIL the system.</p>\n</blockquote>\n<p>Hi <span class=\"user-mention\" data-user-id=\"192576\">@Robert Scanlon</span> : \"must support\" is a tough thing to test: in the past we have had flavors of mandatory:  mandatory, required but null null, required but may be empty  [0..10] (e.g. allergies are mandatory/required but you may not have any allergy findings because you were not evaluated). <span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span>  and  <span class=\"user-mention\" data-user-id=\"191407\">@Rick Geimer</span>   joined us for a discussion in Sydney where we discussed this topic (see Minutes: US Realm Conformance Testing PSS topci <a href=\"https://confluence.hl7.org/display/CONF/2020-02+Conformance+Meeting+Notes\">https://confluence.hl7.org/display/CONF/2020-02+Conformance+Meeting+Notes</a> ) . *To address the testing challenges wiht \"must support\" * we agreed to create an extension for ElementDefinition (<a href=\"http://build.fhir.org/elementdefinition.html#ElementDefinition\">http://build.fhir.org/elementdefinition.html#ElementDefinition</a>) that will become an enhancement for future a future release but it be available for US Core  in FHIR R4+ *. <br>\nWe are meting to discuss the proposed  _Conformance Usage Indicator_ extension during the Conformance WG calls - starting next week and during the virtual HL7 WGM: <a href=\"https://confluence.hl7.org/display/CONF/Conformance%2C+Guidance+and+Best+Practices+for+FHIR+Implementation+Guides+Project\">https://confluence.hl7.org/display/CONF/Conformance%2C+Guidance+and+Best+Practices+for+FHIR+Implementation+Guides+Project</a></p>\n<p>For anyone interested in discussing this topic, you are welcome to join us: <a href=\"https://confluence.hl7.org/display/CONF/Call+Information\">https://confluence.hl7.org/display/CONF/Call+Information</a></p>",
        "id": 206465798,
        "sender_full_name": "Ioana Singureanu",
        "timestamp": 1597069208
    }
]