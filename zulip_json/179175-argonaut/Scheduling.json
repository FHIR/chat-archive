[
    {
        "content": "<p>In the scheduling IG, this section on <a href=\"http://www.fhir.org/guides/argonaut/scheduling/patient-scheduling.html#use-case-2-open-scheduling-for-new-patient-or-existing-patient\" target=\"_blank\" title=\"http://www.fhir.org/guides/argonaut/scheduling/patient-scheduling.html#use-case-2-open-scheduling-for-new-patient-or-existing-patient\">open scheduling for patients</a> suggests that a scheduling client can post a new patient to the EHR:</p>\n<blockquote>\n<p>New Patients<br>\nTo register a new patient, The Client SHALL use the standard FHIR RESTful create API as follows:<br>\nPOST [base]/Patient</p>\n</blockquote>",
        "id": 167232476,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1559596215
    },
    {
        "content": "<p>Has this been implemented by anyone? <span class=\"user-mention\" data-user-id=\"195162\">@Brandon LaRue</span> do you have any context on this?</p>",
        "id": 167232532,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1559596273
    },
    {
        "content": "<p>Cerner has a non-Argonaut scheduling implementation that has implemented a patient create. <a href=\"https://fhir.cerner.com/millennium/dstu2/individuals/patient/#create\" target=\"_blank\" title=\"https://fhir.cerner.com/millennium/dstu2/individuals/patient/#create\">https://fhir.cerner.com/millennium/dstu2/individuals/patient/#create</a></p>",
        "id": 167239711,
        "sender_full_name": "Brandon LaRue",
        "timestamp": 1559602496
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> is this Patient create used as part of Cerner's open scheduling support?</p>",
        "id": 167314817,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1559667871
    },
    {
        "content": "<p>Yes</p>",
        "id": 167314867,
        "sender_full_name": "Drew Torres",
        "timestamp": 1559667925
    },
    {
        "content": "<p>Thanks Drew! For clients that call this API, how are they authorized/authenticated? Is this a SMART Backend Services type scenario?</p>",
        "id": 167314954,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1559667981
    },
    {
        "content": "<p>Yes and no. We haven't fully implemented SMART Backend Services, but it is the client credential flow for OAuth using the SMART scopes of system/Patient.create</p>",
        "id": 167315136,
        "sender_full_name": "Drew Torres",
        "timestamp": 1559668109
    },
    {
        "content": "<p>Cool!</p>",
        "id": 167315367,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1559668278
    },
    {
        "content": "<p>Epic also supports patient.create for our Argonaut scheduling implementation.  One caveat is that our current implementation of the Argonaut scheduling IG is \"provider-to-provider\".  I.e. we don't use FHIR for open patient self-scheduling.  We also use OAuth2 client credentials.</p>",
        "id": 167338764,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1559685057
    },
    {
        "content": "<p>Thanks! I'm curious for the open patient scheduling scenario: has anyone considered a workflow that looks a bit more like airline booking, where the available slots are exposed to various scheduling apps through a read API but a user is sent over to the health system via deep link to actually complete the booking?</p>",
        "id": 167338884,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1559685203
    },
    {
        "content": "<p>The slots are open, but the user being sent over via deep link may be problematic. They don't have a person record, and as such the app has to establish the person record before allowing the patient to complete booking.</p>",
        "id": 167390163,
        "sender_full_name": "Drew Torres",
        "timestamp": 1559742663
    },
    {
        "content": "<p>I guess the question is why does the app need to do this part? When I click from Travelocity to Delta, they don't need to send Delta a record who I am</p>",
        "id": 167390855,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1559743107
    },
    {
        "content": "<p>In this analogy, the app is travelocity and the health system is Delta</p>",
        "id": 167390872,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1559743119
    },
    {
        "content": "<p>But someone does collect demographics from you to complete the booking.</p>",
        "id": 167391448,
        "sender_full_name": "Drew Torres",
        "timestamp": 1559743467
    },
    {
        "content": "<p>Yes, and I'm wondering if this could be captured at the health system (e.g. in their web portal, etc).</p>",
        "id": 167391494,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1559743505
    },
    {
        "content": "<p>Just trying to understand the design of the current system, which has a lot of moving parts on the standards level and has not yet and widely adopted.</p>",
        "id": 167391525,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1559743532
    },
    {
        "content": "<p>I seem to require a lot of trust in third party apps, to look up arbitrary patient and create new records, etc. System level trust.</p>",
        "id": 167391689,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1559743626
    },
    {
        "content": "<p>What is the problem you are trying to understand? I may be oversimplifying, but what you describe seems identical to what is happening in production today with the APIs we provide.</p>",
        "id": 167391708,
        "sender_full_name": "Drew Torres",
        "timestamp": 1559743642
    },
    {
        "content": "<p>Cerner may have an API like this in production for open scheduling, but I'm not sure that others do. and I'm not sure what it takes for me to develop an app that's allowed to connect to the Cerner endpoints. Seems like I would need to achieve a very high level of trust.</p>",
        "id": 167391841,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1559743718
    },
    {
        "content": "<p>I'm just coming late to the discussion and trying to understand the trade-offs that went into it</p>",
        "id": 167391897,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1559743775
    },
    {
        "content": "<p>You are absolutely correct about the high level of trust to create appointments. We view this feature as a \"premium\" capability that requires additional vetting of the developers trying to interact with these particular APIs.</p>",
        "id": 167396118,
        "sender_full_name": "Drew Torres",
        "timestamp": 1559746092
    },
    {
        "content": "<p>There is a bit of a chicken and egg problem too because some organizations don't support self scheduling at all. So deep linking may result in a site that gives you a phone number to call.</p>",
        "id": 167396176,
        "sender_full_name": "Drew Torres",
        "timestamp": 1559746136
    },
    {
        "content": "<p>But to counter your point a bit though about the high bar. At Cerner, we have open sandbox that allows you to test all of this functionality with no interaction from us or our clients (the registration may take a day or 2 while we provision the system app), but the discovery/R&amp;D phase should quickly determine whether the desired goal is achievable.</p>",
        "id": 167396515,
        "sender_full_name": "Drew Torres",
        "timestamp": 1559746306
    },
    {
        "content": "<p>OK, thanks! A sandbox is great, but dev tooling a separate question from production support.</p>",
        "id": 167409150,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1559754198
    },
    {
        "content": "<p>Are there organizations that <em>do</em> support self scheduling through some kind of form where deep links would work? Or would that be imagining whole new kinds of capability from scratch?</p>",
        "id": 167409177,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1559754231
    },
    {
        "content": "<p>That does exist in the wild. It is generally coupled with the identity provider. Health systems that protect their infrastructure using their own homegrown or purchased IdP have their own mechanisms that allow for this user record to be created. Depending on the \"level of validity\" the user may be allowed to do different things (view education vs actually scheduling). When a client is using Cerner's portal they would step through our account creation and scheduling workflows.</p>\n<p>Both scenarios aren't always ideal because it requires the account to be created. Some health systems don't want to create barriers and just want the patient to have a confirmed appointment. There has been some supporting information about the likelihood of canceled appointments being lowered because it was self scheduled. </p>\n<p>I think ultimately answers/desired states will vary amongst the different health systems. I have had a health system tell me: \"I don't even care if EMPI happens. I want new patients to be able to book online.\"</p>",
        "id": 167410599,
        "sender_full_name": "Drew Torres",
        "timestamp": 1559755242
    }
]