[
    {
        "content": "<p>What's the link to the Google Doc with topics for this session?  <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> <span class=\"user-mention\" data-user-id=\"191410\">@Brett Marquard</span></p>",
        "id": 175711899,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568484724
    },
    {
        "content": "<p>Here is a <a href=\"https://docs.google.com/document/d/1OUeAN0c8Juuu4Djqmt979svL3O-tQ2TvidS5BX4mAho/edit\" target=\"_blank\" title=\"https://docs.google.com/document/d/1OUeAN0c8Juuu4Djqmt979svL3O-tQ2TvidS5BX4mAho/edit\">link</a></p>",
        "id": 175712072,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1568485045
    },
    {
        "content": "<p>on the connectathon track too.</p>",
        "id": 175712127,
        "sender_full_name": "Eric Haas",
        "timestamp": 1568485130
    },
    {
        "content": "<p>For the merge / unmerge issue I came up with <a href=\"https://github.com/CareEvolution/Public/blob/master/IsDataValid.md\" target=\"_blank\" title=\"https://github.com/CareEvolution/Public/blob/master/IsDataValid.md\">https://github.com/CareEvolution/Public/blob/master/IsDataValid.md</a></p>",
        "id": 175745036,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1568547188
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193764\">@Ricky Bloomfield</span> <span class=\"user-mention\" data-user-id=\"191339\">@Pascal Pfiffner</span> ^</p>",
        "id": 175745040,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1568547218
    },
    {
        "content": "<p>Concerns with using the Patient.link field? Or a redirect if it's gone?</p>",
        "id": 175749219,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568554419
    },
    {
        "content": "<p>Though for DSTU 2, we would need an extension for the bidirectional link between two</p>",
        "id": 175749272,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568554449
    },
    {
        "content": "<p>Though I actually would like to get this to subscription eventually</p>",
        "id": 175749275,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568554467
    },
    {
        "content": "<p>See also: <a href=\"#narrow/stream/179229-subscriptions/topic/combine.2Funcombine\" title=\"#narrow/stream/179229-subscriptions/topic/combine.2Funcombine\">https://chat.fhir.org/#narrow/stream/179229-subscriptions/topic/combine.2Funcombine</a></p>",
        "id": 175749298,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568554507
    },
    {
        "content": "<p>Thanks Michele – an operation could do the job but ideally we can do without. I like the Patient.link properties to detect these changes. We could either _then_ run an operation like Michele suggests or just blow away the data we have and do a re-pull.</p>",
        "id": 175749733,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1568555169
    },
    {
        "content": "<p>In our server link would not change</p>",
        "id": 175749807,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1568555304
    },
    {
        "content": "<p>link doesn't change with merge/unmerge</p>",
        "id": 175749825,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568555343
    },
    {
        "content": "<p>Also: there could be other things beside merge / unmerge that cause those kind of changes: permissions changes for example, or actual physical data deletion</p>",
        "id": 175749835,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1568555372
    },
    {
        "content": "<p>there could be</p>",
        "id": 175749957,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568555586
    },
    {
        "content": "<p>I think what we're saying is that <code>Patient.link</code> should change. There are the \"replaces\" and \"replaced-by\" codes that seem suitable on merge/unmerge.</p>",
        "id": 175749963,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1568555623
    },
    {
        "content": "<p>There are several challenges with Patient.link though.  Adding a link makes the patient resource include data for multiple patients.  Even if they are merged and conceptually the same, they are different records, and a client that has SMART scopes only for a single patient might not be allowed to see the content in Patient.link.</p>",
        "id": 175750373,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568556181
    },
    {
        "content": "<p>Let's walk through 2 scenarios:</p>",
        "id": 175750813,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568556834
    },
    {
        "content": "<p>(from the perspective of how our server works, please add/comment/etc where yours is different)</p>",
        "id": 175750856,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568556847
    },
    {
        "content": "<p>You are Patient A</p>",
        "id": 175750862,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568556856
    },
    {
        "content": "<p>Scenario 1: Patient A is merged to Patient B</p>",
        "id": 175750869,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568556874
    },
    {
        "content": "<p>In our system, no data is on Patient A anymore, PatientA.link= replaced-by -&gt; Patient B</p>",
        "id": 175750880,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568556904
    },
    {
        "content": "<p>You also can no longer get refresh tokens for Patient A</p>",
        "id": 175750886,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568556913
    },
    {
        "content": "<p>So an app will see a refresh failure, and will be required to log in again</p>",
        "id": 175750888,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568556926
    },
    {
        "content": "<p>at which point, they'll either not be able to log in, or (if the merge was done correctly), they'll now be Patient B</p>",
        "id": 175750896,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568556947
    },
    {
        "content": "<p>This essentially \"forces\" a clean up</p>",
        "id": 175750939,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568556965
    },
    {
        "content": "<p>but it would be nice if Patient B.link = replaces -&gt; Patient A for sanity on those apps. IE: did you log in as a completely different person? Or did a merge occur?</p>",
        "id": 175750949,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568557001
    },
    {
        "content": "<p>Scenario 2: Patient B is merged into Patient A</p>",
        "id": 175750953,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568557011
    },
    {
        "content": "<p>All data is moved to Patient A (which is who you are logged in as)</p>",
        "id": 175750961,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568557021
    },
    {
        "content": "<p>PatientA.link now = replaces -&gt; Patient B</p>",
        "id": 175750969,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568557039
    },
    {
        "content": "<p>App should force-refresh whole record because data has now \"magically\" appeared in the past</p>",
        "id": 175750973,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568557058
    },
    {
        "content": "<p>for me, if I merge patient B into Patient A, then Patient B goes away; it no longer exists anywhere, and it's not longer referenced anywhere. So GET /Patient/B fails. And so there's no link either</p>",
        "id": 175751023,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568557100
    },
    {
        "content": "<p>Scenario A:  A difference for our server is that instead of PatientA.link.replaced-by -&gt; Patient B, we delete patient A and return a 301 to patient B when attempting to access patient A.</p>",
        "id": 175751030,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568557123
    },
    {
        "content": "<p>At no point are there multiple patient ids in the system on the same set of data, and I think if there were that wouldn't qualify as a replaces or replaced-by link based on the definition</p>",
        "id": 175751034,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568557128
    },
    {
        "content": "<p>How do you know to 301 it?</p>",
        "id": 175751049,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568557154
    },
    {
        "content": "<p>me? it's not there anymore.</p>",
        "id": 175751052,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568557168
    },
    {
        "content": "<p>but how do you know where to redirect to?</p>",
        "id": 175751059,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568557189
    },
    {
        "content": "<p>I don't redirect. Since apps don't check. Patient B is a 404</p>",
        "id": 175751060,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568557192
    },
    {
        "content": "<p>(also <span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span> )</p>",
        "id": 175751061,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568557192
    },
    {
        "content": "<p>and if the patient is the context, this will be sorted out by killing their session and making them log in again, when the id is sorted out again</p>",
        "id": 175751122,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568557231
    },
    {
        "content": "<p>How about when their patient suddenly gets data?</p>",
        "id": 175751126,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568557245
    },
    {
        "content": "<p>how would they know to refresh the record? (if they were the merged to patient)</p>",
        "id": 175751130,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568557260
    },
    {
        "content": "<p>because they are looking at Patient A?</p>",
        "id": 175751139,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568557262
    },
    {
        "content": "<p>the app gets it as new data following whatever approach it uses.</p>",
        "id": 175751143,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568557286
    },
    {
        "content": "<p>though I do like Michele's approach to get a 'refresh everything' for some reason or other</p>",
        "id": 175751147,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568557311
    },
    {
        "content": "<p>For us, we do a full copy of both patient records before the merge (so we can unmerge).  So we use indexes on those copy records to determine that the requested ID is merged.  So we do have database concepts for the \"deleted\" patient, but they aren't patient records.</p>",
        "id": 175751150,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568557320
    },
    {
        "content": "<p>The refresh everything trigger is why I'm trying to figure out how to do it as subscription, though that won't be there for a while in the standard</p>",
        "id": 175751191,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568557338
    },
    {
        "content": "<p>Cooper, what do you do with newly added inforamtion between the merge and the unmerge?</p>",
        "id": 175751198,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568557367
    },
    {
        "content": "<p>It needs manual review.  You can only automatically unmerge if no new data was added.</p>",
        "id": 175751227,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568557415
    },
    {
        "content": "<p>To me, unmerge is actually the most troubling one. You need to get the bad data off of the patient that existed the whole time.</p>",
        "id": 175751307,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568557542
    },
    {
        "content": "<p>As soon as you can</p>",
        "id": 175751310,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568557553
    },
    {
        "content": "<p>Yeah, but unmerge seems like just a special case of co-mingled data.</p>",
        "id": 175751354,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568557566
    },
    {
        "content": "<p>but both scenarios (missing data and having extra data) can cause issues</p>",
        "id": 175751356,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568557572
    },
    {
        "content": "<p>at the least we can all agree that this is a mess. That's way I like falling back to 'start again'</p>",
        "id": 175751468,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568557779
    },
    {
        "content": "<p>For an API consumer, the ideal outcome would be for the loser patient (B) to still be available, so I can see that it's been replaced. I'd prefer that to a 301 (but that is workable). A 404 or the patient just going away is not ideal. The issue is if I can't actually get an access token for patient B anymore, ideally that would still be possible.</p>",
        "id": 175751535,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1568557842
    },
    {
        "content": "<p>(and I'm trying to talk like I was a naïve REST API consumer – which is only half lying ;) )</p>",
        "id": 175751553,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1568557905
    },
    {
        "content": "<p>I really dislike 301 as unsafe because we know that people let their stack handle that automatically, and they won't know that they've shifted patients without specifically checking.</p>",
        "id": 175751602,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568557953
    },
    {
        "content": "<p>You all seem to be assuming that a merge is a 'merge into' - with a patient going away - that's not the case in our system - and I think in all HIE systems</p>",
        "id": 175751604,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1568557961
    },
    {
        "content": "<p>In the scenarios Jenni listed, you were logged in as patient A.  So you wouldn't have had access to patient b to begin with.</p>",
        "id": 175751605,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568557961
    },
    {
        "content": "<p>of course, I wrote in IPA that clients SHALL check that, but I'm not sure that'll stick</p>",
        "id": 175751612,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568557983
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> what's a merge if it's not a merge?</p>",
        "id": 175751616,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568557994
    },
    {
        "content": "<p>We have a 'record group' = all patients that have been linked together. Merge or split are move a patient from one record group to another (and remove the record group if it is empty)</p>",
        "id": 175751692,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1568558141
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span> You could be logged in to either, right? If you're logged into A it's a smaller problem – you just get more data.</p>",
        "id": 175751713,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1568558163
    },
    {
        "content": "<p>Person sort of could function like that</p>",
        "id": 175751739,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568558172
    },
    {
        "content": "<p>But Michele, that still means you move resources from one patient to another. So you could still add the link.</p>",
        "id": 175751745,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1568558202
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191339\">@Pascal Pfiffner</span> I think the issue is more about which user accounts are still active after the merge, not which patients.  If we determine that the patient B account and tokens can remain active, then it can just pull patient A data.</p>",
        "id": 175751759,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568558231
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191339\">@Pascal Pfiffner</span>  Depends on our FHIR server is configured - the recommended way is FHIR patient = our record group, so there is literally nothing to put in link</p>",
        "id": 175751823,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1568558331
    },
    {
        "content": "<p>Sure, but  that is an issue I cannot comment on because it's implementation details on the server side. All I know is \"I have a token for B\" and \"I can read resources for patient B\". A redirect to patient A is an anomaly because it no longer matches a) what my token is saying and b) what I had. Therefore, if all I can access anymore is patient B as inactive with a reference to patient A, my world is still in order and I can act.</p>",
        "id": 175751836,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1568558359
    },
    {
        "content": "<p>^^ <span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span></p>",
        "id": 175751842,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1568558379
    },
    {
        "content": "<p>but I was referring to 'after a merge patient B goes away and so cannot login' - this might not be true</p>",
        "id": 175751890,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1568558404
    },
    {
        "content": "<p>I consider \"Patient B goes away after a merge and/or can no longer login\" an issue.</p>",
        "id": 175751907,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1568558446
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191339\">@Pascal Pfiffner</span> the \"no longer login\" is complicated (for us).  There are several cases here:<br>\n1. Neither of the two Patient records has a User record associated with it.  (N/A for you, since the user won't be able to authorize Apple)<br>\n2. Only the source Patient record has a User record associated with it.<br>\n3. Only the destination Patient record has a User record associated with it.<br>\n4. Both the source and destination Patient records have User records associated with them.<br>\nIn cases 2 and 3, the User record will automatically get access to the resultant patient.<br>\nIn case 2, the FHIR ID will change.<br>\nIn case 3, the FHIR ID will remain the same.<br>\nIn case 4, we have several options for how and if to auto-merge user accounts, so your mileage may vary.</p>",
        "id": 175752294,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568559016
    },
    {
        "content": "<p>So the \"no longer able to login\" issue is really related to #4, which is really about User account merging more than patient merging.</p>",
        "id": 175752380,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568559141
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span> Yes, I recognize this is complicated. I'm trying to think how a \"vanilla\" solution could work, thinking I know only what I know, which is what SMART specifies (token bound to Patient) and what Argonaut exposes.</p>",
        "id": 175752381,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1568559143
    },
    {
        "content": "<p>this discussion mirrors the discussion the Merge track at fhir connectathon had.  see the output on the <a class=\"stream\" data-stream-id=\"179254\" href=\"/#narrow/stream/179254-patient-administration-WG\">#patient administration WG</a></p>",
        "id": 175753224,
        "sender_full_name": "John Moehrke",
        "timestamp": 1568560518
    },
    {
        "content": "<p>So far my conclusion is: We're going to have to build an IG around the subscription for combine and uncombine. Allow for many different ways of qualifying that will work for most systems</p>",
        "id": 175754262,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568562168
    },
    {
        "content": "<p>The url for the topic will point to the IG, which is how an app knows \"This is the subscription you want\"</p>",
        "id": 175754273,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568562196
    },
    {
        "content": "<p>But each system will/may define criteria so that it works for the underlying implementation</p>",
        "id": 175754277,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568562223
    },
    {
        "content": "<p>What we really need to do then (if that is an accurate conclusion) is make sure the Topic can handle the scenarios</p>",
        "id": 175754323,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568562248
    },
    {
        "content": "<p>One gap we've identified is the lack of ability to trigger on Operation success (failure??). I assume the outcome of the operation would have to come into play here</p>",
        "id": 175754332,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568562277
    },
    {
        "content": "<p>This only deals with the <em>notify</em> part of the merge/unmerge, not the logistics of how to trigger a merge</p>",
        "id": 175754346,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568562313
    },
    {
        "content": "<p>OTOH, without subscription (eg: for DSTU 2 servers that are in the wild today), we need to figure out something as well</p>",
        "id": 175754406,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568562403
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span>  for this statement: \"There are several challenges with Patient.link though. Adding a link makes the patient resource include data for multiple patients. Even if they are merged and conceptually the same, they are different records, and a client that has SMART scopes only for a single patient might not be allowed to see the content in Patient.link.\"</p>",
        "id": 175754640,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568562761
    },
    {
        "content": "<p>For us, the link only exists while the system thinks they're conceptually the same. I am curious how RelatedPerson works if the primary concern is the relationship to another record in your system (or was this just a general concern)?</p>",
        "id": 175754665,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1568562812
    },
    {
        "content": "<p>Actually, let me retract my comment about Patient.link in this case.  I was focused on what we currently do, and some internals for how we represent stuff.  I think we could support Patient.link[replaces].    I'm still not liking the Patient.link[replaced-by] though.   I'm open to being convinced though.</p>",
        "id": 175754988,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1568563356
    },
    {
        "content": "<p>Patient.link[replaced-by] would be neat to detect that you were logged in to patient B (the merge loser in our previous exchanges) and would clearly state to me as a client what happened (merged away) and what I need to do (quarantaine the data, ask the user to log in again, which will give dem new tokens for the new patient ID, which I could even validate – to check that they didn't pick somebody else entirely). Of course this is only useful if I can actually access that Patient resource, i.e. the refresh  tokens stay alive.</p>",
        "id": 175755680,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1568564621
    },
    {
        "content": "<p>to more fun topics for today's breakout</p>\n<p>hidden server values - redux<br>\ndiagnosticreport profile search conformance by profile<br>\nsummary of outcomes </p>\n<p>Here is a <a href=\"https://docs.google.com/document/d/1OUeAN0c8Juuu4Djqmt979svL3O-tQ2TvidS5BX4mAho/edit\" target=\"_blank\" title=\"https://docs.google.com/document/d/1OUeAN0c8Juuu4Djqmt979svL3O-tQ2TvidS5BX4mAho/edit\">link</a></p>",
        "id": 175757612,
        "sender_full_name": "Eric Haas",
        "timestamp": 1568567660
    }
]