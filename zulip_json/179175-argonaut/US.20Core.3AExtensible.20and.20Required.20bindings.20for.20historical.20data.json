[
    {
        "content": "<p>This was discussed a bit in <a href=\"#narrow/stream/179175-argonaut/topic/Interacting.20with.20payment.20world\" title=\"#narrow/stream/179175-argonaut/topic/Interacting.20with.20payment.20world\">this other topic</a>, but I thought it deserved it's own topic.  US Core defines some extensible and required valueset bindings.  For example, <a href=\"https://build.fhir.org/ig/HL7/US-Core-R4/StructureDefinition-us-core-diagnosticreport-lab.html\" target=\"_blank\" title=\"https://build.fhir.org/ig/HL7/US-Core-R4/StructureDefinition-us-core-diagnosticreport-lab.html\">DiagnosticReport (labs)</a> binds the code property to LOINC, presumably due to USCDI.  However this is a problem when dealing with historical or 3rd-party (e.g. payor) provided data.  For example, we might have lab results in our system where we only have a CPT code (i.e. we got the lab data from a payer). Per the <a href=\"http://hl7.org/fhir/R4/terminologies.html#extensible\" target=\"_blank\" title=\"http://hl7.org/fhir/R4/terminologies.html#extensible\">definition of extensible</a>, that means we <em>cannot</em> send the CPT code we have in our system if there is an applicable concept for that same thing in the bound valueset.  Similarly if the lab was preformed in some other country that doesn't use LOINC for their labs, etc..  For a few data types, including labs specifically, we stamp the codes on the record based on what we get from the source system (e.g. the lab).  That \"stamping\" may have happened 10 years ago or more, and the data may be from a lab system that has been replaced.</p>\n<p>I totally understand the desire to have data coded in a consistent terminology.  But it seems like the basic concept of required and extensible bindings don't fit will with the real world of historical data, patient-provided data, 3rd-party data, international data exchange, and end user behavior, all of which can contribute to data that may be coded in a different code system than desired by a particular IG. </p>\n<p>So I'm struggling with how to reconcile the valueset requirements from the US Core spec (and really any IG) with the real-world limitations of the *data *that HIT systems have.  While our EHR system can handle data with the desired terminologies, when we aren't the source of the data there isn't much we can do.  And specifically for 21st Century Cures (which we expect will include options for \"real world testing\" for certification), if real world data is coded in such a way that is incompatible with the US Core valueset binding requirements, what should we do?</p>",
        "id": 179276412,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1572297185
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191914\">@Danielle Friend</span></p>",
        "id": 179276552,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1572297293
    },
    {
        "content": "<p>Also, do ONC or Inferno folks have input on how real-world testing will interact with (for example) international data?  I.e. how strict will the terminology validation be?  Will all data for a select patient need to pass terminology validation, regardless of it's provenance?  Or at least one record for each data class?  I'd suggest the latter, as that would mean real world systems could actually pass <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> .</p>",
        "id": 179277064,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1572297613
    },
    {
        "content": "<p>I think we definitely still need clarification on the rules for this.  Limiting (if possible) testing and certification requirements to current \"locally owned\" data could help with that aspect, but if sending this type of historical or 3rd party data is still technically non-compliant with the specification, then that is still a problem.</p>",
        "id": 179281536,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1572300871
    },
    {
        "content": "<p>with regard to international data - other countries will write their own coding requirements. US coding rules won't apply outside USA. Or are you asking about international data in US context?</p>",
        "id": 179302284,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572328038
    },
    {
        "content": "<p>More generally, what I propose on this is that we change the bindings in US Core to allow for what terminologies are known to occur in the real world, and define an extension that expresses the regulatory rules for new data, with an extensible binding that says what policy says</p>",
        "id": 179302344,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572328134
    },
    {
        "content": "<p>When you say \"define an extension,\" what do you have in mind?</p>",
        "id": 179326882,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572354662
    },
    {
        "content": "<p>For me, real-world testing isn't a process with a binary outcome; it's a way for organizations to see \"how are we doing overall\" -- with the idea that once you can measure, you're inclined to think about opportunities to improve.</p>",
        "id": 179327019,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572354740
    },
    {
        "content": "<p>To be useful in the long run, you'd want to reveal things like, \"for patients we send to lab X, or specialist Y, we see 80% have improperly coded procedures, vs our baseline of 20%\".</p>",
        "id": 179327224,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572354929
    },
    {
        "content": "<p>Should we introduce a new type of binding called \"best practice\" where you get a warning if you don't follow it but you're not non- conformant if the code you send is expressive in the value set but not mapped?</p>",
        "id": 179327604,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572355244
    },
    {
        "content": "<p>IETF has normative words for that documented in IETF RFC 6919 \" Further Key Words for Use in RFCs to Indicate Requirement Levels\"<br>\nThe key words \"MUST (BUT WE KNOW YOU WON'T)\", \"SHOULD CONSIDER\",<br>\n   \"REALLY SHOULD NOT\", \"OUGHT TO\", \"WOULD PROBABLY\", \"MAY WISH TO\",<br>\n   \"COULD\", \"POSSIBLE\", and \"MIGHT\" in this document are to be<br>\n   interpreted as described in RFC 6919.<br>\nan April 1st RFC -- April Fools</p>",
        "id": 179328888,
        "sender_full_name": "John Moehrke",
        "timestamp": 1572356332
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> The international use case I'm thinking of is something like this:<br>\n1) A US patient is traveling overseas, receives care in some other country.<br>\n2) A CDA (for example) is sent from that other country back to the patient's home health system in the US.<br>\n3) Data from that international treatment is reconciled into the US-based system.<br>\n4) Patient then accesses their data from their US provider via FHIR / US Core, where some of the data the US system has originated from outside the US.</p>\n<p>Step #3 is a little hand-wavy, since I don't think the international codes are normally retained.  I mostly meant this to illustrate that data capture can be all over the map (pun intended).</p>",
        "id": 179344731,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1572365369
    },
    {
        "content": "<p>The idea that ONC will invent a way to test extensible for historical data when crucicable/Hl7 validators can't even enforce seems cruel and unusual</p>",
        "id": 179349384,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1572368122
    },
    {
        "content": "<p>So Cooper what are you suggesting?  Give up on standard terminology - on the basis that there will alway be legacy data or some outliers?</p>",
        "id": 179355889,
        "sender_full_name": "Eric Haas",
        "timestamp": 1572371944
    },
    {
        "content": "<p>nah, I think Cooper is saying be realistic that legacy data exists</p>",
        "id": 179361010,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1572374602
    },
    {
        "content": "<blockquote>\n<p>The idea that ONC will invent a way to test extensible for historical data when crucicable/Hl7 validators can't even enforce seems cruel and unusual</p>\n</blockquote>\n<p>The idea that the documentation won't say what actually happens because of a combination of the confusion around extensible per se and the confusion around regulation for current practices and catering for legacy daa is also cruel and unusual</p>",
        "id": 179363799,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572376405
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span> that's certainly a possible scenario in the future but </p>\n<blockquote>\n<p>A CDA (for example) is sent from that other country back to the patient's home health system in the US</p>\n</blockquote>\n<p>could only be via IPS right now? (either CDA or FHIR, but I predict that outside Europe, the FHIR variant will be more likely to get traction)</p>",
        "id": 179363896,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572376477
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 179366537,
        "sender_full_name": "Eric Haas",
        "timestamp": 1572378108
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> I'm saying that we need a binding that both communicates what we *hope *is true now and in the future, but also allows for what <em>was</em> true in the past.  I don't know that I see the current definition of extensible being practically useful in many systems, so it might be that we just update that definition to allow for messy data.</p>",
        "id": 179366799,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1572378268
    },
    {
        "content": "<blockquote>\n<p>the confusion around extensible</p>\n</blockquote>\n<p>I don't think there is confusion around what happens in the real world.   you may get a warning.  There is no team of elves in the back room checking to see if the concept overlap.  so no harm no foul.</p>",
        "id": 179366888,
        "sender_full_name": "Eric Haas",
        "timestamp": 1572378331
    },
    {
        "content": "<p>right. that's the confusion right there</p>",
        "id": 179366961,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572378364
    },
    {
        "content": "<p>the definition of extensible is precise and has real meaning. What is going on in real life is something different.</p>",
        "id": 179367010,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572378400
    },
    {
        "content": "<p>the only confusion is the disconnect with reality and the theory</p>",
        "id": 179367053,
        "sender_full_name": "Eric Haas",
        "timestamp": 1572378435
    },
    {
        "content": "<p>Saying that because the definition of extensible isn't computably enforceable means that the difference doesn't matter is exactly my problem</p>",
        "id": 179367054,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572378435
    },
    {
        "content": "<p>they are just words that are unenforceable.</p>",
        "id": 179367094,
        "sender_full_name": "Eric Haas",
        "timestamp": 1572378471
    },
    {
        "content": "<p>that is wrong. They may be unenforcible in a validator, but that doesn't make them just words. We should mean what we say, and say what we mean.</p>",
        "id": 179367185,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572378524
    },
    {
        "content": "<p>I am hearing what we want is the definition to match the reality</p>",
        "id": 179367323,
        "sender_full_name": "Eric Haas",
        "timestamp": 1572378610
    },
    {
        "content": "<p>I think that, yes. But not by changing the meaning of 'extensible' but by reworking the way we define the binding</p>",
        "id": 179367345,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572378643
    },
    {
        "content": "<p>From my perspective, real world testing should be able to demonstrate a percentage of failures, and should be able to show that those failures are due to legacy data. Maybe even able to show those legacy failures or shrinking you're over a year. I don't know that we need to bend our conformance expectations to say legacy data meets them..</p>",
        "id": 179371863,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572381676
    },
    {
        "content": "<p>I don't understand this perspective. Is legacy data wrong data?</p>",
        "id": 179371977,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572381727
    },
    {
        "content": "<p>Well, it's data that might not meet all the validation requirements of newly generated data.</p>",
        "id": 179372044,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572381757
    },
    {
        "content": "<p>We should have a way to talk about those elevated validation requirements for new data -- otherwise all the same exceptions and laxities that apply to legacy data will also apply to new data</p>",
        "id": 179372098,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572381784
    },
    {
        "content": "<p>The question is how we can improve over time and demonstrate that improvement</p>",
        "id": 179372144,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572381816
    },
    {
        "content": "<p>that's what I actually proposed: the binding should describe what data is valid on the interface, and we should have an extension to describe what binding applies for new data</p>",
        "id": 179372151,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572381823
    },
    {
        "content": "<p>or, alternatively, 2 different profiles.</p>",
        "id": 179372318,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572381926
    },
    {
        "content": "<p>The definition of 'extensible' is entirely enforceable.  It requires human review, but that doesn't mean it's not enforceable.  What's desired here has nothing to do with extensible.  Instead it's saying \"this is the value set that should be used, but we recognize that due to legacy reasons that won't always happen\".  That too, is pretty useless from a conformance testing perspective.  The real question is \"What, based on the regulation, is allowed to happen in real systems?\"  Ideally, that would take into account the real world, but not always.  And if regulation doesn't take into account the real world, we then need to decide what happens when the real world and regulation don't agree - do we sent non-compliant data and accept that it's not compliant or do we not send the data?</p>",
        "id": 179372850,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572382249
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>  I don't think it is just legacy data.  These are the data categories I can think of that expose this same issue:</p>\n<ul>\n<li>Historical data</li>\n<li>Patient-provided data</li>\n<li>3rd-party data (e.g. data from paid claims from payers, or uncoded data from an HIE)</li>\n<li>Data from international domains</li>\n<li>Data entered by non-standard end user workflow (e.g. scanned or manually transcribed lab reports)</li>\n<li>etc.</li>\n</ul>",
        "id": 179372882,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1572382273
    },
    {
        "content": "<p>so... either we decide, based on regulation, that such data is banned from being shard on the interface (yuck) or we agree that the data is shared anyway. In which case, that specification should say that that's what will happen</p>",
        "id": 179373217,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572382492
    },
    {
        "content": "<p>And then the technical spec should have a binding declaration that reflects the type of validation that should happen - which I think is that any code at all is permitted, but if you don't have a code from the regulated value set, you get a warning.  This would be similar to what happens with Extensible, but the difference is that what extensible is saying with the warning is \"have a human look at this and if your concept falls within any of the codes in the value set, you're not conformant\".  What we actually want is a warning that says \"if this data is 'current' data that didn't arrive via one of the 'exception' data sources, you are non-conformant\"</p>",
        "id": 179374144,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572383088
    },
    {
        "content": "<p>Which is why I'm wondering whether the solution shouldn't be a new binding type</p>",
        "id": 179374230,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572383128
    },
    {
        "content": "<p>I don't necessarily disagree with adding a new binding type.  But we don't want them to proliferate (and if we do this I don't know if this would be the only one ever that we would add?).  And if we add a new one that matches (somehow) what systems actually need in the real world, will the 'extensible' binding (which we've decided doesn't quite do what's needed in the \"real\" world) just continue to be there but mostly sit on the shelf and gather dust (once the specs have a chance to be updated)?  That doesn't seem like a very satisfactory outcome (if I'm not mischaracterizing it).</p>",
        "id": 179375159,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1572383775
    },
    {
        "content": "<p>I think Josh's point is more in line with the IG we are setting a bar for the testers and and the testees.   Real world usage may not reflect that because the real world is messier.</p>",
        "id": 179375208,
        "sender_full_name": "Eric Haas",
        "timestamp": 1572383819
    },
    {
        "content": "<p>In the real world, sometimes systems don't conform.  However, we shouldn't create specifications where that's an expected outcome for most/all systems.  If we do that, then the specification becomes next to useless.  The whole point of a specification is to set expectations for what participants will do and can expect.  If we write a specification that no one expects to adhere to and that SMART apps and others can't rely on, then we haven't accomplished anything useful.</p>",
        "id": 179377077,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572385285
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> I disagree.  Extensible has a purpose.  The purpose is where the value set does <em>not</em> include high level generic codes that cover the space and where there's a need to require consistent use of standard codes, but allow wiggle room for other codes.  As an example, the OperationOutcome codes.  Those are not regulatorily driven.  But we absolutely expect systems to use the defined codes if one applies.  We also allow for completely custom codes if there are issues that come up that fall outside the high-level codes we've identified.</p>",
        "id": 179377374,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572385481
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  If we identify and explain (as you did) where we expect 'extensible' to continue to be applicable, then no problem.  I assume you probably would agree that binding types shouldn't proliferate?</p>",
        "id": 179378614,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1572386306
    },
    {
        "content": "<p>seems the problem is a theory at this point. Reality is that data are messy, that is not the theory. The theory is that the regulation will deem a system non-compliant simply because that system produces a small number of non-compliant data. In other settings a system is evaluated by it's ability to deliver compliant data, and the data that are not-compliant are seen as exceptional situations where those data themselves are seen as non-compliant. So this is needs a regulatory expectation of reality, and everyone to stop thinking that there is only two states (compliant vs non-compliant).</p>",
        "id": 179380748,
        "sender_full_name": "John Moehrke",
        "timestamp": 1572387557
    },
    {
        "content": "<p>there's a methodology issue here - discussion at <a href=\"#narrow/stream/211987-methodology/topic/Multiple.20Bindings\" title=\"#narrow/stream/211987-methodology/topic/Multiple.20Bindings\">https://chat.fhir.org/#narrow/stream/211987-methodology/topic/Multiple.20Bindings</a></p>",
        "id": 179383566,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572389241
    },
    {
        "content": "<p>But it seems we have general agreement on the overall picture:</p>\n<ul>\n<li>regulation says to use a particular code system in a particular context</li>\n<li>but there's of data on the API that comes from other contexts where the regulation doesn't apply (particularly but not limited to legacy data)</li>\n</ul>",
        "id": 179383711,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572389319
    },
    {
        "content": "<ul>\n<li>we want the specification to describe the situation clearly so that people know what is going on</li>\n<li>we want conformance testing to... encourage.. the use of the correct codings. but we don't want conformance testing to call valid data from the other use cases non-conformant</li>\n</ul>",
        "id": 179383791,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572389373
    },
    {
        "content": "<p>it seems the last point is the one where contention arises....</p>",
        "id": 179383883,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572389415
    },
    {
        "content": "<blockquote>\n<p>I don't think it is just legacy data.  These are the data categories I can think of that expose this same issue:</p>\n</blockquote>\n<p>These are all great examples <span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span> -- and I didn't mean to single out legacy data. My point is that whenever we define conformance expectations that target a \"good level of consistency\" for interop, we shouldn't assume that all data will meet this level in the real world. Scorecard style, we should be able to track quality across a variety of situations, and less than 100% conformance is a fact of life. (And this might be achieved with multiple profiles as Grahame suggests... I'm not entirely sure what that would look like.)</p>",
        "id": 179393700,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572396778
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I'm not sure it's terribly clear that regulation <em>doesn't</em> apply in those situations, but I think there's consensus that it probably <em>shouldn't</em> apply - at least in most of them. </p>\n<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> Compliance is generally a binary thing. Either you're fully compliant or you're not.  It's possible to itemize the areas of non-compliance, but if you're non-compliant anywhere, you're non-compliant.  That's how the process works.  And in most industries, non-compliance of any sort is a fail.  (Try telling an electrical inspector that your wiring is \"mostly compliant\" :&gt;)  I don't think we want to change the standard meaning of the word 'compliance' here.  What we <em>do</em> want to do is to ensure that the specifications are clearly defining the expectations we have for compliant systems. Which means that if it's totally fine for legacy data to have a non-SNOMED code, then the validation process shouldn't identify the absence of a non-SNOMED code as an error.  If the expectation is that all 'new' data is SNOMED and 'old' data doesn't have to be and the validator has no clue what's new vs. not, then the validator should spit out a warning when it sees non-SNOMED and say \"this is only valid if it's 'old' data\" - and leave it to human validation to evaluate whether the instance is conformant or not.  However, it should always be possible to tell whether the system is conformant if you dig deep enough.  And if the system is non-conformant in a single instance, then it's non-conformant.  (What action regulators take in response to non-conformance and whether they have a sliding scale of ramifications based on 'degree' of non-conformance is up to the regulations.)</p>",
        "id": 179396664,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572401457
    },
    {
        "content": "<p>Lloyd, I'm assuming you meant to mention me rather than John in your comments above. I'm pretty sure I disagree with your perspective on this; healthcare data aren't all going to be \"valid\" but we can't let that prevent us from defining good validation expectations. It's absolutely not a binary proposition when you talk about <em>all</em> your data, across populations and organizations. What, you're saying one badly coded lab means your whole system is a failure? That's silly.</p>",
        "id": 179396946,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572401885
    },
    {
        "content": "<p>We need to be realistic when we're assessing real-world data.</p>",
        "id": 179396962,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572401932
    },
    {
        "content": "<p>I did mean to mention John.  He was arguing that compliance isn't binary.  I'm saying it must be.  However, compliance should take into account reasonable expectations.  When we say that Patient.gender must be male, female, other or unknown, that's a firm requirement.  If you don't follow that, you're non-conformant - end stop.  And having that as a clear rule is important.  The rules around condition and procedure codes should be no less clear - but they well be much less strict.  If the best we can do is a 'SHOULD', then that's what we should do.  If we can do a conditional SHALL, then that's even better (so long as the condition is actually testable).  If the conditional SHALL is violated, then the instance is non-conformant.</p>",
        "id": 179397114,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572402183
    },
    {
        "content": "<p>Our reasonable expectations for Patient.gender are that all systems will translate what they have to one of the allowed 4 values or that they'll omit the element.  If they want to convey additional detail, they'll do that with an extension or Observation.  Some systems won't meet those expectations.  Validators will find them non-conformant and that's an appropriate label for them to have.</p>\n<p>Our challenge with some of the elements in U.S. Core is that there was never super-clear discussion about exactly what would constitute a \"conformant\" vs. a \"non-conformant\" instance.  Without clarity in the requirements, we can't have clarity in the specs.</p>",
        "id": 179398217,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572403848
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> </p>\n<blockquote>\n<p>(And this might be achieved with multiple profiles as Grahame suggests... I'm not entirely sure what that would look like.)</p>\n</blockquote>\n<p>One way is to replace a single profile (e.g. <a href=\"http://build.fhir.org/ig/HL7/US-Core/StructureDefinition-us-core-allergyintolerance.html\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/US-Core/StructureDefinition-us-core-allergyintolerance.html\">us-core-allergyintolerance</a>) with two, one with the same bindings (strict) and one with weaker bindings (lax). Then requirements statements say you SHOULD conform to the strict one and SHALL conform to the lax one.</p>",
        "id": 179402220,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1572410510
    },
    {
        "content": "<p>or a best practice profile</p>",
        "id": 179404494,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572414474
    },
    {
        "content": "<p>I submitted <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=25184\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=25184\">GF#25184</a> to track this issue.</p>",
        "id": 180040135,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1573052315
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191936\">@Michael Donnelly</span> - you were going to follow up on this thread to discuss the option of using a meta.tag to flag non-conformant data.  (Actual link is <a href=\"http://jira.hl7.org/browse/FHIR-25183\">FHIR#25183</a>)</p>",
        "id": 268977754,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1642884262
    },
    {
        "content": "<p>FYI - this was discussed recently again in the <a href=\"#narrow/stream/179166-implementers/topic/Period.20Datatype.20Invariant\">Period Datatype Invariant thread</a>.</p>",
        "id": 269117506,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1643036459
    }
]