[
    {
        "content": "<p>Presently, you can use <a href=\"https://demo-portals.smarthealth.cards/VerifierPortal.html\">https://demo-portals.smarthealth.cards/VerifierPortal.html</a> or <a href=\"https://github.com/smart-on-fhir/health-cards-dev-tools\">https://github.com/smart-on-fhir/health-cards-dev-tools</a> to validate your smart health cards. These validators do a super good job of validating all the card stuff - crypto signatures etc. but they don't do a great job of validating inside the bundle. </p>\n<p>So from the next release, the validator will be able to validate Smart Health Cards directly. You can give it a jwt (jws) or a qr code as text (shc:/...). It will open up the jwt, validate the payload and the bundle against the recommended profiles. (I got a long list of errors for mine...)</p>",
        "id": 253358201,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631677583
    },
    {
        "content": "<p>it does not validate the signature, and I'm not planning to work on that part, since we already have excellent tools for that</p>",
        "id": 253358228,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631677611
    },
    {
        "content": "<p>I updated the  documentation too - <a href=\"https://confluence.hl7.org/display/FHIR/Using+the+FHIR+Validator#UsingtheFHIRValidator-Choosingwhattovalidate\">https://confluence.hl7.org/display/FHIR/Using+the+FHIR+Validator#UsingtheFHIRValidator-Choosingwhattovalidate</a></p>",
        "id": 253401504,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631707267
    },
    {
        "content": "<p>We are trying to verify Canada covid pass of our employee and we are facing following error:</p>\n<div class=\"codehilite\"><pre><span></span><code>&quot;errors&quot;: [\n    &quot;JWS verification failed: can&#39;t find key with &#39;kid&#39; = qFdl0tDZK9JAWP6g9_cAv57c3KWxMKwvxCrRVSzcxvM in issuer set&quot;,\n    &quot;JWS.payload.vc shouldn&#39;t have a @context property&quot;,\n    &quot;JWS.payload.vc.type : &#39;VerifiableCredential&#39; is not required and may be omitted to conserve space&quot;,\n    &quot;Schema: /type error : must be equal to one of the allowed values&quot;,\n    &quot;Schema:  property must must match exactly one schema in oneOf&quot;,\n    &quot;Schema: /type error : must be equal to one of the allowed values&quot;,\n    &quot;Schema:  property must must match exactly one schema in oneOf&quot;\n</code></pre></div>",
        "id": 262459187,
        "sender_full_name": "Poonam Kariya",
        "timestamp": 1637676160
    },
    {
        "content": "<p>What's the source of the data you're using, and what's the process by which you're receiving these errors?</p>",
        "id": 262463700,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1637678231
    },
    {
        "content": "<p>Quebec rotates the KID on their servers frequently. Unless you have saved KIDs for the previous months, Quebec's records will almost always fail (the QR is generally older than the KID on their server)</p>",
        "id": 262465100,
        "sender_full_name": "Vitor Pamplona",
        "timestamp": 1637678805
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"433194\">@Poonam Kariya</span> here's the key you are looking for: </p>\n<div class=\"codehilite\"><pre><span></span><code>    {\n        &quot;kty&quot;: &quot;EC&quot;,\n        &quot;kid&quot;: &quot;qFdl0tDZK9JAWP6g9_cAv57c3KWxMKwvxCrRVSzcxvM&quot;,\n        &quot;use&quot;: &quot;sig&quot;,\n        &quot;alg&quot;: &quot;ES256&quot;,\n        &quot;crv&quot;: &quot;P-256&quot;,\n        &quot;x&quot;: &quot;XSxuwW_VI_s6lAw6LAlL8N7REGzQd_zXeIVDHP_j_Do&quot;,\n        &quot;y&quot;: &quot;88-aI4WAEl4YmUpew40a9vq_w5OcFvsuaKMxJRLRLL0&quot;\n      }\n</code></pre></div>",
        "id": 262465162,
        "sender_full_name": "Vitor Pamplona",
        "timestamp": 1637678837
    },
    {
        "content": "<p>It sounds like this key publication behavior is not compliant with the SHC specification, so it's worth asking Quebec about whether these failures are intended.</p>",
        "id": 262465440,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1637678951
    },
    {
        "content": "<p>I am not sure if it is intentional. Quebec's own verifier app ignores the KID and verifies each QR against all available keys in the server. Ignoring the KID field is a very common feature among JOSE libraries. They might be using KID rotations to represent some internal status without noticing that it breaks any app checking and only verifying against the right KID.</p>",
        "id": 262467906,
        "sender_full_name": "Vitor Pamplona",
        "timestamp": 1637680087
    }
]