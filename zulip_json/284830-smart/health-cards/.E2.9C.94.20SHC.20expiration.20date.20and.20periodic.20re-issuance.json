[
    {
        "content": "<p>My stakeholder would like to force the credential to expire 6 months after it is issued.  <br>\nI believe their thinking is that they want to insure people are using the most up-to-date credential (that includes boosters, etc), rather than say a 2 year-old document.</p>\n<p>I noticed that fhir-schema.json only has expirationDate for immunizations and medications not for the broader shc document. </p>\n<p>Does anyone have thoughts on how best to manage this type of scenario?  Is the best case for managing this just issue a new public key each month and nuke them when they get to 7 months old?</p>",
        "id": 252379439,
        "sender_full_name": "Deftdawg",
        "timestamp": 1631053050
    },
    {
        "content": "<p>Immunization.expirationDate is the vaccine expirationDate, not the record. But expired credentials is a rule about the use of the credential, not a property of the credential itself</p>",
        "id": 252380647,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1631053884
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/SHC.20expiration.20date.20and.20periodic.20re-issuance/near/252380647\">said</a>:</p>\n<blockquote>\n<p>Immunization.expirationDate is the vaccine expirationDate, not the record. But expired credentials is a rule about the use of the credential, not a property of the credential itself</p>\n</blockquote>\n<p>Ok thanks, I'll let them know it's up to the verifier to decide.</p>",
        "id": 252398249,
        "sender_full_name": "Deftdawg",
        "timestamp": 1631068931
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"437951\">Deftdawg</span> has marked this topic as resolved.</p>",
        "id": 252398254,
        "sender_full_name": "Notification Bot",
        "timestamp": 1631068935
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"437951\">Deftdawg</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/.E2.9C.94.20SHC.20expiration.20date.20and.20periodic.20re-issuance/near/252379439\">said</a>:</p>\n<blockquote>\n<p>Does anyone have thoughts on how best to manage this type of scenario?  Is the best case for managing this just issue a new public key each month and nuke them when they get to 7 months old?</p>\n</blockquote>\n<p>The SHC spec does not provide a mechanism to expire cards; the cards encode medical facts that do not expire. A validator might enforce a specific policy of what is deemed acceptable, using the various dates in the SHC (its issuance <code>nbf</code> timestamp, the immunization <code>occurrenceDateTime</code> fields). Rotating keys is useful for security purposes, not to use the same private key for too long (one year recommended), but rotating them to expire issued SHCs is problematic: if the corresponding public key is removed from the issuer key set, then valid \"old\" SHCs become undistinguishable from forged ones.</p>",
        "id": 252478819,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1631114120
    },
    {
        "content": "<p>I assume the reason for rotating keys is precisely so a batch of documents issued with that key can be invalidated should a bad actor have gained access to the system during the time that particular private key was in use.   </p>\n<p>It could also be used as I mentioned to invalidate documents older than a certain time period, however that's a potential usability nightmare for the bearer  of the credential and I've relayed that back to the stakeholder who asked for it and we agreed to drop that from the JWT payload.</p>\n<p>I believe the requirement originated from the paper records that predated the use of the QR codes within the vaccine record documents, as those were easy to forge.</p>",
        "id": 252495577,
        "sender_full_name": "Deftdawg",
        "timestamp": 1631120235
    }
]