[
    {
        "content": "<p>It would be useful to have a audit system for the VCI directory. I’m thinking a daily script (github action?) that would download each issuer’s key set, validate the keys, and log differences from day to day. This would help keep track if a particular key is removed (consciously revoked, or accidental removal) and help debug unreachable issuers (momentarily offline vs. out-of-business). We could also think about creating a daily known keyset of all VCI issuers, to allow offline verifiers to pre-load the keys and validate SMART Health Cards. Thoughts?</p>",
        "id": 248484744,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1628173725
    },
    {
        "content": "<p>I think this would be great in terms of transparency, and useful for a bunch of purposes downstream, as you suggest!</p>",
        "id": 248644573,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1628272089
    },
    {
        "content": "<p>Where would the \"daily known keyset\" live?  Isn't part of the trust the fact that you retrieved it from the iss, not some 3rd party?  I assume verifiers would periodically grab all of the keys (individually) using the iss from <a href=\"https://github.com/the-commons-project/vci-directory/blob/main/vci-issuers.json\">https://github.com/the-commons-project/vci-directory/blob/main/vci-issuers.json</a> (or their trusted source of this info).  I like the idea of knowing about changes.  Where would you get a sample of something signed with the private key to validate the public keys?</p>",
        "id": 248665134,
        "sender_full_name": "Paul Denning",
        "timestamp": 1628282133
    },
    {
        "content": "<p>Our use of <code>kid</code> computed from the hash of JWK contents means that a JWK is self-authenticating -- the problem of \"has a certain key been revoked by the issuer?\" doesn't go away, but the problem of \"resolve this kid to a JWK JSON struct\" is easier (you can't \"lie\" about the <em>value</em> of a JWK).</p>",
        "id": 248673007,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1628286716
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"194174\">Paul Denning</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/VCI.20directory.20auditing/near/248665134\">said</a>:</p>\n<blockquote>\n<p>Where would the \"daily known keyset\" live?</p>\n</blockquote>\n<p>Hosting it somewhere next to the VCI directory itself would provide equivalent security.</p>\n<blockquote>\n<p>Isn't part of the trust the fact that you retrieved it from the iss, not some 3rd party? </p>\n</blockquote>\n<p>Yes. That's the ideal case, but what happens if you can't reach the <code>iss</code> endpoint? Is the verifier connection down? Is the issuer down? This could happen even if the card is valid and should be accepted. I'm thinking about cases where verifiers, potentially disconnected, need to quickly validate multiple cards quickly (e.g., mass transit system, or big concert venues); it would be useful to load a valid daily set of keys to speed up validation and avoid communication failures.</p>\n<blockquote>\n<p>I assume verifiers would periodically grab all of the keys (individually) using the iss from <a href=\"https://github.com/the-commons-project/vci-directory/blob/main/vci-issuers.json\">https://github.com/the-commons-project/vci-directory/blob/main/vci-issuers.json</a> (or their trusted source of this info). </p>\n</blockquote>\n<p>This is currently an implementation detail; a validation app could certainly do that, but this is time consuming and requires non-trivial management (especially for a mobile app). A centralized, common list would be easier to use. </p>\n<blockquote>\n<p>I like the idea of knowing about changes.  </p>\n</blockquote>\n<p>That would be the main value; audit changes, and VCI could follow-up with issuers with \"strange\" key sets, or reach out if keys are removed, to make sure issuers are aware that this effectively revoke all cards issued under those keys.</p>\n<blockquote>\n<p>Where would you get a sample of something signed with the private key to validate the public keys?</p>\n</blockquote>\n<p>You wouldn't need it. We can check that the key is a valid JSON cryptographic public key.</p>",
        "id": 248723793,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1628353377
    },
    {
        "content": "<p>I think this is a great idea. Happy to find some time to talk through the details <span class=\"user-mention\" data-user-id=\"385047\">@Christian Paquin</span></p>",
        "id": 249027381,
        "sender_full_name": "James Kizer",
        "timestamp": 1628624872
    },
    {
        "content": "<p>We can have a chat with whomever is interested next week. I'll be away for the rest of the week on vacation...</p>",
        "id": 249029952,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1628625909
    },
    {
        "content": "<p>I've put some proof of concept code together <a href=\"https://github.com/microsoft/health-cards-tests/tree/vci-directory-auditor/vci-directory-auditor\">here</a> for the first part of the proposal: directory auditing. The tool (which could be run daily by, say, a github action) fetches and saves the jwks from every issuers, checks for duplication (in names, key IDs, iss urls), logs endpoint errors, and compares with a previous log to see how the directory changed (e.g., key ID removed).</p>\n<p>If you want to play with it, run <code>npm run audit</code> to scan the VCI directory, or <code>npm run test-audit-X</code> with <code>X=1,2,3</code> to scan a test directory that changes twice.</p>",
        "id": 250174446,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1629494628
    },
    {
        "content": "<p>Would it be a good idea to have issuers publish a signed SMART Health Card with their application to join the VCI directory? We currently ask them to run the validation <a href=\"https://github.com/smart-on-fhir/health-cards-dev-tools\">dev tool</a>, but having access to a sample SHC would allow 1) auditing scripts to check proper conformance to the spec, and 2) allow 3rd party validator to test their implementations. One issue is that depending when their implementation was completed, an issuer might not be conformant to the latest version of the spec. These cards could be generated with well-known, common test values to avoid using real-user data.</p>",
        "id": 253806428,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1631912258
    },
    {
        "content": "<p>I agree this would give us better overall assurance, and would let us move toward a more automated process for getting there.</p>",
        "id": 253807835,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1631912950
    },
    {
        "content": "<p>(even if we don't require this, I think it would be worth recommending. I guess we'd want to have some kind of standardized patient record for the examples, with names and birth dates that would be unambiguously fake.)</p>",
        "id": 253807894,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1631912985
    }
]