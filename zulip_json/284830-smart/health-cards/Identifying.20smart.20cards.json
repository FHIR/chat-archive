[
    {
        "content": "<p>An issue raised with me after the HL7 Australia webinar on smart health cards yesterday: there's no way for the issuer to include any identifier in the card source that allows it to link the card back to an internal context; any queries/provenance related information has to be resolved by a human. </p>\n<p>It's possible to arrange the issuing of the cards such that the <code>nbf</code> property in the jws is unique, but that has obvious problems at scale. Or else the source system could include a <code>jti</code> - I don't see that the spec rules it out, since it doesn't comment on it. Has anyone used the jti for that? Or else the spec could allow the bundle to have an id, which would be the same as the jti field.</p>\n<p>Comments?</p>",
        "id": 256308007,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1633463561
    },
    {
        "content": "<p>We don't rule this out; we generally try to avoid creating any unnecessary correlation handles, but if do you have a valid use case for this it's not something that we would expect to cause problems. JWT specification defines default semantics indicating that clients should ignore any claims they don't understand.</p>",
        "id": 256333572,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1633475608
    },
    {
        "content": "<p><code>Bundle.id</code> can be populated in our <a href=\"http://hl7.org/fhir/uv/shc-vaccination/2021Sep/StructureDefinition-shc-vaccination-bundle-ad.html#tab-snapshot\">fallback profile</a>.</p>\n<p>I think it's appropriate to not have <code>id</code> included in the primary (data minimization) profile, but if you disagree please let us know.</p>",
        "id": 256389265,
        "sender_full_name": "Max Masnick",
        "timestamp": 1633516300
    },
    {
        "content": "<p>I think jti is better. it's the jws itself, not the bundle, that has an id.</p>",
        "id": 256390623,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1633517115
    },
    {
        "content": "<p>But I think this is worth a comment - a line, at max, in the smart card spec. (not the ig?)</p>",
        "id": 256391386,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1633517561
    },
    {
        "content": "<p>What would the line say? Implementers SHOULD NOT create unnecessary correlation handles but MAY populate standard JWT claims such as <code>jti</code> if their infrastructure requires it? </p>\n<p>I'll note that the (say, sha256) hash of the entire JWS might also serve this need without adding to the payload size.</p>",
        "id": 256407230,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1633525578
    },
    {
        "content": "<p>but shas may clash. Likely to - much more than nbf. So I don't think you could use that</p>",
        "id": 256412990,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1633527726
    },
    {
        "content": "<p>Wait, what do you mean by \"might\"?</p>",
        "id": 256413983,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1633528116
    },
    {
        "content": "<p><a href=\"https://crypto.stackexchange.com/questions/47809/why-havent-any-sha-256-collisions-been-found-yet#47810\">https://crypto.stackexchange.com/questions/47809/why-havent-any-sha-256-collisions-been-found-yet#47810</a></p>",
        "id": 256414123,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1633528186
    },
    {
        "content": "<p>That said, it's important to talk about the use case here. My understanding was that you just wanted a handle for issuer-internal lookups/workflows. It would be very easy for a given an issuer to make sure they never issue two cards with the same identifier (whether that's a random jti or a hash over the card or anything else).</p>",
        "id": 256414689,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1633528390
    },
    {
        "content": "<p>(keep in mind also that the sha256 hash function is used by the ES256 signing algorithm, so if you could generate sha256 collisions, you could swap JWS payloads at will :-))</p>",
        "id": 256422394,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1633531246
    },
    {
        "content": "<p>A SHA-256 collision would immediately invalidate the algorithm and lead to its deprecation; it is safe to assume collisions are infeasible (vs. impossible) to obtain (assuming its preimage is unique, which is the case if you hash the full SHC).</p>",
        "id": 256424525,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1633532048
    },
    {
        "content": "<p>well, technically, what matters with a hash for a signature is not there will never be collisions, but that it's infeasible to compute an alternative source that leads to the same hash.</p>",
        "id": 256485266,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1633554608
    },
    {
        "content": "<p>\"never issue two cards with the same hash over the card\" - hard because what do you do if it does generate the same hash? I suppose you regenerate it with a new nbf and you're good.</p>",
        "id": 256485538,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1633554729
    },
    {
        "content": "<p>but ok, sha-256 is a lot more resistant to collisions at all than I estimated in my head (I was many orders of magnitude out <span aria-label=\"slight frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"slight frown\">:slight_frown:</span>)</p>",
        "id": 256485675,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1633554800
    },
    {
        "content": "<p>so it wouldn't hurt to have a sentence somewhere: 'issuers that want to identify cards later for provenance/investigation purposes can either (a) remember the hash of the card, (b) ensure that the nbf values are unique, or (c) populate the jti in the payload (not recommended, because of byte minimization)</p>",
        "id": 256486355,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1633555021
    }
]