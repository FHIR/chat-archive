[
    {
        "content": "<p>I am following the instructions in \"Creating a QR code (or a set of QR codes) from a Health Card JWS\"  to encode characters into bytes to generate a string that looks like \"shc:/5676295953265460346029254077280433602870286567675422280928623725376028702864716745222...\"</p>\n<p>My problem is the new QR code is larger than the original.  How should I pass the new string to the QR code generator so that it treats it as numeric instead of alpha-numeric?  I am happy to use a different C# QR generator if needed.</p>\n<p>QR generator = <a href=\"https://github.com/codebude/QRCoder/\">https://github.com/codebude/QRCoder/</a><br>\n Implementation ref =  <a href=\"https://github.com/smart-on-fhir/health-cards/blob/main/docs/index.md#creating-a-qr-code-or-a-set-of-qr-codes-from-a-health-card-jws\">https://github.com/smart-on-fhir/health-cards/blob/main/docs/index.md#creating-a-qr-code-or-a-set-of-qr-codes-from-a-health-card-jws</a></p>",
        "id": 234743484,
        "sender_full_name": "Brian Agnes",
        "timestamp": 1618517037
    },
    {
        "content": "<p>reading through the source in that QR Code Generation library, it looks like it should set the encoding to <code>numeric</code> if you pass it a purely numeric (aka only characters <code>0-9</code>) and you don't force UTF-8: <a href=\"https://github.com/codebude/QRCoder/blob/37ec9a44724c5b3a5ad53108d374dd5b665d0e53/QRCoder/QRCodeGenerator.cs#L881\">https://github.com/codebude/QRCoder/blob/37ec9a44724c5b3a5ad53108d374dd5b665d0e53/QRCoder/QRCodeGenerator.cs#L881</a></p>",
        "id": 234745386,
        "sender_full_name": "Michael O'Keefe",
        "timestamp": 1618517794
    },
    {
        "content": "<p>So my guess is that the <code>shc:/</code> at the beginning is forcing it into alphanumeric</p>",
        "id": 234745446,
        "sender_full_name": "Michael O'Keefe",
        "timestamp": 1618517828
    },
    {
        "content": "<p>Ah, it looks like the way it should work is that you do more than 1 segment to the QR code. One segment is just <code>shc:/</code> plus any chunk metadata (aka <code>1/2/</code>) if this is chunk 1 of 2</p>",
        "id": 234745954,
        "sender_full_name": "Michael O'Keefe",
        "timestamp": 1618518029
    },
    {
        "content": "<p>That segment is byte-encoded. Then the second segment, with the JWS data, is numeric-encoded</p>",
        "id": 234746008,
        "sender_full_name": "Michael O'Keefe",
        "timestamp": 1618518057
    },
    {
        "content": "<p>You'd have to figure out how to encode a QR code with multiple data segments in that C# library. A cursory glance doesn't show any way to do so with that particular library, but I may have missed something</p>",
        "id": 234746453,
        "sender_full_name": "Michael O'Keefe",
        "timestamp": 1618518245
    },
    {
        "content": "<p>This is an example of a Javascript library that supports segments with different modes: <a href=\"https://www.npmjs.com/package/qrcode#manual-mode\">https://www.npmjs.com/package/qrcode#manual-mode</a></p>",
        "id": 234747618,
        "sender_full_name": "Reece Adamson",
        "timestamp": 1618518688
    },
    {
        "content": "<p>@_<strong>Michael O&#39;Keefe|191647</strong> <a href=\"#narrow/stream/179166-implementers/topic/generating.20QR.20code.20.28compression.29/near/234746453\">said</a>:</p>\n<blockquote>\n<p>You'd have to figure out how to encode a QR code with multiple data segments in that C# library. A cursory glance doesn't show any way to do so with that particular library, but I may have missed something</p>\n</blockquote>\n<p>is there a library in c# that you prefer?</p>\n<p>sorry just saw reply from Reece...</p>",
        "id": 234749202,
        "sender_full_name": "Brian Agnes",
        "timestamp": 1618519345
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"179166\" href=\"/#narrow/stream/179166-implementers/topic/generating.20QR.20code.20.28compression.29\">#implementers &gt; generating QR code (compression)</a> by <span class=\"user-mention silent\" data-user-id=\"191315\">Josh Mandel</span></p>",
        "id": 234749345,
        "sender_full_name": "Notification Bot",
        "timestamp": 1618519421
    },
    {
        "content": "<p>Unfortunately I don't have much experience with C#, so I'm not sure really</p>",
        "id": 234751513,
        "sender_full_name": "Michael O'Keefe",
        "timestamp": 1618520344
    },
    {
        "content": "<p>There might be a way to make that QR code generator use multiple segments, if you can pre-generate the final bitstring and pass it to the low-level generateQRCode method: <a href=\"https://github.com/codebude/QRCoder/blob/49d5b35e186437c086de152f50a0c7348f7c84cc/QRCoder/QRCodeGenerator.cs#L184\">https://github.com/codebude/QRCoder/blob/49d5b35e186437c086de152f50a0c7348f7c84cc/QRCoder/QRCodeGenerator.cs#L184</a></p>",
        "id": 234752284,
        "sender_full_name": "Michael O'Keefe",
        "timestamp": 1618520520
    },
    {
        "content": "<p><a href=\"https://github.com/manuelbl/QrCodeGenerator\">https://github.com/manuelbl/QrCodeGenerator</a> looks like a library that has multi-segment support</p>",
        "id": 234754432,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1618521028
    },
    {
        "content": "<p>the <a href=\"https://codecrete.net/QrCodeGenerator/api/Net.Codecrete.QrCodeGenerator.QrSegmentAdvanced.html#Net_Codecrete_QrCodeGenerator_QrSegmentAdvanced_MakeSegmentsOptimally_System_String_Net_Codecrete_QrCodeGenerator_QrCode_Ecc_System_Int32_System_Int32_\"><code>MakeSegmentsOptimally</code></a> fn may work out of the box, or else you can manually pass in an array of segments, which is probably more reliable</p>",
        "id": 234754831,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1618521136
    },
    {
        "content": "<p>Thanks for the help everyone!  using <a href=\"https://github.com/manuelbl/QrCodeGenerator\">https://github.com/manuelbl/QrCodeGenerator</a> worked great.  The test app seems happy with the results:</p>\n<p>~/projects/smarthealthcard/health-cards-validation-SDK-0.4.4-1 <span aria-label=\"check\" class=\"emoji emoji-2705\" role=\"img\" title=\"check\">:check:</span> node . --path devmale.png --type qr<br>\nSMART Health Card Validation SDK v0.4.4-1<br>\n(node:9882) ExperimentalWarning: The dns.promises API is experimental<br>\n(node:9882) ExperimentalWarning: The fs.promises API is experimental<br>\n(node:9882) ExperimentalWarning: Readable[Symbol.asyncIterator] is an experimental feature. This feature could change at any time<br>\nQR image<br>\n     |<br>\n    QR numeric<br>\n         |<br>\n        JWS-compact<br>\n             |<br>\n            JWS.payload<br>\n                 |<br>\n                FhirBundle<br>\nNOTE: the SDK v0.4.4-1 is not validating the latest version of the spec: v0.4.5<br>\nValidation completed</p>\n<p><a href=\"/user_uploads/10155/sCNc0nrBhoyP8r3qFWkmKMSg/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/sCNc0nrBhoyP8r3qFWkmKMSg/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/sCNc0nrBhoyP8r3qFWkmKMSg/image.png\"></a></div>",
        "id": 234769274,
        "sender_full_name": "Brian Agnes",
        "timestamp": 1618528391
    },
    {
        "content": "<p>my pixel 4xl phone can't scan QR anymore... is this normal?  (probably because of segments &amp; numeric)</p>",
        "id": 234769646,
        "sender_full_name": "Brian Agnes",
        "timestamp": 1618528606
    },
    {
        "content": "<blockquote>\n<p>Brian Agnes: my pixel 4xl phone can't scan QR anymore... is this normal? (probably because of segments &amp; numeric)</p>\n</blockquote>\n<p>That doesn't sound normal!</p>",
        "id": 234771523,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1618529742
    },
    {
        "content": "<p>I can scan this from my android phone's built-in camera app</p>",
        "id": 234771825,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1618529906
    },
    {
        "content": "<p>(though I can't validate the Health Card because there's no <a href=\"https://mychartpoc.uchealth.org/.well-known/jwks.json\">https://mychartpoc.uchealth.org/.well-known/jwks.json</a>)</p>",
        "id": 234771882,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1618529953
    },
    {
        "content": "<p>Also note that you have extra data beyond the \"DM\" profile in there (the recommendation is to remove Location and populate Immunization.performer.actor.display)</p>",
        "id": 234772030,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1618530028
    },
    {
        "content": "<p>yes, that is an internal server for us.  It will eventually move to  <a href=\"https://mychart.uchealth.org/.well-known/jwks.json\">https://mychart.uchealth.org/.well-known/jwks.json</a></p>",
        "id": 234891820,
        "sender_full_name": "Brian Agnes",
        "timestamp": 1618594008
    },
    {
        "content": "<p>Does this look like it follows all of the DM (whitespace added for readability (and removed by chat))</p>\n<p>{\"iss\":\"https://mychartpoc.uchealth.org\",\"nbf\":1618597458,\"vc\":{<br>\n    \"@context\":[\"https://www.w3.org/2018/credentials/v1\"],<br>\n    \"type\":[\"VerifiableCredential\",\"https://smarthealth.cards#covid19\",\"https://smarthealth.cards#health-card\",\"https://smarthealth.cards#immunization\"],<br>\n    \"credentialSubject\":{\"fhirVersion\":\"4.0.1\",\"fhirBundle\":{<br>\n        \"resourceType\":\"Bundle\",<br>\n        \"type\":\"collection\",<br>\n        \"entry\":[<br>\n            {\"fullUrl\":\"resource:0\",\"resource\":{<br>\n                \"resourceType\":\"Patient\",<br>\n                \"name\":[{\"family\":\"Dev\",\"given\":[\"Male\"]}],<br>\n                \"birthDate\":\"1945-02-01\"<br>\n            }},<br>\n            {\"fullUrl\":\"resource:1\",\"resource\":{<br>\n                \"resourceType\":\"Immunization\",<br>\n                \"status\":\"completed\",<br>\n                \"vaccineCode\":{\"coding\":[{\"system\":\"http://hl7.org/fhir/sid/cvx\",\"code\":\"207\"}]},<br>\n                \"patient\":{\"reference\":\"resource:0\"},<br>\n                \"occurrenceDateTime\":\"2021-01-13\",<br>\n                \"performer\":{\"actor\":{\"display\":\"University of Colorado Hospital - Aurora\"}},<br>\n                \"lotNumber\":\"13355\"<br>\n            }},<br>\n            {\"fullUrl\":\"resource:2\",\"resource\":{<br>\n                \"resourceType\":\"Immunization\",<br>\n                \"status\":\"completed\",<br>\n                \"vaccineCode\":{\"coding\":[{\"system\":\"http://hl7.org/fhir/sid/cvx\",\"code\":\"207\"}]},<br>\n                \"patient\":{\"reference\":\"resource:0\"},<br>\n                \"occurrenceDateTime\":\"2021-03-17\",<br>\n                \"performer\":{\"actor\":{\"display\":\"University of Colorado Hospital - Aurora\"}},<br>\n                \"lotNumber\":\"EH5678\"<br>\n            }}<br>\n        ]<br>\n    }}<br>\n}}</p>",
        "id": 234902712,
        "sender_full_name": "Brian Agnes",
        "timestamp": 1618598737
    },
    {
        "content": "<p>It gets full marks from the Josh-visual-inspection test suite!</p>",
        "id": 234903141,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1618598912
    },
    {
        "content": "<p>(I should add some sort of caveat about being sleep deprived ;-))</p>",
        "id": 234903180,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1618598943
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"403800\">Brian Agnes</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/generating.20QR.20code.20.28compression.29/near/234902712\">said</a>:</p>\n<blockquote>\n<p>Does this look like it follows all of the DM (whitespace added for readability (and removed by chat))</p>\n</blockquote>\n<p>Passing this through the <a href=\"https://github.com/microsoft/health-cards-validation-SDK\">validation SDK</a>, I get this warning:</p>\n<div class=\"codehilite\"><pre><span></span><code>JWS.payload.vc shouldn&#39;t have a @context property\n</code></pre></div>\n<p>(new change in v0.4.5), and this error:</p>\n<div class=\"codehilite\"><pre><span></span><code>Schema: {&quot;instancePath&quot;:&quot;/performer&quot;,&quot;schemaPath&quot;:&quot;#/properties/performer/type&quot;,&quot;keyword&quot;:&quot;type&quot;,&quot;params&quot;:{&quot;type&quot;:&quot;array&quot;},&quot;message&quot;:&quot;must be array&quot;}\n</code></pre></div>\n<p>so I think the <code>\"performer\"</code> value should be wrapped in an array: <code>\"performer\":[{\"actor\":{\"display\":\"University of Colorado Hospital - Aurora\"}}],</code></p>",
        "id": 235192947,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1618843772
    },
    {
        "content": "<p>Yep! (This is why visual inspection isn't our primary methodology ;-))</p>",
        "id": 235203144,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1618847176
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197651\">Reece Adamson</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/generating.20QR.20code.20.28compression.29/near/234747618\">said</a>:</p>\n<blockquote>\n<p>This is an example of a Javascript library that supports segments with different modes: <a href=\"https://www.npmjs.com/package/qrcode#manual-mode\">https://www.npmjs.com/package/qrcode#manual-mode</a></p>\n</blockquote>\n<p>Great find!!</p>",
        "id": 235272399,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1618880014
    },
    {
        "content": "<p>thanks for all your help!  I corrected the errors you found.</p>\n<p><a href=\"/user_uploads/10155/CO0I4mqLoPxCYHpBGGheU83H/devmale.png\">devmale.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/CO0I4mqLoPxCYHpBGGheU83H/devmale.png\" title=\"devmale.png\"><img src=\"/user_uploads/10155/CO0I4mqLoPxCYHpBGGheU83H/devmale.png\"></a></div><p>{\"iss\":\"https://mychartpoc.uchealth.org\",\"nbf\":1619033340,\"vc\":{\"type\":[\"VerifiableCredential\",\"https://smarthealth.cards#covid19\",\"https://smarthealth.cards#health-card\",\"https://smarthealth.cards#immunization\"],\"credentialSubject\":{\"fhirVersion\":\"4.0.1\",\"fhirBundle\":<br>\n{\"resourceType\":\"Bundle\",\"type\":\"collection\",\"entry\":[</p>\n<p>{\"fullUrl\":\"resource:0\",\"resource\":{\"resourceType\":\"Patient\",\"name\":[{\"family\":\"Dev\",\"given\":[\"Male\"]}],\"birthDate\":\"1945-02-01\"}},</p>\n<p>{\"fullUrl\":\"resource:1\",\"resource\":{\"resourceType\":\"Immunization\",\"status\":\"completed\",\"vaccineCode\":{\"coding\":[{\"system\":\"http://hl7.org/fhir/sid/cvx\",\"code\":\"207\"}]},\"patient\":{\"reference\":\"resource:0\"},\"occurrenceDateTime\":\"2021-01-13\",\"performer\":[{\"actor\":{\"display\":\"University of Colorado Hospital - Aurora\"}}],\"lotNumber\":\"13355\"}},</p>\n<p>{\"fullUrl\":\"resource:2\",\"resource\":{\"resourceType\":\"Immunization\",\"status\":\"completed\",\"vaccineCode\":{\"coding\":[{\"system\":\"http://hl7.org/fhir/sid/cvx\",\"code\":\"207\"}]},\"patient\":{\"reference\":\"resource:0\"},\"occurrenceDateTime\":\"2021-03-17\",\"performer\":[{\"actor\":{\"display\":\"University of Colorado Hospital - Aurora\"}}],\"lotNumber\":\"EH5678\"}}]}}}}</p>",
        "id": 235568048,
        "sender_full_name": "Brian Agnes",
        "timestamp": 1619033519
    },
    {
        "content": "<p>Nice!</p>",
        "id": 235569065,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619033912
    },
    {
        "content": "<p>Ive been working on improving my SHC implementation.  Here is a link that contains my SHC.  <a href=\"https://id.verifymyidentity.com/smart-health-cards/psi/197330163473583\">https://id.verifymyidentity.com/smart-health-cards/psi/197330163473583</a>   What is the best way to verify it.  I guess now that I have all the pieces in place it can be verified with the node.js tool?</p>",
        "id": 235918179,
        "sender_full_name": "Alan Viars",
        "timestamp": 1619216854
    },
    {
        "content": "<p>That'd be a great step. You can also run the FHIR validator per <a href=\"https://smarthealth.cards/#what-testing-tools-are-available-to-validate-smart-health-cards-implementations\">https://smarthealth.cards/#what-testing-tools-are-available-to-validate-smart-health-cards-implementations</a></p>",
        "id": 235919501,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619217792
    },
    {
        "content": "<p>I'm just getting tripped up on the SDK tool.  Im not sure what im doing is right or not, but I'm getting errors.  Seems to be finding this now: <a href=\"https://id.verifymyidentity.com/.well-known/jwks.json\">https://id.verifymyidentity.com/.well-known/jwks.json</a>  Here is what I'm getting.<br>\n<a href=\"/user_uploads/10155/8lKvlnk1CIdS6bbEcfxgD2yG/Screen-Shot-2021-04-23-at-6.46.59-PM.png\">Screen-Shot-2021-04-23-at-6.46.59-PM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/8lKvlnk1CIdS6bbEcfxgD2yG/Screen-Shot-2021-04-23-at-6.46.59-PM.png\" title=\"Screen-Shot-2021-04-23-at-6.46.59-PM.png\"><img src=\"/user_uploads/10155/8lKvlnk1CIdS6bbEcfxgD2yG/Screen-Shot-2021-04-23-at-6.46.59-PM.png\"></a></div>",
        "id": 235919888,
        "sender_full_name": "Alan Viars",
        "timestamp": 1619218064
    },
    {
        "content": "<p>Im using <span class=\"user-mention\" data-user-id=\"365368\">@James Kizer</span>  code to generate the JWKS and to do the encoding/signing.  I'm attempting to use the Node.js by <span class=\"user-mention\" data-user-id=\"385047\">@Christian Paquin</span>  to decode/validate.  There is a high probability these both work just fine and I'm doing something wrong.  Any help is greatly appreciated.</p>",
        "id": 235920189,
        "sender_full_name": "Alan Viars",
        "timestamp": 1619218259
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"391350\">Alan Viars</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/generating.20QR.20code.20.28compression.29/near/235920189\">said</a>:</p>\n<blockquote>\n<p>Any help is greatly appreciated.</p>\n</blockquote>\n<p>Can you share an updated QR image?</p>",
        "id": 235920823,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1619218706
    },
    {
        "content": "<p><a href=\"https://id.verifymyidentity.com/smart-health-cards/psi/197330163473583\">https://id.verifymyidentity.com/smart-health-cards/psi/197330163473583</a> has one</p>",
        "id": 235921534,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1619219189
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"391350\">Alan Viars</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/generating.20QR.20code.20.28compression.29/near/235920189\">said</a>:</p>\n<blockquote>\n<p>Any help is greatly appreciated.</p>\n</blockquote>\n<p>Ok, ran the SDK on the QR, I get the same output as you. The first set of warnings/errors related to the key identifiers (<code>kid</code>) of the issuer keys; the spec mandates that they are the hash of their crypto values, rather than an application-specific value (like your \"<a href=\"http://id.verifymyidentity.com\">id.verifymyidentity.com</a>\"); see <a href=\"https://smarthealth.cards/#determining-keys-associated-with-an-issuer\">this section</a> of the spec. You can ignore the warnings about the wrong algorithm and key type; these relate to the encryption key in the key set; it's ok to be present in the set (although not used by SMART health cards), but the SDK warns about them for completeness.</p>\n<p>One warning is about the extra <code>@context</code> in the <a href=\"http://JWS.vc\">JWS.vc</a>; this has been removed in <a href=\"https://smarthealth.cards/changelog/#045\">v0.4.5 of the spec</a>.</p>\n<p>The schema error in the fhir bundle relates to the occurrence date for <code>resource:1</code>; it should be YYYY-MM-DD, so you either flipped the MM and DD in \"2021-22-01\", or it's a typo (probably the latter, because the 2nd dose's date is ok).</p>",
        "id": 236009441,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1619300265
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"385047\">Christian Paquin</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/generating.20QR.20code.20.28compression.29/near/236009441\">said</a>:</p>\n<blockquote>\n<p>The first set of warnings/errors related to the key identifiers (<code>kid</code>) of the issuer keys; the spec mandates that they are the hash of their crypto values, rather than an application-specific value (like your \"<a href=\"http://id.verifymyidentity.com\">id.verifymyidentity.com</a>\"); see <a href=\"https://smarthealth.cards/#determining-keys-associated-with-an-issuer\">this section</a> of the spec.</p>\n</blockquote>\n<p>FYI <span class=\"user-mention\" data-user-id=\"365368\">@James Kizer</span>, since Alan said he used your code to generate the JWKS; just wanted point to the <code>kid</code> issue he faced.</p>",
        "id": 236009762,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1619300522
    },
    {
        "content": "<p>I modified those <code>kid</code> values, so <span class=\"user-mention\" data-user-id=\"365368\">@James Kizer</span>  code may be just fine.  Let me have another go at it <span class=\"user-mention\" data-user-id=\"385047\">@Christian Paquin</span></p>",
        "id": 236404102,
        "sender_full_name": "Alan Viars",
        "timestamp": 1619555962
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"391350\">Alan Viars</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/generating.20QR.20code.20.28compression.29/near/236404102\">said</a>:</p>\n<blockquote>\n<p>I modified those <code>kid</code> values, so <span class=\"user-mention silent\" data-user-id=\"365368\">James Kizer</span>  code may be just fine.  Let me have another go at it <span class=\"user-mention silent\" data-user-id=\"385047\">Christian Paquin</span></p>\n</blockquote>\n<p>Having the <code>kid</code> values being the hash digest of the key values provide a secure fingerprint which prevents an attacker from swapping keys or pretending to be the issuer.</p>",
        "id": 236405464,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1619556539
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"385047\">@Christian Paquin</span>   Is this looking better ? <a href=\"https://id.verifymyidentity.com/smart-health-cards/psi/197330163473583\">https://id.verifymyidentity.com/smart-health-cards/psi/197330163473583</a></p>\n<p>Here is what I'm getting. It looks better but still saying JWS Validation failed. <a href=\"user_uploads/10155/Ppp7Bj6sGfVFJbAnd3hXISRn/Screen-Shot-2021-04-28-at-8.43.37-AM.png\">Screen-Shot-2021-04-28-at-8.43.37-AM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"user_uploads/10155/Ppp7Bj6sGfVFJbAnd3hXISRn/Screen-Shot-2021-04-28-at-8.43.37-AM.png\" title=\"Screen-Shot-2021-04-28-at-8.43.37-AM.png\"><img src=\"user_uploads/10155/Ppp7Bj6sGfVFJbAnd3hXISRn/Screen-Shot-2021-04-28-at-8.43.37-AM.png\"></a></div>",
        "id": 236499040,
        "sender_full_name": "Alan Viars",
        "timestamp": 1619613545
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"391350\">Alan Viars</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/generating.20QR.20code.20.28compression.29/near/236499040\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"385047\">Christian Paquin</span>   Is this looking better ? <a href=\"https://id.verifymyidentity.com/smart-health-cards/psi/197330163473583\">https://id.verifymyidentity.com/smart-health-cards/psi/197330163473583</a></p>\n</blockquote>\n<p>I get the same. I'll trace into the validation tool to see if I can more info...</p>",
        "id": 236507163,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1619616796
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"385047\">@Christian Paquin</span>   Here is my JWKS <a href=\"https://id.verifymyidentity.com/.well-known/jwks.json\">https://id.verifymyidentity.com/.well-known/jwks.json</a> i think its still the kid.</p>",
        "id": 236519412,
        "sender_full_name": "Alan Viars",
        "timestamp": 1619621228
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"391350\">Alan Viars</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/generating.20QR.20code.20.28compression.29/near/236519412\">said</a>:</p>\n<blockquote>\n<p>Thanks <span class=\"user-mention silent\" data-user-id=\"385047\">Christian Paquin</span>   Here is my JWKS <a href=\"https://id.verifymyidentity.com/.well-known/jwks.json\">https://id.verifymyidentity.com/.well-known/jwks.json</a> i think its still the kid.</p>\n</blockquote>\n<p>I think the key is ok; validation code can find and use it. I just tried validating the JWS with a different module (<code>jose</code>) than the one used in the SDK (<code>node-jose</code>), to see if I'd get a clearer error message: no luck, same invalid signature. Crypto errors are hard to debug, any modification to headers or payload after signing will result in an invalid signature. Was that the case? I noticed the <code>\"typ\":\"JWT\"</code> header in the JWS, not specified in the spec. Was that added post-signing by some encoding code? Can you share the code snippet used to generate the JWS, it'd be helpful to pinpoint the issue.</p>",
        "id": 236520888,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1619621732
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"391350\">Alan Viars</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/generating.20QR.20code.20.28compression.29/near/236519412\">said</a>:</p>\n<blockquote>\n<p>Thanks <span class=\"user-mention silent\" data-user-id=\"385047\">Christian Paquin</span>   Here is my JWKS <a href=\"https://id.verifymyidentity.com/.well-known/jwks.json\">https://id.verifymyidentity.com/.well-known/jwks.json</a> i think its still the kid.</p>\n</blockquote>\n<p>And of course, as I mentioned before, the key warning is about the encryption key in the JWKS. This is ok for the spec, but I recommend removing it from the file as 1) it's not needed for SMART health card processing, and 2) it might confuse fragile verifier implementations.</p>",
        "id": 236521475,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1619621957
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"385047\">@Christian Paquin</span>   yes...just a minute.. Maybe i've fixed it.  Need to merge PR and deploy updates.  I</p>",
        "id": 236521739,
        "sender_full_name": "Alan Viars",
        "timestamp": 1619622026
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"385047\">@Christian Paquin</span>   I'm pretty sure i fixed it.  I should remove those use=enc from both pub/private right?  It was the code where i signed.<br>\n<a href=\"https://id.verifymyidentity.com/smart-health-cards/psi/197330163473583\">https://id.verifymyidentity.com/smart-health-cards/psi/197330163473583</a>  Is this looking right to you now?</p>",
        "id": 236524063,
        "sender_full_name": "Alan Viars",
        "timestamp": 1619622514
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"391350\">Alan Viars</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/generating.20QR.20code.20.28compression.29/near/236524063\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"385047\">Christian Paquin</span>   I'm pretty sure i fixed it.  I should remove those use=enc from both pub/private right?  It was the code where i signed.<br>\n<a href=\"https://id.verifymyidentity.com/smart-health-cards/psi/197330163473583\">https://id.verifymyidentity.com/smart-health-cards/psi/197330163473583</a>  Is this looking right to you now?</p>\n</blockquote>\n<p>Yes, new QR works! And yes, you can just delete the JWK with <code>use=enc</code> from your private and public sets.</p>",
        "id": 236532500,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1619625342
    },
    {
        "content": "<p>Working now with no warnings or errors. <span class=\"user-mention\" data-user-id=\"385047\">@Christian Paquin</span> <a href=\"/user_uploads/10155/LFrqNSo9yJFghbxKktDVHIU1/Screen-Shot-2021-04-28-at-2.23.40-PM.png\">Screen-Shot-2021-04-28-at-2.23.40-PM.png</a>   I'm still using <span class=\"user-mention\" data-user-id=\"365368\">@James Kizer</span>  's utilities to generate the keyset, but stripping out anything that is not a <code>use=sig</code>.  Thanks so much for your help!</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/LFrqNSo9yJFghbxKktDVHIU1/Screen-Shot-2021-04-28-at-2.23.40-PM.png\" title=\"Screen-Shot-2021-04-28-at-2.23.40-PM.png\"><img src=\"/user_uploads/10155/LFrqNSo9yJFghbxKktDVHIU1/Screen-Shot-2021-04-28-at-2.23.40-PM.png\"></a></div>",
        "id": 236555530,
        "sender_full_name": "Alan Viars",
        "timestamp": 1619634438
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"365368\">@James Kizer</span> maybe you saw my PR's that make your tools pip installable.</p>",
        "id": 236555583,
        "sender_full_name": "Alan Viars",
        "timestamp": 1619634466
    }
]