[
    {
        "content": "<p>Is this right? (should correspond to <a href=\"https://smarthealth.cards/examples/example-00-a-fhirBundle.json\">https://smarthealth.cards/examples/example-00-a-fhirBundle.json</a>)<br>\n<a href=\"/user_uploads/10155/cQcLpFrig1_Z9haeqcijN05-/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/cQcLpFrig1_Z9haeqcijN05-/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/cQcLpFrig1_Z9haeqcijN05-/image.png\"></a></div>",
        "id": 239476667,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1621449948
    },
    {
        "content": "<p>I scanned it into the microsoft validator tool(<a href=\"https://demo-portals.smarthealth.cards/VerifierPortal.html\">https://demo-portals.smarthealth.cards/VerifierPortal.html</a>) and it says the QR code is using version 29(should be 22)</p>",
        "id": 239477006,
        "sender_full_name": "Daniel Lee",
        "timestamp": 1621450067
    },
    {
        "content": "<p>The payload does have a FHIR bundle with a <code>Patient</code> resource and 2 <code>Immunization</code> resources.</p>",
        "id": 239477175,
        "sender_full_name": "Daniel Lee",
        "timestamp": 1621450140
    },
    {
        "content": "<p>Likely a problem with numeric encoding here.</p>",
        "id": 239477247,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1621450186
    },
    {
        "content": "<p>Though if that's the case I'd expect two validation errors: one for V29 code (&gt;22) and one for non-numeric encoding (if that's what's happening).</p>",
        "id": 239477366,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1621450225
    },
    {
        "content": "<p>Thanks Daniel and Josh<br>\nI checked the numeric encoding and it matched the <a href=\"https://smarthealth.cards/examples/example-00-f-qr-code-numeric-value-0.txt\">https://smarthealth.cards/examples/example-00-f-qr-code-numeric-value-0.txt</a></p>",
        "id": 239477669,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1621450369
    },
    {
        "content": "<p>So, the <em>string of digits</em> is right, but you're not creating a QR with a numeric-mode segment (I'm guessing).</p>",
        "id": 239477760,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1621450411
    },
    {
        "content": "<p>It's like what I'd get if I changed <a href=\"https://github.com/smart-on-fhir/health-cards/blob/main/generate-examples/src/index.ts#L180\">this line</a> of the example generator to say <code>mode: \"bytes\"</code> (not sure if this helps you, but just want to give you a concrete sense of what may be happening).</p>",
        "id": 239477875,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1621450448
    },
    {
        "content": "<p>Thanks, yes, probably that's the issue. It seems that the library I am using does not have that option, let me check</p>",
        "id": 239477957,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1621450493
    },
    {
        "content": "<p>What language are you using?</p>",
        "id": 239477988,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1621450504
    },
    {
        "content": "<p>JavaScript</p>",
        "id": 239478022,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1621450517
    },
    {
        "content": "<p>Using <a href=\"http://davidshimjs.github.io/qrcodejs/\">http://davidshimjs.github.io/qrcodejs/</a></p>",
        "id": 239478055,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1621450538
    },
    {
        "content": "<p><a href=\"https://www.npmjs.com/package/qrcode\">https://www.npmjs.com/package/qrcode</a> , this library is what most of us are using, it allows you to mix and match modes</p>",
        "id": 239478096,
        "sender_full_name": "Daniel Lee",
        "timestamp": 1621450558
    },
    {
        "content": "<p>Thanks, I'll try that one</p>",
        "id": 239478211,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1621450596
    },
    {
        "content": "<p>+1 for <a href=\"https://www.npmjs.com/package/qrcode\">https://www.npmjs.com/package/qrcode</a> if you're writing in JS -- and <a href=\"https://github.com/nayuki/QR-Code-generator\">https://github.com/nayuki/QR-Code-generator</a>  has a high quality set of libraries in multiple languages (including JS, python, Java, and C)</p>",
        "id": 239478254,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1621450618
    },
    {
        "content": "<p>Lack of support for multi-segment QR generation is a common \"gotcha\" is less-than-full-featured QR generation libraries.</p>",
        "id": 239478367,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1621450676
    },
    {
        "content": "<p>(On the plus side, all <em>reader</em> libraries we've found can read these QRs.)</p>",
        "id": 239478459,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1621450699
    },
    {
        "content": "<p>Small follow up: I looked into moving the QR code generation server-side (we have iOS / Android / Web front-end, so that would make things easier), but cannot find a C# library that support specifying multiple segments and the mode to use for each (or even the mode to use for everything - seems to use always byte)</p>",
        "id": 239497078,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1621458917
    },
    {
        "content": "<p><a href=\"https://codecrete.net/QrCodeGenerator/api/Net.Codecrete.QrCodeGenerator.QrCode.html\">https://codecrete.net/QrCodeGenerator/api/Net.Codecrete.QrCodeGenerator.QrCode.html</a> seems to allow a List of segments, each with a mode.</p>\n<blockquote>\n<p>Mid level: Custom-make a list of QrSegment instances</p>\n</blockquote>\n<p>This is from <a href=\"https://www.nuget.org/packages/Net.Codecrete.QrCodeGenerator/\">https://www.nuget.org/packages/Net.Codecrete.QrCodeGenerator/</a></p>",
        "id": 239499579,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1621460222
    },
    {
        "content": "<p>Thanks (again!) Josh, I'll try that</p>",
        "id": 239504384,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1621463048
    },
    {
        "content": "<p>Got this now:<br>\n<a href=\"/user_uploads/10155/_h6ns2_o2ql06UMRtXg4b5cj/qrcode.png\">qrcode.png</a> <br>\n...that scans ok and looks to be of the right size, but it still not identical to <a href=\"https://smarthealth.cards/examples/example-00-g-qr-code-0.svg\">https://smarthealth.cards/examples/example-00-g-qr-code-0.svg</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/_h6ns2_o2ql06UMRtXg4b5cj/qrcode.png\" title=\"qrcode.png\"><img src=\"/user_uploads/10155/_h6ns2_o2ql06UMRtXg4b5cj/qrcode.png\"></a></div>",
        "id": 239593427,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1621518261
    },
    {
        "content": "<p>If you've got this right data encoded, and the right segments (one with bytes mode for the prefix, and one with numeric mode for the main content) then you should be good to go. There are a couple of underlying reasons why your output might differ from someone else's even for the same data: you may be applying a higher level of error correction (which is okay as long as you fit within a v22 symbol) or your library may be choosing masking patterns differently (this shouldn't happen as far as I know, but I could imagine libraries might be less than perfect on this).</p>",
        "id": 239620845,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1621528243
    },
    {
        "content": "<p>John Anyperson for the first QR code, and Ashley Goodwin for the second.</p>\n<p><a href=\"/user_uploads/10155/4vnk8A6F8RYdurrR8E0JlCk2/IMG_8006.PNG\">IMG_8006.PNG</a> <a href=\"/user_uploads/10155/hOGnatk3QNDgIP_9DphKItFT/IMG_8005.PNG\">IMG_8005.PNG</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/4vnk8A6F8RYdurrR8E0JlCk2/IMG_8006.PNG\" title=\"IMG_8006.PNG\"><img src=\"/user_uploads/10155/4vnk8A6F8RYdurrR8E0JlCk2/IMG_8006.PNG\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/10155/hOGnatk3QNDgIP_9DphKItFT/IMG_8005.PNG\" title=\"IMG_8005.PNG\"><img src=\"/user_uploads/10155/hOGnatk3QNDgIP_9DphKItFT/IMG_8005.PNG\"></a></div>",
        "id": 239779756,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1621615280
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191912\">Michele Mottini</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/QR.20code.20generation/near/239593427\">said</a>:</p>\n<blockquote>\n<p>Got this now:<br>\n<a href=\"/user_uploads/10155/_h6ns2_o2ql06UMRtXg4b5cj/qrcode.png\">qrcode.png</a> <br>\n...that scans ok and looks to be of the right size, but it still not identical to <a href=\"https://smarthealth.cards/examples/example-00-g-qr-code-0.svg\">https://smarthealth.cards/examples/example-00-g-qr-code-0.svg</a></p>\n</blockquote>\n<p>One thing I noticed is that the health card you shared doesn't have an issuer. See the out put from a scanner app.</p>\n<p><a href=\"/user_uploads/10155/V8fn4ocBHVY6n2tH6u0fTrT2/image.png\">image.png</a><br>\n<a href=\"/user_uploads/10155/minp_Zn3Q3zcRdJVcxaqSKEz/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/V8fn4ocBHVY6n2tH6u0fTrT2/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/V8fn4ocBHVY6n2tH6u0fTrT2/image.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/10155/minp_Zn3Q3zcRdJVcxaqSKEz/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/minp_Zn3Q3zcRdJVcxaqSKEz/image.png\"></a></div>",
        "id": 240208837,
        "sender_full_name": "Mahesh V S",
        "timestamp": 1621957966
    },
    {
        "content": "<p>Yes, the sample I was using does not have an issuer</p>",
        "id": 240210138,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1621958373
    }
]