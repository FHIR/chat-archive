[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"306186\">@Vijayendra Prabhakar</span> I'm trying to test out your verifier app, but am getting an unexpected \"Signature is invalid\" error.</p>\n<p>It works with one of the QR codes we've generated, (e.g. <a href=\"https://connectathon.vci.org/patients/1\">https://connectathon.vci.org/patients/1</a>)</p>\n<p><a href=\"/user_uploads/10155/fcoFl4nPcIZu75y7dX7YVZju/Screen-Shot-2021-05-18-at-9.26.48-AM.png\">Screen-Shot-2021-05-18-at-9.26.48-AM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/fcoFl4nPcIZu75y7dX7YVZju/Screen-Shot-2021-05-18-at-9.26.48-AM.png\" title=\"Screen-Shot-2021-05-18-at-9.26.48-AM.png\"><img src=\"/user_uploads/10155/fcoFl4nPcIZu75y7dX7YVZju/Screen-Shot-2021-05-18-at-9.26.48-AM.png\"></a></div><p>but not with <a href=\"https://smarthealth.cards/examples/example-00-g-qr-code-0.svg\">the first spec example</a></p>\n<p><a href=\"/user_uploads/10155/CiOs3WaSJVI-dHxzKQV61O7P/Screen-Shot-2021-05-18-at-9.20.01-AM.png\">Screen-Shot-2021-05-18-at-9.20.01-AM.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/CiOs3WaSJVI-dHxzKQV61O7P/Screen-Shot-2021-05-18-at-9.20.01-AM.png\" title=\"Screen-Shot-2021-05-18-at-9.20.01-AM.png\"><img src=\"/user_uploads/10155/CiOs3WaSJVI-dHxzKQV61O7P/Screen-Shot-2021-05-18-at-9.20.01-AM.png\"></a></div><p>Any ideas on why the spec example QR is failing?</p>",
        "id": 239253367,
        "sender_full_name": "Reece Adamson",
        "timestamp": 1621344513
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 239253945,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1621344734
    },
    {
        "content": "<p>This is failing when I try to scan: <a href=\"https://smarthealth.cards/examples/example-00-g-qr-code-0.svg\">https://smarthealth.cards/examples/example-00-g-qr-code-0.svg</a></p>",
        "id": 239254017,
        "sender_full_name": "Reece Adamson",
        "timestamp": 1621344771
    },
    {
        "content": "<p>Link to the verifier: <a href=\"https://smart-health-vault-siemens-healthineers.azurewebsites.net/verifier\">https://smart-health-vault-siemens-healthineers.azurewebsites.net/verifier</a></p>",
        "id": 239254130,
        "sender_full_name": "Reece Adamson",
        "timestamp": 1621344801
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197651\">Reece Adamson</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/Connectathon.2027.20siemens.20QR.20scanner.20testing/near/239253367\">said</a>:</p>\n<blockquote>\n<p>Hey <span class=\"user-mention silent\" data-user-id=\"306186\">Vijayendra Prabhakar</span> I'm trying to test out your verifier app, but am getting an unexpected \"Signature is invalid\" error.</p>\n<p>It works with one of the QR codes we've generated, (e.g. <a href=\"https://connectathon.vci.org/patients/1\">https://connectathon.vci.org/patients/1</a>)</p>\n<p><a href=\"/user_uploads/10155/fcoFl4nPcIZu75y7dX7YVZju/Screen-Shot-2021-05-18-at-9.26.48-AM.png\">Screen-Shot-2021-05-18-at-9.26.48-AM.png</a></p>\n<p>but not with <a href=\"https://smarthealth.cards/examples/example-00-g-qr-code-0.svg\">the first spec example</a></p>\n<p><a href=\"/user_uploads/10155/CiOs3WaSJVI-dHxzKQV61O7P/Screen-Shot-2021-05-18-at-9.20.01-AM.png\">Screen-Shot-2021-05-18-at-9.20.01-AM.png</a> </p>\n<p>Any ideas on why the spec example QR is failing?</p>\n</blockquote>\n<p>Hey <span class=\"user-mention\" data-user-id=\"197651\">@Reece Adamson</span>  we support only PNGs for the moment and not SVGs.  Also the issuer from the example is not a valid public issuer which is also one of the reasons why it is failing.</p>",
        "id": 239254941,
        "sender_full_name": "Vijayendra Prabhakar",
        "timestamp": 1621345106
    },
    {
        "content": "<p>I was scanning using the camera on my mac so I don't think that the SVG should be a problem.</p>",
        "id": 239255333,
        "sender_full_name": "Reece Adamson",
        "timestamp": 1621345250
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197651\">Reece Adamson</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/Connectathon.2027.20siemens.20QR.20scanner.20testing/near/239255333\">said</a>:</p>\n<blockquote>\n<p>I was scanning using the camera on my mac so I don't think that the SVG should be a problem.</p>\n</blockquote>\n<p>Hi, What vijay was trying say is that, we support only png file selection in verfier.</p>",
        "id": 239255653,
        "sender_full_name": "Maruthi M",
        "timestamp": 1621345392
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"386409\">@Maruthi M</span> I might be mis-understanding, but I am using the \"Scan QR\" option, not the \"Choose Files Option\".</p>",
        "id": 239258307,
        "sender_full_name": "Reece Adamson",
        "timestamp": 1621346421
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197651\">Reece Adamson</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/Connectathon.2027.20siemens.20QR.20scanner.20testing/near/239258307\">said</a>:</p>\n<blockquote>\n<p>Hey <span class=\"user-mention silent\" data-user-id=\"386409\">Maruthi M</span> I might be mis-understanding, but I am using the \"Scan QR\" option, not the \"Choose Files Option\".</p>\n</blockquote>\n<p>Hey <span class=\"user-mention\" data-user-id=\"197651\">@Reece Adamson</span>  we understand what you are doing. The thing is the QR codes from the examples does not contain a valid issuer url. It starts with \"<a href=\"https://smarthealth.cards/examples/issuer\">https://smarthealth.cards/examples/issuer</a>\" which is not a accessible url from which we could get the  public keys( JWKS)</p>",
        "id": 239259254,
        "sender_full_name": "Vijayendra Prabhakar",
        "timestamp": 1621346759
    },
    {
        "content": "<p>Ah I see. The public keys do exist at <a href=\"https://smarthealth.cards/examples/issuer/.well-known/jwks.json\">https://smarthealth.cards/examples/issuer/.well-known/jwks.json</a>, but there isn't a requirement that the base <code>iss</code> url resolves. <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> not sure if you have any thoughts on this (i.e. does it matter if the <code>iss</code> resolves as long as <code>{iss}/.well-known/jwks.json</code> resolves)?</p>",
        "id": 239260292,
        "sender_full_name": "Reece Adamson",
        "timestamp": 1621347180
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306186\">Vijayendra Prabhakar</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/Connectathon.2027.20siemens.20QR.20scanner.20testing/near/239259254\">said</a>:</p>\n<blockquote>\n<p>Hey <span class=\"user-mention silent\" data-user-id=\"197651\">Reece Adamson</span>  we understand what you are doing. The thing is the QR codes from the examples does not contain a valid issuer url. It starts with \"<a href=\"https://smarthealth.cards/examples/issuer\">https://smarthealth.cards/examples/issuer</a>\" which is not a accessible url from which we could get the  public keys( JWKS)</p>\n</blockquote>\n<p>The spec examples are properly signed, and the public keys are published <a href=\"https://smarthealth.cards/examples/issuer/.well-known/jwks.json\">here</a> (adding <code>.well-known/jwks.json</code> to the issuer URL.</p>",
        "id": 239260773,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1621347371
    },
    {
        "content": "<blockquote>\n<p>there isn't a requirement that the base iss url resolves</p>\n</blockquote>\n<p>fyi - our iss doesn't resolve to anything as of right now, further, it's unclear what it should resolve to ... a web page explaining stuff?</p>",
        "id": 239262106,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1621347868
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197651\">Reece Adamson</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/Connectathon.2027.20siemens.20QR.20scanner.20testing/near/239260292\">said</a>:</p>\n<blockquote>\n<p>Ah I see. The public keys do exist at <a href=\"https://smarthealth.cards/examples/issuer/.well-known/jwks.json\">https://smarthealth.cards/examples/issuer/.well-known/jwks.json</a>, but there isn't a requirement that the base <code>iss</code> url resolves.</p>\n</blockquote>\n<p>There is no requirement for the issuer URL to resolve.</p>",
        "id": 239263259,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1621348278
    },
    {
        "content": "<blockquote>\n<p>there isn't a requirement that the base iss url resolves</p>\n</blockquote>\n<p>It's true there's no <em>requirement</em> for <code>iss</code> itself to resolve, but we do kind of hope/expect that <code>iss</code> represents a consumer-facing recognizable brand (to the extent that the issuer has such a brand). It might be worth adding language to encourage this.</p>",
        "id": 239266675,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1621349402
    },
    {
        "content": "<p>Like, for a pharmacy issuing health cards, the <code>iss</code> could be the pharmacy's public, widely recognized domain. This promotes transparency and trust in linking issuers, so for example even without any formal trust framework you might show a user a message like \"This Health Card was issued by <a href=\"https://mypharmacy.example.org\">https://mypharmacy.example.org</a>. Please proceed only if you recognize and trust this issuer.\" (This a lot harder if the <code>iss</code> is something like \"<a href=\"https://proxy-gateway-01.hc.ec-us.cloud.example.org\">https://proxy-gateway-01.hc.ec-us.cloud.example.org</a>\")</p>",
        "id": 239267035,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1621349525
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"385047\">@Christian Paquin</span>  one query here, if iss  is not resolved then how will the verifier access .well-known/jwks.json ?</p>",
        "id": 239267043,
        "sender_full_name": "Vijayendra Prabhakar",
        "timestamp": 1621349525
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"306186\">Vijayendra Prabhakar</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/Connectathon.2027.20siemens.20QR.20scanner.20testing/near/239267043\">said</a>:</p>\n<blockquote>\n<p>Hey <span class=\"user-mention silent\" data-user-id=\"385047\">Christian Paquin</span>  one query here, if iss  is not resolved then how will the verifier access .well-known/jwks.json ?</p>\n</blockquote>\n<p>The full url ending with <code>.well-known/jwks.json</code> must resolve to the issuer key set, but the base one doesn't need to. Just like the spec examples: <code>https://smarthealth.cards/examples/issuer/</code> is 404 but <code>https://smarthealth.cards/examples/issuer/.well-known/jwks.json</code> provides the key set.</p>",
        "id": 239267755,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1621349773
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"385047\">Christian Paquin</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/Connectathon.2027.20siemens.20QR.20scanner.20testing/near/239267755\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"306186\">Vijayendra Prabhakar</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/Connectathon.2027.20siemens.20QR.20scanner.20testing/near/239267043\">said</a>:</p>\n<blockquote>\n<p>Hey <span class=\"user-mention silent\" data-user-id=\"385047\">Christian Paquin</span>  one query here, if iss  is not resolved then how will the verifier access .well-known/jwks.json ?</p>\n</blockquote>\n<p>The full url ending with <code>.well-known/jwks.json</code> must resolve to the issuer key set, but the base one doesn't need to. Just like the spec examples: <code>https://smarthealth.cards/examples/issuer/</code> is 404 but <code>https://smarthealth.cards/examples/issuer/.well-known/jwks.json</code> provides the key set.</p>\n</blockquote>\n<p>Oh ok thanks. Even we are verifying the full url ending with .well-known/jwks.json. Like the one in the example <a href=\"https://smarthealth.cards/examples/issuer/.well-known/jwks.json\">https://smarthealth.cards/examples/issuer/.well-known/jwks.json</a></p>",
        "id": 239268290,
        "sender_full_name": "Vijayendra Prabhakar",
        "timestamp": 1621349981
    },
    {
        "content": "<p>Just tested the holder and successfully imported a health card as a QR code and then was able to subsequently scan the regenerated QR code and verify the signature. QR codes from the original issuer and on the app are the same</p>\n<p>See Patient \"Dewayne, Anderson\" on the siemens holder. The patient can be found here at the issuer: <a href=\"https://connectathon.vci.org/patients/14\">https://connectathon.vci.org/patients/14</a></p>",
        "id": 239324699,
        "sender_full_name": "Reece Adamson",
        "timestamp": 1621371397
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"306186\">@Vijayendra Prabhakar</span> I just tested out the multiple QR code scanning with <a href=\"https://smarthealth.cards/examples/\">Example 2 from the spec</a> and was able to get it to successfully scan the 3 QR codes and verify the signature. <a href=\"/user_uploads/10155/bqYBYmzqDOZnWmdsbmV8tcRC/Screen-Shot-2021-05-19-at-10.44.42-AM.png\">Screen-Shot-2021-05-19-at-10.44.42-AM.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/bqYBYmzqDOZnWmdsbmV8tcRC/Screen-Shot-2021-05-19-at-10.44.42-AM.png\" title=\"Screen-Shot-2021-05-19-at-10.44.42-AM.png\"><img src=\"/user_uploads/10155/bqYBYmzqDOZnWmdsbmV8tcRC/Screen-Shot-2021-05-19-at-10.44.42-AM.png\"></a></div>",
        "id": 239437276,
        "sender_full_name": "Reece Adamson",
        "timestamp": 1621435668
    },
    {
        "content": "<p>It looks like it still can't verify the second example from the spec. Are these keys manually loaded at the moment (the second example is signed with a different key from the same JWKS)?</p>",
        "id": 239437535,
        "sender_full_name": "Reece Adamson",
        "timestamp": 1621435734
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197651\">Reece Adamson</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/Connectathon.2027.20siemens.20QR.20scanner.20testing/near/239437535\">said</a>:</p>\n<blockquote>\n<p>It looks like it still can't verify the second example from the spec. Are these keys manually loaded at the moment (the second example is signed with a different key from the same JWKS)?</p>\n</blockquote>\n<p>What do you call 2nd example? Is is example 01? If so, yes, it is signed by a different key in the jwks (see <a href=\"https://github.com/smart-on-fhir/health-cards/blob/main/generate-examples/src/index.ts#L18\">key selection on line 18</a> of the generation spec, index number selects the key). Examples 00 and 02 are signed by the same key. The key for example 01 contains a x5c field.</p>",
        "id": 239438624,
        "sender_full_name": "Christian Paquin",
        "timestamp": 1621436116
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"385047\">@Christian Paquin</span> Yes, I'm referring to example 01. (e.g. <a href=\"https://smarthealth.cards/examples/example-01-g-qr-code-0.svg\">this QR code</a>)</p>",
        "id": 239439572,
        "sender_full_name": "Reece Adamson",
        "timestamp": 1621436417
    },
    {
        "content": "<p>And what I meant by <em>I</em> can't verify it, I meant that I couldn't verify it using <a href=\"https://smart-health-vault-siemens-healthineers.azurewebsites.net/verifier\">https://smart-health-vault-siemens-healthineers.azurewebsites.net/verifier</a> (sorry if it wasn't clear)</p>",
        "id": 239439771,
        "sender_full_name": "Reece Adamson",
        "timestamp": 1621436475
    },
    {
        "content": "<p>Tested the multiple QRs with the <a href=\"https://github.com/microsoft/health-cards-validation-SDK\">validation-sdk</a> it also looks like there are a few errors/warnings. One that stands out to me is that it looks like the <code>kid</code> for <a href=\"https://smart-health-issuer.azurewebsites.net/issuer/.well-known/jwks.json\">this JWK</a> is not calculated/assigned correctly. I double checked with <a href=\"https://rubygems.org/gems/health_cards\">our Ruby library</a> and which agrees with the validation-sdk as <code>Dcgz_ncijpuFTy9FSiRX_L2tyHIu6KfmQu7ixrPMqzU</code> being the correct thumbprint for the key in the JWK.</p>\n<div class=\"codehilite\" data-code-language=\"Bash\"><pre><span></span><code>&gt; node . --path ~/Downloads/smart-health-card-29715b32-d684-45a0-a665-bca0075072e9_0.png --path ~/Downloads/smart-health-card-29715b32-d684-45a0-a665-bca0075072e9_1.png --path ~/Downloads/smart-health-card-29715b32-d684-45a0-a665-bca0075072e9_2.png --type qr\n\nSMART Health Card Validation SDK v1.0.0-1\n\n\nQR images <span class=\"o\">(</span><span class=\"m\">3</span><span class=\"o\">)</span>\n   │\n   └─ QR numeric <span class=\"o\">(</span><span class=\"m\">3</span><span class=\"o\">)</span>\n         │\n         └─ JWS-compact\n               │\n                 ...\n               ├─ Error\n               │    · key<span class=\"o\">[</span>996ce4e1-59dc-4390-9666-ccc049a48279<span class=\"o\">]</span>: <span class=\"s1\">'kid'</span> does not match thumbprint <span class=\"k\">in</span> issuer key. expected: Dcgz_ncijpuFTy9FSiRX_L2tyHIu6KfmQu7ixrPMqzU, actual: 996ce4e1-59dc-4390-9666-ccc049a48279\n               │    · key<span class=\"o\">[</span>996ce4e1-59dc-4390-9666-ccc049a48279<span class=\"o\">]</span>: <span class=\"s1\">'alg'</span> missing <span class=\"k\">in</span> issuer key\n                 ...\n</code></pre></div>",
        "id": 239441924,
        "sender_full_name": "Reece Adamson",
        "timestamp": 1621437151
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"197651\">Reece Adamson</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/Connectathon.2027.20siemens.20QR.20scanner.20testing/near/239439771\">said</a>:</p>\n<blockquote>\n<p>And what I meant by <em>I</em> can't verify it, I meant that I couldn't verify it using <a href=\"https://smart-health-vault-siemens-healthineers.azurewebsites.net/verifier\">https://smart-health-vault-siemens-healthineers.azurewebsites.net/verifier</a> (sorry if it wasn't clear)</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"197651\">@Reece Adamson</span>  if there are multiple public keys, we were verifying with the first key. This is now being handled to verify with multiple public keys in the key array.</p>",
        "id": 239454023,
        "sender_full_name": "Vijayendra Prabhakar",
        "timestamp": 1621441142
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>actual: 996ce4e1-59dc-4390-9666-ccc049a48279\n               │    · key[996ce4e1-59dc-4390-9666-ccc049a48279]: &#39;alg&#39; missing in issuer key\n</code></pre></div>\n<p>Yeah, looks like a UUID slipped in here as a <code>kid</code>.</p>",
        "id": 239454957,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1621441507
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191315\">Josh Mandel</span> <a href=\"#narrow/stream/284830-smart.2Fhealth-cards/topic/Connectathon.2027.20siemens.20QR.20scanner.20testing/near/239454957\">said</a>:</p>\n<blockquote>\n<div class=\"codehilite\"><pre><span></span><code>actual: 996ce4e1-59dc-4390-9666-ccc049a48279\n               │    · key[996ce4e1-59dc-4390-9666-ccc049a48279]: &#39;alg&#39; missing in issuer key\n</code></pre></div>\n<p>Yeah, looks like a UUID slipped in here as a <code>kid</code>.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"197651\">@Reece Adamson</span>  <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>  Please dont worry about this because this is one of the smart cards that we have imported to test our issuer API that we created as a POC.</p>",
        "id": 239456040,
        "sender_full_name": "Vijayendra Prabhakar",
        "timestamp": 1621441943
    },
    {
        "content": "<p>Got it. Just so you are aware the <code>kid</code> is incorrect in the <a href=\"https://smart-health-issuer.azurewebsites.net/issuer/.well-known/jwks.json\">hosted JWK</a> as well.</p>",
        "id": 239456997,
        "sender_full_name": "Reece Adamson",
        "timestamp": 1621442293
    }
]