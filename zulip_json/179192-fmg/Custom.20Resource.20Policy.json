[
    {
        "content": "<p>first draft for discussion: </p>",
        "id": 153823970,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462074179
    },
    {
        "content": "<p><a href=\"http://wiki.hl7.org/index.php?title=FHIR_Custom_Resources\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=FHIR_Custom_Resources\">http://wiki.hl7.org/index.php?title=FHIR_Custom_Resources</a></p>",
        "id": 153823971,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462074179
    },
    {
        "content": "<p>So we're not going to differentiate between someone who's introducing a resource that FHIR doesn't cover (i.e. mostly interoperable with FHIR) from those who are introducing alternative models for conveying content FHIR already supports (i.e. what openEHR would like to do)?</p>",
        "id": 153823972,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462074682
    },
    {
        "content": "<p>I'd really like us to have that differentiation.</p>",
        "id": 153823973,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462074701
    },
    {
        "content": "<p>differ how? I'm not against having such a differentiation but I don't know where you'd make it, or how you'd decide whether it was. Sometimes it might be obvious but other times not at all</p>",
        "id": 153823974,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462101348
    },
    {
        "content": "<p>It would have to be done at the time of applying for a name or namespace.  Applications for namespaces would automatically be considered to fall in the \"overlapping\" space.  Applications for names could indicate whether they intended to overlap.  If the intention was not to overlap, then the review process would check that.  And we could have a conformance level for \"extended FHIR\" which would have a schema that would include all of the \"extension\" resource names with content models of xs:any that they could validate against.  Obviously there will be some edge cases where overlap would be unclear and it would also mean additional workload, but I think it's worth trying.</p>",
        "id": 153823978,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462113265
    },
    {
        "content": "<p>On a separate note, I think the review should be CTO, Product Line Manager or their delegate.  There's a lot of jobs on both of your plates and I'd really rather we be removing stuff from that list, not adding to it.</p>",
        "id": 153823979,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462113317
    },
    {
        "content": "<p>the policy does say that you have to declare your intent. I'm not sure what procedures you have in mind to enforce that </p>",
        "id": 153823981,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462118307
    },
    {
        "content": "<p>Just to test my understanding of what you've written:</p>\n<blockquote>\n<p>All these names come out of the same namespace,</p>\n</blockquote>\n<p>Meaning (in current parlance) that all resources will have canonical URLs like <code>http://hl7.org/fhir/StructureDefinition/{{name}}</code> ?</p>",
        "id": 153823984,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462119113
    },
    {
        "content": "<p>yes</p>",
        "id": 153823985,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119131
    },
    {
        "content": "<p>oh no. hang on</p>",
        "id": 153823986,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119141
    },
    {
        "content": "<p>Hmm, doesn't that cause custom resources names to clash?</p>",
        "id": 153823987,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462119143
    },
    {
        "content": "<p>Would we just have a second base like <code>http://fhir.org/CustomStructureDefinition/</code> ?</p>",
        "id": 153823988,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462119167
    },
    {
        "content": "<p>the point is, because of the various places in which names appear, they can't clash</p>",
        "id": 153823989,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119170
    },
    {
        "content": "<p>part of this policy ensures that they don't</p>",
        "id": 153823990,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119179
    },
    {
        "content": "<p>I understand the intent, but not the mechanics (yet).</p>",
        "id": 153823991,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462119188
    },
    {
        "content": "<p>the canonical URL of the structure definition varies according to publisher, but the root comes from a common namespace anyway</p>",
        "id": 153823992,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119219
    },
    {
        "content": "<p>get <a href=\"http://acme.com/fhir/[CustomName]/123\" target=\"_blank\" title=\"http://acme.com/fhir/[CustomName]/123\">http://acme.com/fhir/[CustomName]/123</a></p>",
        "id": 153823993,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119243
    },
    {
        "content": "<p>What does \"root\" mean? The term doesn't appear in <a href=\"http://wiki.hl7.org/index.php?title=FHIR_Custom_Resources\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=FHIR_Custom_Resources\">http://wiki.hl7.org/index.php?title=FHIR_Custom_Resources</a> or  <a href=\"http://hl7-fhir.github.io/structuredefinition\" target=\"_blank\" title=\"http://hl7-fhir.github.io/structuredefinition\">http://hl7-fhir.github.io/structuredefinition</a> or <a href=\"http://hl7-fhir.github.io/elementdefinition\" target=\"_blank\" title=\"http://hl7-fhir.github.io/elementdefinition\">http://hl7-fhir.github.io/elementdefinition</a></p>",
        "id": 153823994,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462119257
    },
    {
        "content": "<p>sorry, the root = 'the actual name of the resource'. wrong term to have used</p>",
        "id": 153823995,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119311
    },
    {
        "content": "<p>So let's say SMART defines an <code>AppManifest</code> resource describing application metadata. What is the canonical URI? What is the \"actual name\"?</p>",
        "id": 153823996,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462119369
    },
    {
        "content": "<p>AppManifest is the actual name. The canonical URL is whatever you publish at</p>",
        "id": 153823997,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119395
    },
    {
        "content": "<p>And later someone else wants to define an <code>AppManifest</code> resource describing, um, applicable manifestations of a disease (I'm reaching here but bear with me).</p>",
        "id": 153823998,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462119401
    },
    {
        "content": "<p>They can't do this, because we already \"grabbed\" the name, even though their canonical URL would be different?</p>",
        "id": 153823999,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462119419
    },
    {
        "content": "<p>yep that's right. </p>",
        "id": 153824000,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119438
    },
    {
        "content": "<p>And if HL7 wants to define such a construct offically, they also can't?</p>",
        "id": 153824001,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462119455
    },
    {
        "content": "<p>well, no. Becuase of this bit: </p>",
        "id": 153824002,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119474
    },
    {
        "content": "<p>\"all custom resource names will include at least one character '-' or '.',\"</p>",
        "id": 153824003,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119495
    },
    {
        "content": "<p>which means, yes, you couldn't use 'AppManifest', you'd have to use 'smart.AppManifest' or something</p>",
        "id": 153824004,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119529
    },
    {
        "content": "<p>Right, OK. Would help to include some examples in the doc to spell this out. I'd argue that we really should use the \"prefix\" strategy exclusively.</p>",
        "id": 153824005,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462119539
    },
    {
        "content": "<p>I forgot that bit earlir</p>",
        "id": 153824006,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119541
    },
    {
        "content": "<p>(No problem, that makes more sense.)</p>",
        "id": 153824007,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462119552
    },
    {
        "content": "<p>and I did intend to do that, agree it would be good to spell that out more than just that slightly obscure sentence</p>",
        "id": 153824008,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119566
    },
    {
        "content": "<p>But overall, registering prefixes makes more more sense to me.</p>",
        "id": 153824009,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462119682
    },
    {
        "content": "<p>I would expect that most things would happen that way</p>",
        "id": 153824010,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119697
    },
    {
        "content": "<p>I have to say that for me, the \"good thing\" that FHIR offers is a core set of resources that drive community agreement.</p>\n<p>The modeling framework itself is a different kind of thing (I recognize that others value it very highly, and that it represents a tremendous amount of work!)</p>",
        "id": 153824011,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462119752
    },
    {
        "content": "<p>I figured, when I was writing the policy, that this is the obvious case to register the name rather than the prefix: \"prototyping resources that will be brought to HL7 to be part of the specification\"</p>",
        "id": 153824012,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119788
    },
    {
        "content": "<p>Given this: I worry that \"Custom FHIR\" will erode FHIR's core value (IMHO) while expanding the most complex parts that few people can understand.</p>",
        "id": 153824013,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462119792
    },
    {
        "content": "<p>yes, lots of people worry about a lot - reflected in Lloyd's first comment</p>",
        "id": 153824014,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119808
    },
    {
        "content": "<p>and I agree completely</p>",
        "id": 153824015,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119821
    },
    {
        "content": "<p>Lloyd is saying something a bit different though.</p>",
        "id": 153824016,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462119832
    },
    {
        "content": "<p>He's expressing concern about eroding FHIR's core value, yes -- but not the second part (encouraging people to focus on the complex parts that they won't understand)</p>",
        "id": 153824017,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462119868
    },
    {
        "content": "<p>you haven't been on the phone calls where we've discussed this - people feel very strongly about it. But there's real communities that want to do this too, and the alternative is to reject them </p>",
        "id": 153824018,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119883
    },
    {
        "content": "<p>Yes, I get that!</p>",
        "id": 153824019,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462119896
    },
    {
        "content": "<p>on the other hand, the machinery to set this up is the complex bit, and would generally be executed by tooling, and consumers would generally not be exposed to the complex bits, only the tool smiths</p>",
        "id": 153824020,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462119960
    },
    {
        "content": "<p>I disagree on this part -- I think the complexity leaks out to everyone working with these resources, not just those authoring them. First off, keeping track of builds of your tools, client libraries, validators, etc that support the relevant sets of custom profiles. </p>",
        "id": 153824021,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462120069
    },
    {
        "content": "<p>ok that's more complex, but it's not the real complexity. In practice, the owners of the prefixes/names need to distribute definition packs. Anyone who uses the conformance resources just also loads the definition packs. </p>",
        "id": 153824022,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462120150
    },
    {
        "content": "<p>it absolutely makes the version tracking etc and reference implementations harder, that's for sure </p>",
        "id": 153824023,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462120172
    },
    {
        "content": "<p>though I think that if you don't want to get involved in custom resources, it doesn't change anything</p>",
        "id": 153824024,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462120200
    },
    {
        "content": "<p>Yes -- and my point isn't \"this can never work\". It's more that we haven't exactly sorted out these issues in the current FHIR world-view.</p>",
        "id": 153824025,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462120225
    },
    {
        "content": "<p>And now it gets harder.</p>",
        "id": 153824026,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462120239
    },
    {
        "content": "<p>yes</p>",
        "id": 153824027,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462120270
    },
    {
        "content": "<p>My recollection of the Tursday meeting in Orlando was that we had agreed to registering prefixes.</p>",
        "id": 153824029,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1462124721
    },
    {
        "content": "<p>that's a strange recollection since we didn't discuss it in Orlando</p>",
        "id": 153824033,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462129459
    },
    {
        "content": "<p>hmm maybe we did but not in that detail, I thought</p>",
        "id": 153824034,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462129486
    },
    {
        "content": "<p>Sure we did - namespace vs prefix.</p>",
        "id": 153824037,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1462129920
    },
    {
        "content": "<p>I think that might have been a slightly different context? but it wasn't prefix vs name, which I thought you were referring to</p>",
        "id": 153824038,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462130154
    },
    {
        "content": "<p>The real choice was between names adn namespaces, but namespaces are problematic, so names were the loose choice. This it was do we use a prefix or suffix for just register all names and allow themto interleave. Reserving of prefixes makes sense then you just need to let the registratnt assign names with the prefix.</p>",
        "id": 153824039,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1462130415
    },
    {
        "content": "<p>This was more of a bluesky discussion.</p>",
        "id": 153824042,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1462130473
    },
    {
        "content": "<p>well, the policy as proposed allows either to register a name, or a prefix. As it stands, it's more onerous to register a prefix, because you have to indicate owner organisation and make some policy statements</p>",
        "id": 153824043,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462130509
    },
    {
        "content": "<p>If the resource definition (or even the introductory paragraph defining scope) needs to be submitted when requesting individually named resources, that should let us check for overlap of scope.  If you want to have \"Extended FHIR\" compatibility, requesting individual resource names would be your only option.  If you just register prefixes, you're stuck with \"Custom FHIR\".  Though I think I prefer \"FHIR-inspired\" or something.  \"Custom\" doesn't necessarily convey \"not intereoperable\" as strongly as I'd like</p>",
        "id": 153824089,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462149457
    },
    {
        "content": "<p>there</p>",
        "id": 153824095,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462156169
    },
    {
        "content": "<p>there's 2 different issues there - name, and policy</p>",
        "id": 153824096,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462156181
    },
    {
        "content": "<p>I chose to say that if you create custom resources, you're not FHIR comformant for a reason: there's no judgement about that call - it's fact. And it conveys the idea that if you create a custom resource, then there's no expectation that a FHIR conformant system will handle it or understand it properly </p>",
        "id": 153824097,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462156253
    },
    {
        "content": "<p>this is true whether you're ignoring the standard resources or not - and whether you are or not will often be completely unclear</p>",
        "id": 153824098,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462156289
    },
    {
        "content": "<p>I don't have an opinion about the name, except that I chose 'custom fhir' because I suspect that this is going to self-naming whether we like it or not</p>",
        "id": 153824099,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462156322
    },
    {
        "content": "<p>If I introduce one custom resource (say 'Study') because we all agree that Basic sucks, but everything else I do is FHIR conformant, then I should be able to interoperate with most systems quite well.  Ideally we'd have one \"special\" prefix for such resources and the reference implementations could treat them all like Basic internally.</p>",
        "id": 153824101,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462157397
    },
    {
        "content": "<p>That's a very different thing from someone who's sending OpenEHR models over the wire - no hope of them interoperating with someone who's done a standard FHIR implementation.</p>",
        "id": 153824102,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462157426
    },
    {
        "content": "<p>Really, all we're doing is providing a variant way of doing Basic in the first case.</p>",
        "id": 153824103,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462157456
    },
    {
        "content": "<p>who's going to decide? Is Lloyd the determinate? </p>",
        "id": 153824104,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462157475
    },
    {
        "content": "<p>Who's going to decide whether the scope of a resource overlaps an existing resource?  You or the CTO or your delegate would make the first call.  If we need an escalation process, FMG would be the next logical stop.</p>",
        "id": 153824105,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462157535
    },
    {
        "content": "<p>so if you get a prefix, you still need to offer every version of every resource to HL7 for review?</p>",
        "id": 153824110,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462158333
    },
    {
        "content": "<p>If you get a prefix, you're out of luck - you're in the \"FHIR-inspired\" camp.  The only way interoperability with everyone else works is if there's a standard prefix and we curate not just the names but the scope.  If that doesn't work for you, then you're not going to interoperate.  And realistically, if you're wanting to play nicely with the existing content, you're not going to need your own prefix.  There's likely only 2-3 new \"special\" resources you're going to need.</p>",
        "id": 153824111,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462158479
    },
    {
        "content": "<p>Would it help to say that all custom resources MUST have prefix, either a registered prefix which only the registrant may use or a general prefix which anyone may use, followed by '.'  or '-' followed by the name which may include additional '-' and '.'.?</p>",
        "id": 153824325,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1462267094
    },
    {
        "content": "<p>we say exactly that. But I don't think it makes a difference to this discussion</p>",
        "id": 153824329,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462271943
    },
    {
        "content": "<p>it turns out - based on implementation experience - that there's something else to say about this... it makes a difference whether there's a bi-directional map to real resources.</p>",
        "id": 153824330,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462271982
    },
    {
        "content": "<p>Can you say more about this bidirectional mapping issue? Is it to address custom  resources defined as \"views\" on existing data sets? </p>",
        "id": 153824342,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1462278473
    },
    {
        "content": "<p>well, if you define a custom resource, or a logical model (not sure what the difference is in some ways), and you define a bi-directional mapping to resources, then, yes, the server can express custom resources while actually also making them available as normal resources </p>",
        "id": 153824343,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462280579
    },
    {
        "content": "<p>and/or some client library or network service can do it as a view thing</p>",
        "id": 153824344,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462280596
    },
    {
        "content": "<p>the hard lines collapse if anyone can interconvert...</p>",
        "id": 153824345,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462280609
    },
    {
        "content": "<p>though I have been thinking about what an API to a logical view of a set of resources would look like - that might address some of the desire for custom resources anyway. </p>",
        "id": 153824346,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462280643
    },
    {
        "content": "<p>as an example, take this:</p>",
        "id": 153824347,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462280657
    },
    {
        "content": "<p><a href=\"http://hl7-fhir.github.io/nehta/nehta-shared-health-summary.html\" target=\"_blank\" title=\"http://hl7-fhir.github.io/nehta/nehta-shared-health-summary.html\">http://hl7-fhir.github.io/nehta/nehta-shared-health-summary.html</a></p>",
        "id": 153824348,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462280679
    },
    {
        "content": "<p>that has mappings in an executional language to resources</p>",
        "id": 153824349,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462280708
    },
    {
        "content": "<p>so you could POST a shared health summary to base/Logical, for instance, and the server would actually store the resources</p>",
        "id": 153824350,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462280741
    },
    {
        "content": "<p>but it's not obvious to me how you'd get a logical model, and how you search for it - if that was necessary. </p>",
        "id": 153824351,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462280773
    },
    {
        "content": "<p>If anyone can convert, why should we allow the \"rogue\" syntax to be exchanged by conformant instances?</p>",
        "id": 153824354,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462287060
    },
    {
        "content": "<p>If you want to do it via private interface, no-one's stopping you.  If you want to be conformant, run the transform at each end - so you're not imposing on otherwise-conformant recipients</p>",
        "id": 153824355,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462287104
    },
    {
        "content": "<p>well, if it's a good practical idea, perhaps there's a way to bake it in and make it conformant</p>",
        "id": 153824357,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462289653
    },
    {
        "content": "<p>an alternative take on this is that we have this custom resource policy, but we do discuss the option of ignoring the existing resources, and we don't have any path by which that is conformant. But we do have a path by which it is possible</p>",
        "id": 153824608,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462428061
    },
    {
        "content": "<p>What is it that we are trying to enable? I am not aware of the discussions with OpenEHR, so I might be lacking critical information to help inform my decision.  Anyone can define any RESTful resource, FHIR doesn't have a lock on all possible RESTful resource names. We have conventions, and process to support 'standard' FHIR Resources. I fail to understand why we would do anything non-standard.</p>",
        "id": 153826294,
        "sender_full_name": "John Moehrke",
        "timestamp": 1462885524
    },
    {
        "content": "<p>well, you might argue, then, from that perspective, that we should not do extensions, etc. But we do, because we understand that there are good reasons to extend the specification, and providing guidance about how to do consistently without running into problems is a positive good for a number of implementers</p>",
        "id": 153826295,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462885750
    },
    {
        "content": "<p>Yes, I am arguing that registering custom resources and extensions is something beyond HL7, a 'standards' organization... not necessarily beyond <a href=\"http://fhir.org\" target=\"_blank\" title=\"http://fhir.org\">fhir.org</a>, an 'implementation support' organization.  What I am trying to understand the motivation. Your response regarding extensions seems evasive... which is more troubling for me. Yes I might be unnecessarily worried, but it seems reasonable that I can ask the question and get an answer.</p>",
        "id": 153826297,
        "sender_full_name": "John Moehrke",
        "timestamp": 1462886167
    },
    {
        "content": "<p>Well, it ties into the implementation space.  If there's a way to register \"custom\" resources that will mix with \"standard\" resources such that systems using the reference implementations, etc. can handle them, that would be good.  And that mechanism, if it's to exist, is HL7's concern.  Supporting totally off-reservation implementations like OpenEHR is distinct from that.  There it's just a question of saying what language we'd expect them to use.  And the leaning at FGB this morning was to say that we'll exclude that particular usage aspect entirely from the proposal.  So this proposal would be limited to allowing resource names to be defined for content that doesn't yet exist in FHIR in a way that will prevent collisions and allow systems to manage things like \"Ex-ClinicalStudy\" or \"Ex-BillingItem\" in parallel with Observation, Encounter, etc. when those resources don't yet exist (or might never exist) in the FHIR spec.</p>",
        "id": 153826424,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462905310
    },
    {
        "content": "<p>I didn't intend to be evasive. </p>",
        "id": 153826444,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462907057
    },
    {
        "content": "<p>we routinely provide advice around customization and extension of the specificatin, and we routinely do this in Fhir too. So this is just more of that </p>",
        "id": 153826446,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462907103
    },
    {
        "content": "<p>I think of the non-OpenEHR part of it is \"Let's come up with an alternative to Basic that everyone doesn't hate\".</p>",
        "id": 153826471,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462909402
    },
    {
        "content": "<p>I just saw a use of Basic in the wild</p>",
        "id": 153826478,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462909520
    },
    {
        "content": "<p>Cool.  Was it as ugly as we predicted?</p>",
        "id": 153826483,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1462909578
    },
    {
        "content": "<p>shallow, so not too bad</p>",
        "id": 153826491,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462909653
    },
    {
        "content": "<p>I updated the custon resource policy to define custom resources precisely. <a href=\"http://wiki.hl7.org/index.php?title=FHIR_Custom_Resources\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=FHIR_Custom_Resources\">http://wiki.hl7.org/index.php?title=FHIR_Custom_Resources</a></p>",
        "id": 153836902,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467951287
    },
    {
        "content": "<p>I also found that I needed to reference 'custom resources' - that page - at one specific place in the specification</p>",
        "id": 153836903,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467951314
    },
    {
        "content": "<p>rules around use of ElementDefinition</p>",
        "id": 153836904,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467951328
    },
    {
        "content": "<p>What's the timeline for your server supporting custom resources? </p>",
        "id": 153836905,
        "sender_full_name": "David Hay",
        "timestamp": 1467952164
    },
    {
        "content": "<p>and - technically  - a 'logical model' is the same as a custom resource, except it's not intended to be used in production - right?</p>",
        "id": 153836906,
        "sender_full_name": "David Hay",
        "timestamp": 1467952219
    },
    {
        "content": "<p>This will result in \"Custom\" appearing in the ResourceTypes enumerations (specifically in conformance) right?<br>\n(asking so that client's can stil read the conformance resource from your server and be able to process that part)</p>",
        "id": 153836909,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1467953513
    },
    {
        "content": "<p>umm, we haven't resolved the question of logical models and the type enumerations </p>",
        "id": 153836914,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467955627
    },
    {
        "content": "<p>David,  here's the differences between custom resources and logical models:</p>\n<ul>\n<li>StructureDefinition.kind is different (resource vs logical)</li>\n<li>A custom resource must inherit from 'resource', a logical model must inherit from 'element'</li>\n<li>a custom resource can only refer to fhir defined data types for types. A logical model can use other logical models as types</li>\n</ul>",
        "id": 153836916,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467955764
    },
    {
        "content": "<p>a logical model can have a wire format  - see <a href=\"http://fhir.hl7.org.au/fhir/rcpa/Colorectal-Colorectal-genexample-1.xml.html\" target=\"_blank\" title=\"http://fhir.hl7.org.au/fhir/rcpa/Colorectal-Colorectal-genexample-1.xml.html\">http://fhir.hl7.org.au/fhir/rcpa/Colorectal-Colorectal-genexample-1.xml.html</a> - but it can't appear in the 3 places I identified in the custom resource policy </p>",
        "id": 153836917,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467955828
    },
    {
        "content": "<p>that's not the same as 'not used in production'</p>",
        "id": 153836918,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467955839
    },
    {
        "content": "<p>timeline - I don't know, custom resources actually work on my server, but I haevn't finished doing all the support work on them</p>",
        "id": 153836919,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467955861
    },
    {
        "content": "<p>thanks for the clarification!</p>",
        "id": 153836920,
        "sender_full_name": "David Hay",
        "timestamp": 1467956343
    },
    {
        "content": "<p>I pointed the enumeration as it shows up in failed unit tests on the dotnet client in DSTU2 (which some get nervous about) though its really just it is encountering the \"custom\" type on your DSTU2 endpoint.</p>",
        "id": 153836921,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1467956433
    },
    {
        "content": "<p>(and STU3 from May also)</p>",
        "id": 153836922,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1467956445
    },
    {
        "content": "<p>the custom type? </p>",
        "id": 153836923,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467956455
    },
    {
        "content": "<p>I'll go recheck and follow up elsewhere. (not FMG)</p>",
        "id": 153836927,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1467958443
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I recommend you move the section titled \"How custom resources work, technically\" up and rename it \"Definition of Custom Resource\". Your section \"Custom Resources\" should then follow with \"Uses of Custom Resources\". </p>",
        "id": 153836940,
        "sender_full_name": "John Moehrke",
        "timestamp": 1467983660
    },
    {
        "content": "<p>Your first section defining 1 and 2 is critical and I think need more highlighting. The key I now understand is that a custom resource is one that uses what you call the framework, but is not a further defined in FHIR. Thus I think we need a distinguishing word for this FHIR Framework; possibly needing to separate it out into a independent specification.</p>",
        "id": 153836942,
        "sender_full_name": "John Moehrke",
        "timestamp": 1467983851
    },
    {
        "content": "<p>Do you expect systems that don't 'understand' a custom resource to pass it unmodified? Or are they allowed to drop it? I didn</p>",
        "id": 153836944,
        "sender_full_name": "John Moehrke",
        "timestamp": 1467983932
    },
    {
        "content": "<p>I expect them to drop them - see this: \"Obviously, only implementers that know the particular custom resources will be able to partake in exchange using the custom resources\"</p>",
        "id": 153836989,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468011746
    },
    {
        "content": "<p>I reorganised the page a little</p>",
        "id": 153836990,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468011858
    },
    {
        "content": "<p>Implementers that have a persistence layer that's designed to support FHIR ought to be able to handle custom resources easily enough - just convert them to Basic and capture the profile that identifies what type of custom resource they are for subsequent re-serialization.  But anyone who has a legacy data store would have trouble persisting them unless they have the capability to store blobs of some sort</p>",
        "id": 153837016,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1468039580
    },
    {
        "content": "<p>man that would be the hardest way to do it! if yo're clever enough to parse a custom resource from metadata, you should be able to store it</p>",
        "id": 153837019,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468050162
    },
    {
        "content": "<p>It would also be hard to secure them without understanding them. All you would know is what the meta tags tell you, and those would need to have been applied properly by the creator/updater.   Right? If so, then custom resources would also need to have a security consideration warning about this. I don't see it it as a big problem, just wanting it noted.</p>",
        "id": 153837130,
        "sender_full_name": "John Moehrke",
        "timestamp": 1468173962
    },
    {
        "content": "<p>yes that'a a good point</p>",
        "id": 153837132,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468183040
    }
]