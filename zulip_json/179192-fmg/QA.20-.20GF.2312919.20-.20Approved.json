[
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12919\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12919\">GF#12919</a> Issues discovered during QA that X.payee.resourceType which appears in Claim and ExplanationOfBenefit is a reserved work in the JSON serialization. Unpon review it was noted the the binding strength is different in the two uses (Example and Required). This element contains the name of the type of resource in refered to in the adjacent element in lower case. Given that  additional elements may be added in the future it would be best to change the element in both cases to X.payee.resource code (extensible). Examples may also need to be updated to support these changes.</p>",
        "id": 153874876,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1488777175
    },
    {
        "content": "<p>+1</p>",
        "id": 153874877,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1488777177
    },
    {
        "content": "<p>+1</p>",
        "id": 153874880,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1488777241
    },
    {
        "content": "<p>+1</p>",
        "id": 153874964,
        "sender_full_name": "John Moehrke",
        "timestamp": 1488805969
    },
    {
        "content": "<p>+1 (although this is a more generic problem that we should revisit. anywhere you use the Identifier in the resourcereference type its used to indicate what type of thing you are referencing - particularly if there can be more than 1 type)</p>",
        "id": 153875284,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1488918102
    },
    {
        "content": "<p>+1</p>",
        "id": 153875419,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1488948671
    },
    {
        "content": "<p>Approved</p>",
        "id": 153875434,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1488950029
    },
    {
        "content": "<p>Also agree with Brian, I think there should be an element ( 0..1 code (list of resource names)) added to the Resource data type.</p>",
        "id": 153875438,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1488950223
    },
    {
        "content": "<p>Need to do a friendly amendment - can't make the element a code with 'extensible' as codes MUST be 'required', therefore amend to coding rather than code.</p>",
        "id": 153875442,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1488950743
    },
    {
        "content": "<p>assume name is to be X.payee.resource with a dt of code? </p>",
        "id": 153875446,
        "sender_full_name": "David Hay",
        "timestamp": 1488951715
    },
    {
        "content": "<p>why is it extensible?</p>",
        "id": 153875599,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1489006279
    },
    {
        "content": "<p>I was wondering why it should be extensible also, has to be a fhir resource type)</p>",
        "id": 153875603,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1489007762
    },
    {
        "content": "<p>+1</p>",
        "id": 153875605,
        "sender_full_name": "Hans Buitendijk",
        "timestamp": 1489007980
    },
    {
        "content": "<p>The code, name of the type of resource, should be extensible as there may be new resources created in the future which contain payee demographics. Or do we think there will be no more resources?</p>",
        "id": 153875713,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1489041789
    },
    {
        "content": "<p>But now I see another issue: the party element is a choice of 4 resource types - so that list is not logically extensible. So, should I change that to Reference(All) to accommodate future resource types?</p>",
        "id": 153875718,
        "sender_full_name": "Paul Knapp",
        "timestamp": 1489049088
    },
    {
        "content": "<p>I don't understand wanting to refer to future resource types </p>",
        "id": 153875728,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1489055498
    },
    {
        "content": "<p>in a future version, you will refer to future types</p>",
        "id": 153875729,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1489055523
    },
    {
        "content": "<p>Thats what i thought too.</p>",
        "id": 153875731,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1489056218
    },
    {
        "content": "<p>Unless a relationship has minOccurs=1, you can always use extensions to refer to future resource types.  (And you can actually use dataAbsentReason or similar extensions to deal with minOccurs=1 elements, though you'll likely break systems doing that.)</p>",
        "id": 153875754,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1489069822
    }
]