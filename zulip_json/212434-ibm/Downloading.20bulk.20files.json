[
    {
        "content": "<p>Exporting bulk data with storage provider configured as \"file\". Files are successfully exported. However file paths included in response are relative paths. Is there a way those files can be exposed as fully qualified URLs and that can be downloaded by client applications? I do see S3 option as well that expose full URL of corresponding S3 objects (+ optionally presigned URLs). Thank you.</p>",
        "id": 248145683,
        "sender_full_name": "Murali M",
        "timestamp": 1627946592
    },
    {
        "content": "<blockquote>\n<p>However file paths included in response are relative paths. Is there a way those files can be exposed as fully qualified URLs and that can be downloaded by client applications?</p>\n</blockquote>\n<p>Not at the moment.  Our assumption with the file-based export is that the export location is known to the caller and they have some other way to access the files.  I think it would be possible to statically host the target directory using Liberty or even just an Apache HTTP Server (or similar)...the tricky part is getting the access control and expiry right.</p>\n<blockquote>\n<p>I do see S3 option as well that expose full URL of corresponding S3 objects (+ optionally presigned URLs).</p>\n</blockquote>\n<p>Correct.  Thats the way I would go to support the official bulk data spec.  It also works with MinIO and other S3-compatible providers.</p>",
        "id": 248179327,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1627962282
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"191676\">@Lee Surprenant</span> . We have some limitations with respect to using hmac with S3, so had to rely on file system instead. Will review further and update with a PR once finalized.</p>",
        "id": 248291115,
        "sender_full_name": "Murali M",
        "timestamp": 1628031494
    },
    {
        "content": "<blockquote>\n<p>limitations with respect to using hmac with S3</p>\n</blockquote>\n<p>I'd love to hear more.  We used to generate our own long random (high-entropy) URLs, make the objects public, and set the ACL to expire after a few hours.  But we felt the presigned URL approach was much better.</p>",
        "id": 248347226,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1628082623
    },
    {
        "content": "<p>Pre-signed URLs are definitely better choice and we use in other use cases. This hmac limitation is with respect to security policy that blocks us from creating long lived access keys. Other option is to create pre-signed URLs with role that can be assumed by the container runtime instead. We are also evaluating this as an option.</p>",
        "id": 248416543,
        "sender_full_name": "Murali M",
        "timestamp": 1628115695
    }
]