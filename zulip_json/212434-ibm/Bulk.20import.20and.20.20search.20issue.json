[
    {
        "content": "<p>Hello! I noticed that when  I import a resource  via bulk import, I am unable to perform a search on this resource using search parameters. If I create this exact same resource via a simple http request, it works without issue. Is there a supplementary step I need to do in order to make it work ?</p>",
        "id": 223685205,
        "sender_full_name": "Teva Riou",
        "timestamp": 1611342744
    },
    {
        "content": "<p>no, resources should be indexed properly when imported via bulk import.  if you're confident in what your seeing, maybe you can open a bug for it (with info like what resource types and which queries)?</p>",
        "id": 223685472,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1611342898
    },
    {
        "content": "<p>It's weird. For instance, take a resource Patient. I can find my resource with birthday or name but not with gender or a reference. I've opened an issue.</p>",
        "id": 223700555,
        "sender_full_name": "Teva Riou",
        "timestamp": 1611349759
    },
    {
        "content": "<p>Thank you for the report Teva, we'll have a look</p>",
        "id": 223701809,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1611350385
    },
    {
        "content": "<p>I'm pretty sure it's a token problem - it might be the original url that is failing</p>",
        "id": 223701989,
        "sender_full_name": "Paul Bastide",
        "timestamp": 1611350463
    },
    {
        "content": "<p>thanks for the issue/bug</p>",
        "id": 223702020,
        "sender_full_name": "Paul Bastide",
        "timestamp": 1611350479
    },
    {
        "content": "<p>&lt;property name=\"incomingUrl\" value=\"\"/&gt; &lt;--</p>",
        "id": 223704648,
        "sender_full_name": "Paul Bastide",
        "timestamp": 1611351738
    },
    {
        "content": "<p>that's the problem</p>",
        "id": 223704652,
        "sender_full_name": "Paul Bastide",
        "timestamp": 1611351741
    },
    {
        "content": "<p>small fix coming</p>",
        "id": 223704659,
        "sender_full_name": "Paul Bastide",
        "timestamp": 1611351746
    },
    {
        "content": "<p>I oversold the fix. still digging in...</p>",
        "id": 223705519,
        "sender_full_name": "Paul Bastide",
        "timestamp": 1611352138
    },
    {
        "content": "<p>We believe that we've addressed this issue with the 4.5.5 release that we just tagged.  Please let us know if you're able to confirm the fix on your end.</p>",
        "id": 225638077,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1612837262
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/sCgWPDNRBto-OzVyyfis3S1v/Test.ndjson\">Test.ndjson</a> </p>\n<p>Hi Trying to import this file, it is giving some errors. Medicationstatement is giving error. Even though I deleted those tow manually it is successful but can't see data in DB. Here we are trying to import all resources from single bundle.</p>\n<p>Mahesh</p>",
        "id": 273690275,
        "sender_full_name": "Mahesh Dabi",
        "timestamp": 1646160248
    },
    {
        "content": "<p>BTW we are using 4.10.1</p>",
        "id": 273690300,
        "sender_full_name": "Mahesh Dabi",
        "timestamp": 1646160266
    },
    {
        "content": "<p>Can anybody please help?</p>\n<p>Mahesh</p>",
        "id": 274647291,
        "sender_full_name": "Mahesh Dabi",
        "timestamp": 1646806155
    },
    {
        "content": "<p>Hi Mahesh, I'm afraid its not so clear how to help you.  Are there any errors in the logs (either the server logs or the job logs from the import)?</p>",
        "id": 274679348,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1646828552
    },
    {
        "content": "<p>In general, we've been pointing folks at the batch/transaction endpoint for ingestion lately because our import is single-threaded and so its not really any faster.  We have some utilities in our <code>fhir-bucket</code> project for converting NDJSON to bundles and uploading those in parallel, but no great docs on that yet.</p>",
        "id": 274679542,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1646828669
    },
    {
        "content": "<p>net:  bulk import is definitely an interesting feature, but the current implementation (that was originally done for a connectathon a while back) has proved problematic...we're patching some of those issues for our next release but we probably need to rethink the whole feature in the coming months</p>",
        "id": 274679771,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1646828818
    },
    {
        "content": "<p>Hi Lee</p>\n<p>Here is log and ndjson file which we are trying to import along with job <a href=\"/user_uploads/10155/r5F852qVMCux0A4Po6iBwzVa/test.zip\">test.zip</a> log. Log shows that import is successful but somehow I am unable to see any patient created. We are trying to import bundle with one patient summary containing all resources for that patient. Not sure whether it is supported or not. Individual resource import e.g. Allergies.ndjson, patient.ndjson works fine. So not sure whether it can import all resources of single patient in one go. <a href=\"/user_uploads/10155/iUAUOVzZ01LpHBfmB36bwZeE/test.zip\">test.zip</a></p>\n<p>Here is the import request, please see the type</p>\n<p>{<br>\n    \"resourceType\": \"Parameters\",<br>\n    \"id\": \"30321130-5032-49fb-be54-9b8b82b2445a\",<br>\n    \"parameter\": [<br>\n        {<br>\n            \"name\": \"inputSource\",<br>\n            \"valueUri\": \"<a href=\"https://44.197.187.245:9443/fhir-server\">https://44.197.187.245:9443/fhir-server</a>\"<br>\n        },<br>\n        {<br>\n            \"name\": \"inputFormat\",<br>\n            \"valueString\": \"application/fhir+ndjson\"<br>\n        },<br>\n        {<br>\n            \"name\": \"input\",<br>\n            \"part\": [<br>\n                {<br>\n                    \"name\": \"type\",<br>\n<strong>\"valueString\": \"Package\"</strong><br>\n                },<br>\n                {<br>\n                    \"name\": \"url\",<br>\n                    \"valueUrl\": \"test.ndjson\"<br>\n                }<br>\n            ]<br>\n        },<br>\n        {<br>\n            \"name\": \"storageDetail\",<br>\n            \"valueString\": \"file\"<br>\n        }<br>\n    ]<br>\n}</p>",
        "id": 275091249,
        "sender_full_name": "Mahesh Dabi",
        "timestamp": 1647083577
    },
    {
        "content": "<p>I am not sure the resource type I am mentioning in request is correct or not.</p>\n<p>\"part\": [<br>\n{<br>\n\"name\": \"type\",<br>\n<strong><em>\"valueString\": \"Package\"</em></strong><br>\n},</p>",
        "id": 275091326,
        "sender_full_name": "Mahesh Dabi",
        "timestamp": 1647083699
    },
    {
        "content": "<p>In short I have data available in CCDA (visit note fomats) , what will be best way to import to IBM FHIR Server. I am converting CCDA to FHIR package and trying to import.</p>",
        "id": 275188661,
        "sender_full_name": "Mahesh Dabi",
        "timestamp": 1647225580
    },
    {
        "content": "<p>BTW if you look at my NDJSON file it is a package and that is imported as pachange. If I see <br>\n<a href=\"https://baseurl:9443/fhir-server/api/v4/Bundle\">https://baseurl:9443/fhir-server/api/v4/Bundle</a> I can get the whole bundle. So I think it imports and stores this as bundle but not as separate resources by splitting them. Is there any way to split them while import? Do I need to import as anything else other than Package or Bundle?</p>",
        "id": 275194510,
        "sender_full_name": "Mahesh Dabi",
        "timestamp": 1647234270
    },
    {
        "content": "<p>thanks, Mahesh, that makes sense.</p>\n<blockquote>\n<p>Is there any way to split them while import? </p>\n</blockquote>\n<p>No, not with the current implementation at least</p>\n<blockquote>\n<p>Do I need to import as anything else other than Package or Bundle?</p>\n</blockquote>\n<p>Import is performed on an NDJSON file that contains the type of resource you're trying to import.<br>\nIn the next release, we will more strictly enforce that the NDJSON contains only a single type and that this type matches what was passed on the call to invoke import:  <a href=\"https://github.com/IBM/FHIR/issues/3180\">https://github.com/IBM/FHIR/issues/3180</a></p>",
        "id": 275222323,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1647256805
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"392119\">Mahesh Dabi</span> <a href=\"#narrow/stream/212434-ibm/topic/Bulk.20import.20and.20.20search.20issue/near/275091326\">said</a>:</p>\n<blockquote>\n<p>I am not sure the resource type I am mentioning in request is correct or not.</p>\n<p>\"part\": [<br>\n{<br>\n\"name\": \"type\",<br>\n<strong><em>\"valueString\": \"Package\"</em></strong><br>\n},</p>\n</blockquote>\n<p>No, that doesn't make sense to me.  The \"type\" should be a resource type.  In <code>main</code> (and our next release) I think we'd reject this request as invalid because Package is not a valid resource type.</p>",
        "id": 275222852,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1647257211
    },
    {
        "content": "<p>You have a few options, but I think it might be easiest for you to convert your Bundle resources into 'transaction' bundles and post those to the base url (fhir-server/api/v4).  That will have your desired behavior of splitting the bundle into its individual components, storing them individually, and making those searchable.</p>",
        "id": 275223033,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1647257373
    },
    {
        "content": "<p>The downside of this is if you are actually trying to find the CCDA as a whole, it can be tricky to put them back together.  We have a fledgling implementation of the <a href=\"https://www.hl7.org/fhir/composition-operation-document.html\">$document</a> operation for doing just that, but be mindful that this is a bit experimental.</p>",
        "id": 275223345,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1647257562
    }
]