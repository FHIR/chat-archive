[
    {
        "content": "<p>I've always been confused about whether decimals (and quantities) should be handled as a ranges for purposes of search.  IMHO the spec is clear about handling the \"search value\" as a range, but not nearly as clear about the target value.</p>",
        "id": 188659374,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1582220307
    },
    {
        "content": "<p>Currently, we only save the actual numeric value and not its implicit range (except for Range data types which have an explicit range), and in fact our Number Values tables don't even have columns for the range</p>",
        "id": 188659450,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1582220381
    },
    {
        "content": "<p>Recently, Graham chimed in with this answer and it matches my own opinion on what the specs wants from us:  <a href=\"#narrow/stream/179166-implementers/topic/Search.20for.20Decimals.20respecting.20Ranges/near/188599623\" title=\"#narrow/stream/179166-implementers/topic/Search.20for.20Decimals.20respecting.20Ranges/near/188599623\">https://chat.fhir.org/#narrow/stream/179166-implementers/topic/Search.20for.20Decimals.20respecting.20Ranges/near/188599623</a></p>",
        "id": 188659472,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1582220401
    },
    {
        "content": "<p>Although I don't think there is consensus among implementers, I think we should update our schema and start capturing the implicit range of numbers and quantities going forward, and so I opened the following PR:  <a href=\"https://github.com/IBM/FHIR/pull/710\" target=\"_blank\" title=\"https://github.com/IBM/FHIR/pull/710\">https://github.com/IBM/FHIR/pull/710</a></p>",
        "id": 188659606,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1582220482
    },
    {
        "content": "<p>After reviewing this with the team, we decided to merge it.  We still need to decide whether/how to do the schema migration.  The current thought is that we will leave the existing numeric values in the X_NUMBER_VALUE and X_QUANTITY_VALUE columns and we will NOT populate the LOW and HIGH columns for these historic values.  this should be ok because the queries were updated to use both the numeric value in the _VALUE column AND the _VALUE_LOW and _VALUE_HIGH columns (and the two subqueries are ORed together)</p>",
        "id": 189136673,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1582738271
    },
    {
        "content": "<p>If you are using our 4.0.0 or 4.0.1 releases and this is not suitable for you, please let us know</p>",
        "id": 189136702,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1582738297
    }
]