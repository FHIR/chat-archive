[
    {
        "content": "<p>Regarding  signatures on task based queries...</p>\n<h3>Technical approach:</h3>\n<table>\n<thead>\n<tr>\n<th>Question</th>\n<th>Binary Documents ( eg PDFs)</th>\n<th>FHIR Documents</th>\n<th>Search Bundles</th>\n<th>Individual Resources (including Collection Bundles)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>What type in Task.output.valueReference</td>\n<td>DocumentReference</td>\n<td>Bundle or DocumentReference?</td>\n<td>Bundle</td>\n<td>Any</td>\n</tr>\n<tr>\n<td>Where is Signature?</td>\n<td>on Document itself ( e.g. signed PDF)</td>\n<td>on Document bundle</td>\n<td>???</td>\n<td>???</td>\n</tr>\n<tr>\n<td>Where is Guidance on how to do it?</td>\n<td>NA</td>\n<td>CCDA on FHIR</td>\n<td>CDEX</td>\n<td>CDEX</td>\n</tr>\n</tbody>\n</table>\n<p>Options for FHIR Resources outside FHIR Documents:</p>\n<ol>\n<li>Put sig on Task</li>\n<li>Attestation Provenance pointing to Task and reference in Task.output.valueReference</li>\n<li>Attestation Provenance pointing to individual Resources and reference in Task.output.valueReference</li>\n</ol>\n<p>Questions:</p>\n<ul>\n<li>What about multiple sigs for single task request. how to keep track of which sig for what output?</li>\n<li>What about consistency across all types of data requests and output? ( e.g sig on task only if a search Bundle or individual resource otherwise look at the output itself)</li>\n</ul>",
        "id": 230926640,
        "sender_full_name": "Eric Haas",
        "timestamp": 1616096838
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  , <span class=\"user-mention\" data-user-id=\"196359\">@Robert Dieterle</span> ?</p>",
        "id": 230926891,
        "sender_full_name": "Eric Haas",
        "timestamp": 1616096953
    },
    {
        "content": "<p>There's three types of attestation possible:</p>\n<ol>\n<li>\"this document is accurate\" (which would be intrinsic to the document, either as a wet signature in a scanned PDF, a signature in a CDA or a Bundle signature for a FHIR document).  I don't think either HRex or CDex needs to say anything about that other than \"payers may expect signatures to be present on certain documents before they'll accept them\".  This type of signature is <em>only</em> relevant on documents.  It won't generally exist on any other records.</li>\n<li>\"this arbitrary resource was created by x\" or \"this arbitrary resource is accurate\" is covered by Provenance.signature.  (I'm not sure which of the two is what it actually does.)  I'm not clear if we need either of these.</li>\n<li>\"this  information I'm returning is the complete answer to your question\" - I suspect this is what's really wanted.  And if we're going to have it, it'll need to be on Task - either as an extension or an output.  Note that one signature would apply to the complete set of outputs (be they documents or other resources)</li>\n</ol>",
        "id": 230932712,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1616099505
    },
    {
        "content": "<p>My impression when listening to Bob and to the guy  representing a payer on the Wednesday 1PM  Call was that it more like 2.  I don't think it is a matter of completeness but more vouching on the veracity of the data.  We already talk about it needing to come from the source to and not some HIE to get the assurance that someone cannot deny the validity of something (Non-repudiation)  So I assume  that  in this context,  there is also need to ensure that a party to a communication must accept the responsibility for its accuracy.  Will need to get find out exactly what.</p>",
        "id": 230964024,
        "sender_full_name": "Eric Haas",
        "timestamp": 1616118423
    },
    {
        "content": "<p>There are going to be challenges with that.  Someone who updates a Patient phone number (most recent author of the Patient instance) isn't necessarily vouching for all of the patient's contact information.  Someone who discharges a patient isn't necessarily vouching or the admission diagnosis.  To get the true set of \"who vouches for what\", you'd need the Provenances for all actions and all updates.  This isn't the same where someone compiles a document, reviews it and says \"I believe all of this is accurate\".</p>",
        "id": 230964675,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1616119016
    },
    {
        "content": "<blockquote>\n<p>someone compiles a document, reviews it and says \"I believe all of this is accurate\".</p>\n</blockquote>\n<p>this is what I mean</p>",
        "id": 230967068,
        "sender_full_name": "Eric Haas",
        "timestamp": 1616120941
    },
    {
        "content": "<p>we just need to figure out what the Payer means</p>",
        "id": 230967160,
        "sender_full_name": "Eric Haas",
        "timestamp": 1616121013
    },
    {
        "content": "<p>Right - that doesn't happen for individual resources with Provenance.  If we want to represent \"I have reviewed all of these conditions and deem them accurate\", I think we need something more than just the Provenance associated with each Condition.  Agree we need to understand exactly what sort of a declaration the payers want - and what sort of declarations providers and EHRs believe Provenances actually represent.</p>",
        "id": 230967699,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1616121527
    },
    {
        "content": "<p>Then how this translate to a signature on a task ( if we go that route) looking at <a href=\"http://hl7.org/fhir/ValueSet/signature-type\">http://hl7.org/fhir/ValueSet/signature-type</a><br>\n or a Provenance of type ? + signature + target...</p>",
        "id": 230968102,
        "sender_full_name": "Eric Haas",
        "timestamp": 1616121917
    },
    {
        "content": "<p>If we decide that whatever attestation needed best appears on Task (which I suspect is likely), it would either be an output or an extension</p>",
        "id": 230968753,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1616122586
    },
    {
        "content": "<p>There are signature alternatives to cover these intentions. I will first express that they are very difficult to work, and expensive to support. So I will state right now that everyone wants signatures until they realize just how expensive and difficult they are.</p>",
        "id": 231010350,
        "sender_full_name": "John Moehrke",
        "timestamp": 1616154359
    },
    {
        "content": "<p>What they really want is a statement that I John have reviewed the things that a Duck is responsible for reviewing and am good with the values. This is less of a signature, and more of an 'initial here'. These can be implemented with cryptographic signatures (digital signatures), or can be done with electronic signatures (aka marks). Both can be done with Provenance, one has a digital signature.</p>",
        "id": 231010733,
        "sender_full_name": "John Moehrke",
        "timestamp": 1616154567
    },
    {
        "content": "<p>Note that Provenance.signature can also be a non-digital signature, it can be anything, including a scanned ink signature. It can even just be a type, when, and who. (I john signed this today because I reviewed it)</p>",
        "id": 231010929,
        "sender_full_name": "John Moehrke",
        "timestamp": 1616154678
    },
    {
        "content": "<p>now the expensive and difficult... the project could define a  subset of elements that are defined for \"I reviewed this CDex task for what clinicians reviewed\". This would subset the elements in task that a \"clinician\" would be expected by policy to review. It could do this with XML-Signature ability to do partial signatures; or it could create an intermediate FHIR object or bundle that holds only those elements and signs that.<br>\ndo this for all the partial signatures (initials here) use-cases that you have.</p>",
        "id": 231011389,
        "sender_full_name": "John Moehrke",
        "timestamp": 1616154971
    },
    {
        "content": "<p>now the part that is infinitely expensive and difficult... all of the digital signatures ultimately get shelfed because you must have a comprehensive certificate management system that is designed to last the life span of any one signature with comprehensive support for revocation... and provable timestamps.</p>",
        "id": 231011473,
        "sender_full_name": "John Moehrke",
        "timestamp": 1616155050
    },
    {
        "content": "<p>I suspect you just want a Provenance without a .signature element. A Provenance that lists generally the objects reviewed (<a href=\"http://Provenance.target\">Provenance.target</a>), a set of URI for the various kinds of partial signatures to put into .policy.</p>",
        "id": 231011737,
        "sender_full_name": "John Moehrke",
        "timestamp": 1616155226
    },
    {
        "content": "<p>true non-repudiation is a great idea, it is a great theory, it can be done. But the expense tends to be more costly than the thing being protected.</p>",
        "id": 231011973,
        "sender_full_name": "John Moehrke",
        "timestamp": 1616155346
    },
    {
        "content": "<p>of course... there is also blockchain... I have described above everything you need.  just take the \"now the expensive...\" and place that temporary blob onto the blockchain. Now you just need to get everyone who would sign something to have a recognized blockchain identity. Likely that blockchain would need to be both permissioned and private. Which is indistinguishable from a database jointly owned by the private collective.</p>",
        "id": 231012368,
        "sender_full_name": "John Moehrke",
        "timestamp": 1616155579
    },
    {
        "content": "<p>I don't think we're talking about digital signatures here, though we want to allow them for those who choose to bother with them.  I'm hoping no-one is seriously thinking about blockchain.  We're just wanting formal attestation.  However, we <em>do</em> need to know exactly what's being attested to - and it's not clear how that's defined in Provenance.signature.</p>",
        "id": 231022504,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1616160702
    }
]