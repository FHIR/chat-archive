[
    {
        "content": "<p>Hi, in my maps there are for example systems defined within my maps (FHIR Mapping Language). <br>\nFor example: </p>\n<div class=\"codehilite\"><pre><span></span><code>cda -&gt; coding.system = &#39;http://loinc.org&#39;;\n</code></pre></div>\n<p>and I was wondering if it is possible to define a global/local variable, which I can assign the system to and then point to the new variable, from where I need to. This would have the benefit that I can configure and manage all the variables from one place. </p>\n<p>So in my imagination this would look somehow like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>cda -&gt; %loinc-system = &#39;http://loinc.org&#39; &quot;loinc-variable&quot;;\n...\ncda -&gt; coding.system = %loinc-system;\n</code></pre></div>\n<p>I read in the forum that this could be managed with a let statement, but I didn't find any documentation, on how to set this up. <br>\nWould be greatful for any suggestions and advices! Thanks!</p>",
        "id": 238751975,
        "sender_full_name": "Alexander Dimitrov",
        "timestamp": 1620991919
    },
    {
        "content": "<p>There is an accepted proposal for a global let statement, see <a href=\"https://jira.hl7.org/browse/FHIR-21642\">JIRA</a>. the java implementation does it not support yet as far as i know.</p>",
        "id": 238766346,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1620998962
    },
    {
        "content": "<p>Thanks for the reply <span class=\"user-mention\" data-user-id=\"191478\">@Oliver Egger</span> ! So this feature will be coming in a future release and currently there is no way to implement/test global variables in maps? </p>\n<p>also a somewhat similiar question:<br>\nis there an option to get some fixed values from profiles themselves? for example get a codesystem which is defined within a profile and use it within a map, so that fixed values from profiles don't have to be manually coded into maps? <br>\nthis could potentially reduce the need of global variables for some cases</p>",
        "id": 238993270,
        "sender_full_name": "Alexander Dimitrov",
        "timestamp": 1621185571
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"367809\">Alexander Dimitrov</span> <a href=\"#narrow/stream/181579-mapping-framework/topic/Local.2Fglobal.20variables.20within.20maps/near/238993270\">said</a>:</p>\n<blockquote>\n<p>So this feature will be coming in a future release and currently there is no way to implement/test global variables in maps? </p>\n</blockquote>\n<p>I think so, I don't think it is too hard to add however, however i myself did not find the time yet to work on a PR, if you need it urgently maybe you can provide a PR?</p>",
        "id": 239037050,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1621230677
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"367809\">Alexander Dimitrov</span> <a href=\"#narrow/stream/181579-mapping-framework/topic/Local.2Fglobal.20variables.20within.20maps/near/238993270\">said</a>:</p>\n<blockquote>\n<p>is there an option to get some fixed values from profiles themselves? for example get a codesystem which is defined within a profile and use it within a map, so that fixed values from profiles don't have to be manually coded into maps? <br>\nthis could potentially reduce the need of global variables for some cases</p>\n</blockquote>\n<p>I would love to have something like this, create a target based on a profile with all fixed values already put in ... maybe the create/produced elements could be used. <span class=\"user-mention\" data-user-id=\"193430\">@Alexander Zautke</span> did you had such a feature request already for the .net implmentation?</p>",
        "id": 239037507,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1621231110
    },
    {
        "content": "<p>yes, I will probably have a look on it, after I have further developed my maps! Thanks for the answers <span class=\"user-mention\" data-user-id=\"191478\">@Oliver Egger</span> !</p>",
        "id": 239117015,
        "sender_full_name": "Alexander Dimitrov",
        "timestamp": 1621267773
    }
]