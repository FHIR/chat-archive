[
    {
        "content": "<p>After dipping my toes into the mapping framework yesterday, the following scenario came up:<br>\nAssuming I want to copy a complex element from source to target (think: MedicationStatement.dosage)<br>\nand afterwards I want to delete a single element from the target (think: MedicationStatement.dosage.patientInstruction), how would I do that?<br>\nIs there something like a <code>null</code> element that I can copy to a target element in order to delete nodes?</p>",
        "id": 175819892,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1568645812
    },
    {
        "content": "<p>The first thing that comes to mind is that this assumes an order of execution (first copy, then remove), and rules can be executed in any order. So, this would mean we should be looking at a solution that does a copy + a delete in the same rule.</p>",
        "id": 175822751,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1568647551
    },
    {
        "content": "<p>Something like </p>\n<div class=\"codehilite\"><pre><span></span>group deleteFamilyName(source sPat: Patient, target tPat: Patient)\n{\n    // first copy the name\n    sPat.name as sPatName -&gt; tPat.name as tPatName = patName then\n    {\n        // then delete family name\n        sPatName.family -&gt; tPatName.family = null;\n    };\n}\n</pre></div>\n\n\n<p>or maybe <code>sPatName.family -&gt; tPatName.family = delete();</code> ...?</p>",
        "id": 175838516,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1568658372
    },
    {
        "content": "<p>Yes, I think the dependent scenario (no 1) would work.  Though of course it would erase ALL givens (family does not repeat, but say we used given), then <code>tPatName.given  = null</code> would erase all.  How likely is it that someone would want to erase a subset.  Maybe given is a bad example, say we copy Patient.identifier, and we want to remove our hospitals identifier.</p>",
        "id": 175867139,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1568681853
    },
    {
        "content": "<p>I was actually wondering what the syntax would be for that. tPatName.given[0] wouldn’t be allowed, tPatName.given where ($this.index()=0) didn’t work either</p>",
        "id": 175868574,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1568683925
    }
]