[
    {
        "content": "<p>Hi - relatively new to FHIR. The challenge I'm faced with is consuming data from a certain EHR vendor's proprietary API and transforming the consumed data to FHIR resources. One thing I'm come across is the FHIR mapping language (<a href=\"http://hl7.org/fhir/r4/mapping-language.html\">http://hl7.org/fhir/r4/mapping-language.html</a>). Is the mapping language spec only intended to transform data from one version of FHIR to another, or does my use-case also fit the intended use-case of the mapping language spec? Have others' implemented this spec in a production system? I see there are mapping engines available in Java, can anyone speak to how stable they are or even point me to an example implementation? Thanks.</p>",
        "id": 262367328,
        "sender_full_name": "Anthony Rocco",
        "timestamp": 1637609759
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 262372318,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637612356
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"458359\">@Anthony Rocco</span> you can use the mapping language to convert from non-fhir representation, e.g. from CDA to FHIR, you need to have a Logical Model of the data if it is not FHIR. The Java reference implementation includes FHIR Mapping Language support, you can use with the FHIR validator directly. We do use this implementation on top of hapi in matchbox (see <a href=\"https://github.com/ahdis/matchbox\">https://github.com/ahdis/matchbox</a>) however not yet in production, you can try it out here: <a href=\"https://ahdis.github.io/matchbox-formfiller/#/mappinglanguage\">https://ahdis.github.io/matchbox-formfiller/#/mappinglanguage</a> which uses the test instance <a href=\"https://test.ahdis.ch/matchbox/fhir/metadata\">https://test.ahdis.ch/matchbox/fhir/metadata</a></p>",
        "id": 262385705,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1637619562
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191478\">Oliver Egger</span> <a href=\"#narrow/stream/181579-mapping-framework/topic/Production.20use.20of.20FHIR.20mapping.20language/near/262385705\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"458359\">Anthony Rocco</span> you can use the mapping language to convert from non-fhir representation, e.g. from CDA to FHIR, you need to have a Logical Model of the data if it is not FHIR. The Java reference implementation includes FHIR Mapping Language support, you can use with the FHIR validator directly. We do use this implementation on top of hapi in matchbox (see <a href=\"https://github.com/ahdis/matchbox\">https://github.com/ahdis/matchbox</a>) however not yet in production, you can try it out here: <a href=\"https://ahdis.github.io/matchbox-formfiller/#/mappinglanguage\">https://ahdis.github.io/matchbox-formfiller/#/mappinglanguage</a> which uses the test instance <a href=\"https://test.ahdis.ch/matchbox/fhir/metadata\">https://test.ahdis.ch/matchbox/fhir/metadata</a></p>\n</blockquote>\n<p>Thanks for the reply Oliver! When you say \"you need to have a Logical Model of the data if it is not FHIR\", is there a specific way this model needs to be defined in order for the mapping engine to function properly, ie.  a json representation of the model?</p>\n<p>EDIT: Looking at this some more I see the data needs to be represented as a FHIR structure definition resource, is that correct? So then I take it the structure definition resource is able to be used to represent non-FHIR data models?</p>",
        "id": 262468062,
        "sender_full_name": "Anthony Rocco",
        "timestamp": 1637680170
    },
    {
        "content": "<p>It needs to be expressed as a StructureDefinition.  (Syntax can be XML, JSON or RDF)</p>",
        "id": 262470589,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637681202
    },
    {
        "content": "<p>yes, see 5.3.5.4 Logical Models <a href=\"http://www.hl7.org/fhir/structuredefinition.html#logical\">http://www.hl7.org/fhir/structuredefinition.html#logical</a></p>",
        "id": 262483245,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1637686903
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191478\">Oliver Egger</span> <a href=\"#narrow/stream/181579-mapping-framework/topic/Production.20use.20of.20FHIR.20mapping.20language/near/262483245\">said</a>:</p>\n<blockquote>\n<p>yes, see 5.3.5.4 Logical Models <a href=\"http://www.hl7.org/fhir/structuredefinition.html#logical\">http://www.hl7.org/fhir/structuredefinition.html#logical</a></p>\n</blockquote>\n<p>Thanks! One thing I'm not fully understanding - even after looking at some examples - is the difference between \"snapshot\" and \"differential\" and which I would use when defining a non-FHIR structure.</p>",
        "id": 262626526,
        "sender_full_name": "Anthony Rocco",
        "timestamp": 1637779357
    },
    {
        "content": "<p>Use the differential, this is then applied to the snapshot of the base definition. if you are defining the StructureDefinition in an Implementation Guide the snapshot will be automatically created, see example here: <a href=\"https://www.alis-connect.ch/fhir/StructureDefinition-Header.html\">https://www.alis-connect.ch/fhir/StructureDefinition-Header.html</a></p>",
        "id": 262629932,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1637781204
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191478\">@Oliver Egger</span> </p>\n<p>I started to put together a POC for using FHIR mapping language w/ the mapping engine in the HAPI library. </p>\n<p>I'm performing the transform like this:</p>\n<div class=\"codehilite\"><pre><span></span><code>        Element source = Manager.parse(context, new FileInputStream(sourcePath), Manager.FhirFormat.XML);\n        Element destination = Manager.build(context, context.getStructure(DESTINATION_URL));\n\n        structureMapUtilities.transform(null, source, structureMaps.get(mapUrl), destination);\n</code></pre></div>\n<p>However the compose method for IParser expected a Resource, not an Element, ie<br>\n<code>void compose(OutputStream var1, Resource var2) throws IOException;</code></p>\n<p>Any idea how to serialize the destination object to xml then? Thanks</p>\n<p><a href=\"/user_uploads/10155/vxbtOoTKpCDCg-RcZymC8zgH/Transformer.java\">Transformer.java</a></p>",
        "id": 263052456,
        "sender_full_name": "Anthony Rocco",
        "timestamp": 1638212097
    },
    {
        "content": "<p>you need to use the parsers from org.hl7.fhir.r5.elementmodel, see <a href=\"https://github.com/ahdis/matchbox/blob/main/src/main/java/ch/ahdis/matchbox/mappinglanguage/StructureMapTransformProvider.java#L190\">https://github.com/ahdis/matchbox/blob/main/src/main/java/ch/ahdis/matchbox/mappinglanguage/StructureMapTransformProvider.java#L190</a></p>",
        "id": 263053414,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1638212569
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191478\">Oliver Egger</span> <a href=\"#narrow/stream/181579-mapping-framework/topic/Production.20use.20of.20FHIR.20mapping.20language/near/263053414\">said</a>:</p>\n<blockquote>\n<p>you need to use the parsers from org.hl7.fhir.r5.elementmodel, see <a href=\"https://github.com/ahdis/matchbox/blob/main/src/main/java/ch/ahdis/matchbox/mappinglanguage/StructureMapTransformProvider.java#L190\">https://github.com/ahdis/matchbox/blob/main/src/main/java/ch/ahdis/matchbox/mappinglanguage/StructureMapTransformProvider.java#L190</a></p>\n</blockquote>\n<p>Thanks Oliver!  I tried performing the mapping in step 8 here <a href=\"https://github.com/ahdis/fhir-mapping-tutorial/blob/master/maptutorial/step8/logical/structuredefinition-tleft.xml\">https://github.com/ahdis/fhir-mapping-tutorial/blob/master/maptutorial/step8/logical/structuredefinition-tleft.xml</a> using my program, however it fails because Manager.parse expects there to be a snapshot in the StructureDefinition for TLeft. I tried adding a snapshot node with the same value as differential but then get the error <code>org.hl7.fhir.exceptions.DefinitionException: Unable to find type 'code' for name 'd' on property TLeft.d</code>. What would be the correct thing to do here?</p>\n<p>Edit: I suspect this is because I havent loaded the definition for code? I think I need to download the definitions zip from here <a href=\"http://hl7.org/fhir/downloads.html\">http://hl7.org/fhir/downloads.html</a> and load that into my context.</p>\n<p>Edit: Yep, got it working.</p>",
        "id": 263164099,
        "sender_full_name": "Anthony Rocco",
        "timestamp": 1638287503
    }
]