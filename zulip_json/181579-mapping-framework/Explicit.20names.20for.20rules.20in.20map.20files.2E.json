[
    {
        "content": "<p>I'm using HAPI FHIR r4 and trying to perform a transform with the StructureMapUtilities class, however the FHIRLexer is throwing this exception when parsing my map:</p>\n<p><code>org.hl7.fhir.r4.utils.FHIRLexer$FHIRLexerException: Error in ?? at 9, 7: Complex rules must have an explicit name</code></p>\n<p>What makes something a complex rule? I've seen examples of maps where there's to explicit rule names at all, and some where every rule has an explicit name. For reference, here is my map:</p>\n<div class=\"codehilite\"><pre><span></span><code>map &quot;http://hl7.org/fhir/StructureMap/LabResultToDiagnosticReport&quot; = &quot;LabResultToDiagnosticReport&quot;\n\nuses &quot;http://hl7.org/fhir/StructureDefinition/LabResult&quot; alias LabResult as source\nuses &quot;http://hl7.org/fhir/StructureDefinition/DiagnosticReport&quot; alias DiagnosticReport as target\nuses &quot;http://hl7.org/fhir/StructureDefinition/Observation&quot; alias Observation as target\nuses &quot;http://hl7.org/fhir/StructureDefinition/Bundle&quot; alias Bundle as target\n\ngroup makeBundle(source src : LabResult, target bundle : Bundle) {\n  src -&gt; bundle.id = uuid();\n  src -&gt; bundle.type = &#39;collection&#39;;\n  src -&gt; bundle.entry as entry, entry.resource = create(&#39;DiagnosticReport&#39;) as report then\n    TransformDiagnosticReport(src, report), TransformDiagnosticReportPostHandler(src, report, bundle);\n}\n\ngroup TransformDiagnosticReport(source src : LabResult, target report : DiagnosticReport) {\n    src -&gt; report.id = uuid();\n    src -&gt; report.status = &#39;final&#39;;\n    src.facilitycode as ordercode -&gt; report.code = cc(&quot;http://loinc.org&quot;, ordercode, ordercode)\n    src.observationdatetime as odt -&gt; report.effectiveDateTime = dateOp(odt, &#39;dateTime&#39;);\n    src.labresultid as labid -&gt; report.identifier = id(&#39;https://xxx&#39;, labid);\n}\n\ngroup TransformDiagnosticReportPostHandler(source src : LabResult, source report : DiagnosticReport, target bundle : Bundle) {\n    src.observations as obs -&gt; bundle.entry as entry, entry.resource = create(&#39;Observation&#39;) as observation\n        then TransformObservation(src, report, observation);\n}\n\ngroup TransformObservation(source lab_obs, source report : DiagnosticReport, target observation: Observation) {\n   lab_obs -&gt; observation.id = uuid();\n   lab_obs -&gt; observation.status = &#39;final&#39;;\n   lab_obs.observationidentifier as o_identifier -&gt; observation.identifier = id(&#39;https://xxx&#39;, o_identifier);\n    lab_obs.loinc as loinc -&gt; observation.code = cc(&quot;http://loinc.org&quot;, loinc, loinc);\n    observation.id as o_id log &quot;$this&quot; -&gt; report.result = create(&#39;Reference&#39;) as result,\n        result.reference = evaluate(o_id, &#39;\\&#39;Observation/\\&#39; + $this&#39;);\n}\n</code></pre></div>",
        "id": 263450446,
        "sender_full_name": "Anthony Rocco",
        "timestamp": 1638457618
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191363\">@Vadim Peretokin</span></p>",
        "id": 263451872,
        "sender_full_name": "Anthony Rocco",
        "timestamp": 1638458159
    },
    {
        "content": "<p>I'm not sure off the top of my head, and that name is not called out in the spec. Maybe it means the 'then' statement? I'd try to debug this by cutting everything out and building it back up again until you get the error.</p>",
        "id": 263453171,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1638458612
    },
    {
        "content": "<p><code>    src.facilitycode as ordercode -&gt; report.code = cc(\"http://loinc.org\", ordercode, ordercode)</code> is missing a semicolon - check this <span class=\"user-mention\" data-user-id=\"458359\">@Anthony Rocco</span></p>",
        "id": 263453874,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1638458855
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191363\">Vadim Peretokin</span> <a href=\"#narrow/stream/181579-mapping-framework/topic/Explicit.20names.20for.20rules.20in.20map.20files.2E/near/263453171\">said</a>:</p>\n<blockquote>\n<p>I'm not sure off the top of my head, and that name is not called out in the spec. Maybe it means the 'then' statement? I'd try to debug this by cutting everything out and building it back up again until you get the error.</p>\n</blockquote>\n<p>Thanks Vadim, and also thank you for your great presentation on FHIR mapping language - it was a big help. I ended up resolving this error by naming all my rules, like so:</p>\n<div class=\"codehilite\"><pre><span></span><code>src -&gt; bundle.id = uuid() &quot;bundle.id&quot;;\nsrc -&gt; bundle.type = &#39;collection&#39; &quot;bundle.type&quot;;\n</code></pre></div>\n<p>Even those two rules were causing an exception without it.</p>\n<p>I'm now encountering this error:<br>\n<code>     [java] org.hl7.fhir.exceptions.FHIRException: Cannot set property resource on entry - value is not a primitive type (DiagnosticReport) or an ElementModel type</code> <br>\nI followed how you constructed the bundle in your video, but maybe the spec has changed since then.</p>\n<p>Edit: That error seems to have been an issue with how I was loading the structure definition for DiagnosticReport - has since been resolved. Some of the transformed you used like <code>id</code> are throwing an Exception saying the transform is unknown, which mapping engine did you use in your presentation?</p>",
        "id": 263470984,
        "sender_full_name": "Anthony Rocco",
        "timestamp": 1638465520
    },
    {
        "content": "<p>Same one actually! But it was a couple of years ago so things have moved on since then it would seem.</p>",
        "id": 263814632,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1638774429
    },
    {
        "content": "<p>It would be good to figure out all the new changes and publish an update <span aria-label=\"thinking\" class=\"emoji emoji-1f914\" role=\"img\" title=\"thinking\">:thinking:</span></p>",
        "id": 263814699,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1638774492
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191478\">@Oliver Egger</span> is naming every single rule really required now? It seems a bit unnecessary. Maybe this is not intended?</p>",
        "id": 263814864,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1638774723
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"458359\">Anthony Rocco</span> <a href=\"#narrow/stream/181579-mapping-framework/topic/Explicit.20names.20for.20rules.20in.20map.20files.2E/near/263470984\">said</a>:</p>\n<blockquote>\n<p>Edit: That error seems to have been an issue with how I was loading the structure definition for DiagnosticReport - has since been resolved. Some of the transformed you used like <code>id</code> are throwing an Exception saying the transform is unknown, which mapping engine did you use in your presentation?</p>\n</blockquote>\n<p>I've noticed the unknown map error being thrown because of another error higher up, even when the transform parameter is set to the correct value from the FML map, i.e. in your example the transform=http://hl7.org/fhir/StructureMap/LabResultToDiagnosticReport.  It had me looking in the wrong place a few times. This was when using the validator_cli and looking at the output on the terminal, not sure about errors coming back in an OperationOutcome...</p>",
        "id": 263976520,
        "sender_full_name": "Declan Kieran",
        "timestamp": 1638869537
    }
]