[
    {
        "content": "<p>There are too many IGs being developed to empower patients. We are using technical standards to limit behaviors. The model we are pulling data from is already standardized. We can use that model and allow application developers, consumers, and providers much greater freedom.</p>",
        "id": 224384219,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611863911
    },
    {
        "content": "<p>Does this make sense? </p>\n<p>An application that can receive access from a consumer will be limited if it can only access use case specific functionality. </p>\n<p>Instead use cases can emerge organically. Patients and providers should be able to choose how an application functions (and how to use their data). </p>\n<p>Use case specific IGs seem to slow innovation. We can standardize on the patient and allow apps to meet use cases. I am not sure why we are trying to dictate standards around how data is used. Business agreements and consent should determine how data is used.</p>",
        "id": 224413502,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611879511
    },
    {
        "content": "<p>What specifically are you arguing against? The key implementation guides we have are not use case specific; SMART on FHIR provides a general authorization and integration method; US Core and CARIN BB together ensure access to two key data sets, with no specific use case limitations imposed. Of course the implementation guides each cover a certain technical scope, and there are some things you can build on top of this scope and other things you cannot (as a simple example, the CARIN BB implementation guide supports read access but some use cases require writing).</p>",
        "id": 224415546,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1611879758
    },
    {
        "content": "<p>I am arguing against developing igs before the use cases.</p>",
        "id": 224415590,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611879811
    },
    {
        "content": "<p>You want to develop use cases first and then develop implementation guides.</p>",
        "id": 224415671,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1611879858
    },
    {
        "content": "<p>And I am seeing that IGs that require subsets of data to be sent are limiting innovation. It sets barriers while we are still figuring things out.</p>",
        "id": 224415682,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611879868
    },
    {
        "content": "<p>Maybe it would help to provide some specific examples of activities or IGs you think are on the right track or activities you think are off base.</p>",
        "id": 224415743,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1611879925
    },
    {
        "content": "<p>This discussion is a bit abstract for me.</p>",
        "id": 224415758,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1611879936
    },
    {
        "content": "<p>CARIN and USCore are good examples of IGs that attempt to establish a minimum acceptable version of a resource. As things currently stand, all profiles sent to the consimer are in alignment.  These IGs are also largely silent on how the data mist be used. This enables use cases to emerge. </p>\n<p>An IG that says exactly how two parties must exchange data, and what fields to use may help with interoperability but I do not think we are ready. We should see how people use the data first. </p>\n<p>We suggested a simple IG that allows the patient access api to accept task updates from patients and providers. This could be powerful in the hands of a clever developer.</p>",
        "id": 224419126,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611882561
    },
    {
        "content": "<p>Even for the suggested IG that includes task updates, it seems we were getting caught up in the specifics of how it would be used. I can think of numerous ways to use tasks but I would hesitate to provide implementation directions. Instead, I would like to see applications emerge that can take advantage of this capability (and hopefully the easy implementation and inclusion in the patient access API will increase adoption too). </p>\n<p>I think that app developers if given some freedom, can develop use cases too. </p>\n<p><span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> what do you think as an app dev? Use case-specific IGs vs higher freedom (and consumer choice)?</p>",
        "id": 224424181,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611887342
    },
    {
        "content": "<p>Someone gave me a 2-hour speech about how limiting they found IGs for innovation. There are many more reasons that I know others have come across too.</p>",
        "id": 224424292,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611887445
    },
    {
        "content": "<p>If we focus on core functionality (complete data, how to trust, how to exchange) app devs can be leveraged to solve problems. Instead of using an IG to tell us how things will function, I trust that an app can eventually come along that people can agree to trust to perform some meaningful interactions. I do not see the need to trust the IG.</p>\n<p>Again, this is specific to use-case specific IGs.</p>",
        "id": 224424526,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611887729
    },
    {
        "content": "<p>IGs that specify subsets are setting minimums, they're not prohibiting other information from being shared.   Certainly, you can expect certain systems will only do the minimum of what regulation-referenced IGs demand.  However, the reality is that if those IGs didn't exist, the systems probably wouldn't share anything at all.  Every IG has an underlying use-case or set of use-cases.  As much as possible, we try to make sure that the IGs leverage the same interfaces and approaches, allowing re-use.  Also, once the interfaces exist, extending them to support additional data elements - either demanded by other IGs or just because some of the sharing parties mutually find them useful should be easy to do.  In general, FHIR takes the approach of \"build simple useful things first and make it easy for them to grow and support new use-cases not initially contemplated\" rather than \"ask people to build global interfaces that support everything\" - to which the typical reaction is \"too expensive, no business case, no thanks\".</p>",
        "id": 224430543,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611895550
    },
    {
        "content": "<p>I agree with this <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>. I know it's not black and white. </p>\n<p>We will continue to discuss in this group. Basically I would like to see PE IGs allow patient and provider freedom.</p>",
        "id": 224472943,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611928500
    },
    {
        "content": "<p>I am all for more generic profiles, but 'generic task' does not seem that useful (having said that I don't think that the patient correction ones will ever be actually implemented)</p>",
        "id": 224479125,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1611931302
    },
    {
        "content": "<p>If we ever get the ability to save tasks we can brainstorm some cool ways to use it.</p>",
        "id": 224489747,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611935343
    },
    {
        "content": "<p>We can define possible use cases too. Like the 4 patient correction ise cases.</p>",
        "id": 224489923,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611935404
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> do you imagine one app for the provider and a different app for the patient? We can do a lot more if the application is the same. You cannot use two apps with a vague IG. I agree with that.</p>",
        "id": 224490774,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611935717
    },
    {
        "content": "<p>. . .are you asking about patient correction? That should have apps only for the patients, provider would use their internal tools I assume</p>",
        "id": 224497588,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1611937941
    },
    {
        "content": "<p>I am proposing that an app can be owned by a provider and used by a consumer. This enables more powerful interactions to occur (and removes the need to define interactions between the front end and backend, since one app owns both).</p>",
        "id": 224532857,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611954113
    },
    {
        "content": "<p>Keep in mind that even if the FHIR interface is \"store a Task\", that doesn't mean that from a back-end perspective the data always ends up in a generic store (or even the same store).  As an example, a system might expose an Observation endpoint, but only support vitals but not labs or vice versa (even though its internal data store contains both).  Asking for systems to expose a 'generic' Task endpoint may be exceedingly hard to realize in practice.  IGs with tightly defined scopes are easier to embark on.</p>",
        "id": 224532864,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611954119
    },
    {
        "content": "<p>The IG i am proposing will not work well if we have two apps trying to communicate (without an IG for guidance). </p>\n<p>If a provider trusted an app, and the app found a cool way to utilize fields on the Task to perform meaningful interactions (that are controlled on both ends by app and data) I can see possibilities emerging without strict guidance.</p>",
        "id": 224533146,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611954245
    },
    {
        "content": "<p>The provider would need to see a demo and agree to the apps behaviors before installing and making it available to consumers though.</p>",
        "id": 224533188,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611954272
    },
    {
        "content": "<p>This IG would be attractive for implementers who wanted to create an app that allows the consumer to report/interact with FHIR related stuff, for example.</p>",
        "id": 224533308,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611954333
    },
    {
        "content": "<p>The task model needs must support flags for things we think will have value to save and retrieve. We can define basic search too. I am recommending to stay silent outside of this (maybe mention auth method required too).</p>",
        "id": 224544361,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611959239
    },
    {
        "content": "<p>Generalized IGs like CARIN are good to raise the maximum possibilities (the ceiling). Prescriptive guides are good to raise the minimum acceptable capabilities (the floor)</p>",
        "id": 224554646,
        "sender_full_name": "Brendan Keeler",
        "timestamp": 1611966781
    },
    {
        "content": "<p>I can get behind this <span class=\"user-mention\" data-user-id=\"200498\">@Brendan Keeler</span>  as long as the specialized guide does not collapse the ceiling.</p>",
        "id": 224555598,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611967574
    },
    {
        "content": "<p>IGs should not prohibit behavior unless it's clearly wrong in the use-case.  (So, for example, constraining max cardinalities is something that should be done only with considerable caution.)</p>",
        "id": 224588088,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612017586
    },
    {
        "content": "<p>Are you finding IGs that are unreasonably constraining things?</p>",
        "id": 224588123,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612017603
    },
    {
        "content": "<p>There are open discussions about creating IGs that remove fields (set max cardinality to 0) but these have not made it past the idea stage and do not think they will gain momentum. </p>\n<p>For PE, I am worried about use-case specific workflow IGs being too restrictive, for day one. We are essentially defining a sequence of Task states that must be followed to achieve an outcome. For the first IG, I think we can allow Devs to define how to interact with the Task. </p>\n<p>The IG should also avoid assigning actions to the data producers based upon the Task states (e.g. if the Task status is \"x\" you must do \"y\").</p>",
        "id": 224588851,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612018601
    },
    {
        "content": "<p>This will be attractive for implementers because of the low burden (just allow consumers to post/put task). They will also keep freedom regarding how the Task is used via app choice.</p>",
        "id": 224589409,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612019290
    },
    {
        "content": "<p>One possibility: you're overestimating drastically how well servers (EHRs) support Task or similar data structures today. Most inherently lack that concept (or have many user specific workqueues), so it's a big lift to implement, given how it spans  a lot of ground. Perhaps that restriction is the tension of compromise between your desires (thinking from a creator/developer/app perspective) vs those other stakeholders.</p>",
        "id": 224590441,
        "sender_full_name": "Brendan Keeler",
        "timestamp": 1612020803
    },
    {
        "content": "<p>\"just support Task generically!\" turns into thirty mini projects for the server if they have multiple workqueues in their system today.</p>",
        "id": 224590499,
        "sender_full_name": "Brendan Keeler",
        "timestamp": 1612020850
    },
    {
        "content": "<p>I agree <span class=\"user-mention\" data-user-id=\"200498\">@Brendan Keeler</span> that task and workflow interactions between server and client open a can of worms. </p>\n<p>I am proposing the server does nothing. Applications can handle saving the data and facilitating meaningful interactions. From the server's perspective, it's a blob (since we did not define a use case).</p>",
        "id": 224590765,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612021204
    },
    {
        "content": "<p>This is important because we need a common interface for third party applications to act against. Currently, we cannot share information between patients and providers (using the widely available interop interfaces).</p>",
        "id": 224591267,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612021857
    },
    {
        "content": "<p>The EHRs who have complex workflow systems already can ignore this task, by meta.profile[]. Will this increase compatibility <span class=\"user-mention\" data-user-id=\"200498\">@Brendan Keeler</span> ?</p>",
        "id": 224600869,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612034815
    },
    {
        "content": "<p>This is a serious problem - patients want their information corrected.  Incorrect data impacts quality, safety, cost, and research for a better tomorrow. <br>\n And interoperability makes it worse because we spread the wrong data.  And patients want to be heard - this provides a voice.  They also just want their information and often times they want information not available on APIs and wont be for awhile.  There are other patient requests like for appointment and refills or a callback from the doctor or just a question.  So for example another use case could be patient request for release of information. <br>\n So we need to find a solution for patient corrections.  I feel that there is functionality that will need to be developed on the server side, not just the API.  EHRs are all about workflow.  Orders of all types, med admin request, med supply requests, transfer order, pt order, order for diagnostic service, order for chaplain visit, request for use of a room, orders for a wheelchair, order for a room to be cleaned, release of information request, etc. It is my opinion that with the new information blocking rule, we can expect the request for data in electronic format to increase as well as requests for corrections.  I do think that if we design this right, the same Task functionality could be used for other requests.  We accomplished alot of work on this this week at the WGM and I refer you to the minutes for some of the design discussions.  I will start a new thread in a little bit pointing out where you can find it also always appreciate the feedback</p>",
        "id": 224605218,
        "sender_full_name": "Virginia Lorenzi",
        "timestamp": 1612041010
    },
    {
        "content": "<p>As far as too many or too few IGs I was very tempted to say how about just right?  That is the art of interoperability standards and that friction will always exists and we always have to think about rightsizing.    I think a problem in the FHIR space is that an IG does not map to a server's capabilities.  In V2 or messaging interfaces, you would have a messaging specification and you would implement those messages on that feed.  With a server, you have end points for resources and I believe layered into how those endpoints are implemented is guidance from a multitude of IGs.  It could be just one big IG and that would certainly make it easier to find.  But IG work is use case and community driven so the work isnt done that way.  We had this problem with CDA.  Lots of people created different templates and IGs for CDA and finally someone created CCDA which through a whole bunch of them together so people could at least find them all which is why that document is huge and unweildy (I hope the CDA folk out there do not kill me for my description here and they can correct me).  We might, with FHIR, be heading for that same place.  However, we have that experience so we can look for it and address it.</p>",
        "id": 224605521,
        "sender_full_name": "Virginia Lorenzi",
        "timestamp": 1612041533
    },
    {
        "content": "<p>To level-set on my goals (I promise they align with this groups): </p>\n<p>1.) To develop a patient empowerment specification that can eventually be incorporated into policy.<br>\n2.) To empower patients and providers to interact, in a consistent manner, regardless of the EHR used. <br>\n3.) To allow patients and providers to maintain freedom of choice to choose how they interact with their health data<br>\n4.) To leverage the application developer community to help solve the problems facing the healthcare ecosystem<br>\n5.) To enable the transfer of information between payer and provider. </p>\n<p>A generic task can meet all of the use cases specified. I posted a diagram earlier that details this process. The trick is to get an application developed and to enable economy of scale—the more, the merrier, for many reasons.</p>",
        "id": 224605604,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612041631
    },
    {
        "content": "<p>The push back against a generic task, that the server is NOT ALLOWED TO TOUCH, is that it allows for third party applications to participate, currently it requires a specialized integration into each EHR (because we specify the server behavior).</p>",
        "id": 224605800,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612041932
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"246928\">@Josh Lamb</span> I will go back and review your picture.  The problems we have unearthed this week were generic I believe.  Have you been looked at #workflow as well?  I think that we need to look at it as an external request.  Requests are only that - requests.  If you order me to clean my room that doesn't mean I will do it or that I will do it how you want me to or when you want me to and I may have lots of questions about what exactly you mean by room cleaning.  We should be doing this on #workflow.  I hear FHIR I has Tuesday Workflow calls.</p>",
        "id": 224605915,
        "sender_full_name": "Virginia Lorenzi",
        "timestamp": 1612042089
    },
    {
        "content": "<p>save me time - post it again please <span class=\"user-mention\" data-user-id=\"246928\">@Josh Lamb</span></p>",
        "id": 224605928,
        "sender_full_name": "Virginia Lorenzi",
        "timestamp": 1612042123
    },
    {
        "content": "<p>I have 10 great app ideas for how to utilize a generic Task (we can now share information, and we are computer people, an ID can carry a lot of information).</p>",
        "id": 224605943,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612042152
    },
    {
        "content": "<p>I think a \"patient empowerment\" specification is way too generic a concept to ever see implementation.  Start small and design to allow to expand.  If you design too big, nothing happens.  The reality is that right now, there are <em>no</em> interfaces to allow patients to initiate requests.  Each interface that gets enabled will have to be specifically enabled by the EHRs.  And each interface may well talk to a different system (even if from an external patient perspective it may seem to be the same black box).  Some IGs involve freedom to choose.  Others nail things down to ensure interoperability and to make the 'ask' small enough that there's a decent chance of it being built.  Keep in mind that there's no \"generic Task\" on the EHR side and there probably won't ever be.  Just as there's no \"generic Observation\".  Labs, vitals, smoking, etc. are all completely different back-end systems, that just happen to all be surfaced using the same FHIR resource.</p>",
        "id": 224607174,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612043685
    },
    {
        "content": "<p>How does a specification that requires no action from the server limit implementation? The goal is to allow third-party applications to meet needs, regardless of the EHR used.</p>",
        "id": 224612643,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612051334
    },
    {
        "content": "<p>I was thinking a base specification, that use case specific igs can derive from. I am not married to any particular fhir resource either. It should be trivial to implement, since applications can perform the meaningful work.</p>",
        "id": 224614728,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612054867
    },
    {
        "content": "<p>But we <em>do</em> require action by the server.  We need to drive behavior in EHR and affiliated systems.  The requested actions need to be persisted somewhere - and the only place we have to persist them is in the EHR</p>",
        "id": 224615539,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612056201
    },
    {
        "content": "<p>If we need the EHR to perform a series of actions to update a specific fhir resource in a predictable way I agree.</p>",
        "id": 224616768,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612058238
    },
    {
        "content": "<p>I think this approach is limiting. I feel it's necessary to demonstrate how a generic approach can provide the foundation needed to support a wide variety of use cases. Perhaps use cases can be done through certification instead of through pre-planning app code?</p>",
        "id": 224616829,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612058349
    },
    {
        "content": "<p>Until systems are certified there is not inferop anyway.</p>",
        "id": 224616838,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612058369
    },
    {
        "content": "<p>Again, the allure of this approach is that it requires servers to leave data alone (acting as repository or middleman). If an ehr wants to create an app to utilize this, that works too.</p>",
        "id": 224616895,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612058455
    },
    {
        "content": "<p>We're not pre-planning app code.  We're defining an agreed interface.  The interface will be 'standard' from a client perspective.  The back-end implementation may be widely different.  The server isn't going to leave the data alone - the EHR users are going to need to change it.  The EHR isn't going to want to be a middleman for itself.</p>",
        "id": 224619791,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612063844
    },
    {
        "content": "<p>The EHR can do whatever it wants, today, including all of the PE use cases.</p>",
        "id": 224621710,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612067503
    },
    {
        "content": "<p>The interface is defined as a structure definition. The use cases and prescriptions for how servers should behave is my issue.</p>",
        "id": 224621753,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612067560
    },
    {
        "content": "<p>If you were writing an application, would you like to be told exactly how it should function?</p>",
        "id": 224622009,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612067900
    },
    {
        "content": "<p>I'm not understanding.  How the EHR handles the Task, how it transitions states, etc. is up to it.  But we definitely need to define that it has to accept POST and perhaps PUT and search.</p>",
        "id": 224622361,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612068447
    },
    {
        "content": "<p>There are some basics about what the inputs will look like and what the output will look like - that's fundamental to defining the interface</p>",
        "id": 224622404,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612068488
    },
    {
        "content": "<p>How the EHR actually manages the process of deciding on the change is up to it.</p>",
        "id": 224622418,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612068502
    },
    {
        "content": "<p>The interface is the CapabilityStatement that defines the RESTful behaviors along with a profile that describes the data structure manipulated.</p>",
        "id": 224622429,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612068543
    },
    {
        "content": "<p>I 100% agree we have to define post, put, and search, including the fields we require the server to support.</p>",
        "id": 224622514,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612068652
    },
    {
        "content": "<p>Ok - so what behavior is it that you feel we're over-defining?</p>",
        "id": 224623202,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612069570
    },
    {
        "content": "<p>We were requiring the server/EHR to take action. As <span class=\"user-mention\" data-user-id=\"191531\">@Virginia Lorenzi</span> said, we can separate the request, fulfillment, and repository(server). A profile that the server cannot touch (unless they take on the fulfiller role) will ease the implementation burden and allow third-parties to develop apps to meet the PE use cases without involvement from EHRs. This also allows for a single app to meet a wider range of needs (more users and a wider range of functionality).</p>",
        "id": 224651635,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612108933
    },
    {
        "content": "<p>We can separate the fulfillment of a use-cases from the CRUD.</p>",
        "id": 224652023,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612109294
    },
    {
        "content": "<p>We're requiring <em>people</em> to take action - and we're expecting some component of the EHR to expose the request to the right people.  The reality is that EHRs aren't monolithic and there are multiple pieces of software that hospitals and clinics use - and the one used to manage interactions with patients (including logging requests for change) might not be the same as the ones used to store the clinical data that needs correcting.  However, I'd be cautious about suggesting that introducing a third-party is going to make things easier.  Our fundamental objective is to get information in front of the individuals that are responsible for resolving correction requests.  The organizations responsible for managing software in those organizations are going to be a whole lot happier and are more likely to adopt if the functionality shows up in their existing solutions than if they have to use something external.  Keep in mind that there's no regulation here that requires organizations to change from their existing paper-based processes,  Requiring installation of some new set of software (whether app or not) and forcing reliance on some uncontrolled intermediary doesn't seem like a winner to me...</p>",
        "id": 224652961,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612110846
    },
    {
        "content": "<p>I realize this may be seen as a way to open the doors for third-party applications to begin developing meaningful apps, without the blessing of the EHR vendors. The EHR vendors can and have always been free to create any apps that meet their needs (or the needs of PE).</p>",
        "id": 224653080,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612111034
    },
    {
        "content": "<p>This is for a consistent server-side implementation/functionality, regardless of EHR or application used. The applications can adopt the use-case specific IGs or develop their own workflows.</p>",
        "id": 224653131,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612111149
    },
    {
        "content": "<p>The consumer's right of access will drive application choice. The provider's will have similar freedom (driven either by consumer's access or with the blessing of the EHR with user access).</p>",
        "id": 224653186,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612111212
    },
    {
        "content": "<p>There are many EHRs, and a consistent mechanism to interface with every server will be powerful for PE.</p>",
        "id": 224653200,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612111273
    },
    {
        "content": "<p>The point of the standard is to define consistent interfaces - implemented by the EHRs themselves, which are the holders of the data.  I'm not seeing the business case for a hospital or clinic to bypass them here.</p>",
        "id": 224653486,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612111725
    },
    {
        "content": "<p>In the end, the actual changes - and any \"logging of disagreement\" <em>must</em> be stored in the EHR.  Third-party solutions seem like they'd just make that more complex - in addition to the complexity to the healthcare organizations of having yet one more player in an already complex space.</p>",
        "id": 224653564,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612111854
    },
    {
        "content": "<p>A large EHR may develop their own apps (and implement the use cases this group will define) themselves. The EHR can also meet many use cases without an IG (which they do readily). Currently, third-party apps can ONLY meet use cases through an IG, and they cannot innovate. Third-party apps can reach a wider range of people (hit all of the patient access APIs instead of going through a site-specific open.epic or open.cerner instance).</p>",
        "id": 224653648,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612111940
    },
    {
        "content": "<p>It is important that a consumer can use an application of their choice to interface with their healthcare data. If we require EHR integrations with the app, this will be impossible.</p>",
        "id": 224653666,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612112021
    },
    {
        "content": "<p>The consumer can currently use the Patient Access API to view data using an application of their choice. We can expand the Patient Access API to allow the application to directly facilitate meaningful interactions between patients and providers. This could also enable HIPAA exchanges to occur at the consumer's request (currently not an option through an Patient Access API).</p>",
        "id": 224653737,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612112150
    },
    {
        "content": "<p>Focus on Patient Access API is important because it will be widely available and we should develop solutions that do not skip large portions of the population.</p>",
        "id": 224653790,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612112218
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/zJa3Sluw9TsLQjh_D5FurHYP/Alignment-of-Interests-1.png\">Alignment-of-Interests-1.png</a> Here is the conceptual map of why I think this is important. We can continue to dig into the details during our conference and WG sessions.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/zJa3Sluw9TsLQjh_D5FurHYP/Alignment-of-Interests-1.png\" title=\"Alignment-of-Interests-1.png\"><img src=\"/user_uploads/10155/zJa3Sluw9TsLQjh_D5FurHYP/Alignment-of-Interests-1.png\"></a></div>",
        "id": 224655528,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612114911
    },
    {
        "content": "<p>I don't know what you mean by 'consumer'.  If we're talking employees of a health system, they don't have \"choice\" - they use what their organization dictates/permits.  And the functionality needed on the patient correction side is for integration with EHR software to support making corrections, linking to the data corrected, propagating \"notices of disagreement\" into the record, etc.  What is the evidence for the belief that this will work better with 3rd party apps or be more likely to be adopted by healthcare organizations in third party apps than if the features are directly supported by the EHR?  Note that choice by patients isn't relevant here.  There can be all kinds of apps for them.  The question is what's going to run inside the healthcare organizations.</p>",
        "id": 224656905,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612116703
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179262-patient-empowerment/topic/Too.20Many.20IGs/near/224656905\">said</a>:</p>\n<blockquote>\n<p>If we're talking employees of a health system, they don't have \"choice\" - they use what their organization dictates/permits.  </p>\n</blockquote>",
        "id": 224657053,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612116873
    },
    {
        "content": "<p>Lets give them a choice then</p>",
        "id": 224657056,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612116878
    },
    {
        "content": "<p>Can we schedule a time to discuss <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>? We can probably come to a consensus without making the communities eyes bleed.</p>",
        "id": 224657144,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612116965
    },
    {
        "content": "<p>Providers don't have a choice because their organizations make the decisions about what technical solutions they're allowed to use - and that's not something we can wish away.  (And the security side of me says we <em>shouldn't</em> wish it away.)  The decision-makers here are going to be the folks who run the IT shops of the health organizations and the health organization leadership who tells them what to do.  What are the selling features of this approach to them?  (Because \"more choice\" probably isn't it...)  We can take this offline to PMs if you feel that would be more productive.</p>",
        "id": 224663642,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612125873
    },
    {
        "content": "<p>I come back from a couple of days under the weather and my Zulip badge's alerts counter says \"214\".</p>\n<p>Well, we WANTED to stir up participation...</p>",
        "id": 224666461,
        "sender_full_name": "Dave deBronkart",
        "timestamp": 1612129627
    },
    {
        "content": "<p>Some providers operate out of private practice. I do not see why the FHIR community has input into what can occur in a care setting. The patient and provider are capable of selecting applications that meet their needs (assuming we provide an ecosystem that allows this to occur).</p>",
        "id": 224670047,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612132659
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197491\">@Dave deBronkart</span> We can just always go with the popular opinion and never make noise. But that is not what PE is about.</p>",
        "id": 224670249,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612132971
    },
    {
        "content": "<p>What I am basically hearing is that we will not allow patient and providers to use an application of their choice to assist with care.</p>",
        "id": 224670333,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612133111
    },
    {
        "content": "<p>This is a HUGE problem for me, and I hope this entire community.</p>",
        "id": 224670339,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612133129
    },
    {
        "content": "<p>It's not about what \"we\" allow.  It's a question of how the market works.  Typically, individual care providers are not in charge of making those decisions.  Exactly how things work vary from country to country.  If we're going to define interoperability solutions (which is HL7's role), we need to take into account how the market dynamics function in the environments where we need adoption.  In general, we don't define solutions that are predicated on any significant change to market dynamics - because that isn't typically very productive.  It's not like we have much in the way of leverage...</p>",
        "id": 224675327,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612140712
    },
    {
        "content": "<p>We can create an applicatino today, without the EHRs blessing, and use the consumer's right of access to view healthcare information and to use that information to communicate between patient and provider. Again, this can be done today, but no one is. So the worries you are putting forward may not be warranted. The ability to save data to a FHIR server is needed regardless of the approach taken. I am not yet convinced that allowing an option for a \"no-op\" from a server somehow increases complexity, risk, or burdens EHRs anymore than a use case driven model. Use case-specific patient correction models will need a model to derive from anyway, to ensure alignment.</p>",
        "id": 224675907,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612141395
    },
    {
        "content": "<p>How does a right to <em>view</em> information provide any mechanism to enable communication between patient and provider?  That only builds a read-only interface and doesn't drive any change in what providers can see.  Keep in mind too, that we can't <em>make</em> servers do anything.  There has to be a business case for both the software vendor and for the customers who purchase those solutions.  The biggest question for us is \"how do we interact with the healthcare professionals who control health record corrections?\"  By and large, those users are restricted to using EHRs or other systems specifically approved by their organizations.  Saying \"we'd like there to be choice\" doesn't change that dynamic.</p>",
        "id": 224676165,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612141691
    },
    {
        "content": "<p>So the EHRs are the product owners for the patient empowerment workgroup? <span class=\"user-mention\" data-user-id=\"197491\">@Dave deBronkart</span></p>",
        "id": 224676971,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612142760
    },
    {
        "content": "<p>An application can have its own backend and share information. I am just saying it's possible but it would be much easier (and better) to have the data producer act as the repository. This also enables more meaningful interactions to occur.</p>",
        "id": 224677051,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612142830
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"246928\">Josh Lamb</span> <a href=\"#narrow/stream/179262-patient-empowerment/topic/Too.20Many.20IGs/near/224670249\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"197491\">Dave deBronkart</span> We can just always go with the popular opinion and never make noise. But that is not what PE is about.</p>\n</blockquote>\n<p>Josh, would you like to dive over to PMs?  I honestly don't know where any of this is coming from.  You're being kind of weird, reading other people's minds.  Not to mention, mid-discussion, asserting what \"we\" \"will not allow.\"</p>\n<p>Please try to be more collaborative, less combative.  (And I'm speaking only as Dave, not in any official capacity. I've been co-leading online discussions since 1989 and this is just not the way to create community progress.)</p>",
        "id": 224677144,
        "sender_full_name": "Dave deBronkart",
        "timestamp": 1612142970
    },
    {
        "content": "<p>ill send a pm</p>",
        "id": 224677241,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612143118
    },
    {
        "content": "<p>Great points Dave. I hope something good can come if we can get on the same page. I will not push so hard! I am approaching this from a different perspective but the same goals.</p>",
        "id": 224678080,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612144344
    },
    {
        "content": "<p>There are no \"product owners\" - there are specific stakeholders that realistically need to be engaged to get to a solution.  Some are easier to engage,  some harder.  PE doesn't drive what happens in industry.  <em>No</em> HL7 work group drives what happens in industry.  We help facilitate discussions amongst various industry stakeholders, each with their own business drivers.  We try to find a solution that works for those drivers.  Sometimes, there's no solution to find.  Often there is.  But we absolutely don't dictate what happens.</p>",
        "id": 224679633,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612146459
    },
    {
        "content": "<p>An IG that can apply to all sources is more attractive to me. For example, a task that will result in a patient identifier being added to the patient resource seems like it would have universal value. This would allow a consumer to begin building connections between their data sources. I see the PASS ID as a great candidate for this task.</p>",
        "id": 225043234,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612370795
    },
    {
        "content": "<p>But if the back-end processing is going to be completely different for different tasks, it's not going to be possible for systems to comply with a generic IG.  Also, there's a need to nail down what the Task.code values are, what the Task.input and Task.output values are, etc.  Sure, you can have a system that knows how to store and permit search on arbitrary Tasks - no need for an IG at all for that, as the FHIR core spec covers what's needed.  But as soon as you need to mandate support for certain elements and constrain the terminology to enable a specific use-case to function interoperably, you need an IG to establish those rules - and the rules are use-case specific.  For some systems, the incremental add of a new Task.code and a few new input or output types will be minor because it's just a small extension of existing capability.  For others, it represents a major set of work because it involves routing data to a completely different sub-system and a whole new set of mapping.</p>",
        "id": 225053756,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612374928
    },
    {
        "content": "<p>I agree, a use case-specific IG, like adding/updating a custom patient identifier, will require interaction with the source data. I am attempting to define a use-case specific IG that would have a lower implementation burden and a high degree of utility (to empower patients to build connections).</p>",
        "id": 225078814,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612385178
    },
    {
        "content": "<p>Regarding a generic IG, good points about the maintenance challenges. Can we allow the servers to omit terminology validation for this generic task? <br>\nA principal component of this approach is that the server is unaware of the meaning of the task, or its contents. The server would probably not allow an application to register for this use case until this information is known. It may create an option for innovation to occur though.</p>\n<p>If we had a generic Task 1 year ago that was part of the Patient Access API a single application could have been universally used to coordinate COVID tests and vaccines. I can flow this use case out if it's useful.</p>",
        "id": 225080060,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612385694
    },
    {
        "content": "<p>It's not about terminology validation, it's about agreement on how to interoperate.  If I send code X, I expect you to do Y.  That needs to be nailed down if we're going to get interoperability.  Saying \"If I send you codes, I expect you to do 'stuff'\" isn't something anyone can meaningfully implement.  We don't expect all back-end systems to have a 'generic' place to store these.  They need to know what the requests can correspond to so they know the place (places) to map to in their system.  If the system is unaware of the meaning of the Task, what subsystem do they route it to?  What table to they stick it in?  If back-end systems don't support \"generic\" Tasks, we can't have an IG that demands that they do - at least not if we want a hope of implementation.</p>",
        "id": 225081735,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612386349
    },
    {
        "content": "<p>I have gone through thought experiments where imagine ways to provide maximum freedom to app developers, patients, payers, and providers while requiring as little involvement/effort from the server as possible (save only), but it sounds like even the save operation is a burden for the larger EHRs. Any suggestions or is the premise of a requester/repository/receiver pattern a non-starter?</p>\n<p>I am hearing that standards and agreements occur outside of HL7 too. Maybe this will allow other communities to contribute?</p>",
        "id": 225092747,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612391232
    },
    {
        "content": "<p>It's not always a given that an intermediary is a non-starter, but that pattern requires a business model for the intermediary.  Who pays them?  Is there a reason someone would want to pay them (and do so for a sufficiently long period of time to justify setup)?  Is there trust in the intermediary by both sender and receiver?  Is there one intermediary or can there be more than one?  If one, can they operate such that they can talk to all possible senders and receivers?  If more than one, who decides what intermediary contains what stuff - and is the complexity of senders and receivers needing to support talking to multiple intermediaries worth it?</p>\n<p>Typically, intermediaries work best for registry type stuff (providers, organizations, drugs, etc.), and even there only if there's a 'sponsor'.  I have trouble visualizing it being successful in this space.</p>",
        "id": 225093573,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612391653
    },
    {
        "content": "<p>Correct, the business use cases would need to be justified, or this would be dormant functionality. I saw an opportunity to track vaccines and to provide a consistent way for consumers to place requests (a HHS portal, for example, could have met this use case). Sometimes we have people available to solve a problem and the technology is lagging behind. I see these cases as opportunities to go app first, instead of use case first.</p>",
        "id": 225093945,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612391899
    },
    {
        "content": "<p>Given that implementation is use-case driven, not general capacity driven, that's challenging.  FHIR provides a façade that may make lots of functionality <em>appear</em> to be the same.  But the back-end code is frequently quite different.</p>",
        "id": 225107896,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612401562
    },
    {
        "content": "<p>Thanks for that insight <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>. When the use case is not defined, it is beneficial to think of all implementations as a facade. What happens below the interface (including outcomes) is a black box.  Humans, acting upon directions received through an app of their choice, are required to bridge the gap between a third-party app and the underlying data. A standard interface (facade) can provide a consistent read-only view of the status of things. A vaccine for a person can be verified through the standard \"facade\" search for claims and clinical data. Same is true for a read-only view of a condition (covid) or a observation (antibodies). At the end of the day, if you send a task, and someone gets a vaccine, do you really have to know the mechanics (every single time)?</p>",
        "id": 225113858,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612407877
    },
    {
        "content": "<p>You're presuming the existence of intermediaries that don't exist, and for which there's no business case.  You're also assuming providers will be able to choose which apps they get to run, which isn't necessarily the case either.  Also, apps (if you're talking about SMART apps) only run when launched, which isn't going to satisfy workflows where there's a need to push information in front of providers.</p>",
        "id": 225115247,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612409664
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> , I will get back to you!</p>",
        "id": 225115337,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612409788
    },
    {
        "content": "<p>To close this thread out, I have a new thread in argonaut addressing the importance for the Patient Access API to accept a federated patient identifier (from HIPAA connections). This patient identifier will empower patients to access all of their healthcare data. This is also important for security reasons. The member id we submit in claims data is not a secure identifier.</p>",
        "id": 225433710,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612651516
    },
    {
        "content": "<p>It might be 'desirable', but not sure we can say it's \"important\".  Right now the requirement is that each hospital/provider have an ability to authenticate the patient and allow access to their data from that provider.  Most, if not all, systems now have that (and those that don't are either going to have it soon or face penalties).  Having a federated identifier isn't essential to making that happen - and for it to work, all of the various hospitals and clinics would need to agree to trust it and have the necessary legal paperwork in place with the identification authority to allow that to happen.  Not sure it's realistic to expect that anytime soon.</p>",
        "id": 225439190,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612661087
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> I agree with you. My current preference is to use an OpenID token that accepts multiple FHIR Patient.Identifiers[]. The federation (and choice to trust the authority) will be at the discretion of the consumer and data producer.</p>",
        "id": 225485973,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612734778
    },
    {
        "content": "<p>FHIR Patient.identifier is not an authentication mechanism. It is just an identifier. A system that mints an Open-ID-Connect authentication token when given simply a Patient identifier would be a horrible idea for real-patients, and a money-maker for the black-market. As Lloyd points out, this is about Identity assurance and authentication assurance. See NIST 800-63 for discussion. This is not special in healthcare, but is special in that failures expose data that is highly sensitive, can't be revoked and re-issued, and can be deadly for the patient, family, and care-givers. Healthcare must build upon general-IT, I fully support Open-ID-Connect. But the identity proofing and authentication strength are still the most important aspects.</p>",
        "id": 225540665,
        "sender_full_name": "John Moehrke",
        "timestamp": 1612789485
    },
    {
        "content": "<p>HIPAA covered entities create identifiers not random apps. They can produce a federated ID (trust relationship).</p>",
        "id": 225548671,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612793320
    },
    {
        "content": "<p>We do this today with X12, which results in an identifier being added.</p>",
        "id": 225548912,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612793439
    },
    {
        "content": "<p>but it is an identifier. it is not an authentication statement / assertion / token.   Creating identifiers is easy, and Patient.identifier can hold an infinite number of them.</p>",
        "id": 225549378,
        "sender_full_name": "John Moehrke",
        "timestamp": 1612793667
    },
    {
        "content": "<p>creating identifiers is an important component of the puzzle though!</p>",
        "id": 225549656,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612793784
    },
    {
        "content": "<p>getting people fhir endpoints to accept an open id is another. Payers can helps solve the identifiers issue already in a huge way.</p>",
        "id": 225549768,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612793830
    },
    {
        "content": "<p>I just went to <a href=\"https://www.guidgenerator.com/\">https://www.guidgenerator.com/</a> and created 10 identifiers that are globally unique... do you want 10 more?</p>\n<div class=\"codehilite\"><pre><span></span><code>aed3ca39-e92a-4c9e-8b37-124e4931f494\n0902ca41-cc3b-4910-810e-0af7b1cfa815\n145377eb-6176-4bf2-b6fe-988ef06d5fe4\nf56b8d3e-3e0c-4040-a0f5-6fbb28bc1d09\n26f0cbfd-73d2-4371-a1ca-90b1134daafd\n5e641e5f-2e38-43d6-a1dc-2f1519811ec4\n77b75216-a608-4302-94e1-7858fa3eaa37\n62037319-0434-4433-b941-c85e557d1571\n073d0880-030b-4cf1-a54a-de87ef349d57\n372ea8d7-0e32-4273-858b-f254d3014c11\n</code></pre></div>",
        "id": 225549787,
        "sender_full_name": "John Moehrke",
        "timestamp": 1612793835
    },
    {
        "content": "<p>The patient's connection is not used for B2B since the consumer will not be able to engage. The ID is proof on the requesting side and payer/provider apps enable meaningful use under HIPAA. The consumer's device can not directly exchange data for B2B. In cases where a patient requests data from another data producer we do not require them to login and the connection used between businesses does not require engagement.</p>",
        "id": 225550211,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612794013
    },
    {
        "content": "<p>If payers wanted to create an ID sharing network (via trust relationships) the network will grow exponentially.</p>",
        "id": 225551209,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612794486
    },
    {
        "content": "<p>The context of B2B provides the identity proofing and context of the meaning of the identity. This is quite common. There are plenty of models for cross-referencing one business identifier for a patient with another businesses identifier for the same patient. For example IHE has a family of these implementation guides that give the same use-cases and define how to manage patient identity cross-references when the technology layer is HL7 v2, HL7 v3, or HL7 FHIR; and companion implementation guides for query against demographics. <br>\nHere is the FHIR based Patient Master Identity Registry specification <a href=\"https://www.ihe.net/uploadedFiles/Documents/ITI/IHE_ITI_Suppl_PMIR.pdf\">https://www.ihe.net/uploadedFiles/Documents/ITI/IHE_ITI_Suppl_PMIR.pdf</a></p>",
        "id": 225552488,
        "sender_full_name": "John Moehrke",
        "timestamp": 1612795068
    },
    {
        "content": "<p>Here is the HIE-Whitepaper from IHE at the sub-section on Patient Identity management <a href=\"https://profiles.ihe.net/ITI/HIE-Whitepaper/index.html#5-patient-identity-management\">https://profiles.ihe.net/ITI/HIE-Whitepaper/index.html#5-patient-identity-management</a></p>",
        "id": 225552629,
        "sender_full_name": "John Moehrke",
        "timestamp": 1612795127
    },
    {
        "content": "<p>Great stuff <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> !</p>",
        "id": 225553103,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612795340
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"246928\">@Josh Lamb</span> Have you looked into what CARIN is doing in this area? If not, you should contact them to see what they are doing.</p>",
        "id": 225583270,
        "sender_full_name": "Debi Willis",
        "timestamp": 1612807279
    },
    {
        "content": "<p>Yes <span class=\"user-mention\" data-user-id=\"225094\">@Debi Willis</span>  thanks for calling out CARIN. I found an option for data exchanges and am not sure what other options people have found.</p>",
        "id": 225585856,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1612808424
    }
]