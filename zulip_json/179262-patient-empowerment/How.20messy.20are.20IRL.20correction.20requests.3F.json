[
    {
        "content": "<p>The massive \"awkward conversations\" thread has become an .... awkward conversation.  So I'm going to split out this IMPORTANT QUESTION that arose there and has become a blog post:</p>\n<p><span class=\"user-mention silent\" data-user-id=\"197491\">Dave deBronkart</span> <a href=\"#narrow/stream/179262-patient-empowerment/topic/Awkward.20Conversations.20with.20Task/near/223676119\">said</a>:</p>\n<blockquote>\n<p>Hey all - we've really grabbed the ball on this and started running with it , in a blog post.  Please share in your circles of people who have real-world experience on this: we created a blog post to crowdsource people's front-line experience - </p>\n<p><a href=\"https://confluence.hl7.org/pages/viewpage.action?pageId=97479664\">Is it easy or messy to negotiate fixes for medical record errors? Real-world experience needed.</a></p>\n</blockquote>\n<p><a href=\"/user_uploads/10155/eJxGSLRJS3K47MqLDZ_pcCpo/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/eJxGSLRJS3K47MqLDZ_pcCpo/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/eJxGSLRJS3K47MqLDZ_pcCpo/image.png\"></a></div><p>We REALLY REALLY want to be driven by reality, so this question is important. Please help us gather info from people who deal with this in their day job!</p>\n<p>AHIMA is circulating it. <span class=\"user-mention\" data-user-id=\"225094\">@Debi Willis</span> <span class=\"user-mention\" data-user-id=\"191531\">@Virginia Lorenzi</span> note that  <span class=\"user-mention\" data-user-id=\"370513\">@Jim StClair</span> responded in a reply on the post:</p>\n<blockquote>\n<p>would love to examine this further. I shared with the team at OMG BPM+Health as the BPM/automation aspect is a good fit. I'm also interested to explore the mobile UX and workflow. </p>\n</blockquote>\n<p>Hey <span class=\"user-mention\" data-user-id=\"370513\">@Jim StClair</span> you (and/or they) should join in on the <a href=\"https://confluence.hl7.org/display/PE/Patient+Corrections\">Patient Requests for Corrections IG project</a>, at <a href=\"https://confluence.hl7.org/display/PE/Pt+Empowerment+WG%27s+agenda+for+January+2021+HL7+Virtual+WGM\">this week's WGM</a> and/or going forward!</p>",
        "id": 223791856,
        "sender_full_name": "Dave deBronkart",
        "timestamp": 1611456858
    },
    {
        "content": "<p>The reality is that anything related to legislatively regulated requests will be messy. Real life example: after being rear-ended, my license plate was quite bent out of shape. I wanted to request a new set of license plates (and pay for it), but wanted to retain the existing license plate number - a random combination, but one that I was used to. Seems fairly straight forward, but the outcome was that I still have the original hammered out license plates.</p>\n<p>I see this as a distraction question - not because it is not important to facilitate the messy conversations that will accompany the request for corrections, but because trying to represent messy conversations in a complete, fully specified interoperability specification will take a long time. I think helping along the conversation is not the same as making that a core part of the first draft of the Patient Corrections IG.</p>",
        "id": 223794442,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1611461351
    },
    {
        "content": "<p>A fear I have is we will over design it with lots of resources and complex fields (coded inputs and outputs) - I am OK with the opportunity for complexity but want a low budget simple solution to start.</p>",
        "id": 223796339,
        "sender_full_name": "Virginia Lorenzi",
        "timestamp": 1611464640
    },
    {
        "content": "<p>Sorry to jump into the middle of a substantial conversation. </p>\n<p>I think you can break up the challenges around allowing patients to assist with medical data accuracy into a few steps (my guess below). </p>\n<ol>\n<li>patients need to see the data, so they can notice the errors</li>\n<li>when an error is noticed, patients need to know how to communicate the error</li>\n<li>providers need a way to receive the notification from patients</li>\n<li>providers need to communicate the update status to patients</li>\n<li>patients will need to verify the outcome (possibly negotiate with the provider and repeat the process)</li>\n</ol>\n<p>Technology may not be the correct solution for all of these steps, immediately at least. The process will also need to fit into the provider's workflow. This can be much different between hospital and office settings (and EHR used).</p>",
        "id": 223817174,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611499581
    },
    {
        "content": "<p>Thanks to all for their inputs.  I have zero opinion of what it should do - I just know two things:</p>\n<ol>\n<li>We (the public) NEED to enable app-automating the submission and tracking of error fixes.  We out here do not care how it gets done. It can be 99% manual OUTSIDE of the submission and tracking process. </li>\n<li>I want it to get adopted, so I want it to be worth the effort for system &amp; app vendors to do.</li>\n</ol>\n<p>Again, though non-technical, I'd again say I for one would be entirely okay with keeping our hands out of what happens outside the above.  </p>\n<p>We (as a society and as individuals) do need to ensure that a truthful record of the dialog exists and can be verified.</p>",
        "id": 223831083,
        "sender_full_name": "Dave deBronkart",
        "timestamp": 1611516966
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"246928\">@Josh Lamb</span> Jump right in the water is warm.  I think that the difference between office setting and hospital setting is important.  In a shared medical record where multiple clinicians are responsible for your chart which is very much true for the inpatient hospital setting a mediator often plays a role - example, Health Information Management aka Medical Records.  And the error could be an IT error or admitting error, etc.  And bad data can be  buried and repeated in past visits where the treating clinician is focused on documenting/currenting the current visit.</p>",
        "id": 223840752,
        "sender_full_name": "Virginia Lorenzi",
        "timestamp": 1611529187
    },
    {
        "content": "<p>How about we let patients comment against a fhir ID. Thiz would look like chat functionality and would rely upon free text, to keep things simple. The provider and patient can reply dialog directly against the data used to support decision making.</p>\n<p>This should be simple to implement if the provider and patient can see the same data.</p>",
        "id": 223842926,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611531856
    },
    {
        "content": "<p>Reading the other thread, a task sounds perfect to me. Just assign it to the data in question.</p>",
        "id": 223843029,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611532018
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"246928\">@Josh Lamb</span> so many threads and ideas out there, what were you referring too?</p>",
        "id": 223843826,
        "sender_full_name": "Virginia Lorenzi",
        "timestamp": 1611532918
    },
    {
        "content": "<p>Have no idea what \"comment against a FHIR id means\".  Please explain - thanks!</p>",
        "id": 223843895,
        "sender_full_name": "Virginia Lorenzi",
        "timestamp": 1611532971
    },
    {
        "content": "<p>When you are viewing data that needs corrected, the application showing the data will know the exact way to identify the data (so provider and patient are talking about same thing).</p>",
        "id": 223844007,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611533135
    },
    {
        "content": "<p>From a patient perspective they will see an error and send the provider a note about the error. The provider can reply directly against the data too.</p>",
        "id": 223844073,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611533234
    },
    {
        "content": "<p>The mechanism used to communicate a patient's comment can vary but <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> seemed to be discussing tasks for this, but maybe I misunderstood.</p>",
        "id": 223844170,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611533349
    },
    {
        "content": "<p>There's a lot of history here <span class=\"user-mention\" data-user-id=\"246928\">@Josh Lamb</span>  :-) Overall I think it's safe to say that the scope for an initial IG is allowing corrections <em>in general</em> rather than focusing on how to correct errors in a specific FHIR resources. (E.g., errors may span many resources, or may be about aspects of a record not captured in fhir at all). If you're brave and looking for diversion <span class=\"user-mention\" data-user-id=\"246928\">@Josh Lamb</span> you could probably spend a couple of hours scrolling backwards in this stream.</p>",
        "id": 223847353,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1611537908
    },
    {
        "content": "<p>A separate Task for each comment is certainly possible, but seems like overkill.  If it's not <em>asking</em> for something, it's not really a 'Task' and all of the notions of status, owner, etc. wouldn't make much sense.  If we're just looking for general comments, I think Task.comment is probably enough - it captures who, when and what was said.  Do we need more than that?</p>",
        "id": 223851126,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611543805
    },
    {
        "content": "<p>\"Lloyd McKenzie10:03 PM<br>\nA separate Task for each comment is certainly possible, but seems like overkill. If it's not asking for something, it's not really a 'Task' and all of the notions of status, owner, etc. wouldn't make much sense. If we're just looking for general comments, I think Task.comment is probably enough - it captures who, when and what was said. Do we need more than that?\"</p>\n<p>It seems like a logical and straightforward way to get something adopted sooner than later.  We can always add additional functionality in future releases.</p>",
        "id": 223852271,
        "sender_full_name": "Bart Carlson",
        "timestamp": 1611545568
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179262-patient-empowerment/topic/How.20messy.20are.20IRL.20correction.20requests.3F/near/223851126\">said</a>:</p>\n<blockquote>\n<p>If it's not <em>asking</em> for something, it's not really a 'Task' and all of the notions of status, owner, etc. wouldn't make much sense.</p>\n</blockquote>\n<p>So astute / sharp / perspective!  So glad to have you in these threads, <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> - the Patient Empowerment WG's first incursion into health data workflows and quality.</p>\n<p>I'll note, too, that the Patient Contributed Health Data project is another expression of \"The provider isn't the only source of clinically relevant information.\"</p>",
        "id": 223890938,
        "sender_full_name": "Dave deBronkart",
        "timestamp": 1611578522
    },
    {
        "content": "<p>Is the goal to build out a workflow that will allow providers and patients to collaborate on chart corrections? </p>\n<p>I agree that Task is too complex for phase one..do we have a phase one defined yet?? :-)</p>\n<p>The communication resource seems ideal. We can use the following fields to allow patients to comment on an FHIR resource:<br>\n<strong>subject</strong>: Focus of message--The patient or person who the data is about<br>\n<strong>basedOn</strong>: The data (diagnosis, procedure, lab result, etc) that the communication is about<br>\n<strong>status</strong>: This can be used to communicate if the communication request is open or not. <br>\n<strong>sender</strong>: Who sent the communication (can be patient, provider, etc)<br>\n<strong>payload</strong>: A communication can contain multiple payloads: <br>\n1.) can contain the suggested correction; <br>\n2.) can contain the free text message the patient/provider wanted to communicate</p>\n<p>Here is the FHIR definition of the communication resource: <br>\nThis resource is a record of a communication even if it is planned or has failed. A communication is a conveyance of information from one entity, a sender, to another entity, a receiver. The sender and receivers may be patients, practitioners, related persons, organizations, or devices. Communication use cases include:</p>\n<p>A reminder or alert delivered to a responsible provider<br>\nA recorded notification from the nurse to the on-call physician (or any other specified person) that a patient's temperature exceeds a value<br>\nA notification to a public health agency of a patient presenting with a communicable disease reportable to the public health agency<br>\nPatient educational material sent by a provider to a patient<br>\nUnable to deliver lab results to ordering physician</p>",
        "id": 223914624,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611589371
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"246928\">@Josh Lamb</span> please start by reading <a href=\"http://build.fhir.org/ig/HL7/fhir-patient-correction/index.html\">http://build.fhir.org/ig/HL7/fhir-patient-correction/index.html</a> -- the use cases and examples at least, to understand scope.</p>",
        "id": 223914861,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1611589459
    },
    {
        "content": "<p>Thx, not sure where to start digging in.</p>",
        "id": 223914954,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611589505
    },
    {
        "content": "<p>I love workflows btw, that is why I picked this topic. We can flow all of these use cases out and make sure the resource status and constraints take everything into account. I do not think this will have to be extremely complex.</p>",
        "id": 223915296,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611589635
    },
    {
        "content": "<p>I started by using Task, which is in the current IG, but people are saying it is too complex. I am not sure how much of this IG is up for debate. We can make task or communication work.</p>",
        "id": 223915554,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611589735
    },
    {
        "content": "<p>Communication doesn't give a good way of querying for 'current state' - it's really just taking emails to a provider and sending them over FHIR.</p>",
        "id": 223915806,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611589841
    },
    {
        "content": "<p>Patients can view that the correction has occurred by checking the source data again. Since the Patient Access API is the consumer-directed FHIR interface I am assuming the data originally was pulled from this API. </p>\n<p>Health insurance providers, labs, and hospitals will not have a mechanism to accept inbound communications from a consumer device. I am not sure how the corrections will physically make it to the data producers system.</p>",
        "id": 223919036,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611590901
    },
    {
        "content": "<p>Checking the source data isn't good enough.  Requesting a change kicks off a process that can take weeks - or months.  Patients want to have a sense of where their request is at even if the data isn't yet fixed.</p>",
        "id": 223919690,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611591166
    },
    {
        "content": "<p>Patients can already email their providers asking for a correction (or phone or send a letter).  The idea with the implementation guide is to come up with something that is better than that.</p>",
        "id": 223919835,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611591230
    },
    {
        "content": "<p>I will create a picture of the flow I am imagining. It is more than just email.</p>",
        "id": 223920063,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611591317
    },
    {
        "content": "<p>here is a rough outline of the flow I am imagining: <br>\n<a href=\"/user_uploads/10155/cvggqmQ8wnTTaE6POXEssw_1/Blank-diagram-1.png\">Blank-diagram-1.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/cvggqmQ8wnTTaE6POXEssw_1/Blank-diagram-1.png\" title=\"Blank-diagram-1.png\"><img src=\"/user_uploads/10155/cvggqmQ8wnTTaE6POXEssw_1/Blank-diagram-1.png\"></a></div>",
        "id": 223930415,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611595189
    },
    {
        "content": "<p>That looks pretty much like \"send an email, get an email back\".  How do you check for status?  How do you update the request?  How do you capture supplemental data for the request and adjust it?</p>",
        "id": 223930841,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611595352
    },
    {
        "content": "<p>POLLing (know its not great).</p>",
        "id": 223932794,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611596191
    },
    {
        "content": "<p>As an implementer, there will not be a single workflow that will support all data correction use cases. I can only see a highly generic implementation working, unless we get into fine-grained use cases (like here is an IG to update smoking status).</p>",
        "id": 223932930,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611596260
    },
    {
        "content": "<p>Letting patients comment directly against data via basic chat functionality is something. Maybe we can get more but as an implementer, I would struggle to support a large number of complex use cases initially.</p>",
        "id": 223933195,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611596398
    },
    {
        "content": "<p>Do we have providers/clinicians who can help provide feedback on the workflows they prefer? I know <span class=\"user-mention\" data-user-id=\"191531\">@Virginia Lorenzi</span>  shared a lot of great insights in another thread.</p>",
        "id": 223933755,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611596647
    },
    {
        "content": "<p>But what would you poll on?  If you're just using Communication, there's nothing that gets updated.  There's no resource that would represent the 'status' of the request.</p>",
        "id": 223933879,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611596706
    },
    {
        "content": "<p>(Note that polling or subscriptions would be used with Task - but with Task there's something that will be updated that you can query to see current state.)</p>",
        "id": 223933939,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611596736
    },
    {
        "content": "<p>I put Task in the diagram. I liked your idea earlier about adding messages to a task and the task has better status (and is pretty extensible).</p>",
        "id": 223936165,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611597711
    },
    {
        "content": "<p>the consumer app would poll based upon task id. or they would poll (if they lost the id) by status (and subject). </p>\n<p>Data producers would have to poll by status (and use it as a work queue).</p>",
        "id": 223936330,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611597787
    },
    {
        "content": "<p>Ok, so you're just talking about using Communication for the \"emails about\" bit, not for the base \"request to please change\"?</p>",
        "id": 223936466,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611597848
    },
    {
        "content": "<p>Yes, i am imagining that communication requests would carry the message, the task would carry the intent.</p>",
        "id": 223936589,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611597911
    },
    {
        "content": "<p>I don't understand.  There's zero value in wrapping a Task in Communication.  If you want to create a Task, just post the Task.  Communication is NOT a substitute for FHIR messaging.</p>",
        "id": 223937243,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611598218
    },
    {
        "content": "<p>Trying to use task for this, as per the decisions already made within this group, as i see in teh IG. </p>\n<p>Task can meet this need : \"Another example would be a Task that requests fulfillment of a CommunicationRequest to be performed between various actors.\"</p>",
        "id": 223946132,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611602312
    },
    {
        "content": "<p>I do not have a strong opinion on the FHIR resources used, but the options seem limited to communication requests/responses within a task. What other option do you have? I do not think that Payers and providers will universally begin accepting FHIR messaging communications. We have a patient access API, and we will have to modify it to accept inbound communications at some point anyway. </p>\n<p><a href=\"/user_uploads/10155/2TpiYwJYcfmBUhrszR7NNg9o/Patient-Corrections.png\">Patient-Corrections.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/2TpiYwJYcfmBUhrszR7NNg9o/Patient-Corrections.png\" title=\"Patient-Corrections.png\"><img src=\"/user_uploads/10155/2TpiYwJYcfmBUhrszR7NNg9o/Patient-Corrections.png\"></a></div>",
        "id": 223946413,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611602435
    },
    {
        "content": "<p>My leaning is, in the short term, to support Task only.  Any back-and-forth communication is done just using Task.note.  If, in the future, we want to support a \"secure email equivalent\" that could point to Task (or other things), that could certainly be built on top if it were deemed useful.</p>",
        "id": 223949237,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611603667
    },
    {
        "content": "<p>I like that, in general, if you suggest anything simpler than I suggest I will be in favor (as long as it's not throwaway).</p>",
        "id": 223949685,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611603882
    },
    {
        "content": "<p>I support that and note has author and timestamp.  But <span class=\"user-mention\" data-user-id=\"192825\">@Jeffrey Danford</span> had some reservations.  Also would like <span class=\"user-mention\" data-user-id=\"192685\">@Vassil Peytchev</span>  opinion. Do not want to lose the dream on secure chat  via FHIR which I think that Communication resource could help with but according to <span class=\"user-mention\" data-user-id=\"192685\">@Vassil Peytchev</span> the world is not ready?  <span class=\"user-mention\" data-user-id=\"225094\">@Debi Willis</span></p>",
        "id": 223961856,
        "sender_full_name": "Virginia Lorenzi",
        "timestamp": 1611609602
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179262-patient-empowerment/topic/How.20messy.20are.20IRL.20correction.20requests.3F/near/223930841\">said</a>:</p>\n<blockquote>\n<p>That looks pretty much like \"send an email, get an email back\".  How do you check for status?  </p>\n</blockquote>\n<p>Communication has a status:     preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown<br>\nCouldn't we use that for a patient to check the status?<br>\n<span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <span class=\"user-mention\" data-user-id=\"192685\">@Vassil Peytchev</span> <span class=\"user-mention\" data-user-id=\"192825\">@Jeffrey Danford</span> <span class=\"user-mention\" data-user-id=\"246928\">@Josh Lamb</span> <span class=\"user-mention\" data-user-id=\"191531\">@Virginia Lorenzi</span> <span class=\"user-mention\" data-user-id=\"197491\">@Dave deBronkart</span></p>",
        "id": 223963880,
        "sender_full_name": "Debi Willis",
        "timestamp": 1611610507
    },
    {
        "content": "<p>The communication statuses imply a workflow sequence. We will need to define our own statues sequence and limit the available options to the list of values we use in our workflow. We may want to remove some of teh options that are not final. For example, all of the following statues indicate some flavor of \"not-complete\": preparation | in-progress | not-done | on-hold | stopped | unknown</p>\n<p>Here is a technical suggestion to perform the searches: <br>\nTo Get data for all patients, if the status is 'not-done'<br>\nGET [base]/Communication?recipient=Provider/123&amp;Status='not-done' (or the desired status)</p>\n<p>To Get data for one patient, if the status is 'not-done'<br>\nGET [base]/Communication?subject=Patient/456789&amp;Status='not-done' (or the desired status)</p>\n<p>A patient can get the status by: <br>\nGET [base]/Communication?subject=Patient/456789&amp;Status='not-done' (or the desired status)</p>\n<p>Everyone can get a Communication by:<br>\nGET [base]/Communication/123</p>",
        "id": 223970135,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611612890
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"246928\">@Josh Lamb</span>  I was responding to <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> question about \"How do you check for status?\" when using communication.  Communication has a status.</p>",
        "id": 223971359,
        "sender_full_name": "Debi Willis",
        "timestamp": 1611613372
    },
    {
        "content": "<p>Thanks, and sorry. I am not sure why I wrote the examples using tasks. Updated them above.</p>",
        "id": 223972159,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611613834
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179262-patient-empowerment/topic/How.20messy.20are.20IRL.20correction.20requests.3F/near/223949237\">said</a>:</p>\n<blockquote>\n<p>My leaning is, in the short term, to support Task only.  Any back-and-forth communication is done just using Task.note.  If, in the future, we want to support a \"secure email equivalent\" that could point to Task (or other things), that could certainly be built on top if it were deemed useful.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> Do you have any concern that if both the patient and the covered entity are writing to task.note that a sloppy consumer app might accidently overwrite task.note and the current \"version\" of the task will not contain all the information...causing both the provider and patient app to have to look through the history of all previous versions of the task to make sure nothing was lost? This was an issue what was brought up in the connectathon.  This is the concern with both parties updating a single task. Both have \"write\" rights and can write over each other accidentally. <br>\n<span class=\"user-mention\" data-user-id=\"192825\">@Jeffrey Danford</span>  <span class=\"user-mention\" data-user-id=\"192205\">@Lisa Nelson</span> <span class=\"user-mention\" data-user-id=\"191531\">@Virginia Lorenzi</span></p>",
        "id": 223980241,
        "sender_full_name": "Debi Willis",
        "timestamp": 1611619179
    },
    {
        "content": "<p>Communication.status reflects the status of \"was this information delivered\" - it has nothing to do with \"is what I asked for done?\" because Communication doesn't reflect the act of asking for anything, it only reflects the act of sharing the specific content specified with the end recipient.</p>",
        "id": 223997568,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611637109
    },
    {
        "content": "<p>I have zero concerns about accidental overwrite - because you can guarantee that the system performing the update has the current record before they're allowed to make a change.  It's certainly possible for them to deliberately delete data, but our specification can (and should) set expectations about the server prohibiting changes that we deem improper.  (We'll have to explore what happens if a note is submitted that legitimately does need to be deleted - e.g. because someone said something inappropriate or disclosed data that shouldn't have been shared - though that will require a deeper cleaning than a mere update because the data might still be accessible through history.)</p>",
        "id": 223997683,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611637268
    },
    {
        "content": "<p>The status has to mean more than a boolean delivered or not delivered or I cannot see why there are 8 different statuses.</p>",
        "id": 224001784,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611642543
    },
    {
        "content": "<p>If it is not delivered, how will we even see it? We are not using messaging.</p>",
        "id": 224001860,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611642632
    },
    {
        "content": "<p>Status is always complete makes sense to indicate delivered.</p>",
        "id": 224001928,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611642722
    },
    {
        "content": "<p>Communication is used to log the exchange of data.  If you've mailed a letter, you know that communication has been started, but you don't know yet that it's been received.  Communication can also be an ongoing process - e.g. \"Share the the patients vital signs with organization X for the duration of the encounter\".  I agree that for many uses, Communication.status will be only 'completed'.  The other statuses are there for those situations when they make sense.  But the statuses reflect the status of the <em>communication</em>, not anything else.</p>",
        "id": 224048095,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611672144
    },
    {
        "content": "<p>(If you want to submit a change request suggesting that an implementation note be added expanding on the use-cases for the statuses, that's not a bad idea.)</p>",
        "id": 224048162,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611672176
    },
    {
        "content": "<p>Can I help organize or put a flow around anything? I am not clear on what direction the group is leaning.</p>",
        "id": 224072827,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611681906
    },
    {
        "content": "<p>This is the first IG for this group, we can make it successful if it meets the patients needs, is extensible, and is easy to implement.</p>",
        "id": 224072996,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611681969
    },
    {
        "content": "<p>Also, these text discussions are great, but I should probably shy away till I get into the workgroups.</p>",
        "id": 224073137,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1611682034
    },
    {
        "content": "<p>Our first meeting is this evening at 6 PM ET. Please join us.</p>",
        "id": 224096638,
        "sender_full_name": "Debi Willis",
        "timestamp": 1611692239
    },
    {
        "content": "<p>Catching up on some backlog.  </p>\n<p>My general $0.02 from the provider side on fielding these requests and being responsible for making the correction, is that the overall conversation is under-appreciating the role that the PDF document server has (and by extension, DocumentReference).  When we talk about the healthcare industry propping up the FAX industry, keep in mind that a FAX can be hooked up to a PDF printer.  So FAX messages can be routed directly to the PDF server.  Anything paper or FAX related is effectively managed by a DocumentReference ID, and that includes any workflow that can be expressed as a series of pages of paper.  So a Morgan Gleason letter.  A medical malpractice subpoena.  An IRB investigation.  Or a verbal phonecall that is written down on a notepad.  All can be expressed and tracked via a PDF document server.  Workflow sucks and people complain about click count because it's not optimized for their particular workflow, but most any employee can learn it with training and willingness to click through a bunch of menus and link the appropriate documents together.  </p>\n<p>Generally speaking, errors occur in a power law distribution.  Meaning that there are some types of errors, such as left/right errors and wrong-patient errors, that are orders of magnitude more common than other errors.   Administrative errors such as dictating on the wrong patient can often be resolved by a manager without needing clinician co-signature.  Upcoding is a bit more complicated, and depends on whether it was billing or clinical who did the upcoding on whether the manager can correct.  An error that's truly clinical (including left/right) gets complicated, because then it's no longer an issue of the patient's record, but of the practitioner's reputation and license at stake.  So there has to be clinician sign-off on the correction.</p>\n<p>In practice, the requests for error corrections come in all forms.  Post-it note is extremely common format within a department, especially among the help desks before/after they get converted into the ticket management system.  Fax, emails, and certified mail are preferred and generally the official ways to communicate with a department.  In person verbal complaints and phone calls also generally have to be supported (although its common for some workers to want as little to do with patients as possible, and they hide/sequester themselves).   Sometimes the patients drop off the incorrect errors, and will deliver a CD or thumbdrive with the incorrect data or corrected data or a second opinion.  Obviously, it becomes extra difficult when the patient speaks a foreign language (I've had to field requests in sign language, yiddish, spanish, and other languages.).  Interdepartmental correction requests obviously have an extra layer of difficulty, when data is stored in an ancillary system that medical records doesn't have control of.  That's when a manager or patient advocate is needed to follow up on the case; more so if it's inter-hospital or is historical (greater than 90 days, 1 year, 7 years, 17 years).  </p>\n<p>What the Task resource is really trying to do (imho), is replace/standardize the ticket management systems, not the EHR.</p>",
        "id": 225942362,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1613011347
    },
    {
        "content": "<p>I love that analogy.  I completely agree that Task is essentially a FHIR interface over a ticket management system.  It gives an ability to submit the ticket, add comments to it and monitor its progress.  The question of whether to handle submission by phone, email,  \"FHIR email\" (aka Communication), or \"FHIR Fax\" (aka DocumentReference) vs. Task really boils down to whether we're just trying to provide a mechanism to automate initial delivery of the raw data for the request that someone will later key into a 'private' ticket management system, or whether provider organizations are willing to open the interface to the ticket management to allow a patient to fill it out directly and monitor the ticket as it flows through the system.  (Thereby significantly reducing the various phone calls, emails, etc. from patient's wanting to know the 'status' of their request, as well as eliminating all of the re-keying of the requests themselves and many of the subsequent back-and-forth communications.)</p>\n<p>When an organization opens up their ticket management system to allow direct submission of tickets from \"customers\", there's a trade-off.  Trained help-desk personnel typically know how to fill out tickets better than customers do and can also solicit information they know will be needed downstream, while the clients might not provide it initially.  And there's still a help-desk function of performing initial triage.  However, if the client-facing ticket interface is well designed, switching to a client-facing model can save resources and also significantly improve satisfaction (provided that insight into why a ticket is stalled results in insight/acceptance rather than frustration).</p>",
        "id": 225945906,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613015534
    },
    {
        "content": "<p>I don't disagree. The Task as we are describing it is just an interface. I however think that we are over-engineering it to the point that our solution will be seen as overly complex and requiring too many internal process changes. I simply favor an approach where we start with something minimally viable and work toward Task in future generations.</p>",
        "id": 225990659,
        "sender_full_name": "John Moehrke",
        "timestamp": 1613050800
    },
    {
        "content": "<p>Minimally viable is \"phone your provider\".   There are three possible objectives for our initiative:</p>\n<ol>\n<li>Standardized 'entry point' to kick off the process (so an app can do the kick-off regardless of system, provided it knows the base URL for that system)</li>\n<li>Support the flow of back-and-forth communication that tends to occur as a result of the request in a 'secure' way.  (This could be just providing secure communication in general.)</li>\n<li>Allow patients to monitor the progress of their request and make certain updates to the request as it progresses</li>\n</ol>\n<p>I had understood #3 as being a priority and also in-reach.  If that's not true, then Task is not necessary.</p>",
        "id": 226006286,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613056957
    },
    {
        "content": "<p>There's a subset of (3) that I think is useful and practical: monitor whether the request has been completed (and when). This allows patients to know when deadlines aren't being met and escalate out of band, even if there's no in-band mechanism to \"make certain updates\".</p>",
        "id": 226017778,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1613060830
    },
    {
        "content": "<p>Does the task need to account for #3? It can be an independent view of the source data instead (using existing API). Or am I missing something?</p>",
        "id": 226055999,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1613076877
    },
    {
        "content": "<p>Task gives the mechanism to expose the status over FHIR.</p>",
        "id": 226057605,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613077592
    },
    {
        "content": "<p>got it, just the status</p>",
        "id": 226057854,
        "sender_full_name": "Josh Lamb",
        "timestamp": 1613077694
    },
    {
        "content": "<p>Well, it'll expose a lot of other things too. but it's one of the few mechanisms that allows you to query for status.</p>",
        "id": 226058032,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613077775
    },
    {
        "content": "<p>Please remember to submit your ideas onto the google doc that will be used in our meeting to discuss pros/cons of the different options. Please refrain from correcting ideas that someone else had. Just add your pros/cons to the list if you don't see it already addressed by someone else. We will use this as a base to narrow down the choices as we move forward.  Here is the link to the doc: <a href=\"https://docs.google.com/document/d/1Q_Vln_Vb21JVu1rPgwPZ68_IyTlktuuSGGJLm9kGSY4/edit?pli=1\">https://docs.google.com/document/d/1Q_Vln_Vb21JVu1rPgwPZ68_IyTlktuuSGGJLm9kGSY4/edit?pli=1#</a></p>",
        "id": 226062378,
        "sender_full_name": "Debi Willis",
        "timestamp": 1613079895
    },
    {
        "content": "<p>I don't see people answering the Doodle poll for when the next meeting will be: <a href=\"https://doodle.com/poll/w8m8akcxg46vg887?utm_source=poll&amp;utm_medium=link\">https://doodle.com/poll/w8m8akcxg46vg887?utm_source=poll&amp;utm_medium=link</a></p>",
        "id": 226062701,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1613080071
    },
    {
        "content": "<p>first I am seeing the doodle poll</p>",
        "id": 226063754,
        "sender_full_name": "John Moehrke",
        "timestamp": 1613080631
    },
    {
        "content": "<p>next week is the IHE meeting. I can't make either of the two times offered</p>",
        "id": 226063957,
        "sender_full_name": "John Moehrke",
        "timestamp": 1613080702
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179262-patient-empowerment/topic/How.20messy.20are.20IRL.20correction.20requests.3F/near/226006286\">said</a>:</p>\n<blockquote>\n<p>I had understood #3 as being a priority and also in-reach.  If that's not true, then Task is not necessary.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  I don't think we ever stated that allowing a patient to monitor the progress of their request was a priority. A bi-directional conversation was/is definitely a priority. Using Task to enable the bi-directional conversation gives us the additional benefit of providing the task status, but it was/is not a priority.  Task does give us some nice things. But the ability to give the patient a status is not a requirement. I am also not saying that scratches Task off the list. I am just clarifying an assumption, moving your #3 from \"must have\" to \"nice to have\" is important in the discussion. </p>\n<p>Lloyd, you shared something really important in the Patient Empowerment Workgroup meeting today: Looking at all the pros and cons of the different options against what our priorities are, and the feasibility of implementing each resource option will help identify the most appropriate choice. I added \"Scope\" and \"Feasibility\" to the the top of the google doc so others can add comments. </p>\n<p><span class=\"user-mention\" data-user-id=\"192825\">@Jeffrey Danford</span> <span class=\"user-mention\" data-user-id=\"192685\">@Vassil Peytchev</span> <span class=\"user-mention\" data-user-id=\"191357\">@Drew Torres</span>  <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span>  Getting feedback from the EHR vendors, especially in the \"Feasibility\" section is critical. Please share your thoughts here: <a href=\"https://docs.google.com/document/d/1Q_Vln_Vb21JVu1rPgwPZ68_IyTlktuuSGGJLm9kGSY4/edit?pli=1\">https://docs.google.com/document/d/1Q_Vln_Vb21JVu1rPgwPZ68_IyTlktuuSGGJLm9kGSY4/edit?pli=1#</a></p>",
        "id": 226065239,
        "sender_full_name": "Debi Willis",
        "timestamp": 1613081311
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"192685\">Vassil Peytchev</span> <a href=\"#narrow/stream/179262-patient-empowerment/topic/How.20messy.20are.20IRL.20correction.20requests.3F/near/226062701\">said</a>:</p>\n<blockquote>\n<p>I don't see people answering the Doodle poll for when the next meeting will be: <a href=\"https://doodle.com/poll/w8m8akcxg46vg887?utm_source=poll&amp;utm_medium=link\">https://doodle.com/poll/w8m8akcxg46vg887?utm_source=poll&amp;utm_medium=link</a></p>\n</blockquote>\n<p>Thanks for the reminder to everyone! This next meeting will be really important because we will be working through the pros/cons of the googledoc: <a href=\"https://docs.google.com/document/d/1Q_Vln_Vb21JVu1rPgwPZ68_IyTlktuuSGGJLm9kGSY4/edit?pli=1\">https://docs.google.com/document/d/1Q_Vln_Vb21JVu1rPgwPZ68_IyTlktuuSGGJLm9kGSY4/edit?pli=1</a></p>",
        "id": 226065682,
        "sender_full_name": "Debi Willis",
        "timestamp": 1613081571
    },
    {
        "content": "<blockquote>\n<p>I don't think we ever stated that allowing a patient to monitor the progress of their request was a priority. A bi-directional conversation was/is definitely a priority. Using Task to enable the bi-directional conversation gives us the additional benefit of providing the task status, but it was/is not a priority.</p>\n</blockquote>\n<p>If you want the ability to formally describe, distinguish and act upon the different outcomes of a request for corrections, you are stating that monitoring the progress of the correction request is the highest priority. If that is not the case, then this effort becomes to define a general solution for patient-provider communications in FHIR - which is very valuable and important, but a very different type of effort.</p>",
        "id": 226066771,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1613082072
    },
    {
        "content": "<p>If you think of the way it is done now with letters, faxes, and phone calls...there is no monitoring of the progress of the request. The most important aspect of this process is the conversation...the ability for each party to understand each other and share important information (which may take multiple threads). When it was recommended we try Task, we had the added bonus of monitoring a request. But, monitoring the progress was not the real focus. And with task, we really don't have an accurate view of the status of the request because we will likely have multiple changes requested by the patient but only one task status. </p>\n<p>When looking at what we are trying to accomplish, we should not elevate the ability to monitor the task over the ability to have a secure conversation and sharing of files, images, etc. If we had to \"score\" the different resources to determine which is best, the criteria (in order of importance) would be: 1) bi-directional communication 2) sharing of files 3) monitoring task progress (optional).  If you review the HIPAA guidelines (which is what the clinics must follow), there is no requirement for the patient to be able to monitor the task progress within the clinic but there are many pieces of information that are required to be communicated to the patient throughout the process. We are trying to build a secure FHIR-based model to duplicate the HIPAA implementation specification.  It think somewhere along the road the monitoring of the task became a \"must\" when it never should have been interpreted that way.</p>",
        "id": 226200800,
        "sender_full_name": "Debi Willis",
        "timestamp": 1613166679
    },
    {
        "content": "<p>I think I am not explaining this clearly - \"monitoring of the progress\" doesn't mean a view into the internal process of handling the request. </p>\n<p>What I am trying to explain is that the ability to describe, distinguish, and act upon the different outcomes of a request (i.e. approved, denied, partially approved) is what I mean by \"monitoring of the progress\". Just that one thing - using FHIR to submit a request for corrections, and to understand that at some specific point (after possibly many other interactions between the patient and the responsible entity) the request has been approved, partially approved, or denied.</p>\n<p>Is the above considered optional?</p>",
        "id": 226203285,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1613168041
    },
    {
        "content": "<p>Put another way, are we comfortable with passing arbitrary blobs of text back and forth with no 'discrete' elements to support automation.  I.e. you can type whatever you like whenever you like, no constraints based on where you're at in the 'lifecycle' of the request.  Essentially, just a FHIR interface for arbitrary email.</p>",
        "id": 226204825,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613168851
    },
    {
        "content": "<p>Yes, monitoring the request is not a view into the internal process of handling the request. That is outside of our scope (as it should be). But, if the ability to monitor the task is thought to be that important, the problem that several requests could be included within a single task and may have different outcomes is not solved with task. In cases like this (which may be most cases), the benefit of the task status is diminished because it cannot accurately describe all the outcomes of the requests. </p>\n<p>My understanding is there is the ability to have discrete elements in Communication with payload. Is that an accurate understanding?  </p>\n<p>There is also a status with Communication (preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown) that is being overlooked in the Zulip conversation. </p>\n<p>The request for corrections could be coded to distinguish it from other communications coming in. Just like in the Epic portal. The user is allowed to pick a topic. </p>\n<p>The consumer app would be able to link the specific conversation IDs together in the UI. They would not be arbitrary blobs of text. </p>\n<p>Again, I am not saying we need to throw out Task as an option. I am simply bringing the focus back to the most important needs.</p>",
        "id": 226209995,
        "sender_full_name": "Debi Willis",
        "timestamp": 1613172077
    },
    {
        "content": "<p>Not really, no.  Communication allows you to say \"send this lab report, this consult note and these vitals\", but it's all just \"send stuff\".  There's no ability to assign distinct meaning to any content other than what's already intrinsic to the content.  You can't send 3 lab reports and computably designate one of them as \"baseline\" and the other two as \"for comparison\".  (Though you could send a text note that said \"I'm sending you a baseline and 2 others for comparison\" and a human would presumably be able to figure out which was which based on dates.)</p>\n<p>So, in our use-case, you can't have separate elements called \"reason for change\" or \"details of change\" or \"notice of disagreement\" - unless you decided to transmit a resource that captured that content as discrete - which may tie into <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>'s proposal to use QuestionnaireResponse.  You could attach a single QuestionnaireResponse to a Communication and have discrete data within that.</p>",
        "id": 226210717,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613172619
    },
    {
        "content": "<p>yes</p>",
        "id": 226210881,
        "sender_full_name": "John Moehrke",
        "timestamp": 1613172739
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> . I would like to understand this better. Can you compare what is possible to send in Task.input to what is possible to send in Communication.payload?  Could we send a CCD or image via Task.input and via communciation.payload? What is possible to send in Task.input that is not possible to send in communication. payload?</p>\n<p>Can you give examples of when the different communication statuses might be used? (preparation | in-progress | not-done | on-hold | stopped | completed | entered-in-error | unknown)</p>",
        "id": 226250786,
        "sender_full_name": "Debi Willis",
        "timestamp": 1613231000
    },
    {
        "content": "<p>Task.input is a name/value pair.  You specify a code that indicates the meaning of the input, an then specify the value of the input (which could be anything at all).  With Communication, you can send send strings, attachments or references to resources, and you can't \"name\" them with a code.  So all content sent is undifferentiated except by data type.  (It's not allowed to assign meaning to the order in which the payload repetitions appear.)  You can certainly send a CCD or image either way, but only with Task can you computably say what's to be done with it.  Task also lets you send codes, integers, dates, ranges - any data type you wish.  As an example, Task would let you communicate a date that a change needs to be applied by as a discrete computable element (that might drive prioritization within the target health system).  With Communication, the date would need to be part of the body of string or PDF (or maybe in a QuestionnaireResponse, assuming the receiver knows how to do something computable with that).</p>\n<p>The gist of Task is \"please do\".  The gist of Communication is \"for your reading pleasure\".<br>\n<strong>preparation</strong>: I'm getting ready to share this information with recipients<br>\n<strong>in-progress</strong>: I'm the process of sharing information with recipients (we'd probably make this a fixed value if we use Communication)<br>\n<strong>not-done</strong>: I chose not to share this information with the specified recipients<br>\n<strong>on-hold</strong>: I started to share this information with recipients, but have temporarily quit<br>\n<strong>stopped</strong>: I started to share this information with recipients, but have permanently quit<br>\n<strong>completed</strong>: The specified information has been delivered to the specified recipients.  In theory, the recipient could update the Communication received to 'completed' to say that it had actually been read by all recipients.  Completed has nothing to do with any action other than \"we read what was sent\".  Completed would also be the status of any Communications recorded retrospectively (notes about phone calls, faxes, external emails) that should be part of the record.<br>\n<strong>entered-in-error</strong>: This instance describes something that never happened, but someone may have acted on the belief that it did<br>\n<strong>unknown</strong>: My system has no idea whether the communication happened or not - primarily for exposing legacy data</p>",
        "id": 226251951,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613232131
    },
    {
        "content": "<p>In short, most of the statuses on Communication are unlikely to be relevant to our use-case.</p>",
        "id": 226252028,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613232167
    },
    {
        "content": "<blockquote>\n<p>The request for corrections could be coded to distinguish it from other communications coming in. Just like in the Epic portal. The user is allowed to pick a topic.</p>\n</blockquote>\n<p>I think there may be a confusion between what the patient-facing user interface is, vs. what the FHIR interface to the responsible entity is. Of course, for the patient it makes most sense if the user interface is familiar, as in any other patient-provider communications. This has very little to do with the shape of the FHIR interface exposed by the EHR. In the Epic patient portal example, the patient messages end up in many different places in the EHR,  based on the topic/purpose of the message. None of them are currently exposed as Communication resources.</p>",
        "id": 226254502,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1613234883
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192685\">@Vassil Peytchev</span> How are they currently exposed (if exposed at all)?</p>",
        "id": 226257119,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1613237827
    },
    {
        "content": "<p>Patient/provider messages are not exposed as FHIR resources. The outcome of certain types (e.g. a MedicationRequest for refill requests) would be exposed.</p>",
        "id": 226272534,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1613255369
    },
    {
        "content": "<p>Would it be possible to create illustrative mockups of each scenario being described prior to our next meeting?  I'm thinking the old adage \"a picture is worth a thousand words\" might help all of us better understand all the options.</p>",
        "id": 226277070,
        "sender_full_name": "Bart Carlson",
        "timestamp": 1613262386
    },
    {
        "content": "<p>Thats a good idea Bart.  It might be good to reduce the options somewhat first because there seems to be redundancy.</p>",
        "id": 227889904,
        "sender_full_name": "Virginia Lorenzi",
        "timestamp": 1614322908
    }
]