[
    {
        "content": "<p>Some nitpicky questions for task masters:<br>\n1)  Task.intent and Task.status are both mandatory - should they be Must Support as well?<br>\n2)  We decided to use an R4 markdown type extension on Description - where is that extension exactly?<br>\n3)  One of the reviewers of our spreadsheet asked: do Task.for and Task.requester have to actually be resources or could they be display strings? <br>\n4)  Task.authoredOn is set to Must Support and 1..1  - does it need to be 1..1 or is 0..1 OK?  All the other dates have Must Support and 0..1</p>\n<p><span class=\"user-mention\" data-user-id=\"251396\">@John Keyes</span> FYI</p>",
        "id": 219693019,
        "sender_full_name": "Virginia Lorenzi",
        "timestamp": 1607753738
    },
    {
        "content": "<ol>\n<li>\n<p>mustSupport lets you define what the expectations for 'support' are.  E.g. \"Must display\", \"must allow the user to capture\", \"must store\", etc.  I'd certainly expect Task.status to be displayed, stored and captured.  I'm not sure that the same is true of Task.intent.  The latter would quite possibly be implicit and not exposed to the user.</p>\n</li>\n<li>\n<p>I'd posted it in the chat during our call.  <a href=\"http://hl7.org/fhir/StructureDefinition/rendering-markdown\">http://hl7.org/fhir/StructureDefinition/rendering-markdown</a></p>\n</li>\n<li>\n<p>If we don't constrain, any reference could potentially just be Reference.display or even Reference.extension.  However, I think we'd certainly want at least Task.for to be properly populated with a proper reference.</p>\n</li>\n<li>\n<p>If we want to track the timelines associated with regulation, we need to know when the counter starts.  I think that's the argument for 1..1</p>\n</li>\n</ol>",
        "id": 219712607,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607785670
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  we were looking at the task statuses again and received status definition sounds better than requested to indicate that provider org has assumed responsibility and is reviewing the request.  You had suggested we don't use received.</p>",
        "id": 219755677,
        "sender_full_name": "Virginia Lorenzi",
        "timestamp": 1607855583
    },
    {
        "content": "<p>Received is used when someone wants to claim ownership of an unassigned Task to keep someone else from claiming it while they evaluate whether they can do it or not.  That's not really what we're talking about in our use-case.</p>",
        "id": 219764503,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607870735
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  I think the purpose of that status (for us) is to indicate that someone at the clinic has claimed the task and is going to review the record and get back to the patient with the status of whether or not they will accept or reject the requested change, or whether they need more time. We want to let the patient know that someone has received their request (instead of it sitting in a dark bottomless pit somewhere). The definition of received is listed as \"A potential performer has claimed ownership of the task and is evaluating whether to perform it.\" It seems that \"Received\" fits what we need... to let the patient know someone has picked up the task.\" Thoughts?<br>\n<span class=\"user-mention\" data-user-id=\"191531\">@Virginia Lorenzi</span></p>",
        "id": 219781002,
        "sender_full_name": "Debi Willis",
        "timestamp": 1607893142
    },
    {
        "content": "<p>Yes Lloyd what you described sounds like a valid status.  I imagine a queue of things not being looked at and then finally it is looked at and assigned out for review or review is done by that person.  The queue is not a technical under the covers queue but an inbound worklist.</p>",
        "id": 219785827,
        "sender_full_name": "Virginia Lorenzi",
        "timestamp": 1607899492
    },
    {
        "content": "<p>In our case, the Task is already assigned, so there's no real need to 'claim' it - it's already owned.</p>",
        "id": 219790245,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607906231
    },
    {
        "content": "<p>by who?  Please explain more of the examples you see receive applying to I guess.</p>",
        "id": 219791833,
        "sender_full_name": "Virginia Lorenzi",
        "timestamp": 1607908955
    },
    {
        "content": "<p>If I post a Task seeking fulfillment of a referral for a cardiologist - but no specific owner is assigned, various cardiology clinics could subscribe and one could 'claim' it while they evaluated it against their business rules to decide if they would accept it.  Or fulfillment might be sought to fill a drug order but you don't know what pharmacy the patient is going to.  When the patient calls the pharmacy, they'd 'claim' the Task, but wouldn't necessarily agree to fill it until the pharmacist had reviewed it.</p>",
        "id": 219794523,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607913574
    },
    {
        "content": "<p>request for correction comes into medical records department.  There is a single queue and system or human chooses who to assign the task to for the review work or someone elects to claim it.  I believe that happens but I will double check.  Even if its sitting in the inbox - they have it but noone has even started looking at it, it seems like its in limbo and needs to get to \"in review\" state.  I guess that could be represented by businessStatus = In Review <span class=\"user-mention\" data-user-id=\"225094\">@Debi Willis</span></p>",
        "id": 219808161,
        "sender_full_name": "Virginia Lorenzi",
        "timestamp": 1607931697
    },
    {
        "content": "<p>The initial state would be 'requested'.  It would then transition to accepted or rejected once a decision has been made.  It might bump around the organization to 3 or 4 people before it finds the one who's appropriate (and has enough information) to make a decision.  It's not clear there's any value to shifting out of the 'requested' state to 'received' at any point.</p>",
        "id": 219851271,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607957453
    }
]