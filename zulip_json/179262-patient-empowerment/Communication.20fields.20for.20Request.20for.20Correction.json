[
    {
        "content": "<p>As you know, we have a \"bake off\" in May Connectathon and so we are providing Profiles for both Task and Communication.  Here are my first nitpicky design questions when looking at using Communication:<br>\n1) Would like to have the overall reason for the conversation (the theme of a whole chain of Communication resources) set to Request a Correction to Record.  Should that go in topic or reasonCode - I am leaning towards reasonCode.  <br>\n2) Also, for both of these, if we have codes and a code system of choice we can use them there in our own value set right?<br>\n3) In one of our bake off designs we have a combo Task+Communication.  In that case it would be nice for the Communication resources to point to the overall correction task.  Would that be done through partOf or basedOn?  Can't be reasonReference because Task is not an available resource for that.  <span class=\"user-mention\" data-user-id=\"192825\">@Jeffrey Danford</span> <span class=\"user-mention\" data-user-id=\"192685\">@Vassil Peytchev</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span></p>",
        "id": 232125786,
        "sender_full_name": "Virginia Lorenzi",
        "timestamp": 1616887676
    },
    {
        "content": "<p>I think it would use Communication.about.  \"basedOn\" would be if the Task authorized the Communication, which isn't the case.  \"partOf\" would mean the Communication is one of the steps involved in executing the Task, which might be somewhat true, however I think \"about\" is the most accurate semantic.</p>",
        "id": 232134840,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1616898565
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  - thanks -  I see your point about Communication.about for 3).  That would be a way to association the Communication with the Task.  I assume you were answering 3) right?  Not 1) and 2).</p>",
        "id": 232144826,
        "sender_full_name": "Virginia Lorenzi",
        "timestamp": 1616910888
    },
    {
        "content": "<p>Yes.  Skipped your question #2.  It's fine (and encouraged) to define value sets using existing codes - which I think is what you were asking?</p>",
        "id": 232168590,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1616939804
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>   Communication.about would be nice to use to reference Task but main reason we want to use it is for searches and its not a search parameter.  I guess we could add it in the IG?  Something else?</p>",
        "id": 233753454,
        "sender_full_name": "Virginia Lorenzi",
        "timestamp": 1617930259
    },
    {
        "content": "<p>1) What field in Communication should we use to represent that the entire conversation (chain of Communication resources) is for a Patient Request for Corrections?  (a code).  I think Communication.topic.  Does that make sense?<br>\n2) And Communication.reason seems to be more specific to the single Communication instance - does that make sense.</p>",
        "id": 233753620,
        "sender_full_name": "Virginia Lorenzi",
        "timestamp": 1617930404
    },
    {
        "content": "<ol>\n<li>Communication.topic is sort of like the subject line in an email.  I think linking to the Task is a stronger/better way to establish that than using topic.  (You might want topic to be different things like \"supporting information\" or \"follow-up question\" or something like that.).  Communication.topic <em>can</em> stay the same across a chain, but there's no guarantee it will.  The only way to retrieve a chain is to recurse through the 'inResponseTo'.</li>\n<li>Yes</li>\n</ol>\n<p>Please do submit a change request for Communication.about to be searchable in R5+.  We can certainly define our own IG-specific search criteria for it in the meantime.</p>",
        "id": 233767486,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1617943380
    }
]