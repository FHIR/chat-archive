[
    {
        "content": "<p>How would you recommend constraining ClinicalDocument.componentOf.nonXMLBody and ClinicalDocument.componentOf.structuredBody so that only one of the two is allowed. nonXMLBody and structuredBody are a choice in XML Schema... but, that isn't currently represented/supported in the cda-core-2.0 spec. Right now, both are allowed and both are optional, when only one of the two should be allowed and should be required...<br>\nI'm guessing maybe a &lt;constraint&gt; with xpath or FhirPath that asserts that the <em>other</em> element does not exist?<br>\nEx:</p>\n<div class=\"codehilite\"><pre><span></span>&lt;element&gt;\n  &lt;path value=&quot;ClinicalDocument.component.nonXMLBody&quot; /&gt;\n  ...\n  &lt;constraint&gt;\n    &lt;key value=&quot;?&quot; /&gt;\n    &lt;severity value=&quot;error&quot; /&gt;\n    &lt;human value=&quot;When nonXMLBody is present, structuredBody SHALL NOT be present.&quot; /&gt;\n    &lt;xpath value=&quot;not(../cda:structuredBody)&quot; /&gt;\n  &lt;/constraint&gt;\n&lt;/element&gt;\n</pre></div>",
        "id": 176107854,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568905159
    },
    {
        "content": "<p>not sure that xpath would work, though... not sure how it would know the \"cda:\" namespace prefix.</p>",
        "id": 176107963,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568905208
    },
    {
        "content": "<p>I would suggest using fhirpath: (nonXMLBody | structuredBody).count()=1</p>",
        "id": 176108675,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1568905639
    },
    {
        "content": "<p>and put that FHIRPath on both the structuredBody and nonXMLBody elements?</p>",
        "id": 176108719,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568905680
    },
    {
        "content": "<p>(basically, repeat it?)</p>",
        "id": 176108761,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568905686
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>     &lt;constraint&gt;\n        &lt;key value=&quot;choice-1&quot;/&gt;\n        &lt;severity value=&quot;error&quot;/&gt;\n        &lt;human value=&quot;Choice of the contained elements&quot;/&gt;\n        &lt;expression value=&quot;(nonXMLBody | structuredBody).count()&lt;=1 and (nonXMLBody | structuredBody).count()&gt;=1&quot;/&gt;\n     &lt;/constraint&gt;\n</pre></div>",
        "id": 176108828,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1568905734
    },
    {
        "content": "<p>sorry, no one up, on the component level:<br>\n      &lt;element id=\"ClinicalDocument.component\"&gt;<br>\n         &lt;path value=\"ClinicalDocument.component\"/&gt;<br>\n         &lt;min value=\"1\"/&gt;<br>\n         &lt;max value=\"1\"/&gt;<br>\n         &lt;type&gt;<br>\n            &lt;code value=\"http://fhir.ch/ig/cda-r2/StructureDefinition/Component\"/&gt;<br>\n            &lt;profile value=\"http://fhir.ch/ig/cda-r2/StructureDefinition/Component\"/&gt;<br>\n         &lt;/type&gt;<br>\n         &lt;constraint&gt;<br>\n            &lt;key value=\"choice-1\"/&gt;<br>\n            &lt;severity value=\"error\"/&gt;<br>\n            &lt;human value=\"Choice of the contained elements\"/&gt;<br>\n            &lt;expression value=\"(nonXMLBody | structuredBody).count()&lt;=1 and (nonXMLBody | structuredBody).count()&gt;=1\"/&gt;<br>\n         &lt;/constraint&gt;<br>\n      &lt;/element&gt;</p>",
        "id": 176108873,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1568905767
    },
    {
        "content": "<p>I see.</p>",
        "id": 176109048,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568905854
    },
    {
        "content": "<p>I have them autogenerated from the model i can provide  you with the expressions if you want to.</p>",
        "id": 176109217,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1568905947
    },
    {
        "content": "<p>I have to use this instead:<br>\n<code>&lt;expression value=\"(nonXMLBody | structuredBody).count() &lt;= 1 and (nonXMLBody | structuredBody).count() &gt;= 1\"/&gt;</code><br>\n(escape the &lt; and &gt; )</p>",
        "id": 176109282,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568905992
    },
    {
        "content": "<p>ugh</p>",
        "id": 176109294,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568906000
    },
    {
        "content": "<p>zulip unescaped my escaping</p>",
        "id": 176109299,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568906005
    },
    {
        "content": "<p>&amp;lt;=</p>",
        "id": 176109313,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568906017
    },
    {
        "content": "<p>and</p>",
        "id": 176109317,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568906022
    },
    {
        "content": "<p>&amp;gt;=</p>",
        "id": 176109325,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568906028
    },
    {
        "content": "<p>yes sorry, zulip conversion, i have them also escaped in the strucuredefintions ..</p>",
        "id": 176109387,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1568906055
    },
    {
        "content": "<p>cool</p>",
        "id": 176109410,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568906078
    },
    {
        "content": "<p>np</p>",
        "id": 176109414,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568906080
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>    &lt;element id=&quot;ClinicalDocument.component&quot;&gt;\n      &lt;path value=&quot;ClinicalDocument.component&quot;/&gt;\n      &lt;min value=&quot;1&quot;/&gt;\n      &lt;max value=&quot;1&quot;/&gt;\n      &lt;type&gt;\n        &lt;code value=&quot;http://hl7.org/fhir/cda/StructureDefinition/Component2&quot;/&gt;\n      &lt;/type&gt;\n      &lt;constraint&gt;\n        &lt;key value=&quot;body-choice&quot;/&gt;\n        &lt;severity value=&quot;error&quot;/&gt;\n        &lt;human value=&quot;Choice of the body required.&quot;/&gt;\n        &lt;expression value=&quot;(nonXMLBody | structuredBody).count() &amp;lt;= 1 and (nonXMLBody | structuredBody).count() &amp;gt;= 1&quot;/&gt;\n      &lt;/constraint&gt;\n    &lt;/element&gt;\n</pre></div>",
        "id": 176109431,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568906090
    },
    {
        "content": "<p>yes?</p>",
        "id": 176109432,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568906092
    },
    {
        "content": "<p>are we sure that works since \"nonXMLBody\" and \"structuredBody\" are not part of ClinicalDocument, and are instead part of the contained profile <a href=\"http://hl7.org/fhir/cda/StructureDefinition/Component2\" target=\"_blank\" title=\"http://hl7.org/fhir/cda/StructureDefinition/Component2\">http://hl7.org/fhir/cda/StructureDefinition/Component2</a>?</p>",
        "id": 176110514,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568906718
    },
    {
        "content": "<p>Should this instead be a &lt;constraint&gt; at the root element of Component2?</p>",
        "id": 176110558,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568906750
    },
    {
        "content": "<p>ex:</p>",
        "id": 176110620,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568906768
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>    &lt;element id=&quot;Component2&quot;&gt;\n      &lt;path value=&quot;Component2&quot;/&gt;\n      &lt;min value=&quot;1&quot;/&gt;\n      &lt;max value=&quot;1&quot;/&gt;\n      &lt;constraint&gt;\n        &lt;key value=&quot;body-choice&quot;/&gt;\n        &lt;severity value=&quot;error&quot;/&gt;\n        &lt;human value=&quot;Choice of the body required.&quot;/&gt;\n        &lt;expression value=&quot;(nonXMLBody | structuredBody).count() &amp;lt;= 1 and (nonXMLBody | structuredBody).count() &amp;gt;= 1&quot;/&gt;\n      &lt;/constraint&gt;\n    &lt;/element&gt;\n</pre></div>",
        "id": 176110625,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1568906772
    },
    {
        "content": "<p>thats the better place</p>",
        "id": 176130445,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1568919365
    }
]