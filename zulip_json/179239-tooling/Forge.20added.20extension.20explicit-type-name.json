[
    {
        "content": "<p>When I use Forge 24.2 for R4 to profile Composition, if I change the cardinality of Composition.section the extension <a href=\"http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name\">http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name</a> is added to the differential, even though this is inherited from Composition.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nt\">&lt;element</span> <span class=\"na\">id=</span><span class=\"s\">&quot;Composition.section&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/structuredefinition-explicit-type-name&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Section&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span>\n    <span class=\"nt\">&lt;path</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Composition.section&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;min</span> <span class=\"na\">value=</span><span class=\"s\">&quot;1&quot;</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/element&gt;</span>\n</code></pre></div>",
        "id": 198162643,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1589959529
    },
    {
        "content": "<p>The igPublisher strips this addition out.<br>\nI think that this addition to differential is invalid as the element is in the resource from which it inherits.<br>\nIs that right?</p>",
        "id": 198162784,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1589959627
    },
    {
        "content": "<p>yes this is one of those extensions that should not be inherited</p>",
        "id": 198165651,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589961613
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191682\">@Richard Townley-O'Neill</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>, we'll add this to the hardcoded list of extensions not to be inherited with the next release. And include it in the discussion how to generalize that information.</p>",
        "id": 198206092,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1589984767
    },
    {
        "content": "<p>Added this to <a href=\"http://jira.hl7.org/browse/FHIR-27535\">FHIR#27535</a>.</p>",
        "id": 198209377,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1589986192
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span> -- this affects SUSHI as well.  Is the list in the link for 27535 complete (as far as we know)?  I think right now, SUSHI is just wiping out all extensions on the base resource, but using a black list is probably more correct.</p>",
        "id": 198234203,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1589997298
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> Yes, this whole shebang started when a customer pointed out their extension on a datatype (if I remember correctly) was being wiped out by Forge, so we changed that practice.</p>\n<p>And we seem to continue to discover more so far, so I wouldn't expect it to be complete yet <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span></p>",
        "id": 198237493,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1589998838
    },
    {
        "content": "<p>I'm implementing this in SUSHI and ran into a few more extensions I'm not sure should be inherited.  For example:</p>\n<ul>\n<li><a href=\"http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm\">http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm</a> : Is it right for a profile to inherit the same maturity as the resource it is derived from? A comment in the extension says \"Though this is defined for resources, it can be used for any artifact.\" I'd expect a profile's FMM should never be higher than the resource it is derived from, but it might be lower.</li>\n<li><a href=\"http://hl7.org/fhir/StructureDefinition/structuredefinition-wg\">http://hl7.org/fhir/StructureDefinition/structuredefinition-wg</a>: I think it might be fairly common for a profile to be maintained by a different WG then the resource it is derived from, right?</li>\n</ul>\n<p>What do you think?</p>",
        "id": 203889104,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1594761199
    },
    {
        "content": "<p>neither of these should be inherited.</p>",
        "id": 203906359,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1594774385
    },
    {
        "content": "<p>we really haven't figured out how to handle these properly. :-(</p>",
        "id": 203906369,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1594774397
    },
    {
        "content": "<p>Thanks, Grahame.  <span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span> -- I mentioned these in a comment on <a href=\"http://jira.hl7.org/browse/FHIR-27535\">FHIR#27535</a>, but can you add them in the body of the issue?</p>",
        "id": 203956575,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1594820613
    },
    {
        "content": "<p>Doesn't seem like I'm allowed to <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span>, probably because it's already triaged or something.</p>",
        "id": 204770759,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1595492133
    },
    {
        "content": "<p>Ah, OK.  Well then, I guess we'll just use comments to add more applicable extensions as we find them.</p>",
        "id": 204909873,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1595594295
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> How about <a href=\"http://hl7.org/fhir/extension-elementdefinition-translatable.html\">http://hl7.org/fhir/extension-elementdefinition-translatable.html</a>, should that be added to the no-inherit list? We seem to have customers unhappy with Forge adding it since recently.</p>",
        "id": 205090118,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1595836877
    },
    {
        "content": "<p>i think it should be also added. (being the unhappy customer <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span> )</p>",
        "id": 205094318,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1595840673
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span>  I was wondering why Forge adds these anyway. They are part of the base resource, when i don't change anything on an item Forge still produces a diff entry only containing some (e.g. translatable) extension entries.<br>\nThis never should appear in a diff, or am i missing smth?</p>",
        "id": 205094529,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1595840844
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> I believe that's because otherwise there is no way to make the distinction between making no changes to the extensions and deliberately removing all extensions that a parent has. Right <span class=\"user-mention\" data-user-id=\"221719\">@Abel Enthoven</span>?</p>",
        "id": 205096091,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1595842153
    },
    {
        "content": "<p>(And I hope you're generally a happy customer <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span>)</p>",
        "id": 205096143,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1595842191
    },
    {
        "content": "<p>ah! that makes sense. Ok then type name and translatable just should be on the \"negative-list\" if inhereting.</p>",
        "id": 205096513,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1595842459
    },
    {
        "content": "<p>hi <span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span> and <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> , yeah that's right. There's no distinction possible yet based on the definition, so if we want it not-inherited we should add it to the list</p>",
        "id": 205103953,
        "sender_full_name": "Abel Enthoven",
        "timestamp": 1595848075
    },
    {
        "content": "<p>and I'm not sure</p>",
        "id": 205104564,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1595848590
    },
    {
        "content": "<p>about what?</p>",
        "id": 205105016,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1595849041
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"203235\">Ward Weistra</span> <a href=\"#narrow/stream/179239-tooling/topic/Forge.20added.20extension.20explicit-type-name/near/205096091\">said</a>:</p>\n<blockquote>\n<p>I believe that's because otherwise there is no way to make the distinction between making no changes to the extensions and deliberately removing all extensions that a parent has.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span> -- Are you suggesting that if an element in a <code>differential</code> does not repeat an extension from the parent profile, that should be interpreted as a request to remove the extension from the snapshot?  If so, that's new to me; I assumed if you explicitly didn't want an extension, you had to set <code>max</code> to <code>0</code> (although that would be prohibiting it, which is certainly different than just choosing not to explicitly list it).</p>",
        "id": 205115438,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1595855935
    },
    {
        "content": "<p>hi <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> the extensions you are talking about (correct me if I'm wrong) are really extension <strong>definitions</strong>. If a profile of a Patient has an extension definition, then you can restrain that definition in a derived Patient profile (e.g. set it to 0..0). But like a Patient, StructureDefinition is a Resource too and thus can have it's own extensions. Those extensions would not be visible in Forge, for they are not definitions but actual extensions and they apply to the metamodel (the StructureDefinition itself). Any extension definitions you define on a Patient are in fact ElementDefinitions in a StructureDefinition and end up in the differential. Any extensions (instances of an extension) on StructureDefinition can occur on every possible element within the definition. This distinction actually throws me off too all the time :)</p>",
        "id": 205120478,
        "sender_full_name": "Abel Enthoven",
        "timestamp": 1595858544
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span> right now i'm deleting loads of elements only containing the translatable extension to get a decent rendering in Simplifer :-(</p>",
        "id": 205129665,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1595862807
    },
    {
        "content": "<p>And everytime i change a minor thing in a profile, the StrucDef explodes again. <span aria-label=\"bomb\" class=\"emoji emoji-1f4a3\" role=\"img\" title=\"bomb\">:bomb:</span> <span aria-label=\"angry devil\" class=\"emoji emoji-1f47f\" role=\"img\" title=\"angry devil\">:angry_devil:</span></p>",
        "id": 205132534,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1595864141
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> I'll discuss the best solution with <span class=\"user-mention\" data-user-id=\"221719\">@Abel Enthoven</span> tomorrow!</p>",
        "id": 205132649,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1595864203
    },
    {
        "content": "<p>thanks</p>",
        "id": 205132661,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1595864215
    },
    {
        "content": "<p>OK, our plan is now that we will change our Forge logic to no longer repeat untouched extension instances in the structure definition (not to be confused with element definitions defining extensions in a profile). This will mean:</p>\n<ul>\n<li>Translatable, Normative-version, etc. will no longer be in the differential if not defined in that profile</li>\n<li>The .NET snapshot generator will make sure these extensions are being treated as additive. <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> can you comment on how the Java snapshot generator treats them?</li>\n<li>The extensions which we have until now discovered which should not be inherited (like Normative-version) will still wrongly end up in your snapshot. This will need a fix in FHIR for <a href=\"http://jira.hl7.org/browse/FHIR-27535\">FHIR#27535</a>.</li>\n</ul>",
        "id": 205217073,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1595930175
    },
    {
        "content": "<p>I don't believe that the java snapshot generator does anything special for any of them. I've been waiting for this discussion to go to FHIR-I before doing anything about it</p>",
        "id": 205218687,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1595931297
    },
    {
        "content": "<p><a href=\"#narrow/stream/179252-IG-creation/topic/Bad.20links.20in.20Vital.20Signs.20derived.20profiles\">Another discussion</a> revealed another extension that should not be inherited: <code>http://hl7.org/fhir/StructureDefinition/structuredefinition-summary</code>.  I'll add it to the <a href=\"https://jira.hl7.org/browse/FHIR-27535\">jira issue</a>.</p>",
        "id": 208086006,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1598445931
    },
    {
        "content": "<p>I also noticed that <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> commented on the Jira issue suggesting that <code>http://hl7.org/fhir/StructureDefinition/elementdefinition-translatable</code> also should not be inherited.</p>",
        "id": 208086037,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1598445958
    },
    {
        "content": "<p>yes. Causing a lot of troubles in Forge at the moment</p>",
        "id": 208086098,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1598445981
    },
    {
        "content": "<p>This is starting to feel like wack-a-mole.  It may be worth going through the extension registry and trying to proactively identify extensions that should not be inherited.  Even if the solution recommended in the Jira issue is implemented, that won't help w/ older versions of FHIR.</p>",
        "id": 208086204,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1598446052
    },
    {
        "content": "<p>it feels like we're going to have an extension on the extension definition here</p>",
        "id": 208143097,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1598473121
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191451\">Patrick Werner</span> <a href=\"#narrow/stream/179239-tooling/topic/Forge.20added.20extension.20explicit-type-name/near/208086098\">said</a>:</p>\n<blockquote>\n<p>yes. Causing a lot of troubles in Forge at the moment</p>\n</blockquote>\n<p>Please test again with the just released Forge 25.1 if this resolves the element extension inheritance issues! <img alt=\":forge:\" class=\"emoji\" src=\"https://zulip-avatars.s3.amazonaws.com/10155/emoji/images/11736.png\" title=\"forge\"> <br>\nIt does in my tests: <a href=\"https://simplifier.net/ForgeLetsBuild/HospitalXPatientNZ/$diff/2/4/Original\">https://simplifier.net/ForgeLetsBuild/HospitalXPatientNZ/$diff/2/4/Original</a></p>",
        "id": 208226751,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1598539696
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179239-tooling/topic/Forge.20added.20extension.20explicit-type-name/near/208143097\">said</a>:</p>\n<blockquote>\n<p>it feels like we're going to have an extension on the extension definition here</p>\n</blockquote>\n<p>This is the only real solution - the author of the extension has to indicate whether this extension propagates.  It's well-known territory, because exactly the same features exists on attributes in .NET (<a href=\"https://docs.microsoft.com/en-us/dotnet/standard/attributes/writing-custom-attributes#inherited-property\">https://docs.microsoft.com/en-us/dotnet/standard/attributes/writing-custom-attributes#inherited-property</a>) and Java annotations (<a href=\"https://docs.oracle.com/javase/tutorial/java/annotations/predefined.html\">https://docs.oracle.com/javase/tutorial/java/annotations/predefined.html</a>, see @Inherited - which is an annotation on an annotation indeed)</p>",
        "id": 209272250,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1599469369
    },
    {
        "content": "<p>do you want to create a task and take it to FHIR-I?</p>\n<p>but that's a longer term solution, I think, because it requires technical corrections and  I have no energy for that right now given everything going on</p>",
        "id": 209275583,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599471281
    },
    {
        "content": "<p>so we'll have to settle for a list in the short term</p>",
        "id": 209275595,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599471291
    },
    {
        "content": "<p>agree.</p>",
        "id": 209275963,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1599471518
    },
    {
        "content": "<p><a href=\"https://jira.hl7.org/browse/FHIR-28441\">https://jira.hl7.org/browse/FHIR-28441</a></p>",
        "id": 209284565,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1599477757
    },
    {
        "content": "<p>I guess that the solution for (or duplicate of) ticket <a href=\"http://jira.hl7.org/browse/FHIR-27535\">FHIR#27535</a> then.</p>",
        "id": 209294391,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1599484575
    },
    {
        "content": "<p>yes, sorry, Ward, that's <em>almost</em> a duplicate (it mentions using extensions as the \"programmatic\" way).</p>",
        "id": 209295221,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1599485087
    },
    {
        "content": "<p>thank you for resolving this issue!</p>",
        "id": 209357637,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1599553299
    }
]