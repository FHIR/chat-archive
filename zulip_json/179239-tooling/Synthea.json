[
    {
        "content": "<p>Synthea 2.2 is now available: <a href=\"https://github.com/synthetichealth/synthea/releases/tag/v2.2.0\" target=\"_blank\" title=\"https://github.com/synthetichealth/synthea/releases/tag/v2.2.0\">https://github.com/synthetichealth/synthea/releases/tag/v2.2.0</a></p>\n<p>Significant new features:</p>\n<ul>\n<li>New Support for FHIR R4 (v3.5.0)</li>\n<li>FHIR <code>ExplanationOfBenefit</code> Resource (STU3 only) using Blue Button 2.0 Implementation Guide profiles.</li>\n</ul>",
        "id": 154000376,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1538073239
    },
    {
        "content": "<p>I updated Synthea today for R4 (v4.0.0) in case anyone wants to generate and use synthetic records for the latest R4 version at the connectathon this weekend in San Antonio.</p>",
        "id": 154955311,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1547249146
    },
    {
        "content": "<p>Synthea has been updated for US Core STU3 (FHIR R4) v3.0.0 for the FHIR Connectathon in Atlanta this weekend.</p>\n<p>This is the first time that Synthea covers all of the US Core resources, including <code>Device</code> and clinical notes. US Core is turned off by default, so if you want to turn it on then edit <code>synthea.properties</code> and change <code>exporter.fhir.use_us_core_ig = true</code>.</p>",
        "id": 175624870,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1568382415
    },
    {
        "content": "<p>Synthea 2.5 is now available: <a href=\"https://github.com/synthetichealth/synthea/releases/tag/v2.5.0\" target=\"_blank\" title=\"https://github.com/synthetichealth/synthea/releases/tag/v2.5.0\">https://github.com/synthetichealth/synthea/releases/tag/v2.5.0</a></p>\n<p>With this release, you can now use Synthea as a Java library dependency, and not just as a Java Application. See <a href=\"https://github.com/synthetichealth/synthea/wiki/Embedding\" target=\"_blank\" title=\"https://github.com/synthetichealth/synthea/wiki/Embedding\">https://github.com/synthetichealth/synthea/wiki/Embedding</a> for details on how to include synthetic patient generation in your Java project.</p>",
        "id": 180733565,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1573740452
    },
    {
        "content": "<p>Hey J is there a way to  use Synthea to get a snapshot in time like for my use case after an admission? so the encounter is still in progress?</p>",
        "id": 184356557,
        "sender_full_name": "Eric Haas",
        "timestamp": 1577503138
    },
    {
        "content": "<p>also, how to I get only the modules I want, I removed all the modules except for my example module, but I am still generating a bunch of immunizations and wellness visit encounters?</p>",
        "id": 184425184,
        "sender_full_name": "Eric Haas",
        "timestamp": 1577633311
    },
    {
        "content": "<p>Ok so my hack is to just rebundling the resources leaving out the immunizations and wellness stuff.  I also created Orgs from the Payor's CSV and made a stand alone Coverage for the Patient which references the Payor Org.  I think those would be nice additions to have out of the box (instead of a contained Coverage inside the EOB)</p>",
        "id": 184612627,
        "sender_full_name": "Eric Haas",
        "timestamp": 1577911130
    },
    {
        "content": "<p>Just want to say how nice it Is to be able to generate a few to a bunch of US Core resources with minimal effort.   :-)</p>",
        "id": 184612684,
        "sender_full_name": "Eric Haas",
        "timestamp": 1577911236
    },
    {
        "content": "<blockquote>\n<p>Hey J is there a way to  use Synthea to get a snapshot in time like for my use case after an admission? so the encounter is still in progress?</p>\n</blockquote>\n<p>Yes, but not easily. A few options:</p>\n<ol>\n<li>Manual Edit. Edit the patient Bundle and remove the second half (or whatever) of the encounter and change the status.</li>\n<li>Search. Generate a lot of patients. Search them until you find a patient Bundle where the last encounter is actually still in progress. Needle in a haystack.</li>\n<li>Create a new module with the module-builder. Or edit an existing one. Make it so the encounter and the associated activity (e.g. Labs, Observations, Procedures) are only partially complete, and it never finishes.</li>\n</ol>",
        "id": 185008033,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1578402374
    },
    {
        "content": "<blockquote>\n<p>also, how to I get only the modules I want, I removed all the modules except for my example module, but I am still generating a bunch of immunizations and wellness visit encounters?</p>\n</blockquote>\n<p>Immunizations and Wellness visits are built in (hard-coded, if you will) and can't be disabled at this moment. If you really want to do that, comment out these lines:</p>\n<p><a href=\"https://github.com/synthetichealth/synthea/blob/65d032592b992f5f09fee03173ebbd47e9a7e1e6/src/main/java/org/mitre/synthea/modules/EncounterModule.java#L110-L113\" target=\"_blank\" title=\"https://github.com/synthetichealth/synthea/blob/65d032592b992f5f09fee03173ebbd47e9a7e1e6/src/main/java/org/mitre/synthea/modules/EncounterModule.java#L110-L113\">https://github.com/synthetichealth/synthea/blob/65d032592b992f5f09fee03173ebbd47e9a7e1e6/src/main/java/org/mitre/synthea/modules/EncounterModule.java#L110-L113</a></p>\n<p>and change the below <code>return interval</code> to some huge number of years (e.g.<code>return 900;</code> years)</p>\n<p><a href=\"https://github.com/synthetichealth/synthea/blob/65d032592b992f5f09fee03173ebbd47e9a7e1e6/src/main/java/org/mitre/synthea/modules/EncounterModule.java#L204\" target=\"_blank\" title=\"https://github.com/synthetichealth/synthea/blob/65d032592b992f5f09fee03173ebbd47e9a7e1e6/src/main/java/org/mitre/synthea/modules/EncounterModule.java#L204\">https://github.com/synthetichealth/synthea/blob/65d032592b992f5f09fee03173ebbd47e9a7e1e6/src/main/java/org/mitre/synthea/modules/EncounterModule.java#L204</a></p>\n<p>I haven't tried those steps though, so buyer beware...</p>",
        "id": 185008602,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1578402864
    },
    {
        "content": "<p>Synthea now soliciting contributions to our new Synthea-international repository: <a href=\"https://github.com/synthetichealth/synthea-international\" target=\"_blank\" title=\"https://github.com/synthetichealth/synthea-international\">https://github.com/synthetichealth/synthea-international</a></p>\n<p>Thanks to an open-source contributor, our first non-US location is Finland!</p>\n<p>This is a work in progress, and there are probably some bugs. If you'd like synthetic data outside of the US, please use or contribute to Synthea-international!</p>",
        "id": 187956616,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1581455943
    },
    {
        "content": "<p>The latest Synthea code on GitHub (the <code>master</code> branch) now has a fully functional <strong>COVID19</strong> model. This data has been used in several hackathon events already, and is now being featured in this VHA and FDA challenge: <a href=\"https://precision.fda.gov/challenges/11\">https://precision.fda.gov/challenges/11</a></p>\n<p>The model features tests, diagnoses, treatments, lab work, use of ventilators and critical supplies. We hope this helps the FHIR community work towards developing Health IT solutions to address the pandemic!</p>",
        "id": 199757020,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1591281842
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191381\">@Jason Walonoski</span> We have forked synthea here <a href=\"https://github.com/dHealthNL/synthea\">https://github.com/dHealthNL/synthea</a> to add Dutch specific config. We also need to add some switches in the sources to disable ethnicity and race stuff. Were do you want those changes?<br>\nUPDATE: I think I have the answer. I put them in my synthea-international fork.</p>",
        "id": 204815636,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1595519616
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191381\">@Jason Walonoski</span> Another question: We created a module that creates a sequence of Encounters. We expect the result to be patients that have Encounters, but not all of them. The first Encounter is a GP visit, the next is a Diagnostics Concult, then a Operation, then a Follow Up. We then expect some patients to only have a GP visit and others to already be in the Follow Up. How can we do this? Thanks.</p>",
        "id": 204815980,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1595519778
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191421\">@Michael van der Zel</span> You've probably read these, but let me point you to the documentation: <a href=\"https://github.com/synthetichealth/synthea/wiki/Generic-Module-Framework%3A-States#encounter\">https://github.com/synthetichealth/synthea/wiki/Generic-Module-Framework%3A-States#encounter</a> and <a href=\"https://github.com/synthetichealth/synthea/wiki/Generic-Module-Framework%3A-States#encounterend\">https://github.com/synthetichealth/synthea/wiki/Generic-Module-Framework%3A-States#encounterend</a> and <a href=\"https://github.com/synthetichealth/synthea/wiki/Generic-Module-Framework%3A-Transitions\">https://github.com/synthetichealth/synthea/wiki/Generic-Module-Framework%3A-Transitions</a>.</p>\n<p>So, what all the documentation boils down to is this: each encounter should start with an <code>Encounter</code> state and end with an <code>EncounterEnd</code> state. So, put the <code>EncounterEnd</code> states between the encounter starts. Also note that the \"Wellness\" encounter waits until a regularly scheduled GP visit, whereas all the other types of encounters occur immediately.</p>\n<p>Also, you can use the different types of transitions to select where patients go. For example, you can use a <code>Distributed</code> to make 80% go to the Consult, and 20% skip it. Or only 70% go to the follow-up encounter, or something like that. You also have the ability to use conditional logic that takes into account patient data or attributes (which are like variables that you read and write on each patient).</p>\n<p>Let me know if you have questions. Happy to explain it all and walk you through it.</p>",
        "id": 205113290,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1595854792
    },
    {
        "content": "<p>If you don't want the next encounter to occur immediately use a <code>Delay</code> state.</p>",
        "id": 205113433,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1595854856
    },
    {
        "content": "<p>Also, most modules have a <code>Delay</code> or <code>Guard</code> state in the beginning so they do not run as soon as the \"baby\" is born. If data does not appear that you think should be in the record, this could be the reason why. The encounters are happening to newborns, and Synthea default is to only output the last 10 years of history.</p>",
        "id": 205113589,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1595854934
    },
    {
        "content": "<p>I don't think that answers my question. Will try to clarify. <br>\nWe define a module that creates 2 Encounters with a delay. 1 for GP visit and 1 after that for Surgery. Everybody does both visits. The challenge is that for some patients the Surgery is planned, but not done yet. It is just because the delay after the GP visit takes us after \"today\", so that is why the Surgery encounter is nog there yet.</p>",
        "id": 207852029,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1598280430
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191421\">@Michael van der Zel</span> I'm not sure what your question is, so I made you this module. Please take a look at it in the module-builder. I'm willing to have a Microsoft Teams call or something if you'd like. <a href=\"/user_uploads/10155/5a2c6LH5ZZZHRHLFYE7mfCni/example.json\">example.json</a></p>",
        "id": 207962994,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1598362441
    },
    {
        "content": "<p>I have a question about loading Synthea-generated data into a local FHIR server.  I'm happy to start a new stream for this, but for starters I thought I would glom on to this one.  If anyone feels strongly that this should be a new stream, please don't hesitate to suggest it now.</p>\n<p>So, here goes.</p>\n<p>I have generated 1000 random patients using the us-core profile option, all geographically centered around the Madison, WI metropolitan area.  That all worked beautifully.</p>\n<p>From those files, I want to load the data into a local dockerized hapi server for my test application.  Setting out to do so, I started small, loading the first 5 patients and right away I noticed something odd in the server data.  There were duplicate organizations, locations, practitioners, etc.  Any resource that was referenced by another resource would be duplicated in the server.</p>\n<p>Doing a little digging, I see that each patient file declares all its dependent resources, so each individual patient file can be loaded and it gets its dependencies created.  This is great if I just wanted to load one patient - but I want a fake EHR database.  So, what I need is for each patient to reference a resource rather than include a copy of one.</p>\n<p>Is there a way to configure Synthea to produce output files that I can load in a particular order to get what I want?  I assume not, having spent some time hunting through the config properties looking for this.  I'm happy to be wrong here.  The <code>generate.database_type</code> option caught my eye, but I haven't experimented with the non-default setting yet.  Anyway, insights into configuration options are welcome.</p>\n<p>Assuming that I <em>can't</em> configure Synthea to generate a more loader-friendly format, I experimented with parsing the server response to load bundles and manually mapping the response 'server IDs' to the Synthea-generated 'file IDs'.  I partially implemented this in a loader script, which attempts to save the ID mappings and even update all references before processing the bundle - but I ran into several problems doing this and abandoned the work several times after several false starts.</p>\n<p>Before I dive into providing example data - let me stop myself here and ask if this makes sense and if there's an existing solution.  Thanks!</p>",
        "id": 210169186,
        "sender_full_name": "Carl Anderson",
        "timestamp": 1600194330
    },
    {
        "content": "<p>Are you using a recent version of Synthea? Provider organizations should all have the same UUID across the patient files.</p>",
        "id": 210208428,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1600215366
    },
    {
        "content": "<p>For example, with the latest code, I see a bunch of patients with this exact reference:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"s2\">&quot;organization&quot;</span><span class=\"err\">:</span> <span class=\"p\">{</span>\n<span class=\"nt\">&quot;reference&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;urn:uuid:b1ddf812-1fdd-3adf-b1d5-32cc8bd07ebb&quot;</span><span class=\"p\">,</span>\n<span class=\"nt\">&quot;display&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;BETH ISRAEL DEACONESS HOSPITAL - PLYMOUTH&quot;</span>\n  <span class=\"p\">}</span>\n</code></pre></div>",
        "id": 210208534,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1600215473
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191381\">@Jason Walonoski</span> I am trying to figure out how Providers assigning to Encounters works. Depending on the reason for the Encounter we need to assign a certain Provider. For example the initial contact is always through a GP. Then for simple procedures the patient is referred to a normal hospital and for more complex procedures the Encounter should be with a academic/specialist hospital. Can I configure this?</p>",
        "id": 210236927,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1600246997
    },
    {
        "content": "<p>In <code>synthea.properties</code> there is an option called <code>generate.providers.selection_behavior</code> with a few different options.</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c\"># Provider selection behavior</span>\n<span class=\"c\"># How patients select a provider organization:</span>\n<span class=\"c\">#  nearest - select the closest provider. See generate.providers.maximum_search_distance</span>\n<span class=\"c\">#  quality - select the best provider if quality is known. Otherwise nearest.</span>\n<span class=\"c\">#  random  - select randomly.</span>\n<span class=\"c\">#  network - select the nearest provider in your insurance network. same as random except it changes every time the patient switches insurance provider.</span>\n<span class=\"na\">generate.providers.selection_behavior</span> <span class=\"o\">=</span> <span class=\"s\">nearest</span>\n</code></pre></div>\n\n\n<p>The behavior works separately for each type of provider. For instance, the GP/PCP is selected separately from an urgent care facility, which is selected separately from an emergency facility, and so on. Once a provider is selected, it often does not reset unless you are using <code>network</code> and a change in insurance causes the patients to \"shop around.\" (this is US-centric and also a lie, since the US health system is so opaque and anti-patient that \"shopping around\" is effectively a fool's errand, or time pressure of care effectively eliminates choice).</p>\n<p>If none of those options work for you, you can override the behavior by implementing <a href=\"https://github.com/synthetichealth/synthea/blob/master/src/main/java/org/mitre/synthea/world/agents/behaviors/IProviderFinder.java\">https://github.com/synthetichealth/synthea/blob/master/src/main/java/org/mitre/synthea/world/agents/behaviors/IProviderFinder.java</a> and then editing <a href=\"https://github.com/synthetichealth/synthea/blob/fd2217bb5cb82bce846249e6bea51978af4fdcd4/src/main/java/org/mitre/synthea/world/agents/Provider.java#L131-L149\">Provider.buildProviderFinder()</a>.</p>",
        "id": 210256778,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1600260974
    },
    {
        "content": "<p>Yes, I've checked out the repo and built it from master (although, it's a month old by now).  But I think the issue is that when I PUT the resources into my hapi server, they get a numeric ID assigned to them, throwing the uuid away.  That breaks all the references.</p>\n<p>Maybe this is a hapi-specific issue, then?</p>",
        "id": 210275532,
        "sender_full_name": "Carl Anderson",
        "timestamp": 1600268751
    },
    {
        "content": "<p>Hmmm.... not really a HAPI issue. I wonder if we should change the transaction bundle for shared resources to use <a href=\"https://www.hl7.org/fhir/http.html#ccreate\">conditional create</a>, and use <code>Bundle.entry.request.ifNoneExist</code> in those instances... we'd then have to change the references to all the shared resources to use \"conditional references\" (see <a href=\"https://www.hl7.org/fhir/http.html#trules\">https://www.hl7.org/fhir/http.html#trules</a>).</p>",
        "id": 210288132,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1600274295
    },
    {
        "content": "<p>Yeah, <span class=\"user-mention\" data-user-id=\"233081\">@Carl Anderson</span> your issue is definitely related to how we output the Bundle. The only issue with making that change is that I'm not sure how widespread the conditional create and conditional references are supported.</p>",
        "id": 210288257,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1600274382
    },
    {
        "content": "<p>Ah, so something like this?</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;resourceType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Bundle&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;transaction&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;entry&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;fullUrl&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;urn:uuid:678f72e9-9de7-59d5-37ce-13a92d481dfe&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;resource&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;resourceType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Patient&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;678f72e9-9de7-59d5-37ce-13a92d481dfe&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;identifier&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"nt\">&quot;system&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://github.com/synthetichealth/synthea&quot;</span><span class=\"p\">,</span>\n            <span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;678f72e9-9de7-59d5-37ce-13a92d481dfe&quot;</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n      <span class=\"p\">},</span>\n      <span class=\"nt\">&quot;request&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;method&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;POST&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Patient&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;ifNoneExist&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;identifier=https://github.com/synthetichealth/synthea|678f72e9-9de7-59d5-37ce-13a92d481dfe&quot;</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 210311119,
        "sender_full_name": "Carl Anderson",
        "timestamp": 1600285652
    },
    {
        "content": "<p>This is assuming that the server accepts the uuids as valid resource IDs, I suppose, too.  I'm still not sure how to approach this when I have to map the synthea uuids to server-issued IDs, but I feel this may be one of the missing pieces.</p>",
        "id": 210311524,
        "sender_full_name": "Carl Anderson",
        "timestamp": 1600285843
    },
    {
        "content": "<p>Oh, and I would need to update all references, too, to use conditional references.  So, would that be something like this?</p>\n<p>From:</p>\n<div class=\"codehilite\"><pre><span></span><code>        <span class=\"s2\">&quot;managingOrganization&quot;</span><span class=\"err\">:</span> <span class=\"p\">{</span>\n          <span class=\"nt\">&quot;reference&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;urn:uuid:e6c5d179-370a-3659-9ce6-3d09da3c3ad0&quot;</span><span class=\"p\">,</span>\n          <span class=\"nt\">&quot;display&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;UNITYPOINT HEALTH - MERITER&quot;</span>\n        <span class=\"p\">}</span>\n</code></pre></div>\n\n\n<p>To:</p>\n<div class=\"codehilite\"><pre><span></span><code>        <span class=\"s2\">&quot;managingOrganization&quot;</span><span class=\"err\">:</span> <span class=\"p\">{</span>\n          <span class=\"nt\">&quot;reference&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Organization?identifier=e6c5d179-370a-3659-9ce6-3d09da3c3ad0&quot;</span><span class=\"p\">,</span>\n          <span class=\"nt\">&quot;display&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;UNITYPOINT HEALTH - MERITER&quot;</span>\n        <span class=\"p\">}</span>\n</code></pre></div>",
        "id": 210313469,
        "sender_full_name": "Carl Anderson",
        "timestamp": 1600286754
    },
    {
        "content": "<p>Regarding the first example, yes, except I would only do that for the shared resources (e.g. Organization). It doesn't matter if the server does not accept the UUIDs as ids, because the UUIDs will be in the identifiers (which is different). For your second/third examples, yes, but again only for the shared resources (not all resources).</p>",
        "id": 210391675,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1600350366
    },
    {
        "content": "<p>Thanks, <span class=\"user-mention\" data-user-id=\"191381\">@Jason Walonoski</span> , that's essentially what I found in my testing.  By adding the  <code>ifNoneExist</code> to the <code>bundle.entry.request</code> - I've avoided creating duplicates in the data I've loaded.  By changing the <code>reference</code> values to use the Synthea <code>identifier</code>, I've created the correct linkings in the loaded data, too.  :-D</p>\n<p>However, I don't understand why I wouldn't want to apply this transformation to references of non-shared resources.  At the point I'm loading a file, how would I know if a resource would be shared in a different file that I haven't opened yet?  Can you say more about this?</p>",
        "id": 210394208,
        "sender_full_name": "Carl Anderson",
        "timestamp": 1600351450
    },
    {
        "content": "<p>I'm trying to remember how this syntax workds...</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n          &quot;reference&quot;: &quot;Organization?identifier=e6c5d179-370a-3659-9ce6-3d09da3c3ad0&quot;,\n          &quot;display&quot;: &quot;UNITYPOINT HEALTH - MERITER&quot;\n}\n</code></pre></div>\n\n\n<p>... and it doesn't seem documented at <a href=\"http://build.fhir.org/references-definitions.html#Reference.reference\">http://build.fhir.org/references-definitions.html#Reference.reference</a> or <a href=\"https://www.hl7.org/fhir/references.html\">https://www.hl7.org/fhir/references.html</a> or <a href=\"http://build.fhir.org/bundle.html#references\">http://build.fhir.org/bundle.html#references</a> . Do you know the right place to look <span class=\"user-mention\" data-user-id=\"191381\">@Jason Walonoski</span> ?</p>",
        "id": 210443264,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1600372984
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>  <a href=\"https://www.hl7.org/fhir/http.html#trules\">https://www.hl7.org/fhir/http.html#trules</a> has it.</p>\n<p>Also, what I'm seeing is that if the referenced resource has <em>no</em> <code>identifier</code>, this type of reference won't work.  The other catch seems to be that, with the Synthea data, some resources have an <code>identifier</code> attribute but the uuid does not always appear as a valid value.  So, in order to make my data load work I need to:</p>\n<ul>\n<li>if there's an identifier attribute:<ul>\n<li>if there is no identifier with <code>value=\"my uuid\"</code><ul>\n<li>include the synthea identifier in the list of identifiers</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>This is true of Practitioners, FWIW, in the data set I generated.  They have an MRN identifier, but (at least in some cases) nothing else.</p>",
        "id": 210448593,
        "sender_full_name": "Carl Anderson",
        "timestamp": 1600375537
    },
    {
        "content": "<p>Thanks for the link! So this approach is interesting, and will work in environments that support FHIR's <code>transaction</code> interaction.</p>",
        "id": 210449568,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1600375997
    },
    {
        "content": "<p>In synthea's data, I'd assume all Practitioners and Organizations will have an identifier -- so the generator could have a \"create transaction bundles as outputs\" mode that takes advantage of these identifiers for all references. I'm not sure I follow the nested bullets above.</p>",
        "id": 210449829,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1600376117
    },
    {
        "content": "<p>In code I have this:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">class</span> <span class=\"nc\">EntryReferenceUpdater</span><span class=\"p\">:</span>\n    <span class=\"sd\">&quot;&quot;&quot;Updates references to use an ID and creates Resources conditionally.&quot;&quot;&quot;</span>\n\n    <span class=\"n\">_id_type</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>\n    <span class=\"n\">_identifier</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;https://github.com/synthetichealth/synthea&#39;</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">update_identifier</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">resource</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"s1\">&#39;identifier&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">resource</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n        <span class=\"n\">uuid</span> <span class=\"o\">=</span> <span class=\"n\">resource</span><span class=\"p\">[</span><span class=\"s1\">&#39;id&#39;</span><span class=\"p\">]</span>\n        <span class=\"n\">synthea_id</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n            <span class=\"s1\">&#39;system&#39;</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_identifier</span><span class=\"p\">,</span>\n            <span class=\"s1\">&#39;value&#39;</span><span class=\"p\">:</span> <span class=\"n\">uuid</span><span class=\"p\">,</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">resource</span><span class=\"p\">[</span><span class=\"s1\">&#39;identifier&#39;</span><span class=\"p\">]</span> <span class=\"k\">if</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">&#39;value&#39;</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">uuid</span><span class=\"p\">]:</span>\n            <span class=\"n\">resource</span><span class=\"p\">[</span><span class=\"s1\">&#39;identifier&#39;</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">synthea_id</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 210451463,
        "sender_full_name": "Carl Anderson",
        "timestamp": 1600376845
    },
    {
        "content": "<p>But the important thing should not only be identifiers that match the <a href=\"http://Resource.id\">Resource.id</a>; like for example in <a href=\"https://r4.smarthealthit.org/Practitioner\">https://r4.smarthealthit.org/Practitioner</a> (synthea generated data) every practitioner has an identifier in the NPI namespace that should work just as well.</p>",
        "id": 210456988,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1600380042
    },
    {
        "content": "<p>Yeah, and I'm starting to understand that even this (my experimental) approach may not work.</p>\n<p>The problem is with forward references.</p>\n<p>I can't simply replace all references with a conditional reference because at the time of load - the target resource doesn't exist yet.  So, it appears I've solved the duplicate resource problem and replaced it with a different one.  Right now I'm getting 'stub' resources which, I believe, are being created by forward conditional references.</p>\n<p>I could try to create a partial ordering of the resources in the bundle to eliminate forward references, but I don't believe I can rely on the server to create the resources mid bundle-transaction.  I'm wondering if I would have to create entire separate bundles...</p>",
        "id": 210462691,
        "sender_full_name": "Carl Anderson",
        "timestamp": 1600384402
    },
    {
        "content": "<p>It's not clear whether fhir transaction processors should be able (or required) to discover these dependencies (forward reference via search + conditional creation of a resource that will satisfy his search) within a transaction bundle.</p>",
        "id": 210463332,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1600384866
    },
    {
        "content": "<p>Pragmatically, creating a partial ordering by type and then loading type specific bundles would probably work fine. You wouldn't get true transactional behavior across the bundles of course.</p>",
        "id": 210463409,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1600384924
    },
    {
        "content": "<p>There are options in Synthea to output the Organizations and Practitioners in separate bundles: <code>exporter.hospital.fhir.export</code> and <code>exporter.practitioner.fhir.export</code>. The only issue with this is that the data is duplicates to what is exported in the patient bundles.</p>",
        "id": 210516261,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1600435014
    },
    {
        "content": "<p>We could make a change, where if those options are enabled, that data is not duplicated in the patient bundles. Then the user would have to load the Organizations and Practitioners before loading any of the patient bundles.</p>",
        "id": 210516358,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1600435061
    },
    {
        "content": "<p>That would be sweet! (Even with duplication, these type-specific bundles plus the pattern od search-based reference and ifNoneExists conditions would make loading a lot easier.)</p>",
        "id": 210519636,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1600436583
    },
    {
        "content": "<p>I'm kind of surprised that this hasn't come up before; guess folks are generally happy to have isolated graphs per patient, and willing to tolerate duplicate demo data for the benefits of isolation!</p>",
        "id": 210519815,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1600436661
    },
    {
        "content": "<p>New Synthea issue created <a href=\"https://github.com/synthetichealth/synthea/issues/795\">https://github.com/synthetichealth/synthea/issues/795</a>. Feel free to express implementation preferences there.</p>",
        "id": 210524025,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1600438388
    },
    {
        "content": "<blockquote>\n<p>to create a partial ordering of the resources in the bundle to eliminate forward references, </p>\n</blockquote>\n<p>That is what I do  </p>\n<p>order based on resource type...  putting patients, practitioners, orgs first since they are all referenced by Groups, etc.</p>\n<p>here is an example</p>",
        "id": 210775696,
        "sender_full_name": "Eric Haas",
        "timestamp": 1600710374
    },
    {
        "content": "<h3>resort list so will load nicely as transaction</h3>\n<p>will need to customize this this list for each case</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"c1\"># pprint ([f&quot;{x[&#39;resourceType&#39;]}/{x[&#39;id&#39;]}&quot; for x in r_list])</span>\n\n<span class=\"n\">keyorder</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;Patient&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;Practitioner&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;Organization&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;Questionnaire&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;QuestionnaireResponse&#39;</span><span class=\"p\">,</span><span class=\"s1\">&#39;Group&#39;</span>\n\n<span class=\"n\">r_list</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">keyorder</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"s1\">&#39;resourceType&#39;</span><span class=\"p\">]))</span>\n\n<span class=\"c1\">#print(&#39;---&#39;)</span>\n<span class=\"c1\">#pprint ([f&quot;{x[&#39;resourceType&#39;]}/{x[&#39;id&#39;]}&quot; for x in r_list])</span>\n</code></pre></div>",
        "id": 210776191,
        "sender_full_name": "Eric Haas",
        "timestamp": 1600710636
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"233081\">@Carl Anderson</span> , <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>   For Argo PL we are strongly leaning toward requiring reference.reference so only providing reference.identifier won't be conformant.  It looks like when processing a transaction does the server will attach an id to all resources.  Is that what happens?</p>",
        "id": 210776897,
        "sender_full_name": "Eric Haas",
        "timestamp": 1600710957
    },
    {
        "content": "<p>That is correct. This discussion is just about having a convenient format for quickly getting data into a server; the data in a server would be expected to always populate <code>reference.reference</code></p>",
        "id": 210783746,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1600714215
    },
    {
        "content": "<p>I'm working on addressing this in Synthea and my testing against <a href=\"http://hapi.fhir.org\">hapi.fhir.org</a> has revealed a couple of things:</p>\n<ol>\n<li>If the bundle is of type <code>transaction</code> then the post fails for all entries in the bundle if any of the entries fail the <code>ifNoneExist</code> precondition</li>\n<li>If you add a resource using a <code>reference.identifier</code>, the server does not populate the <code>reference.reference</code> in the resource. For example see the <code>managingOrganization</code> in <a href=\"http://hapi.fhir.org/baseR4/Location/1547648/_history/1\">this location</a> that references <a href=\"http://hapi.fhir.org/baseR4/Organization/ef58ea08-d883-3957-8300-150554edc8fb/_history/2\">this organization</a></li>\n</ol>\n<p>I can get around 1 to some extent by using a <code>batch</code> bundle instead of a <code>transaction</code>, still noodling on what to do about 2.</p>",
        "id": 213052056,
        "sender_full_name": "Marc Hadley",
        "timestamp": 1602516032
    },
    {
        "content": "<p>Some additional findings:</p>\n<ul>\n<li>If the bundle is of type <code>transaction</code> then backward <code>reference.reference</code> to <code>entry.fullUrl</code> are resolved and converted to <code>ResourceType/CreatedResourceID</code> references </li>\n<li>If the bundle is of type <code>batch</code> then even backward <code>reference.reference</code> to <code>entry.fullUrl</code> fail to resolve and cause an error when trying to create the referencing resource</li>\n<li>Synthea generated FHIR <code>Organization</code> resources will have the same <code>identifier.value</code> and <code>id</code> across runs and this will soon be the case for <code>Location</code> resources</li>\n</ul>\n<p>This makes it tricky to create a file or set of files that will:</p>\n<ul>\n<li>Load without error into a server that already has some existing Synthea generated data, and</li>\n<li>Uses <code>reference.reference</code> throughout instead of <code>reference.identifier</code>, and</li>\n<li>Not create duplicate resources</li>\n</ul>",
        "id": 213217293,
        "sender_full_name": "Marc Hadley",
        "timestamp": 1602623447
    },
    {
        "content": "<p>Thanks for the experimentation and analysis here! Have you assessed which of these behaviors are \"working according to the fhir spec\" vs \"undefined by the fhir spec / grey areas\" vs \"hapi quirks/bugs\"?</p>",
        "id": 213217839,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1602623686
    },
    {
        "content": "<p>I haven't been able to find a clear treatment of how preconditions within a transaction bundle should work. Seems that HAPI treats a a positive ifNoneExist match as a failure but you could argue it the other way. Here's a link to the conditional create text: <a href=\"https://www.hl7.org/fhir/http.html#ccreate\">https://www.hl7.org/fhir/http.html#ccreate</a>.</p>",
        "id": 213219290,
        "sender_full_name": "Marc Hadley",
        "timestamp": 1602624502
    },
    {
        "content": "<p>I did just find this though \"in a transaction (and only in a transaction), references to resources may be replaced by a search URI that describes how to find the correct reference\" in this section <a href=\"https://www.hl7.org/fhir/http.html#trules\">https://www.hl7.org/fhir/http.html#trules</a> which would help with references across multiple files but since it only applies to transactions there's still the issue with avoiding creating duplicates and it doesn't help with the batch approach where that wouldn't be an issue.</p>",
        "id": 213219948,
        "sender_full_name": "Marc Hadley",
        "timestamp": 1602624901
    },
    {
        "content": "<p>Here is an approach I think could work:</p>\n<ul>\n<li>Output the <code>Organization</code>, <code>Location</code> and <code>Practitioner</code> in separate bundles using the <code>exporter.hospital.fhir.export</code> and <code>exporter.practitioner.fhir.export</code> options. We will modify the exporter so that these are output as <code>batch</code> bundles with <code>ifNoneExist</code> preconditions. We will also modify the <code>Location</code> export so that the <code>managingOrganization</code> reference uses the <code>Organization</code> identifier to allow it to import without reference errors.</li>\n<li>We will modify the per-patient <code>transaction</code> bundle exporter so that, when the <code>exporter.hospital.fhir.export</code> and <code>exporter.practitioner.fhir.export</code> options are specified, <code>Organization</code>, <code>Location</code> and <code>Practitioner</code> resources will be omitted. We will utilize <a href=\"https://www.hl7.org/fhir/http.html#trules\">search URI references</a> in any resource in the patient bundle that needs to refer to an <code>Organization</code>, <code>Location</code> or <code>Practitioner</code>.</li>\n</ul>\n<p>You would first load the hospital and practitioner bundles, then each of the patient bundles. The only reference that wouldn't be fully resolved would be the <code>Location.managingOrganization</code>. There should be no duplicate <code>Organization</code>, <code>Location</code> or <code>Practitioner</code> resources once the load is completed.</p>\n<p>Thoughts?</p>",
        "id": 213283542,
        "sender_full_name": "Marc Hadley",
        "timestamp": 1602680140
    },
    {
        "content": "<p>your proposal sounds great and should definitely address the concern that began this thread.</p>\n<p>I also think there are a couple of finer points that we should hash out in the fhir specification if we can reach consensus about correct behaviors.</p>\n<ol>\n<li>\n<p>is it correct that a failed precondition should abort a transaction bundle rather than skipping a specific entry as not applicable? also do we have clarity on whether these preconditions apply to the state of the server only before the transaction is processed or whether it's okay if a sibling entry in the bundle would be the one to rescue the precondition? This echoes some of the authorization logic that <span class=\"user-mention\" data-user-id=\"197072\">@Paul Church</span> is proposing in <a class=\"stream\" data-stream-id=\"179170\" href=\"/#narrow/stream/179170-smart\">#smart</a> </p>\n</li>\n<li>\n<p>do servers have (or should they) a way to indicate what they will proceed search based references versus failing on them?</p>\n</li>\n</ol>",
        "id": 213287842,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1602682132
    },
    {
        "content": "<p>I am using Synthea to generate test data for my master's thesis. <br>\nAs I want to see how my code performs over different sizes of datasets I wanted to generate data for the same patient, change the <code>years_of_history</code>.</p>\n<ol>\n<li>I noticed that the IDs are not the same in the different datasets. Is there a way achieve this?</li>\n<li>To achieve the same IDs across datasets I wanted to generate the dataset with most years and then generate the others from it. When going through the dataset I noticed that it also contains entries that are not within the range defined in <code>years_of_history</code>. Can somebody tell me why this is the case?</li>\n<li><a href=\"https://medium.com/@rrossmiller24/my-first-experience-with-synthea-synthetic-health-data-generation-74fffd74a138\">This article </a> states that Synthea can generate up to 10 years of medical history. Is this true or can it actually generate more? I went up to the 72 years of my patient and the size of the dataset definitely increased.</li>\n</ol>\n<p>Thank you in advance.</p>",
        "id": 222855870,
        "sender_full_name": "Julius Severin",
        "timestamp": 1610716908
    },
    {
        "content": "<p>In <code>src/main/resources/synthea.properties</code> the property defaults to <code>exporter.years_of_history = 10</code></p>",
        "id": 222864420,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1610721180
    },
    {
        "content": "<p>Change the value to <code>0</code> if you want all patient history, or <code>50</code> if you want 50 years, etc.</p>",
        "id": 222864484,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1610721201
    },
    {
        "content": "<p>Some items are unaffected by the years of history filter. For example, if a patient was diagnosed with Diabetes or another chronic condition prior to the filtering period (say diagnosed 11 years ago, if the filter is 10 years) and that condition was not resolved (for example, with a condition end date) then it will be included.</p>",
        "id": 222864786,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1610721324
    },
    {
        "content": "<p>If you want IDs the same across datasets use seeds (e.g. <code>-s 123</code> and <code>-cs 456</code>) and a reference date (e.g. <code>-r 20200115</code>).</p>\n<p>For example:</p>\n<div class=\"codehilite\"><pre><span></span><code>./run_synthea -s 123 -cs 456 -p 1 -r 20200115 --exporter.years_of_history=10\n./run_synthea -s 123 -cs 456 -p 1 -r 20200115 --exporter.years_of_history=20\n</code></pre></div>\n<p>The data across the two files (you should move or rename them between runs because it will try to rewrite the files in <code>/output</code>) will be identical in the overlapping years.</p>",
        "id": 222865838,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1610721843
    }
]