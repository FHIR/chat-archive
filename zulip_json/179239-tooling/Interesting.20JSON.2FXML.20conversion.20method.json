[
    {
        "content": "<p>Not just... could enrich or redact.... AWS S3 Object lambda...... was thinking wrt fhir XML &lt;&gt; JSON conversions on the fly. ie. using <a href=\"https://aws.amazon.com/blogs/aws/introducing-amazon-s3-object-lambda-use-your-code-to-process-data-as-it-is-being-retrieved-from-s3/\">https://aws.amazon.com/blogs/aws/introducing-amazon-s3-object-lambda-use-your-code-to-process-data-as-it-is-being-retrieved-from-s3/</a></p>\n<p>e.g. <a href=\"https://itnext.io/serverless-framework-use-aws-s3-object-lambda-to-resize-images-on-the-fly-868a37017f3c\">https://itnext.io/serverless-framework-use-aws-s3-object-lambda-to-resize-images-on-the-fly-868a37017f3c</a> </p>\n<p>Are there standard FHIR XML &lt;&gt; JSON conversion routines which could be plugged in? <br>\nLoad Object model &amp; then output in desired markup?</p>",
        "id": 232237972,
        "sender_full_name": "Adam Flinton",
        "timestamp": 1617008922
    },
    {
        "content": "<p>which language are you looking for? here is a <a href=\"https://github.com/lantanagroup/FHIR.js\">node.js library</a> but there are others with java and .net around.</p>",
        "id": 232251145,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1617016426
    },
    {
        "content": "<p>In case of FHIR simple conversion to/from XML &lt;&gt; JSON does not work well. It may lose structure/semantic in case of narrative, arrays, element's extensions, etc.</p>",
        "id": 232299793,
        "sender_full_name": "Shamil Nizamov",
        "timestamp": 1617037009
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192195\">@Shamil</span> do you have an example? I think it is one of the strengths that you can have different representations (e.g. xml, json) with a FHIR resource and the servers are able to serve these different representations. I'm not aware that you lose structure/semantic.</p>",
        "id": 232318428,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1617044504
    },
    {
        "content": "<p>One of the issues is trying to map types without context.  E.g., if you have an XML literal: <code>&lt;value value=\"6\"/&gt;</code>, does that map to JSON <code>\"valueInteger\": 6</code>, <code>\"valueDecimal\": 6</code>, <code>\"valuePositiveInt\": 6</code>, or something else?</p>",
        "id": 232319833,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1617045105
    },
    {
        "content": "<p>i almost don't dare to ask ... but where can we put  &lt;value value=\"6\"/&gt; in a fhir resource?</p>",
        "id": 232325498,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1617047452
    },
    {
        "content": "<p>you don't? you use &lt;valueString value=\"whatever\"/&gt; like normal<br>\nI think the biggest disconnects happen around extending basic datatypes</p>",
        "id": 232327888,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1617048480
    },
    {
        "content": "<p>Sure you do.  Inside an Observation that is perfectly valid XML (<a href=\"http://hl7.org/fhir/observation-example-f001-glucose.xml.html\">example</a>).</p>\n<p>By context, I know that a <code>&lt;value&gt;</code> tag inside a <code>&lt;valueQuantity&gt;</code> tag is a decimal type, but it's not obvious from the fragment.</p>",
        "id": 232329050,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1617048966
    },
    {
        "content": "<p>True, but it's going to be <code>\"value\": 6.3</code> in the JSON too, so that's not relevant for conversion.  What <em>is</em> relevant is that<br>\n<code>&lt;value value=\"6323\"/&gt;</code> becomes <code>\"value\":\"6323\"</code>; while <code>&lt;value value=\"6.3\"/&gt;</code> becomes <code>\"value\":6.3</code></p>",
        "id": 232329481,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1617049204
    },
    {
        "content": "<p>i.e. there's no way to tell numbers from strings (or booleans) without access to the metadata</p>",
        "id": 232329575,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1617049258
    },
    {
        "content": "<p>Thanks Lloyd, I was going to <del>add</del> clarify that but got sidetracked by something in the house.  This is why I should only write long posts  =)</p>",
        "id": 232329976,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1617049480
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> and <span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span></p>",
        "id": 232330494,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1617049722
    },
    {
        "content": "<p>This is all true, but I think the point is that serious FHIR XML&lt;--&gt;JSON converters <em>should</em> have access to the metadata and therefore should be able to do non-lossy conversion.  Assuming we're not talking about custom resources, then all instances will be based on (at most) <em>constraints</em> of core FHIR types.  Since constraints cannot add new elements, then as long as a converter has the core FHIR type definitions, they should be all set.  As <span class=\"user-mention\" data-user-id=\"237342\">@ryan moehrke</span> pointed out above, converters know even the type of choice elements since there are serialization rules about that.</p>",
        "id": 232332180,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1617050430
    },
    {
        "content": "<p>Yes - I was under the impression that the request was for a generic XML &lt;-&gt; JSON converter that could handle FHIR.  Once you include the core definitions, it is fairly straightforward (and many language-based toolkits will even do this for you).</p>",
        "id": 232336510,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1617052231
    },
    {
        "content": "<p>the other challenge is converting XML --&gt; JSON, and knowing when the output is an array or not. You must have access to the metadata to convert from XML to JSON, but not from JSON to XML</p>",
        "id": 235286875,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1618893939
    },
    {
        "content": "<p>Hi everyone, hopefully I am in the right context here.</p>\n<p>Is there some FHIR-XML &lt;&gt; FHIR-JSON Converter as single tool (e.g. command line) available? I am aware that a FHIR-Server can $convert an input to an specified output, but this is not applicable for me.<br>\nThe HL7-Validator is able to consume input as XML or JSON, has it maybe some options for this purpose I'am not aware of (not found anything about it)?</p>",
        "id": 236291944,
        "sender_full_name": "Dietrich Haag",
        "timestamp": 1619506893
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span></p>",
        "id": 236292367,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1619507088
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"390283\">@Dietrich Haag</span> you can use the <a href=\"https://confluence.hl7.org/display/FHIR/Using+the+FHIR+Validator\">FHIR Java Validator</a> to a conversion, there is a -convert option and you specify the output file and depending on output file format the conversion will be done (json to xml or xml to json).</p>\n<div class=\"codehilite\"><pre><span></span><code>-convert requires the parameters -source and -output. ig may be used to provide a logical model\n</code></pre></div>\n<p>e.g. java -jar validator_cli.jar bundle.json -version 4.0.1 -convert -output ./bundle.xml</p>",
        "id": 236295168,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1619508795
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191478\">@Oliver Egger</span> thanks! <br>\nMy first though about this option was to convert between coding systems or fhir versions, cause I was not aware the output format could be determined by the file extension. </p>\n<p>For the -ig parameter, would it be correct if I insert the same ig's I would do for validating an bundle/resource?</p>\n<p>In my case I validate with following parameters:</p>\n<div class=\"codehilite\"><pre><span></span><code>Params: -version 4.0.1  -locale de -recurse -no-extensible-binding-warnings -tx n/a -ig de.basisprofil.r4-0.9.11.tgz -ig hl7.terminology.r4.tgz -ig kbv.basis-1.1.0 -ig kbv.mio.impfpass-1.00.000/package/KBVCSMIOVaccinationTechnicalEntryType.json -ig kbv.mio.impfpass-1.00.000/package/KBVEXMIOVaccinationBasicImmunization.json -ig kbv.mio.impfpass-1.00.000/package/KBVEXMIOVaccinationEntryType.json -ig kbv.mio.impfpass-1.00.000/package/KBVEXMIOVaccinationFollowUp.json -ig kbv.mio.impfpass-1.00.000/package/KBVVSMIOVaccinationEntryType.json -ig Schluesseltabellen -ig KBV_FHIR_AW Mustermann_Martina_10000_AW.xml\n</code></pre></div>\n<p>So I can convert extending the validation-call with: </p>\n<div class=\"codehilite\"><pre><span></span><code>-convert -output KBV_FHIR_AW Mustermann_Martina_10000_AW.json\n</code></pre></div>\n<p><strong>Problem with umlauts</strong><br>\nConverting json &gt; xml breaks all umlauts. xml &gt; json works fine - than converting this json&gt; xml and comparing the original xml with the converted xml show the broken umlauts e.g.: <code>\"MÃ¼ller\" &gt; \"M&amp;#xFC;ller\" </code></p>\n<p>Unclear is the \"-source\" option. What would I use it for?</p>",
        "id": 236323434,
        "sender_full_name": "Dietrich Haag",
        "timestamp": 1619524880
    },
    {
        "content": "<blockquote>\n<p>My first though about this option was to convert between coding systems or fhir versions,</p>\n</blockquote>\n<p>for fhir version you can use the -transform parameter <a href=\"#narrow/stream/179166-implementers/topic/R3.20to.20R4.20StructureDefinition.20transformation\">see</a></p>\n<blockquote>\n<p>For the -ig parameter, would it be correct if I insert the same ig's I would do for validating an bundle/resource?</p>\n</blockquote>\n<p>the ig parameter are not necessary for the conversion (except you would provide a logical model which you are parsing or converting to)</p>\n<blockquote>\n<p>Problem with umlauts</p>\n</blockquote>\n<p>I think this is an open issued in the java fhir validator, i prepared a <a href=\"https://github.com/hapifhir/org.hl7.fhir.core/pull/236\">PR</a> but it did not yet get integrated in the code base. maybe you can add a comment below that <a href=\"https://github.com/hapifhir/org.hl7.fhir.core/pull/236\">PR</a>  that you experience the same issue?</p>\n<blockquote>\n<p>Unclear is the \"-source\" option. What would I use it for?</p>\n</blockquote>\n<p>maybe you can add it instead of the file as main parameter? agree that it is not clear ...</p>",
        "id": 236341176,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1619531890
    },
    {
        "content": "<p>Just a nit-pick:</p>\n<blockquote>\n<p>Converting json &gt; xml breaks all umlauts. xml &gt; json works fine - than converting this json&gt; xml and comparing the original xml with the converted xml show the broken umlauts e.g.: \"MÃ¼ller\" &gt; \"M&#xFC;ller\" </p>\n</blockquote>\n<p>As far as I know, this does not \"break\" the umlauts - from the point of view of an XML processor, the XML entity is equivalent to the corresponding character.</p>",
        "id": 236343050,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1619532573
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"390283\">@Dietrich Haag</span> Please also have a look at <a href=\"https://fire.ly/products/firely-terminal/\">Firely Terminal</a>. You would just:</p>\n<ul>\n<li>Push the resources you want to the internal stack, e.g. <code>fhir push *.xml</code></li>\n<li>And then save them in the format you want, e.g. <code>fhir save --json --all</code></li>\n</ul>\n<p>You can control the saved filename with FHIRPath or wrap it in a script to keep the original filename-stem.</p>",
        "id": 236462443,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1619594809
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span> Do I need an running fhir-server to use the Firely Terminal?</p>",
        "id": 236470072,
        "sender_full_name": "Dietrich Haag",
        "timestamp": 1619599067
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"390283\">@Dietrich Haag</span> No, not needed. It just works locally on your filesystem. (It CAN interact as a FHIR client with FHIR servers or <a href=\"http://Simplifier.net\">Simplifier.net</a> if you need it to though)</p>",
        "id": 236470265,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1619599185
    }
]