[
    {
        "content": "<p>I've been trying to slice an observation value[x] using the same type (Quantity) to create an alternative. Discriminator is the code of the Quantity.<br>\nProblem seems to be that Forge puts a fixed value in the Slice name as soon as I select the type, which cannot be changed. If I introduce a slice of the same type the same fixed value is applied to the Slice name, thus giving me a \"duplicate slice name\" error. Is this forbidden in FHIR somehow or is just a tool limitation?</p>",
        "id": 170548111,
        "sender_full_name": "Diego Bosca",
        "timestamp": 1562770337
    },
    {
        "content": "<p>If you want to place constraints on valueQuantity that depend upon the value of valueQuantity.code, I expect that you have to slice valueQuantity on code.<br>\nI do not know if that works.</p>",
        "id": 170598115,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1562814647
    },
    {
        "content": "<p>Thought about that, but then I'm not sure I would be able to define other constraints on each slice</p>",
        "id": 170611102,
        "sender_full_name": "Diego Bosca",
        "timestamp": 1562832151
    },
    {
        "content": "<p>In theory, you can slice valueQuantity on code and then say sliceA is: \"when code ='a', condition 1 applies\" and sliceB is \"when code='b' condition 2 applies\".<br>\nDoes that help?</p>",
        "id": 170695883,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1562909283
    },
    {
        "content": "<p>I think I get what you say, but I'm not sure how to put that kind of conditional slices in Forge</p>",
        "id": 170700870,
        "sender_full_name": "Diego Bosca",
        "timestamp": 1562916153
    },
    {
        "content": "<p>I haven't been able to create it in forge, as it won't allow me to change the slicename. This is what I have (with error as they both have same slicename)</p>\n<div class=\"codehilite\"><pre><span></span> &lt;differential&gt;\n &lt;element id=&quot;Observation.value[x]&quot;&gt;\n&lt;path value=&quot;Observation.value[x]&quot;/&gt;\n &lt;slicing&gt;\n &lt;discriminator&gt;\n&lt;type value=&quot;value&quot;/&gt;\n&lt;path value=&quot;code&quot;/&gt;\n&lt;/discriminator&gt;\n&lt;rules value=&quot;open&quot;/&gt;\n&lt;/slicing&gt;\n&lt;/element&gt;\n &lt;element id=&quot;Observation.value[x]:valueQuantity&quot;&gt;\n&lt;path value=&quot;Observation.valueQuantity&quot;/&gt;\n&lt;sliceName value=&quot;valueQuantity&quot;/&gt;\n &lt;type&gt;\n&lt;code value=&quot;Quantity&quot;/&gt;\n&lt;/type&gt;\n&lt;/element&gt;\n &lt;element id=&quot;Observation.value[x]:valueQuantity.code&quot;&gt;\n&lt;path value=&quot;Observation.valueQuantity.code&quot;/&gt;\n&lt;fixedCode value=&quot;kg&quot;/&gt;\n&lt;/element&gt;\n &lt;element id=&quot;Observation.value[x]:valueQuantity&quot;&gt;\n&lt;path value=&quot;Observation.valueQuantity&quot;/&gt;\n&lt;sliceName value=&quot;valueQuantity&quot;/&gt;\n &lt;type&gt;\n&lt;code value=&quot;Quantity&quot;/&gt;\n&lt;/type&gt;\n&lt;/element&gt;\n &lt;element id=&quot;Observation.value[x]:valueQuantity.code&quot;&gt;\n&lt;path value=&quot;Observation.valueQuantity.code&quot;/&gt;\n&lt;fixedCode value=&quot;g&quot;/&gt;\n&lt;/element&gt;\n&lt;/differential&gt;\n</pre></div>\n\n\n<p>If I were to adjust the slicename manually to make them different it would be correct or I need to do something else?</p>",
        "id": 170798079,
        "sender_full_name": "Diego Bosca",
        "timestamp": 1563038361
    },
    {
        "content": "<p>Even if I change it from outside Forge and I open it then it shows the same error, as Forge seems to ignore the slicename in this case and makes both alternatives to have slicename valueQuantity</p>",
        "id": 170800285,
        "sender_full_name": "Diego Bosca",
        "timestamp": 1563042461
    },
    {
        "content": "<p>You have defined two slices with the same discriminator value of \"Quantity\": one at line 13 and one at line 24. <br>\nSlices MUST be distinct, and these are not.<br>\nTry one slice with discriminator value = \"Quantity\" and in that slice say that valueQuantity.code can be either \"kg\" or \"g\".</p>",
        "id": 170858841,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1563156633
    },
    {
        "content": "<p>but then other constraints such as the minimum/maximum value cannot be different.<br>\nThey are different alternatives that can be distinguished by the code, so I assumed that the discriminator could just point to that</p>",
        "id": 170868453,
        "sender_full_name": "Diego Bosca",
        "timestamp": 1563173323
    },
    {
        "content": "<p>In your example the cardinalities are the same. <br>\nIf you want different cardinalities for kg and g, make the discriminator more complex, e.g. type and code, and then say that for the slice where type = quantity and code = kg, so an so applies.</p>",
        "id": 170941218,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1563233497
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191708\">@Diego Bosca</span>, Forge automatically renames a polymorphic element (name ending with \"[x]\") when constrained to a single type, and also assigns/updates the associated slice name. We've received some reports from customers that this behavior prevents modeling some advanced scenario's using slicing. I am going to look into this to see if we can improve the UI to support this.</p>",
        "id": 170971815,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1563271906
    },
    {
        "content": "<p>Great! I think it's needed when defining alternatives from the same type</p>",
        "id": 170972094,
        "sender_full_name": "Diego Bosca",
        "timestamp": 1563272168
    },
    {
        "content": "<p>Indeed. I will solicit some guidance from the core team on how to handle such scenarios.</p>",
        "id": 170999480,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1563292186
    }
]