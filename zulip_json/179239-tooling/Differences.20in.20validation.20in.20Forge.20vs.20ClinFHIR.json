[
    {
        "content": "<p>I'm curious about the differences in profile validation criteria in Forge vs ClinFHIR. I can generate profiles that give no errors in Forge but return lots of errors in clinFHIR</p>\n<p>Most of errors are multiple occurrences of these errors, repeating for each element in the profile. E.g. </p>\n<p>StructureDefinition.differential.element[0]</p>\n<p>Constraints must be unique by key () constraint.select(key).isDistinct()<br>\nTypes must be unique by code () type.select(code).isDistinct()<br>\nMust have a modifier reason if isModifier = true () isModifier implies isModifierReason.exists()</p>\n<p>Last one is puzzling because there is no modifier defined. </p>\n<p>This is the profile I'm testing things with (it is autogenerated, the idea is to improve the generation process to make it valid for every tool)</p>\n<div class=\"codehilite\"><pre><span></span>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;StructureDefinition xmlns=&quot;http://hl7.org/fhir&quot;&gt;\n   &lt;id value=&quot;observation-Observation1&quot;/&gt;\n   &lt;extension url=&quot;http://hl7.org/fhir/StructureDefinition/structuredefinition-fmm&quot;&gt;\n      &lt;valueInteger value=&quot;0&quot;/&gt;\n   &lt;/extension&gt;\n   &lt;url value=&quot;http://linkehr.com/fhir/observation-observation1&quot;/&gt;\n   &lt;version value=&quot;0&quot;/&gt;\n   &lt;name value=&quot;Observation1&quot;/&gt;\n   &lt;status value=&quot;draft&quot;/&gt;\n   &lt;date value=&quot;2019-11-12&quot;/&gt;\n   &lt;publisher value=&quot;openEHR&quot;/&gt;\n   &lt;contact&gt;\n      &lt;telecom&gt;\n         &lt;system value=&quot;url&quot;/&gt;\n         &lt;value value=&quot;http://www.veratech.es&quot;/&gt;\n      &lt;/telecom&gt;\n   &lt;/contact&gt;\n   &lt;description value=&quot;was empty&quot;/&gt;\n   &lt;fhirVersion value=&quot;4.0.0&quot;/&gt;\n   &lt;mapping&gt;\n      &lt;identity value=&quot;openEHR&quot;/&gt;\n      &lt;uri value=&quot;http://openehr.org&quot;/&gt;\n      &lt;name value=&quot;openEHR Mapping&quot;/&gt;\n   &lt;/mapping&gt;\n   &lt;mapping&gt;\n      &lt;identity value=&quot;openEHR-natural&quot;/&gt;\n      &lt;uri value=&quot;http://openehr.org&quot;/&gt;\n      &lt;name value=&quot;openEHR natural path&quot;/&gt;\n   &lt;/mapping&gt;\n   &lt;kind value=&quot;complex-type&quot;/&gt;\n   &lt;abstract value=&quot;false&quot;/&gt;\n   &lt;type value=&quot;Observation&quot;/&gt;\n   &lt;baseDefinition value=&quot;http://hl7.org/fhir/StructureDefinition/Observation&quot;/&gt;\n   &lt;derivation value=&quot;constraint&quot;/&gt;\n   &lt;differential&gt;\n      &lt;element id=&quot;Observation&quot;&gt;\n         &lt;path value=&quot;Observation&quot;/&gt;\n         &lt;short value=&quot;OBSERVATION1&quot;/&gt;\n         &lt;definition value=&quot;&quot;/&gt;\n         &lt;min value=&quot;0&quot;/&gt;\n      &lt;/element&gt;\n      &lt;element id=&quot;Observation.component&quot;&gt;\n         &lt;path value=&quot;Observation.component&quot;/&gt;\n         &lt;slicing&gt;\n            &lt;discriminator&gt;\n               &lt;type value=&quot;value&quot;/&gt;\n               &lt;path value=&quot;code.coding.code&quot;/&gt;\n            &lt;/discriminator&gt;\n            &lt;discriminator&gt;\n               &lt;type value=&quot;value&quot;/&gt;\n               &lt;path value=&quot;code.coding.system&quot;/&gt;\n            &lt;/discriminator&gt;\n            &lt;ordered value=&quot;false&quot;/&gt;\n            &lt;rules value=&quot;open&quot;/&gt;\n         &lt;/slicing&gt;\n      &lt;/element&gt;\n      &lt;element id=&quot;Observation.component:Element1_1&quot;&gt;\n         &lt;path value=&quot;Observation.component&quot;/&gt;\n         &lt;sliceName value=&quot;Element1_1&quot;/&gt;\n         &lt;short value=&quot;ELEMENT1.1&quot;/&gt;\n         &lt;min value=&quot;0&quot;/&gt;\n      &lt;/element&gt;\n      &lt;element id=&quot;Observation.component:Element1_1.value[x]&quot;&gt;\n         &lt;path value=&quot;Observation.component.value[x]&quot;/&gt;\n         &lt;type&gt;\n            &lt;code value=&quot;CodeableConcept&quot;/&gt;\n         &lt;/type&gt;\n         &lt;mapping&gt;\n            &lt;identity value=&quot;openEHR&quot;/&gt;\n            &lt;map value=&quot;/content[at0001]/items[at0004]/data[at0012]/events[at0014]/data[at0005]/items[at0006]&quot;/&gt;\n         &lt;/mapping&gt;\n         &lt;mapping&gt;\n            &lt;identity value=&quot;openEHR-natural&quot;/&gt;\n            &lt;map value=&quot;/content[SECTION1]/items[OBSERVATION1]/data[at0012]/events[INTERVAL_EVENT]/data[ITEM_TREE]/items[ELEMENT1.1]&quot;/&gt;\n         &lt;/mapping&gt;\n      &lt;/element&gt;\n      &lt;element id=&quot;Observation.component:Element1_2&quot;&gt;\n         &lt;path value=&quot;Observation.component&quot;/&gt;\n         &lt;sliceName value=&quot;Element1_2&quot;/&gt;\n         &lt;short value=&quot;ELEMENT1.2&quot;/&gt;\n         &lt;min value=&quot;0&quot;/&gt;\n      &lt;/element&gt;\n      &lt;element id=&quot;Observation.component:Element1_2.value[x]&quot;&gt;\n         &lt;path value=&quot;Observation.component.value[x]&quot;/&gt;\n         &lt;type&gt;\n            &lt;code value=&quot;Quantity&quot;/&gt;\n         &lt;/type&gt;\n      &lt;/element&gt;\n      &lt;element id=&quot;Observation.component:Element1_2.value[x].value&quot;&gt;\n         &lt;path value=&quot;Observation.component.value[x].value&quot;/&gt;\n         &lt;min value=&quot;1&quot;/&gt;\n         &lt;max value=&quot;1&quot;/&gt;\n         &lt;type&gt;\n            &lt;code value=&quot;string&quot;/&gt;\n         &lt;/type&gt;\n      &lt;/element&gt;\n      &lt;element id=&quot;Observation.component:Element1_2.value[x].system&quot;&gt;\n         &lt;path value=&quot;Observation.component.value[x].system&quot;/&gt;\n         &lt;min value=&quot;1&quot;/&gt;\n         &lt;max value=&quot;1&quot;/&gt;\n         &lt;type&gt;\n            &lt;code value=&quot;uri&quot;/&gt;\n         &lt;/type&gt;\n         &lt;fixedUri value=&quot;http://unitsofmeasure.org&quot;/&gt;\n      &lt;/element&gt;\n      &lt;element id=&quot;Observation.component:Element1_2.value[x].code&quot;&gt;\n         &lt;path value=&quot;Observation.component.value[x].code&quot;/&gt;\n         &lt;min value=&quot;1&quot;/&gt;\n         &lt;max value=&quot;1&quot;/&gt;\n         &lt;type&gt;\n            &lt;code value=&quot;code&quot;/&gt;\n         &lt;/type&gt;\n      &lt;/element&gt;\n   &lt;/differential&gt;\n&lt;/StructureDefinition&gt;\n</pre></div>",
        "id": 182550696,
        "sender_full_name": "Diego Bosca",
        "timestamp": 1575462493
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191321\">@David Hay</span></p>",
        "id": 182553467,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575464887
    },
    {
        "content": "<p>Well, clinFHIR itself doesn't do any validation - it just calls the $validate operation on the servers you select, so that's where to look for differences. Which servers are the ones that generate errors? BTW - intending to remove the requirement to have to declare the profile in the instance when I get a chance - a work in progress ATM...</p>",
        "id": 182578191,
        "sender_full_name": "David Hay",
        "timestamp": 1575480421
    },
    {
        "content": "<p>I just pasted the profile and pressed the validation button :)</p>",
        "id": 182641434,
        "sender_full_name": "Diego Bosca",
        "timestamp": 1575537864
    },
    {
        "content": "<p>Ah. Assuming you're using the CF validator (<a href=\"https://fhirblog.com/2019/11/12/validating-a-resource/\" target=\"_blank\" title=\"https://fhirblog.com/2019/11/12/validating-a-resource/\">https://fhirblog.com/2019/11/12/validating-a-resource/</a>) then it's intended to validate conformance of a resource <strong>instance</strong> to a profile - not the profile itself. </p>\n<p>The idea is that you save the profile on a server (like hapi or grahames server) - along with any dependant artifacts like extension definitions or terminology, then create an instance that is supposed to be conformant to that profile and paste <strong>that</strong> into the validator and select the server. </p>\n<p>Right now, you need to indicate the profile in the resource meta element - working on that</p>\n<p>All the app does is to call the $validate operation on the indicatedserver/s and show the results...</p>",
        "id": 182662488,
        "sender_full_name": "David Hay",
        "timestamp": 1575555301
    }
]