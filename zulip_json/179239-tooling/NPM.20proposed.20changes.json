[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> :</p>\n<ul>\n<li><a href=\"http://jira.hl7.org/browse/FHIR-28342\">J#28342</a></li>\n<li><a href=\"http://jira.hl7.org/browse/FHIR-28344\">J#28344</a></li>\n</ul>",
        "id": 207888470,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1598298670
    },
    {
        "content": "<p>That means that they are now going to be formally discussed before we can make these changes to the spec, right?</p>",
        "id": 208359294,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1598629373
    },
    {
        "content": "<p>Btw, I see that some packages have a dependency on a \"current\" version of another package. That has no meaning in our specification or in npm afaik.</p>",
        "id": 208359632,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1598629532
    },
    {
        "content": "<p>I know that your internal build system has a meaning for it, but these packages should probably not (yet) end up in the f eeds</p>",
        "id": 208359746,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1598629581
    },
    {
        "content": "<blockquote>\n<p>I see that some packages have a dependency on a \"current\" version of another package</p>\n</blockquote>\n<p>That was such an obviously stupid thing to try to do that I never thought to add a check in the system to prevent it. So of course, it happened. I don't know what you should do with the ones already published because they're pretty much meaningless. It won't be happening any more</p>",
        "id": 208400176,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1598652654
    },
    {
        "content": "<p>caught me ... we published our ch-core guide with a dependency current to ch-epr-term where we have terminologies defined which are regularly updated with patches or minor changes. but figured out too late that current has a different meaning. we would like to specify that our ch-core is depending on ch-epr-term but accept also patches or minor changes. for npm dependencies this can be <a href=\"https://docs.npmjs.com/misc/semver\">specified</a> e.g. &gt;2.0.0, could such a construct also be used to handle ig dependencies?</p>",
        "id": 208427296,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1598696634
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> I think we excluded any form of solution to this problem?</p>",
        "id": 208452477,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1598732896
    },
    {
        "content": "<p>We excluded npm ranges from the FHIR package spec, to prevent non experienced users shooting themselves in the foot. <br>\nFrom a technical perspective, I don't mind it. We did implement it in Simplifier and Torinox (just in case).</p>\n<p>In the FHIR package spec, we did specify wildcards for patches to solve floating dependencies:<br>\n<a href=\"https://confluence.hl7.org/pages/viewpage.action?pageId=35718629#NPMPackageSpecification-Versionreferences\">https://confluence.hl7.org/pages/viewpage.action?pageId=35718629#NPMPackageSpecification-Versionreferences</a><br>\nI wouldn't mind opening that up to minor updates as well.</p>",
        "id": 208607341,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1598903668
    },
    {
        "content": "<p>e.g. 2.x</p>",
        "id": 208607378,
        "sender_full_name": "Martijn Harthoorn",
        "timestamp": 1598903693
    },
    {
        "content": "<p>yes agree</p>",
        "id": 208608648,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1598904346
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191335\">@Martijn Harthoorn</span> I am adding a new entry into the packages that I generate:</p>\n<div class=\"codehilite\"><pre><span></span><code>  <span class=\"s2\">&quot;notForPublication&quot;</span><span class=\"err\">:</span> <span class=\"kc\">true</span>\n</code></pre></div>\n\n\n<p>(in the package.json). This is added when the build is <em>not</em> building packages that are appropriate for distribution into the publication package system. They are built as part of ci-builds, local builds etc. You should not see them in any real distributed packages, and I would like it if the package server refuses to host such packages- thanks</p>",
        "id": 208771805,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599012077
    },
    {
        "content": "<p>the field will not be added to packages intended for distribution / publication  (e.g. I won't add it, rather than adding it with a value of false)</p>",
        "id": 208771826,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599012118
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Is there a benefit to adding them to the package feed at all then? Wouldn't it be easier to exclude them at that point already?</p>",
        "id": 208841183,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1599060209
    },
    {
        "content": "<p>indeed, I added rule about this at several levels, but I wanted to make sure that creative HL7 editors don't do an end run around the infrastructure, or there's no some path through the process that I've missed</p>",
        "id": 208882062,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599078125
    }
]