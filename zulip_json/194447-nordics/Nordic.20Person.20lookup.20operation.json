[
    {
        "content": "<p>In DK we have a centralized repo for person demographics where we can lookup  a person by using thee national central registration number (CPR). The information that is delivered is the name, the address and so on - all demographics. This feature usually used whenever a new person is created in any healthcare system where the person is then created as a patient (please mind the distinction between patient and person). If I'm not mistaken, you do have the same kind of repo in both sweden and norway, and probably also in finland. If that is the case, may I suggest that we establish a common custom operation for person lookup - eg. `$lookup, that takes a set of Identifiers and based on that, returns a Person with populated national available demographics?</p>",
        "id": 175156909,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1567892912
    },
    {
        "content": "<p>is not the mpi-match operation?</p>",
        "id": 175156925,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1567892950
    },
    {
        "content": "<p>thats on patient</p>",
        "id": 175156933,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1567892974
    },
    {
        "content": "<p>at this moment, the person is not a patient</p>",
        "id": 175156936,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1567892986
    },
    {
        "content": "<p>mpi assumes that you are a patient</p>",
        "id": 175156952,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1567893003
    },
    {
        "content": "<p>unless the naming REALLY sucks</p>",
        "id": 175156984,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1567893014
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  agree?</p>",
        "id": 175156996,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1567893081
    },
    {
        "content": "<p>well, yes, it is. though it would make sense for it also to be on person. At least, if that's the only issue of difference, put it to PA to define it on Person as well as Patient</p>",
        "id": 175157048,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1567893143
    },
    {
        "content": "<p>PA?</p>",
        "id": 175157056,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1567893177
    },
    {
        "content": "<p>there's a huge difference between a patient and a person</p>",
        "id": 175157103,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1567893250
    },
    {
        "content": "<p>well, yes, and no. In this case, does the principles that leads to a master index match apply to person the same way they do to Patient? and I think they do. PA = Patient Administration WG</p>",
        "id": 175157123,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1567893336
    },
    {
        "content": "<p>still ... in the nordics it would be worth profiling that operation then - and a <code>match</code> would be wrong terminology</p>",
        "id": 175157224,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1567893491
    },
    {
        "content": "<p>you ONLY bring a national identifier</p>",
        "id": 175157227,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1567893502
    },
    {
        "content": "<p>that uniquely points to a person</p>",
        "id": 175157229,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1567893514
    },
    {
        "content": "<p>its a lookup function ... its not a matching function</p>",
        "id": 175157242,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1567893560
    },
    {
        "content": "<p>I guess <code>onlyCertainMatches </code>takes care of some of it</p>",
        "id": 175157314,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1567893674
    },
    {
        "content": "<p>right it's still matching underneath</p>",
        "id": 175158101,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1567895271
    },
    {
        "content": "<p>so moving/adding/altering it to person and add some profiling to it could do the job maybe</p>",
        "id": 175158160,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1567895399
    },
    {
        "content": "<p>could do, yes</p>",
        "id": 175175488,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1567930501
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192856\">@Thomas Tveit Rosenlund</span> <span class=\"user-mention\" data-user-id=\"192917\">@Mikael Rinnetmäki</span> <span class=\"user-mention\" data-user-id=\"192681\">@Espen Stranger Seland</span> <span class=\"user-mention\" data-user-id=\"192163\">@Michael Johansen</span></p>",
        "id": 175228240,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1568023274
    },
    {
        "content": "<p>I agree profiling the Person rather than the Patient makes sense. We want to be able to describe the details of the Practitioners and related persons too, and the namings are similar there.</p>",
        "id": 175230838,
        "sender_full_name": "Mikael Rinnetmäki",
        "timestamp": 1568026179
    },
    {
        "content": "<p>Regarding the match operation, we may have a use case for that specific operation too. The Finnish national PHR operates internally with the national person id, but usually only exposes a pseudonym to wellness apps. When wellness apps want to ensure the real identity of the person the pseudonym is for, they should be able to ask the MPI of the PHR to verify that a certain national person id  (that the app can ask from the user) and the pseudonym match. With just a boolean result.<br>\nThe details are still under specification in Finland. Ping <span class=\"user-mention\" data-user-id=\"194340\">@Anna Korpela</span>.</p>",
        "id": 175231183,
        "sender_full_name": "Mikael Rinnetmäki",
        "timestamp": 1568026605
    },
    {
        "content": "<p>I agree  <span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> . Profile the Person resource. In fact that is excactly what we are doing in Norway to offer Person information to the health care sector.</p>\n<p><a href=\"https://simplifier.net/guide/masterpersonindexr4/servicesforpersoninformation\" target=\"_blank\" title=\"https://simplifier.net/guide/masterpersonindexr4/servicesforpersoninformation\">https://simplifier.net/guide/masterpersonindexr4/servicesforpersoninformation</a></p>",
        "id": 175239769,
        "sender_full_name": "Thomas Tveit Rosenlund",
        "timestamp": 1568034915
    },
    {
        "content": "<p>This is consistent with Patient Adminstration expectations, and yes the usage of the $match operation on Person is 100% ok. We initially proposed it as a generic operation for any resource, and have placed it on Patient to get initial feedback, but there is nothing about the definition that  prevents its usage.<br>\nWe would expect to see its use in any directory style resources, including Patient, Person, RelatedPerson, Practitioner and even Organizations or HealthcareServices, but open to usage on any resource.</p>",
        "id": 175847099,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1568664204
    },
    {
        "content": "<blockquote>\n<p>I agree  <span class=\"user-mention silent\" data-user-id=\"191427\">Jens Villadsen</span> . Profile the Person resource. In fact that is excactly what we are doing in Norway to offer Person information to the health care sector.</p>\n<p><a href=\"https://simplifier.net/guide/masterpersonindexr4/servicesforpersoninformation\" target=\"_blank\" title=\"https://simplifier.net/guide/masterpersonindexr4/servicesforpersoninformation\">https://simplifier.net/guide/masterpersonindexr4/servicesforpersoninformation</a></p>\n</blockquote>\n<p>I just had a look at your site on <a href=\"https://simplifier.net/guide/MasterPersonIndexR4/ReadandSearch\" target=\"_blank\" title=\"https://simplifier.net/guide/MasterPersonIndexR4/ReadandSearch\">https://simplifier.net/guide/MasterPersonIndexR4/ReadandSearch</a> - don't you guys have security/audit log issues having the identifier as part of the query param - or is that only a danish issue</p>",
        "id": 176406682,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569270702
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> - shouldn't the response example on <a href=\"http://build.fhir.org/patient-operation-match.html\" target=\"_blank\" title=\"http://build.fhir.org/patient-operation-match.html\">http://build.fhir.org/patient-operation-match.html</a> be wrapped in a Parameters resource?</p>",
        "id": 176411475,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569274209
    },
    {
        "content": "<p>Doesn't have to be no.</p>",
        "id": 176411755,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1569274443
    },
    {
        "content": "<p>you're right</p>",
        "id": 176411960,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569274623
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> - FWIW, I've implemented $match on Person in an upcoming national danish solution ;)</p>",
        "id": 176497547,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569353484
    },
    {
        "content": "<p>Have you done a profile for the person resource to inform which props you're going to be considering?<br>\n(by just marking those props with must support)</p>",
        "id": 176506591,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1569359395
    },
    {
        "content": "<p>No but I have considered it - basically the $match operation is not a great fit for my need. The only thing I require is the identifier on the person, and that Identifier is profiled as a datatype. As such the match certainty can only be 0 or 1.0 as it basically is just a lookup in a national register</p>",
        "id": 176544613,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569400839
    },
    {
        "content": "<p>It would require me to have specific profile for person and that profile would not necessarily be usable in other contexts</p>",
        "id": 176544665,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569400910
    },
    {
        "content": "<p>Interesting, with that usage just a regular identifier search would work.</p>",
        "id": 176553914,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1569409889
    },
    {
        "content": "<p>But I guess could increase that later.</p>",
        "id": 176554008,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1569409965
    },
    {
        "content": "<blockquote>\n<p>Interesting, with that usage just a regular identifier search would work.</p>\n</blockquote>\n<p>Which is what I originally implemented</p>",
        "id": 176554014,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569409977
    },
    {
        "content": "<p>So in order to conform to match, I wrapped the Identifier in a person</p>",
        "id": 176554032,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569410007
    },
    {
        "content": "<p>Now I just need the match operation to be formally available on the Person resource as well</p>",
        "id": 176554094,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569410047
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> while we're at it, talking about standardized operations - shouldn't <code>toiCal</code>be a standardized operation on Appointment, since there are already mappings for it?</p>",
        "id": 176554521,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569410518
    },
    {
        "content": "<blockquote>\n<p>I just need the match operation to be formally available on the Person resource as well</p>\n</blockquote>\n<p>you don't <em>need</em> that. You can implement your own operation whether we define it in the spec or not. (though I think it would be good if we did)</p>",
        "id": 176554659,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1569410646
    },
    {
        "content": "<p>I know</p>",
        "id": 176554672,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569410663
    },
    {
        "content": "<p>But since there's a standard for it, I might as well follow it as long as it isn't unnecessarily inconvenient</p>",
        "id": 176554704,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569410715
    },
    {
        "content": "<p>I'd actually considered doing a webcal api on my fhir server so I could hook Outlook direct to it, but never got around to it.</p>",
        "id": 176554823,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1569410800
    },
    {
        "content": "<p>We did talk about permitting it on person and practitioner too, and possibly others.<br>\nWant to log a tracker for the match operation?</p>",
        "id": 176554861,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1569410856
    },
    {
        "content": "<blockquote>\n<p>We initially proposed it as a generic operation for any resource, and have placed it on Patient to get initial feedback, but there is nothing about the definition that  prevents its usage.<br>\nWe would expect to see its use in any directory style resources, including Patient, Person, RelatedPerson, Practitioner and even Organizations or HealthcareServices, but open to usage on any resource.</p>\n</blockquote>\n<p>My two cents are: <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> stated that it could candidate for a standardized operation, so I decided to run for it</p>",
        "id": 176554865,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569410859
    },
    {
        "content": "<blockquote>\n<p>I'd actually considered doing a webcal api on my fhir server so I could hook Outlook direct to it, but never got around to it.</p>\n</blockquote>\n<p>Well ... We already implemented it</p>",
        "id": 176554936,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569410896
    },
    {
        "content": "<p>Nice</p>",
        "id": 176554954,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1569410918
    },
    {
        "content": "<p><a href=\"https://docs.ehealth.sundhed.dk/latest/ig/OperationDefinition-ehealth-appointment-toical.html\" target=\"_blank\" title=\"https://docs.ehealth.sundhed.dk/latest/ig/OperationDefinition-ehealth-appointment-toical.html\">https://docs.ehealth.sundhed.dk/latest/ig/OperationDefinition-ehealth-appointment-toical.html</a></p>",
        "id": 176554965,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569410931
    },
    {
        "content": "<p>That's the export, why not just return the ical binary directly without the bundle?</p>",
        "id": 176555016,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1569411001
    },
    {
        "content": "<p>thats a bug in the doc</p>",
        "id": 176555068,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569411013
    },
    {
        "content": "<p>I just fixed it</p>",
        "id": 176555070,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569411015
    },
    {
        "content": "<p>locally</p>",
        "id": 176555088,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569411036
    },
    {
        "content": "<p>That's an ical export, I meant the free busy calendar data from the schedule too... Over the webcal.<br>\nI implemented it in another project.</p>",
        "id": 176555136,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1569411104
    },
    {
        "content": "<p>Well - I meant the iCal export ;)</p>",
        "id": 176557534,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569413338
    },
    {
        "content": "<p>hence, the name</p>",
        "id": 176557552,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1569413354
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> - have you looked into caldav , and transforming calendar appointment responses from the mail client to AppointmentResponse?</p>",
        "id": 177145366,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1570020047
    },
    {
        "content": "<p>Only in theory for the mappings, though should be quite possible. Though I have done a POC for the free/busy status stuff that I had working with Outlook at one point.</p>",
        "id": 177189450,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1570048257
    },
    {
        "content": "<p>using Schedule/Slot/Appointment?</p>",
        "id": 177196760,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1570053643
    },
    {
        "content": "<p>open source POC?</p>",
        "id": 177196801,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1570053665
    },
    {
        "content": "<p>Nah, was an internal thing.</p>",
        "id": 177211179,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1570071973
    },
    {
        "content": "<p>And yes using schedule/slot (appointments don't come into free busy)</p>",
        "id": 177211186,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1570072000
    },
    {
        "content": "<p>Pushing $match to the limit here: I have a need for finding related persons from our central national registers. I already have $match on Person - but that is for a single identifier. The case is that I have all the identifiers of the related persons and I have the possibility in the central registries to look multiple identifiers up in a single invocation. Now, match is currently limited to only a single entity - so ... am I the only one seeing the need for being able to look up multiple persons in a single step? <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 178928280,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1571903096
    },
    {
        "content": "<p>That would make it difficult to associate which ones match to which resource?<br>\nIf you wanted to do it as a so gle call, put them in a bundle.</p>",
        "id": 178929190,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1571904045
    },
    {
        "content": "<p>Do we support bundled operation invocations?</p>",
        "id": 178929217,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1571904069
    },
    {
        "content": "<blockquote>\n<p>That would make it difficult to associate which ones match to which resource?<br>\nIf you wanted to do it as a so gle call, put them in a bundle.</p>\n</blockquote>\n<p>so input would be (1..* identifiers) - response would be (0..* persons with the matching identifiers embedded in each person)</p>",
        "id": 178932125,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1571906881
    },
    {
        "content": "<p>Input are person resources aren't they...<br>\nIt's not just a set of identifiers.<br>\nIt's a set of data to try match a resource.<br>\n(eg these identifiers, this name, gender, dob and some contact numbers /addresses)</p>",
        "id": 178934291,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1571908845
    },
    {
        "content": "<p>If you're just using identifiers, 6hen use normal searches....</p>",
        "id": 178934315,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1571908874
    },
    {
        "content": "<p>yeah - it sounds like I need to provide my own custom operation taking a set of identifiers</p>",
        "id": 178934388,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1571908925
    }
]