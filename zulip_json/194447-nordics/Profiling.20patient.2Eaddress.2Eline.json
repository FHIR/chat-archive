[
    {
        "content": "<p>Hi Nordic friends!<br>\nToday we had a long session looking at how to profile address and specifically the <strong>line</strong> element. </p>\n<p>As you probably know, a Patient can have 0..* <strong>address</strong>. Each address has these attributes to define the actual address:</p>\n<ul>\n<li><strong>text</strong> 0..1 Text representation of the address</li>\n<li><strong>line</strong> 0..* Street name, number, direction &amp; P.O. Box etc. This repeating element order: The order in which lines should appear in an address label</li>\n<li><strong>city</strong> 0..1 Name of city, town etc.</li>\n<li><strong>district</strong> 0..1 District name (aka county</li>\n<li><strong>state</strong> 0..1 Sub-unit of country (abbreviations ok)</li>\n<li><strong>postalCode </strong>0..1 Postal code for area</li>\n<li><strong> country</strong> 0..1 Country (e.g. can be ISO 3166 2 or 3 letter code)</li>\n</ul>\n<p>The requirements we have in Sweden, and that should be very similar to requirements in other countries, is that we want to clearly be able to distinguish between the different parts of an address that here would be captured in <strong>line</strong>. These are the obvious ones for a standard Swedish address:</p>\n<ul>\n<li><strong>care of</strong> 0..1 - This as you probably know is when the address belongs to someone else than the recipient, so this would often be a name, e.g. \"c/o Andersson\"</li>\n<li><strong>full street address (inlcuding number)</strong> 0..* - This is a combination of street name, house number and any pre/suffixes, e.g. \"Sweden street 7A\"</li>\n<li><strong>unit id</strong> 0..1 - This is the number of an apartment in an apartment building, it uniquely identifiers the apartment within a building. e.g. \"1302\"</li>\n</ul>\n<p>We have looked into how we potentially could support the requirement to be able to explicitly support these address parts. These are the options we have found:</p>\n<p><strong>Option 1 - Use slicing on line element</strong></p>\n<p>Line (0..*)<br>\ncareOf (slice)  (0..1)<br>\nstreetAddress (slice)  (0..*)<br>\nunitId (slice) (0..1)</p>\n<p>This was ruled out directly as slices require a discriminator (like a code system), and that is not available as Line is a String. <strong>Not ok</strong></p>\n<p><strong>Option 2 - Leave Line as is</strong></p>\n<p>Line (0..*)<br>\nThis is not good enough as in a Swedish context we need to distinguish care of, street address and unit Id. And by doing it this way, we cannot do that. <strong>Not ok</strong></p>\n<p><strong>Option 3 - Use standard exentions on Line for careOf, streeetAddressLine, unitId</strong></p>\n<p>There are the following standard extensions. </p>\n<p><a href=\"http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-careOf\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-careOf\">http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-careOf</a> (0..1)<br>\n<a href=\"http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-streetAddressLine\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-streetAddressLine\">http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-streetAddressLine</a> (0..*)<br>\n<a href=\"http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-unitID\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-unitID\">http://hl7.org/fhir/StructureDefinition/iso21090-ADXP-unitID</a> (0..1)</p>\n<p>It might seem like a good idea to use these, and that is also how e.g. the Dutch address is done. But there are problems with this, the main one is that these extend Line and not address as a whole. This means that each Line can have a careOf, streetAddressLine and UnitID, this just feels incorrect. CareOf, streetAddressLine and UnitID are in fact lines themselves. <strong>Not ok</strong></p>\n<p><strong>Option 4 - Use address part qualifier with an extension on each line</strong><br>\nThere is a standard value set for address part qualifier that meets our requirements (<a href=\"https://www.hl7.org/fhir/v3/AddressPartType/vs.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/v3/AddressPartType/vs.html\">https://www.hl7.org/fhir/v3/AddressPartType/vs.html</a>). They contain the codes for the above address parts (CAR, SAL and UNID) as well as other address parts that may be required by other countries or use cases (like AL+BNN for address line and building number for those who want to break those out from the street address). By creating an extension \"addressLine-qualifier\" with context address.line and a value set binding to this value set we can meet our requirements in what we believe is the best way. </p>\n<p>This is also the same approach that we have for given name which has similar requirements to specify which of the given name strings is the \"preferred name\" (swe: tilltalsnamn\"). There we use standard extension <a href=\"http://hl7.org/fhir/extension-iso21090-en-qualifier.html\" target=\"_blank\" title=\"http://hl7.org/fhir/extension-iso21090-en-qualifier.html\">http://hl7.org/fhir/extension-iso21090-en-qualifier.html</a> to identify name parts and specifically \"CL\" for our use case. </p>\n<p><strong>Question</strong><br>\nWhat type of requirements do you have on address line? And how have you solved them? As I see it, others must have very similar requirements as ours, and the solutions vary a lot between the profiles I have checked. </p>\n<p>We have also added a CR to add a standard extension for this in the same way there is a standard extension for the name part qualifier (#20990)</p>\n<p>Profiling patient.address.line</p>",
        "id": 164266300,
        "sender_full_name": "Martin Grundberg",
        "timestamp": 1556288821
    },
    {
        "content": "<blockquote>\n<p>This means that each Line can have a careOf, streetAddressLine and UnitID, this just feels incorrect. CareOf, streetAddressLine and UnitID are in fact lines themselves</p>\n</blockquote>\n<p>That is not always the case. You might have 2 lines that contain those 3 bits. The intent is that you'd only have one unitID or careOf but it would be on which line was appropriate. Though you might have more precisely defined rules than other countries do</p>",
        "id": 164294601,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556309857
    },
    {
        "content": "<p>We have the same requirements in DK - it is however not solved yet</p>",
        "id": 164571976,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1556654781
    },
    {
        "content": "<p>We went with option number 3 like the Dutch <span class=\"user-mention\" data-user-id=\"197234\">@Martin Grundberg</span> <br>\n<a href=\"https://simplifier.net/grunndata/gd-address-international\" target=\"_blank\" title=\"https://simplifier.net/grunndata/gd-address-international\">https://simplifier.net/grunndata/gd-address-international</a></p>\n<p>I don't feel the possibility of adding several extensions to one line is a problem, unless you have a requirement to be able to validate the fact that there is only one extension in each line. </p>\n<p>I guess if you want to validate only one extension on each line you have to use sliceing as described in option 1. This can work even without a cumputable discriminator because it is not mandatory to define computable discrimintators for slices, you could just put in a description.</p>",
        "id": 164777802,
        "sender_full_name": "Thomas Tveit Rosenlund",
        "timestamp": 1556873397
    }
]