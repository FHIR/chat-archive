[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"221444\">@Noemi Deppenwiese</span> Könntest du bitte deine Argumentation bezüglich <a href=\"https://simplifier.net/medizininformatikinitiative-laborprofile/~issues/605\" title=\"https://simplifier.net/medizininformatikinitiative-laborprofile/~issues/605\">https://simplifier.net/medizininformatikinitiative-laborprofile/~issues/605</a> nochmal ein wenig genauer ausführen? Gruppe und Bereich würden unsers Erachtens die gleiche \"Category\" kodieren und könnten somit verschiedene Codings eines CodeableConcepts sein.</p>",
        "id": 194541236,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1587211701
    },
    {
        "content": "<p>Nach Rücksprache im Team war unser Problem folgendes: Im UML sind Gruppe und Bereich als 1..*, also verpfilchtend eingetragen. Bereich ist meistens noch machbar, aber gerad gruppe für jeden LOINC festzulegen ist erheblicher Mehraufwand. Deshalb würden wir uns wünschen, dass die beiden Felder explizit als optional deklariert werden.<br>\nWas uns da zusätzlich irritiert hat, war dass Gruppe und Bereich im category slicing nicht vorkommen. Falls das unten auf der Seite verlinkte VS genutzt werden kann/soll (hier ist der text auch nicht ganz eindeutig), wäre noch eine formale Slice-Definition nett. Ansonsten würde hier vielleicht ein Beispiel für mehr Klarheit sorgen...<br>\nBereich und Gruppe dann in das selbe CodeableConcept mit den Codes für \"Laborwert\" zu packen ist für uns dann auch in Ordnung.</p>",
        "id": 196317011,
        "sender_full_name": "Noemi Deppenwiese",
        "timestamp": 1588689643
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194875\">@Danny Ammon</span> Könntest du das bitte im UML beheben? Gruppe und Bereich sollte ja optional sein</p>",
        "id": 196318572,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1588690287
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"221444\">@Noemi Deppenwiese</span> Danke, Problem verstanden :)</p>",
        "id": 196318749,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1588690347
    },
    {
        "content": "<p>Das Problem mit einer formalen Slice Definition ist, dass category hier auf system geslict ist. Man bräuchte hier eine Kombination von Slice By Value / Pattern und einem ValueSet binding (an das Laborbereich VS das unter Terminologie verlinkt ist). Das war bisher nicht möglich. Siehe <a href=\"https://jira.hl7.org/browse/FHIR-25206\" title=\"https://jira.hl7.org/browse/FHIR-25206\">https://jira.hl7.org/browse/FHIR-25206</a></p>",
        "id": 196318992,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1588690463
    },
    {
        "content": "<p>Da es so oder so optional ist, haben wir es einfach weg gelassen</p>",
        "id": 196319133,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1588690526
    },
    {
        "content": "<p>Hab jetzt im Text nochmal hervorgehoben, dass es optional ist.</p>",
        "id": 196319554,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1588690718
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"193430\">Alexander Zautke</span> <a href=\"#narrow/stream/179307-german.2Fmi-initiative/topic/.5BLabor.5D.20Observation.2Ecategory.20slicing/near/196318572\" title=\"#narrow/stream/179307-german.2Fmi-initiative/topic/.5BLabor.5D.20Observation.2Ecategory.20slicing/near/196318572\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"194875\">Danny Ammon</span> Könntest du das bitte im UML beheben? Gruppe und Bereich sollte ja optional sein</p>\n</blockquote>\n<p>Erledigt – neue UML-Version ist im GitHub!</p>",
        "id": 196320150,
        "sender_full_name": "Danny Ammon",
        "timestamp": 1588690981
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"193430\">Alexander Zautke</span> <a href=\"#narrow/stream/179307-german.2Fmi-initiative/topic/.5BLabor.5D.20Observation.2Ecategory.20slicing/near/196318992\" title=\"#narrow/stream/179307-german.2Fmi-initiative/topic/.5BLabor.5D.20Observation.2Ecategory.20slicing/near/196318992\">said</a>:</p>\n<blockquote>\n<p>Das Problem mit einer formalen Slice Definition ist, dass category hier auf system geslict ist. Man bräuchte hier eine Kombination von Slice By Value / Pattern und einem ValueSet binding (an das Laborbereich VS das unter Terminologie verlinkt ist). Das war bisher nicht möglich. Siehe <a href=\"https://jira.hl7.org/browse/FHIR-25206\" title=\"https://jira.hl7.org/browse/FHIR-25206\">https://jira.hl7.org/browse/FHIR-25206</a></p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"193430\">@Alexander Zautke</span> <br>\nDas slicing auf system ist ein Problem, wenn man noch andere LOINCs z.B. für den Laborbereich in selben codeableConcept angeben will. Dann hat man sowohl ein inkorrektes LOINC Slice als auch eines zu viel. Kannst Du das auf pattern ändern?</p>",
        "id": 196324029,
        "sender_full_name": "Noemi Deppenwiese",
        "timestamp": 1588692519
    },
    {
        "content": "<p>Ja, mach ein Pattern draus, dachte das es schon wäre</p>",
        "id": 196325367,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1588693109
    },
    {
        "content": "<p>Fixed, das coding wird  nun entschieden auf Basis von zwei Discriminator, Pattern Slice auf coding.system und Pattern Slice auf Coding.code. Für abgeleitete Profile würde das heißen auf beiden Elementen müsste ein pattern[x] Element hinterlegt werden oder ein ValueSet Binding (nach den neuen Regeln wie im JIRA Ticket oben beschrieben). Ich finde das eine Lösung mit der man leben kann.</p>",
        "id": 197850640,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1589724035
    }
]