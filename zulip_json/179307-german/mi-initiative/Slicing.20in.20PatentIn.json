[
    {
        "content": "<p>name und address slicen laut Regeln über $this(Pattern), aber tatsächlich wird ja use bzw. type zur unterscheidung benutzt. Warum ist das Slicing dann nicht auf use bzw. type? Das würde die Validatoren weniger verwirren und die Fehlersuche einfacher machen <span aria-label=\"see no evil\" class=\"emoji emoji-1f648\" role=\"img\" title=\"see no evil\">:see_no_evil:</span></p>",
        "id": 209305973,
        "sender_full_name": "Noemi Deppenwiese",
        "timestamp": 1599491554
    },
    {
        "content": "<p>Andere Projekte wollten mit anderen Slices und Re-Slices abenteuerliche Dinge anstellen. Daher brauchten wir hier jeweils ein Pattern.</p>",
        "id": 209316185,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1599499867
    },
    {
        "content": "<p>Vielleicht kann <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> ja mal einen Feature-Request für verbesserte Error Message basteln ;)</p>",
        "id": 209316218,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1599499918
    },
    {
        "content": "<p>Ahh ok. Also nötig kompliziert :)<br>\nDer Java Validator beschwert sich bei Patters für Nicht-Standard-Datentypen häufig über <code>Nicht unterstützter fixed Pattern Type für Diskriminator($this)</code> was einem nicht viel weiter hilft um den Fehler in der Instanz zu finden...</p>",
        "id": 209355579,
        "sender_full_name": "Noemi Deppenwiese",
        "timestamp": 1599551742
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"221444\">Noemi Deppenwiese</span> <a href=\"#narrow/stream/179307-german.2Fmi-initiative/topic/Slicing.20in.20PatentIn/near/209355579\">said</a>:</p>\n<blockquote>\n<p>Ahh ok. Also nötig kompliziert :)<br>\nDer Java Validator beschwert sich bei Patters für Nicht-Standard-Datentypen häufig über <code>Nicht unterstützter fixed Pattern Type für Diskriminator($this)</code> was einem nicht viel weiter hilft um den Fehler in der Instanz zu finden...</p>\n</blockquote>\n<p>gibt es dazu ein nachvollziehbares Beispiel?</p>",
        "id": 209380202,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1599568963
    },
    {
        "content": "<p>Patient mit MII Profil und den schon von <span class=\"user-mention\" data-user-id=\"196715\">@Marvin Kampf</span> geposteten Extensions am name</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"s2\">&quot;name&quot;</span><span class=\"err\">:</span> <span class=\"p\">[</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"nt\">&quot;use&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;official&quot;</span><span class=\"p\">,</span>\n                        <span class=\"nt\">&quot;_family&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                            <span class=\"nt\">&quot;extension&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                                <span class=\"p\">{</span>\n                                    <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://hl7.org/fhir/StructureDefinition/data-absent-reason&quot;</span><span class=\"p\">,</span>\n                                    <span class=\"nt\">&quot;valueCode&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;unsupported&quot;</span>\n                                <span class=\"p\">}</span>\n                            <span class=\"p\">]</span>\n                        <span class=\"p\">},</span>\n                        <span class=\"nt\">&quot;given&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                            <span class=\"kc\">null</span>\n                        <span class=\"p\">],</span>\n                        <span class=\"nt\">&quot;_given&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                            <span class=\"p\">{</span>\n                                <span class=\"nt\">&quot;extension&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                                    <span class=\"p\">{</span>\n                                        <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://hl7.org/fhir/StructureDefinition/data-absent-reason&quot;</span><span class=\"p\">,</span>\n                                        <span class=\"nt\">&quot;valueCode&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;unsupported&quot;</span>\n                                    <span class=\"p\">}</span>\n                                <span class=\"p\">]</span>\n                            <span class=\"p\">}</span>\n                        <span class=\"p\">]</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">]</span><span class=\"err\">,</span>\n</code></pre></div>\n\n\n<p>Führt zu folgender Fehlermeldung:</p>\n<div class=\"codehilite\"><pre><span></span><code>issue: ERROR - Bundle.entry[0].resource.ofType(Patient).name[0] - Internal error: Nicht unterstützter fixed Pattern Type für Diskriminator($this) für Slice Patient.name:name: org.hl7.fhir.r5.model.HumanName\nissue: ERROR - Bundle.entry[0].resource.ofType(Patient).name[0] - Internal error: Nicht unterstützter fixed Pattern Type für Diskriminator($this) für Slice Patient.name:geburtsname: org.hl7.fhir.r5.model.HumanName\n</code></pre></div>\n\n\n<p>Ist halt schade, dass man dann nicht validieren kann...</p>",
        "id": 209380730,
        "sender_full_name": "Noemi Deppenwiese",
        "timestamp": 1599569295
    },
    {
        "content": "<p>danke!</p>",
        "id": 209501792,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1599653164
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"221444\">Noemi Deppenwiese</span> <a href=\"#narrow/stream/179307-german.2Fmi-initiative/topic/Slicing.20in.20PatentIn/near/209305973\">said</a>:</p>\n<blockquote>\n<p>name und address slicen laut Regeln über $this(Pattern), aber tatsächlich wird ja use bzw. type zur unterscheidung benutzt. Warum ist das Slicing dann nicht auf use bzw. type? Das würde die Validatoren weniger verwirren und die Fehlersuche einfacher machen <span aria-label=\"see no evil\" class=\"emoji emoji-1f648\" role=\"img\" title=\"see no evil\">:see_no_evil:</span></p>\n</blockquote>\n<p>Bei pattern based slicing diskriminiert man eigentlich immer auf dem zu slicenden objekt. Der Validator unterstützt das auch so, hier aber nicht. Hmmm</p>",
        "id": 209502220,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1599653483
    },
    {
        "content": "<p>Es ist zum Pattern dazu noch ein fixed Value angegeben, evtl. bringt das den Validator aus dem Tritt. Ich schaue da heute Abend mal rein</p>",
        "id": 209502318,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1599653540
    },
    {
        "content": "<p>Das sieht nach einem Validator Bug aus. Slicing ist korrekt, pattern korrekt</p>",
        "id": 209614232,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1599729946
    },
    {
        "content": "<p>habe das mal gemeldet: <a href=\"#narrow/stream/179177-conformance/topic/Validator.3A.20Unsupported.20fixed.20pattern.20type.20for.20discrimin\">https://chat.fhir.org/#narrow/stream/179177-conformance/topic/Validator.3A.20Unsupported.20fixed.20pattern.20type.20for.20discrimin</a></p>",
        "id": 209614243,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1599729951
    },
    {
        "content": "<p>War ein Bug, wird im nächsten Validatorrelease behoben sein.</p>",
        "id": 209975469,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1600070875
    },
    {
        "content": "<p>Vielen Dank für die schnelle Reaktion :)</p>",
        "id": 209975560,
        "sender_full_name": "Noemi Deppenwiese",
        "timestamp": 1600070906
    }
]