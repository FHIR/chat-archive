[
    {
        "content": "<p>In der MII-Reference sorgt momentan constraint <a href=\"https://simplifier.net/packages/de.medizininformatikinitiative.kerndatensatz.meta/1.0.0/files/129452\"><code>mii-reference-1</code></a> dafür, dass entweder Reference.identifier oder Reference.reference gesetzt sind, nicht jedoch beide.</p>\n<p>Was ist die Motivation dahinter?</p>\n<p>Es gibt Szenarien in denen ich aus dem Quellsystem beispielsweise nur die Diagnose und die Patientennumer kenne. Intuitiv würde ich dann eine Condition resource erzeugen und Condition.subject.identifier.type auf <a href=\"https://terminology.hl7.org/1.0.0/CodeSystem-v2-0203.html\">Medical Record</a> und identifier.value auf diese Patientennummer setzen. Wenn ich diese Resource dann aber auch noch an einen FHIR-Server schicken will, bei dem ich weiß das früher oder später eine Patient-Resource mit dieser Nummer angelegt wird, dann will ich eigentlich eine \"saubere\" Referenz auf den Patient haben. Dazu kann ich den update-as-create Mechanismus nutzen und diese \"saubere\" Referenz selber vergeben indem ich <a href=\"http://Patient.id\">Patient.id</a> und Condition.subject.reference auf die selbe technische ID setze. Hier hätte ich also gerne beide Möglichkeiten Referenzen zu definieren.</p>\n<p>Workaround: da ich mit der Patientennummer im identifier alle Informationen habe um selber einen \"Dummy\" Patienten anzulegen könnte man statt nur die Condition zu befüllen immer Bundles mit Condition + Patient (+Encounter) erzeugen. Die Dummy resourcen sind dann (temporär) nicht MII-konform.</p>",
        "id": 209305435,
        "sender_full_name": "Christian Gulden",
        "timestamp": 1599491258
    },
    {
        "content": "<p>Die Motivation dahinter war, dass wir so sicherstellen können, dass wir möglichst wenig Inkontinenzen ermöglichen. Wir wollten nicht, dass Reference.identifier mit dem Identifier aus dem Target der Referenz auseinander laufen. Dann wüsste der FHIR Server nicht mehr wonach diese Referenz aufgelöst werden sollte. Generell sollte jedoch für alle Use Cases einer der beiden Werte ausreichen (wobei ich immer ein Freund von Reference.identifier bin). Chaining und Suchen sollten (wenn ordentlich implementiert) in beiden Fällen gleich funktionieren.</p>",
        "id": 209316692,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1599500444
    },
    {
        "content": "<p>Alles klar, danke! Ich muss das mit suchen/chaining dann nochmal austesten.</p>",
        "id": 209502900,
        "sender_full_name": "Christian Gulden",
        "timestamp": 1599653972
    },
    {
        "content": "<p>ich habs jetzt nochmal ausgetestet und bin auf</p>\n<blockquote>\n<p>Chaining is not supported when using the :identifier modifier, <strong>nor are chaining, includes or reverse includes supported for reference elements that do not have a reference element. </strong>(<a href=\"https://www.hl7.org/fhir/search.html#reference\">https://www.hl7.org/fhir/search.html#reference</a>)</p>\n</blockquote>\n<p>gestoßen. In dem Server mit dem ich es getestet habe ging das dann auch nicht.</p>\n<p>Wir können bei uns als \"workaround\" bevor die Resourcen an den FHIR-Server geschickt werden die identifier-Referenzen zu logischen Referenzen konvertieren, da wir die <a href=\"http://Resource.id\">Resource.id</a> als Hash über dem identifier berechnen.</p>",
        "id": 218299400,
        "sender_full_name": "Christian Gulden",
        "timestamp": 1606749250
    },
    {
        "content": "<p>Kann man an dem Constraint vielleicht doch nochmal rütteln und sowohl logische als auch literale Referenzen zulassen? Wir haben den Anwendungsfall dass wir auch andere Forschungsrepositories inkrementell beladen wollen, hier \"FHIR-unabhängige\" Fall- und Patientennummern an jeder Resource zu haben (als logische Referenz) und gleichzeitig in der Lage zu sein mit den selben Resourcen FHIR-Server abfragbar zu beladen wäre ideal. Im besten Fall würden wir uns den Workaround sparen wollen.</p>",
        "id": 218856800,
        "sender_full_name": "Christian Gulden",
        "timestamp": 1607099674
    },
    {
        "content": "<p>Ja :) Wir haben in der letzten Woche in verschiedenen Kontexten über diesen Constraint diskutiert, ich werde das zeitnah im Kümmererteam ansprechen. Mein Präferenz ist zunehmend aus dem XOR ein OR zumachen, sodass wir Display-Only Referenzen ausschließen.</p>",
        "id": 218894832,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1607118129
    },
    {
        "content": "<p>Im Meta Package ist es nun gefixt. Siehe Version 1.0.2, dieses Update müssen wir nun in allen anderen Packages nachziehen.</p>",
        "id": 220263322,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1608221468
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254858\">@Christian Gulden</span> Würde es erstmal ausreichen, wenn wir ein neues Update für das Modul Person veröffentlichen?</p>",
        "id": 220263424,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1608221521
    },
    {
        "content": "<p>In MIRACUM Erlangen würden wir uns ein neues Labor-Release wünschen mit 1.0.2 Referece-Profil... (Dafür wäre Person erstmal nicht so wichtig)</p>",
        "id": 220350343,
        "sender_full_name": "Noemi Deppenwiese",
        "timestamp": 1608283415
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"193430\">Alexander Zautke</span> <a href=\"#narrow/stream/179307-german.2Fmi-initiative/topic/MII-Reference.20mii-reference-1.20constraint/near/220263424\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"254858\">Christian Gulden</span> Würde es erstmal ausreichen, wenn wir ein neues Update für das Modul Person veröffentlichen?</p>\n</blockquote>\n<p>Klingt gut! Es müssten aber doch primär die Profile aktualisiert werden, die noch das alte Profil nutzen bzw. auf einen Patienten/Encounter referenzieren, oder?</p>",
        "id": 222441363,
        "sender_full_name": "Christian Gulden",
        "timestamp": 1610463283
    },
    {
        "content": "<p>BTW, ich bin ein riesen Fan von <a href=\"https://github.com/renovatebot/renovate\">https://github.com/renovatebot/renovate</a> - da die Paket-Abhängigkeiten in <a href=\"https://github.com/medizininformatik-initiative/kerndatensatzmodul-person/blob/master/package.json\">https://github.com/medizininformatik-initiative/kerndatensatzmodul-person/blob/master/package.json</a>  standard npm format sind könnte man damit ggf. automatisch PRs erzeugen, wenn sich eines der Abhängigkeiten aktualisiert hat.</p>",
        "id": 222441766,
        "sender_full_name": "Christian Gulden",
        "timestamp": 1610463446
    },
    {
        "content": "<p>Darf ich mir an dieser Stelle ein Modul Prozedur mit upgedateder Dependency auf Meta wünschen? :)</p>",
        "id": 222549840,
        "sender_full_name": "Noemi Deppenwiese",
        "timestamp": 1610527279
    },
    {
        "content": "<p>Natürlich darfst du das :) Done.</p>",
        "id": 223244097,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1611070643
    }
]