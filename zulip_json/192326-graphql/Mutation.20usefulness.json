[
    {
        "content": "<p>One of the \"bigger\" advantage of GraphQL, from my point of view, is the improvement of the \"Developer eXperience\", and in particular the fact that APIs become \"typed\" and \"auto-documented\".</p>\n<p>And that's, I think, where it could be an advantage to specify basic CRUD operations (and maybe some other operations) as mutations, to give to developers the \"typing\"/\"validation\" ability.</p>",
        "id": 181629612,
        "sender_full_name": "Florian Briand",
        "timestamp": 1574422433
    },
    {
        "content": "<p>... but FHIR already has this, no? But I agree that I didn't talk about the graphQL schema</p>",
        "id": 181632988,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574425857
    },
    {
        "content": "<p>But REST clients don't have the autocompletion ;) But yeah, we could build REST FHIR clients with this behaviour ;)</p>",
        "id": 181633310,
        "sender_full_name": "Florian Briand",
        "timestamp": 1574426182
    },
    {
        "content": "<p>schema! I don't think we need to build this</p>",
        "id": 181633368,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574426238
    },
    {
        "content": "<p>It's just mater of developer experience. As with programming : the javascript String.localcompare function is fully documented, but it's nice when your IDE help you to remember the function's parameters and the schema of the third parameter \"options\"</p>\n<p>But it was just a hint about the subject, I don't think it's a top-level priority need ;)</p>",
        "id": 181711375,
        "sender_full_name": "Florian Briand",
        "timestamp": 1574507234
    }
]