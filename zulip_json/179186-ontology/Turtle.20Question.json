[
    {
        "content": "<p>I've been working on getting my server to fully support turtle. I'm nearly there..... but some questions. <span class=\"user-mention\" data-user-id=\"191660\">@Harold Solbrig</span> <span class=\"user-mention\" data-user-id=\"191574\">@David Booth</span> <span class=\"user-mention\" data-user-id=\"192267\">@Eric Prud'hommeaux</span></p>",
        "id": 153897344,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500496397
    },
    {
        "content": "<p>the examples in the spec have this:</p>",
        "id": 153897345,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500496409
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span># - resource -------------------------------------------------------------------\n\n&lt;http://hl7.org/fhir/AuditEvent/example-pixQuery&gt; a fhir:AuditEvent;\n</pre></div>",
        "id": 153897346,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500496420
    },
    {
        "content": "<p>then follows the rest of the resource as RDF. Then, there's this:</p>",
        "id": 153897347,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500496438
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span># - ontology header ------------------------------------------------------------\n\n&lt;http://hl7.org/fhir/AuditEvent/example-pixQuery.ttl&gt; a owl:Ontology;\n  owl:imports fhir:fhir.ttl;\n  owl:versionIRI &lt;http://build.fhir.org/AuditEvent/example-pixQuery.ttl&gt; .\n\n# -------------------------------------------------------------------------------------\n</pre></div>",
        "id": 153897348,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500496448
    },
    {
        "content": "<p>this additional section is not documented, and I do not understand what it does, and why the identifying URL is different</p>",
        "id": 153897349,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500496514
    },
    {
        "content": "<p>I also have a very specific question about the turtle: when should literals be wrapped as strings? and when should the xsd:type be specified? </p>\n<p>e.g.</p>",
        "id": 153897350,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500496667
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>     fhir:Coding.code [ fhir:value &quot;24&quot; ];\n     fhir:index 1;\n</pre></div>",
        "id": 153897351,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500496712
    },
    {
        "content": "<p>the spec appears to say that the ^^xsd:type will always be present for fhir:value, but we do not conform to this now. Should we?</p>",
        "id": 153897352,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500496744
    },
    {
        "content": "<p>one additional follow up question: there's no patch format for turtle is there? Does anyone think that there's a point to supporting patch on turtle?</p>",
        "id": 153897353,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500496836
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> the ontology header section is largely to make Protege happy.  <span class=\"user-mention\" data-user-id=\"191660\">@Harold Solbrig</span> can probably best answer the question about the URIs.   You are right that it should be documented though.  For documenting it, it would probably be enough just to add a little more to the embedded comment.</p>",
        "id": 153897359,
        "sender_full_name": "David Booth",
        "timestamp": 1500498643
    },
    {
        "content": "<blockquote>\n<p>this additional section is not documented, and I do not understand what it does, and why the identifying URL is different</p>\n</blockquote>\n<p>First - what it does.  The best way to do this is to work backwards:</p>\n<p>If you import AuditEvent/example-pixQuery.ttl into a reasoner without <em>simultaneously</em> importing fhir.ttl, the reasoner assumes that all of the predicates in the RDF are annotation properties.   If you first import fhir.ttl and <em>then</em> import example-pixQuery.ttl, same thing.  Same for after as well.  We've discussed this with various folks in the Protege and OWL communities and, according to them, this behavior is correct...</p>\n<p>Thus, in order to do <em>anything</em> useful with an RDF record in the context of a reasoner, we (a) have to have fhir.ttl and (b) have to include it as a part of the RDF itself.</p>\n<p>This leads to the next step.  The RDF community never specified an import mechanism.  The only widely adopted import mechanism that works is <code>owl:imports</code>.   If you are going to use <code>owl:imports</code>, you have to have a named \"document\" to do the importing,  and you do this by supplying a URI of type owl:Ontology.</p>\n<p>Thus, the reason we have the header at all.</p>\n<p>The reason that the name is different is that, not surprisingly, declaring that something is simultaneously a fhir:AuditEvent and a owl:Ontology confuses a reasoner badly and, in the Protege case, it remembers that example-pixQuery has a versionIRI and other ontology like properties, but forgets that it has other things</p>",
        "id": 153897360,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1500498653
    },
    {
        "content": "<blockquote>\n<p>the spec appears to say that the ^^xsd:type will always be present for fhir:value, but we do not conform to this now. Should we?</p>\n</blockquote>\n<p>No -- the default type is xsd:string.  We need to fix the spec.  I'm just finishing a JSON to RDF converter that is driven entirely off of fhir.ttl and would be in a good position to give the documentation a once over...</p>\n<p>While we're at it, however, we've got a couple of other issues.  The first is that OWL doesn't know what to do with xsd:gYear, xsd:gYearMonth and xsd:date.  At the moment, I've got a flag in the converter I'm using that says \"OWL target\", but, obviously, there are other things that need to happen as well.</p>",
        "id": 153897361,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1500498956
    },
    {
        "content": "<blockquote>\n<p>one additional follow up question: there's no patch format for turtle is there? Does anyone think that there's a point to supporting patch on turtle?</p>\n</blockquote>\n<p>I think we need to involve <span class=\"user-mention\" data-user-id=\"192267\">@Eric Prud'hommeaux</span>  this one.  There is an RDF path notation described in the Sparql spec, so patch notation would be possible, but I'd be interested in when/if anyone would use it and its ramifications</p>",
        "id": 153897362,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1500499190
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> the short answer is that <em>every</em> literal should be wrapped in string \"quotes\" except for the fhir:index values, and they do not need explicit xsd:type annotations because Turtle supports some short-hand notation for strings and integers.  So the example above is correct and conforming as written.  It is equivalent to writing:</p>\n<div class=\"codehilite\"><pre><span></span>fhir:Coding.code [ fhir:value &quot;24&quot;^^xsd:string ];\nfhir:index &quot;1&quot;^^xsd:integer;\n</pre></div>",
        "id": 153897363,
        "sender_full_name": "David Booth",
        "timestamp": 1500499311
    },
    {
        "content": "<p>so it's not clear to me whether this ontology header should be part of the basic format for all FHIR resources - e.g. part of what my server does</p>",
        "id": 153897374,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500505750
    },
    {
        "content": "<p>the alternative name is a real problem, because i don't have any alternative name. It's.. because of weakness on the HL7 server (static html pages on IIS) that the only way I can make access by media type work is by a redirect to an alternate name.</p>",
        "id": 153897375,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500505816
    },
    {
        "content": "<p>but even then, I don't understand - there's no link in the RDF between the 2 names.</p>",
        "id": 153897376,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500505840
    },
    {
        "content": "<p>and I think we need much better documentation about this than just a comment in some examples</p>",
        "id": 153897377,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500505880
    },
    {
        "content": "<p>so I think that we should be explicit about fhir:value - whether it's in the turtle as a quoted string or not. And whether the xsd type is specified all the time, or just not if it's xsd:string.</p>",
        "id": 153897379,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500505990
    },
    {
        "content": "<p>actually, there are 3 possibilities:<br>\n- always specify the type for fhir:value<br>\n- only specify the type for fhir:value when it is not xsd:string<br>\n- only specify the type for fhir:value when it is not fixed in fhir.ttl</p>",
        "id": 153897411,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500520497
    },
    {
        "content": "<p>other than this issue and the ontology header one, next time i upgrade my server, it will fully support turtle</p>",
        "id": 153897413,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500520591
    },
    {
        "content": "<blockquote>\n<p>so it's not clear to me whether this ontology header should be part of the basic format for all FHIR resources - e.g. part of what my server does</p>\n</blockquote>\n<p>If the server doesn't supply the header, we won't be able to use the data directly in Protege or OWL -- we can point folks at the server, but will have to explain how to edit or front-end before using...</p>",
        "id": 153897460,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1500559936
    },
    {
        "content": "<p><code>- only specify the type for fhir:value when it is not fixed in fhir.ttl</code><br>\nassumes that folks have FHIR-specific parsers. A standard Turtle parser would emit the literal with an xsd:string datatype. This would be akin to publishing XML data and expecting folks to look for attribute values and CharData with two different xs:types.</p>",
        "id": 153897462,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1500560876
    },
    {
        "content": "<p><code>- only specify the type for fhir:value when it is not xsd:string</code><br>\nis nice because it makes the Turtle more pleasant to read but it's not semantically different from<br>\n<code>- always specify the type for fhir:value</code></p>",
        "id": 153897463,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1500560972
    },
    {
        "content": "<blockquote>\n<p>one additional follow up question: there's no patch format for turtle is there? Does anyone think that there's a point to supporting patch on turtle?</p>\n</blockquote>\n<p>There's a note for patch: <a href=\"https://www.w3.org/TR/ldpatch/#h-full-example\" target=\"_blank\" title=\"https://www.w3.org/TR/ldpatch/#h-full-example\">https://www.w3.org/TR/ldpatch/#h-full-example</a></p>",
        "id": 153897504,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1500579237
    },
    {
        "content": "<p>that looks pretty underspecified to me. But if ever people want PATCH on turtle, that's the place we'll start</p>",
        "id": 153897516,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500583707
    },
    {
        "content": "<p>and I think, based on Eric's comments, that we want '- only specify the type for fhir:value when it is not xsd:string'</p>",
        "id": 153897517,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500583746
    },
    {
        "content": "<p>I'm not sure about the relationship between turtle literal and schema type. If we say the schema type is xsd:int, does that make this wrong? </p>\n<div class=\"codehilite\"><pre><span></span>[fhir:value &quot;1&quot;^^xsd:int]\n</pre></div>",
        "id": 153897518,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500583816
    },
    {
        "content": "<p>as for the ontology header... if I understood you right, <span class=\"user-mention\" data-user-id=\"191660\">@Harold Solbrig</span> , the actual identifier used in the ontology is not particularly important - it just has to be different to the resource id, but since that's what you'd see in protege, it should be human-relatable?</p>",
        "id": 153897519,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500583910
    },
    {
        "content": "<blockquote>\n<p>I'm not sure about the relationship between turtle literal and schema type. If we say the schema type is xsd:int, does that make this wrong? <code>[fhir:value \"1\"^^xsd:int]</code></p>\n</blockquote>\n<p>Per the <a href=\"https://www.w3.org/TR/turtle/#turtle-literals\" target=\"_blank\" title=\"https://www.w3.org/TR/turtle/#turtle-literals\">RDF 1.1. Turtle spec</a>, <code>If there is no datatype IRI and no language tag, the datatype is xsd:string.</code>.</p>\n<p>In XML, elements, attributes and text nodes are untyped until you apply XML Schema or XQuery to type it. In RDF, every parser is responsible for constructing datatyped literals. If you parse a document and then feed it and some OWL to some reasoner, it will use <a href=\"https://www.w3.org/TR/rdf11-mt/#datatype-entailment\" target=\"_blank\" title=\"https://www.w3.org/TR/rdf11-mt/#datatype-entailment\">Datatype Entailment</a> to either conclude \"your xsd:int is also an xsd:integer\" or whine if there's a conflict.</p>\n<p>Basically, RDF literals are always typed even if the type isn't always conspicuous: <code>sameTerm(\"ab\", \"ab\"^^xsd:string) =&gt; true</code></p>",
        "id": 153897678,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1500641277
    },
    {
        "content": "<p>ok. but my question was about the \"\" thiemselves - is it wrong to have a string value labelled as an xsd:integer</p>",
        "id": 153897686,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500646279
    },
    {
        "content": "<p>I conclude that it's not</p>",
        "id": 153897687,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500646286
    },
    {
        "content": "<p>ok. <a href=\"http://test.fhir.org/r3\" target=\"_blank\" title=\"http://test.fhir.org/r3\">test.fhir.org/r3</a> fully supports turtle now</p>",
        "id": 153897949,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500912071
    },
    {
        "content": "<p>This is valid Turtle: <code>&lt;s&gt; &lt;p&gt; \"123\"^^xsd:integer .</code></p>",
        "id": 153897986,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1500931586
    },
    {
        "content": "<p>/me hoping that was a useful answer</p>",
        "id": 153897987,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1500931611
    },
    {
        "content": "<p>yes thanks</p>",
        "id": 153898010,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1500964439
    }
]