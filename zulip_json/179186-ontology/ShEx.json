[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192267\">@Eric Prud'hommeaux</span> , I'm going to use shexcala for shex validation. It's my only choice. Do you think that will be ok?</p>",
        "id": 153821362,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460498532
    },
    {
        "content": "<p>hmm. the documentation is pretty sparse....</p>",
        "id": 153821605,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460581931
    },
    {
        "content": "<p>the build has updated to generate ShEx for everything. See the current build - look for 'alternate definitions\" on each resource page. or else you can get the full ShEx from the downloads page</p>",
        "id": 153821692,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460613683
    },
    {
        "content": "<p>the ShEx is not right; Harold is working on getting it right. </p>",
        "id": 153821693,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460613702
    },
    {
        "content": "<p>Once he's done doing that, I'll inject hyperlinks in the appropriate places</p>",
        "id": 153821694,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460613725
    },
    {
        "content": "<p>Cool! I miss a couple of predicates, like fhir:index, fhir:nodeRole, fhir:reference. How will those end up in the ShEx?</p>",
        "id": 153821710,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1460625455
    },
    {
        "content": "<p>Those are some of the things we haven't done yet. <span class=\"user-mention\" data-user-id=\"192267\">@Eric Prud'hommeaux</span> may want to comment about fhir:index - how would we define that? it's a property of the use of the  thing, not the thing itself</p>",
        "id": 153821712,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460626076
    },
    {
        "content": "<p>The only pattern I know to avoid gunking up the list entries is to wrap them in \"slots\", and put the \"index\" property on the slot. Like <a href=\"http://smiy.sourceforge.net/olo/spec/orderedlistontology.html\" target=\"_blank\" title=\"http://smiy.sourceforge.net/olo/spec/orderedlistontology.html\">http://smiy.sourceforge.net/olo/spec/orderedlistontology.html</a> (Note that, like their examples, I wouldn't bother with \"next\" links between slots!) </p>",
        "id": 153821722,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1460634203
    },
    {
        "content": "<p>Lists appear often enough in FHIR that I doubt  this pattern is worth polluting our instance data, though. </p>",
        "id": 153821723,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1460634324
    },
    {
        "content": "<p>Could  SHex provide  a notion of online shape unions or some such, so we could say something <code> :related @&lt;IssueShape &amp; ListItem&gt;* </code>, where ListItem would just be a shape that required one \":index xsd:int\" property? <span class=\"user-mention\" data-user-id=\"192267\">@Eric Prud'hommeaux</span> </p>",
        "id": 153821724,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1460634630
    },
    {
        "content": "<p>mixins.... that'd be a cool solution for that problem. Might have other stings in the tail... mixins usually do....</p>",
        "id": 153821726,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460635546
    },
    {
        "content": "<p>/me finally found his way here...</p>",
        "id": 153821732,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1460637363
    },
    {
        "content": "<p>in order:<br>\n<span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  re shexscala, sure, will invite labra to this chat as soon as i figure out how to do that</p>",
        "id": 153821733,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1460637479
    },
    {
        "content": "<p>just send him to <a href=\"http://chat.fhir.org\" target=\"_blank\" title=\"http://chat.fhir.org\">chat.fhir.org</a></p>",
        "id": 153821734,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460637512
    },
    {
        "content": "<p>iI expect we'll have to sprinkle fhir:index into every place it can appear because we don't have a notion of a meta shape which controls the generation of shapes. Sprinkling is kind of a pain but very explicit.</p>",
        "id": 153821735,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1460637607
    },
    {
        "content": "<p>the trouble with sprinkling is that you define it in the type, but it can only be used when the type is used in a list</p>",
        "id": 153821737,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460637641
    },
    {
        "content": "<p>and that's not explicit</p>",
        "id": 153821738,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460637657
    },
    {
        "content": "<p>ditto fhir:nodeRole, though that won't show up in as many places 'cause we only have one role (so far) and it appears at the root of any resource</p>",
        "id": 153821739,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1460637666
    },
    {
        "content": "<p>yes that's a simple case </p>",
        "id": 153821740,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460637704
    },
    {
        "content": "<p>the sprinkling effectively takes the place of saying that something is an array of X, right?</p>",
        "id": 153821741,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1460637741
    },
    {
        "content": "<p>uh? say, Coding. It appears in some places as code : Coding 0..1, and others as code : Coding 0..*. So in the second place, it must contain a fhir:index, and the the first, it cannot</p>",
        "id": 153821742,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460637819
    },
    {
        "content": "<p>I think you are saying, you just define fhir:index as an optional property everywhere, and ShEx can't validate that it's being used properly</p>",
        "id": 153821743,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460637847
    },
    {
        "content": "<p>let's invent a resource with both: Justification.code and Justification.actions</p>",
        "id": 153821745,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1460638151
    },
    {
        "content": "<p>&lt;JustificationSh&gt; {<br>\n  fhir:Justification.code @&lt;codeSh&gt;,<br>\n  fhir:Justification.actions @&lt;codeListEntrySh&gt;* }<br>\n&lt;codeSh&gt; { fhir:value LITERAL, ...I forget... }<br>\n&lt;codeListEntrySh&gt; { fhir:index xsd:integer, fhir:value LITERAL, ...I forget... }</p>",
        "id": 153821746,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1460638324
    },
    {
        "content": "<p>the latter is a bit annoying, but you can use the &amp;&lt;shape&gt; inclusion to simplify it:<br>\n&lt;codeListEntrySh&gt; { fhir:index xsd:integer, &amp;&lt;codeSh&gt; }</p>",
        "id": 153821747,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1460638373
    },
    {
        "content": "<p>so that's pretty much what Josh proposed then? </p>",
        "id": 153821748,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460638418
    },
    {
        "content": "<p>so ultimately, we end up creating a &lt;X ListEntrySh&gt; { fhir:index xsd:integer , &amp;&lt;X&gt; } for every listable.</p>",
        "id": 153821749,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1460638442
    },
    {
        "content": "<p>close, though maybe his idea is better. reflecting...</p>",
        "id": 153821750,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1460638505
    },
    {
        "content": "<p>yeah, I think Josh's proposal is closer to this:<br>\n&lt;JustificationSh&gt; {<br>\nfhir:Justification.code @&lt;codeSh&gt;,<br>\nfhir:Justification.actions { fhir:index xsd:integer, @&lt;codeSh&gt; } }</p>",
        "id": 153821751,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1460638636
    },
    {
        "content": "<p>which seems like a better idea</p>",
        "id": 153821752,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1460638647
    },
    {
        "content": "<div class=\"codehilite\"><pre>&lt;JustificationSh&gt; {\nfhir:Justification.code @&lt;codeSh&gt;,\nfhir:Justification.actions { fhir:index [int], @&lt;codeSh&gt; } }\n</pre></div>",
        "id": 153821753,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460638700
    },
    {
        "content": "<p>? how to do the int bit?</p>",
        "id": 153821754,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460638708
    },
    {
        "content": "<p>just fixed my example to do just that</p>",
        "id": 153821755,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1460638788
    },
    {
        "content": "<p>k thx. Haorld will go with your last unless we hear otherwise</p>",
        "id": 153821756,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460638825
    },
    {
        "content": "<p>Gotta say, I wonder what the value is of making this aspect explicit in ShEx.  index is list ordering, correct?</p>",
        "id": 153821757,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1460638879
    },
    {
        "content": "<p>well, because it's required in the RDF.</p>",
        "id": 153821758,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460638953
    },
    {
        "content": "<p>ShEx is just describbing the RDF.....</p>",
        "id": 153821759,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460638963
    },
    {
        "content": "<p>We could step out of shex and say that the list is ordered on the index key when going into ShEx </p>",
        "id": 153821760,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1460638968
    },
    {
        "content": "<p>the list/singleton dichotomy always sucks in RDF (or any graph language)</p>",
        "id": 153821761,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1460638981
    },
    {
        "content": "<p>ShEx is definitely describing a subset of the RDF, but the question is it intended to be open or closed.</p>",
        "id": 153821762,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1460638994
    },
    {
        "content": "<p>ir should validate as much as possible</p>",
        "id": 153821763,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460639027
    },
    {
        "content": "<p>But we have enough prior knowledge to know what is list and what is singleton</p>",
        "id": 153821764,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1460639032
    },
    {
        "content": "<p>so? a ShEx evaluator doesn't</p>",
        "id": 153821765,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460639063
    },
    {
        "content": "<p>when validating, should it reject a singleton with a fhir:index property?</p>",
        "id": 153821766,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1460639064
    },
    {
        "content": "<p>one that can only be a singleton yes</p>",
        "id": 153821767,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460639086
    },
    {
        "content": "<p>profiles make this complicated</p>",
        "id": 153821768,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460639105
    },
    {
        "content": "<p>I would push back on the \"as much as possible\" -- if RDF were my primary format, it would be really painful to inject indices into lists.  I would expect translation tools to add them in ...</p>",
        "id": 153821769,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1460639108
    },
    {
        "content": "<p>I would argue we should say \"as much as is sensible\" (or practical or some such thing)</p>",
        "id": 153821770,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1460639145
    },
    {
        "content": "<p>how would they know what the right order is?</p>",
        "id": 153821771,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460639153
    },
    {
        "content": "<p>The notion that all formats have to carry the foibles of any format leads to a lot of pain.</p>",
        "id": 153821772,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1460639182
    },
    {
        "content": "<p>(That said, I'm happy to do as instructed on the ShEx itself -- merely injecting an opinion past my pay grade)</p>",
        "id": 153821773,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1460639211
    },
    {
        "content": "<p>i don't think thats what's going on here at all</p>",
        "id": 153821774,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460639224
    },
    {
        "content": "<p>RDF lists are ordered</p>",
        "id": 153821775,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1460639235
    },
    {
        "content": "<p>order within a list is significant</p>",
        "id": 153821776,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460639240
    },
    {
        "content": "<p>we chose to use fhir:index not RDF lists</p>",
        "id": 153821777,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460639272
    },
    {
        "content": "<p>The question becomes, what do we do with ([fhir:index 2] [fhir:index 1])?</p>",
        "id": 153821778,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1460639275
    },
    {
        "content": "<p>Ok</p>",
        "id": 153821779,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1460639281
    },
    {
        "content": "<p>so ShEx should say so</p>",
        "id": 153821780,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460639293
    },
    {
        "content": "<p>So we need to make it clear that, despite the fact that RDF lists are ordered, we are to treat them as unordered for the purposes of FHIR?</p>",
        "id": 153821781,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1460639314
    },
    {
        "content": "<p>I'll defer to Eric or David on that</p>",
        "id": 153821782,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460639368
    },
    {
        "content": "<p>(fine by me, just want to make sure that this is what we want...)</p>",
        "id": 153821783,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1460639382
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192267\">@Eric Prud'hommeaux</span> -- Can ShEx enforce ordering on a list?  </p>",
        "id": 153821784,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1460639408
    },
    {
        "content": "<p>no, but i think that will come with the key feature we wanted to add</p>",
        "id": 153821791,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1460640703
    },
    {
        "content": "<p>key or unique (the naming dilema is part of the obstacle) comes up in lots of places, from the obvious one of making sure that all of the Foo shapes have a unique combination of list of properties (e.g. only one AddressShape for any combo of street number and street name) to making sure that something has only one skos:prefLabel for any given language tag</p>",
        "id": 153821795,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1460640890
    },
    {
        "content": "<p>this doesn't make sure that the indexes are contiguous and start with 0, but it does make sure that at least there are no duplicates</p>",
        "id": 153821796,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1460640935
    },
    {
        "content": "<p>Yes.</p>",
        "id": 153821885,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1460714331
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> or <span class=\"user-mention\" data-user-id=\"191660\">@Harold Solbrig</span>  Maybe you already said this, but why is <a href=\"http://Element.id\" target=\"_blank\" title=\"http://Element.id\">Element.id</a> there multiple times? And why is Observation.value missing?</p>",
        "id": 153821888,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1460716052
    },
    {
        "content": "<p>because I just threw something in there so that it would generate something. Harold is working on it making it generate correctly </p>",
        "id": 153821889,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1460716090
    },
    {
        "content": "<p>Got it. Great start.</p>",
        "id": 153821914,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1460725768
    },
    {
        "content": "<p>I'll have something more useful in a little later today...</p>",
        "id": 153821965,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1460730337
    },
    {
        "content": "<p>ok Harold, here we go, questions about the ShEx:</p>",
        "id": 153822394,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461022101
    },
    {
        "content": "<div class=\"codehilite\"><pre>fhir:AllergyIntolerance.recorder    (   @&lt;PractitionerReference&gt; OR         @&lt;PatientReference&gt; )?,\n</pre></div>",
        "id": 153822395,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461022114
    },
    {
        "content": "<p>how are PractitionerReference and PatientReference different? </p>",
        "id": 153822396,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461022149
    },
    {
        "content": "<p>actually, the content model for them is wrong anyway. I'll change it, and you can review</p>",
        "id": 153822397,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461022222
    },
    {
        "content": "<p>Question. Is the order of the triples important? I would say not. But does ShEx check this?</p>",
        "id": 153822440,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1461057318
    },
    {
        "content": "<p>I think order doesn't matter. </p>",
        "id": 153822442,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461057443
    },
    {
        "content": "<p>There is difference between PractitionerReference and PatientReference.. The first References a Practitioner  and the second Patient. So the datatype is the same \"Reference\" but there is a restriction on what they reference.</p>",
        "id": 153822443,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1461057662
    },
    {
        "content": "<p>And.. I thought it was recorderReference in rdf?</p>",
        "id": 153822444,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1461058104
    },
    {
        "content": "<p>But it doesn't make any difference to the the type. The URL is opaque. It does make a difference to the fhir:reference though. How do you use shed to limit the properties of that? I think it's exactly the same... So an inline combo of reference and the referenced thing </p>",
        "id": 153822451,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461062554
    },
    {
        "content": "<p>no RDF call today? the sticking point for me right now is how to validate an turtle file against a ShEx file from java code - the wiki for the scala code says there's an example, but it's not actually a link</p>",
        "id": 153822515,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1461100445
    },
    {
        "content": "<p>Not enough people could make it.</p>",
        "id": 153822523,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1461104627
    },
    {
        "content": "<p>order doesn't matter. ShEx provides an ordered traversal of an unordered graph</p>",
        "id": 153822861,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1461338456
    },
    {
        "content": "<p>Just curious: why did you choose ShEx over SHACL?</p>",
        "id": 153825791,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1462778140
    },
    {
        "content": "<p>on the say of <span class=\"user-mention\" data-user-id=\"192267\">@Eric Prud'hommeaux</span> </p>",
        "id": 153825794,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1462782551
    },
    {
        "content": "<p>once SHACL gets a bit more stable in its syntax, we can convert back and forth</p>",
        "id": 153825812,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1462793567
    },
    {
        "content": "<p>:)</p>",
        "id": 153826190,
        "sender_full_name": "Stephen Royce",
        "timestamp": 1462832338
    },
    {
        "content": "<p>What is the planned scope for ShEx (or SHACL) for FHIR? (ie: what aspects of the RDF Representation of FHIR will it address)</p>",
        "id": 153828539,
        "sender_full_name": "Renato Iannella",
        "timestamp": 1463625744
    }
]