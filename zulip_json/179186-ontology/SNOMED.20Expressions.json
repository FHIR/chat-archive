[
    {
        "content": "<p>take this example from STU3 (<a href=\"http://build.fhir.org/observation-example-bmd.ttl.html\" target=\"_blank\" title=\"http://build.fhir.org/observation-example-bmd.ttl.html\">http://build.fhir.org/observation-example-bmd.ttl.html</a>)</p>\n<div class=\"codehilite\"><pre><span></span> fhir:Observation.bodySite [\n     fhir:CodeableConcept.coding [\n       fhir:index 0;\n       a sct:71341001%3a272741003%3d7771000;\n       fhir:Coding.system [ fhir:value &quot;http://snomed.info/sct&quot; ];\n       fhir:Coding.code [ fhir:value &quot;71341001:272741003=7771000&quot; ]\n     ];\n     fhir:CodeableConcept.text [ fhir:value &quot;Left Femur&quot; ]\n  ] .\n</pre></div>",
        "id": 153888723,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494344287
    },
    {
        "content": "<p>the sct:link is garbage. What is the right representation <span class=\"user-mention\" data-user-id=\"191660\">@Harold Solbrig</span> <span class=\"user-mention\" data-user-id=\"192267\">@Eric Prud'hommeaux</span> <span class=\"user-mention\" data-user-id=\"191574\">@David Booth</span> </p>",
        "id": 153888724,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494344309
    },
    {
        "content": "<p>Two answers, depending on context.  The one we need for classification is a conversion into OWL:</p>\n<div class=\"codehilite\"><pre><span></span>    a sct:71341001,\n             rdfs:subClassOf [a owl:Restriction;\n                owl:onProperty sct:272741002;\n               owl:someValuesFrom sct:7771000];\n</pre></div>\n\n\n<p>The second is that there actually is a proposed SNOMED URL for this as well:<br>\n<code>http://snomed.info/scg/71341001%3a272741003%3d7771000</code></p>\n<p>Not sure how useful this second form is...</p>",
        "id": 153888728,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1494345407
    },
    {
        "content": "<p>the first form is the useful one. Really. What use would the URL be? it's a concept reference, not a secret URL with semantics buried inside it </p>",
        "id": 153888730,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494345660
    },
    {
        "content": "<p>I mean, that's what we want: a concept reference. </p>",
        "id": 153888731,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494345687
    },
    {
        "content": "<p>but if I'm going to fix that, I'll be doing the general case.... so what would an expression like this become?</p>",
        "id": 153888732,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494345707
    },
    {
        "content": "<p>say:</p>\n<div class=\"codehilite\"><pre><span></span>128045006|cellulitis (disorder)|:{363698007|finding site|=56459004|foot structure|}\n</pre></div>",
        "id": 153888733,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494345808
    },
    {
        "content": "<p>or</p>\n<div class=\"codehilite\"><pre><span></span>64572001|disease|:{116676008|associated morphology|=72704001|fracture|,363698007|finding site|=(12611008|bone structure of  tibia|:272741003|laterality|=7771000|left|)}\n</pre></div>",
        "id": 153888734,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494345830
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>a sct:128045006,\n  rdfs:subClassOf [\n      a owl:Restriction;\n      owl:onProperty sct:609096000 ;\n      owl:someValuesFrom [\n            a owl:Restriction;\n             owl:onProperty sct:363698007 ;\n            owl:someValuesFrom sct:56459004 ] ] ;\n</pre></div>\n\n\n<p>and</p>\n<div class=\"codehilite\"><pre><span></span>a sct:64572001,\n   rdfs:subclassOf  [\n       a owl:Restriction ;\n       owl:onProperty sct:60909600 ;\n       owl:someValuesFrom [ \n             a owl:Class ;\n             owl:intersectionOf ( [\n                  a owl:Restriction;\n                  owl:onProperty sct:116676008;\n                 owl:someValuesFrom sct:72704001 ] \n             [  a owl:Restriction;\n                  owl:onProperty sct:363698007 \n                  owl:someValuesFrom [\n                        a owl:Class ;\n                        owl:intersectionOf(\n                             sct:12611008\n                             owl:someValuesFrom [\n                                     a owl:Restriction;\n                                     owl:onProperty sct:272741003;\n                                     owl:someValuesFrom sct:7771000\n                              ] ) ] ] ) ] ]\n</pre></div>\n\n\n<p>(an approximation -- I'll have to feed it into a translator to be sure I've got it 100% right)</p>",
        "id": 153888840,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1494370453
    },
    {
        "content": "<p>But if we decide on the verbose version it means I have to also add a sct compositional grammar parser and writer to a FHIR RDF implementation. So I would hope for the simple url form.</p>",
        "id": 153889173,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1494453775
    },
    {
        "content": "<p>but that makes the expression - which is important content - opaque to any processor. So I think that we should have the verbose version. sorry</p>",
        "id": 153889185,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494483495
    },
    {
        "content": "<p>I'll write you a C# snomed compositional parser if you want - I have it in both pascal and java, so that's only a short thing to do</p>",
        "id": 153889187,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494483637
    },
    {
        "content": "<p>I'd also be interested in that parser, or the Java code that should, as you say, be easy to transpose to C#.</p>",
        "id": 153889253,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1494497936
    },
    {
        "content": "<p>looks like I only have it in pascal:</p>",
        "id": 153889255,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494498034
    },
    {
        "content": "<p><a href=\"https://github.com/grahamegrieve/fhirserver/blob/master/Libraries/snomed/SnomedExpressions.pas\" target=\"_blank\" title=\"https://github.com/grahamegrieve/fhirserver/blob/master/Libraries/snomed/SnomedExpressions.pas\">https://github.com/grahamegrieve/fhirserver/blob/master/Libraries/snomed/SnomedExpressions.pas</a></p>",
        "id": 153889256,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494498036
    },
    {
        "content": "<p>It would make sense to use the parser infrastructure that is in the .Net FHIR API. It probably also has something for FHIRPath. Maybe I can even use that to parse the turtle. Is <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> listening in on this chat?</p>",
        "id": 153889559,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1494541947
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191660\">@Harold Solbrig</span> I'm not an OWL:RDF expert, but those rdfs:subClassOf bits don't feel right -- the postcordinated expression is an anonymous class equivalent to the intersection of the focus concept and each of the refinements. I would expect something like:</p>\n<div class=\"codehilite\"><pre><span></span>a owl:Class ;\nowl:intersectionOf(\n  sct:128045006\n  rdfs:subClassOf [\n      a owl:Restriction;\n      owl:onProperty sct:609096000 ;\n      owl:someValuesFrom [\n            a owl:Restriction;\n             owl:onProperty sct:363698007 ;\n            owl:someValuesFrom sct:56459004 ] ]\n)\n</pre></div>",
        "id": 153889598,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1494556642
    },
    {
        "content": "<p>Note also that any converter from post coordination syntax to a description logic form needs to apply the appropriate rules to add in implicit role grouping (ie implicit nesting inside the property sct:609096000), as well as applying the rules for laterality -- that is, refining a Finding, Procedure, or Situation that contains (lateralisable) body stuctures means that the refinement acutally applies to (all) the body structures.</p>\n<div class=\"codehilite\"><pre><span></span>46866001|fracture of lower limb| : 272741003 |laterality| = 7771000 |left|\n</pre></div>\n\n\n<p>is equivalent to (transformed to)</p>\n<div class=\"codehilite\"><pre><span></span>46866001 |fracture of lower limb| : {363698007 |finding site| = (72001000 |Bone structure of lower limb| : 272741003 |laterality| = 7771000 |left| ) }\n</pre></div>",
        "id": 153889599,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1494557151
    },
    {
        "content": "<p>why is this necessary? the implication is that the only way to convert from a post-coordinated expression to a valid RDF equivalent requires deep knowledge of the relationships in snomed. </p>",
        "id": 153889601,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494564880
    },
    {
        "content": "<p>if you can infer it from the short form, based on the triples, then a reasoner should  be able to do it. If you can't, then the short form shouldn't be legitimate; I don't see why you have to say more than the expression says</p>",
        "id": 153889602,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494564933
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191421\">@Michael van der Zel</span> see also these 2 java classes: <a href=\"http://gforge.hl7.org/svn/fhir/trunk/build/implementations/java/org.hl7.fhir.r4/src/org/hl7/fhir/r4/utils/SnomedExpressions.java\" target=\"_blank\" title=\"http://gforge.hl7.org/svn/fhir/trunk/build/implementations/java/org.hl7.fhir.r4/src/org/hl7/fhir/r4/utils/SnomedExpressions.java\">http://gforge.hl7.org/svn/fhir/trunk/build/implementations/java/org.hl7.fhir.r4/src/org/hl7/fhir/r4/utils/SnomedExpressions.java</a> and <a href=\"http://gforge.hl7.org/svn/fhir/trunk/build/implementations/java/org.hl7.fhir.r4/src/org/hl7/fhir/r4/test/SnomedExpressionsTests.java\" target=\"_blank\" title=\"http://gforge.hl7.org/svn/fhir/trunk/build/implementations/java/org.hl7.fhir.r4/src/org/hl7/fhir/r4/test/SnomedExpressionsTests.java\">http://gforge.hl7.org/svn/fhir/trunk/build/implementations/java/org.hl7.fhir.r4/src/org/hl7/fhir/r4/test/SnomedExpressionsTests.java</a></p>",
        "id": 153889606,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494565205
    },
    {
        "content": "<p>While the long form that Harold suggests certainly seems the most useful for inference purposes, I'm not sure that it should be directly a part of the FHIR/Turtle.   I've added this to our weekly teleconference agenda to discuss.</p>",
        "id": 153889702,
        "sender_full_name": "David Booth",
        "timestamp": 1494588964
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>a sct:128045006,\n     rdfs:subclassOf [\n           a owl:Restriction ;\n           owl:onProperty sct:60909600 ;\n           owl:someValuesFrom [\n                 a owl:Restriction ;\n                 owl:onProperty sct:363698007 ;\n                 owl:someValuesFrom sct:56456004\n            ] ] .\n</pre></div>",
        "id": 153889757,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1494598679
    },
    {
        "content": "<p>Michael - in this context, we are using individuals (see <a href=\"https://github.com/BD2KOnFHIR/BLENDINGFHIRandRDF\" target=\"_blank\" title=\"https://github.com/BD2KOnFHIR/BLENDINGFHIRandRDF\">https://github.com/BD2KOnFHIR/BLENDINGFHIRandRDF</a>) - in this context, <code>x a sct:12345, sct:67890 .</code> should be equivalent to <code>x a [owl:intersectionOf (sct:12345 sct:67890)]</code> - no?</p>",
        "id": 153889758,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1494599309
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191574\">@David Booth</span> I agree that it's not of obvious benefit, but the URL form is not valid (afaik) and so I think there's not much choice here</p>",
        "id": 153889783,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1494605275
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191660\">@Harold Solbrig</span> okay, clearly I have no idea about this syntax (liekly) and/or I am missing some motivating context here (regarding individuals) - I was assuming that the goal was to render snomed expressions in their corresponding DL (OWL) form an then serialise to RDF. This makes sense to me because they can then be directly used with the DL (OWL) representation of SNOMED in a reasoner.</p>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> yes - the only was to get to a DL representation of a post coordinated expression is with deep knowledge of how SNOMED works.  Yes, this should be the business of a Terminology Server and not code that only needs to serialise FHIR in one of several syntaxes. Hence it seems to me that trying to render SNOMED expressions semantically in the FHIR RDF serialisation is a mistake and also not particularly useful (it makes the serialiser's job hard and doesn't really help anyone else).</p>",
        "id": 153890078,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1494934819
    },
    {
        "content": "<p>well, let's be clear here - the property we are describing is not part of the mandatory FHIR RDF, but an optional extra to allow OWL processors to process the content more efficiently. We generally expect it to be added as a post-processing step. I am adding it to my RDF in the serialization step as a convenience to users - to drive discussions like this</p>",
        "id": 153890155,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1495000281
    },
    {
        "content": "<p>Ok, then if it is to be consumed directly by OWL processors (presumable for reasoning about subsumption in SNOMED), then it needs to be a proper DL rendering which requires the extra knowledge of how SNOMED works -- it has to come into the usage chain somewhere!</p>",
        "id": 153890180,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1495012936
    },
    {
        "content": "<p>I'm also concerned that if it looks OWL-like but hasn't had the SNOMED-specific transformations applied, then naive (of SNOMED) users (the majority) will see something that looks like it can be just thrown into a DL reasoner and get bad (incorrect, unsafe) results.  The easy path should also be the path that leads to correctness</p>",
        "id": 153890181,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1495013075
    },
    {
        "content": "<p>\"The easy path should also be the path that leads to correctness\" - there's a certain amount of irony when you say that anywhere in the snomed CT space. But I agree with the point - this property should be right</p>",
        "id": 153890186,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1495017473
    },
    {
        "content": "<p>I think we can agree that the \"certain amount\" is in fact extremely large.</p>",
        "id": 153890197,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1495026834
    }
]