[
    {
        "content": "<p>I am looking at a set of Delphi FMX UI components and I have a first \"working\" component - a TFHIRStringEdit. I have a design-time to list the component and a runtime library to register and implement the logic.  This allows to register components and work with them in forms, but there is an issue:</p>",
        "id": 153964839,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527253727
    },
    {
        "content": "<p>The moment I add a TFHIRString to my component's logic, then it starts requiring the FHIR modules which ends up requiring a chain of dependencies all the way down to indy.  For the runtime this is normal and expected. For the design time this does not seem ok. Anyone have experience in creating  components to see what is wrong?</p>",
        "id": 153964840,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527253828
    },
    {
        "content": "<p>the code is in grahame's fhirtools github under reference-platform\\ui\\fmx.</p>",
        "id": 153964841,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527253873
    },
    {
        "content": "<p>at design time, you need to manage this with packages</p>",
        "id": 153964859,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527268030
    },
    {
        "content": "<p>but for a variety of reasons, you should ensure that the visual components only depend on FHIR.Base.Objects, FHIR.XVersion.Resources. FHIR.Base.Factory, and the things they use</p>",
        "id": 153964860,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527268435
    },
    {
        "content": "<p>yep, the moment I use fhir.base.objects, that is when it starts asking me for more and more stuff. Perhaps I missed something</p>",
        "id": 153964861,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527270454
    },
    {
        "content": "<p>no. I'll check something in that helps shortly</p>",
        "id": 153964865,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527273062
    },
    {
        "content": "<p>so we need to talk about UI component folders .</p>",
        "id": 153964866,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527274004
    },
    {
        "content": "<p>the current code is organised so that /reference-implementation contains the base stuff need to implement a FHIR client or server</p>",
        "id": 153964867,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527274172
    },
    {
        "content": "<p>ok</p>",
        "id": 153964868,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527274185
    },
    {
        "content": "<p>/libraries contains things that are shared between the various toolkits and servers</p>",
        "id": 153964869,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527274198
    },
    {
        "content": "<p>then there's folders for the applications</p>",
        "id": 153964870,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527274228
    },
    {
        "content": "<p>and some other misc stuff</p>",
        "id": 153964871,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527274233
    },
    {
        "content": "<p>but the stuff you're adding now challenges that layout....</p>",
        "id": 153964872,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527274244
    },
    {
        "content": "<p>I would have said to put them in /libraries/ui but they're really intended for run time</p>",
        "id": 153964873,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527274271
    },
    {
        "content": "<p>so we need a new place for design-time libraries?.. outside reference-platform?</p>",
        "id": 153964874,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527274479
    },
    {
        "content": "<p>well, I think we should put the packages in /packages</p>",
        "id": 153964875,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527274502
    },
    {
        "content": "<p>I've just created a set of packages in there that sorts out the dependency issues</p>",
        "id": 153964876,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527274523
    },
    {
        "content": "<p>ok let me get it</p>",
        "id": 153964877,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527274535
    },
    {
        "content": "<p>.. haven</p>",
        "id": 153964878,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527274541
    },
    {
        "content": "<p>haven't committed yet...</p>",
        "id": 153964879,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527274549
    },
    {
        "content": "<p>ok, that gives me time to lookup new word (haven) :)</p>",
        "id": 153964880,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527274570
    },
    {
        "content": "<p>but the actual components are for implementing. I don't know whether to say that those things go in /reference-implementations/ui or libraries/ui, or whether we should just create a new /ui  and have /fmx and /vcl under that</p>",
        "id": 153964881,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527274600
    },
    {
        "content": "<p>ok pushed it. there's 3 new packages in /packages</p>",
        "id": 153964882,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527274716
    },
    {
        "content": "<p>vcl, fmx and core, right?</p>",
        "id": 153964883,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527274945
    },
    {
        "content": "<p>for the packages, yes</p>",
        "id": 153964884,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527274956
    },
    {
        "content": "<p>i am noting these are both design time and runtime. won't that cause dependency issues?</p>",
        "id": 153964885,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527275043
    },
    {
        "content": "<p>or it's unrelated?</p>",
        "id": 153964886,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527275057
    },
    {
        "content": "<p>well, my thinking here is that if you're someone who's using packages at run time, you'll make up your own package that has what you want in it. So these packages are solely to do designtime registration</p>",
        "id": 153964887,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527275123
    },
    {
        "content": "<p>i thought that  the registration was done in the way i had it - one design time package for declaring and registering the components, the runtime containing the logic. <br>\n- but i did not have experience and obviously it was not a successful implementation.</p>",
        "id": 153964888,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527275303
    },
    {
        "content": "<p>that's certainly what packages like tree view do. But it adds to the complexity, and in our case, there's complexities in the code that mean you couldn't deploy using the packages. So I didn't see why to pay the price</p>",
        "id": 153964889,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527275390
    },
    {
        "content": "<p>just added a new method to the factory for you</p>",
        "id": 153964890,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527275407
    },
    {
        "content": "<p>oh ok. I obviously see no reason why to split packages that way, so since it prevents deployment, it's fine.</p>",
        "id": 153964891,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527275470
    },
    {
        "content": "<p>i see the method - thanks. If i read it well, it lists all the properties I will have in an object.  Including objects as well?</p>",
        "id": 153964895,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527275719
    },
    {
        "content": "<p>yes. The properties won't have any values on it, of course, but all of them will be listed</p>",
        "id": 153964896,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527275879
    },
    {
        "content": "<p>nice. thanks. will play with it.</p>",
        "id": 153964897,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527275909
    },
    {
        "content": "<p>np</p>",
        "id": 153964898,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527275950
    },
    {
        "content": "<p>as for the libraries, i am getting SynEdit to see if i get the library to compile</p>",
        "id": 153964899,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527275958
    },
    {
        "content": "<p>ok so i got rid of SynEdit but I dont't see the connection between libraries/ui and reference-platform/ui</p>",
        "id": 153964900,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527277318
    },
    {
        "content": "<p>that question is not really about packages.</p>",
        "id": 153964901,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527277358
    },
    {
        "content": "<p>I've been putting all the UI components in there, but I haven't really had FHIR specific ones before.</p>",
        "id": 153964902,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527277374
    },
    {
        "content": "<p>so I'm just wondering how to organise the code</p>",
        "id": 153964903,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527277383
    },
    {
        "content": "<p>ah.</p>",
        "id": 153964904,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527277395
    },
    {
        "content": "<p>fwiw, i am thinking that the fhir components will be really fhir-specific. so the FHIRStringEdit will have a property which is a TFHIRString.</p>",
        "id": 153964905,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527277447
    },
    {
        "content": "<p>that's where you run into version problems</p>",
        "id": 153964906,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527277461
    },
    {
        "content": "<p>version as in r3/r4?</p>",
        "id": 153964907,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527277476
    },
    {
        "content": "<p>because there's 3 TFHIRString right now.</p>",
        "id": 153964908,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527277478
    },
    {
        "content": "<p>y.</p>",
        "id": 153964909,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527277480
    },
    {
        "content": "<p>why I said to use FHIR.Base.Objects</p>",
        "id": 153964910,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527277490
    },
    {
        "content": "<p>so just make it element : TFHIRElement</p>",
        "id": 153964911,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527277496
    },
    {
        "content": "<p>k</p>",
        "id": 153964912,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527277502
    },
    {
        "content": "<p>so do we need different components for different versions? it seems you are saying we shouldn't..?</p>",
        "id": 153964913,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527277562
    },
    {
        "content": "<p>it would be very useful not be tied to a specific version, yes</p>",
        "id": 153964914,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527277582
    },
    {
        "content": "<p>alternatively, I could say: it will be crippling to have them tied to a version</p>",
        "id": 153964915,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527277596
    },
    {
        "content": "<p>the toolkit compiles for both R3 nd R4</p>",
        "id": 153964916,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527277605
    },
    {
        "content": "<p>another thing is that tFHIRStringEdit is pretty much the same as TFHIRURIEdit, but some content validation could be different. I am wondering whether this level of specificity is good</p>",
        "id": 153964917,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527277646
    },
    {
        "content": "<p>well, you could have a single string type editor that knows what the base element is attached to is</p>",
        "id": 153964918,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527277681
    },
    {
        "content": "<p>but hang on....</p>",
        "id": 153964919,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527277692
    },
    {
        "content": "<p>my starting point was to make those different. So this is a new approach</p>",
        "id": 153964920,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527277709
    },
    {
        "content": "<p>hanging on...</p>",
        "id": 153964921,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527277715
    },
    {
        "content": "<p>should attach the editor to <br>\n  parent : TFHIRObject<br>\n  elementName : String</p>",
        "id": 153964922,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527277725
    },
    {
        "content": "<p>not directly to the elemnt itself?</p>",
        "id": 153964923,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527277736
    },
    {
        "content": "<p>hmmm... TFHIRObject would be the next parent object, or the top-level object?</p>",
        "id": 153964924,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527277815
    },
    {
        "content": "<p>(e.g. if we have a bundle of patients with addresses, where is the editor attached to?)</p>",
        "id": 153964925,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527277845
    },
    {
        "content": "<p>i thought it might be easier to have it attaced to the element. but must think of how it would work</p>",
        "id": 153964926,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527277919
    },
    {
        "content": "<p>the problem is what to do if the element doesn't exist</p>",
        "id": 153964927,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527277998
    },
    {
        "content": "<p>and what if the element has multiple cardinality? what is the solution for that?</p>",
        "id": 153964928,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527278001
    },
    {
        "content": "<p>I was about to say that</p>",
        "id": 153964929,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527278011
    },
    {
        "content": "<p>i was hoping to leave that problem in the parking lot for now.... but let's go:<br>\nfor now i am thinking that the editor should be attached to the element. The element dies, the editor vanishes. The UI says \"add another one of these elements\", the Editor gets created.</p>",
        "id": 153964930,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527278104
    },
    {
        "content": "<p>isn't that a bit of an odd UI to 0..1 elements?</p>",
        "id": 153964931,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527278129
    },
    {
        "content": "<p>this is why i wanted the method to list all possible objects in an object, so that i could programmatically add the buttons on  top of the toolkit.</p>",
        "id": 153964932,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527278164
    },
    {
        "content": "<p>right.  I had optional objects covered, but not optional elements</p>",
        "id": 153964934,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527278214
    },
    {
        "content": "<p>maybe primitive type editors can be attached to either an element or a parent+name?</p>",
        "id": 153964935,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527278269
    },
    {
        "content": "<p>I see the problem. It is \"normal\" that he editor is there even if the elemnent doesn't</p>",
        "id": 153964937,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527278309
    },
    {
        "content": "<p>actually in the Scenario editor i have the editor anyway. It is assigned to nil, or it is assigned to an element.</p>",
        "id": 153964941,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527278376
    },
    {
        "content": "<p>Actually at this moment it creates an object the moment the user starts entering text.</p>",
        "id": 153964942,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527278421
    },
    {
        "content": "<p>but where does the object go when they're done?</p>",
        "id": 153964943,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527278469
    },
    {
        "content": "<p>what is \"when they are done\"?</p>",
        "id": 153964944,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527278483
    },
    {
        "content": "<p>the object is attached to the parent object.</p>",
        "id": 153964945,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527278505
    },
    {
        "content": "<p>how does that happen?</p>",
        "id": 153964946,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527278517
    },
    {
        "content": "<p>jsut to capture this idea: <br>\nso one option for cardinalities (first time I m thinking of this) could be that the editor always exists, and gets assigned to an object when content is added. if the element has 1..x then the object must always exist and we find a way to show it. Could be a * next to it. If the element is x..* then we can have a \"add another here\" button next to it.</p>",
        "id": 153964947,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527278624
    },
    {
        "content": "<p>the FHIRStringEdit does that. Here's how it works:</p>",
        "id": 153964948,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527278659
    },
    {
        "content": "<p>FHIRStringEdit has a property (pointer) TFHIRString.</p>",
        "id": 153964949,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527278794
    },
    {
        "content": "<p>and a get and a set for that property.</p>",
        "id": 153964950,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527278868
    },
    {
        "content": "<p>Setting the string object forces the Edit to update the text.</p>",
        "id": 153964951,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527278922
    },
    {
        "content": "<p>and then there is a method i had to create, called \"associate\".</p>",
        "id": 153964953,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527278964
    },
    {
        "content": "<p>in the main code, i simply do this:<br>\n     TFHIRExampleScenario(obj).nameElement:= edit5.associate(TFHIRExampleScenario(obj).nameElement);</p>",
        "id": 153964954,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527278997
    },
    {
        "content": "<p>so what happens if nameElement is nil?</p>",
        "id": 153964955,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527279031
    },
    {
        "content": "<p>normally i can do <br>\nedit5.associate(TFHIRExampleScenario(obj).nameElement);</p>",
        "id": 153964956,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527279035
    },
    {
        "content": "<p>but _currently_ whenever associating it , i will force the creation of an object. hence the function returning the value to the object</p>",
        "id": 153964957,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527279093
    },
    {
        "content": "<p><code>function TFHIRStringEdit.associate(AValue: TFHIRString): TFHIRString;\nbegin\n  if fFHIRString = nil then\n  begin\n    fFHIRString := TFHIRString.Create;\n    text:='';\n  end\n  else begin\n    fFHIRString := AValue;\n    text:=fFHIRString.value;\n  end;\n  result:=fFhirString;\nend;</code></p>",
        "id": 153964958,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527279098
    },
    {
        "content": "<p>so if aValue is nil, it creates one and returns it.</p>",
        "id": 153964959,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527279116
    },
    {
        "content": "<p>i tested it. I don't find it elegant but it works and the resource stays \"clean\" when i export (i.e. it does not create thinks like &lt;name value=\"\"/&gt;</p>",
        "id": 153964960,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527279254
    },
    {
        "content": "<p>wouldn't this be better then:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"k\">procedure</span> <span class=\"nf\">associate</span><span class=\"p\">(</span><span class=\"n\">owner</span> <span class=\"o\">:</span> <span class=\"n\">TFHIRObject</span><span class=\"o\">;</span> <span class=\"kp\">name</span> <span class=\"o\">:</span> <span class=\"k\">String</span><span class=\"p\">)</span><span class=\"o\">;</span>\n<span class=\"k\">begin</span>\n  <span class=\"n\">prop</span> <span class=\"o\">:=</span> <span class=\"n\">owner</span><span class=\"o\">.</span><span class=\"n\">getPropertyValue</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span><span class=\"o\">;</span>\n  <span class=\"k\">if</span> <span class=\"k\">not</span> <span class=\"n\">prop</span><span class=\"o\">.</span><span class=\"n\">hasValue</span><span class=\"p\">()</span> <span class=\"k\">then</span>\n  <span class=\"k\">begin</span>\n     <span class=\"n\">element</span>  <span class=\"o\">:=</span> <span class=\"n\">Factory</span><span class=\"o\">.</span><span class=\"n\">makebyname</span><span class=\"p\">(</span><span class=\"n\">typeName</span><span class=\"p\">)</span><span class=\"o\">;</span>\n     <span class=\"n\">prop</span><span class=\"o\">.</span><span class=\"n\">setValue</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">,</span> <span class=\"n\">element</span><span class=\"p\">)</span><span class=\"o\">;</span>\n  <span class=\"k\">end</span>\n  <span class=\"k\">else</span>\n   <span class=\"n\">element</span> <span class=\"o\">:=</span> <span class=\"n\">prop</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">;</span>\n  <span class=\"k\">end</span><span class=\"o\">;</span>\n</pre></div>",
        "id": 153964961,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527279306
    },
    {
        "content": "<p>but it still leaves open the question of what happens if the user never enters anything....</p>",
        "id": 153964962,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527279412
    },
    {
        "content": "<p>looking at this: what if you want to create another patient.name.given?</p>",
        "id": 153964964,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527279502
    },
    {
        "content": "<p>it would not be appropriate to use this form of associate for an element with cardinality &gt;1</p>",
        "id": 153964965,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527279718
    },
    {
        "content": "<p>this form = your code or my code?</p>",
        "id": 153964966,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527279785
    },
    {
        "content": "<p>my code</p>",
        "id": 153964967,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527279807
    },
    {
        "content": "<p>in my code, and assuming that I can create UI elements at runtime (which I can), the entire \"who is owning how many of these\" is  left to the object <br>\nI create anothe element in an object -&gt; I create an editor for that element.</p>",
        "id": 153964968,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527279955
    },
    {
        "content": "<p>well, I don't follow but maybe you should develop it further before we discuss more</p>",
        "id": 153964969,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527280684
    },
    {
        "content": "<p>so the pieces of the puzzle I imagine are: <br>\n- From an object, determine what are the objects in it (thanks for the factory method).<br>\n- When displaying the object, put a button in the UI for each sub-objects (tested, seems to work).<br>\n- When displaying the same object, also put an editor for each element. If element is nil, editor is empty and vice versa.<br>\n- (Need to figure out the best way to hadle cardinalities in the UI and in the object but my startin approach could work, no?)<br>\n- Need to figure out how to deal with bindings</p>",
        "id": 153964970,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527280701
    },
    {
        "content": "<p>ok i will play a bit. The issue with the library was the thing preventing me from sharing.</p>",
        "id": 153964971,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527280762
    },
    {
        "content": "<p>so, and since i did not get that: <br>\nin the packages you sent, where would I add my TFHIRStringEdit?</p>",
        "id": 153964972,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527280823
    },
    {
        "content": "<p>to the FMX package</p>",
        "id": 153964973,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527280858
    },
    {
        "content": "<p>or there is still some digging before we reach that point?</p>",
        "id": 153964974,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527280860
    },
    {
        "content": "<p>and if it wants to add any FHIR units to the FMX package, we need to talk about each unit</p>",
        "id": 153964975,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527280879
    },
    {
        "content": "<p>so i guess you advise me to get rid of the TFHIRString property and use a TFHIRElement instead, right?</p>",
        "id": 153964976,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527280955
    },
    {
        "content": "<p>yes. it's a little more work now to make it entirely metadata driven, but it will be a lot better in the long run</p>",
        "id": 153964977,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527280996
    },
    {
        "content": "<p>tfhirelement is also declared in FHIR.R4.types, no?</p>",
        "id": 153964979,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527281211
    },
    {
        "content": "<p>oh. TFHIRObject not TFHIRElement. sorry</p>",
        "id": 153964980,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527281246
    },
    {
        "content": "<p>ah i remember being there...</p>",
        "id": 153964981,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527281283
    },
    {
        "content": "<p>it did not seem \"a little\" more work. :)</p>",
        "id": 153964982,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527281296
    },
    {
        "content": "<p>lol. we can add helper methods to the Base.Objects unit</p>",
        "id": 153964983,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527281335
    },
    {
        "content": "<p>i will try and go for it.</p>",
        "id": 153964984,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527281355
    },
    {
        "content": "<p>great</p>",
        "id": 153964985,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527281360
    },
    {
        "content": "<p>hope it rains tomorrow</p>",
        "id": 153964986,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527281365
    },
    {
        "content": "<p>oh?</p>",
        "id": 153964987,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527281372
    },
    {
        "content": "<p>then i have an excuse to stay in. :)</p>",
        "id": 153964988,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527281384
    },
    {
        "content": "<p>lol</p>",
        "id": 153964989,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527281395
    },
    {
        "content": "<p>i actually did manage to run this thing, but i had to use a trick.<br>\nfwiw: i made a tthirStringEdit but commented out the TFHIRString bit. Then I could install the component and place it in the form</p>",
        "id": 153964990,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527281443
    },
    {
        "content": "<p>then i added the rest to the code of the component and when it rebuilt, it worked.</p>",
        "id": 153964991,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527281489
    },
    {
        "content": "<p>so next adventure, get the TFHIRStringEdit installed in the FMX  library</p>",
        "id": 153964992,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527281523
    },
    {
        "content": "<p>trying to remember the difficulty - perhaps tfhirString has a .value. But TFHIRObject doesn't. I think it was somethign like this that made me go back to specific classes</p>",
        "id": 153964993,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527281598
    },
    {
        "content": "<p>i think that was it.</p>",
        "id": 153964994,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527281645
    },
    {
        "content": "<p>i could not do typecasting, because, well, the moment I cast something as a tfhirstring, then i need to use R4.types..</p>",
        "id": 153964995,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527281675
    },
    {
        "content": "<p>yes you have to use .getPropertyValue</p>",
        "id": 153964996,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527281682
    },
    {
        "content": "<p>aaaaah nice!</p>",
        "id": 153964997,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527281707
    },
    {
        "content": "<p>and what is the propname?</p>",
        "id": 153964998,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527281757
    },
    {
        "content": "<p>i think that may end up being a new property in my object, right?</p>",
        "id": 153964999,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527281784
    },
    {
        "content": "<p>for primitives it's always 'value'</p>",
        "id": 153965000,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527281834
    },
    {
        "content": "<p>ok, so <br>\n    fFHIRObject.getPropertyValue('value')<br>\nshould work, right?</p>",
        "id": 153965001,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527281898
    },
    {
        "content": "<p>yes</p>",
        "id": 153965002,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527282079
    },
    {
        "content": "<p>and how do i set the property value if i have this <br>\nsetPropertyValue(propname: string; propValue: TFHIRObject)<br>\n?<br>\nhow can i pass a value to propvalue? sorry if it's trivial but i don't see it</p>",
        "id": 153965003,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527282084
    },
    {
        "content": "<p>you need a factory to create it</p>",
        "id": 153965004,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527282107
    },
    {
        "content": "<p>so what your resource will need is a factory</p>",
        "id": 153965005,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527282117
    },
    {
        "content": "<p>mind = blown</p>",
        "id": 153965006,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527282614
    },
    {
        "content": "<p>any advice / pseudo-code to know how that is done would be helpful.</p>",
        "id": 153965007,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527282779
    },
    {
        "content": "<p>factory?</p>",
        "id": 153965008,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527282787
    },
    {
        "content": "<p>i will catch up on reading on factories. I will need that anyway. but any light on what i could end up with, inside my component?</p>",
        "id": 153965009,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527282846
    },
    {
        "content": "<p>my editor will have a tfhirObject, and i will re-route the editor's onChange method to update the object's property.</p>",
        "id": 153965010,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527282894
    },
    {
        "content": "<p>do i create an object there? I thought that is what factory was for..</p>",
        "id": 153965011,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527282912
    },
    {
        "content": "<p>you'd just have a property Factory : TFHIRFactory which has to be assigned at run time nd then you use that</p>",
        "id": 153965012,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527282991
    },
    {
        "content": "<p>but the factory is used to create an object, or am i missing the point?</p>",
        "id": 153965013,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527283210
    },
    {
        "content": "<p>yes you always create via the factory</p>",
        "id": 153965014,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527283255
    },
    {
        "content": "<p>i don't see the relation between the factory and the TFHIROPbject</p>",
        "id": 153965015,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527283257
    },
    {
        "content": "<p>you want to create a fhir string:</p>\n<p>var element := Factory.makeByName('string');</p>",
        "id": 153965016,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527283313
    },
    {
        "content": "<p>that's the same as TFHIRString.create but you'll get whatever is appropriate for the version</p>",
        "id": 153965017,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527283331
    },
    {
        "content": "<p>ah, ok.</p>",
        "id": 153965018,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527283369
    },
    {
        "content": "<p>and for setting element.value?</p>",
        "id": 153965019,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527283381
    },
    {
        "content": "<p>(when the user changes the edit, i must update the object)</p>",
        "id": 153965020,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527283447
    },
    {
        "content": "<p>this is the part i am missing. perhaps it's clear but it's late and i may be missing the obvious</p>",
        "id": 153965021,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527283490
    },
    {
        "content": "<p>no I've just discovered it's not obvious to me either. let me investigate</p>",
        "id": 153965022,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527283562
    },
    {
        "content": "<p>ok thanks</p>",
        "id": 153965023,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527283570
    },
    {
        "content": "<p>i will catch up tomorrow then.</p>",
        "id": 153965024,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527283581
    },
    {
        "content": "<p>THANK YOU for this.</p>",
        "id": 153965025,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527283592
    },
    {
        "content": "<p>np. Im glad you're wokring on it</p>",
        "id": 153965026,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527283643
    },
    {
        "content": "<p>hold that thought until I ask what is the UI editor for a Markdown type ;-)</p>",
        "id": 153965027,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527284237
    },
    {
        "content": "<p>I don't have an FMX editor for that</p>",
        "id": 153965028,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527284438
    },
    {
        "content": "<p>MyFactory.createPropertyList('ExampleScenario',false) throws  \"the implementation of TFHIRFactory.makeByName should never be called\"</p>",
        "id": 153965039,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527319064
    },
    {
        "content": "<p>you have to create  factory for the right version</p>",
        "id": 153965040,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527320843
    },
    {
        "content": "<p>almost there.</p>",
        "id": 153965047,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527370572
    },
    {
        "content": "<p>How can i create a resource given a name? is there a factory for that?</p>",
        "id": 153965048,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527370602
    },
    {
        "content": "<p>e.g. <br>\nmyresource:=xxxxcreate('Observation');</p>",
        "id": 153965049,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527370629
    },
    {
        "content": "<p>factory.makeByName</p>",
        "id": 153965050,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527370661
    },
    {
        "content": "<p>thanks</p>",
        "id": 153965051,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527370670
    },
    {
        "content": "<p>ok so one concept is working:<br>\nCreate UI components programmatically given the resource type - i only do parameters that strings (Tedit) or markdowns (tmemo) at the moment.</p>",
        "id": 153965052,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527371010
    },
    {
        "content": "<p>next i will go on to link those components to the elements (e.g. the TFHIRStringEdit) and see how that goes.</p>",
        "id": 153965053,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527371074
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/j5lRmpwvT4i7jFWvc6vwctCL/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/j5lRmpwvT4i7jFWvc6vwctCL/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/j5lRmpwvT4i7jFWvc6vwctCL/pasted_image.png\"></a></div>",
        "id": 153965054,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527372698
    },
    {
        "content": "<p>Here's what I realized: <br>\nBuilding the panel in the code like that is ok, but gets messy when i have to associate each component with its FHIRObject. So i'd want to make a composite component - TFHIRStringEdit should not be a descendant of TEdit, but should be a composite with a Label, an Edit, a Button.</p>",
        "id": 153965078,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527485478
    },
    {
        "content": "<p>good because I think the same.</p>",
        "id": 153965080,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527485505
    },
    {
        "content": "<p>and help text, and possibly a translations button for editing translations, or other extensions depending on setting</p>",
        "id": 153965081,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527485534
    },
    {
        "content": "<p>The procedure I have creates all the \"possibly required\" objects. perhaps this should be changed.</p>",
        "id": 153965082,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527485538
    },
    {
        "content": "<p>So when we have a resource, either <br>\n1. We build all possible object panels, and then associate object - UI whenever the object is selected. E.g. selecting a patient.contact updates the panel “contact” with the data of the current contact.<br>\nor<br>\n2. We build one panel for each object instance in the resource. Every time we add a contact with the button, we create a similar panel. So if we have 2 contacts for a patient, we have 2 panels and we display each when needed.</p>",
        "id": 153965083,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527485626
    },
    {
        "content": "<p>I am lazy so I would lean towards 2.</p>",
        "id": 153965084,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527485717
    },
    {
        "content": "<p>but it is just because it's too far to think about it. I do not yet know which one would actually make more sense.</p>",
        "id": 153965085,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527485840
    },
    {
        "content": "<p>maybe 1 is better if the UI panel has a \".load\" or \".associate\" method</p>",
        "id": 153965086,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527485874
    },
    {
        "content": "<p>while i still did not make the extensions and translations, I have a composite component that has a label (showing the FHIRPropertyName) and a button (which has a hint and whose purpose, tomorrow, will be to add another line and another tedit. Not sure how that will work but i will look at the methods and will probably figure it out.</p>",
        "id": 153965138,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527545617
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/vf_w2sfvr_LizNsAgnhdHBoi/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/vf_w2sfvr_LizNsAgnhdHBoi/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/vf_w2sfvr_LizNsAgnhdHBoi/pasted_image.png\"></a></div>",
        "id": 153965140,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527545638
    },
    {
        "content": "<p>(those are 2 components in the diagram btw. The multiple cardinality is not implemented.)</p>",
        "id": 153965141,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527545670
    },
    {
        "content": "<p>first TFHIRStringEdit has Multiple=true, second has Multiple=false;</p>",
        "id": 153965142,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527545696
    },
    {
        "content": "<p>this will probably need to evolve when we look at slicing, but for now i'd want to move to the next stuff.</p>",
        "id": 153965143,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527545726
    },
    {
        "content": "<p>the thing I am unable to do still is how to add the FHIR classes, e.g. TFHIRString.  The moment I do, there is the torrent of dependencies that i cannot manage at design time.</p>",
        "id": 153965145,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527545906
    },
    {
        "content": "<p>no you can't use them</p>",
        "id": 153965270,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527623800
    },
    {
        "content": "<p>we have to figure out how to do what you want to do that makes you want to use them</p>",
        "id": 153965271,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527623823
    },
    {
        "content": "<p>ok, if useful i have  draft component (not using the FHIR classes) and i can put it somewhere with a small project to test it.</p>",
        "id": 153965292,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527625336
    },
    {
        "content": "<p>current idea is to associate each UI component with a FHIR object.</p>",
        "id": 153965295,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527625398
    },
    {
        "content": "<p>tomorrow i will try to get one working app that uses my draft component, and show where my needs are.</p>",
        "id": 153965387,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527630466
    },
    {
        "content": "<p>ok</p>",
        "id": 153965392,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527630921
    },
    {
        "content": "<p>i put a few things up <br>\n- FHIRComponents.bpl is the package that contains one component in FHIR.FMX.Ctrls.pas  (WIP).<br>\n- UI_Creator is the app that generates UI from the resource name.<br>\n- FHIRComponentTest is the app to show how these should be \"glued\" together.</p>",
        "id": 153965965,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527720276
    },
    {
        "content": "<p>The challenge (as good as i can explain it at this time) is seen at TForm1.FHIRStringEdit1Change:<br>\nfor this component (i.e. for each TFHIRStringEdit) i use code like \"pat.identifierList\".</p>",
        "id": 153965967,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527720420
    },
    {
        "content": "<p>i would like such code to be hidden in the component itself, so that i don't have to recode for every resource</p>",
        "id": 153965968,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527720587
    },
    {
        "content": "<p>so if I would associate each component that i create with a property, and then inside the component i would update the FHIR property.<br>\nthis was possible using FHIR object types in the component definition. Without that, i don't know how to achieve the same.</p>",
        "id": 153965970,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527720877
    },
    {
        "content": "<p>what happened to Uix.Controls? why did you remove a whole heap of code out of it?</p>",
        "id": 153966127,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527801411
    },
    {
        "content": "<p>oh sorry, my mistake.</p>",
        "id": 153966201,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527809643
    },
    {
        "content": "<p>i was trying to get it to build without having the needed components so i changed it. Then i think i committed that  by mistake. My apologies</p>",
        "id": 153966205,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527809696
    },
    {
        "content": "<p>i was going to restore but it seems you already have done so, right?<br>\nthanks</p>",
        "id": 153966208,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527809803
    },
    {
        "content": "<p>yes i restored it</p>",
        "id": 153966209,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527809809
    },
    {
        "content": "<p>thanks</p>",
        "id": 153966210,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527809975
    },
    {
        "content": "<p>no problems</p>",
        "id": 153966211,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527809991
    },
    {
        "content": "<p>ok. catching up.... note sure what this question means: \"so if I would associate each component that i create with a property, and then inside the component i would update the FHIR property.<br>\nthis was possible using FHIR object types in the component definition\"</p>",
        "id": 153966251,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527815220
    },
    {
        "content": "<p>(my build is complaining about a missing FHIR.Version.Context.pas)</p>",
        "id": 153966374,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527839791
    },
    {
        "content": "<p>on associating a component with a property:</p>",
        "id": 153966375,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527839834
    },
    {
        "content": "<p>so you need to add a unit alias: FHIR.Version.Context=FHIR.Rx.Context where X is the version you are compiling for</p>",
        "id": 153966376,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527839883
    },
    {
        "content": "<p>in my small component demo app, i get the TFHIRStringEdit's onChange event, and  then put the value of the text in pat.identifier.</p>",
        "id": 153966377,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527839995
    },
    {
        "content": "<p>... ok...?</p>",
        "id": 153966378,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527840086
    },
    {
        "content": "<p>the idea behind making this a generic UI client is to avoid manually coding things like \"pat.identifier\".</p>",
        "id": 153966379,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527840106
    },
    {
        "content": "<p>if when generating the UI I could say \"for each property Px in this resource, create a UI component AND let  that component know that when it is updated, it is updating property Px\",</p>",
        "id": 153966380,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527840172
    },
    {
        "content": "<p>then i could avoid that code.</p>",
        "id": 153966381,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527840182
    },
    {
        "content": "<p>what I had before (but did not allow installing the UI component package) was exactly that: <br>\nI create a UI component instance, and then said \"from now, associate this instance with property Px.</p>",
        "id": 153966382,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527840334
    },
    {
        "content": "<p>and after that, i did not need to type any more references to FHIR objects.</p>",
        "id": 153966383,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527840463
    },
    {
        "content": "<p>umm ok. it's not crystal clear  what your asking for?</p>",
        "id": 153966384,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527845253
    },
    {
        "content": "<p>yeah, there is one design decision i haven't taken yet, and probably that is making things fuzzy</p>",
        "id": 153966385,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527845310
    },
    {
        "content": "<p>question: did you install the bpl i had made in the FMX_FHIR_UI folder? It's draft..</p>",
        "id": 153966386,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527845374
    },
    {
        "content": "<p>no i haven't installed it yet</p>",
        "id": 153966387,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1527845435
    },
    {
        "content": "<p>cause I just changed the component to show how i see it working</p>",
        "id": 153966388,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527845468
    },
    {
        "content": "<p>i.e. to show why \"this concept\" could work if I could use FHIR classes - the example App shows what is \"this concept\".</p>",
        "id": 153966389,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527845528
    },
    {
        "content": "<p>and now that i restart my ide i see it crashes... let me figure out what is the issue</p>",
        "id": 153966390,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1527846025
    },
    {
        "content": "<p>i pushed some code to show the concept i am after.</p>",
        "id": 153966596,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1528008884
    },
    {
        "content": "<p>the idea is:</p>",
        "id": 153966597,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1528009071
    },
    {
        "content": "<p>in FHIRComponentTest, i show how I use a TFHIRStringEdit:<br>\nsimply associate it with an FHIR element. in the example this is done by<br>\nres.nameElement:=FHIRStringEdit1.associate(res.nameElement);</p>",
        "id": 153966598,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1528009228
    },
    {
        "content": "<p>this is now (almost) working because I could tweak it by first installing the component without using FHIR classes, and only after that add the FHIR classes.</p>",
        "id": 153966599,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1528009417
    },
    {
        "content": "<p>so that is WIP 1: how to allow installing one component to which we can forward a FHIR class.</p>",
        "id": 153966600,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1528009474
    },
    {
        "content": "<p>the second WIP is to use this  in the automated UI generator:<br>\nthe UI generator now creates UI components for each FHIR property, so we can have something like:</p>",
        "id": 153966601,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1528009992
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>  PL:= ffactory.createPropertyList(st,true)     ;\n  for i := 0 to PL.Count-1 do\n  if PL.Properties[i].Type_ = &#39;string&#39; then begin\n    edt := TFHIRStringEdit.Create(parentframe);\n    currentProperty:=edt.associate(currentProperty);\n  end;\n</pre></div>",
        "id": 153966602,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1528010044
    },
    {
        "content": "<p>(the above is simplified code)</p>",
        "id": 153966603,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1528010106
    },
    {
        "content": "<p>and the last line i still have to figure out: how to point to the CurrentProperty object.</p>",
        "id": 153966604,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1528010181
    },
    {
        "content": "<p>when that is done, i can create a UI that allows editing whatever properties the factory tells it to.</p>",
        "id": 153966605,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1528010226
    },
    {
        "content": "<p>(the \"+\" button in the component still needs further thought. the idea is that if the FHIR object is a list, we forward that list to the component, and the component does the rest)</p>",
        "id": 153966606,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1528010754
    },
    {
        "content": "<p>How can i iterate through the actual properties of a resource instance?</p>",
        "id": 153967062,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1528208145
    },
    {
        "content": "<p>The CreatePropertyList allows me to create UI components for each possible property given the resource <strong>type</strong>. That works well. <br>\nNow I am looking to set each property of the resource <strong>instance</strong>.</p>",
        "id": 153967066,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1528208758
    },
    {
        "content": "<p>a test case for what i need to do could be <br>\n\"create an instance of a resource type Patient, set the value of each property of type 'identifier' to 'nothing' \".</p>",
        "id": 153967069,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1528209079
    },
    {
        "content": "<p>you can ask each object for it's property list</p>",
        "id": 153967134,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528224215
    },
    {
        "content": "<p>Ok and that also gets me the properties that are not set yet? Or only those that have already values assigned?</p>",
        "id": 153967151,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1528227935
    },
    {
        "content": "<p>no it gives you all, some of them won't have value s</p>",
        "id": 153967226,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528255017
    },
    {
        "content": "<p>exactly one year ago i was working on this, but I will need help to see if this makes sense to recover (i did it for fun and games, but it would end up being a generic FHIR resource editor):<br>\nI have a rough draft of something that allows me to programmatically generate a UI, and i got stuck in one thing - after I programmatically create a TEdit, i need to associate that TEdit content to an resource element. <br>\nIf I have a codeableConcept, this would create 2 groups of TEdits (coding + string) , which would be associated with the elements.</p>",
        "id": 167421015,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1559762015
    },
    {
        "content": "<p>every control would have its onExit which would do ThisElement.text=TEdit.text, etc.</p>",
        "id": 167421123,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1559762071
    },
    {
        "content": "<p>This is low priority, (ExampleScenario and IG Editor are more important) but i saw that <br>\na) there seems to be no tool for editing resources <br>\nb) at some point we will  grow tired of making xxxEditors<br>\nc) this could be fun not only for editing xxxEditors from the core spec but from profiles</p>",
        "id": 167421523,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1559762327
    },
    {
        "content": "<p>I think it makes much more sense to do that in javascript/html/electron</p>",
        "id": 167453643,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559799254
    },
    {
        "content": "<p>ok, then as soon as I get someone looking at Javascript, i can share some ideas, but I don't pursue it.</p>",
        "id": 167459286,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1559806982
    },
    {
        "content": "<p>yes that's the downside of doing it in javascript....</p>",
        "id": 167468068,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559815418
    }
]