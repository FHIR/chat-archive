[
    {
        "content": "<p>I'm having trouble finding any documentation on how to invoke the Patient/$everything operator (or any operator, really) using the SMART-on-FHIR client.  I've also looked at the fhir.js client it's based on.  I expect it's really easy and I'm just missing it, or it's not supported.  Anyone know?</p>",
        "id": 153950880,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1522931680
    },
    {
        "content": "<p>Yeah, I've been struggling with this over the weekend as well.  Maybe if we ask nicely, <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> might be able to give us a nudge in the right direction.</p>",
        "id": 193747122,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1586756765
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193731\">@Vladimir Ignatov</span>  would be the one with inside here on the SMART library, or <span class=\"user-mention\" data-user-id=\"191318\">@nicola (RIO/SS)</span>  on FHIR.js</p>",
        "id": 193770801,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1586783842
    },
    {
        "content": "<p>If this isn't supportive, it would clearly be a worthwhile addition! (has not been a focus in the SMART library because it's not part of the requirements for certification, but that's no reason to <em>omit</em> the functionality, especially because it is supported by a number of servers.)</p>",
        "id": 193770912,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1586783939
    },
    {
        "content": "<p>Perhaps this is confusing because there is no dedicated method for it. It is just a simple request though. Here is a working example with <code>fhirclient</code>:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"kr\">const</span> <span class=\"nx\">client</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">FHIR</span><span class=\"p\">.</span><span class=\"nx\">client</span><span class=\"p\">(</span><span class=\"s2\">&quot;https://r3.smarthealthit.org&quot;</span><span class=\"p\">);</span>\n<span class=\"nx\">client</span><span class=\"p\">.</span><span class=\"nx\">request</span><span class=\"p\">(</span><span class=\"s2\">&quot;Patient/2e27c71e-30c8-4ceb-8c1c-5641e066c0a4/$everything&quot;</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n    <span class=\"nx\">pageLimit</span><span class=\"o\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"nx\">flat</span><span class=\"o\">:</span> <span class=\"kc\">true</span>\n<span class=\"p\">});</span>\n</pre></div>\n\n\n<p>The fhirclient library does not provide API for working with operators. You build any request yourself and use the <code>client.request</code> function to execute it.</p>",
        "id": 193773082,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1586785592
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193731\">@Vladimir Ignatov</span> - Oh, awesome to connect with you for a moment.  I owe you a huge <em>thank you</em>, by the way.  You did a CodeSandbox example of how to use <a href=\"https://codesandbox.io/s/0q3n8?file=/package.json\" title=\"https://codesandbox.io/s/0q3n8?file=/package.json\">SMART on FHIR with React Router</a> that was simply awesome.  Knocked it out of the park with that one.</p>",
        "id": 193780200,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1586789926
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191678\">@Abigail Watson</span>  - Glad you liked it. It is probably worth saying that I did that mostly because that is what the React community would expect to see. However, for simple use-cases I sometimes prefer to store the client instance in a global variable (that is much cleaner and easy to reason about).</p>",
        "id": 193784469,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1586792383
    }
]