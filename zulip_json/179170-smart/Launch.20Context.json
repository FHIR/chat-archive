[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> I'm having trouble reading the smart app launch around context. </p>\n<p>This is what I think it says: </p>\n<ul>\n<li>Apps that launch from the EHR will be passed an explicit URL parameter called <code>launch</code></li>\n<li>if you access to the launch scope, you provide a scope of <code>launch</code>, or else <code>launch/patient</code> or <code>launch/patient</code> </li>\n<li>except I don't know what that means - there's only one launch scope. So what does it mean to qualify the scope? </li>\n<li>the client echoes the launch scope back</li>\n<li>why? What happens if it changes it? is that an error? It must be... which means that the server remembers it... so why echo it?</li>\n<li>then, the server provides the launch context back with the access token</li>\n<li>only now, it's not called <code>launch</code>, it's now migrated to being called <code>patient</code> or <code>encounter</code>, though it's not clear to me quite where those are defined or come from... i can only suppose that they come from the server's secret knowledge, making me wonder why there's a launch parameter in the first place...?</li>\n</ul>",
        "id": 197496734,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589418146
    },
    {
        "content": "<p>Let's take these one by one...</p>",
        "id": 197498375,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1589420047
    },
    {
        "content": "<blockquote>\n<p>if you access to the launch scope, you provide a scope of launch, or else launch/patient or launch/patient</p>\n</blockquote>\n<p>For the SMART EHR Launch Flow, you include <code>launch</code> scope to indicate that you need to learn launch context, and you include a <code>launch</code> query parameter to tie the session together in a way the EHR can control.</p>",
        "id": 197498402,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1589420133
    },
    {
        "content": "<blockquote>\n<p>except I don't know what that means - there's only one launch scope. So what does it mean to qualify the scope? </p>\n</blockquote>\n<p>The \"qualifications\" like <code>launch/patient</code> are used in the SMART Standalone Launch flow, for an app to say to the EHR: \"please make sure you figure out what patient record I should be working with before completing the launch process -- that's your job, not mine\"</p>",
        "id": 197498449,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1589420192
    },
    {
        "content": "<blockquote>\n<p>the client echoes the launch scope back why? What happens if it changes it? is that an error? It must be... which means that the server remembers it... so why echo it?</p>\n</blockquote>\n<p>Here we're back to talking about the SMART EHR Launch flow: the<code>launch</code> URL parameter is an <em>opaque handle</em> to the launch context; it's something the EHR knows how to interpret and the app does not. This allows for apps launched across browsers, or popping a system browser open from a native EHR client (etc), and the <code>launch</code> URL parameter ties the session together. The EHR needs to <em>validate</em> and <em>resolve</em> the launch value into a launch context, but it doesn't know a priori which <code>launch</code> value to expect with any given incoming request to the <code>authorize?</code> endpoint.  The EHR relies on the app to provide this parameter this as a means of tying the session together.</p>",
        "id": 197498528,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1589420334
    },
    {
        "content": "<blockquote>\n<p>only now, it's not called launch, it's now migrated to being called patient or encounter,</p>\n</blockquote>\n<p>Well, <code>launch</code> and <code>launch/patient</code>  and <code>launch/encounter</code> are <em>scopes</em> which, if granted, will cause the app to learn information (conveyed in the access token response as JSON properties like <code>patient</code> and <code>encounter</code>). They're not so much \"migrating\" as \"here's how you ask for something, and here's what you get\". The \"what you get\" properties are defined at <a href=\"http://hl7.org/fhir/smart-app-launch/scopes-and-launch-context/index.html#launch-context-arrives-with-your-access_token\">http://hl7.org/fhir/smart-app-launch/scopes-and-launch-context/index.html#launch-context-arrives-with-your-access_token</a>. We might look for stronger naming convention, but \"launch/patient\" -&gt; \"patient\" and \"launch/encoutner\" -&gt; \"encounter\" seemed fairly transparent to me.</p>",
        "id": 197498626,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1589420465
    },
    {
        "content": "<p>I feel like I haven't told you anything new here, though <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>, since I think you've implemented all of this already, years ago  -- so I may be missing the key aspect behind some of your questions.</p>",
        "id": 197498646,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1589420512
    },
    {
        "content": "<p>it turned out that there was something I had not implemented</p>",
        "id": 197500440,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589423059
    },
    {
        "content": "<p>is it reasonable for a client to expect that it it specifies <code>launch/patient</code>, then the access_token answer will contain a <code>patient</code>? is that the expectation? I don't see it stated anywhere explicitly</p>",
        "id": 197500513,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589423214
    },
    {
        "content": "<p>... that's how patient apps normally work - specify <code>launch/patient</code>, get back the patient ID</p>",
        "id": 197503476,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1589427763
    },
    {
        "content": "<p>yep - but is it explicitly mandatory? seems it should be stated. Does anyone know if other launch contexts than patient and encounter are supported? Is it expected that the access_token response includes <code>patient</code> if it has <code>encounter</code>?</p>",
        "id": 197503722,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589428096
    },
    {
        "content": "<p>Encounters could be associated with multiple patients (even if that's not supported in core)</p>",
        "id": 197504609,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1589429597
    },
    {
        "content": "<p>(Well it is indirectly - via Group)</p>",
        "id": 197504616,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1589429614
    },
    {
        "content": "<p>In general in OAuth, scopes are negotiable. A client can ask for certain scopes and a user or authorization server can grant a subset or even a different set.   We do have conformance language that allows a server to say whether it <em>supports</em> patient context or encounter context as a capability.</p>",
        "id": 197556551,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1589464169
    },
    {
        "content": "<p>That falls under the SMART core capability discovery page.</p>",
        "id": 197556608,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1589464198
    },
    {
        "content": "<p>so I am asking about the contexts, not the scopes. It seems the language is weak around the contexts</p>",
        "id": 197597347,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589480675
    },
    {
        "content": "<p>I agree it would be great if the language was more direct about requirements, but I think it at least sets the expectation that a client will receive a <code>patient</code> in the token response when requesting <code>launch/patient</code> (and same for encounter and launch/encounter):   \"Once an app is authorized, the token response will include any context data the app requested â€“ along with (potentially!) any unsolicited context data the EHR decides to communicate.\"</p>",
        "id": 197607432,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1589485268
    },
    {
        "content": "<p>Good question if you need to request both if you are expecting both a patient and encounter.  Or if that is even possible.</p>",
        "id": 197607587,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1589485348
    },
    {
        "content": "<blockquote>\n<p>It seems the language is weak around the contexts</p>\n</blockquote>\n<p>Would be happy to accept suggestions on how to tighten -- PR preferred (and we're working on conformance language in Argonaut, so we can review / merge pretty quickly).</p>",
        "id": 197618233,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1589490424
    },
    {
        "content": "<p>I'm facing this one today around having multiple patients in context. Should this be a space or comma sepeated list (as is a json prop can't repeat)</p>",
        "id": 202300359,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1593432555
    },
    {
        "content": "<p>There's no feature in SMART to list multiple patients in an authorization context today. We have user-level context which shares sccess for the whole set of patients available to the authorizing user. but if you want to provide access to, say, three specific patients, you would need to get three patient-specific access tokens, with today's SMART App Launch spec.</p>",
        "id": 202305790,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1593435947
    },
    {
        "content": "<p>This is a good subject for discussion at tomorrow's Meetup (details in <a class=\"stream\" data-stream-id=\"179247\" href=\"/#narrow/stream/179247-Security-and-Privacy\">#Security and Privacy</a> ).</p>",
        "id": 202305871,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1593435975
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> how would you interpret the following combination of scopes <code>user/*.read</code> + <code>launch/patient</code>? I'm trying to reconcile the clarification you provided above, that the user-level context is for ALL patients available to that user, with possibility that the app may also request a specific patient launch context in the same auth session.</p>",
        "id": 223591262,
        "sender_full_name": "Emil Diaz",
        "timestamp": 1611276532
    },
    {
        "content": "<p>\"I want access to read all the data that you can read, and I want to know what patient you had open in the EHR when you launched me\"</p>\n<ul>\n<li>\"I\" == app</li>\n<li>\"You\" == user running the app</li>\n</ul>",
        "id": 223591392,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1611276671
    },
    {
        "content": "<p>(Or for standalone launch, the latter part becomes \"what patient do you selected in the picker when you launched me\", but this is a less common case.)</p>",
        "id": 223591420,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1611276709
    },
    {
        "content": "<p>Ah, much clearer now. Thanks for the clarification <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span></p>",
        "id": 223594603,
        "sender_full_name": "Emil Diaz",
        "timestamp": 1611279803
    },
    {
        "content": "<p>Currently we have the <code>profile</code> value in the <code>id_token</code> (can't find where we document that or have examples) and that is the full URL for the user:<br>\n<a href=\"https://example.org/fhir/Practitioner/45\">https://example.org/fhir/Practitioner/45</a><br>\n<a href=\"https://example.org/fhir/Patient/123\">https://example.org/fhir/Patient/123</a><br>\n<a href=\"https://example.org/fhir/Person/123\">https://example.org/fhir/Person/123</a><br>\n<a href=\"https://example.org/fhir/RelatedPerson/123\">https://example.org/fhir/RelatedPerson/123</a></p>\n<p>I'm wondering do we have anything anywhere defining where a PractitionerRole could be defined as context?<br>\nCurrently I've drafted to either have them as extra claims in the id_token<br>\n(practitioner, practitionerRole, organization)<br>\nand alternatively in the launch context arriving with the access token.<br>\nMy preference is to want them in the id_token as that's what I'm using for my internal authorization tasks to ensure that the practitioner has the correct rights in the Smart App based on the role that they are in with the organization</p>",
        "id": 246543312,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1626754571
    },
    {
        "content": "<p>If you want to communicate additional <em>authentication relevant</em> information to the app, I'd indeed look at putting this in the id_token. It's outside of the SMART spec, but it's certainly fair game.</p>",
        "id": 246583714,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1626787753
    },
    {
        "content": "<p>Minor point, but should it be <code>fhirUser</code> and not <code>profile</code> here: \"Currently we have the <code>profile</code> value in the id_token\"?</p>",
        "id": 246632838,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1626806931
    },
    {
        "content": "<p>It should! (I was assuming Brian had some good reason for using <code>profile</code>, and since they're extending SMART in various ways, interop is less of a consideration.)</p>",
        "id": 246634974,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1626808044
    },
    {
        "content": "<p>Is that what's expected in the id_token too? I thought it was just the scope,  it the claim.</p>",
        "id": 246661558,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1626822384
    },
    {
        "content": "<p>Hence why was wondering where the id_token is documented (in smart)</p>",
        "id": 246661586,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1626822413
    },
    {
        "content": "<p><a href=\"http://hl7.org/fhir/smart-app-launch/scopes-and-launch-context/index.html#scopes-for-requesting-identity-data\">http://hl7.org/fhir/smart-app-launch/scopes-and-launch-context/index.html#scopes-for-requesting-identity-data</a></p>\n<blockquote>\n<p>Claims: The EHR SHALL support the inclusion of SMARTâ€™s fhirUser claim within the id_token issued for any requests that grant the openid and fhirUser scopes</p>\n</blockquote>",
        "id": 246664891,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1626825564
    }
]