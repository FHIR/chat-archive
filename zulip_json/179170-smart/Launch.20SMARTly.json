[
    {
        "content": "<p>Hi All,</p>\n<p>We are working on building a FHIR server and a SMART app for our project and would like to seek advice if our approach is complient with SMART framework</p>\n<p>As per the requirement, once successfully authenticated, the logged-in user will be taken to a home page where he/she can access mulitple records. The logged in user may have different role for each of the records shown in the home page. For an example, a mother logged in to the app can see the records of all of her children (as Auth Rep) and additioanl records for which the mother is nominated rep. The mother can nevigate from one record to another without being asked to re-login.</p>\n<p>Our solution approach is as follows (briefly):</p>\n<p>1. App will follow SMART launch sequences (starting from accessing CapabilityStatement)<br>\n2. The scope in the request will be \"patient/<em>.</em> openid fhirUser launch/patient\"<br>\n3. AuthZ server will issue the token for the logged-in user. <br>\n4. We are establishing the relationship between the logged-in user and associated records using Person.link, Patient, RelatedPerson model and roles are being managed using Consent. <br>\n5. Successful launch will return reference to the Person resource as fhirUser. The scope will be returned as \"patient/<em>.</em>\"  <br>\nOnce the access token is generated, the APP will call GET Patient using the token and FHIR server will return back all the records ( based on the Person.link) as applicable. The home page will be rendered based on this response. </p>\n<p>Is this approach aligned with SMART framework?</p>\n<p>With this approach we are unsure as to how we can inform the APP about what the logged in user is entitled to do for each records (except self record). One way is to hardcode the logic in APP based on the role returned (Person.link.RelatedPerson) or we can ask the APP to call Consent for each of the Patient instance? is there any better way? I saw some details around \"URI representation of scopes\". Is this applicable here?</p>\n<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> , <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>,  <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span>  any guidance will be extremely helpful..</p>",
        "id": 173248916,
        "sender_full_name": "Shovan Roy",
        "timestamp": 1565822486
    },
    {
        "content": "<p>If you're designing an app that can access multiple records on behalf of the user, then you should be looking at <code>user/</code> scopes rather than <code>patient/</code> scopes. When it comes to communicating information about what the user is allowed to do for each patient, you could explore Consent as you indicated; this is not something we have to tried to standardize, since it goes beyond the question of delegating permissions to the app (rather it is an issue about what the user has permission to do in the first place).</p>",
        "id": 173254307,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1565827848
    },
    {
        "content": "<p>Thanks a lot <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> , I'll update our design accordingly.</p>",
        "id": 173255259,
        "sender_full_name": "Shovan Roy",
        "timestamp": 1565829190
    },
    {
        "content": "<p>And the usage of the Person to mask the identity isn't something that's standardized at present, and you could even have internally done without exposing to FHIR.</p>",
        "id": 173259097,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1565834358
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> , does this mean we maintain the Person.link based logic internally ( which seems anyway we have to) But not to expose it as fhirUser? in that case what do you recommend to return as fhirUser or remove it from the scope?</p>",
        "id": 173261861,
        "sender_full_name": "Shovan Roy",
        "timestamp": 1565838380
    }
]