[
    {
        "content": "<p>Da Vinci has a use-case where we have a CDS Hook that's passing back a card suggesting the launch of a SMART App (specifying the URL of the app to launch).  The app being launched is 'generic', but the URL being passed back needs to be specific - it needs to include the URL of a form to be filled out and a token that will allow the app to access that form.  There are two mechanisms we could use to construct the URL:<br>\n<code>https://base.com/somesmartapplaunchurl?questionnaire=escapedsomeurl&amp;token=sometoken</code><br>\nor<br>\n<code>https://base.com/somesmartapplaunchurl/escapedsomeurl/sometoken</code></p>\n<p>The latter approach kind of sucks because it requires web server magic to turn the extra stuff on the end of the URL into parameters internally.  However, it's not clear if it's allowed to pass additional parameters on the smartapp.  Is it?</p>",
        "id": 205374821,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596037634
    },
    {
        "content": "<p>And a follow-up: Is there any standard way to provide the same sort of context information to the SMART App that gets provided when invoking the CDS Hook that returned the SMART app card?</p>",
        "id": 205432798,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596072399
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span></p>",
        "id": 205488072,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596120609
    },
    {
        "content": "<p>Hey Lloyd!</p>\n<blockquote>\n<p>Is there any standard way to provide the same sort of context information to the SMART App that gets provided when invoking the CDS Hook that returned the SMART app card?</p>\n</blockquote>\n<p>Yes, definitely. The <code>link.appcontext</code>is provided to do exactly this. See: <a href=\"https://cds-hooks.hl7.org/1.0/#link\">https://cds-hooks.hl7.org/1.0/#link</a></p>",
        "id": 205506796,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1596129896
    },
    {
        "content": "<p>Let me know if I'm misunderstanding your question. Note that CRD/DTR do already make use of this field in the CDS Hooks response to coordinate the card and the app, see: <a href=\"https://build.fhir.org/ig/HL7/davinci-crd/hooks.html#launch-smart-application\">https://build.fhir.org/ig/HL7/davinci-crd/hooks.html#launch-smart-application</a></p>",
        "id": 205506997,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1596129983
    },
    {
        "content": "<p>What's different between the stated need, above, and this appContext field is that information is not provided to the app as a url querystring, but rather, is provided to the app following the OAuth \"handshake\", alongside the access_token.</p>",
        "id": 205507103,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1596130050
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> I should have looked in the CDS Hooks spec rather than the SMART spec (the latter seems to have no reference).  I'm trying to understand how the link.appcontext is used by the EHR.  Is the link.appcontext passed as part of the initial call to the app via the URL?  A header?  If the URL, can an app be launched using POST (because the content might well be too big to go in the URL).  If it's not passed from EHR to app as part of the launch, is there a diagram somewhere showing where it's exchanged?</p>",
        "id": 205529776,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596141629
    },
    {
        "content": "<p>This little field does assume a super-high level of familiarity with both specs, a diagram could be useful here as background material (interested in logging a gh or jira issue? <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span> ). Here's what the CDS Hooks spec says in the definition of Link.appContext:</p>\n<blockquote>\n<p>The appContext field and value will be sent to the SMART app as part of the OAuth 2.0 access token response, alongside the other <a href=\"http://hl7.org/fhir/smart-app-launch/1.0.0/scopes-and-launch-context/#launch-context-arrives-with-your-access_token\">SMART launch parameters</a> when the SMART app is launched. </p>\n</blockquote>\n<p>\"as part of the OAuth2.0 access token response\" is the key part. It means that the appContext is passed during the final bit of the OAuth2 exchange. From this <a href=\"http://hl7.org/fhir/smart-app-launch/1.0.0/index.html#smart-authorization-sequence\">SMART diagram</a> -- it's part of the \"access token response\" -- <br>\n<a href=\"/user_uploads/10155/FyExK24Sl01YWiejIWglW7dg/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/FyExK24Sl01YWiejIWglW7dg/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/FyExK24Sl01YWiejIWglW7dg/image.png\"></a></div>",
        "id": 205536766,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1596145872
    },
    {
        "content": "<p>so, </p>\n<ul>\n<li>not as part of the launch (initial call) of the app</li>\n<li>not as part of a querystring (nor a urlencoded POST body)</li>\n</ul>\n<p>rather, as a json key/value element in the authorization server's HTTP response to the app's calling of the AS's /token endpoint.</p>\n<p>Further, I personally always recommend that contextual information about the app launch be passed in this same location. SMART allows implementation to extend the list of fields here and it's nice and secure and doesn't have length restrictions, etc. (For example, FHIRcast standardizes the passing of some additional values here as well).</p>",
        "id": 205536935,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1596145975
    },
    {
        "content": "<p>How does the auth server get it?  It's given to the EHR, not the auth server and my understanding is that auth server and EHR can be distinct <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span></p>",
        "id": 205550288,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596159449
    },
    {
        "content": "<p>wouldn't it have to be a scope for the the authserver?</p>",
        "id": 205552279,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1596162462
    },
    {
        "content": "<p>How could a bundle of arbitrary JSON data be a scope?</p>",
        "id": 205591835,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596203420
    },
    {
        "content": "<p>Hey Guys, For the system I'm most familiar with, there isn't a hard line between the auth server and resource server. More generally, SMART implies a tight relationship between these two systems. Another way to answer your question is -- the auth server knows about the appContext in the same way that the EHR knows about the launch token. </p>\n<p>Ultimately, for off-the-shelf CDS Clients and auth servers, there would need to be some additional mechanism of communicating the appContext that's not described in the CDS Hooks or SMART specs.</p>",
        "id": 205629743,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1596222642
    },
    {
        "content": "<p>There's actually 3 different notional systems - the Hooks Client/SMART client, the Auth Server and the resource server.  This would require out-of-band communication between the Hooks client and the Auth Server.  For the <code>launch</code> parameter, I don't think there would necessarily need to be out-of-band communication from SMART client to Auth Server to share the parameter - though there would need to be coordination about the content.  Needing to actually \"pass the data\" from the Hooks Client to the Auth Server so the Auth Server can then pass it to the app is a significantly higher bar.  Not an impossible one, but certainly one that should be made explicit.</p>\n<p><a href=\"https://jira.hl7.org/browse/FHIR-28178\">https://jira.hl7.org/browse/FHIR-28178</a></p>",
        "id": 205635618,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596225699
    }
]