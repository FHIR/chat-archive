[
    {
        "content": "<p>The <a href=\"http://jira.hl7.org/browse/FHIR-32325\">FHIR-32325</a> says </p>\n<p>Best practices for app developers include:</p>\n<p>My understanding is that \"app developer\" means both server developer and client developer. Is that correct? It is a little bit confusing that \"app\" may mean \"app in app store\".<br>\n<span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> <span class=\"user-mention\" data-user-id=\"191414\">@Dan Gottlieb</span></p>",
        "id": 247259268,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1627332284
    },
    {
        "content": "<p>Hey Yunwei, I understand the term \"app developer\" to apply only to client developers, as in SMART app developer.</p>",
        "id": 247372653,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1627410819
    },
    {
        "content": "<p>Then I don't quite understand this resolution<br>\n\"Ensure that refresh tokens are never used more than once\"<br>\nHow could a client ensure a refresh token are never used more than once? Shouldn't that be server's responsibility to ensure that?<br>\nThink about this scenario:<br>\nClient requests new token with a refresh token X. Server returns a new access token with the same refresh token X. Should client reject that?</p>",
        "id": 247389860,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1627419315
    },
    {
        "content": "<p>Not saying this is a good practice, but couldn't the client refresh their access token normally, but then also try to refresh it again?</p>\n<p>If the second attempt works, that's obviously not good.  Given that approach, maybe it's not advisable for clients to <em>always</em> try to refresh twice, but maybe it's ok to make the attempt once per session.</p>",
        "id": 247397250,
        "sender_full_name": "Carl Anderson",
        "timestamp": 1627423056
    },
    {
        "content": "<p>I think it is relevant to both, but perhaps could be more explicit:</p>\n<ul>\n<li>Servers should only <em>allow</em> a refresh token to be used once<ul>\n<li>be aware of when a refresh token has been used</li>\n<li>reject subsequent requests with the same token</li>\n</ul>\n</li>\n<li>Clients should <em>expect</em> that a refresh token will only be accepted once<ul>\n<li>make sure to update your refresh token with the next one</li>\n<li>gracefully fail if the refresh token has been invalidated (and perhaps warn the user?)</li>\n</ul>\n</li>\n</ul>\n<p>Note: I used 'should' out of conformance context - I think they would be clearer with a set of SHALLs, but these are best practices so...  <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 247398492,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1627423627
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span> That is also my understanding but the current resolution makes client to take the sole responsibility of that. That makes me feel confused.</p>",
        "id": 247408349,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1627430620
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span>  Re-reading the ticket, these are additions to 'best practices for app developers', so it makes sense they are focused on client requirements.  There is a complementary ticket: <a href=\"http://jira.hl7.org/browse/FHIR-32324\">FHIR#32324</a> which has the 'server developer' best practices.</p>\n<p>That ticket includes the server direction on expiring refresh tokens.</p>",
        "id": 247475796,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1627486815
    },
    {
        "content": "<p>That backs to my original question that the refresh token is issued and processed by server. Client has to use what ever server provided. I cannot imagine what client can do otherwise when server decide to reuse refresh token.</p>",
        "id": 247487807,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1627492373
    },
    {
        "content": "<p>If the server returns the same token again, it is a poorly behaved server and the client does not have a different token to use.  However, that is quite different from trying to reuse a token from an earlier call, which is what the line says: a client should not try to reuse a token that it has already used (e.g., don't reuse a token).  Even in the case of a poorly behaved server, the client can act appropriately in its code (e.g., the token happens to have the same value, but it is a <em>different</em> token).</p>\n<p>Especially given that there is no conformance language here, I am not clear on what the issue is.  If you think there could be additional clarification, I would suggest adding a comment to the ticket since it has been approved but not yet applied.</p>",
        "id": 247489336,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1627493071
    },
    {
        "content": "<p>Thanks, I added my comment to the ticket.</p>",
        "id": 247491262,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1627493927
    },
    {
        "content": "<p>Can we pull this ticket out of approved? If there is too much trouble, I can create a new ticket after it is applied</p>",
        "id": 247491717,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1627494130
    },
    {
        "content": "<p>Re-opening a ticket has a process, this falls under FHIR-I (I believe it needs a vote to open which needs at least 2/3 approval, but not sure beyond that).  At this point, I would guess it will be simpler to open a new ticket <em>if</em> you are unhappy with how this one gets applied (I don't think opening one now would do much, since the text hasn't been updated).</p>\n<p>With all of that said, point 2) in your comment is exactly what the best practice is trying to say.  A well-behaved client should expect that a token is single-use, check for a new refresh token, and then use it instead of trying to reuse an old one.</p>",
        "id": 247492570,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1627494559
    }
]