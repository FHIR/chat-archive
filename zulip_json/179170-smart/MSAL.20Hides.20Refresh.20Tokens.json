[
    {
        "content": "<p>Need help using MSAL which does not issue refresh tokens.</p>\n<p>SMART App Launch Framework documentation describes explicit use of refresh tokens.</p>\n<p>SMART retrieval and refresh sequence<br>\n<a href=\"https://www.hl7.org/fhir/smart-app-launch/#smart-retrieval-and-refresh-sequence\">https://www.hl7.org/fhir/smart-app-launch/#smart-retrieval-and-refresh-sequence</a></p>\n<p>App uses a refresh token to obtain a new access token<br>\n<a href=\"https://www.hl7.org/fhir/smart-app-launch/#step-5-later-app-uses-a-refresh-token-to-obtain-a-new-access-token\">https://www.hl7.org/fhir/smart-app-launch/#step-5-later-app-uses-a-refresh-token-to-obtain-a-new-access-token</a></p>\n<p>Client apps request refresh token via offline_access scope.  EHR FHIR Server supplies refresh_token in response back to the client.  Client uses refresh token to request new access tokens when the old access tokens expire.</p>\n<p>FHIR Servers that use with Azure Active Directory (AAD) authentication through Mircosoft Authentication Library (MSAL) cannot follow this flow because MSAL does not return refresh tokens anymore.  Although Azure Active Directory Library (ADAL) returned refresh tokens, MSAL does not.</p>\n<p>Stack Overflow posting - Get refresh token with MSAL<br>\n<a href=\"https://stackoverflow.com/questions/48952087/get-refresh-token-with-azure-ad-v2-0-msal-and-asp-net-core-2-0/58482043#58482043\">https://stackoverflow.com/questions/48952087/get-refresh-token-with-azure-ad-v2-0-msal-and-asp-net-core-2-0/58482043#58482043</a></p>\n<p>MSAL does not expose the refresh token, but rather keeps it internal and handles all token refresh and caching logic on the app's behalf.</p>\n<p>With reference to the OAuth2 protocol, MSAL completes steps related to refresh tokens on your behalf. It goes to the /token endpoint with an authorization code (after the end user signs in), and is issued an Access and Refresh token. The Access Token is valid for 1 hour, and when it's expired, MSAL AcquireTokenSilent will automatically use the refresh token against the /token endpoint to get a new access token.</p>\n<p>Although ADAL returned refresh tokens, the MSAL library does not.  Although a FHIR Server gets  <em>access tokens</em> from MSAL, it cannot get <em>refresh tokens</em> from MSAL.  Can the SMART on FHIR protocol specification be interpreted or implemented differently from the information last published in November 2018?</p>\n<p>SoF IG version published 2018-Nov-13 based on FHIR version 3.0.1 does not give any consideration to the possibility that EHR Authz will use an authentication provider that does not expose refresh tokens.</p>\n<p>\"7.1.6 Step 5: (Laterâ€¦) App uses a refresh token to obtain a new access token\" assumes all EHRs will be capable of supplying a refresh_token in the token response.  Any EHR Authz server that uses MSAL <em>cannot</em> issue refresh tokens from Microsoft because MSAL no longer gives them.  This means it will not be possible to follow 7.1.4 SMART retrieval and refresh sequence <a href=\"https://www.hl7.org/fhir/smart-app-launch/#smart-retrieval-and-refresh-sequence\">https://www.hl7.org/fhir/smart-app-launch/#smart-retrieval-and-refresh-sequence</a> because the refresh tokens are handled completely internally to MSAL used by the EHR Authz Server.</p>\n<p>Can anyone give opinions/guidance on whether silent, implicit handling of refresh tokens is still compliant with SMART on FHIR?  Will SOF documentation ever be updated to describe authorization flows where refresh token lifecycle is handled by only the FHIR server but not the client?</p>\n<p>Would the following alternative flow be acceptable when client will have only access tokens but will never have refresh tokens?</p>\n<ul>\n<li>Only the FHIR server will have refresh tokens.</li>\n<li>When an access token expires, FHIR server will return not authorized response to the client app.</li>\n<li>How can/should client request a new access token when client will never have a refresh token?</li>\n<li>Can client POST to FHIR server token endpoint with grant_type=refresh_token&amp;refresh_token={expired access token} ? </li>\n<li>FHIR server can validate the expired access token, confirm the internal refresh token life cycle time has not expired, use MSAL to get new access token, and return this new access token back to the client.</li>\n</ul>",
        "id": 225226193,
        "sender_full_name": "Torin Shepard",
        "timestamp": 1612474462
    },
    {
        "content": "<p><a href=\"https://github.com/AzureAD/microsoft-authentication-library-for-java/issues/228\">https://github.com/AzureAD/microsoft-authentication-library-for-java/issues/228</a><br>\nThis posting suggests Microsoft made an intentional design decision to hide refresh tokens even though this decision contradicts the SoF protocol.</p>",
        "id": 225735883,
        "sender_full_name": "Torin Shepard",
        "timestamp": 1612895734
    },
    {
        "content": "<p>I think this library wants to handle refresh tokens internally, rather than exposing them to the caller. That's not actually a SMART on FHIR protocol issue, so much as a library-internal design decision. But this library may not be a good choice for your needs.</p>",
        "id": 225737190,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1612896225
    },
    {
        "content": "<p>Thank you Josh!  After more investigation, we learned \"ADAL to MSAL migration\" at <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/migrate-adal-msal-java\">https://docs.microsoft.com/en-us/azure/active-directory/develop/migrate-adal-msal-java</a> explains MSAL for Java has an API that allows migrating refresh tokens acquired with ADAL4J.  We also learned more about MSAL token cache and how it stores refresh tokens.</p>",
        "id": 227354886,
        "sender_full_name": "Torin Shepard",
        "timestamp": 1614035281
    }
]