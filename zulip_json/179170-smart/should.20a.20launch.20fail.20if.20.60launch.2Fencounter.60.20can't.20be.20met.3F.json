[
    {
        "content": "<p>For example, if a user declines to select an encounter during the authorization process, should the AS return an error to the app's redirect_uri? Or rather, should the AS treat the authorization as successful and return an access token without an encounter value?</p>",
        "id": 210938525,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1600813143
    },
    {
        "content": "<p>I don't know what the correct answer here is, but I was wondering if there is precedent in OpenID Connect if the user authorizes some things but not authentication information (the <code>openid</code> scope).  Consider the whole authorization request as an error or just don't return <code>id_token</code>?  It seems like a similar situation.</p>",
        "id": 211002590,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1600867906
    },
    {
        "content": "<p>Specifically for encounter: I think it makes sense to proceed, since none of our authorization logic is tied to the encounter. In other words, proceeding without selecting an encounter will not result in broader. So it seems reasonable to complete the process and allow the app to work with what it's got. (Note that for the patient launch context parameter, the situation could be different -- if the app is requesting <code>patient/</code> scopes, then it does not make sense to complete the launch if no patient context has been established.)</p>",
        "id": 211006334,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1600869401
    },
    {
        "content": "<p>The general principle here is to think about scopes as independent and allow a launch to succeed or fail on with any approved subset -- but we have a couple of places like {<code>launch/patient</code> context scope ::  <code>patient/Whatever.read</code> access scope} where the logical dependency prevents these things from being approved totally independently.</p>",
        "id": 211006720,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1600869542
    },
    {
        "content": "<p>I think we clarified this a bit on the recent PR into SMART... was going to look at the laanguage again</p>",
        "id": 211013735,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1600872395
    },
    {
        "content": "<p>sometimes \"launch/encounter\" is a \"hint\" and I would definitely not expect that to fail (during \"launch from EHR\")</p>",
        "id": 211013790,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1600872425
    },
    {
        "content": "<p>language <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span>  and let me know if we want to clarify more: \"The application could choose to also provide <code>launch/patient</code> and/or <code>launch/encounter</code> as \"hints\" regarding which contexts the app would like the EHR to gather. The EHR MAY ignore these hints (for example, if the user is in a workflow where these contexts do not exist).</p>\n<p>If an application requests a clinical scope which is restricted to a single patient (e.g. <code>patient/*.read</code>), and the authorization results in the EHR is granting that scope, the EHR SHALL establish a patient in context. The EHR MAY refuse authorization requests including <code>patient/</code> that do not also include a valid <code>launch</code>, or it MAY infer the <code>launch/patient</code> scope.\"</p>",
        "id": 211014116,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1600872572
    },
    {
        "content": "<p>I can infer what Josh recommended above from that text, but it doesn't flat out say it :)</p>",
        "id": 211014152,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1600872588
    },
    {
        "content": "<p>If you think what I wrote above provides additional clarity and is consistent with the current language, then it might be worth adding to our spec some excerpts from my post above. (I'm not sure if I'm in a good position to judge ;-))</p>",
        "id": 211033744,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1600881238
    },
    {
        "content": "<p>thanks, guys!</p>",
        "id": 211153554,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1600963712
    },
    {
        "content": "<p>I think adding it would be good.  Someone will have the question again in the future.</p>",
        "id": 211199771,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1600988181
    },
    {
        "content": "<p>And I like using Jenni's word \"hint\" for it.  Very intuitive.</p>",
        "id": 211199846,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1600988232
    },
    {
        "content": "<p>The \"hint\" language is already in there, from the most recent round!</p>",
        "id": 211204361,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1600991903
    }
]