[
    {
        "content": "<p>In the capabilities, it calls out permissions for offline access, patient, and user scopes. However, there's nothing that calls out online access as a core capability. Is this just an accidental miss or is there some other reason it isn't called out on its own?</p>",
        "id": 207274385,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1597764561
    },
    {
        "content": "<p>I think it's just accidental -- though Isaac's PR from last week removed the \"core\" designation, so I think maybe the question is: why don't we have a <code>permission-online</code> capability in our list? I think we should! Anyone disagree?</p>",
        "id": 207285645,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1597770073
    },
    {
        "content": "<p>What does permission-online\" mean? I though online permission is default.</p>",
        "id": 207288645,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1597771443
    },
    {
        "content": "<p>By default a server might not support <em>any</em> refresh, right</p>",
        "id": 207289916,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1597772037
    },
    {
        "content": "<p>Does \"online\" mean the server issues refresh token when end user is online?</p>",
        "id": 207291856,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1597773011
    },
    {
        "content": "<p>Correct, online means they can refresh while the user is online/session is active</p>",
        "id": 207295453,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1597774817
    },
    {
        "content": "<p>If someone doesn't request online_access <em>or</em> offline_access, we assume it's a \"one time use\" type situation and wouldn't issue a refresh token to the application</p>",
        "id": 207303530,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1597778487
    },
    {
        "content": "<p>EG: \"I'm an app that is going to show my own system's data within the EHR, just need to call provider endpoint to get the email address of the person at first sign in and then I'm done\" type situation</p>",
        "id": 207303677,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1597778573
    },
    {
        "content": "<p>I always thought that \"online access\" presumed a level of shared session management that doesn't actually exist. For example, how does the AS actually know that the user is still actively using the app (aka \"online\")? Am I misunderstanding the meaning of this capability/scope?</p>",
        "id": 207418658,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1597849121
    },
    {
        "content": "<p>I think it assumes an embedded app, where the authorization server is part of the host system and so knows when the user is no longer active</p>",
        "id": 207420737,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1597850056
    },
    {
        "content": "<p>thanks, Michele. So appropriate use of \"online access\" would re-use the expiration of the access_token as a forced time-out/stand-in for single sign-out? E.g. access_token expires a few minutes after launch, and app can refresh it as long as the app's iframe container is still in active use by the original authorizing user? Do many SMART server implementers really have this level of integration between their web app containers (embedded browser controls/iframe managers) and their authorization servers? I struggle to imagine that they do.</p>",
        "id": 207425041,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1597851986
    },
    {
        "content": "<p>That's how I understand it, and I though Epic, Cerner servers did that ... but clearly Epic's does not!</p>",
        "id": 207425897,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1597852437
    },
    {
        "content": "<p>(ours does not as well for what is worth)</p>",
        "id": 207426005,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1597852469
    },
    {
        "content": "<p>We did have to add some session management workarounds for standalone as well. Obviously non-standard since there's not a good standard... :)</p>",
        "id": 207447542,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1597863456
    },
    {
        "content": "<p>Michele, why aren't you in our argonaut SMART calls?</p>",
        "id": 207597075,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1597979862
    },
    {
        "content": "<p>Discussing the extended scopes?</p>",
        "id": 207636088,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1598017807
    },
    {
        "content": "<p>yes, <a href=\"#narrow/stream/179170-smart/topic/Argonaut.20Announcements/near/208113882\">this one</a></p>",
        "id": 208144647,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1598473922
    },
    {
        "content": "<p>I'll just keep repeating 'don't do it' - will get old quickly</p>",
        "id": 208145464,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1598474329
    },
    {
        "content": "<p>:-)</p>",
        "id": 208145470,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1598474336
    },
    {
        "content": "<p>There are other topics too, like token introspection, launch context, client authentication...</p>",
        "id": 208145513,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1598474374
    }
]