[
    {
        "content": "<p>During <a href=\"https://www.devdays.com/us/schedule/#event-272\" target=\"_blank\" title=\"https://www.devdays.com/us/schedule/#event-272\">FHIR DevDays</a> in Redmond, we <a href=\"https://docs.google.com/presentation/d/1ICPyI-i363vPa43fV1e7BbiUySvFqi_zOfnLC7PIMVE/edit#slide=id.p1\" target=\"_blank\" title=\"https://docs.google.com/presentation/d/1ICPyI-i363vPa43fV1e7BbiUySvFqi_zOfnLC7PIMVE/edit#slide=id.p1\">talked through</a> some of the features we need from SMART scopes that our current syntax doesn't satisfy. (Also see <a href=\"#narrow/stream/179170-smart/topic/SMART.20and.20Basic\" title=\"#narrow/stream/179170-smart/topic/SMART.20and.20Basic\">related conversation</a>).</p>",
        "id": 167808521,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1560213011
    },
    {
        "content": "<p>Next steps:</p>",
        "id": 167808523,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1560213019
    },
    {
        "content": "<p>1) As a research step, collect and share the different production, SMART authorization servers' user-facing description of scopes. How are production AS's describing SMART scopes to users now?</p>",
        "id": 167808525,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1560213023
    },
    {
        "content": "<p>2) Simply adding in resource <code>category</code>s to our existing SMART syntax may quickly and simply alleviate a lot of the pain. Why not simply toss the resource category's name into the scope. e.g.</p>",
        "id": 167808529,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1560213032
    },
    {
        "content": "<p>* patient/Observation:lab.read</p>",
        "id": 167808530,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1560213039
    },
    {
        "content": "<p>* patient/Observation:activity.read</p>",
        "id": 167808538,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1560213050
    },
    {
        "content": "<p>* patient/Condition:encounter-diagnosis.read</p>",
        "id": 167808539,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1560213053
    },
    {
        "content": "<p>3) Somewhat related, <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> mentioned specifying a method for an <code>OperationOutcome</code> to specify the scope that would be required to resolve an access denied error to enable a progressive authorization approach. (<em>a la</em> enabling a <a href=\"https://restfulapi.net/hateoas/\" target=\"_blank\" title=\"https://restfulapi.net/hateoas/\">HATEOAS</a> approach).</p>",
        "id": 167808542,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1560213058
    },
    {
        "content": "<p>4) While SMART already describes a method for authorizing non-FHIR scopes by <a href=\"http://www.hl7.org/fhir/smart-app-launch/scopes-and-launch-context/index.html#extensions\" target=\"_blank\" title=\"http://www.hl7.org/fhir/smart-app-launch/scopes-and-launch-context/index.html#extensions\">prefixing the scope with __ (two underscores)</a>, it doesn't explicitly describe how to describe access to FHIR operations.</p>",
        "id": 167808543,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1560213061
    },
    {
        "content": "<p>5) Is there something we want to do with confidentiality classification (<a href=\"http://build.fhir.org/v3/ConfidentialityClassification/vs.html\" target=\"_blank\" title=\"http://build.fhir.org/v3/ConfidentialityClassification/vs.html\">http://build.fhir.org/v3/ConfidentialityClassification/vs.html</a>)? E.g. set a baseline confidentiality across resources (\"normal\"?), and if an app wants to access higher levels (e.g. \"restricted\" or \"very restricted\") there is an additional scope that needs to be requested? It would apply across resources IMO.</p>",
        "id": 167871526,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1560274246
    },
    {
        "content": "<p><a href=\"http://www.healthintersections.com.au/?p=2967\" target=\"_blank\" title=\"http://www.healthintersections.com.au/?p=2967\">http://www.healthintersections.com.au/?p=2967</a></p>",
        "id": 168172473,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560547086
    },
    {
        "content": "<p>this feels like a low impact addition to an operation outcome to me:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;resourceType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;OperationOutcome&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;break-the-glass&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;text&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;status&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;generated&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;div&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;&lt;div xmlns=\\&quot;http://www.w3.org/1999/xhtml\\&quot;&gt;This operation not authorized by the user. Approve &#39;Updated Medications&#39; during the Login process to OK this operation&lt;/div&gt;&quot;</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">&quot;issue&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;severity&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;error&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;forbidden&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;extension&quot;</span> <span class=\"p\">:</span> <span class=\"p\">[{</span>\n        <span class=\"nt\">&quot;url&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;http://hl7.org/fhir/StructureDefinition/operationoutcome-required-scope&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;valueCode&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;MedicationAdministration/write&quot;</span>\n      <span class=\"p\">}]</span>\n      <span class=\"s2\">&quot;details&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;text&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;The user did not authorise this operation&quot;</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre></div>",
        "id": 168285120,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560751378
    },
    {
        "content": "<p>I have added an extension <code>http://hl7.org/fhir/StructureDefinition/operationoutcome-required-scope</code> (which we would define formally in R5). The presence of this extension would indicate that the operation would be successful if the user approved the stated scope. The client application might want to initiate an OAuth sequence to ask the user to approve that scope (or ask  the user if they want to). </p>\n<p>The extension should only be used when the server has no other reason to deny this kind of operation, such that the user might reasonably expect it to succeed if they authorised the scope (though it may still fail for business rule reasons etc)</p>",
        "id": 168285208,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560751535
    },
    {
        "content": "<p>an alternative approach is to define the extension as <code>http://hl7.org/fhir/smart-app-launch/StructureDefinition/required-scope</code> - e.g. get smart to define it rather than putting it in R5</p>",
        "id": 168285261,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560751593
    },
    {
        "content": "<p>\"would be successful\" might be too strong. Presumably the operation could potentially fail for other reasons, given sufficient authorisation</p>",
        "id": 168285859,
        "sender_full_name": "Jim Steel",
        "timestamp": 1560752596
    },
    {
        "content": "<p>yes I guess. But you wouldn't send this back if the user didn't have the authority to run the operation even if the scope was authorised</p>",
        "id": 168286293,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560753288
    },
    {
        "content": "<p>that last statement is important. So you know that the app has overall the authority, just not with the scope it asked for. Not clear how you know that, but by making sure this is true you will not be exposing (leaking) security policy.</p>",
        "id": 168305385,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560774533
    },
    {
        "content": "<blockquote>\n<p>So you know that the app has overall the authority, just not with the scope it asked for</p>\n</blockquote>\n<p>There's only a few definitions of an app's authority, and they're all lists of OAuth2 scopes:</p>",
        "id": 168446655,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1560885647
    },
    {
        "content": "<p>1) the scopes the app specified during registration. <br>\n2) the scopes the app asked for during authorization.<br>\n3) the scopes granted by the user/authorization server.</p>",
        "id": 168446663,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1560885650
    },
    {
        "content": "<p>In the above <code>OperationOutcome</code> example did the app register for <code>user/MedicationAdministration.write</code>,  but either did not ask for it during authorization or it was denied by the user/AS ?</p>",
        "id": 168446665,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1560885653
    },
    {
        "content": "<p>In other words, should a FHIR server only return this <code>break-the-glass</code> OO when an app attempts to perform an unauthorized operation for which it has a registered scope?</p>",
        "id": 168446670,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1560885656
    },
    {
        "content": "<p>hmm I think I meant that the user has the authority, just haven't offered that to the app.</p>",
        "id": 168447748,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560886452
    },
    {
        "content": "<p>I think it would imply that the app is registered for that, but that either it didn't ask, or the user didn't approve.</p>",
        "id": 168447783,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560886490
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> specifically suggested this, so that apps don't have to ask for eveything from the user up front</p>",
        "id": 168447818,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560886519
    },
    {
        "content": "<p>Correct, this was <em>not</em> for break the glass. The workflow for break the glass would have to be more complicated/we would need to work that out specifically</p>",
        "id": 168448718,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1560887129
    },
    {
        "content": "<p>It implies that the server stops enforcing some of the user's privs</p>",
        "id": 168448832,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1560887207
    },
    {
        "content": "<p>And typically, that massively stepped up auditing and security logs happen</p>",
        "id": 168448848,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1560887222
    },
    {
        "content": "<p>break the glass is likely its own scope(s) separate from the existing scopes</p>",
        "id": 168448878,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1560887253
    },
    {
        "content": "<p>This was to get closer to 1) giving apps better errors when they either can't check scopes actually granted or don't check them and then try to access something they \"assume\" they have access to</p>",
        "id": 168449049,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1560887384
    },
    {
        "content": "<p>and 2) allow apps to do auth flows closer to what iOS and android do: which is ask for scopes as functionality is used within an app/slowly expand auth to only what is needed</p>",
        "id": 168449134,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1560887427
    },
    {
        "content": "<p>Do you think that if the break-glass scope is used the authentication should be re-challenged?<br>\nSuch as when you access confidential parts of your user profile?</p>",
        "id": 168468328,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1560904827
    },
    {
        "content": "<p>Has anyone seen a good UX on for progressive permissions in OAuth? (My impression has been that progressive permissions work well on mobile platforms because the whole interaction happens in a single pop-up with one tap -- approve or deny a single incremental request, like \"access contacts?\". I'd be interested in how this translates to OAuth, with a browser redirect, potentially a login, a decision, and a redirect back)</p>",
        "id": 168475088,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560916181
    },
    {
        "content": "<p>should not need a login, if it's still valid? Maybe we want a launch parameter to indicate incremental authorizing? Maybe I'll prototype it?</p>",
        "id": 168475646,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560917242
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span>  we did some really really high level discussions around what break the glass might look like over a year ago, and we did expect that it would go back through auth. We didn't discuss if it would require them to re-auth, but it's possible a system needs to capture additional info when that happens (like a reason).</p>",
        "id": 168509425,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1560953051
    },
    {
        "content": "<p>It was just a random side discussion with <span class=\"user-mention\" data-user-id=\"191936\">@Michael Donnelly</span> and I and a few others though</p>",
        "id": 168509505,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1560953121
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> I would love to hear about this... We do have a break-glass mechanism in the FHIR Spec today, as inserted by Grahame long time ago.  Im not all that happy with this, but haven't been involved in any alternative -- <a href=\"http://build.fhir.org/security-labels.html#break-the-glass\" target=\"_blank\" title=\"http://build.fhir.org/security-labels.html#break-the-glass\">http://build.fhir.org/security-labels.html#break-the-glass</a><br>\nYES, break-glass typically (in older systems) does require at least a \"are you sure\" prompt to the user, with usually a text box asking for \"why?\".</p>",
        "id": 168518247,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560958975
    },
    {
        "content": "<p>is this OperationOutcome extension intended only for break-glass type workflows? I understood it was also for workflows such as point-of-care-consent capture.</p>",
        "id": 168518374,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560959053
    },
    {
        "content": "<p>No, the operation outcome isn't intended at all for break the glass  right now</p>",
        "id": 168521353,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1560961260
    },
    {
        "content": "<p>I don't think we closed the break-the-glass discussion. For me, an important part is automatically switching out of break-the-glass mode (since users won't bother...). So I don't think of it as a new session - just a special function within the app. But an external app... is there any use case for an external app to have break-the-glass?</p>",
        "id": 168549788,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560981915
    },
    {
        "content": "<p>This may be a niche use case, but a constrained /Patient.write scope, limited to adding or modifying a specific Patient.identifier, could be useful.  A specialized Patient operation for this purpose might also make sense.  May be worth discussing further if there's wider interest in this type of thing.</p>",
        "id": 169049936,
        "sender_full_name": "Joel Schneider",
        "timestamp": 1561568716
    },
    {
        "content": "<p>What's the next step for this?</p>",
        "id": 175909378,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568729239
    },
    {
        "content": "<p>HL7-wise, I think this fits under our <a href=\"https://www.hl7.org/special/Committees/projman/searchableProjectIndex.cfm?action=edit&amp;ProjectNumber=1341\" target=\"_blank\" title=\"https://www.hl7.org/special/Committees/projman/searchableProjectIndex.cfm?action=edit&amp;ProjectNumber=1341\">existing project scope</a>.</p>",
        "id": 175910340,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568729774
    },
    {
        "content": "<p>So we could get a proposal on the table for an updated IG.</p>",
        "id": 175910555,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568729886
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191936\">@Michael Donnelly</span> re: scopes in particular, currently Epic doesn't use SMART scopes over the wire (e.g., ignores scopes requested by a client, and always enforces Epic-specified permissions that the developer requested at app registration time). Is this something that would be likely to change if we created \"scopes v2\"?</p>",
        "id": 175910567,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568729893
    },
    {
        "content": "<p>At this point, we plan to continue supporting scopes per <em>client</em> rather than per <em>token</em>.  We would be likely to enhance what we have now to return  more granular SMART scopes (in the JSON response to the /token endpoint) when they become available.</p>",
        "id": 175935268,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568745175
    },
    {
        "content": "<p>If UDAP trusted dynamic client registration comes to fruition, we'd need more granular scopes to assign the proper rights to dynamically created clients.</p>",
        "id": 175935467,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568745296
    },
    {
        "content": "<p>(E.g. we great access discretely to Observation (Lab Results) and Observations (Vitals) rather than broadly to Observations.)</p>",
        "id": 175935615,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568745381
    },
    {
        "content": "<blockquote>\n<p>we plan to continue supporting scopes per client rather than per token. </p>\n</blockquote>\n<p>But even per-client today, SMART scopes aren't used directly in Epic's registration process (i.e., SMART scopes don't show up by name in the app registration process, and the options that <em>do</em> appear are at slightly different granularity -- like search-as-distinct-from-read). This doesn't strike me as a huge problem, but it does make me wonder about the value of standardizing scopes, in a world where they're not actually being <em>used</em>.</p>",
        "id": 175935856,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568745521
    },
    {
        "content": "<p>All that said, I definitely want to work on improved scopes; I'm just trying to get a handle on whether they'll be used directly vs  serving as \"hints\".</p>",
        "id": 175936025,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568745611
    },
    {
        "content": "<p>others are using them.</p>",
        "id": 175936077,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1568745658
    },
    {
        "content": "<p>(In UDAP trusted dyn-reg, Epic could <em>still</em> ignore on-the-wire scopes and simply pin the newly-registered app's permissions to the set of permissions provided during the up-front registration step.)</p>",
        "id": 175936085,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568745660
    },
    {
        "content": "<p>Yes, I agree others are using them; I'm just trying to understand the interest expressed here from the Epic team, since Michael and Isaac brought this up :)</p>",
        "id": 175936130,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568745685
    },
    {
        "content": "<blockquote>\n<p>(In UDAP trusted dyn-reg, Epic could <em>still</em> ignore on-the-wire scopes and simply pin the newly-registered app's permissions to the set of permissions provided during the up-front registration step.)</p>\n</blockquote>\n<p>In the use case we discussed on Sunday, there'd be no pre-existing parent client in the EHR.  The client would provide a software statement signed by a cert issued by a trusted certifying body (e.g. healtheway), and we'd trust it (and issue a client for our system) because we'd trust that certifier.</p>",
        "id": 175937183,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568746324
    },
    {
        "content": "<blockquote>\n<p>But even per-client today, SMART scopes aren't used directly in Epic's registration process (i.e., SMART scopes don't show up by name in the app registration process, and the options that <em>do</em> appear are at slightly different granularity -- like search-as-distinct-from-read). This doesn't strike me as a huge problem, but it does make me wonder about the value of standardizing scopes, in a world where they're not actually being <em>used</em>.</p>\n</blockquote>\n<p>True!  But if we (the community) can get SMART scopes to the level of granularity we (Epic) believe is necessary, we (Epic) will be able to use them in our client creation process.</p>",
        "id": 175937401,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568746467
    },
    {
        "content": "<blockquote>\n<p>The client would provide a software statement signed by a cert issued by a trusted certifying body</p>\n</blockquote>\n<p>to be clear, what I mean is that this software statement could bake in a list of \"scopes\" or permissions of some kind, just as it bakes in a redirect_uri, etc.</p>",
        "id": 175941672,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568749372
    },
    {
        "content": "<p>Indeed, it <a href=\"http://www.udap.org/udap-dynamic-client-registration.html\" target=\"_blank\" title=\"http://www.udap.org/udap-dynamic-client-registration.html\">does</a> as a claim in the JWT: </p>\n<blockquote>\n<p>scope: string, space delimited list of requested scopes (optional))</p>\n</blockquote>",
        "id": 175941775,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568749449
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>The client would provide a software statement signed by a cert issued by a trusted certifying body</p>\n</blockquote>\n<p>to be clear, what I mean is that this software statement could bake in a list of \"scopes\" or permissions of some kind, just as it bakes in a redirect_uri, etc.</p>\n</blockquote>\n<p>That's what I meant too.  But I'm saying that, in that scenario, we wouldn't have the software statement until the moment the client requests to create a dynamic client.</p>",
        "id": 175942233,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568749820
    },
    {
        "content": "<p>Ah, I found the miscommunication.  You said \"the set of permissions provided during the up-front registration step,\" and I was thinking you meant  up-front client creation with Epic.  If you're talking about registration with a third party certifying body, we're on the same page.</p>",
        "id": 175942389,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568749929
    },
    {
        "content": "<p>Indeed :) I was talking about these both equivalently</p>",
        "id": 175944593,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568751508
    }
]