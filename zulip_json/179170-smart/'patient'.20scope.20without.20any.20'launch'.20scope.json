[
    {
        "content": "<p>I have been wondering if there is a valid use-case for any of these scope combinations:</p>\n<ol>\n<li>\n<p>scope only have <code>patient</code> (ie: scope = 'patient/Patient.read')</p>\n<ul>\n<li>Problem I see here is no context to evaluate this access_token with</li>\n</ul>\n</li>\n<li>\n<p>scope only have <code>launch</code> (ie: scope = 'launch' or scope = 'launch/patient')</p>\n<ul>\n<li>Problem I see here is no permissions to do an actual operations</li>\n</ul>\n</li>\n<li>\n<p><code>user</code> scopes with a <code>launch</code> scope (ie: scope = 'launch/patient user/Patient.read'</p>\n<ul>\n<li>Problem I see here is the <code>user</code> scope does not rely on context nor would it restrict access to just the patient in context</li>\n</ul>\n</li>\n</ol>",
        "id": 218126710,
        "sender_full_name": "Robert Smayda",
        "timestamp": 1606508570
    },
    {
        "content": "<p>Hey Robert, at least for 2 and 3, I've seen:</p>\n<ol start=\"2\">\n<li>Sometimes launching an app and communicating the user's identity is itself valuable, even without any other APIs in use. </li>\n<li>But many health it apps are designed to operate on a single patient's record at a time; therefore, the app needs to build a \"patient picker\" -- a UI to allow the user to select which patient is in context. In theory, the <code>launch</code> scope pushes this UI element / functionality onto the authorization server from the app.</li>\n</ol>",
        "id": 218325047,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1606760622
    },
    {
        "content": "<p>I will add to Isaac's use cases - we have several apps that just use the openid/fhirUser  and no actual FHIR resources (the info in the id token is enough for their app to do what is needed), or that use that + user/Provider.read (to get more detailed info about the user)</p>",
        "id": 218331046,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1606763327
    }
]