[
    {
        "content": "<p><a href=\"/user_uploads/10155/wn4-fqIKgJWUumj2vUepHujP/image.png\">image.png</a> <br>\nAbove image is from the SMART simulated app example, where when we decode access_token value from the access token response, we also find id_token within the access_token. Is that a requirement of OIDC or SMART on FHIR? OR is that not really required? In many of the OIDC implementations, I have seen that base64 decoded access_token value has a \"sub\" field that generally represents the user identifier.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/wn4-fqIKgJWUumj2vUepHujP/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/wn4-fqIKgJWUumj2vUepHujP/image.png\"></a></div>",
        "id": 214490467,
        "sender_full_name": "Sagar Shah",
        "timestamp": 1603633792
    },
    {
        "content": "<p>The access token format in smart is totally unspecified. Client applications should not rely on this as anything except an opaque value.</p>",
        "id": 214506103,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1603652361
    },
    {
        "content": "<p><a href=\"https://www.youtube.com/watch?v=X2lmbHAeOMg\">https://www.youtube.com/watch?v=X2lmbHAeOMg</a> goes into some of the details here and talks a little bit about the design of our testing server, which stashes all kinds of information in the access token in order to remain stateless.</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"X2lmbHAeOMg\" href=\"https://www.youtube.com/watch?v=X2lmbHAeOMg\"><img src=\"https://i.ytimg.com/vi/X2lmbHAeOMg/default.jpg\"></a></div>",
        "id": 214506187,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1603652450
    },
    {
        "content": "<p>Thank you for clarifying. So considering that access token as an opaque value, client (3rd party App) is now able to hit API on behalf of patient or any provider user based on the scope available to the app, And all that access is made available or denied based on scope config and specific resource access. But where and how user permissions/access needs to be checked in this flow in an ideal scenario so that if the user himself does not have access to perform certain action, then the action gets denied</p>",
        "id": 214516758,
        "sender_full_name": "Sagar Shah",
        "timestamp": 1603665506
    },
    {
        "content": "<p><em>that</em> is not something SMART tries to standardize, and indeed real-world policies can be incredibly complicated (e.g., to follow differing state regulations and so forth). SMART helps delegate a user's permissions to an app; but the user's permissions themselves must be defined and enforced by the system below this.</p>",
        "id": 214517880,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1603667066
    },
    {
        "content": "<p>Thanks for clarifications on this, <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> .</p>",
        "id": 214518472,
        "sender_full_name": "Sagar Shah",
        "timestamp": 1603667907
    }
]