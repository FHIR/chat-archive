[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> some questions about the backend services spec</p>",
        "id": 153909187,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505887790
    },
    {
        "content": "<p>doc says:</p>",
        "id": 153909188,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505887803
    },
    {
        "content": "<ul>\n<li>Register a fixed “issuer URL” with the EHR</li>\n<li>Register a public RSA key with the EHR (for RSA SHA-256 signatures)</li>\n</ul>",
        "id": 153909189,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505887807
    },
    {
        "content": "<p>then the JWT says:</p>",
        "id": 153909190,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505887834
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>{\n &quot; iss&quot;: &quot;https://{app url}&quot;,\n</pre></div>",
        "id": 153909191,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505887865
    },
    {
        "content": "<p>I think that the app url is meant to be the 'fixed \"issue URL\" with the EHR</p>",
        "id": 153909192,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505887888
    },
    {
        "content": "<p>but I'm confused about whether it should or shouldn't have 'https://' when registered. this is unclear</p>",
        "id": 153909193,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505887936
    },
    {
        "content": "<p>also the exp value in the sample JWT is... creative</p>",
        "id": 153909194,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505887980
    },
    {
        "content": "<p>I have the same question about the token url with regard to prefix...</p>",
        "id": 153909195,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505888012
    },
    {
        "content": "<p>The fixed issuer url should be registered with the EHR (including \"https\"), and should be inserted wholesale as the jwt's <code>iss</code> property. Agree this should be clearer.</p>",
        "id": 153909272,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1505910775
    },
    {
        "content": "<p>Ditto for the token url.</p>",
        "id": 153909273,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1505910798
    },
    {
        "content": "<p>How is the <code>exp</code> creative? It's 1422568860, an integer number of seconds since epoch representing Thursday, January 29, 2015 10:01:00 PM, presumably when the example was written.</p>",
        "id": 153909275,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1505911086
    },
    {
        "content": "<p>I don't think this specification has been implemented as written (though I'm not aware of places where it's broken... yet). I know <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> and <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> have expressed interest.</p>",
        "id": 153909276,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1505911266
    },
    {
        "content": "<p>hmm. \"exp\" - I must have read the wrong piece of code. It thought it was relative</p>",
        "id": 153909278,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505912230
    },
    {
        "content": "<p>Josh, we are actively developing  support for Backend services as written.</p>",
        "id": 153909333,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1505918177
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> : <code>expires_in</code> on the token response is relative...</p>",
        "id": 153909334,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1505918206
    },
    {
        "content": "<p>I think we'll be trying to do something for the connectathon and as this matures. Right now we use the OAuth 2 \"client credentials\" grant b/c it didn't seem like backend services had been ironed out yet. I reached out internally to see if there were any concerns with the draft as specified</p>",
        "id": 153909343,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1505919470
    },
    {
        "content": "<p>I know we generally prefer not having the symmetric/shared secret :)</p>",
        "id": 153909345,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1505919535
    },
    {
        "content": "<p>I'm curious how the certificate management part of this may work</p>",
        "id": 153909346,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1505919566
    },
    {
        "content": "<p>No certificates! Just bare keys :-)</p>",
        "id": 153909347,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1505919696
    },
    {
        "content": "<p>I guess I need to reread that draft :)</p>",
        "id": 153909348,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1505919723
    },
    {
        "content": "<p>But either way, just public key, IIRC</p>",
        "id": 153909349,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1505919810
    },
    {
        "content": "<p>Yes.</p>",
        "id": 153909350,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1505920035
    },
    {
        "content": "<p>another question about the JWT - it says </p>\n<div class=\"codehilite\"><pre><span></span>&quot;sub&quot; : &quot;app_client_id&quot;\n</pre></div>",
        "id": 153909439,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505939522
    },
    {
        "content": "<p>is this literal? if it's not, what is it ? (<span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>)</p>",
        "id": 153909441,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505939545
    },
    {
        "content": "<p>Not literal ;-) It's meant to express the OAuth <code>client_id</code> that the backend service received when registering with the EHR.</p>",
        "id": 153909442,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1505939573
    },
    {
        "content": "<p>the specification doesn't otherwise mention anything about a client_id from the backend service</p>",
        "id": 153909443,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505939624
    },
    {
        "content": "<p>It is the <code>sub</code> field in the JWT</p>",
        "id": 153909445,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505939713
    },
    {
        "content": "<p>does the client_id bring any value over the issuer url?</p>",
        "id": 153909446,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505939752
    },
    {
        "content": "<p>I think it does - but the spec should mention it explicitly in 'Registering a SMART Backend Service'</p>",
        "id": 153909447,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505939788
    },
    {
        "content": "<p>Yes! PRs or GH issue reports welcome on this stuff ;)</p>",
        "id": 153909449,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1505939880
    },
    {
        "content": "<p>In theory, you could have a bunch of services all relying on the same issuer. When registering a service with the EHR, we'd say that the service supplies the issuer value, and the EHR assigns a client_id.</p>",
        "id": 153909450,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1505939965
    },
    {
        "content": "<p>ok where exactly do you want change proposals?</p>",
        "id": 153909451,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505940160
    },
    {
        "content": "<p>For backend services: <a href=\"http://docs.smarthealthit.org/authorization/backend-services/\" target=\"_blank\" title=\"http://docs.smarthealthit.org/authorization/backend-services/\">http://docs.smarthealthit.org/authorization/backend-services/</a> has an \"<a href=\"https://github.com/smart-on-fhir/smart-on-fhir.github.io/edit/master/authorization/backend-services/index.md\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/smart-on-fhir.github.io/edit/master/authorization/backend-services/index.md\">edit this page</a>\" link</p>",
        "id": 153909452,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1505940208
    },
    {
        "content": "<p>hmm. so I have to propose specific changes? what about changes inside the diagrams?</p>",
        "id": 153909454,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505940329
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> I think that this is a valid JWT according to the instructions:</p>\n<div class=\"codehilite\"><pre><span></span>eyJhbGciIDogIlJTMjU2IiwidHlwIiA6ICJKV1QifQ.eyJhdWQiIDogImh0dHBzOi8vbG9jYWwuZmhpci5vcmc6OTYxL2F1dGgvdG9rZW4iLCJleHAiIDogLTE5MDIzMjIwNDgsImlzcyIgOiAiaHR0cDovL2xvY2FsLmZoaXIub3JnIiwianRpIiA6ICIzYWVhZTcyNC0yNmQ2LTQ3MzctYTRkMS0xYzYzM2QxZmJiN2QiLCJzdWIiIDogbnVsbH0.V1m1BLojiA2RNUdalgWAwYyyFuzTVodFlz94wqn9oB4NBQ-QzCAcl6LqG-8sA0gsDhJSMcCxHjUKV2-qwWqAfFw827RmYYDqbvipFFA9OWxh9mJcalMq4QJGF9G0WzVE8y2_g7ZkVKkFtuLpnWy4Pr8CCY_LK4AjZb9kJMAST1sJWrLtloEvBIAxOUBn-DD0S6HtRgPjV4Y9hPf_WZRybXjMckxQYLcM8XZCE54AZpUyndBOn-gV2Wo4DMmoRyLyuZ0reWPzah9EgTmL9oHLw4_jGRBBmMltqs2ZlQaCeDUrSZJmc2jvpRxZUzXf-72T5vXZTRjzdAbJDvGCD0Sd7Q\n</pre></div>",
        "id": 153909462,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505944258
    },
    {
        "content": "<p>this is the public key:</p>",
        "id": 153909463,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505944266
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/FmQN4Mxa4l6_J3bDLlyabE3W/test.fhir.org.cer\" target=\"_blank\" title=\"test.fhir.org.cer\">test.fhir.org.cer</a></p>",
        "id": 153909464,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505944319
    },
    {
        "content": "<p>can you check for me please... given that there's no other implementations..</p>",
        "id": 153909465,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505944346
    },
    {
        "content": "<p>The <code>sub</code> is null in that JWT</p>",
        "id": 153909466,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505944479
    },
    {
        "content": "<p>And the <code>exp</code> is -1902322048 (Monday, September 20, 1909 9:12:32 AM GMT)</p>",
        "id": 153909467,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505944534
    },
    {
        "content": "<p>Technically, the JWT is correct (signature verified too). Functionally though, the values are odd (especially the <code>sub</code>).</p>",
        "id": 153909470,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505944603
    },
    {
        "content": "<p>grr both of those programming mistakes. I was focused ont the hard stuff. at least those are easy to fix</p>",
        "id": 153909517,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505947385
    },
    {
        "content": "<p>anyway thanks</p>",
        "id": 153909518,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505947398
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>eyJhbGciIDogIlJTMjU2IiwidHlwIiA6ICJKV1QifQ.eyJhdWQiIDogImh0dHBzOi8vbG9jYWwuZmhpci5vcmc6OTYxL2F1dGgvdG9rZW4iLCJleHAiIDogMTUwNjA3MDExNiwiaXNzIiA6ICJodHRwOi8vbG9jYWwuZmhpci5vcmciLCJqdGkiIDogIjgwNTQzNmZhLWE4NjYtNDVlMy05MjUzLTJhY2VmZWRjNjk2ZiIsInN1YiIgOiAidGVzdF9jbGllbnRfaWQifQ.R2EPxixnZrqgvkPAbYdKgD7Coi4mf6o9G9-yIvQqKvrDCcXyODemGbGN_krhrsFa8wdhhBQTMkhbvn7-VOoSeQQFNujQfXn1gxTkk-vo5DD39EGmCQr-RxlgPaHzxys7JwPvqhKGHw2MBDhcrhaKBhU7KIBEfBkxm4gzBTJdh8L4248H2xShEGJV5Sg1BXgPWGpKB3BDhVt3_Gm29YmiXigSrDrwtHYezSSxpFPF42dSAtVhccKKKodnEM3hFK2FP8_T0kzNgV4uhX_inqcP7AFUH-I3iyzkfAtazs5hV-xaMy-aukdthL_S8lgBUWLGFGhvHqMVjjHhRz-aPyk6uw\n</pre></div>",
        "id": 153909519,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505947780
    },
    {
        "content": "<p>fixed...</p>",
        "id": 153909520,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505947786
    },
    {
        "content": "<p>One of you has figured out how to override my Zulip pref of not sending desktop notifications – I'm getting them for messages in this thread only!</p>",
        "id": 153909521,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1505947840
    },
    {
        "content": "<p>... you have been pwned</p>",
        "id": 153909522,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505947853
    },
    {
        "content": "<p>UNPLUG UNPLUG</p>",
        "id": 153909523,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1505947867
    },
    {
        "content": "<p>more seriously you can set that in a per stream level yourself</p>",
        "id": 153909524,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505947899
    },
    {
        "content": "<p>That's what I'm saying – I've never opted in to notifications (except PMs) but I'm getting them for this stream, without touching anything</p>",
        "id": 153909525,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1505947966
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> - The new JWT you posted looks much better.  The <code>exp</code>value though is set to Friday, September 22, 2017 8:48:36 AM GMT. Per the current draft, the <code>exp</code> \"MUST be no more than five minutes in the future.\"</p>",
        "id": 153909528,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505948524
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191339\">@Pascal Pfiffner</span> - Maybe someone defaulted your notifications for the #smart stream back when you worked on the SMART team?</p>",
        "id": 153909529,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505948593
    },
    {
        "content": "<p>Maybe. Bastards!!<br>\nIt was indeed checked, no idea why, unchecked now. :)</p>",
        "id": 153909530,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1505948655
    },
    {
        "content": "<p>I missed that about exp. why does that rule exist?</p>",
        "id": 153909531,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505949007
    },
    {
        "content": "<p>reading further into the spec:<br>\nrequired scope is \"system/CommunicationRequest.write (which allows the app to generate alerts for clinical users)\" - why must a backend services server - a spec useful for all sorts of reasons - have clinical users, let alone let any client communicate with them?</p>",
        "id": 153909532,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505949205
    },
    {
        "content": "<p>A short lived <code>exp</code> allows issuers to rotate their keys on a frequent basis. Given that our JWTs in this scenario are transient, making them short lived makes sense.</p>\n<p>The <code>exp</code> is also useful for mitigating replay attacks. While the <code>jti</code> serves this purpose explicitly, it also requires clients to maintain a cache of known <code>jti</code> values it has encountered. While this is recommended, I'm sure many clients will not keep this type of state. In this case, the <code>exp</code> is an easy check to prevent any replays after the short lived window.</p>",
        "id": 153909547,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505951437
    },
    {
        "content": "<p>I understand why it might be good to rotate keys. enforcing this by sealing the exp on JWT seems... very round about.</p>",
        "id": 153909548,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505951504
    },
    {
        "content": "<p>your second paragraph... why do clients need to maintain a cache of their own jti values?</p>",
        "id": 153909549,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505951548
    },
    {
        "content": "<p>How else would clients know if they have seen a previous <code>jti</code> (nonce) value?</p>",
        "id": 153909550,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505951657
    },
    {
        "content": "<p>The purpose of the <code>jti</code> is so that a JWT can only be claimed once by the intended client</p>",
        "id": 153909551,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505951694
    },
    {
        "content": "<p>In order to enforce that, the client must record the <code>jti</code>when it validates the JWT. If it sees another JWT with the same <code>jti</code>, then it should reject it since an attacker is attempting to replay the JWT</p>",
        "id": 153909552,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505951762
    },
    {
        "content": "<p>but clients create the jti value... that's why I'm not sure what you mean</p>",
        "id": 153909553,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505951763
    },
    {
        "content": "<p>The issuer creates the JWT (and thus <code>jti</code>)</p>",
        "id": 153909554,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505951775
    },
    {
        "content": "<p>When I say \"client\" I'm referring to the entity receiving the JWT and the entity identified by the client_id (<code>sub</code>)</p>",
        "id": 153909556,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505951829
    },
    {
        "content": "<p>doesn't the server receive the JWT?</p>",
        "id": 153909557,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505951859
    },
    {
        "content": "<p>In <a href=\"http://www.websequencediagrams.com/?lz=dGl0bGUgQmFja2VuZCBTZXJ2aWNlIEF1dGhvcml6YXRpb24KCm5vdGUgb3ZlciBBcHA6ICBDcmVhdGUgYW5kIHNpZ24gYXV0aGVudGljACsFIEpXVCBcbntcbiAgImlzcyI6ICJodHRwczovL3thcHAgdXJsfSIsABoFc3ViIjogImFwcF9jbGllbnRfaWQAFAdleHAiOiAxNDIyNTY4ODYwLCAATAVhdWQARA10b2tlbgBICyAianRpIjogInJhbmRvbS1ub24tcmV1c2FibGUtand0LWlkLTEyMyJcbn0gLS0-AIE7BndpdGggYXBwJ3MgcHJpdmF0ZSBrZXkgKFJTQSBTSEEtMjU2KQpBcHAtPkVIUgCCGQUAgiYFZXI6ICBQT1NUIAB8EwCCJhFzY29wZT1zeXN0ZW0vKi5yZWFkJlxuZ3JhbnRfdHlwZT0AgXsHY3JlZGVudGlhbHMmXG4AghAHYXNzZXJ0aW9uACUGdXJuOmlldGY6cGFyYW1zOm9hdXRoOgCCPQYtACMJLXR5cGU6and0LWJlYXJlcgA8Ez17and0IGZyb20gYWJvdmV9AINiCwCBWxFJc3N1ZSBuZXcgAIJxBToAg2AFImFjY2Vzc18AgwQFIjogInNlY3JldC0AgxQFLXh5eiIsXG4iZXhwaXJlc19pbiI6IDMwMCxcbi4uLlxufQoAgkMPLT4AhF8FWwBQBgBjBiByZXNwb25zZV0KCgo&amp;s=default\" target=\"_blank\" title=\"http://www.websequencediagrams.com/?lz=dGl0bGUgQmFja2VuZCBTZXJ2aWNlIEF1dGhvcml6YXRpb24KCm5vdGUgb3ZlciBBcHA6ICBDcmVhdGUgYW5kIHNpZ24gYXV0aGVudGljACsFIEpXVCBcbntcbiAgImlzcyI6ICJodHRwczovL3thcHAgdXJsfSIsABoFc3ViIjogImFwcF9jbGllbnRfaWQAFAdleHAiOiAxNDIyNTY4ODYwLCAATAVhdWQARA10b2tlbgBICyAianRpIjogInJhbmRvbS1ub24tcmV1c2FibGUtand0LWlkLTEyMyJcbn0gLS0-AIE7BndpdGggYXBwJ3MgcHJpdmF0ZSBrZXkgKFJTQSBTSEEtMjU2KQpBcHAtPkVIUgCCGQUAgiYFZXI6ICBQT1NUIAB8EwCCJhFzY29wZT1zeXN0ZW0vKi5yZWFkJlxuZ3JhbnRfdHlwZT0AgXsHY3JlZGVudGlhbHMmXG4AghAHYXNzZXJ0aW9uACUGdXJuOmlldGY6cGFyYW1zOm9hdXRoOgCCPQYtACMJLXR5cGU6and0LWJlYXJlcgA8Ez17and0IGZyb20gYWJvdmV9AINiCwCBWxFJc3N1ZSBuZXcgAIJxBToAg2AFImFjY2Vzc18AgwQFIjogInNlY3JldC0AgxQFLXh5eiIsXG4iZXhwaXJlc19pbiI6IDMwMCxcbi4uLlxufQoAgkMPLT4AhF8FWwBQBgBjBiByZXNwb25zZV0KCgo&amp;s=default\">this diagram</a> on the backend services draft page, it is the \"App\"</p>",
        "id": 153909558,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505951866
    },
    {
        "content": "<p>and the App (the client) creates the JWT</p>",
        "id": 153909559,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505951877
    },
    {
        "content": "<p>Arg...wait...</p>",
        "id": 153909560,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505951892
    },
    {
        "content": "<p>My bad</p>",
        "id": 153909561,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505951900
    },
    {
        "content": "<p>I had this flipped (I was thinking CDS Hooks)</p>",
        "id": 153909562,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505951906
    },
    {
        "content": "<p>You are correct</p>",
        "id": 153909563,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505951914
    },
    {
        "content": "<p>ok. so the server has to prevent replay attacks. that's obvious, but not stated. another pull request on the way...</p>",
        "id": 153909564,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505951941
    },
    {
        "content": "<p>So everything where I said the client needs to verify the JWT, replace that with the EHR :-)</p>",
        "id": 153909565,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505951942
    },
    {
        "content": "<p>setting key expiry to &lt;5 minutes means the clocks have to be correct... I always prefer to be &gt;1 hour, given timezone pecularities...</p>",
        "id": 153909566,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505952217
    },
    {
        "content": "<p>why I defaulted to 24 hours, even though I would never actually reuse it</p>",
        "id": 153909567,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505952237
    },
    {
        "content": "<p>I agree that 5min is too short since the current proposal is requiring the server + ehr to have clock consistency</p>",
        "id": 153909569,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505952516
    },
    {
        "content": "<p>so... 2 hours?</p>",
        "id": 153909570,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505952534
    },
    {
        "content": "<p><del>We</del> <del>need</del> <del>to</del> <del>add</del> <del>an</del> <code>iat</code> <del>claim</del> <del>to</del> <del>the</del> <del>JWT.</del> <del>This</del> <del>would</del> <del>prevent</del> <del>any</del> <del>clock</del> <del>skew</del></p>",
        "id": 153909571,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505952600
    },
    {
        "content": "<p><code>iat</code> is issued at time (seconds since epoch). This is the time from the server and will be consistent with the <code>exp</code>. The EHR can then compare <code>exp</code> to <code>iat</code>. (We use this in CDS Hooks)</p>",
        "id": 153909572,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505952645
    },
    {
        "content": "<p>Wait, no.</p>",
        "id": 153909573,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505952698
    },
    {
        "content": "<p>I need more sleep :)</p>",
        "id": 153909574,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505952708
    },
    {
        "content": "<p>Yes, the <code>exp</code> value needs to be longer than 5min. 2 hours seems like too long still. 15 minutes?</p>",
        "id": 153909575,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505952775
    },
    {
        "content": "<p>well, if we say that the servers have to do offset from iat, then it doesn't have to be long... but, really, doesn't that do away with the supposed security advantage of a short exp?</p>",
        "id": 153909576,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505952969
    },
    {
        "content": "<p>It doesnt..that's what my \"wait, no\" comment was referring to</p>",
        "id": 153909577,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505953349
    },
    {
        "content": "<p>The use of <code>exp</code> requires the clock of the server and EHR to be in sync. <code>iat</code> doesn't help prevent this</p>",
        "id": 153909578,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505953501
    },
    {
        "content": "<p>so, where does this end up then? iat doesn't really help. exp is still too short to be robust against clock deviations. timezone associated deviations can be +/- 1 hour... so an exp window of +/- 1 hour + a few minutes, and servers mandated to track jti for 24 hours... no replay attacks, and robust against clock variations</p>",
        "id": 153909579,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505954127
    },
    {
        "content": "<p>Clock skew shouldn't be in hours, right? Timezone differences should affect any skew since both the server and EHR should be looking at the UTC time, right?</p>",
        "id": 153909580,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1505954609
    },
    {
        "content": "<p>hmm. yes lets assume that whether timezones changes are wrong or not, servers will correct to UTC internally consistently. (though my implementation may not in the microseconds around the change)</p>",
        "id": 153909581,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505954916
    },
    {
        "content": "<p>perhaps 5min does it . <a href=\"https://serverfault.com/questions/394967/what-is-a-realistic-average-time-difference-between-servers-in-the-same-lan\" target=\"_blank\" title=\"https://serverfault.com/questions/394967/what-is-a-realistic-average-time-difference-between-servers-in-the-same-lan\">https://serverfault.com/questions/394967/what-is-a-realistic-average-time-difference-between-servers-in-the-same-lan</a></p>",
        "id": 153909583,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505955104
    },
    {
        "content": "<p>I think 5min is a pretty reasonable recommendation. It requires that machines really do synchronize their clocks to a timeserver, but it doesn't require any heroics.</p>",
        "id": 153909587,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1505957974
    },
    {
        "content": "<p>Timeout should not be mandated in SMART.. guidelines as recommendations are useful for initial implementers. But actual timeouts used should be in the hands of the specific environment.  This allows some systems that have high trust, to be less chatty... while others, in very unstable environments, to be more conservative. Thus risk drives actual.  Yes, include useful guidance, but don't mandate it.</p>",
        "id": 153909730,
        "sender_full_name": "John Moehrke",
        "timestamp": 1506004327
    },
    {
        "content": "<p>the goal here is very specific: ensure that the tokens are single use</p>",
        "id": 153909774,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506020690
    },
    {
        "content": "<p>Now that I've fully implemented the backend services spec, I don't really see that it has any value. Say we compare to it to a baseline which is a server that uses SSL+basic Authentication (username/password). What attack vectors does the backend services protocol close down that the simple baseline doesn't?</p>",
        "id": 153909871,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506066121
    },
    {
        "content": "<p>and I can't see what it is. If someone can break into the client and get the username/password, they can break into the client and get the privatekey/issuer. then they can impersonate the client</p>",
        "id": 153909872,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506066372
    },
    {
        "content": "<p>except that if they can MITM the SSL, they very likely to be able to keep doing that</p>",
        "id": 153909873,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506066372
    },
    {
        "content": "<p>ok, true, if someone can MITM the SSL, then they can impersonate the baseline client indefinitely, where as with the backend services spec, they can only do so for the length of the session .. that is, 15 min</p>",
        "id": 153909874,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506066372
    },
    {
        "content": "<p>because given the increased complexity, it better be something really good...</p>",
        "id": 153909875,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506066372
    },
    {
        "content": "<p>somehow those are all out of order for me</p>",
        "id": 153909876,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506066483
    },
    {
        "content": "<p>read them by the clock, not their literal order...</p>",
        "id": 153909890,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506081358
    },
    {
        "content": "<p>The backend services spec just provides whatever value you think there is in using asymmetric secrets (as opposed to symmetric secrets). No more or less IMO.</p>",
        "id": 153909917,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1506087849
    },
    {
        "content": "<blockquote>\n<p>Say we compare to it to a baseline which is a server that uses SSL+basic Authentication (username/password). </p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> do you mean basic Auth on an OAuth \"token\" endpoint?</p>",
        "id": 153909919,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1506087953
    },
    {
        "content": "<p>The general protections that asymmetric access provides: clients don't need to be worried about a hacked server leaking their credentials; clients don't need to be worried about getting \"tricked\" into revealing a secret to the wrong party (because they never reveal secrets and every authentication  JWT has a built-in audience); clients can manage rotation of their own secrets as-needed; clients don't need to manage a store with multiple secrets (one per EHR)</p>",
        "id": 153909922,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1506088763
    },
    {
        "content": "<p>using SSL + Basic auth (username/password) is bad because of the password management. backend passwords then to be static, static passwords are bad. It is, a 'shared secret', not an asymmetric authentication.  Using Mutual-Auth-TLS enables use of Public/Private key authentication, with opportunity for revocation management. These certificates can be issued for very long periods of time (2-10 years), thus limiting the management. Where a breach would update revocation (CRL or OCSP).    Why not using mutal-auth-TLS?</p>",
        "id": 153909926,
        "sender_full_name": "John Moehrke",
        "timestamp": 1506090661
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> the existing spec is asymmetric, it's just not using certs. I don't think we want true mutual TLS for this (not that network layer). If you're saying you want more of a cert trust model, that's different. But still asymmetric auth.</p>",
        "id": 153909956,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1506101771
    },
    {
        "content": "<p>My basic first question is indeed, why not mutual-auth-TLS for backend-to-backend... Yes, not using OAuth at all...  I am not against OAuth for this, but I first want to understand why TLS is not recommended. And I think that TLS has precedent and advantages.   OAuth is indeed better in some cases, I am not against it. Just think that it is legitimate solution for backend-to-backend, especially for long-term relationships.</p>",
        "id": 153909957,
        "sender_full_name": "John Moehrke",
        "timestamp": 1506102487
    },
    {
        "content": "<p>Mutual TLS isn't exactly easy to configure, first. (this isn't backend to backend - the fhir server is usually a \"front end\" thing). It's not 1:1, it's 1:many from FHIR's perspective</p>",
        "id": 153909963,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1506105312
    },
    {
        "content": "<p>and not everything that connects to the fhir server will use this - SMART apps use the same endpoint</p>",
        "id": 153909964,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1506105331
    },
    {
        "content": "<p>Also, it's nice to have something that can be passed throught the stack to prove original identity of caller, if needed (auditing/security logging/etc in non-FHIR based systems)</p>",
        "id": 153909965,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1506105491
    },
    {
        "content": "<p>I agree with those points.. and have pointed it out <a href=\"https://healthcaresecprivacy.blogspot.com/2016/11/is-iua-oauth-useful-in-service-to.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2016/11/is-iua-oauth-useful-in-service-to.html\">https://healthcaresecprivacy.blogspot.com/2016/11/is-iua-oauth-useful-in-service-to.html</a>...  They are good points, but not terminal points. Some backends are backend-to-backend and would be easier to configure TLS... Hence why I asked where the differentiation was.</p>",
        "id": 153909966,
        "sender_full_name": "John Moehrke",
        "timestamp": 1506106483
    },
    {
        "content": "<p>comments:</p>\n<ul>\n<li>ok I didn't consider the server being hacked. </li>\n<li>Mutual TLS might not be easy to configure but it's a walk in the park compared to implementing this</li>\n<li>I'm not sure this counts as truly asymmetric when the server doesn't have to provide cyrpto proof of identity to the client. Not that I really want to do that too</li>\n<li>I agree that this makes it easier for OAuth and services clients to use the same end-points than mutual TLS - though you could set up mutual TLS just for special token end-point</li>\n</ul>",
        "id": 153909982,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506114130
    },
    {
        "content": "<p>I think the backend services spec should have a section that discusses 'why not mutual TLS'. And no, I'm not doing a PR for that because I don't know what it should say</p>",
        "id": 153909983,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506114249
    },
    {
        "content": "<p>Debugging that JWT, you can use this great site <a href=\"https://jwt.io/\" target=\"_blank\" title=\"https://jwt.io/\">https://jwt.io/</a><br>\nDoes the extract and validate ;)</p>",
        "id": 153910157,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1506312906
    },
    {
        "content": "<p>Working in the EDIS space for decades, we're having a hard time understanding why backend services need this complex auth scheme for inter-HCF(Health Care Facility) communication?</p>\n<p>Our system exchanges pt related data i.e. drugs, labs, prescriptions,allergies, many others with other vendor's systems within the same secure network within the hospital/UCF/FSED.</p>\n<p>We pre-coordinate everything, including IP Addresses, protocols, message formats, any auth if necessary. This is important because when two backend systems communicate, it's an open pipe 24/7/365; continuous data interchange interfaces.</p>\n<p>None of the recommendations here even make sense in a backend interface B2B inter-HCF environment.<br>\nThe only relevant application for this that I can see is for net-to-net interchanges i.e. cloud etc.</p>\n<p>This is the way the major players in the industry have exchanged data since digital data exchange began.</p>\n<p>I can understand perhaps securing the pipe; although it's redundant in a secure inter-facility network. </p>\n<p>When we need to communicate outside the facility, we either send a DIRECT message, or establish a VPN connection prior to send.</p>",
        "id": 153919865,
        "sender_full_name": "David Keith",
        "timestamp": 1510785256
    },
    {
        "content": "<p>SMART is a security layer that is being developed in HL7, informed by Argonaut. It is NOT a mandate for FHIR. The Security WG has been very careful to support and encourage security/privacy layers, while not mandating any one specific. We ask only that the Risks to Privacy and Security are managed. You have described a way of doing this.</p>",
        "id": 153919868,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510787105
    },
    {
        "content": "<p>That said, I do think that using SMART does make sense for backends... It is an alternative and you might find it is a harder alternative to using more blunt security solutions.</p>",
        "id": 153919870,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510787201
    },
    {
        "content": "<p>I usually need to defend SMART in a different way... see <a href=\"https://healthcaresecprivacy.blogspot.com/2017/04/fhir-security-model-is-enterprise.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2017/04/fhir-security-model-is-enterprise.html\">https://healthcaresecprivacy.blogspot.com/2017/04/fhir-security-model-is-enterprise.html</a></p>",
        "id": 153919871,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510787223
    },
    {
        "content": "<p>You might find the OAuth specification from IHE more helpful for organization-to-organization   <a href=\"https://healthcaresecprivacy.blogspot.com/2016/11/is-iua-oauth-useful-in-service-to.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2016/11/is-iua-oauth-useful-in-service-to.html\">https://healthcaresecprivacy.blogspot.com/2016/11/is-iua-oauth-useful-in-service-to.html</a></p>",
        "id": 153919872,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510787281
    },
    {
        "content": "<p>and there are possibility to just use a organization-to-organization tunnel (such as Mutually-Authenticated-TLS)</p>",
        "id": 153919873,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510787400
    },
    {
        "content": "<p>I have more blog articles at <a href=\"https://healthcaresecprivacy.blogspot.com/p/fhir.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/p/fhir.html\">https://healthcaresecprivacy.blogspot.com/p/fhir.html</a></p>",
        "id": 153919874,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510787407
    },
    {
        "content": "<p>Your treatise on using SSH is interesting... although I make my living in the Windows world I prefer to work with Linux where possible. I have set up SSH tunnels using.... RSA, I think, for scripted transfer of files. It's a very viable option, even on windows with plink... it's just that too few windows techs are familiar with the tech or are willing to set something up.</p>\n<p>In all fairness I must point out that establishing the comm link using cert exchange can often take a few seconds. In a high volume messaging environment you either have to batch your messages in a store-and-forward mechanism (which adds complexity to the coding process) or auth for each message, which has the potential to slow down message transfer. This can be a show stopper in a high volume environment.</p>\n<p>Still, having worked with and programmed SSH systems in times past it seems like a quite logical choice if implemented properly. Very simple to implement, and completely secure...</p>",
        "id": 153919875,
        "sender_full_name": "David Keith",
        "timestamp": 1510789835
    },
    {
        "content": "<p>I think the details of what guarantees we want/need in the SMART backend services API are still up for discussion -- that's why we're running a Connectathon track in January on Bulk Data, which will give implementers and opportunity to try out the specifications and share their experience.</p>",
        "id": 153919877,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1510790239
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194827\">@David Keith</span> it sounds like your use case may not be a good fit for the SMART backend services specification (which is separate from the question I raised above about whether the SMART spec is more complex than it needs to be). From the perspective of security design, i would also love to get your take on on the principle that internal services should be secured as though they were public. For example <a href=\"https://research.google.com/pubs/pub43231.html\" target=\"_blank\" title=\"https://research.google.com/pubs/pub43231.html\">https://research.google.com/pubs/pub43231.html</a> is one example embodying this principle.</p>",
        "id": 153919878,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1510790710
    },
    {
        "content": "<p>It's really not. The problem is we as an EDIS are a 'little fish', swimming in a big HIS-centric pond for most of our installations are often subservient to the larger system vendors' approaches; if HIS says proprietary, it's proprietary. If HL7v2 with proprietary mods, so it is. Secure, we must use their designated security protocols. </p>\n<p>That's why the smart solutions, which seem to make a lot of sense for individual pt's and clinicians, really don't work in the interface world. But if this is the only approach that an HIS vendor sees as valid due to it being pushed as the optimal or preferred 'standard', we may have to go through a clunky, man hour intensive process to implement this, only to later on down the road go through a remake when everyone figures out that this approach doesn't fit the requirement.</p>\n<p>I've had to do this several times, very frustrating as it diverts programming man hours away from far more important tasks.</p>\n<p>I'll take a look at your reference and respond.</p>",
        "id": 153919880,
        "sender_full_name": "David Keith",
        "timestamp": 1510791290
    },
    {
        "content": "<p>I feel I need to clarify my position. I am very much a supporter of SMART. I like it, I think it is a good-enough minimally-viable  approach that hits a very large percentage of the need. I am however very much a supporter of other specific specifications. Specific as in as detailed as SMART will be. Specific in that they define their intended use-case and scope, as SMART will have. We should work toward a small set of reasonable security models. Each of these should be well defined and have clear identifier, so that they can be discovered.  This pluggable security layers is the model that is in http, OAuth, and other security layers.</p>",
        "id": 153920034,
        "sender_full_name": "John Moehrke",
        "timestamp": 1510844497
    },
    {
        "content": "<p>@Josh Mandel <br>\nGoogle's security implementation is quite impressive. It represents the utilization of existing technologies, many of which have been around for decades, in a functional way to manage security risk.<br>\nHaving served in IT Management, Network Engineering, Network Administration, Trading Floor Support, and for the last 15+ years as a business s/w developer - 9 years of which have been in support of Healthcare s/w in the hospital ED, and having worked in consulting and full time positions for over 25 businesses, I look at the Google infrastructure as it relates to security simply as '...the way it can be...'. <br>\nMeaning, NASA codes at CMM level 5, IBM consulting at CMM level 3, and the vast majority of the world at CMM level.... -1. </p>\n<p>The vast majority of businesses - most certainly including the wild, wild west of HIT - may in some isolated instances hit the 'Google-level' of security in 20-30 years.</p>\n<p>In the meantime, instead of following the current healthcare standards committee trend of capitalizing on LCD(least common denominator) tech with extremely complex system schemas like OAuth2, HIT needs to discover the capabilities of the OS'es, routers and layer 3 switches that already exist in their current infrastructure.</p>\n<p>Likewise, instead of using s/w development tech like MUMPS, CCL, Java, various scripting languages and other inherently insecure tool chains, then trying to work around the insecurities by using Rube Goldberg contraptions like OAuth2, vendors need to get serious about development using tools that have consistently had access to industrial grade security for decades like C++ and Delphi.</p>\n<p>The problems that well meaning folks are trying to solve in healthcare - like security, for ex. - were solved decades ago in some cases by tech like the multi-tier stacks available to developers today from companies like AstaTech, RemObjects, Components4Developers (kbmMW), and the various encryption stacks that have been available since the mid '90's in many cases.</p>\n<p>Instead of continually seeking to reinvent the wheel, why not learn from Google and other's that are serious about tech security using known secure methods.</p>\n<p>In other words instead of trying to make inherently insecure platforms secure - now that we've all been refocused on the need for securing PHI/PII as should have always been the focus, thanks to ransomware attacks on hospitals and other businesses - lets identify those s/w development approaches that are hard to secure and blacklist their use in areas where tight security is paramount.</p>\n<p>The current trend seems to be headed in a direction that is bleeding edge for the sake of protecting bad approaches to the implementation of technology in healthcare, when we've had the tech available to us all along to avoid these pitfalls and secure our systems via the use of severely underused technologies that have existed for decades.</p>",
        "id": 153920073,
        "sender_full_name": "David Keith",
        "timestamp": 1510862545
    },
    {
        "content": "<p>Am I correct in believing the Backend Services isn't one of the 5 Argonaut Use cases?</p>",
        "id": 153924218,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1512986822
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> <span class=\"user-mention\" data-user-id=\"191414\">@Dan Gottlieb</span> can we please document in the back end services specification that if the client that is connecting to a server using back end services spec is acting on behalf of a human user, they should identify the user to the back end server with an openid token</p>",
        "id": 153968791,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528844319
    },
    {
        "content": "<p>this is a question that has come up in multiple contexts for me</p>",
        "id": 153968792,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528844333
    },
    {
        "content": "<p>and they should do that on each request.</p>",
        "id": 153968793,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528844342
    },
    {
        "content": "<p>I opened an issue here: <a href=\"https://github.com/smart-on-fhir/fhir-bulk-data-docs/issues/44\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/fhir-bulk-data-docs/issues/44\">https://github.com/smart-on-fhir/fhir-bulk-data-docs/issues/44</a></p>",
        "id": 153969105,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1528907012
    },
    {
        "content": "<p>Hi folks  - I am not sure where to post but I am curious about the both the bulk upload and backend security pieces and wanted to dig deeper to better understand.  I've been following the open API banking spec development very closely and they are suggesting the use of the bearer token in the browser (redirect) is unsafe.  Instead of using additional client side certificate (which I think Graham was suggesting for bulk update) they are strongly suggesting MTLS bound with an access token so you can be certain of source address verification.  MTLS for OAUTH is in draft - other parts of the spec are moving ahead at a quick pace.   When listening to all of this it struck a chord and just wanted to put it out there for consideration.</p>",
        "id": 153972624,
        "sender_full_name": "Debbie Bucci",
        "timestamp": 1530293460
    },
    {
        "content": "<p><a href=\"https://tools.ietf.org/id/draft-ietf-oauth-mtls-07.html\" target=\"_blank\" title=\"https://tools.ietf.org/id/draft-ietf-oauth-mtls-07.html\">https://tools.ietf.org/id/draft-ietf-oauth-mtls-07.html</a>   Not sure this is most current but its close - and reading above - it seems MTLS is being consider ... do hope this is helpful</p>",
        "id": 153972627,
        "sender_full_name": "Debbie Bucci",
        "timestamp": 1530293755
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"194712\">@Debbie Bucci</span> . <a class=\"stream\" data-stream-id=\"179250\" href=\"/#narrow/stream/179250-bulk-data\">#bulk data</a>  is where that discussion is happening. (Briefly: For back-end services we use Bearer tokens that have short life times and are not exposed to end-users. Obtaining a bear token requires the client to demonstrate possession of a private key.)</p>",
        "id": 153972630,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1530294285
    },
    {
        "content": "<p>product key?   the client ID given a registration?</p>",
        "id": 153972636,
        "sender_full_name": "Debbie Bucci",
        "timestamp": 1530296852
    },
    {
        "content": "<p>Typo -- fixed (\"private key\")</p>",
        "id": 153972637,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1530296882
    },
    {
        "content": "<p>Ok thanks makes sense now</p>",
        "id": 153972638,
        "sender_full_name": "Debbie Bucci",
        "timestamp": 1530296925
    }
]