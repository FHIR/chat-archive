[
    {
        "content": "<p>In the Argonaut SMART project, one of the <a href=\"https://github.com/HL7/smart-app-launch/pull/307\">proposed additions</a> to the spec is permitting a confidential SMART app to authenticate to the SMART server with a JWT and key (a la <a href=\"https://hl7.org/fhir/uv/bulkdata/authorization/index.html#protocol-details\">SMART Backend Services</a>) instead of being required to use a <code>client_secret</code>. There's a lot of advantages to this asymmetric approach, e.g.: enabling secret rotation, superior security by not sending the secret over the wire, etc.</p>",
        "id": 221814010,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1609962790
    },
    {
        "content": "<p>Do you agree with this change? If so, especially as a SMART app developer, would you like to see SMART servers always support asymmetric auth and perhaps not support symmetric auth?</p>",
        "id": 221814133,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1609962847
    },
    {
        "content": "<p>I like asymmetric auth, and can be convinced that mandatory server support is right.  However, I don't agree with removing symmetric auth at the same time, since it breaks all backwards compatibility.  My preference would be marking symmetric 'obsolete' - e.g., not recommended for use and may (will) be removed in a future version.</p>",
        "id": 221814853,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1609963177
    },
    {
        "content": "<p>Related, this text from PKCE (RFC7636) is probably a good template:</p>\n<blockquote>\n<p>If the client is capable of using \"S256\", it MUST use \"S256\", as<br>\n   \"S256\" is Mandatory To Implement (MTI) on the server.  Clients are<br>\n   permitted to use \"plain\" only if they cannot support \"S256\" for some<br>\n   technical reason and know via out-of-band configuration that the<br>\n   server supports \"plain\".</p>\n<p>The plain transformation is for compatibility with existing<br>\n   deployments and for constrained environments that can't use the S256<br>\n   transformation.</p>\n</blockquote>",
        "id": 221971602,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1610040012
    },
    {
        "content": "<p>As a SMART app developer, I support Gino's view, and most of the wording too. However, in practice I'll most likely implement my apps to support both models, and have them behave dynamically based on what the server indicates it supports. So I wouldn't be too disappointed if some new servers would only support  the asymmetric auth. It would be more problematic for me if some existing servers would remove the functionality from their implementations. But even that wouldn't be too bad if it was done gracefully.</p>",
        "id": 223232507,
        "sender_full_name": "Mikael Rinnetm√§ki",
        "timestamp": 1611066168
    }
]