[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> I am getting around to looking at Dynamic Client Registration, which Smart App Launch and the back end services spec recommends that I use. It seems to me that there's a little more to say than 'just use it'. Specifically, what token_endpoint_auth_method values map to the 3 options made available by the Smart specs?</p>",
        "id": 153909597,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1505969502
    },
    {
        "content": "<p>also, concerning 'iss', the backend services spec says \"The service's issuer URI, as registered with the EHR's authorization server\" - but dynamic client registration doesn't describe this, so we need a call out in the back end services spec to describe exactly how this works if we want it to work</p>",
        "id": 153909781,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506023950
    },
    {
        "content": "<p>I used \"issuer\" in the json for the registration request</p>",
        "id": 153909831,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506034692
    },
    {
        "content": "<p>so  I'm not sure about using Dynamic Auth. There's 3 different modes:</p>\n<ul>\n<li>Confidential Client</li>\n<li>Public Client</li>\n<li>Backend Services Client</li>\n</ul>",
        "id": 153909885,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506080632
    },
    {
        "content": "<p>here's what I think the 3 registrations look like:</p>",
        "id": 153909886,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506080642
    },
    {
        "content": "<p>Confidential Client:</p>\n<div class=\"codehilite\"><pre><span></span>{\n  &quot;client_name&quot; : &quot;{name}&quot;,\n  &quot;redirect_uris&quot; : [&quot;{url}&quot;],\n  &quot;client_secret_basic&quot; : &quot;client_secret_basic&quot;,\n  &quot;grant_types&quot; : &quot;authorization_code&quot;,\n  &quot;response_types&quot; : &quot;token&quot;\n}\n</pre></div>",
        "id": 153909887,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506080774
    },
    {
        "content": "<p>Public Client:</p>\n<div class=\"codehilite\"><pre><span></span>{\n  &quot;client_name&quot; : &quot;{name}&quot;,\n  &quot;redirect_uris&quot; : [&quot;{url}&quot;],\n  &quot;client_secret_basic&quot; : &quot;client_secret_post&quot;,\n  &quot;grant_types&quot; : &quot;authorization_code&quot;,\n  &quot;response_types&quot; : &quot;token&quot;\n}\n</pre></div>",
        "id": 153909888,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506080795
    },
    {
        "content": "<p>Backend Services Client:</p>\n<div class=\"codehilite\"><pre><span></span>{\n  &quot;client_name&quot; : &quot;{name}&quot;,\n  &quot;issuer&quot; : &quot;{issuer}&quot;,\n  &quot;jwks&quot; : {\n    ...\n  }\n  &quot;client_secret_basic&quot; : &quot;client_secret_post&quot;,\n  &quot;grant_types&quot; : &quot;client_credentials&quot;,\n  &quot;response_types&quot; : &quot;token&quot;\n}\n</pre></div>",
        "id": 153909889,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506080854
    },
    {
        "content": "<blockquote>\n<p>token_endpoint_auth_method</p>\n</blockquote>\n<ul>\n<li>public clients: <code>none</code></li>\n<li>confidential clients (symmetric secrets): <code>client_secret_basic</code></li>\n<li>backend services asymmetric client: <code>private_key_jwt</code> (I suppose -- it seems to fit fine)</li>\n</ul>",
        "id": 153909911,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1506087376
    },
    {
        "content": "<p>Re: issuer, we could instead just have the client register a <code>jwks_uri</code> with the server (this <em>is</em> supported by dynreg), but it means that a server really doesn't have any use for the <code>issuer</code> property in the signed token.</p>",
        "id": 153909912,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1506087492
    },
    {
        "content": "<blockquote>\n<p>\"client_secret_basic\" : \"client_secret_post\",</p>\n</blockquote>\n<p>This looks like an error in your payload. I'd expect to see</p>\n<p><code>\"token_endpoint_auth_method\": \"client_secret_basic\"</code></p>",
        "id": 153909913,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1506087550
    },
    {
        "content": "<p>And, er... for the first two cases, <code>response_type</code> should be <code>code</code>.</p>",
        "id": 153909914,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1506087621
    },
    {
        "content": "<p>(See <a href=\"https://tools.ietf.org/html/rfc7591#section-2.1\" target=\"_blank\" title=\"https://tools.ietf.org/html/rfc7591#section-2.1\">OIDC dynreg Section 2.1</a>)</p>",
        "id": 153909915,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1506087654
    },
    {
        "content": "<p>I don't follow the logic for response_type being different for the first 2 cases, since the actual response is the same in all 3 cases (except for no openid element)</p>",
        "id": 153909971,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506113650
    },
    {
        "content": "<p>I am very much against using jwks_uri for issuer because of this:</p>",
        "id": 153909973,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506113737
    },
    {
        "content": "<blockquote>\n<p>The \"jwks_uri\" and \"jwks\" parameters MUST NOT both be present in the same request or response.</p>\n</blockquote>",
        "id": 153909975,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506113752
    },
    {
        "content": "<blockquote>\n<p>\"client_secret_basic\" : \"client_secret_post\"</p>\n</blockquote>",
        "id": 153909976,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506113776
    },
    {
        "content": "<p>that was a s typo preparing my posts</p>",
        "id": 153909977,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506113792
    },
    {
        "content": "<p>so I hope that this is enough to be convincing that we actually need to say this stuff in the spec</p>",
        "id": 153909978,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1506113820
    }
]