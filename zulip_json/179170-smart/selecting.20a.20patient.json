[
    {
        "content": "<p>The SMART documentation defines the  <strong>launch/patient</strong> scope as    \"When launching outside the EHR, ask for a patient to be selected at launch time\".  Assuming the Authz server approves, is it the responsibility of the EHR to provide the patient selection, or can the client application make FHIR based Patient queries? (Or, is this implementation specific?)</p>",
        "id": 153814992,
        "sender_full_name": "David Hay",
        "timestamp": 1457651670
    },
    {
        "content": "<p>This scope, <code>launch/patient</code>, is the way for an app to say, \"OK, EHR, I want you to handle patient selection for me\".</p>",
        "id": 153814994,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1457651707
    },
    {
        "content": "<p>If the app wants to handle patient selection itself, it shouldn't ask for <code>launch/patient</code>, and it <strong>should</strong> ask for <code>user/Patient.read</code> (at least).</p>",
        "id": 153814995,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1457651739
    },
    {
        "content": "<p>thanks! (Have added it to the documentation sample for the next person!)</p>",
        "id": 153814999,
        "sender_full_name": "David Hay",
        "timestamp": 1457652065
    },
    {
        "content": "<p>Just saw and commented on <a href=\"https://github.com/smart-on-fhir/smart-on-fhir.github.io/pull/114\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/smart-on-fhir.github.io/pull/114\">https://github.com/smart-on-fhir/smart-on-fhir.github.io/pull/114</a></p>",
        "id": 153815001,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1457652231
    },
    {
        "content": "<p>I think this point is a good one, but we need to figure out where it lives. Maybe it's in tutorial, rather than the scope definitions page. Or maybe it's in a side note, or explanatory comment.  Hmm.</p>",
        "id": 153815002,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1457652269
    },
    {
        "content": "<p>Oh, I take it back. You put it in exactly the right place.</p>",
        "id": 153815003,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1457652305
    },
    {
        "content": "<p>Merged. Thanks <span class=\"user-mention\" data-user-id=\"191321\">@David Hay</span> </p>",
        "id": 153815004,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1457652326
    },
    {
        "content": "<p>suppose I have an EHR launched app (with a patient in context), with a scope of user/Patient.read   Does this mean I'm asking to be able to select any patient - not just the one in scope?  and perhaps patient/*.read and patient/*.write, requesting to do anything with those patients (that the user is allowed to do - subject to any other EHR policies of course)?</p>",
        "id": 153815017,
        "sender_full_name": "David Hay",
        "timestamp": 1457654244
    },
    {
        "content": "<p>yes you're asking that. You might not be granted that - it depends on the model. Some servers or users may only grant you rights to the see the patient in scope, and others may grant you the right to see other patients. </p>",
        "id": 153815018,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457654317
    },
    {
        "content": "<p>On <a href=\"http://docs.smarthealthit.org/authorization/\" target=\"_blank\" title=\"http://docs.smarthealthit.org/authorization/\">http://docs.smarthealthit.org/authorization/</a> the launch parameter is defined as \"Opaque identifier for this specific launch, and any EHR context associated with it\". How does this EHR context get associated with the launch id?</p>",
        "id": 153815020,
        "sender_full_name": "Heath Frankel",
        "timestamp": 1457654752
    },
    {
        "content": "<p>afaik that's up to the implementation.  It needs to store it somewhere so it can be found post successful authentication...</p>",
        "id": 153815021,
        "sender_full_name": "David Hay",
        "timestamp": 1457655042
    },
    {
        "content": "<p>Heath - the thing launching provides the parameter, and then it gets it back in the end</p>",
        "id": 153815022,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457655222
    },
    {
        "content": "<p>So the example access token response in section \"SMART authorization sequence\" that returns the patient ID is an example when the authorisation server has requested the patient ID as part of the \"Authorize App\" step?</p>",
        "id": 153815023,
        "sender_full_name": "Heath Frankel",
        "timestamp": 1457655223
    },
    {
        "content": "<p>a more useful question is how the client determines what it's context is</p>",
        "id": 153815024,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457655240
    },
    {
        "content": "<p>I read that to mean that if the app is launched from the EHR, and a patient is in context, THEN the 'patient' property is in the access token with the patient id as the value...</p>",
        "id": 153815026,
        "sender_full_name": "David Hay",
        "timestamp": 1457655543
    },
    {
        "content": "<p>yes but the auth token is opaque to the client </p>",
        "id": 153815027,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457655600
    },
    {
        "content": "<p>sorry - I should have said 'access token' (not the auth code)<br>\n(this stuff hurts your head)</p>",
        "id": 153815028,
        "sender_full_name": "David Hay",
        "timestamp": 1457656219
    },
    {
        "content": "<p>My confusion is how the auth server knows the app's select patient?</p>",
        "id": 153815038,
        "sender_full_name": "Heath Frankel",
        "timestamp": 1457657488
    },
    {
        "content": "<p>for which workflow are you asking? </p>",
        "id": 153815039,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457657507
    },
    {
        "content": "<p>As I said, in the example access token response in section \"SMART authorization sequence\" that returns the patient ID. How did the Auth svr know about which patient is being launched?</p>",
        "id": 153815041,
        "sender_full_name": "Heath Frankel",
        "timestamp": 1457657901
    },
    {
        "content": "<p>If it's an EHR launch the Auth server is part of the EHR and there's a 'back channel' communication I guess</p>",
        "id": 153815042,
        "sender_full_name": "David Hay",
        "timestamp": 1457657949
    },
    {
        "content": "<p>well, in the EHR initiated workflow, the EHR and the Auth server have a private agreement about how that's communicated, yes</p>",
        "id": 153815043,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457658014
    },
    {
        "content": "<p>OK, so the EHR registers some launch context against the launch ID and the Auth Svr retrieves this from the EHR?</p>",
        "id": 153815044,
        "sender_full_name": "Heath Frankel",
        "timestamp": 1457658016
    },
    {
        "content": "<p>or they might be the same</p>",
        "id": 153815045,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457658035
    },
    {
        "content": "<p>I was imagining that when the user clicks the 'go for it' link in the EHR,  then the EHR saves the context where the Authz server can find it, indexed with an opaque key (the launch token) which is sent to the client. The Authz server picks it up from the same location using the same launch token...</p>",
        "id": 153815046,
        "sender_full_name": "David Hay",
        "timestamp": 1457658215
    },
    {
        "content": "<p>Here's what I wrote:</p>\n<p>To support the ‘EHR launch’ (ie from within portal), there needs to be some way that the authorize endpoint knows the context of the caller. In the spec, this involves a token (the launch parameter) that acts as a key to this data. This implies that it is set when the app is loaded, so that it can retrieved by the authorize end point. So the starting sequence (after the user clicks the button will be something like:<br>\n•   Save the current context (user and optionally patient) in some key/value store that is also accessible by the Authentication server. Need a strong key and likely a TTL.<br>\n•   Include the value of the key as the launch parameter in the call to the client application.</p>",
        "id": 153815047,
        "sender_full_name": "David Hay",
        "timestamp": 1457658288
    },
    {
        "content": "<p>hopefully it's correct!</p>",
        "id": 153815048,
        "sender_full_name": "David Hay",
        "timestamp": 1457658298
    },
    {
        "content": "<p>For me this is a big piece of the puzzle missing from this Guide</p>",
        "id": 153815049,
        "sender_full_name": "Heath Frankel",
        "timestamp": 1457658421
    },
    {
        "content": "<p>The above text would help assuming this is what is intended</p>",
        "id": 153815050,
        "sender_full_name": "Heath Frankel",
        "timestamp": 1457658451
    },
    {
        "content": "<p>I'm actually writing a post as we speak - 'cause I had the same issues!</p>",
        "id": 153815051,
        "sender_full_name": "David Hay",
        "timestamp": 1457658483
    },
    {
        "content": "<p>and that way, if I get it wrong, then the community can correct me...</p>",
        "id": 153815052,
        "sender_full_name": "David Hay",
        "timestamp": 1457658507
    },
    {
        "content": "<p>I would suggest we want to go one step further and actually define what this would look like when the EHR and Auth Svr are different </p>",
        "id": 153815053,
        "sender_full_name": "Heath Frankel",
        "timestamp": 1457658534
    },
    {
        "content": "<p>OAuth 1.0 has an Initialise interaction which I have used for this in one of my implementations</p>",
        "id": 153815054,
        "sender_full_name": "Heath Frankel",
        "timestamp": 1457658607
    },
    {
        "content": "<p>Heath - for now. it's a private agreement. the UMA/Heart project want to standardlise this - we met with them last week - but that's way more complex than it sounds, so SMART is leaving that for the future </p>",
        "id": 153815055,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457658642
    },
    {
        "content": "<p>I can understand that, but I think we would want to get there at some stage so that we don't have too many variations of this.</p>",
        "id": 153815056,
        "sender_full_name": "Heath Frankel",
        "timestamp": 1457658747
    },
    {
        "content": "<p>To say it briefly: SMART's authorization spec aims to standardize the way an EHR talks to apps. We're not trying to standardize the way the internal EHR components (resource server, authz server) talk to each other.</p>",
        "id": 153815069,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1457664271
    },
    {
        "content": "<p>There are, however, some common patterns for how your EHR's resource server and authz server might communicate context.</p>\n<p>1. The \"launch id\" can actually contain the state (as long as it's encrypted for confidentiality and signed for integrity. For example the EHR can create a JWT that's created for the authz server to read, encoding the relevant context parameters.<br>\n2. The \"launch id\" can be a URL or parameter that the authz server uses to look up the context via an internal API .<br>\n3. The authz server might be the same thing as the resource server.</p>",
        "id": 153815070,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1457664399
    },
    {
        "content": "<p>I think these patterns would be useful to include in the guide</p>",
        "id": 153815074,
        "sender_full_name": "Heath Frankel",
        "timestamp": 1457667090
    },
    {
        "content": "<p>otherwise it leave people wondering...</p>",
        "id": 153815075,
        "sender_full_name": "Heath Frankel",
        "timestamp": 1457667109
    },
    {
        "content": "<p>could help, yes </p>",
        "id": 153815083,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1457669838
    },
    {
        "content": "<p>Could go in our \"be at practices for EHRs\" page - would that be helpful? Somewhere else you'd expect to see it? </p>",
        "id": 153815089,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1457670625
    },
    {
        "content": "<p>Not sure why you wouldn't have something in the Authorisation Guide page, but perhaps it is just a reference and link to more details in the Backend service page?</p>",
        "id": 153815090,
        "sender_full_name": "Heath Frankel",
        "timestamp": 1457670853
    },
    {
        "content": "<p>It's not about \"backend services\" for sure, since those have no launch id or context. </p>",
        "id": 153815095,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1457673013
    },
    {
        "content": "<p>As for the authorization guide, I don't think this kind of list of patterns is a good fit, since it's not part of the authorization protocol we specify. We do have a server tutorial where it could fit. Or those best practices... </p>",
        "id": 153815097,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1457673122
    },
    {
        "content": "<p>OK, I see now that the backend services is a different profile for a different use case.</p>",
        "id": 153815107,
        "sender_full_name": "Heath Frankel",
        "timestamp": 1457676908
    },
    {
        "content": "<p>Im with Josh that this backend magic should need to be exposed to the app writer... except that it does need to be informatively explained so that they have confidence. This is what we did in IHE-IUA, and even there it wasn't yet well enough explained. I do like the KISS focus.</p>",
        "id": 153815238,
        "sender_full_name": "John Moehrke",
        "timestamp": 1457719245
    }
]