[
    {
        "content": "<p>The spec states that the <a href=\"http://www.hl7.org/fhir/smart-app-launch/#step-1-app-asks-for-authorization\" target=\"_blank\" title=\"http://www.hl7.org/fhir/smart-app-launch/#step-1-app-asks-for-authorization\"><code>state</code></a> param presented by the app and returned by the AS during the /authorize step, prevents <a href=\"https://owasp.org/www-community/attacks/csrf\" target=\"_blank\" title=\"https://owasp.org/www-community/attacks/csrf\">CSRF</a> and <a href=\"https://owasp.org/www-community/attacks/Session_fixation\" target=\"_blank\" title=\"https://owasp.org/www-community/attacks/Session_fixation\">session fixation</a>.  </p>\n<p>The inherent risk of a (SameSite=Strict) <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie\" target=\"_blank\" title=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie\">cookie</a> is that the user could change the value at any point, but this wouldn't enable CSRF.  As long as the app wrote a new state value for every launch, it wouldn't be possible to fix the session before it started -- and even that's a very minimal risk. </p>\n<p>Additionally, a SPA doesn't have any other choice than cookie or sessionStorage.</p>",
        "id": 191176210,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1584652444
    },
    {
        "content": "<p>Got this question -- can anyone confirm or deny my logic?</p>",
        "id": 191176265,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1584652475
    },
    {
        "content": "<p>For a single-page app, <code>state</code> indeed needs to be stored somewhere. My recommendation is <code>sessionStorage</code> because it requires less cleanup and it's harder to goof with the same-origin poilcy.</p>",
        "id": 191184956,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1584658483
    },
    {
        "content": "<p>But there may be other considerations here I haven't thought about.</p>",
        "id": 191184962,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1584658493
    },
    {
        "content": "<p>Thanks, Josh. For a multi-tabbed browser, the only functional difference between sessioStorage and a cookie is separation from other instances of the same app (domain).  If the state is only used during the launch process, the only difference would be preventing two+ instances of the same app from session hijacking. This wouldn't occur during an ehr launch in practice (in which there's no auth page presented -- and therefore no real delay), but could occur during standalone launches. </p>\n<p>I think that makes sense --  assuming a user-facing auth page during an ehr launch doesnt give the user the opportunity to relaunch the same app in a different context.</p>",
        "id": 191189178,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1584662044
    },
    {
        "content": "<p>We've seen real life instances of apps being open for multiple patients stealing session storage from each other. Eg: embedded browsers share sessions.</p>",
        "id": 191695529,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1585102896
    },
    {
        "content": "<p>Do you mean \"stealing\" maliciously, or somehow confusing?</p>",
        "id": 191695573,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1585102944
    },
    {
        "content": "<p>If I remember correctly, I think Cerner saw some kind of shared access happening across sessions in its embedded browser environment? (It's not something that should be possible in browsers that are correctly implementing sessionStorage APIs.)</p>",
        "id": 191695673,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1585103112
    },
    {
        "content": "<p>Hey guys, I think Jenni means \"confusing\".  I've already incorporated this consideration in my remarks, above.</p>\n<p>Here's the details of sessionstorage in a single threaded windows exe with multiple browser controls: <a href=\"https://github.com/cerner/fhir-client-cerner-additions/blob/master/README.md\" title=\"https://github.com/cerner/fhir-client-cerner-additions/blob/master/README.md\">https://github.com/cerner/fhir-client-cerner-additions/blob/master/README.md</a></p>",
        "id": 191700248,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1585110093
    }
]