[
    {
        "content": "<p>Something I noticed recently working on payers connection: launch/patient is not used / understood - servers returns 'patient' regardless, clients expect to see 'patient' even when not specifying launch/patient</p>",
        "id": 277752892,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1649087928
    },
    {
        "content": "<p>offline_access seems to be in a similar situation</p>",
        "id": 277752920,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1649087944
    },
    {
        "content": "<p>OAuth end point discovery is not very well know also</p>",
        "id": 277753210,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1649088038
    },
    {
        "content": "<blockquote>\n<p>servers returns 'patient' regardless, clients expect to see 'patient' even when not specifying launch/patient</p>\n</blockquote>\n<p>This is allowed behavior, if the server only/always supports in-patient-context launches.</p>",
        "id": 277761731,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1649091455
    },
    {
        "content": "<blockquote>\n<p>offline_access</p>\n</blockquote>\n<p>Servers need to support requests for long-term access; it's not OK to ignore the request, and I wouldn't imagine servers would want to <em>force</em> apps into getting long-term access tokens. But ultimately what would/should we say in the SMART spec?</p>",
        "id": 277761952,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1649091523
    },
    {
        "content": "<blockquote>\n<p>Michele Mottini: OAuth end point discovery is not very well know also</p>\n</blockquote>\n<p>You mean servers aren't supporting discovery? That should fail any conformance testing.</p>",
        "id": 277762040,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1649091559
    },
    {
        "content": "<p>For offline_access, is the behavior you are seeing that the refresh token is issued based on client registration settings rather than run-time scopes?</p>",
        "id": 277765152,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1649092793
    },
    {
        "content": "<p>And for endpoint discovery, if Michele is saying that clients don't know they can do auto discovery, we see that a lot too - where app developers are manually registering URLs instead of auto-discovering them.  However, we actually recommend in this in some cases, as the URL registration can be an important step in establishing trust if the app is relying on the launching server to provide user identity.</p>",
        "id": 277765545,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1649092964
    },
    {
        "content": "<p>I saw both server accepting offline_access and then not giving you a refresh token, server rejecting offline_access and then giving you a refresh token</p>",
        "id": 277771314,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1649095391
    },
    {
        "content": "<blockquote>\n<p>clients expect to see 'patient' even when not specifying launch/patient</p>\n</blockquote>\n<p>^ this is not allowed behavior, is it?</p>",
        "id": 277771384,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1649095431
    },
    {
        "content": "<p>Yes, clients not knowing they can do auto discovery, but also servers giving you wrong (or no) OAuth URLs, or <code>/metadata</code> requiring authentication, so you cannot even try discovery</p>",
        "id": 277771757,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1649095572
    }
]