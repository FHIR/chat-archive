[
    {
        "content": "<p>I thought of this on the argonaut call and wanted to bring it up to a larger audience. If the client has Observation/*.read, and they are retrieving an Observation that happens to have a contained resource instance of some other resource type that they don't have access to, should the server strip it out? This will make the resulting resource non-conformant, since references to the contained resource will be broken.</p>\n<p>And if the answer is yes, do any implementations actually do this in the wild?</p>",
        "id": 193075496,
        "sender_full_name": "Paul Church",
        "timestamp": 1586194662
    },
    {
        "content": "<p>I don't know that we can/should specify much here, but my gut reaction is that a contained resource fully belongs to the thing containing it, and generally wouldn't be stripped. Now, if you give me something pathological like a contained resource that's tagged as more sensitive than the container, I'd call that broken.</p>",
        "id": 193093684,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1586203376
    },
    {
        "content": "<p>You're not allowed to tag contained resources - you have to tag the container</p>",
        "id": 193106854,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1586209896
    },
    {
        "content": "<p>Technically I think you <em>can</em> tag them, but you can't apply security labels (so Lloyd's point stands).</p>",
        "id": 193111952,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1586212995
    },
    {
        "content": "<p>(<a href=\"http://build.fhir.org/domainresource.html#invs\" title=\"http://build.fhir.org/domainresource.html#invs\">http://build.fhir.org/domainresource.html#invs</a>)</p>",
        "id": 193111962,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1586213000
    },
    {
        "content": "<p>Thanks for the clarification :)</p>",
        "id": 193113619,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1586214176
    }
]