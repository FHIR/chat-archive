[
    {
        "content": "<p>Hi all, I'm using the smart-on-fhir/client-js library and I have a style question.</p>\n<p>On page load, I list some Observations. I also have a button to create a new Observation.</p>\n<p>Style-wise, should I call FHIR.oauth2.ready once (on page load) then store the client for later use (on button click)? Or is it better to call FHIR.oauth2.ready twice -- once on page load, then again inside the button click event handler?</p>\n<p>It works either way, but I'm hoping to get feedback on the most idiomatic approach.</p>\n<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> or <span class=\"user-mention\" data-user-id=\"193731\">@Vladimir Ignatov</span> I feel like you'd have have some opinions about this.</p>\n<p>Thanks,<br>\nFord</p>",
        "id": 245258101,
        "sender_full_name": "Ford Parsons",
        "timestamp": 1625702780
    },
    {
        "content": "<p><code>ready</code> is designed to be called once. You should store the client and reuse it later if possible. Even though it works, you should avoid calling <code>ready</code> multiple times, especially in event handlers where user can \"feel\" a performance impact. It is a complicated function, but you can think of it as a singleton client factory. When you call it multiple times it will do certain amount of work (which is unnecessary to do more than once) and it will eventually return a client instance that is the same as the one you've gotten on previous calls.<br>\nInternally, <code>ready</code> will detect if this is an initial page load (a redirect from the authentication server). If it is, it will do a bunch of things to complete the auth flow (like exchanging the <code>code</code> parameter for an access token) and will return a client once everything is done. Otherwise it assumes this to be a page refresh and will create and return a client based on the previously stored state. That said, if you call it multiple times it would still work but there is no reason to do that if you can avoid it.</p>\n<p>There are two cases to consider in browsers:</p>\n<ul>\n<li>If you have a simple setup where everything happens on a page that is loaded in the browser (for example some page of a website), then call <code>ready</code> on page load and keep a reference to the returned client for later use if needed.</li>\n<li>If you have a \"single page app\" having it's own routing, then make sure you call <code>ready</code> before the app is initialized and store the client in a way that makes it accessible from all the routes that might need it. For example in React apps, a SMART client can be stored in <code>context</code> and later used by components that need it.</li>\n</ul>",
        "id": 245332600,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1625759177
    },
    {
        "content": "<p>Thank you, Vladimir, for such a thoughtful response. Calling <code>ready</code> once makes total sense. We're not using a SPA yet, but I appreciate the guidance there as well. Thank you for creating/maintaining such a great library.</p>",
        "id": 245353215,
        "sender_full_name": "Ford Parsons",
        "timestamp": 1625769279
    }
]