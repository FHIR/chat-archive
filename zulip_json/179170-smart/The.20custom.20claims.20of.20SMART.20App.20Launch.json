[
    {
        "content": "<p>I have a couple of question to the handling of the custom scopes of SMART App Lauch as defined in the standard:</p>\n<ol>\n<li>The <a href=\"http://www.hl7.org/fhir/smart-app-launch/scopes-and-launch-context/\">SMART App Launch scopes and launch context</a> defines that the launch context should arrive with the access token, but from my understanding, it must be part OF the access token - the launch context, e.g. patient must be a custsom claim in the access token iteslf. This is at least how I have got it to work with different FHIR-servers. Is that understanding right? Or should it be both, in such way that the launch context must be provided in the token response, and also in the access token itself? </li>\n</ol>\n<p>If so:</p>\n<ol start=\"2\">\n<li>The <a href=\"http://www.hl7.org/fhir/smart-app-launch/scopes-and-launch-context/\">SMART App Launch scopes and launch context</a> defines the name of the scopes for the launch context as e.g. \"patient\", \"encounter\". If this should be part of the access token, the <a href=\"https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.2\">JWT specification is highly recommending</a> that claims should be either \"registered claim names\" or \"Public claim names\" registered in the <a href=\"https://www.iana.org/assignments/jwt/jwt.xhtml\">JWT Public Claim Name registry</a>. Is there any plans for registering the \"patient\" and \"encounter\" as public clame names? </li>\n</ol>\n<p>My challenge is that the Identity provider we are currently working with are not supporting private claim names, since this is discouraged in the JWT Specification.</p>",
        "id": 214039955,
        "sender_full_name": "Ingvar Sørlien",
        "timestamp": 1603281599
    },
    {
        "content": "<p>1) The spec only states that the application gets it with the token response, as separate claims. It is not required to be part of the access_token, and in fact applications MUST treat the access token as an opaque string per OAuth (so they cannot retrieve the patient context from within the token). If a system (OAuth/Resource servers) decide to put the claim in the token so that a FHIR service can enforce something... it's free to do so, but token format/contract between the OAuth server and Resource server is left outside of the specifications and may change in a breaking way over time</p>",
        "id": 214050910,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1603287746
    },
    {
        "content": "<p>2) The spec is defining the names of the parameters that are returned as separate claims with the token response. Here is an example token response: <a href=\"http://www.hl7.org/fhir/smart-app-launch/scopes-and-launch-context/#launch-context-arrives-with-your-access_token\">http://www.hl7.org/fhir/smart-app-launch/scopes-and-launch-context/#launch-context-arrives-with-your-access_token</a></p>",
        "id": 214051036,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1603287812
    },
    {
        "content": "<p>{<br>\n  access_token: \"secret-xyz\",<br>\n  patient: \"123\",<br>\n  ...<br>\n}</p>",
        "id": 214051063,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1603287830
    },
    {
        "content": "<p>Note that the access token is a separate field, encounter would be below patient in the response as a separate field as well if included (and I think the secret-... is intended to hint that the token is an opaque string not to be processed by applications)</p>",
        "id": 214051195,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1603287874
    },
    {
        "content": "<blockquote>\n<p>it must be part OF the access token </p>\n</blockquote>\n<p>The confusion here is between \"the access token response\" (the JSON payload an app gets from calling <code>/token</code>) and \"the access token\" (a specific property of that JSON payload). In SMART, we make no restrictions on the access token itself (as a review, <span class=\"user-mention\" data-user-id=\"256280\">@Ingvar Sørlien</span> you may want to check out <a href=\"https://www.youtube.com/watch?v=X2lmbHAeOMg\">video from 2 week ago</a>)</p>\n<div class=\"youtube-video message_inline_image\"><a data-id=\"X2lmbHAeOMg\" href=\"https://www.youtube.com/watch?v=X2lmbHAeOMg\"><img src=\"https://i.ytimg.com/vi/X2lmbHAeOMg/default.jpg\"></a></div>",
        "id": 214085705,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1603301295
    },
    {
        "content": "<p>Thank you so much for the clarifications <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> and <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>! So, the contents of the access token and the access control itself is not covered at all in the SMART Spec. That makes sense, but means that we actually have no standard defining interoperability between FHIR-servers and Authorization servers. I see why the implementers of FHIR-servers are supporting \"patient\" as custom claim in the access token to actually be able to use it for access control, even if this is not part of the SMART spec.</p>",
        "id": 214145651,
        "sender_full_name": "Ingvar Sørlien",
        "timestamp": 1603345319
    },
    {
        "content": "<blockquote>\n<p>we actually have no standard defining interoperability between FHIR-servers and Authorization servers</p>\n</blockquote>\n<p>Token Introspection is the piece that helps here; we only briefly refer to it in the SMART 1.0 guide but will be providing more guidance in the 2.0 guide , and you can see the draft guidance at <a href=\"https://github.com/HL7/smart-app-launch/blob/master/fsh/ig-data/input/pages/token-introspection.md\">https://github.com/HL7/smart-app-launch/blob/master/fsh/ig-data/input/pages/token-introspection.md</a></p>",
        "id": 214200522,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1603379232
    },
    {
        "content": "<p>I'm currently implementing this specific part, and kinda confused on where to put things...<br>\nThe context I'm looking to share is:<br>\nClinical - patient and optionally encounter<br>\nUser - practitioner, practitionerrole, organization</p>",
        "id": 214799512,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1603866025
    },
    {
        "content": "<p><a href=\"http://hl7.org/fhir/smart-app-launch/scopes-and-launch-context/index.html#scopes-for-requesting-identity-data\">http://hl7.org/fhir/smart-app-launch/scopes-and-launch-context/index.html#scopes-for-requesting-identity-data</a><br>\nI get where <code>patient</code> and <code>encounter</code> can go, that's pretty clear, and I assume can also be extended to include things like <code>episodeofcare</code> too.<br>\nBut the <code>fhirUser</code>looks like a custom claim in the id token that has the full url to the practitioner in it. But what about all the other parts?</p>",
        "id": 214799594,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1603866183
    },
    {
        "content": "<p>If I just added them all in as context variables, would that matter?</p>",
        "id": 214799611,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1603866227
    },
    {
        "content": "<p>would it make more sense in the idtoken to have each of these things as custom claims?</p>",
        "id": 214799685,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1603866278
    },
    {
        "content": "<p>So you are looking for a way to communicate the practitionerrole(s) and organization(s) of the authenticated user to the client, right?  Another option might be for the client to query <code>/PractitionerRole?practitioner=[practitioner_id]</code> based on the Practitioner provided in the fhirUser claim.  I do not know if this is a better option than the ones you provided though.</p>",
        "id": 214851977,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1603898665
    },
    {
        "content": "<p>Which wouldn't tell you which of the roles the practitioner is in the context of.</p>",
        "id": 214883684,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1603911896
    },
    {
        "content": "<p>unless the fhir user could be a practitionerrole reference too</p>",
        "id": 214883975,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1603912056
    },
    {
        "content": "<p>Like the same person being able to login under different roles? Nothing that is currently supported I am afraid (do many server even support such a thing?)</p>",
        "id": 214885950,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1603913167
    },
    {
        "content": "<p>3 of the systems that I work on, and some others from partners definitely do it (most of these were in primary care)</p>",
        "id": 214891671,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1603915993
    },
    {
        "content": "<p>Common with multiple sites, when they log into the site, the UI defaults to filter things down specific to that site - appointments/rates/templates etc</p>",
        "id": 214891961,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1603916135
    },
    {
        "content": "<p>Brian, we commonly extend the contextual information passed alongside the access_token, including with not only additional clinical information but also user information. </p>\n<p>In my experience many application architectures have a centralized IAM system that consumes user identity assertions (like OIDC) and only then passes control to the \"app\". If you place this user content in the OIDC id_token JWT, it's more likely to get used for authnz, if alongside the access_token, for business logic (e.g. defaulting UI filtering).</p>",
        "id": 214902751,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1603922271
    },
    {
        "content": "<p>So where I have put it at the moment alongside the access_token and not inside the id_token is consistent with what you're suggesting then.<br>\nHowever that would then not permit you to be able to tell them apart, if you had a smart app that worked on a selected practitioner eg for a performance review form...<br>\nI'd kinda like to be able to split the difference between user context, and UI focus context (selected item).</p>",
        "id": 214922564,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1603941800
    }
]