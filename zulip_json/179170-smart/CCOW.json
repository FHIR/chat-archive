[
    {
        "content": "<p>Welcome <span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> , here you go...</p>",
        "id": 153845423,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472479161
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> thx</p>",
        "id": 153845424,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1472479676
    },
    {
        "content": "<p>While SMART is definitely covering some cases of context management, there are still usecases that are not addressed. As Josh has shown, some thoughts on inter-app communication are outlined here: <a href=\"https://github.com/smart-on-fhir/smart-on-fhir.github.io/wiki/thoughts-on-inter-app-communication\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/smart-on-fhir.github.io/wiki/thoughts-on-inter-app-communication\">https://github.com/smart-on-fhir/smart-on-fhir.github.io/wiki/thoughts-on-inter-app-communication</a></p>\n<p>This (and CCOW) don't address other use-cases however. One that often comes up with mobile developers for example is that currently, there is no standard way to discover a physician's patient list or even the last-looked-at patient. If I log in on a workstation and look at a patient, and within a minute open an app on my phone I'm very likely to want to check the same patient. Or at least have a way to see a <code>List</code> of the patients currently on my ward. This space is still very much unexplored.</p>",
        "id": 153845442,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1472489779
    },
    {
        "content": "<p>I would argue that this is actually discussed in the original CCOW spec. It resembles the case  where your applications are hosted on multiple different Citrix application servers.</p>",
        "id": 153845455,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1472506071
    },
    {
        "content": "<p>Basically, it is the same case</p>",
        "id": 153845456,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1472506078
    },
    {
        "content": "<p>One would like to share the context between machines/instances</p>",
        "id": 153845457,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1472506104
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> </p>",
        "id": 153845458,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1472506197
    },
    {
        "content": "<p>I won't say that it takes up a lot of space in the spec but the case is mentioned</p>",
        "id": 153845463,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1472508592
    },
    {
        "content": "<p>And actually possible to conduct using eg. the HTTP CCOW Binding </p>",
        "id": 153845464,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1472508630
    },
    {
        "content": "<p>I do like some of the interapp thoughts, but there are some details missing</p>",
        "id": 153845466,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1472508774
    },
    {
        "content": "<p>How are you going to notify other applications on other machines? Web sockets?</p>",
        "id": 153845467,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1472508802
    },
    {
        "content": "<p>Server Side Events?</p>",
        "id": 153845468,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1472508808
    },
    {
        "content": "<p>Indeed! Lots of details to think through. (Communicating across machines hasn't been one of the use cases we've tried to address explicitly.) Our basic assumption has been that we can go pretty far with postMessage, for the kinds of launch/return scenarios we've discussed. </p>",
        "id": 153845570,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1472524242
    },
    {
        "content": "<p>This should also have some relationship to the CDS hooks functionality too right?</p>",
        "id": 153845582,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1472530025
    },
    {
        "content": "<p>CDS-hooks removed a lot of my desire to beef up smart on fhir for this stuff</p>",
        "id": 153845584,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472530076
    },
    {
        "content": "<p>I know pretty much nothing about CDS hooks  - just the intro part found on cds-hooks-org</p>",
        "id": 153845591,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1472542253
    },
    {
        "content": "<p>But it seems pretty focused on CDS ... go figures ...</p>",
        "id": 153845592,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1472542282
    },
    {
        "content": "<p>while this may allign with parts of CCOW, it is focused on CDS</p>",
        "id": 153845593,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1472542329
    },
    {
        "content": "<p>If we/me/you/someone was to think of a more modern CCOW approach, sync on multiple devices must be one of the inital use cases</p>",
        "id": 153845594,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1472542439
    },
    {
        "content": "<p>and then a whole bunch of the thoughts from the original CCOW spec should be taken into consideration regarding maintaining sync state, escape mechanisms and what not ... </p>",
        "id": 153845595,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1472542778
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192481\">@Jonathan Bunde-Pedersen</span> here you are</p>",
        "id": 153845606,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1472543003
    }
]