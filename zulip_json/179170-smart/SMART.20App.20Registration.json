[
    {
        "content": "<p>HSPC would like to help SMART on FHIR apps along the process of registing with the various sandboxes.  For example, an app developer could use the HSPC sandbox to build their app, and could easily move it to the Cerner/Epic/AllScripts sandboxes.  Would anyone be interested in collaborating on this topic?</p>",
        "id": 153875355,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1488925486
    },
    {
        "content": "<p>A great idea from Kevin and team is to help with the registration process by finding common registration data elements between the sandboxes and include those within the application somehow (manifest or something like that).</p>",
        "id": 153875459,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1488952396
    },
    {
        "content": "<p>Thanks for starting this conversation! It would be great to understand where/how vendor-specific \"stores\" would consume this kind of data. Some places we could expose it would include: in-app manifests, gallery-hosted metadata, or even a standalone registry. (Each of these solutions fits better in certain models, and they're not exclusive.) I'd love to link in a related conversation about app registration (from our mailing list last week): if vendors are interested in pushing forward with jwt-based (asymmetric) auth and url-based client identifiers, the app registration process can be dramatically simplified (without giving up *control*, in the sense that vendors could still decide which apps to allow, but no explicit registration would be required). </p>",
        "id": 153875510,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1488977968
    },
    {
        "content": "<p>I don't want to conflate these topics (happy to talk through each separately) but I do want to make sure we think about the \"vision\" of where we could get by solving both. </p>",
        "id": 153875511,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1488978028
    },
    {
        "content": "<p>With the dev/reference sandboxes (thinking of SMART on FHIR and HSPC sandboxes), there are galleries and sandboxes.  I would think that these galleries would align with EHR stores, and dev sandboxes would align with EHR dev sandboxes.  So this possibly represents 2 diffferent peices of information.</p>",
        "id": 153875559,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1488995874
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> we were actually going to try to get something in place for the HIT Dev Conf, Mar 30.  Whether that was just a set of instructions or something programmatic, we were wanting to do a little push in the next couple of weeks.</p>",
        "id": 153875560,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1488996057
    },
    {
        "content": "<p>Definitely - no reason not to pick off the low hanging fruit here. I'd propose starting with the Metadata fields in <a href=\"https://gallery.smarthealthit.org/manifest/15\" target=\"_blank\" title=\"https://gallery.smarthealthit.org/manifest/15\">https://gallery.smarthealthit.org/manifest/15</a></p>",
        "id": 153875569,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1488997768
    },
    {
        "content": "<p>Apps could create a Json snippet with most of these (not the client id, obviously) and host that at <code>/.well-known/smart/manifest.json</code> or paste it into a web form in a vendor store to facilitate registration </p>",
        "id": 153875571,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1488997833
    },
    {
        "content": "<p>There are certainly some additional fields that we could track, including information about being developer of course.</p>",
        "id": 153875572,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1488997901
    },
    {
        "content": "<p>This was my suggestion in an offline conversation with Travis as a good starting point (app manifest)</p>",
        "id": 153875575,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1488998921
    },
    {
        "content": "<p>I've created a matrix of fields used by each system, and added Josh's Gallery metadata fields as well as those used by the SMART and HSPC sandboxes.  </p>",
        "id": 153875584,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489004074
    },
    {
        "content": "<p><a href=\"https://docs.google.com/spreadsheets/d/1G_BD5YHZCkXamRn_mtxIM62i5sWlEP-Yr93Zz7tGLKM/edit?usp=sharing\" target=\"_blank\" title=\"https://docs.google.com/spreadsheets/d/1G_BD5YHZCkXamRn_mtxIM62i5sWlEP-Yr93Zz7tGLKM/edit?usp=sharing\">https://docs.google.com/spreadsheets/d/1G_BD5YHZCkXamRn_mtxIM62i5sWlEP-Yr93Zz7tGLKM/edit?usp=sharing</a></p>",
        "id": 153875585,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489004077
    },
    {
        "content": "<p>Allscripts would definitely be interested. Look forward to talking more about it at the Dev Conference.</p>",
        "id": 153875774,
        "sender_full_name": "Jeffrey Danford",
        "timestamp": 1489079638
    },
    {
        "content": "<p>I wonder what work could be done on the user's account side.  A super simple model would be something like mint...a system independent of each EHR and Ref Sandbox that would \"connect\" to each of our environments.  Functionality could be addressed iteratively, but could initially be just showing a user's app registration in each system.</p>",
        "id": 153875779,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489080978
    },
    {
        "content": "<p>Another user account model would be for the reference systems (SMART, HSPC) to have an OAuth token to the EHR systems dev.  Then from the reference system, the user could actually do some operations like register or possibly push a packaged app.  This is definately a deeper integration, but are people interested in this level of functionalilty?</p>",
        "id": 153875780,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489081258
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"192825\">@Jeffrey Danford</span>!  Thanks for joining the conversation!  I'm just taking a look at Allscripts Developer program-FHIR App registation form to see what fields you collect.</p>",
        "id": 153875785,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489081867
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192233\">@Travis Cummings</span> Great to hear. Let me know if I can answer any questions about ADP. It's pretty simple to navigate and I don't think we require all that much from you.</p>",
        "id": 153875786,
        "sender_full_name": "Jeffrey Danford",
        "timestamp": 1489082017
    },
    {
        "content": "<p>For a fuller set of fields we use, see <a href=\"https://apps.smarthealthit.org/api/v1/applications/12?d4q6q6685jjeb9afczobm4pldi\" target=\"_blank\" title=\"https://apps.smarthealthit.org/api/v1/applications/12?d4q6q6685jjeb9afczobm4pldi\">https://apps.smarthealthit.org/api/v1/applications/12?d4q6q6685jjeb9afczobm4pldi</a> (not intended to be a shareable format, but it shows the fields we use to populate our full gallery view).</p>",
        "id": 153875787,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489082199
    },
    {
        "content": "<p>On the registration front: the most effective solution I know is to host a set of these manifests and include in each one enough data for an EHR to populate an app registration. If we can agree on a client identifier scheme + asymmetric auth, that could get us all the way to \"no explicit registration step is technically required\".</p>",
        "id": 153875788,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489082303
    },
    {
        "content": "<p>The manifest works well for situations where the app bundle is given to the EHR for hosting, and a model similar to the cds-hooks discovery works well for apps that are remote to the EHR.  But it does seem that the same information is required by each model?  </p>",
        "id": 153875795,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489083810
    },
    {
        "content": "<p>Regarding the Mint model, I don't think we should go down this route from a risk/security perspective. I don't think HSPC should take on securing the various credentials from each vendor sandbox.</p>\n<p>I think integrating via APIs would be best (but obviously require coordination/collaboration between all)</p>",
        "id": 153875803,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1489084894
    },
    {
        "content": "<p>Good call!  I got a little too excited about that one.</p>",
        "id": 153875809,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489085376
    },
    {
        "content": "<p>:)</p>",
        "id": 153875814,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1489086032
    },
    {
        "content": "<p>I think our case of discovering registration related info about an SOF app is pretty similar to a search engine, mail client, social media site discovering information about a website.  What would you think about using a <a href=\"http://schema.org\" target=\"_blank\" title=\"http://schema.org\">schema.org</a> + metadata approach to this problem?  If I put on my app developer hat, I'd like to be able to enhance the Bilirubin Risk Chart with a few things it is missing: 1) an \"info\" page 2) a \"demo/sample\" page 3) search engine/social media friendly.  Along those lines, the \"launch\" page would be a natural fit to have metadata about the purpose and usage of the launch.  An EHR, Gallery, or Reference Sandbox could use this metadata to wire up the app.</p>",
        "id": 153875987,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489157048
    },
    {
        "content": "<p>I think that could work, but why would metadata in a launch or about page be better than a manifest.json file? Keeping the metadata as a separate file and submitting it to sandboxes, etc. via a url or upload would give developers the option of creating multiple versions (for example dev and prod) and potentially hosting the file separately from the app distribution. Also, it may simplify machine generation, validation, versioning, etc.</p>",
        "id": 153875995,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1489158550
    },
    {
        "content": "<p>I guess also, that the launch is an outbound URL (from the EHR's perspective) and not necessarily in inbound page.  So the proposal would be for some web page that describes the app.  The advantage of using <a href=\"http://schema.org\" target=\"_blank\" title=\"http://schema.org\">schema.org</a> + metadata is that it is a generalized solution.  If we look at the fields we are wanting to represent most of them are generalized: {name, desc, marketing url, contact email, sales contact, screen shots, video links, pricing, demo url, browser compatibility, ...}.  There is already a vocabulary (<a href=\"https://schema.org/WebApplication\" target=\"_blank\" title=\"https://schema.org/WebApplication\">https://schema.org/WebApplication</a>, <a href=\"https://schema.org/ProfilePage\" target=\"_blank\" title=\"https://schema.org/ProfilePage\">https://schema.org/ProfilePage</a>) and a representation (Google recommends JSON-LD, but others exist).</p>",
        "id": 153876003,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489160288
    },
    {
        "content": "<p>This looks remarkably similar to what we would like in a manifest:</p>",
        "id": 153876004,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489160314
    },
    {
        "content": "<p>&lt;script type=\"application/ld+json\"&gt;<br>\n{<br>\n  \"@context\": \"<a href=\"http://schema.org\" target=\"_blank\" title=\"http://schema.org\">http://schema.org</a>\",<br>\n  \"@type\": \"Organization\",<br>\n  \"url\": \"<a href=\"http://www.your-company-site.com\" target=\"_blank\" title=\"http://www.your-company-site.com\">http://www.your-company-site.com</a>\",<br>\n  \"contactPoint\": [{<br>\n    \"@type\": \"ContactPoint\",<br>\n    \"telephone\": \"+1-401-555-1212\",<br>\n    \"contactType\": \"customer service\"<br>\n  }]<br>\n}<br>\n&lt;/script&gt;</p>",
        "id": 153876006,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489160321
    },
    {
        "content": "<p>What I don't know is, does this have to be in a .html file (or accessed by a URL)?  Maybe the proposal boils down to 1) use <a href=\"http://schema.org\" target=\"_blank\" title=\"http://schema.org\">schema.org</a> for the model and 2) json-ld for the representation.  Then surfacing the information (manifest.json, /about.html, ...) is a seperate decision?</p>",
        "id": 153876011,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489160703
    },
    {
        "content": "<p>Since these manifests are going to be small-ish and not complicated, is it necessary to use <a href=\"http://schema.org\" target=\"_blank\" title=\"http://schema.org\">schema.org</a> for them? Would also be nice to use the same approach/format for native apps that don't have launch pages (and may not even have a website).</p>",
        "id": 153876021,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1489164328
    },
    {
        "content": "<p>Do you know if <a href=\"http://schema.org\" target=\"_blank\" title=\"http://schema.org\">schema.org</a> is going to add a lot of overhead?  I had thought it was just going to establish our vocabulary.  I'll do a quick compare with the <a href=\"https://gallery.smarthealthit.org/manifest/15\" target=\"_blank\" title=\"https://gallery.smarthealthit.org/manifest/15\">https://gallery.smarthealthit.org/manifest/15</a> example to see what it would look like.</p>",
        "id": 153876027,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489166191
    },
    {
        "content": "<p>A benefit of using a simple data structure is that apps can host it directly, or a third-party service (e.g. gallery) can host it, and it does't impose any expectations about being embedded in a web page.</p>",
        "id": 153876045,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489171984
    },
    {
        "content": "<p>This manifest could also host a public key or a link to one, when we get there.</p>",
        "id": 153876046,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489172005
    },
    {
        "content": "<p>Comparing SMART’s simple example and a <a href=\"http://schema.org\" target=\"_blank\" title=\"http://schema.org\">schema.org</a> version<br>\n<a href=\"/user_uploads/10155/uY8BNKjhnzgmcT6KmJnrN6Sa/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/uY8BNKjhnzgmcT6KmJnrN6Sa/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\"><img src=\"/user_uploads/10155/uY8BNKjhnzgmcT6KmJnrN6Sa/pasted_image.png\"></a></div>",
        "id": 153876082,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489188503
    },
    {
        "content": "<p>I'm not saying it is all or nothing, 100% strict compliance.  I think we can build up like this, </p>\n<p>1) Choose JSON-LD over JSON.  Both are entirely consumable as JSON.  Both can be in a file called manifest.json.  JSON-LD adds no constrains, but does add capability.  A consumer can ignore any fields of either document.  JSON-LD is JSON.</p>\n<p>2) Lets use the vocabulary from <a href=\"http://schema.org\" target=\"_blank\" title=\"http://schema.org\">schema.org</a> as it is an industry standard.  In the example above, instead of \"smart_version\", we say \"schemaVersion\".  We don't have to even declare \"@context\": \"<a href=\"http://schema.org\" target=\"_blank\" title=\"http://schema.org\">http://schema.org</a>\".  Lets just use standards where we can.  </p>\n<p>3) We can stop here.  I can't see a single argument for not going to this point.</p>",
        "id": 153876085,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489193950
    },
    {
        "content": "<p>Next, I'm saying we <strong>should</strong> go further because 1) our use case already has a great solution 2) a app developer that is serious about taking their app to market <strong>will do this anyway</strong>.  They would end up with our little manifest.json and then put the same information in their app to be a progressive app.</p>",
        "id": 153876086,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489194339
    },
    {
        "content": "<p>Whats next?  These steps are optional from an EHR/Gallery/Sandbox consumption perpective (don't have to enforce these).</p>\n<p>4) Go ahead and declare \"MobileApplication\", \"WebApplication\", or \"SoftwareApplication\" as the schema in the JSON-LD file.  Extend the schema or bend the rules if necessary :) </p>\n<p>5) Go ahead and run the JSON-LD through the Google Structured Data Testing Tool (will make a few fields required or desired) and upgrade the JSON-LD info.  Again, an EHR can ignore these not-interesting properties.</p>\n<p>6) Go ahead and add the JSON-LD to a HTTP URL within the app space so Google, FB, Twitter, content systems, etc can find and use it.  Hopefully we can find a way to consolidate this with our hosting requirement for the manifest info.</p>\n<p>7) Ready to rock and roll!  To me, this is the easiest way for an app developer to be discovered by our systems and by Google, etc.  </p>",
        "id": 153876088,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489195078
    },
    {
        "content": "<p>FWIW, I think the concept of an app manifest and a document (<a href=\"http://schema.org\" target=\"_blank\" title=\"http://schema.org\">schema.org</a>) for search engines/twitter/etc are orthogonal. Using Apple &amp; Google as examples, they both separate these concepts where each has a respective App Store but also will index/parse the <a href=\"http://schema.org\" target=\"_blank\" title=\"http://schema.org\">schema.org</a> document. Additionally, I agree with Pascal on the point that not all SMART apps will be web apps (eg, native apps) and may not want to host a document.</p>\n<p>I'd prefer to start with a simple JSON manifest/metadata.json file (not JSON-LD). That is the most straightforward and easiest approach. We can start with this and see how it goes and adjust accordingly.</p>",
        "id": 153876148,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1489366763
    },
    {
        "content": "<p>Good, now that we are all in agreement (haha)...</p>",
        "id": 153876234,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489426438
    },
    {
        "content": "<p>Considering the hosting env API, <br>\n1) a register app info API could exist that someone could use to post the manifest information<br>\n2) or, a register remote app API could exist that someone could call with a URL the hosting env could query to gain the manifest data (similar to cds hooks services)</p>\n<p>Thoughts?</p>",
        "id": 153876236,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489427417
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192233\">@Travis Cummings</span> - Are you asking whether the SMART Sandbox has the manifest pushed to it (option 1) or pulls the manifest from some URL (option 2)?</p>",
        "id": 153876240,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1489429664
    },
    {
        "content": "<p>Hosting env was the wrong term.  Is \"registry host\" a better term for the SMART Sandbox, Gallery, EHR Dev System, Store?</p>\n<p>How should an app become registered?  Push or pull model.  Or something else all-together? </p>",
        "id": 153876241,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489430402
    },
    {
        "content": "<p>It seems that a web form would also be a way to register.  The web form and a push model would both use an HTTP POST API.  Does that seem the most basic way to start?</p>",
        "id": 153876243,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489431529
    },
    {
        "content": "<p>In my head I was thinking:</p>\n<p>1. Developer signs into the HSPC Sandbox<br>\n2. Developer either:<br>\n     a. Manually fills out form with their app details<br>\n     b. Uploads the app manifest JSON<br>\n&lt;At this point the SMART app has been registered in the HSPC Sandbox&gt;<br>\n3. Developer clicks some button to import/register their app into the Cerner Sandbox<br>\n4. Developer is redirected to Cerner Sandbox to authenticate and authorize the HSPC Sandbox to import apps on their behalf<br>\n5. Developer approves<br>\n6. Developer is redirected back to the HSPC Sandbox<br>\n7. HSPC Sandbox POSTs to some Cerner Sandbox API with the app manifest JSON<br>\n&lt;At this point the SMART app has been registered in the Cerner Sandbox&gt;</p>\n<p>Steps 4-6 are a one-time only step to authorize the HSPC Sandbox app.</p>\n<p>Admittedly, I have not thought through all of the scenarios here or how it would work if we wanted to go the other direction. The key piece though is that when you upload/ingest an app manifest JSON, you need to know who the developer is so that the SMART app is tied to their account.</p>",
        "id": 153876244,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1489431530
    },
    {
        "content": "<p>The most basic way to start would be for the HSPC Sandbox to allow the developer to upload the app manifest JSON file</p>",
        "id": 153876245,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1489431572
    },
    {
        "content": "<p>HSPC can definately start on 1-3.  Does the Cerner OAuth system exist that could provide #4?  Which do you think we could work on first, 4 or 7 (without auth)?</p>",
        "id": 153876247,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489432318
    },
    {
        "content": "<p>This would all be development work on the Cerner side :)</p>\n<p>We have a very robust OAuth 1.0a implementation that we could do this with today; however, I don't want that as we're migrating to OAuth 2. Right now though our OAuth 2 server (authz server) has been focused on the SMART &amp; FHIR use cases. We need to expand it to support these other use cases</p>",
        "id": 153876317,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1489441814
    },
    {
        "content": "<p>I think the best thing to start with right now is defining this manifest JSON file</p>",
        "id": 153876318,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1489441837
    },
    {
        "content": "<p>I've added some tabs to this tracking sheet for Development, Gallery, and Store registration.  On the development tab, I've put down some ideas for the fields we would want.  I'll put together a json example next.  </p>\n<p><a href=\"https://docs.google.com/spreadsheets/d/1G_BD5YHZCkXamRn_mtxIM62i5sWlEP-Yr93Zz7tGLKM/edit?usp=sharing\" target=\"_blank\" title=\"https://docs.google.com/spreadsheets/d/1G_BD5YHZCkXamRn_mtxIM62i5sWlEP-Yr93Zz7tGLKM/edit?usp=sharing\">https://docs.google.com/spreadsheets/d/1G_BD5YHZCkXamRn_mtxIM62i5sWlEP-Yr93Zz7tGLKM/edit?usp=sharing</a></p>\n<p>Any thoughts on the development registration info?</p>",
        "id": 153876712,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489524636
    },
    {
        "content": "<p>For the workflow you've described here, Kevin: why put this work on each sandbox? Wouldn't it be simpler across the board to just treat a sandbox \"API\" as a service that statically hosts manifest files, with cache headers etc? </p>",
        "id": 153876715,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489526612
    },
    {
        "content": "<p>er <span class=\"user-mention\" data-user-id=\"191355\">@Kevin Shekleton</span></p>",
        "id": 153876716,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489526659
    },
    {
        "content": "<p>We'd define the same manifest JSON file as our first step, however we do it.</p>",
        "id": 153876717,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489526716
    },
    {
        "content": "<p>I think this all warrants further discussion and I agree that the first step, regardless, is defining that app manifest JSON.</p>",
        "id": 153876718,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1489526772
    },
    {
        "content": "<p>:-)</p>",
        "id": 153876719,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489526780
    },
    {
        "content": "<p>My workflow example was putting down an idea in my head of a developer who has registered their app in the HSPC Sandbox and with single click and transfer that app to the Cerner/Epic/athena/Allscripts Sandbox and run the the app from their SMART Sandbox container</p>",
        "id": 153876720,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1489526833
    },
    {
        "content": "<p>And the easiest way we can accomplish that (assuming everyone agrees this would be a good thing to do) is fine by me ;-)</p>",
        "id": 153876721,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1489526857
    },
    {
        "content": "<p>If Cerner did build a registration API, would it generate client ids + secrets and expose them to the source sandboxes? Or are you just thinking about an API for \"updating app description details\", rather than \"registering an app\"?</p>",
        "id": 153876722,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489526919
    },
    {
        "content": "<p>Today we have to generate client ids + secrets (due to internal implementation details).</p>",
        "id": 153876723,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1489526983
    },
    {
        "content": "<p>I've always been open to further discussion around constant ids+secrets across vendors but as time goes on I see this less and less of a concern/hassle</p>",
        "id": 153876724,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1489527046
    },
    {
        "content": "<p>The API I was thinking of would be to register an app</p>",
        "id": 153876725,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1489527149
    },
    {
        "content": "<p>Here is an example of a registration:<br>\n<a href=\"https://bitbucket.org/hspconsortium/registration/src/802d83aa93fb0ecda9426d888b783efc9ee9f820/dev-sandbox-hierarical.json?at=master&amp;fileviewer=file-view-default\" target=\"_blank\" title=\"https://bitbucket.org/hspconsortium/registration/src/802d83aa93fb0ecda9426d888b783efc9ee9f820/dev-sandbox-hierarical.json?at=master&amp;fileviewer=file-view-default\">https://bitbucket.org/hspconsortium/registration/src/802d83aa93fb0ecda9426d888b783efc9ee9f820/dev-sandbox-hierarical.json?at=master&amp;fileviewer=file-view-default</a></p>",
        "id": 153876737,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489530275
    },
    {
        "content": "<p>I mean, a manifest that is used for registering an app</p>",
        "id": 153876738,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489530345
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191355\">@Kevin Shekleton</span> <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> <span class=\"user-mention\" data-user-id=\"192825\">@Jeffrey Danford</span>  Any feedback on the sample manifest for registration?  I think the manifest use cases can be  progressive like this:  <br>\n0) abstract registration: client info + app info<br>\n1) reference dev sandbox: registration + sample data + demo launch<br>\n2) attribution: dev sandbox + org info<br>\n3a) vendor integration: attribution + vendor dev account (i'm not sure what \"vendor dev account\" is unless the manifest is per vendor)<br>\n3b) reference gallery: attribution + marketing info<br>\n4) vendor store: vendor integration + marketing info + pricing + contract + validation certificates (these are just ideas)</p>",
        "id": 153876945,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489588581
    },
    {
        "content": "<p>Thanks for the example, <span class=\"user-mention\" data-user-id=\"192233\">@Travis Cummings</span>. Can you help clarify the difference between <code>client</code> and <code>app</code>? Seems like there is overlap. Also I'd recommend that we <strong>avoid sharing the sandbox-specific OAuth client ID</strong> in this kind of manifest, because it's likely to create expectations or mistaken assumptions about who's responsible for generating IDs.</p>\n<p>(In our current world, each SMART on FHIR EHR needs to generate these —to keep beating the drum... I'd love to move towards universal client IDs, but we should do this very deliberately and only once we have agreement on a scheme for validating them. Something like \"the URI pointing to an app's manifest\" ;-))</p>",
        "id": 153876949,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489589289
    },
    {
        "content": "<p>Overall, I'd definitely put emphasis on \"can we solve the client identifier problem\" before trying to solve the issue of \"how do we standardize pricing models\" (because I think those are going to vary pretty widely and creatively across vendors).</p>",
        "id": 153876951,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489589368
    },
    {
        "content": "<p>Good point, i'll remove the client id.  I was imaging the different between an app and a client is that a client may be used by multiple apps.  Maybe that is something we don't actually want.  But for example, the Meducation RS and Meducation TimeView might both share the same client id (in HSPC gallery, they each have a seperate client).  Or an app \"Big App with Modules\" might have 1..* client id's.</p>\n<p>But if these are totally fictitious examples, client info and app info could certainly be merged.</p>",
        "id": 153876954,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489589835
    },
    {
        "content": "<p>For Dan:<br>\n{<br>\n  \"client\": {<br>\n    \"type\": \"public\",<br>\n    \"name\": \"Bilirubin SMART sandbox client\",<br>\n    \"description\": \"Client used by the Bilirubin Risk Chart app\"<br>\n  },<br>\n  \"app\": {<br>\n    \"id\": \"15dfd791-3e5f-4f1a-83ef-d5e0ea898a1d\",<br>\n    \"name\": \"Bilirubin Risk Chart\",<br>\n    \"summary\": \"Demonstration app designed to help clinicians treat newborn hyperbilirubinemia appropriately.\",<br>\n    \"logo_256x256_png\": \"<a href=\"https://example.com/1.png\" target=\"_blank\" title=\"https://example.com/1.png\">https://example.com/1.png</a>\",<br>\n    \"logo_512x512_png\": \"<a href=\"https://example.com/1@2x.png\" target=\"_blank\" title=\"https://example.com/1@2x.png\">https://example.com/1@2x.png</a>\",<br>\n    \"oauth_redirect_uri\": \"<a href=\"https://example.com/bilirubin-risk-chart/index.html\" target=\"_blank\" title=\"https://example.com/bilirubin-risk-chart/index.html\">https://example.com/bilirubin-risk-chart/index.html</a>\",<br>\n    \"smart_launch_uri\": \"<a href=\"https://example.com/bilirubin-risk-chart/launch.html\" target=\"_blank\" title=\"https://example.com/bilirubin-risk-chart/launch.html\">https://example.com/bilirubin-risk-chart/launch.html</a>\",<br>\n    \"scope\": \"launch patient/*.read online_access\",<br>\n    \"fhir_version\": [<br>\n      \"1.0.2\",<br>\n      \"1.4\",<br>\n      \"1.8\"<br>\n    ],<br>\n    \"user_profile_type\": [<br>\n      \"Practitioner\"<br>\n    ]<br>\n  },<br>\n  \"organization\": {<br>\n    \"developer_contact_email\": \"<a href=\"mailto:travis@iSalusSolutions.com\" title=\"mailto:travis@iSalusSolutions.com\">travis@iSalusSolutions.com</a>\"<br>\n  }<br>\n}</p>\n<div class=\"message_inline_image\"><a href=\"https://example.com/1.png\" target=\"_blank\" title=\"https://example.com/1.png\"><img src=\"https://example.com/1.png\"></a></div><div class=\"message_inline_image\"><a href=\"https://example.com/1@2x.png\" target=\"_blank\" title=\"https://example.com/1@2x.png\"><img src=\"https://example.com/1@2x.png\"></a></div>",
        "id": 153877045,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489608418
    },
    {
        "content": "<p><a href=\"https://bitbucket.org/hspconsortium/registration/src\" target=\"_blank\" title=\"https://bitbucket.org/hspconsortium/registration/src\">https://bitbucket.org/hspconsortium/registration/src</a></p>",
        "id": 153877047,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489608692
    },
    {
        "content": "<p>It's also worth knowing about <a href=\"https://github.com/HHSIDEAlab/poet/blob/master/README.md\" target=\"_blank\" title=\"https://github.com/HHSIDEAlab/poet/blob/master/README.md\">https://github.com/HHSIDEAlab/poet/blob/master/README.md</a> which is a take on a related problem -- but includes a way to publish a manifest of app details (signed by an \"endorsing\" organization). </p>",
        "id": 153877372,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489644736
    },
    {
        "content": "<p>And the other manifest design consideration (as in the original SMART gallery example) is using field names that keep our manifest compatible with the specified payload to an OAuth 2.0 Dynamic Registration API (with additional properties for the information not explicitly defined in the dyn reg specification).</p>",
        "id": 153877394,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489648827
    },
    {
        "content": "<p>This keeps options open for how the manifest can be used downstream. </p>",
        "id": 153877395,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489648912
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> Thanks for getting me up to speed on this style.  Do you imagine that this sort of OAuth-registration token would be narrowly focused (marketing, demo, contacts, etc, not included)?</p>",
        "id": 153877825,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489766627
    },
    {
        "content": "<p>At a minimum it's the data necessary for interoperability, including launch and redirect URLs, public key (if we get there). I think that as more details are included, it becomes easier to trust. For example, including an app name and a description in the signed content seems natural. </p>",
        "id": 153877827,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489767865
    },
    {
        "content": "<p>Poet talks about an app having possibly several badges that are presented to the user.  It seems their goal would be if an app had a badge, \"OAuth2 Secured\", another \"HIPAA verified\", another \"CMMI Level 4\", etc, then the user or UI could have more confidence about it.</p>",
        "id": 153877830,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489768630
    },
    {
        "content": "<p>So I am wondering if our other types of data are better contained in other badges.  For example, context data such as \"FHIR Version\", \"App Category\", \"User Profile Type\" should be in a badge that isn't oauth specific.</p>",
        "id": 153877831,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489768732
    },
    {
        "content": "<p>Oh, well the goal of the endorsements is that an outside group signs off on \"the app\".</p>",
        "id": 153877832,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489768770
    },
    {
        "content": "<p>And less relevant data like \"Demo Video URL\" in a different badge again.</p>",
        "id": 153877833,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489768774
    },
    {
        "content": "<p>The point of signing a pile of app details is to *identify* the app that's being endorsed.</p>",
        "id": 153877834,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489768783
    },
    {
        "content": "<p>So, the more attributes, the better the identification can be.</p>",
        "id": 153877835,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489768789
    },
    {
        "content": "<p>But as I said, the minimum data set are the fields needed for interop.</p>",
        "id": 153877836,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489768830
    },
    {
        "content": "<p>I'd say the best practice is to include these + any other fields available; the more details in the signed payloads, the most sophisticated processing an EHR can do downstream in validating the signature and fields.</p>",
        "id": 153877837,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489768873
    },
    {
        "content": "<p>Ok, an EB investigator would check out the url, name, etc to verify the app.  I had thought that the software_id was sufficient, but wasn't thinking of the EB perspective. </p>",
        "id": 153877838,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489768887
    },
    {
        "content": "<p>I don't see a downside.</p>",
        "id": 153877839,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489768888
    },
    {
        "content": "<p>Imagine an app presents itself for automated registration and has a software  id of \"my-good-app-1\". It presents a signed endorsement where the only field in the signed payload is the software id (\"my-good-pp-1\"). Now, a malicious app could present this endorsements as its own, and could supply a redirect URI like \"<a href=\"http://evilapp.com\" target=\"_blank\" title=\"http://evilapp.com\">http://evilapp.com</a>\". If the redirect URI doens't appear in the signed endorsement body, the EHR can't determine this is foul play.</p>",
        "id": 153877840,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489768985
    },
    {
        "content": "<p>The more fields in the signed endorsement body, the better matching/assurance the EHR can provide.</p>",
        "id": 153877841,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489769019
    },
    {
        "content": "<p>I had thought a couple of fields would really help with sandbox and gallery use cases.  Do you think this type of info would also belong in this registration-centric token?  Of course it would be optional, but is it inappropriate?</p>\n<p>Sample Data: a FHIR bundle, either with POST/PUT for supplying data, and GET for requiring data from the target environment</p>\n<p>Demo Launch Context: a launch (parameters, ex: patient=123) the app is saying will present an interesting demo, probably coordinated with the sample data</p>",
        "id": 153877842,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489769388
    },
    {
        "content": "<p>I agree that things like \"sample data\" and \"demo launch context\" don't fit there. </p>",
        "id": 153877843,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489769494
    },
    {
        "content": "<p>The key is: could this information be presented to an end-user in identifying an app? So description, title, URLs, etc all make sense.</p>",
        "id": 153877844,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489769525
    },
    {
        "content": "<p>Sample data doesn't.</p>",
        "id": 153877845,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489769528
    },
    {
        "content": "<p>I just added <a href=\"https://github.com/HHSIDEAlab/poet/pull/3\" target=\"_blank\" title=\"https://github.com/HHSIDEAlab/poet/pull/3\">https://github.com/HHSIDEAlab/poet/pull/3</a> BTW <span class=\"user-mention\" data-user-id=\"192628\">@Alan Viars</span> <span class=\"user-mention\" data-user-id=\"192233\">@Travis Cummings</span> because I think there's a gap in what POET explains...</p>",
        "id": 153877847,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489769559
    },
    {
        "content": "<p>Ok got it, thanks!</p>",
        "id": 153877848,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489769827
    },
    {
        "content": "<p>With the POET approach, the most basic manifest could just look like this:</p>\n<p>{<br>\n  \"software_id\": \"15dfd791-3e5f-4f1a-83ef-d5e0ea898a1d\",<br>\n  \"client_name\": \"Bilirubin Risk Chart\",<br>\n  \"client_uri\": \"<a href=\"https://example.com/bilirubin-risk-chart/about.html\" target=\"_blank\" title=\"https://example.com/bilirubin-risk-chart/about.html\">https://example.com/bilirubin-risk-chart/about.html</a>\",<br>\n  \"logo_uri\": \"<a href=\"https://example.com/bilirubin-risk-chart/images/logo.png\" target=\"_blank\" title=\"https://example.com/bilirubin-risk-chart/images/logo.png\">https://example.com/bilirubin-risk-chart/images/logo.png</a>\",<br>\n  \"initiate_login_uri\": \"<a href=\"https://example.com/bilirubin-risk-chart/launch.html\" target=\"_blank\" title=\"https://example.com/bilirubin-risk-chart/launch.html\">https://example.com/bilirubin-risk-chart/launch.html</a>\",<br>\n  \"redirect_uris\": [<br>\n    \"<a href=\"https://example.com/bilirubin-risk-chart/index.html\" target=\"_blank\" title=\"https://example.com/bilirubin-risk-chart/index.html\">https://example.com/bilirubin-risk-chart/index.html</a>\"<br>\n  ],<br>\n  \"scope\": \"launch patient/*.read online_access\",<br>\n  \"token_endpoint_auth_method\": \"none\",<br>\n  \"grant_types\": [<br>\n    \"authorization_code\"<br>\n  ]<br>\n}</p>\n<div class=\"message_inline_image\"><a href=\"https://example.com/bilirubin-risk-chart/images/logo.png\" target=\"_blank\" title=\"https://example.com/bilirubin-risk-chart/images/logo.png\"><img src=\"https://example.com/bilirubin-risk-chart/images/logo.png\"></a></div>",
        "id": 153877884,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489785890
    },
    {
        "content": "<p>A couple of fields we might want to add soon could be 1) is this a Patient or Provider app 2) What FHIR versions are supported 3) client type {public|confidential} (is this inferred somehow)</p>",
        "id": 153877885,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489786002
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191355\">@Kevin Shekleton</span> <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> <span class=\"user-mention\" data-user-id=\"191414\">@Dan Gottlieb</span> <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> Would the POET-influenced manifest body be a satisfactory place to start?  </p>",
        "id": 153877886,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1489786139
    },
    {
        "content": "<p><code>token_endpoint_auth_method</code> tells you public vs confidential.</p>",
        "id": 153877896,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489789056
    },
    {
        "content": "<p>\"none\" means no authentication --&gt; public client</p>",
        "id": 153877897,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489789063
    },
    {
        "content": "<p>I'd start with these fields (which is to say, the fields in OAuth 2.0 dyn reg, which is also the fields we use in the SMART gallery manifest) and define our own ad-hoc extensions wherever we want them. We should be all-inclusive by defining as many extensions as we need to cover the manifest use cases from your spreadsheet (patient vs provider, sample data, whatever). Call that \"The Full Manifest\".</p>\n<p>Now, when it comes to using dyn reg (for systems that want to support this): the full manifest can be used as the body of a POST request to register a new app.</p>\n<p>When it comes to signing app metadata (if/when we want to go there), we'd define a set of \"signed properties\" (probably software id, name, descriptoin, uris, scopes, token endpoint auth method, and grant types) that would be used to create a JWT.</p>",
        "id": 153877899,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1489789308
    },
    {
        "content": "<p>There is a lot to catch up on here!</p>\n<p>Re: #4 - standard pricing models - this is something we will never be able to align on. The pricing will most likely be determined by the SMART app developer and pricing business software is so complex (per bed? per user? per concurrent user? etc etc). Similar reasoning for contract/valdiation details</p>\n<p>I agree with Josh on deferring the OAuth client id sharing across vendors.</p>",
        "id": 153877939,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1489805966
    },
    {
        "content": "<p>Rather than using the POET or the OAuth 2 dynamic registration terminology, would make more sense to align on the naming that SMART uses? Eg: client_id instead of software_id and launch_url instead of initiate_login_uri.<br>\n.<br>\nIt's a subtle difference but would avoid the appearance that we're trying to solve either dynamic client registration or the notion of endorsements.</p>",
        "id": 153877942,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1489806803
    },
    {
        "content": "<blockquote>\n<p>avoid the appearance that we're trying to solve either dynamic client registration or the notion of endorsements.</p>\n</blockquote>\n<p>What are we trying to solve here? </p>\n<p>You want to define an interoperable manifest spec for an app to make it easier for a developer to register their app in the 6 or so healthcare app stores/galleries, right?  <span class=\"user-mention\" data-user-id=\"192233\">@Travis Cummings</span>, what's the specific workflow that you're envisioning? Given that, I can provide feedback on the current list of fields.</p>\n<p>I'm not convinced that an app manifest solves a significant problem. </p>\n<p>I think that SMART app compatibility across different FHIR servers (compatibility testing) and to a lesser extent, better enabling users to trust apps (endorsements -- for which POET looks like a solid  technical specification) are much more valuable features.</p>\n<p>Isaac</p>",
        "id": 153878049,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1489876493
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191355\">@Kevin Shekleton</span> Regarding terminology: The <code>client_id</code> and <code>software_id</code> represent different concepts. A <code>client_id</code> is generally out of a client's control, and represents the over-the-wire id that it uses to perform the OAuth dance with any given provider. A <code>software_id</code> is asserted by an app developer and uniquely identifies a version/release of a given product.</p>",
        "id": 153878646,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1490043415
    },
    {
        "content": "<p>Thanks, Josh</p>",
        "id": 153878647,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1490043494
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> Agreed we need to be clear on the problems(s) we want to solve. I think the goal at this point is to define a building block that would be a useful component for a few overlapping goals.</p>\n<p>I've heard:<br>\n1) app registration within multiple vendor stores and/or multiple provider sites,<br>\n2) workflow where updates to an app's description and details can propagate across vendor stores,<br>\n3) a lightweight protocol where an organization can publish a list of apps they \"trust\"</p>",
        "id": 153878648,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1490043619
    },
    {
        "content": "<p>It's possible that a single building block (manifest format) isn't the best way to solve any of these.</p>",
        "id": 153878649,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1490043751
    },
    {
        "content": "<p>(But I suspect it's a pretty good start, and my personal take is that it's worth a good shot.)</p>",
        "id": 153878650,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1490043768
    },
    {
        "content": "<p>{<br>\n  \"software_id\": \"15dfd791-3e5f-4f1a-83ef-d5e0ea898a1d\",<br>\n  \"client_name\": \"Bilirubin Risk Chart\",<br>\n  \"client_uri\": \"<a href=\"https://example.com/bilirubin-risk-chart/about.html\" target=\"_blank\" title=\"https://example.com/bilirubin-risk-chart/about.html\">https://example.com/bilirubin-risk-chart/about.html</a>\",<br>\n  \"logo_uri\": \"<a href=\"https://example.com/bilirubin-risk-chart/images/logo.png\" target=\"_blank\" title=\"https://example.com/bilirubin-risk-chart/images/logo.png\">https://example.com/bilirubin-risk-chart/images/logo.png</a>\",<br>\n  \"launch_url\": \"<a href=\"https://example.com/bilirubin-risk-chart/launch.html\" target=\"_blank\" title=\"https://example.com/bilirubin-risk-chart/launch.html\">https://example.com/bilirubin-risk-chart/launch.html</a>\",<br>\n  \"redirect_uris\": [<br>\n    \"<a href=\"https://example.com/bilirubin-risk-chart/index.html\" target=\"_blank\" title=\"https://example.com/bilirubin-risk-chart/index.html\">https://example.com/bilirubin-risk-chart/index.html</a>\"<br>\n  ],<br>\n  \"scope\": \"launch patient/*.read online_access\",<br>\n  \"token_endpoint_auth_method\": \"none\",<br>\n  \"grant_types\": [<br>\n    \"authorization_code\"<br>\n  ],<br>\n  \"fhir_versions\": [<br>\n    \"dstu2\", \"1.9\"<br>\n  ]<br>\n}</p>\n<div class=\"message_inline_image\"><a href=\"https://example.com/bilirubin-risk-chart/images/logo.png\" target=\"_blank\" title=\"https://example.com/bilirubin-risk-chart/images/logo.png\"><img src=\"https://example.com/bilirubin-risk-chart/images/logo.png\"></a></div>",
        "id": 153878815,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1490117694
    },
    {
        "content": "<p>1) changed initiate_login_uri to launch_url<br>\n2) added fhir_versions (the fhir server declares this, does the app also need to declare this?  I think it would be helpful)<br>\n3) I have the software_id as a UUID.  For sure, it should be unique within a deployment space (site?).  What is the preference here?</p>",
        "id": 153878817,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1490117971
    },
    {
        "content": "<p>For the topic of where this file lives, would it be good to follow FHIR's convention of having a /metadata endpoint on the app hosting?  </p>",
        "id": 153878818,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1490118230
    },
    {
        "content": "<p><code>software_id</code> should just be a string -- developer asserts this.</p>",
        "id": 153878859,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1490122916
    },
    {
        "content": "<p>can be a UUID or whatever.</p>",
        "id": 153878860,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1490122930
    },
    {
        "content": "<p>The <code>initiate_login_uri</code> name (along with the <code>iss</code> param) comes from  <a href=\"http://openid.net/specs/openid-connect-core-1_0.html#ThirdPartyInitiatedLogin\" target=\"_blank\" title=\"http://openid.net/specs/openid-connect-core-1_0.html#ThirdPartyInitiatedLogin\">http://openid.net/specs/openid-connect-core-1_0.html#ThirdPartyInitiatedLogin</a> </p>",
        "id": 153878864,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1490123064
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191355\">@Kevin Shekleton</span> had suggested using the smart naming of launch_url because it was consistent with the smart terminology.  I'd also favor launch_url because it is where the EHR should initiate a SMART launch and that is scemantically more than an OpenID initiate_login_uri.  <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>, thoughts?</p>",
        "id": 153879190,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1490201381
    },
    {
        "content": "<p>Compatibility out-of-the-box with existing dyn-reg implementations is nice (e.g. SMART and HSPC use the MITREid server in our reference stack), but it's not a huge deal.</p>",
        "id": 153879198,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1490203055
    },
    {
        "content": "<p>Noticed that Josh had previously suggested hosting this at /.well-known/smart/manifest.json.  I think that is better than my proposal of /metadata.  </p>",
        "id": 153879204,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1490207803
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> <span class=\"user-mention\" data-user-id=\"191355\">@Kevin Shekleton</span> I've released a version of the bilirubin risk chart that includes the manifest.  The manifest uses relative paths for deployment simplicity (though absolute paths could be supported).</p>\n<p>A registering system can register an app at this path: <a href=\"https://apps.hspconsortium.org/hspc-bilirubin-risk-chart/\" target=\"_blank\" title=\"https://apps.hspconsortium.org/hspc-bilirubin-risk-chart/\">https://apps.hspconsortium.org/hspc-bilirubin-risk-chart/</a><br>\nand discover a manifest at this path: /.wellknown/smart/manifest.json<br>\nand the manifest has addresses like this:<br>\n  \"client_uri\": \"/\",<br>\n  \"logo_uri\": \"/images/logo.png\",<br>\n  \"launch_url\": \"/launch.html\",<br>\n  \"redirect_uris\": [<br>\n    \"/index.html\"<br>\n  ],</p>\n<p>Full manifest: <a href=\"https://apps.hspconsortium.org/hspc-bilirubin-risk-chart/.wellknown/smart/manifest.json\" target=\"_blank\" title=\"https://apps.hspconsortium.org/hspc-bilirubin-risk-chart/.wellknown/smart/manifest.json\">https://apps.hspconsortium.org/hspc-bilirubin-risk-chart/.wellknown/smart/manifest.json</a></p>\n<p>We are going to add a dynamic registration option in the HSPC sandbox for this style.  </p>",
        "id": 153879556,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1490290922
    },
    {
        "content": "<p>Spec: <a href=\"https://bitbucket.org/hspconsortium/registration\" target=\"_blank\" title=\"https://bitbucket.org/hspconsortium/registration\">https://bitbucket.org/hspconsortium/registration</a></p>\n<p>Possibly we could port this spec over to <a href=\"http://smarthealthit.org\" target=\"_blank\" title=\"http://smarthealthit.org\">smarthealthit.org</a> at some point  in the future?</p>",
        "id": 153879566,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1490293671
    },
    {
        "content": "<p>Cool! Note that it looks like there may be a double <code>/</code> when you append the relative URIs to the base. We should be clear on where each component begins/ends.</p>",
        "id": 153879567,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1490294209
    },
    {
        "content": "<p>I think including this in the SMART docs site would be great. <span class=\"user-mention\" data-user-id=\"191414\">@Dan Gottlieb</span> what are your thoughts?</p>",
        "id": 153879568,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1490294268
    },
    {
        "content": "<p>Also regarding relative URIs, I think this may be a dangerous thing. Especially if \"endorsers\" want to be in the business of signing off on app details like <code>redirect_uri</code>, it's essential to have an absolute URI here.</p>",
        "id": 153879569,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1490294385
    },
    {
        "content": "<p>Updated the manifest from <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> 's feedback.  I have the \"client_uri\" pointing to an actual page (.../index.html) instead of the root path to align with dynamic registrations intention of showing this address to the end-user as a clickable link.</p>",
        "id": 153879613,
        "sender_full_name": "Travis Cummings",
        "timestamp": 1490311509
    },
    {
        "content": "<p>Looks good! <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> - yup, Travis and I spoke briefly yesterday about adding the manifest definition to the docs site and I agree that it makes sense. </p>",
        "id": 153879616,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1490312238
    }
]