[
    {
        "content": "<p>I'm trying to validate a JWT from <a href=\"http://launch.smarthealthit.org\">launch.smarthealthit.org</a>... I had logic setup to work with RS256-signed JWTs, but I see that the JWT provided by <a href=\"http://launch.smarthealthit.org\">launch.smarthealthit.org</a> has an algorithm of HS256, while the keys provided by <a href=\"https://launch.smarthealthit.org/keys\">https://launch.smarthealthit.org/keys</a> are signed with RS256. Does anyone have any experience validating these JWT's using Java? I don't understand why the /keys are signed with RS256, while the JWT is signed with RS256, and the code I have in place that was working with generic (non-smart-on-fhir) oauth2 was working fine, and is not working in this case.</p>",
        "id": 198947966,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1590611061
    },
    {
        "content": "<p>This sounds like a bug especially since there's no shared secret in the Launcher that could be used for an HMAC -- can you share an example of a signed token for discussion here?</p>",
        "id": 198949669,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1590611806
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193731\">@Vladimir Ignatov</span> FYI</p>",
        "id": 198949722,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1590611830
    },
    {
        "content": "<p>I think I figured something out... it seems the access token is signed with HS256, while the id token is signed with RS256</p>",
        "id": 198950388,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1590612138
    },
    {
        "content": "<p>I should probably be validating the id token, not the access token?</p>",
        "id": 198950407,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1590612149
    },
    {
        "content": "<p>but, I would still think the access token should be signed with RS256</p>",
        "id": 198950450,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1590612169
    },
    {
        "content": "<p>Correct! The format of the access token is unspecified</p>",
        "id": 198950455,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1590612170
    },
    {
        "content": "<p>got it</p>",
        "id": 198950474,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1590612180
    },
    {
        "content": "<p>ok</p>",
        "id": 198950482,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1590612181
    },
    {
        "content": "<p>Apps shouldn't try to \"read\" it</p>",
        "id": 198950488,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1590612183
    },
    {
        "content": "<p>thanks for clarifying/confirming <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span></p>",
        "id": 198950530,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1590612204
    },
    {
        "content": "<p>(token introspection API is the official way to interpret a token)</p>",
        "id": 198950531,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1590612205
    }
]