[
    {
        "content": "<p>US Core has a DocumentReference profile which mentions that the server can support content.url which may be a reference to a document Bundle on the server. Using SMART on FHIR, how are server systems connecting a document bundle with a particular patient to make sure an authenticated patient gets access to their and only their Bundle resources?</p>",
        "id": 252372475,
        "sender_full_name": "Corey Spears",
        "timestamp": 1631049047
    },
    {
        "content": "<p>presumably that is a local authorization problem to be handled on the server.. There are mechanisms where the Binary can be found in the DocumentReference, and thus given the same access needs as the DocumentReference. There is also a Binary.securityContext that can explicitly point at the DocumentReference. And there is also the <a href=\"http://Binary.meta.security\">Binary.meta.security</a> tags that could be used.... BUT all that said, it seems this is a problem for the server and the policies the server is expected to enforce to address.</p>",
        "id": 252373148,
        "sender_full_name": "John Moehrke",
        "timestamp": 1631049353
    },
    {
        "content": "<p>OK, So there is not a common means that servers are using to support this? Is this something that should be raised or defined in IGs or should it be left up to the implementations? I am curious how US Core implementers are managing this today. </p>\n<p>Thought I would ask here before asking the implementers stream. Any implementers or other here that can share their experience?</p>",
        "id": 252374309,
        "sender_full_name": "Corey Spears",
        "timestamp": 1631049969
    },
    {
        "content": "<p>Never saw a server returning a FHIR Bundle there - usually is a C-CDA</p>",
        "id": 252385373,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1631057140
    },
    {
        "content": "<p>So would that be encoded in the DocumentReference resource in <code>content.attachement.data</code> or a <code>content.attachment.url</code> pointer to a Binary? If the latter, I would also like to know how that is handled as I think it would apply similarly to a document Bundle.</p>",
        "id": 252392455,
        "sender_full_name": "Corey Spears",
        "timestamp": 1631063009
    },
    {
        "content": "<p>I think I always saw pointer to Binary (our server can do either). We just do a GET with an accept header equal to the declared mime type and then store the result.</p>",
        "id": 252448932,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1631103166
    },
    {
        "content": "<p>We're in the same boat, trying to figure out how we implement documentreference - I'll repeat the original question. Using SMART on FHIR, how are server systems connecting a document bundle with a particular patient to make sure an authenticated patient gets access to their and only their documents?</p>",
        "id": 252541278,
        "sender_full_name": "Priya Mathew",
        "timestamp": 1631138976
    },
    {
        "content": "<p>This is below the abstraction barrier for SMART (how does a server maintain any access controls)? </p>\n<p>(If you're using FHIR Binary internally, see <a href=\"http://build.fhir.org/binary-definitions.html#Binary.securityContext\">http://build.fhir.org/binary-definitions.html#Binary.securityContext</a>)</p>",
        "id": 252556244,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1631149405
    },
    {
        "content": "<p>In IHE MHD implementation guide it is defined as using content.attachment.url ONLY, and that points at a Binary.</p>",
        "id": 252615372,
        "sender_full_name": "John Moehrke",
        "timestamp": 1631190055
    },
    {
        "content": "<p>http negotiation is allowed to enable the client to indicate they can handle CDA mime-type and thus they get the CDA xml not enclosed in a Binary.    Like specified in the FHIR Binary spec - <a href=\"http://hl7.org/fhir/binary.html#rest\">http://hl7.org/fhir/binary.html#rest</a></p>",
        "id": 252615532,
        "sender_full_name": "John Moehrke",
        "timestamp": 1631190132
    },
    {
        "content": "<p>Binary.securityContext should not be needed. Yes one can move from Binary to the DocumentReference using this, but one can also do the very same by looking for the DocumentReference with an attachment.url that is the Binary id.  Having dual pointers is not recommended.</p>",
        "id": 252615783,
        "sender_full_name": "John Moehrke",
        "timestamp": 1631190213
    },
    {
        "content": "<p>however if your server wants to use Binary.securityContext... it certainly can. My point is that given your use-case, it should not be necessary.</p>",
        "id": 252616114,
        "sender_full_name": "John Moehrke",
        "timestamp": 1631190345
    },
    {
        "content": "<p>also, not uncommon for these documents to be simply served as URL endpoints.. not necessarily FHIR REST.</p>",
        "id": 252616237,
        "sender_full_name": "John Moehrke",
        "timestamp": 1631190396
    },
    {
        "content": "<blockquote>\n<p>also, not uncommon for these documents to be simply served as URL endpoints.. not necessarily FHIR REST.</p>\n</blockquote>\n<p>Still with the same authz scheme though (otherwise you need a way to tell clients which seem to follow).</p>",
        "id": 252619194,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1631191764
    },
    {
        "content": "<p>yes, covered by the same OAuth service.</p>",
        "id": 252619378,
        "sender_full_name": "John Moehrke",
        "timestamp": 1631191842
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> . You've helped resolve the binary resource retrieval questions I had. I think our use case is different from Corey's. Let me start a new thread with our workflow.</p>",
        "id": 252660795,
        "sender_full_name": "Priya Mathew",
        "timestamp": 1631207301
    },
    {
        "content": "<p>Staying with Corey's original question, we will rephrase again for clarity:  When a smart app is running in patient context, the user access is limited to the patient compartment.  In the ADI IG, there is a DocumentReference referencing a Bundle.  But the Bundle resource is not included in the patient compartment so the patient does not have access to it. The content of this bundle is FHIR resources, not CDAs as might be the case for a binary.</p>",
        "id": 252667843,
        "sender_full_name": "Nancy Lush",
        "timestamp": 1631210263
    },
    {
        "content": "<p>I think that is a manufactured problem through the overly constrained view of the Patient Compartment.</p>",
        "id": 252668226,
        "sender_full_name": "John Moehrke",
        "timestamp": 1631210404
    },
    {
        "content": "<p>which that view of Patient Compartment would never be acceptable in a Privacy Policy as it does not recognize that there are many data that don't explicitly have a .patient/.subject element that are actually patient specific.</p>",
        "id": 252668441,
        "sender_full_name": "John Moehrke",
        "timestamp": 1631210468
    },
    {
        "content": "<p>see <a href=\"http://hl7.org/fhir/compartmentdefinition.html\">http://hl7.org/fhir/compartmentdefinition.html</a></p>",
        "id": 252668805,
        "sender_full_name": "John Moehrke",
        "timestamp": 1631210621
    },
    {
        "content": "<blockquote>\n<p>The patient compartment includes any resources where the subject of the resource is the patient, and some other resources that are directly linked to resources in the patient compartment</p>\n</blockquote>",
        "id": 252668832,
        "sender_full_name": "John Moehrke",
        "timestamp": 1631210632
    },
    {
        "content": "<p>I can offer that this is true not just of Binary and Bundle, but also AuditEvent, Provenance, possibly others.</p>",
        "id": 252669026,
        "sender_full_name": "John Moehrke",
        "timestamp": 1631210700
    },
    {
        "content": "<p>also see <a href=\"http://hl7.org/fhir/security.html#SecPrivConsiderations\">http://hl7.org/fhir/security.html#SecPrivConsiderations</a></p>",
        "id": 252669109,
        "sender_full_name": "John Moehrke",
        "timestamp": 1631210737
    },
    {
        "content": "<p>Also, in the generic SMART app, the user may NOT have access to the full patient compartment.  If the user is a parent access the chart of their teen daughter, then data in the patient compartment like pregnancy and STD test results, sexual history, etc. should not be available to the user.</p>\n<p>Even if the user is the patient accessing their own chart, there might be reasons why content in the patient compartment should not be shown (e.g. a provider has individually reviewed a note or lab result as posing potential for self harm and has flagged it to be withheld).</p>",
        "id": 252674050,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1631212587
    }
]