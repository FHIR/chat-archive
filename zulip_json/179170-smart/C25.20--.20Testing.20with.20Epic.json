[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"279701\">@Jake Fisher</span> great to meet you on the check-in call just now. Re: testing with Epic, do you have a server online for \"Scenario 1\"? And can share details about how to get a client configured? When I follow links from <a href=\"https://docs.google.com/spreadsheets/d/1Acaz612wOy6TYT-aaBJm9A7WjVa3Kn7JSj1E-2h9PzQ/edit#gid=0\">the signup spreadsheet</a> I end up at <a href=\"https://connectathon.epic.com/Interconnect-Fhir-OAuth/Login.aspx?ReturnUrl=%2fInterconnect-Fhir-OAuth%2fStatusPage%2fMain.aspx\">https://connectathon.epic.com/Interconnect-Fhir-OAuth/Login.aspx?ReturnUrl=%2fInterconnect-Fhir-OAuth%2fStatusPage%2fMain.aspx</a> but I don't know how to sign in.</p>",
        "id": 209656764,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599749276
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> let me get a client set up. Would you like to test one with access to vital-signs Observations but not labs Observations, or something along those lines? Also what redirect_uri should I use for your \"app\"? I'll need to register those things statically.</p>",
        "id": 209657802,
        "sender_full_name": "Jake Fisher",
        "timestamp": 1599749637
    },
    {
        "content": "<p>Ideally it'd be good to test a client for Scenario 0 (including all observations) and Scenario 1 (so it can ask for <code>patient/Observation.rs?category=vital-signs</code> and get access to vitals but not labs). It sounds like that will require registering two separate clients?</p>",
        "id": 209659233,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599750128
    },
    {
        "content": "<p>For redirect URLS, if you can register <code>http://localhost:8000/index.html</code> and <code>https://smart.argo.run/granular/</code> for both, that'd be ideal. (Gino might chime in and tweak that arog.run URL once things are up and running ;-))</p>",
        "id": 209659712,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599750289
    },
    {
        "content": "<p>OK, updated the second URL in the request above. <span class=\"user-mention\" data-user-id=\"279701\">@Jake Fisher</span> just want to make sure you've seen this?</p>",
        "id": 209666994,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599752991
    },
    {
        "content": "<p>Yep I have and I'm working on creating clients for you to test with. We currently return our R4 resources with the existing SMART scope syntax (system | user | patient)/resource.(read | write), so I need to alter how we return this slightly to support this testing.</p>",
        "id": 209668260,
        "sender_full_name": "Jake Fisher",
        "timestamp": 1599753464
    },
    {
        "content": "<p>Awesome, that's what connectathon is for :-)</p>",
        "id": 209668411,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599753520
    },
    {
        "content": "<p>Also - FYI that we don't support dynamic scoping right now. The scopes that are statically registered for the client with the server is what it will have access to, regardless of what it requests at runtime.</p>",
        "id": 209668509,
        "sender_full_name": "Jake Fisher",
        "timestamp": 1599753552
    },
    {
        "content": "<p>Will this be clear in the token response? In other words can a client learn what it has been granted by looking up the Scopes array in the access token response?</p>",
        "id": 209670424,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599754359
    },
    {
        "content": "<p>Yes - the client will currently get a list of all the scopes they statically registered with us, regardless of whether or not they requested all of them. So this does accurately reflect what they have access to.</p>",
        "id": 209671351,
        "sender_full_name": "Jake Fisher",
        "timestamp": 1599754782
    },
    {
        "content": "<p>Almost done with the mock client record setup for you Josh.</p>",
        "id": 209671445,
        "sender_full_name": "Jake Fisher",
        "timestamp": 1599754814
    },
    {
        "content": "<p>Quick question about scenario 0: should the client have access to some interactions for Observation but not all? For example, read/search but not create? We already don't support GETing all Observations without supplying a patient  (search interaction) or Observation ID (read)  so this example in confluence seems a bit weird to me, but maybe I'm misinterpreting it.</p>\n<p><code>GET Observation</code> (as opposed to <code>GET Observation?patient={}</code>)</p>\n<p>I'll allow these scopes for the scenario 0 client for now (so create would not be allowed):</p>\n<p>patient/Observation.rs<br>\npatient/Patient.rs</p>",
        "id": 209671827,
        "sender_full_name": "Jake Fisher",
        "timestamp": 1599754978
    },
    {
        "content": "<p>GET Observation in my experience tends to work on reference servers but not vendor servers :). I.e. for Cerner GET Observation also already does not work, so I didn't do any extra connectathon-specific implementation for that part</p>",
        "id": 209672692,
        "sender_full_name": "Max Philips",
        "timestamp": 1599755330
    },
    {
        "content": "<p>For scenario 0, we'd be happy with <code>patient/Observation.r</code> and <code>patient/Patient.r</code> I think.</p>",
        "id": 209673358,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599755590
    },
    {
        "content": "<p>Any concerns with user-facing clients instead of patient-facing? I have a test user already set up. I could set up a test patient with a patient portal account and some patient-facing clients as well if needed.</p>",
        "id": 209674360,
        "sender_full_name": "Jake Fisher",
        "timestamp": 1599756030
    },
    {
        "content": "<p>Details for the user-facing clients are in the spreadsheet now. Working on mocking up some test data so you can actually get some data haha.</p>",
        "id": 209674465,
        "sender_full_name": "Jake Fisher",
        "timestamp": 1599756069
    },
    {
        "content": "<p>Our scenarios are designed around patient-level scopes so we can try out restrictions by patient as well as category.</p>",
        "id": 209676389,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599756911
    },
    {
        "content": "<p>It'd be great if you're able to stay compatible with the scopes from Scenario 0 and Scenario 1</p>",
        "id": 209676463,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599756952
    },
    {
        "content": "<p>(Gino's working on a \"playground\" mode that'll  let us more easily test things off the beaten path, but it'd be great to test things <em>on</em> the path first.)</p>",
        "id": 209676568,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599756993
    },
    {
        "content": "<p>Ok I updated the scopes for the 2 clients I created to be patient/*. Details are in the spreadsheet.</p>",
        "id": 209683295,
        "sender_full_name": "Jake Fisher",
        "timestamp": 1599760071
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"279701\">@Jake Fisher</span> ! I'm making some progress in testing here. One issues is that at the end of the authz process, even though I asked for <code>launch/patient</code> and I'm granted <code>patient/Observation.rs?category=vital-signs</code>, the access token response isn't giving me a <code>patient</code> context param. For example I'm getting:</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n  &quot;access_token&quot;: &quot;P51s2Ti9GLDZq4mn2RFatx3b3i27LrkGvpVrsksuQgYA6wxbBYsIosVDIuqG21BeO4bvz0ZiHUXe3YFZ8TGZ98qjNUni30Q1ibEAypyJUN9wx29ni2vtlSm5KRrh0isI&quot;,\n  &quot;token_type&quot;: &quot;bearer&quot;,\n  &quot;expires_in&quot;: 3600,\n  &quot;scope&quot;: &quot;fhirUser openid patient/Patient.rs patient/Observation.rs?category=vital-signs&quot;,\n  &quot;state&quot;: &quot;LTFO5plq1H4Rlf7J&quot;,\n  &quot;id_token&quot;: &quot;eyJhbGciOiJSUzI1NiIsImtpZCI6IkVRU2F0aDBEVU95Mzl3Rnk5ZDZ4Z0o2TThHMUFtR1Noc0ZRanplcjFFRUk9IiwidHlwIjoiSldUIn0.eyJhdWQiOiJDb25uZWN0YXRob24yMDIwT2JzZXJ2YXRpb25WaXRhbHMiLCJleHAiOjE1OTk3NjM2MzIsImZoaXJVc2VyIjoiaHR0cHM6Ly9jb25uZWN0YXRob24uZXBpYy5jb20vSW50ZXJjb25uZWN0LUZoaXItT0F1dGgvYXBpL0ZISVIvUjQvUHJhY3RpdGlvbmVyL2VVNk1NRUxVemdGMzBYcVZwMFZsQVNRMyIsImlhdCI6MTU5OTc2MzMzMiwiaXNzIjoiaHR0cHM6Ly9jb25uZWN0YXRob24uZXBpYy5jb20vSW50ZXJjb25uZWN0LUZoaXItT0F1dGgvb2F1dGgyL3Rva2VuIiwic3ViIjoiZVU2TU1FTFV6Z0YzMFhxVnAwVmxBU1EzIn0.jQ3HZ8jb7RAwV9chP3QU-_uzKJs4dh7IrPRrU3chds0x0Ltd4uCYChMcYJuFpM8M7EUyaFN1LL3Tf4aSCibePz02lTRG3qNCtz5Cv4inOhtjqnWTONIf2TrZo1MkUP7oJtQzwTCEeNrp6zLGzq8jgpP-uBU4N9ZAPds8N6JpCjmsVy0wLqOkXJueCuGAHlzshdJ3QWs3c73xb1Lz-Th8cLEDBevvusb_9kXbScW2SNuuGKR03aQyBXplamcOTATdvZVpS0hGv25eH4gqz6wtqEeoCBF_5Y90R-bhmKk-lh-G4L3-VFoAfelHkxLfWEDUAsTNNjqz1US-A-BZfI9ebQ&quot;\n}\n</code></pre></div>",
        "id": 209690972,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599763395
    },
    {
        "content": "<p>We don't support launch/patient yet. Right now (for connectathon) this is basically a user-facing standalone launch, though the scopes are prefixed with patient. Working on getting an actual patient-facing standalone launch set up for this, in which case you'd get the patient ID along with the access token.</p>",
        "id": 209692870,
        "sender_full_name": "Jake Fisher",
        "timestamp": 1599764263
    },
    {
        "content": "<p>OK, that'll be really helpful when patient launch is in place (it's basically what we designed our scenarios around).</p>",
        "id": 209694367,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599764843
    },
    {
        "content": "<p>Ok these clients will now use true patient-facing standalone launch. Please try again. I've put the patient portal login information in the spreadsheet.</p>",
        "id": 209696145,
        "sender_full_name": "Jake Fisher",
        "timestamp": 1599765717
    },
    {
        "content": "<p>Awesome!</p>",
        "id": 209696342,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599765805
    },
    {
        "content": "<p>I've got the end-to-end test running now. Thanks <span class=\"user-mention\" data-user-id=\"279701\">@Jake Fisher</span> !</p>",
        "id": 209696487,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599765856
    },
    {
        "content": "<p>Whoops realized just now that the Connectathon2020AllObservations client wasn't actually allowed to search Observation?category=vital-signs (it was allowed to read them and to search other observation categories). That's updated now.</p>",
        "id": 209708360,
        "sender_full_name": "Jake Fisher",
        "timestamp": 1599771591
    },
    {
        "content": "<p>Wow Jake, that's a nice &amp; scary auth screen :)</p>",
        "id": 209714080,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1599774626
    },
    {
        "content": "<p>Nice – same here, end-to-end tested!<br>\nI tried <code>Observation?patient=eH8RPbKOmYpNJoL9ha.Uq9A3</code> and that gave an operation outcome with \"required parameter missing\" or similar<br>\nAnd I tried <code>Observation?patient=eH8RPbKOmYpNJoL9ha.Uq9A3&amp;category=vital-signs</code> and that gave me a bundle of vitals<br>\nAnd I tried <code>Observation?patient=eH8RPbKOmYpNJoL9ha.Uq9A3&amp;category=laboratory</code> and that gave me an empty bundle</p>",
        "id": 209714714,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1599774986
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191339\">@Pascal Pfiffner</span>  yep - though it doesn't look as scary if developers fill out a data use questionnaire which is shown to patients instead. I didn't do that for these connectathon clients. :)</p>",
        "id": 209715074,
        "sender_full_name": "Jake Fisher",
        "timestamp": 1599775202
    },
    {
        "content": "<p>Yeah that's what I assumed; but I like it, it should be scary!</p>",
        "id": 209715158,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1599775236
    },
    {
        "content": "<p>I'm getting an <code>invalid_request</code> when I try and hit the token endpoint using:</p>\n<div class=\"codehilite\"><pre><span></span><code>curl -i &quot;https://connectathon.epic.com/Interconnect-Fhir-OAuth/oauth2/token&quot; -H &quot;Content-Type: application/x-www-form-urlencoded&quot; -H &quot;Accept: application/json&quot; --data &quot;code=sYChMYd9WlCxjmYaV60IW48W1vR69_g3KIcA8XIcuHGofzhVTtJbvfeik60ApbcfQvl8mVzm7J9wsltZ2hG_NA8ia2F2RQ4DFYuPF4j2Cbn5iRj0GpraskxGoWZ1xKKH&amp;grant_type=authorization_code&amp;redirect_uri=http://localhost:8000/index.html&quot;\n</code></pre></div>\n\n\n<p>Any ideas what I am missing here?</p>",
        "id": 209777032,
        "sender_full_name": "Keith Carlson",
        "timestamp": 1599829191
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"308473\">@Keith Carlson</span>  How did you get that auth code? Those are one time use and only valid for a short amount of time (a few minutes).</p>",
        "id": 209784978,
        "sender_full_name": "Jake Fisher",
        "timestamp": 1599833331
    },
    {
        "content": "<p>I got the auth code by using <code>https://connectathon.epic.com/Interconnect-Fhir-OAuth/oauth2/authorize?client_id=Connectathon2020AllObservations&amp;scope=launch/patient&amp;response_type=code&amp;redirect_uri=http://localhost:8000/index.html</code> and grabbing it from the uri</p>\n<p>And yeah I figured it was short lived, when I was trying to exchange the code for the token I was doing that within a few minutes and still running into the <code>invalid_request</code></p>",
        "id": 209785456,
        "sender_full_name": "Keith Carlson",
        "timestamp": 1599833604
    },
    {
        "content": "<p>Ok thought it was worth a check. I'll take a look.</p>",
        "id": 209785631,
        "sender_full_name": "Jake Fisher",
        "timestamp": 1599833683
    },
    {
        "content": "<p>Okay, thanks. The curl command I was using looks good to you? Not sure if I'm missing something small there. It seems like other people are able to connect</p>",
        "id": 209785865,
        "sender_full_name": "Keith Carlson",
        "timestamp": 1599833797
    },
    {
        "content": "<p>Ah - you need to pass the client_id in the body. I just added that to my CURL request and it's working.</p>\n<p><code>curl -i \"https://connectathon.epic.com/Interconnect-Fhir-OAuth/oauth2/token\" -H \"Content-Type: application/x-www-form-urlencoded\" -H \"Accept: application/json\" --data \"code=sYChMYd9WlCxjmYaV60IW48W1vR69_g3KIcA8XIcuHGofzhVTtJbvfeik60ApbcfQvl8mVzm7J9wsltZ2hG_NA8ia2F2RQ4DFYuPF4j2Cbn5iRj0GpraskxGoWZ1xKKH&amp;grant_type=authorization_code&amp;redirect_uri=http://localhost:8000/index.html&amp;client_id=Connectathon2020AllObservations\"</code></p>\n<p>(Added  <code>&amp;client_id=Connectathon2020AllObservations</code>)</p>",
        "id": 209788055,
        "sender_full_name": "Jake Fisher",
        "timestamp": 1599834741
    },
    {
        "content": "<p>Great! Thank you :)</p>",
        "id": 209789649,
        "sender_full_name": "Keith Carlson",
        "timestamp": 1599835546
    }
]