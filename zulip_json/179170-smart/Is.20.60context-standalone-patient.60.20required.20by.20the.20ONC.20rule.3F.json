[
    {
        "content": "<p><code>context-standalone-patient</code> and <code>context-standalone-encounter</code> are two <a href=\"http://www.hl7.org/fhir/smart-app-launch/conformance/index.html#launch-context\" target=\"_blank\" title=\"http://www.hl7.org/fhir/smart-app-launch/conformance/index.html#launch-context\">SMART capabilities</a>, included in the \"core capabilities\", but (I think) not widely implemented. They effectively require a SMART server to present a patient/encounter chooser during the launch process, before redirecting to the SMART app. Does the ONC rule require support for these capabilities? </p>\n<blockquote>\n<p>Given the importance of these “SMART on FHIR Core Capabilities,” and in consideration of public comments and our own research, we have adopted the SMART IG, including mandatory support for the “SMART on FHIR Core Capabilities” in § 170.215(a)(3). <br>\npg 383</p>\n</blockquote>\n<p>That's a yes, right?</p>",
        "id": 190140726,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1583812816
    },
    {
        "content": "<p>Yes -- and I think re: <code>context-standalone-patient</code>, basically every patient-facing SMART API does this today (often rather than a patient picker, it's just \"here's your account\").</p>\n<p>Re <code>context-standalone-encounter</code>, I haven't seen this implemented in the wild</p>",
        "id": 190185252,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1583853778
    },
    {
        "content": "<p>I'm puzzled that ONC would require support for <em>all</em> capabilities including the experimental <code>smart_style_url</code>.</p>",
        "id": 190185474,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1583853899
    },
    {
        "content": "<p>Our <a href=\"https://smarthealthit.org/category/blog/\" target=\"_blank\" title=\"https://smarthealthit.org/category/blog/\">recommendations</a> were more focused (sso-openid-connect, launch-standalone, launch-ehr, client-public, client-confidential-symmetric, context-ehr-patient, context-standalone-patient, permission-patient, permission-user, permission-offline)</p>",
        "id": 190185566,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1583853950
    },
    {
        "content": "<p>Further, note that the CMS rule just picks up the ONC rule's language on SMART, so, for payers, core capabilities support is mandated beginning Jan 1, 2021. Do any of the \"off the shelf\" SMART servers support all of this?</p>",
        "id": 193043024,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1586180574
    },
    {
        "content": "<p>Not that I've seen (but this kind of functionality is implemented in the SMART Launcher as a reference)</p>",
        "id": 193043964,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1586181026
    },
    {
        "content": "<p>I'm not entirely clear on whether the core capabilities apply to payers (I'm not saying they don't, but I couldn't quite connect the dots) -- though in any case, supporting most of this is clearly in scope.</p>",
        "id": 193044066,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1586181068
    },
    {
        "content": "<p><a href=\"https://www.cms.gov/files/document/cms-9115-f.pdf\" title=\"https://www.cms.gov/files/document/cms-9115-f.pdf\">Page 135</a>: </p>\n<blockquote>\n<p>“We are finalizing as proposed to require compliance with 45 CFR 170.215 as finalized by HHS in the ONC 21st Century Cures Act final rule (published elsewhere in this issue of the Federal Register). This requires use of HL7 FHIR Release 4.0.1, and complementary security and app registration protocols, specifically the SMART Application Launch Implementation Guide (SMART IG) 1.0.0 (<em>including mandatory support for the “SMART on FHIR Core Capabilities”</em>), which is a profile of the OAuth 2.0 specification, and the OpenID Connect Core 1.0 standard”</p>\n</blockquote>",
        "id": 193044404,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1586181234
    },
    {
        "content": "<p>Thanks! That is exactly the thing I wanted, and I'd forgotten it or hadn't found it.</p>",
        "id": 193045198,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1586181559
    },
    {
        "content": "<p>Can anyone speak to the support of <code>context-banner</code>, <code>context-style</code>, <code>context-standalone-patient</code>, and <code>context-standalone-encounter</code> in off-the-shelf SMART servers, like Vonk, HAPI, Aidbox, WildFHIR, CareEvolution, others?</p>",
        "id": 193598136,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1586541337
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> - I'm consistently impressed with your encyclopedic knowledge, do you have a sense of this?</p>",
        "id": 193598138,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1586541340
    },
    {
        "content": "<p>ah! not really - do not know about those off-the-shelf ones. Our server supports <code>context-banner</code> and <code>context-standalone-patient</code> and not the other ones. All US EHR server I know  of  (and that support SMART) support<code>context-standalone-patient</code>, don't think they support <code>context-standalone-encounter</code> and don't know about style or banner.</p>",
        "id": 193600371,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1586542544
    },
    {
        "content": "<p>(our server is not very much off-the-shelf, it runs only on top of our HIEBus HIE / data aggregation system)</p>",
        "id": 193600480,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1586542608
    },
    {
        "content": "<p>Just for clarity, the ONC requires the standalone encounter and patient selection now for both provider and patient. I know many supported at least patient selection for patient, but maybe not provider</p>",
        "id": 193603335,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1586544299
    },
    {
        "content": "<p>Jenni - exactly. Michele, if you don't mind sharing, does your SMART server support <code>context-standalone-patient</code> for provider apps?</p>",
        "id": 193603736,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1586544516
    },
    {
        "content": "<p>Sorry, forgot to specify: we support <code>context-standalone-patient</code> only for patient apps, not for providers (we do _not_ have a patient selector when you launch a stand-alone app with a user that is not a patient)</p>",
        "id": 193605795,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1586545607
    },
    {
        "content": "<p>Should HL7 create an \"Additional (not core) capabilities\" section in the SMART spec to accurately describe <code>context-standalone-patient</code>,  <code>context-standalone-encounter</code>, <code>context-style</code> and <code>context-banner</code> and remove these capabilities from the list of core capabilities? Part of the problem here is that the naming of \"Core Capabilities\" was inaccurate, really, it's a full list of all capabilities in the specification.</p>",
        "id": 194038998,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1586960969
    },
    {
        "content": "<p>I wouldn't mind labeling capabilities with a maturity of some kind -- though <em>context-standalone-patient</em> is more definitely Core. That's how basically every consumer app works, isn't it?</p>",
        "id": 194217390,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1586979824
    },
    {
        "content": "<p>(Similarly, <code>context-banner</code> has been around since the beginning and is, I thought, widely supported)</p>",
        "id": 194217486,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1586979854
    },
    {
        "content": "<p>Agree re: <code>context-standalone-encounter</code> and <code>context-style</code>.</p>",
        "id": 194217514,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1586979870
    },
    {
        "content": "<p>Hey Josh, <code>context-standalone-patient</code> (seems to) have no implementations for provider-facing apps ... but agree that it's a mature (and even <em>core</em> capability!) for patient apps. How about clarifying that it's a patient-facing app capability?</p>",
        "id": 194232122,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1586987254
    },
    {
        "content": "<p>in a similar vein, we should clarify that patient-banner only applies to EHR launchs.</p>",
        "id": 194232203,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1586987295
    },
    {
        "content": "<p>I don't think the core capability was intended to be just patient facing for the standalone patient (or encounter) workflows, and they definitely make sense for both. They may just have more \"proof\" for the patient workflow today</p>",
        "id": 194232713,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1586987622
    },
    {
        "content": "<p>There are definitely differences in the way the patient selection list is presented to both users, but that's \"outside the spec\" <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 194232836,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1586987678
    },
    {
        "content": "<p>Intended by whom? </p>\n<p>The HL7, technical, specification should actually describe capabilities that are <em>core</em> in its core capabilities, right?  </p>\n<p>Isnt is objectively reasonable for context-standalone-patient to not be in this list for provider apps and context-standalone-encounter for either?</p>",
        "id": 194509044,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1587163493
    },
    {
        "content": "<p>Since 'core' isn't defined in the technical specification and is sufficiently vague, it is hard to justify removing any of the capabilities from the list based on the meaning of the term 'core'.  Core Capabilities is defined simply by the values it contains.  I personally do think it is confusing, and would advocate removing 'core' until there is the need for such a concept.  But since the ONC rule now uses that term it would probably be hard to remove.</p>",
        "id": 194717471,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1587408621
    },
    {
        "content": "<p>I think the most unusual 'core capability' is <code>context-style</code>, because it is marked as <code>experimental</code>, doesn't have wide adoption, and probably isn't useful in a standalone use case.  Fortunately it doesn't seem hard for servers to implement in a minimal sense if required.</p>",
        "id": 194718301,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1587409080
    },
    {
        "content": "<p>Would there be interest in having a small track on the upcoming online FHIR Connectathon, to gain visibility on<br>\na) which SMART features have been implemented <br>\nb) is there a need to evolve the specification on things like styles?</p>",
        "id": 195210198,
        "sender_full_name": "Mikael Rinnetmäki",
        "timestamp": 1587744563
    },
    {
        "content": "<p>I could volunteer to get my feet wet in Connectathon activity and host the track, if there is indication of interest in participation. Especially from systems vendors.</p>",
        "id": 195210402,
        "sender_full_name": "Mikael Rinnetmäki",
        "timestamp": 1587744646
    }
]