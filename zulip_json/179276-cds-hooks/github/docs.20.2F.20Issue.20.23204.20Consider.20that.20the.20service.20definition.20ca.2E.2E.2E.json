[
    {
        "content": "<p>olbrich opened <a href=\"https://github.com/cds-hooks/docs/issues/204\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204\">Issue #204</a></p>\n<blockquote>\n<p>We have a use case where some aspects of a service may change over time.  In particular the <code>prefetch</code> may be updated as new guidance becomes available.  Consumers of this service would need to update their cache of the service definition before invoking the service to ensure they are providing the proper data.</p>\n<p>One possible approach to this would be for the EHR to cache the <code>/cds-services</code> endpoint with ETags and  and then try to reload it on every invocation of the hook.</p>\n</blockquote>",
        "id": 153958849,
        "sender_full_name": "Github Notifications",
        "timestamp": 1526158298
    },
    {
        "content": "<p>robs16 <a href=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388803337\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388803337\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/204\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204\">Issue #204</a></p>\n<blockquote>\n<p>Is this a change that needs to apply immediately? I would guess many implementations might look at the service definition during dev, but not actively at run-time, so it might be difficult for them to handle. Like you, our prefetch will change over time, but we assume the caller is not dynamic and their dev lifecycle does not match ours.</p>\n</blockquote>",
        "id": 153960344,
        "sender_full_name": "Github Notifications",
        "timestamp": 1526301835
    },
    {
        "content": "<p>olbrich <a href=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388807969\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388807969\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/204\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204\">Issue #204</a></p>\n<blockquote>\n<p>In our case we ship content updates a couple of times a week and we would prefer that our customers got that change immediately.  It's also possible that changes to the rules may exclude or include patients that are in fact not eligible for our service.</p>\n<p>One possible way to do this is to do a GET against the service definition before invoking the service and using ETags or other HTTP caching mechanisms to keep the overhead low.</p>\n</blockquote>",
        "id": 153960378,
        "sender_full_name": "Github Notifications",
        "timestamp": 1526302849
    },
    {
        "content": "<p>robs16 <a href=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388816052\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388816052\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/204\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204\">Issue #204</a></p>\n<blockquote>\n<p>I'm still having trouble understanding the need for the change in prefetch definition. Am I correct in assuming you need all data provided in the prefetch, because the service will not auto-query it from the FHIR server where it is not provided? Does the prefetch supply a set of patient identifiers or characteristic? What is the workflow that drives this hook?</p>\n<p>The Stanson CDS content may change hourly but has nothing to do with hooks per-se. The interface doesn't change, just the CDS rules that use that content. If a patient is not eligible, that is actually part of the CDS rules, not something that would impact the prefetch.</p>\n</blockquote>",
        "id": 153960379,
        "sender_full_name": "Github Notifications",
        "timestamp": 1526304474
    },
    {
        "content": "<p>olbrich <a href=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388819874\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388819874\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/204\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204\">Issue #204</a></p>\n<blockquote>\n<p>@robs16 in our case we are using the prefetch to check and see if the patient has a Condition that matches a list of code systems and codes.  These codes can change over time (usually on the order of every few days at most), but we wouldn't want to have false positives (or worse false negatives).  We only return a card and do additional processing if the patient is eligible.  We could theoretically skip the prefetch completely, but then we would have to run a fairly complicated set of queries for each patient, every time the chart is viewed.</p>\n</blockquote>",
        "id": 153960383,
        "sender_full_name": "Github Notifications",
        "timestamp": 1526305178
    },
    {
        "content": "<p>robs16 <a href=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388826024\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388826024\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/204\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204\">Issue #204</a></p>\n<blockquote>\n<p>ok - that does explain it. The Stanson CDS tends to look at such data but queries large swaths, so we are currently not subject to the same issue. In this case it is not the resource types or entirely new prefetch fields that are changing, but the search criteria for a standard prefetch field/resource type. I do see the need for this type of capability in order to limit the scope of the data which the service needs. I wonder if this gets rather dicy when dealing with different code systems and large sets of codes (we have some similar uses that may hit 1000 codes between various code systems - especially where the EMR augments existing terminology). In any case, to support this type of functionality it would be better to have a flag or similar associated with the particular prefetch field which tells the calling EMR to re-reference the definition before pulling the prefetch data. I would guess most prefetch fields do not need this for most hooks, and checking it each time would be a latency issue if this functionality is not needed.</p>\n</blockquote>",
        "id": 153960401,
        "sender_full_name": "Github Notifications",
        "timestamp": 1526306257
    },
    {
        "content": "<p>olbrich <a href=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388829790\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388829790\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/204\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204\">Issue #204</a></p>\n<blockquote>\n<p>@robs16 I'm ok with having to flag my service as needing a refresh before use.  FYI, we also run into issues where the length of the query (because there are so many codes) can exceed some limit (at least in the sandbox), which results in the prefetch failing.  We've actually had to break up our prefetch into several sub keys and then iterate through them looking for one that matched.  The chunks we break it down into could also change.</p>\n<p>I'd love to hear feedback from an EHR vendor about how they would address this problem when implementing a hook.</p>\n</blockquote>",
        "id": 153960435,
        "sender_full_name": "Github Notifications",
        "timestamp": 1526306885
    },
    {
        "content": "<p>jmandel <a href=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388831694\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388831694\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/204\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204\">Issue #204</a></p>\n<blockquote>\n<p>That's interesting -- it'd be good to understand where it's breaking down, at least. HTTP doesn't specify a limit, but many clients and servers do have limits (e.g. <a href=\"https://stackoverflow.com/questions/417142/what-is-the-maximum-length-of-a-url-in-different-browsers\" target=\"_blank\" title=\"https://stackoverflow.com/questions/417142/what-is-the-maximum-length-of-a-url-in-different-browsers\">https://stackoverflow.com/questions/417142/what-is-the-maximum-length-of-a-url-in-different-browsers</a> is a good overview). That said: this issue wouldn't be unique to CDS Hooks; it'd apply to any FHIR client (or possibly: any browser-based FHIR client). </p>\n<p>The \"right solution\" is to support valuesets, and to search by valueset -- but honestly, the chunking scheme you've come up with might scale OK for this, if it's an unusual case.</p>\n</blockquote>",
        "id": 153960436,
        "sender_full_name": "Github Notifications",
        "timestamp": 1526307209
    },
    {
        "content": "<p>kpshek <a href=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388832810\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388832810\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/204\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204\">Issue #204</a></p>\n<blockquote>\n<p>@jmandel - The Sandbox error @olbrich mentioned was actually the HSPC FHIR server erroring out on the very large prefetch request that was attempted.</p>\n</blockquote>",
        "id": 153960437,
        "sender_full_name": "Github Notifications",
        "timestamp": 1526307392
    },
    {
        "content": "<p>jmandel <a href=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388834918\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388834918\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/204\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204\">Issue #204</a></p>\n<blockquote>\n<p>OK -- and is the error due to total query length, or something about the semantics of this particular query?</p>\n</blockquote>",
        "id": 153960441,
        "sender_full_name": "Github Notifications",
        "timestamp": 1526307766
    },
    {
        "content": "<p>olbrich <a href=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388834987\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388834987\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/204\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204\">Issue #204</a></p>\n<blockquote>\n<p>@kpshek I think that's true, not sure if the sandbox does POSTs for searches or not.</p>\n<p>@jmandel I'll investigate the valueset searching, that might work for us.</p>\n</blockquote>",
        "id": 153960442,
        "sender_full_name": "Github Notifications",
        "timestamp": 1526307779
    },
    {
        "content": "<p>kpshek <a href=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388835296\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388835296\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/204\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204\">Issue #204</a></p>\n<blockquote>\n<blockquote>\n<p>OK -- and is the error due to total query length, or something about the semantics of this particular query?</p>\n</blockquote>\n<p>Not sure what the root cause was (I saw the error over @olbrich's shoulder while at the Connectathon).</p>\n</blockquote>",
        "id": 153960443,
        "sender_full_name": "Github Notifications",
        "timestamp": 1526307828
    },
    {
        "content": "<p>olbrich <a href=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388835311\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388835311\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/204\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204\">Issue #204</a></p>\n<blockquote>\n<p>@jmandel if I take the query and break it into smaller parts, it works fine.  I think this is a length limit somewhere in the prefetch logic.</p>\n</blockquote>",
        "id": 153960444,
        "sender_full_name": "Github Notifications",
        "timestamp": 1526307830
    },
    {
        "content": "<p>olbrich <a href=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388836123\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388836123\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/204\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204\">Issue #204</a></p>\n<blockquote>\n<p>See <a href=\"https://github.com/cds-hooks/sandbox/issues/47\" target=\"_blank\" title=\"https://github.com/cds-hooks/sandbox/issues/47\">https://github.com/cds-hooks/sandbox/issues/47</a> for the length limit problem in the sandbox.</p>\n</blockquote>",
        "id": 153960445,
        "sender_full_name": "Github Notifications",
        "timestamp": 1526307961
    },
    {
        "content": "<p>jmandel <a href=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388837341\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388837341\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/204\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204\">Issue #204</a></p>\n<blockquote>\n<p>I wouldn't rely on valuesets, because most FHIR servers won't support allowing a client to create its own valuesets. (Sorry for the confusions -- that's why I put \"right solution\" in quotes.)</p>\n</blockquote>",
        "id": 153960447,
        "sender_full_name": "Github Notifications",
        "timestamp": 1526308159
    },
    {
        "content": "<p>kpshek <a href=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388852870\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204#issuecomment-388852870\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/204\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/204\">Issue #204</a></p>\n<blockquote>\n<blockquote>\n<p>I'd love to hear feedback from an EHR vendor about how they would address this problem when implementing a hook.</p>\n</blockquote>\n<p>To add more problems here, one that hasn't been discussed is that if the prefetch templates change in a material way, or if new prefetch templates are added that request additional data types. Part of the undefined, assumed pre-negotiated setup between the EHR and CDS Service is to ensure that the CDS Service is authorized to access the prefetch data they request. So, changing the prefetch templates potentially affect this such that prefetch updates may not be able to be automatically honored by the EHR.</p>\n<p>Our EHR is not going to support many prefetch templates (at least initially). Given the problems with dynamic prefetch templates being discussed here, I don't see these being applied/recognized without some manual oversight.</p>\n<p>As an aside, an analog exists with SMART apps and the scopes they request from the authorization server. In my EHR, if a SMART app requests additional scopes from the AS (in a provider setting), the healthcare organization must be involved (manually) to grant these additional scopes -- they are not authorization \"on the fly\".</p>\n</blockquote>",
        "id": 153960462,
        "sender_full_name": "Github Notifications",
        "timestamp": 1526310696
    }
]