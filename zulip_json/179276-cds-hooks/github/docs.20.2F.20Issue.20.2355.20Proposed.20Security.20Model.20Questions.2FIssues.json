[
    {
        "content": "<p>robs16 opened <a href=\"https://github.com/cds-hooks/docs/issues/55\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/55\">Issue #55</a></p>\n<blockquote>\n<p>Reposting from Zulip to gather feedback:</p>\n<p>In looking over the proposed security model I have a few questions that are somewhat inter-related:</p>\n<p>1. I may be missing something in the documentation on SMART and in the proposed security model, but I do not understand how the app pointed at by link.url authenticates to the CDS service. There is no requirement that they are the same, yet the app will generally need to access the CDS service (probably more often than the FHIR service) and will need to reference the session created by the request that provided the link.url. This applies equally to the non-SMART app. I am assuming that authentication would need to be part of the URL?</p>\n<p>2. How will the analytics endpoints be authenticated by the service? How will the service know which hookInstance an analytics request is about?</p>\n<p>3. Depending on the answers from 1 and 2, both link.url and the analytic endpoints have a fixed string which may contain authentication credentials. To maintain security, these must have a timeout and may be one-time in nature. How do we inform the EMR of this? I mean there is nothing that says that a displayed card needs to be acted on within an hour, a day, a week, month, etc.</p>\n<p>4. Proposed JWT aud. What does this refer to? The specific endpoint, a prefix to it, or a token request endpoint? ie: '<a href=\"https://example.com/cds-services\" target=\"_blank\" title=\"https://example.com/cds-services\">https://example.com/cds-services</a>', '<a href=\"https://example.com/cds-services/medication-echo\" target=\"_blank\" title=\"https://example.com/cds-services/medication-echo\">https://example.com/cds-services/medication-echo</a>', '<a href=\"https://example.com/cds-services/medication-echo/analytics/C919155B-2138-4177-A316-524CB48B4EC9\" target=\"_blank\" title=\"https://example.com/cds-services/medication-echo/analytics/C919155B-2138-4177-A316-524CB48B4EC9\">https://example.com/cds-services/medication-echo/analytics/C919155B-2138-4177-A316-524CB48B4EC9</a>', '<a href=\"https://example.com/token\" target=\"_blank\" title=\"https://example.com/token\">https://example.com/token</a>'</p>\n<p>5. The JWT issuer is based on the associated FHIR server. I think there is an implicit assumption that this issuer will contain the client/practice for cloud EHR providers. I am unsure if this solves all of the nuances of working with a cloud EHR vs a single EHR. Are there cases where an EHR and a FHIR server are not 1 to 1?</p>\n</blockquote>",
        "id": 153896730,
        "sender_full_name": "Github Notifications",
        "timestamp": 1499869447
    },
    {
        "content": "<p>kpshek labeled <a href=\"https://github.com/cds-hooks/docs/issues/55\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/55\">Issue #55</a></p>",
        "id": 153896893,
        "sender_full_name": "Github Notifications",
        "timestamp": 1499997742
    },
    {
        "content": "<p>kpshek assigned <a href=\"https://github.com/cds-hooks/docs/issues/55\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/55\">Issue #55</a></p>",
        "id": 153896894,
        "sender_full_name": "Github Notifications",
        "timestamp": 1499997743
    },
    {
        "content": "<p>kpshek <a href=\"https://github.com/cds-hooks/docs/issues/55#issuecomment-315259802\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/55#issuecomment-315259802\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/55\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/55\">Issue #55</a></p>\n<blockquote>\n<p>Thanks for the thoughtful question, @robs16.</p>\n<p><strong>1. How do the CDS Service and app represented in resultant CDS cards (<code>link.url</code>) share state if owned by the CDS Service provider?</strong></p>\n<p>On our Argonaut call today we talked about some options, one of which was someone (maybe you?) was working with a system in which the SMART app launch URL could take an arbitrary parameter. This value of this parameter could be a <code>hookInstance</code>.</p>\n<p>I have to think through this a bit more but my initial thought is that if we were to explore something like the aforementioned strategy this would be best addressed as a core change to the SMART specification and that we would leverage that here in CDS Hooks. However, I'd like to mull and ponder over this further to see if we can uncover additional options that leverage existing capabilities today.</p>\n<p><strong>2. Analytics endpoint authentication</strong></p>\n<p>To be honest, I haven't put much thought into our analytics endpoint. We created it after great discussion in the January 2016 Connectathon but I haven't seen much implementation on create use cases. I would like to exclude analytics from our 1.0 release and if we reach consensus on this, we can incorporate it into a future release at which point we can think through it more holistically (including how security is incorporated).</p>\n<p><strong>3. Security of link.url and analytics endpoints</strong></p>\n<p>If the CDS Service wants <code>link.url</code> to point to a time bounded page, it will need to construct a URL that either contains an identifier pointing to private server state that indicates the expiry time OR containers an encrypted value that contains the expiry time. If the link should be a view once only URL, this will need to be tracked server-side by the web app being the <code>link.url</code>. In both cases these seem like concerns of the CDS Service provider and not something that would require a specification/API change. I do think we'll have implementation guides for developers and information like this can be incorporated in that if we think this is a use case that other developers would benefit from guidance on.</p>\n<p>I'll defer my analytics endpoint thoughts based upon my answer above.</p>\n<p><strong>4. aud value</strong></p>\n<p>This would be the fully qualified URL to the <a href=\"https://github.com/cds-hooks/api/blob/master/cds-hooks.yaml#L30\" target=\"_blank\" title=\"https://github.com/cds-hooks/api/blob/master/cds-hooks.yaml#L30\">CDS Service endpoint</a>. In our documentation, we refer to this as <code>{baseUrl}/cds-services/{id}</code></p>\n<p><strong>5. iss value</strong></p>\n<p>Is your concern articulated by this issue in SMART?: smart-on-fhir/smart-on-fhir.github.io#133</p>\n</blockquote>",
        "id": 153896896,
        "sender_full_name": "Github Notifications",
        "timestamp": 1500002667
    },
    {
        "content": "<p>robs16 <a href=\"https://github.com/cds-hooks/docs/issues/55#issuecomment-315375321\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/55#issuecomment-315375321\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/55\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/55\">Issue #55</a></p>\n<blockquote>\n<p>This discussion brings up a broader issue: The temporal aspect of the response needs to be well thought out. To my understanding there are no rules and no documentation which states that the result of the CDS request is valid for a limited amount of time. Depending on the EHR workflow and where the CDS request is executed, it may not be unusual for the card to take some time (hours) before it is utilized. However, taken to an extreme, the cards and all contained data could be expected to be valid literally forever.  This is also compounded by the re-triggering functionality to obtain the current state.</p>\n<p>For the CDS Service this means it must maintain hook instance state for an unlimited amount of time. It also negatively impacts the security of the resulting integration (items 1 and 3).</p>\n<p>I don't think this is the intention, so there needs to be documentation which defines theses constraints and/or provides them within the API. As a solution, I propose that per card or perhaps at the response level there is a required field which defines the expiration time of the contained data. It might be also useful/necessary to have the EHR define in the request how long they need the CDS service to maintain state for the provided hookInstance.</p>\n<p><strong>1. How do the CDS Service and app represented in resultant CDS cards (link.url) share state if owned by the CDS Service provider?</strong><br>\nWe have given some thought to transferring the hook instance in the URL. The issue with this is that the hook instance is then treated as an actual bearer credential, which is reasonably secure only if it is both random and expires rather quickly. </p>\n<p>Also of note is that links don't have to lead to a SMART App, but may indeed have the same need for credentials or expiration. Ideally any solution covers both SMART and !SMART Apps.</p>\n<p><strong>2. Analytics endpoint authentication</strong><br>\nI would like to see the analytics endpoint kept in the 1.0 proposal as it serves as a primary way for the CDS Service to determine which suggestions were followed. I didn't realize there was any plan to remove it. I would propose as a solution to my questions the following: Use the same authentication/authorization mechanism for the CDS endpoints on calls to the analytic endpoints (JWT). Rather than include the UUID in the URL, include the hook instance and UUID in the POST body.</p>\n<p><strong>3. Security of link.url and analytics endpoints</strong><br>\nThey are actually a concern for both the EHR and CDS Service because navigating to an expired link will probably result in a 4xx error and will only serve to negatively impact the clinician's time (as well as their view of the CDS service and/or EHR). Ideally the EHR knows if a link has 'expired', so the hook instance can be re-triggered to get valid links before such navigation. </p>\n<p>I see this as an API issue because without a mechanism to define how long the response/card/link is valid, each integration must be customized between the service provider and EHR vendor. </p>\n<p><strong>4. aud value</strong><br>\nOk.  So this implies that the discovery endpoint should not be secured, correct?</p>\n<p><strong>5. iss value</strong><br>\nTo some degree, yes. It drives to clarify the entity asking for the service and considers FHIR server base urls with multiple tenants. It indicates that the answer to my question is 'yes'. However no conclusion appears to be reached. So, it needs to be concluded and the resulting solution applied to the JWT provided to the CDS Service.</p>\n</blockquote>",
        "id": 153896946,
        "sender_full_name": "Github Notifications",
        "timestamp": 1500042868
    },
    {
        "content": "<p>robs16 <a href=\"https://github.com/cds-hooks/docs/issues/55#issuecomment-321785691\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/55#issuecomment-321785691\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/55\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/55\">Issue #55</a></p>\n<blockquote>\n<p>So based on the security updates and comments on the call:<br>\n2. solved (will have a JWT sent), <br>\n4.  solved (aud will be the oauth client id, discovery endpoint will be secured)<br>\n5. Really is not going to be solved - tenancy will be custom</p>\n<p>Any thoughts on the temporal aspects, 1 and 3 @kpshek ?</p>\n</blockquote>",
        "id": 153902120,
        "sender_full_name": "Github Notifications",
        "timestamp": 1502449859
    },
    {
        "content": "<p>brettmarquard labeled <a href=\"https://github.com/cds-hooks/docs/issues/55\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/55\">Issue #55</a></p>",
        "id": 153915039,
        "sender_full_name": "Github Notifications",
        "timestamp": 1508496216
    }
]