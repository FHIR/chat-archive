[
    {
        "content": "<p>stefan-evinance opened <a href=\"https://github.com/cds-hooks/docs/issues/102\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/102\">Issue #102</a></p>\n<blockquote>\n<p>There are two parts to the question of sending CDS decisions to an EHR: communicating to web-based EHR that decisions are available &amp; sending the actual FHIR resources.  </p>\n<p>1. notifying EHR that interaction is complete<br>\n- redirect: this is the current implementation. Pro: it's very simple to implement. Against: doesn't cover use cases which require the CDS Service page to remain open while decision is communicated.  <br>\n- JavaScript Window.postMessage(): this was a proposal circulating in the CDSHooks group before (not sure if it's still considered). Pro: CDS Service page can remain open. Against: CDS Service needs to know about parent web page origin, thus hard to integrate. I don't support this approach.  <br>\n- HTTP POST to EHR endpoint provided in initiating CDSHooks call: this will be the best approach from our point of view, resources are not send with this notification (may not be available). Pro: fully transparent to the user, generic &amp; easy to implement. Against: request must be send by CDS Service backend, if attempting to send request from JavaScript will result CORS issues and CORS configuration can be very tricky for EHR working with multiple CDS Services.  </p>\n<p>2. sending FHIR resources back to EHR<br>\n- Second POST to CDSHooks Service: this is the current implementation, we do not agree with this approach.<br>\n- POST to FHIR server: this is what we do with some EHRs. Pro: infrastructure exists; Against: can't notify EHR that resources were posted, EHR may not want the resources to be automatically stored in FHIR server without user interaction.  <br>\n- POST to another EHR endpoint defined in CDSHooks call: Pro: gives EHR control on handling CDS Service resources. Against: Opens Pandora's box on authentication with EHR.</p>\n<p>If you are considering a single EHR endpoint to replace both the current redirect &amp; the current second POST, I don't think it is a good idea for 3 reasons:<br>\n1) Sending resources to EHR requires authentication. We already have FHIR authentication, may be we can just POST to the FHIR server (as we currently do with some EHRs).<br>\n2) Resources may not be immediately available upon completing the CDS Service interaction. That's why we need two communication mechanisms (previously: redirect+POST, now: POST+POST).  <br>\n3) Some open CORS may be acceptable (for example: simple notification POST from JavaScript to EHR with no data) but if we are dealing with resources then configuring CORS correctly is much more important (and difficult).</p>\n</blockquote>",
        "id": 153912797,
        "sender_full_name": "Github Notifications",
        "timestamp": 1507243771
    },
    {
        "content": "<p>isaacvetter <a href=\"https://github.com/cds-hooks/docs/issues/102#issuecomment-334820799\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/102#issuecomment-334820799\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/102\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/102\">Issue #102</a></p>\n<blockquote>\n<p>Hey stefan-evinance,</p>\n<p>Another advantage to web messaging is that it significantly simplifies the need to open firewalls. It's not always clear that a cds service will be able to access a FHIR server, let alone the non-FHIR CDS Hooks endpoints that you're creating, above. For example, see #82.  </p>\n<p>Further, the \"in-memory\" content that a cds service is interested in providing guidance on in the user's workflow typically aren't yet committed to the database from which FHIR resources are served.</p>\n<p>Can you provide additional, compelling points to back up your stated preferences?</p>\n<blockquote>\n<p>Against: CDS Service needs to know about parent web page origin, thus hard to integrate. I don't support this approach.</p>\n<p>Second POST to CDSHooks Service: this is the current implementation, we do not agree with this approach.</p>\n</blockquote>\n<p>Isaac</p>\n</blockquote>",
        "id": 153912854,
        "sender_full_name": "Github Notifications",
        "timestamp": 1507311207
    },
    {
        "content": "<p>kpshek labeled <a href=\"https://github.com/cds-hooks/docs/issues/102\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/102\">Issue #102</a></p>",
        "id": 153920340,
        "sender_full_name": "Github Notifications",
        "timestamp": 1511121151
    },
    {
        "content": "<p>kpshek <a href=\"https://github.com/cds-hooks/docs/issues/102#issuecomment-345544358\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/102#issuecomment-345544358\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/102\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/102\">Issue #102</a></p>\n<blockquote>\n<p>Thanks for the well thought out and detailed feedback @stefan-evinance!</p>\n<p>At the Sept 2017 San Diego Connectathon, the community reached consensus to remove decisions for the 1.0 release (#99) until we obtain more implementer feedback. I think the questions you pose here are further indication that the decisions feature needs quite a bit of further thought, implementation feedback, and documentation.</p>\n<p>We will swing back on the decisions feature on a subsequent release. As such, I'm closing this issue with a _deferred_ label.</p>\n</blockquote>",
        "id": 153920341,
        "sender_full_name": "Github Notifications",
        "timestamp": 1511121196
    },
    {
        "content": "<p>kpshek closed <a href=\"https://github.com/cds-hooks/docs/issues/102\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/102\">Issue #102</a></p>",
        "id": 153920342,
        "sender_full_name": "Github Notifications",
        "timestamp": 1511121196
    }
]