[
    {
        "content": "<p>isaacvetter opened <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>Here's our sample discovery pre-fetch example:<br>\n      \"prefetch\": {<br>\n        \"patientToGreet\": \"Patient/{{Patient.id}}\"<br>\n      }</p>\n<p>By having the cds service define the \"patientToGreet\" key, serialization of a CDS Hooks request message by the EHR is many programming languages doesn't allow the use of standard serialization tools.</p>\n</blockquote>",
        "id": 153905582,
        "sender_full_name": "Github Notifications",
        "timestamp": 1504999105
    },
    {
        "content": "<p>JustinStauffer <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328541079\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328541079\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>I brought this concern up to Isaac while investigating CDS Hooks. Having a dynamically named element in the message content essentially means there can be no schema defining the message structure and therefore, you cannot build a code-representation of the message at compile time. That seems like a very big problem to me.</p>\n<p>Perhaps you can work around it by creating custom serializers/formatters but that also looks like a big red flag to me. When the solution to a problem with a spec is \"Just write a custom _____\", that doesn't smell right.</p>\n</blockquote>",
        "id": 153906087,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505139039
    },
    {
        "content": "<p>brynrhodes labeled <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>",
        "id": 153907056,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505240319
    },
    {
        "content": "<p>jmandel <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328939610\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328939610\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>Are you asking for something more like:</p>\n<div class=\"codehilite\"><pre><span></span>&quot;prefetch&quot;: [{\n  &quot;key&quot;: &quot;patientToGreet&quot;,\n  &quot;value&quot;: &quot;Patient/{{Patient.id}}&quot;\n}]\n</pre></div>\n\n\n<p>... the same assessment should apply to <code>.context</code> and other places where hook-specific variation may be introduced.</p>\n</blockquote>",
        "id": 153907058,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505240546
    },
    {
        "content": "<p>jmandel edited <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>Here's our sample discovery pre-fetch example:</p>\n<div class=\"codehilite\"><pre><span></span>      &quot;prefetch&quot;: {\n        &quot;patientToGreet&quot;: &quot;Patient/{{Patient.id}}&quot;\n      }\n</pre></div>\n\n\n<p>By having the cds service define the \"patientToGreet\" key, serialization of a CDS Hooks request message by the EHR is many programming languages doesn't allow the use of standard serialization tools.</p>\n</blockquote>",
        "id": 153907059,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505240624
    },
    {
        "content": "<p>kpshek <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328943959\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328943959\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>Per discussion at the Sept WGM (Tue Q2), this is something we need to decide if we change prior to the 1.0 release (since it would represent a breaking change).</p>\n<p>We want to talk with @JustinStauffer &amp; <span class=\"user-mention\" data-user-email=\"isaacvetter@gmail.com\" data-user-id=\"558\">@Isaac Vetter</span> more on this issue to understand this in further detail.</p>\n</blockquote>",
        "id": 153907065,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505241555
    },
    {
        "content": "<p>kpshek milestoned <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>",
        "id": 153907066,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505241569
    },
    {
        "content": "<p>jaredrn <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328953681\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328953681\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>I would agree that prefetch is a little tricky for a statically typed language like C#.  It can be overcome with a little custom serialization logic to bridge the gap between a JSON parsing library and the C# reference implementation, but it's not entirely intuitive.</p>\n</blockquote>",
        "id": 153907094,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505243701
    },
    {
        "content": "<p>JustinStauffer <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328977734\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328977734\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>Yes (to Josh / <span class=\"user-mention\" data-user-email=\"jmandel@gmail.com\" data-user-id=\"9\">@Josh Mandel</span>). That would work because the _value_ is dynamic and not the element name.</p>\n</blockquote>",
        "id": 153907106,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505248778
    },
    {
        "content": "<p>grahamegrieve <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328980343\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328980343\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>I think that there's some mus-understanding here. </p>\n<p>\"prefetch\": [ \"patientToGreet\", \"value\": \"Patient/{{Patient.id}}\" ]</p>\n<p>this is easy to serialise natively - if you have a definition for <em>this specific hook</em>. </p>\n</blockquote>",
        "id": 153907108,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505249382
    },
    {
        "content": "<p>JustinStauffer <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328980919\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328980919\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>@grahamegrieve - Yes but if you want to create a generic framework to handle many hooks, this would become unscalable.</p>\n</blockquote>",
        "id": 153907109,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505249531
    },
    {
        "content": "<p>grahamegrieve <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328984171\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328984171\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>Yes. so you trade between various optimisation here. you can make it so that the generic format is a hard schema that's simple to write with OTS schema tools, but the consequence of this is that it's now equally hard to do it by schema the other way. For me, this is a bad idea - servers that handle many hooks should pay the price, not clients that handle single hooks</p>\n</blockquote>",
        "id": 153907115,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505250309
    },
    {
        "content": "<p>jmandel <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328984559\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328984559\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>+1 to @grahamegrieve's assessment here.</p>\n</blockquote>",
        "id": 153907116,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505250413
    },
    {
        "content": "<p>JustinStauffer <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328985564\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328985564\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>I'm not following what you mean by \"it's now equally hard to do it by schema the other way\". Also, I'm looking at this from the perspective of a client that may want to call many different servers. Or perhaps more accurately, many instances of a client spread across the world invoking different servers at each instance. If customer A wants to connect to CDS Hooks server A that supports prefetch/patientToGreet but then customer B wants to connect to CDS Hooks server B that supports prefetch/patientToSmileAt, I need to write two clients for them. What happens if customer A wants to connect to CDS Hooks servers A, B, C, D, etc. who all do it differently? That's unscalable.</p>\n</blockquote>",
        "id": 153907118,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505250664
    },
    {
        "content": "<p>kensaku-kawamoto <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328986898\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328986898\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>I would +1 the thoughts from @JustinStauffer</p>\n</blockquote>",
        "id": 153907120,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505251007
    },
    {
        "content": "<p>JustinStauffer <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328988218\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328988218\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>As a compromise, I'd be fine with either approach as long as the list of choices for that element name were defined in a finite list. Honestly, I think that is my bigger issue. This could be _anything_. There's nowhere else in an industry standard that I'm aware of where an element in a message can be named _anything_. It's actually an ugly piece of ebXML/IHE that has the generic Slot structure.</p>\n<p>So if we had a well defined list of options (like a FHIR resource container), that'd be fine by me.</p>\n</blockquote>",
        "id": 153907124,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505251355
    },
    {
        "content": "<p>jmandel <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328989705\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328989705\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>In general, the job of <code>prefetch</code> is to support ad-hoc, client-specific requirements. So we won't be able to enumerate a finite list of what these should be called.</p>\n</blockquote>",
        "id": 153907134,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505251730
    },
    {
        "content": "<p>JustinStauffer <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328990548\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328990548\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>Then the ad-hoc portion of it needs to be part of dynamic _content_ -- not part of message structure itself. (for the reasons I mentioned above).</p>\n</blockquote>",
        "id": 153907140,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505251957
    },
    {
        "content": "<p>jmandel <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328993038\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-328993038\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>I think the distinction between \"content\" and \"message structure\" is not so stark. In any case, \"<em>needs</em>\" is a bit strong (after all, that's the subject of discussion here :-))</p>\n</blockquote>",
        "id": 153907158,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505252603
    },
    {
        "content": "<p>kensaku-kawamoto <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-329042340\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-329042340\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>This is probably pretty obvious -- but is there a reason why there needs to be name(s) associated with the data asked for in a prefetch in any case?</p>\n</blockquote>",
        "id": 153907275,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505271021
    },
    {
        "content": "<p>olbrich <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-329050988\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-329050988\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>I'll just re-iterate my comment from the connectathon.  It seems like a bad idea to me to allow the structure of the message to be dictated by implementation details of the underlying languages.  There are systems that are quite capable of handling the originally proposed structure with little modification.  Making the proposed change will undoubtedly inconvenience those developers.  </p>\n<p>Another option might be to package the prefetch data as a Bundle (of type 'collection') and give each <code>entry</code> an id in a cds-hooks specific code system so the CDS service can easily determine which one is which.</p>\n</blockquote>",
        "id": 153907280,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505274423
    },
    {
        "content": "<p>JustinStauffer <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-329175609\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-329175609\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>Does anyone have examples of other healthcare interoperability standards where an element name in a message is variable?</p>\n<p>FHIR does not do this as far as I'm aware. The closest thing I know of is the ResourceContainer that can contain any type of resource. However, those resource types are finite and defined at \"design time\" so that type is represented in schema as a choice element. How would you represent the current approach in a schema? Do we not care about this?</p>\n<p>@olbrich , yes anyone can handle this with modification with some programming (what problem cannot be solved with programming?). However, I'm pretty sure one of the goals of FHIR (and presumably, CDS Hooks too) is to lower the implementation barrier versus prior standards (e.g. HL7v3). By requiring people to customize off-the-shelf functionality provided in well-known programming libraries, we're raising a barrier to implementation and then we need to ask ourselves what we're really trying to do here...</p>\n<p>Also, other than \"This is the way it has been proposed and that's how I already wrote my system based on a draft specification\", I have seen no argument for why the current approach is better than a key/value pair as Josh replied with above. Perhaps Grahame could clarify what he meant by \"it's now equally hard to do it by schema the other way\" as I don't understand what he means by that.</p>\n</blockquote>",
        "id": 153907385,
        "sender_full_name": "Github Notifications",
        "timestamp": 1505310965
    },
    {
        "content": "<p>isaacvetter assigned <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>",
        "id": 153911908,
        "sender_full_name": "Github Notifications",
        "timestamp": 1506978953
    },
    {
        "content": "<p>JustinStauffer <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-333856591\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-333856591\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>Note that the CDS service response handles this issue just fine in via the Action type. This is used in cards/suggestions/actions.</p>\n<p>The structure of Action is:<br>\n- type - Type of action being performed: create, update, delete<br>\n- resource - The associated resource info</p>\n<p>Prefetch could work the same way by using the exact same type. This way, the element name wouldn't be variable -- the value of the \"type\" field would be variable.</p>\n<p><code>\"prefetch\": {\n      \"action\": {\n           \"type\": \"patientToGreet\",\n           \"description\": \"This is the patient to greet when they arrive.\"\n           \"resource\": {\n                 \"resourceType\": \"Patient\",\n                 \"gender\": \"male\",\n                  ... etc ...</code></p>\n</blockquote>",
        "id": 153912071,
        "sender_full_name": "Github Notifications",
        "timestamp": 1507040334
    },
    {
        "content": "<p>isaacvetter <a href=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-346183559\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89#issuecomment-346183559\">commented</a> on <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>\n<blockquote>\n<p>Ultimately, yes, serialization is harder because of this format. It's not impossible. This issue is the only feedback that CDS Hooks has received around this issue. </p>\n<p>I think that @grahamegrieve 's point is ultimately persuasive: </p>\n<blockquote>\n<p>Yes. so you trade between various optimisation here. you can make it so that the generic format is a hard schema that's simple to write with OTS schema tools, but the consequence of this is that it's now equally hard to do it by schema the other way. For me, this is a bad idea - servers that handle many hooks should pay the price, not clients that handle single hooks</p>\n</blockquote>\n<p>Closing.</p>\n</blockquote>",
        "id": 153920830,
        "sender_full_name": "Github Notifications",
        "timestamp": 1511303650
    },
    {
        "content": "<p>isaacvetter closed <a href=\"https://github.com/cds-hooks/docs/issues/89\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/89\">Issue #89</a></p>",
        "id": 153920831,
        "sender_full_name": "Github Notifications",
        "timestamp": 1511303650
    }
]