[
    {
        "content": "<p>Hi, I was trying the suggested fhirpath in fhirpath.js.   Something like <code>Bundle.entry.resource.where(resourceType in ('Observation' | 'AllergyIntolerance' | 'Procedure')).not()</code>  I fed it a bundle of only 'Conditions' and it returns to me an empty collection.  I tried a few variations of grouping with parens, but nothing seemed to change the result.  Any ideas?</p>",
        "id": 200500590,
        "sender_full_name": "Tim Harsch",
        "timestamp": 1591842843
    },
    {
        "content": "<p>The expression with not() needs to be inside the where(...).  Otherwise you are applying not() to the result of the where().</p>",
        "id": 200560802,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1591889580
    },
    {
        "content": "<p>I had thought that too so I tried these as well:  <code>Bundle.entry.resource.where((resourceType in ('Observation' | 'AllergyIntolerance' | 'Procedure')).not())</code> and <code>Bundle.entry.resource.where(resourceType in ('Observation' | 'AllergyIntolerance' | 'Procedure').not())</code>.  The latter makes more sense to me, but not sure since all 3 forms return empty collection.</p>",
        "id": 200562950,
        "sender_full_name": "Tim Harsch",
        "timestamp": 1591890471
    },
    {
        "content": "<p>I tried the following with bundle of Observations you shared earlier, and got Observations back:<br>\nfhirpath --expression \"Bundle.entry.resource.where((resourceType in ('AllergyIntolerance' | 'Procedure')).not())\" --resourceFile DanielJohnson.Observations.json</p>",
        "id": 200563262,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1591890600
    },
    {
        "content": "<p>hmmm.   and you have the not() wrapping the expression..   I'm working with a different data file that contains only Conditions.  let me try switching back to Observations with your expression and then working forward from there.</p>",
        "id": 200565727,
        "sender_full_name": "Tim Harsch",
        "timestamp": 1591891549
    },
    {
        "content": "<p>That worked well in my environment.  thank you!</p>",
        "id": 200594046,
        "sender_full_name": "Tim Harsch",
        "timestamp": 1591903938
    }
]