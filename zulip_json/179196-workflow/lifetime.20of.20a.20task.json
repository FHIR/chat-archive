[
    {
        "content": "<p>We talked today about putting time limits on accessing a  Task and I<br>\nlooked to <code>Task.restriction.period</code></p>\n<p>Definition  Over what time-period is fulfillment sought.</p>\n<p>but I was informed this is not what it means.  This Is confusing since I interpret the defintiion as the lifetime of a task - no matter the outcome</p>\n<p>was does it mean and should there be a way to represent termination date on a Task?</p>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  <span class=\"user-mention\" data-user-id=\"192685\">@Vassil Peytchev</span>  ?</p>",
        "id": 234556839,
        "sender_full_name": "Eric Haas",
        "timestamp": 1618427380
    },
    {
        "content": "<p>It means \"when does the Task need to be executed\".  There's no general concept of a lifespan on a resource.  In general, all resources are expected to hang around forever - which in practice means \"until the system doesn't exist anymore\" or \"until performance considerations cause the data to be archived\" or \"until business rules say we're no longer required to expose it\".  So Tasks, once created, stay around forever unless someone deletes them or there are business rules that say otherwise.</p>",
        "id": 234621021,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1618466070
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179196-workflow/topic/lifetime.20of.20a.20task/near/234621021\">said</a>:</p>\n<blockquote>\n<p>It means \"when does the Task need to be executed\".  ...</p>\n</blockquote>\n<p>that is what <code>Task.executionPeriod</code> means</p>",
        "id": 234683195,
        "sender_full_name": "Eric Haas",
        "timestamp": 1618496130
    },
    {
        "content": "<p>Can you elaborate what the use case is for \"putting time limits on accessing a Task\"? Is it that after a certain point in time, the Task is no longer \"valid\"?</p>",
        "id": 234684553,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1618496578
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"192685\">Vassil Peytchev</span> <a href=\"#narrow/stream/179196-workflow/topic/lifetime.20of.20a.20task/near/234684553\">said</a>:</p>\n<blockquote>\n<p>Can you elaborate what the use case is for \"putting time limits on accessing a Task\"? Is it that after a certain point in time, the Task is no longer \"valid\"?</p>\n</blockquote>\n<p>essentially yes.  a bit of background.  these trackers from AMA re Payer access to Provider data...</p>\n<blockquote>\n<p>When a task is complete what triggers the termination of a payer's ability to fetch data?</p>\n</blockquote>\n<blockquote>\n<p>When and how do data servers terminate a client's set of requests? This should not be allowed indefinitely.</p>\n</blockquote>\n<blockquote>\n<p>What method is used to determine the end of a client's access to a data server? Is that exposed by the client prior to first access data from the server, or is it left up to the client to simply \"stop requesting\" data?</p>\n</blockquote>",
        "id": 234712983,
        "sender_full_name": "Eric Haas",
        "timestamp": 1618505530
    },
    {
        "content": "<p>We discussed the first with the commenter and added some guidance business rules etc.  but this triggered this question about the element in question - <code>Task.restriction.period</code> and why this concept of termination is not exposed in the Task itself</p>",
        "id": 234713273,
        "sender_full_name": "Eric Haas",
        "timestamp": 1618505640
    },
    {
        "content": "<p>also I think the first and third comment are duplicates and the second is handled by <code>Task. executionPeriod</code> but we have to discuss and get clarification from the commenter.</p>",
        "id": 234713547,
        "sender_full_name": "Eric Haas",
        "timestamp": 1618505723
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"295049\">@Celine A Lefebvre</span>  feel free to chime in here.</p>",
        "id": 234713650,
        "sender_full_name": "Eric Haas",
        "timestamp": 1618505755
    },
    {
        "content": "<p>Form what I can tell, Task.status being set to complete is a sufficient trigger for the corresponding business rules. What is the value of having a timestamp? To indicate that the request must be performed by a given point of time, after which the task will be marked as complete?</p>",
        "id": 234719775,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1618507861
    },
    {
        "content": "<p>Still begs the question what is  <code>Task.restriction.period</code> for?</p>",
        "id": 234725979,
        "sender_full_name": "Eric Haas",
        "timestamp": 1618510272
    },
    {
        "content": "<p>The description of Task.restriction states</p>\n<blockquote>\n<p>If the Task.focus is a request resource and the task is seeking fulfillment (i.e. is asking for the request to be actioned), this element identifies any limitations on what parts of the referenced request should be actioned.</p>\n</blockquote>\n<p>To me that means that you can only use Task.restriction if the Task is for fulfillment of another request resource, and the restriction identifies what subset of the request is supposed to be fulfilled. A possible example could be a standing order (the request), and  a single instantiation for fulfillment (the Task).</p>\n<p>To answer the actual question, <code>Task.restriction.period</code>  is only used in relation to another request resource, specifically regarding request.occurrence[x]</p>",
        "id": 234729732,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1618511780
    },
    {
        "content": "<p>ok thanks for clearing that up but it is certainly confusing and there should be clarifying language such as your comment added.  Also an invariant to restrict its usage to only when focus is present.</p>\n<p>Do you agree?</p>",
        "id": 234732493,
        "sender_full_name": "Eric Haas",
        "timestamp": 1618512932
    },
    {
        "content": "<blockquote>\n<p>What is the value of having a timestamp? To indicate that the request must be performed by a given point of time, after which the task will be marked as complete?</p>\n</blockquote>\n<p>is that what <code>Task.executionPeriod</code> if  for  ( in other words,  I need this done by next Friday)?</p>",
        "id": 234732965,
        "sender_full_name": "Eric Haas",
        "timestamp": 1618513111
    },
    {
        "content": "<p>i will make a tracker to clarify restriction <a href=\"http://jira.hl7.org/browse/FHIR-29680\">FHIR#29680</a></p>",
        "id": 234733066,
        "sender_full_name": "Eric Haas",
        "timestamp": 1618513155
    },
    {
        "content": "<p>maybe an extension saying the output is available for some duration would be useful ( \"you got 30 days to look at this\")?  I am spit-balling here but that is what I think the commenter is wanting the ability to control and expose to the requester.  But I admit my ignorance here and this may be controlled by some other mechanism such as authentication scopes</p>",
        "id": 234733704,
        "sender_full_name": "Eric Haas",
        "timestamp": 1618513385
    },
    {
        "content": "<blockquote>\n<p>is that what <code>Task.executionPeriod</code> is for ( in other words, I need this done by next Friday)?</p>\n</blockquote>\n<p>Doesn't look that way - the description references actual timings of the execution of the task, not requested ones. Currently it seems to me that you need a request resource to express that via request.occurrence - maybe restriction period can be loosened to not require focus...</p>\n<p>Switching topics:</p>\n<blockquote>\n<p>maybe an extension saying the output is available for some duration would be useful ( \"you got 30 days to look at this\")?</p>\n</blockquote>\n<p>I assume this is in the context of one of the Da Vinci profiles, where the requester POSTs a Task, and the responder updates the Task with pointers to the resources to be pulled by the requester. In that case, can you add another output for this specific purpose? The implementation of the actual timing restriction, however, is best left to the authorization layer, I think. In general, the notion of disappearing resources is not something that is expected in a FHIR implementation</p>",
        "id": 234737047,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1618514615
    },
    {
        "content": "<p>thanks for your responses btw....</p>\n<p>so in plain English <code>Task.executionPeriod</code> is just saying how long the task took if it is completed?</p>",
        "id": 234748575,
        "sender_full_name": "Eric Haas",
        "timestamp": 1618519056
    },
    {
        "content": "<blockquote>\n<p>Doesn't look that way - the description references actual timings of the execution of the task, not requested ones. Currently it seems to me that you need a request resource to express that via request.occurrence - maybe restriction period can be loosened to not require focus...</p>\n</blockquote>\n<p>OK I'll update the tracker to propose that, it seems like a common thing to want to do...</p>",
        "id": 234748754,
        "sender_full_name": "Eric Haas",
        "timestamp": 1618519140
    },
    {
        "content": "<p>we all have deadlines</p>",
        "id": 234748781,
        "sender_full_name": "Eric Haas",
        "timestamp": 1618519153
    },
    {
        "content": "<p>I am out of my depths here, but is the authorization layer timeframes typically exposed to the data-consumer/end user ( \"you got 30 days to look at this\")?</p>",
        "id": 234749113,
        "sender_full_name": "Eric Haas",
        "timestamp": 1618519318
    },
    {
        "content": "<blockquote>\n<p>I think. In general, the notion of disappearing resources is not something that is expected in a FHIR implementation</p>\n</blockquote>\n<p>its not that the resource disappears its that the requester's access to it terminates at some point.</p>",
        "id": 234749247,
        "sender_full_name": "Eric Haas",
        "timestamp": 1618519375
    },
    {
        "content": "<p>BTW I triaged <a href=\"http://jira.hl7.org/browse/FHIR-31900\">FHIR-31900</a> and assigned to OO, will that be looked at by FHIR-I WF?</p>",
        "id": 234751239,
        "sender_full_name": "Eric Haas",
        "timestamp": 1618520218
    },
    {
        "content": "<blockquote>\n<p>I am out of my depths here, but is the authorization layer timeframes typically exposed to the data-consumer/end user ( \"you got 30 days to look at this\")?</p>\n</blockquote>\n<p>I don't think so. I meant that the implementation of the timing restriction (i.e. client X is not allowed to view resources A, B and C after time point T) is better done at the authorization layer (e.g. any authorization tokens are set to expire on the deadline). Indicating the deadline to a user is better done via something on the resource, my off-the cuff suggestion was to have an output of a special type to convey that.</p>",
        "id": 234758430,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1618522651
    },
    {
        "content": "<blockquote>\n<p>BTW I triaged <a href=\"http://jira.hl7.org/browse/FHIR-31900\">FHIR-31900</a> and assigned to OO, will that be looked at by FHIR-I WF?</p>\n</blockquote>\n<p>From what I understand, OO will have to refer it to FHIR-I (and specify grouping of Workflow) in order to get a review there...</p>",
        "id": 234758933,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1618522912
    },
    {
        "content": "<p>OK  I updated the tracker to FHIR-I /Workflow</p>",
        "id": 234761229,
        "sender_full_name": "Eric Haas",
        "timestamp": 1618524101
    },
    {
        "content": "<p>Note the specific use-case of authorizing access for a given reason for a given agent for a given time... seems like a good use-case to use for the development of the Permission resource. I am not saying what you have in Task is not right, but the authorization portion seems overloading Task; thus it might be okay for specific use but the permission concept  would be a more reusable if we can get it well defined (it is not well defined today).</p>",
        "id": 234845404,
        "sender_full_name": "John Moehrke",
        "timestamp": 1618576737
    },
    {
        "content": "<p>That's a good point - something for the Profile sponsors to consider. It is better that having a special output parameter.</p>",
        "id": 234893863,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1618594952
    },
    {
        "content": "<p>Would implementing a restriction at the authorization layer provide for Task limitations (e.g., this Task is allowed to reoccur for X patient(s) or this Task must be completed within 10 days) or would it limit the use of resources for specific tasks (e.g., using a resource for prior authorization but not for quality measurement) or both? Would the Permission resource provide for more granular control over resource use?</p>",
        "id": 234897541,
        "sender_full_name": "Matt Reid",
        "timestamp": 1618596416
    }
]