[
    {
        "content": "<p>This is a story about a simple data replication use case.</p>\n<div class=\"codehilite\"><pre><span></span><code>+------------+            +------------+            +------------+\n|  Server A  |  Client A  |  Server B  |  Client B  |  System C  |\n| (“Source”) | ---------&gt; |            | ---------&gt; |            |\n+------------+            +------------+            +------------+\n</code></pre></div>\n\n\n<ol>\n<li>Data originates on Server A, a.k.a. the “source” system.</li>\n<li>Client A replicates FHIR resources from Server A onto Server B (with some redaction).</li>\n<li>Client B periodically polls Server B for new and updated FHIR resources, and sends any new data to Server C.</li>\n</ol>\n<p>Problem:</p>\n<p>Client B uses a search based on meta.lastUpdated to retrieve all new and updated FHIR resources from Server B.  The intention is to propagate meaningful data changes originating from Server A to System C.  However, Client A is not the only agent which may cause the meta.lastUpdated value of FHIR resources on Server B to be updated.  Other modifications to Server B data, such as reference rewriting and adding new resource identifiers, may affect large numbers of resources in ways not pertinent to Client B, generating potentially large amounts of unwanted traffic.</p>\n<p>Proposed solution:</p>\n<p>The addition of a lastUpdatedFromSource extension to replicated resources on Server B would enable searches for only those resources containing new data originating from the “source” system.  As with meta.lastUpdated, the lastUpdatedFromSource extension would contain a value of type instant (FHIR data type).  This value would be populated by Client A when it replicates resources from Server A to Server B.</p>\n<p>Questions:</p>\n<ol>\n<li>Is there a wider interest in creation of a lastUpdatedFromSource extension (beyond our implementation)?</li>\n<li>\n<p>Does something like the lastUpdatedFromSource extension already exist?<br>\n2.1 If not, might it be useful to incorporate the lastUpdatedFromSource extension into some existing IG, or even as a standard FHIR extension?</p>\n</li>\n<li>\n<p>Could the lastUpdatedFromSource extension also be useful for subscription-based data replication (in addition to the polling-based replication outlined above)?</p>\n</li>\n</ol>",
        "id": 205481402,
        "sender_full_name": "Joel Schneider",
        "timestamp": 1596117519
    },
    {
        "content": "<p>Seems Provenance would be the more formal mechanic. Not saying that you couldn't use extension of your own design.</p>",
        "id": 205482631,
        "sender_full_name": "John Moehrke",
        "timestamp": 1596118137
    },
    {
        "content": "<p>That's an interesting thought, using Provenance.</p>",
        "id": 205484140,
        "sender_full_name": "Joel Schneider",
        "timestamp": 1596118816
    },
    {
        "content": "<p>well it is my resource... so I tend to think of it in my dreams...</p>",
        "id": 205485491,
        "sender_full_name": "John Moehrke",
        "timestamp": 1596119465
    },
    {
        "content": "<p>Provenance is likely a better bet than a single extension unless lastUpdatedFromSource was a tuple - it would need to capture both who and when - so that if Client A updated record 1 and Client X then updated record 1 before data was pushed, System B would still know that record 1 had been changed by a 'relevant' source.  An alternative would be a simple flag (or better yet, tag) that said 'relevant to push to C' that could be set when an update was deemed relevant.  However, those would all be solution-specific.  You couldn't count on anyone else setting them.  With Provenance, you'd know what event occurred, when and who originated it.  If your query used _has to filter on Provenance, that should give you the data you want in a 'standard' way.</p>",
        "id": 205487849,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1596120515
    },
    {
        "content": "<p>I'd favor provenance. It's what it's supposed to do, and it's a standard resource.<br>\n ' + what John and Lloyd sayd</p>",
        "id": 205531058,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1596142385
    },
    {
        "content": "<p>Agreed, Provenance looks like the best answer for this.</p>",
        "id": 205873127,
        "sender_full_name": "Joel Schneider",
        "timestamp": 1596516436
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191926\">Joel Schneider</span> has marked this topic as resolved.</p>",
        "id": 246369977,
        "sender_full_name": "Notification Bot",
        "timestamp": 1626602733
    }
]