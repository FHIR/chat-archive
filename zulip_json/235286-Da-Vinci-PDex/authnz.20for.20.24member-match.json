[
    {
        "content": "<p><em>Reposted from <a href=\"#narrow/stream/180804-(old)-Da.20Vinci.20ePDx/topic/authnz.20for.20.60.24member-match.60.3F\">old stream</a></em></p>\n<p>Hi! I'm re-reading PDex. For the $member-match operation, used as an EMPI lookup and to determine coverage when a member moves from one health plan to another, what's the intended method for the new plan to authenticate against the old plan's FHIR server when calling this operation?</p>",
        "id": 228493138,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1614722087
    },
    {
        "content": "<p>The other Payer-to-payer interactions in this guide (I think) all use a member-mediated authorization mechanism (i.e. the member logs into the old plan to authorize the new plan to access their data via SMART). Is that the case with this EMPI/coverage lookup operation as well?</p>",
        "id": 228493152,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1614722094
    },
    {
        "content": "<p>An EMPI-type lookup is exactly what would be needed for an authorized backend service to discover a member and their coverages. Was support for authorization mechanisms other than patient-mediated the intent for this operation, and then the IG was retooled to only enable member-initiated? It seems obvious that there would be a ton of value in permitting backend service authorization here.</p>",
        "id": 228493158,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1614722097
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192609\">@Mark Scrimshire</span>, are you right person to ask if there is any intent to enable backend services, or alternatively, to remove $member-match from the IG?</p>",
        "id": 228493164,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1614722098
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> I am not aware of any plan to remove member-match from the PDex IG. It is also referenced in PCDE and is instantiated in HRex. What backend services are you referring to? Are you referring to Bulk FHIR?</p>",
        "id": 229592976,
        "sender_full_name": "Mark Scrimshire",
        "timestamp": 1615343954
    },
    {
        "content": "<p>I believe the definition of $member-match is moving to HRex where it'll be referenced by PDex, PCDE and anything else that needs it.</p>",
        "id": 229593805,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1615344593
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192609\">@Mark Scrimshire</span> , thanks for the response. In PDex when calling the $member-match operation, does the caller authenticate with an OAuth access_token? If so, how did the caller get that access token?</p>",
        "id": 229759023,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1615415359
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span>  Following up on Backend services and Member-match in PDex:  PDex leaves the door open for payers to use Bulk FHIR to exchange data. We saw clearer definition in that area as being an STU2 item. However we still see a need for member-match to enable payers to confirm that they are exchanging information about the same individual. </p>\n<p>The current $member-match assumes that payers will have an endpoint discovery capability (e.g. CAQH / FAST) and some type of verification that enables them to access the clinical apis (using an OAuth Access Token) that are also exposed through the Patient Access API.</p>",
        "id": 229863500,
        "sender_full_name": "Mark Scrimshire",
        "timestamp": 1615475205
    }
]