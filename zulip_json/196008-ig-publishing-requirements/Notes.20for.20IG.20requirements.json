[
    {
        "content": "<p><a href=\"https://docs.google.com/document/d/1cVSxI3cUHDiuAMgRiXJZtXUlWiqbLcmRz_-AyehhCDE\" target=\"_blank\" title=\"https://docs.google.com/document/d/1cVSxI3cUHDiuAMgRiXJZtXUlWiqbLcmRz_-AyehhCDE\">https://docs.google.com/document/d/1cVSxI3cUHDiuAMgRiXJZtXUlWiqbLcmRz_-AyehhCDE</a></p>",
        "id": 165306684,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1557459503
    },
    {
        "content": "<p>we will have to figure out which of these things are publication requirement, and which are just decisions about how we're going to do things.</p>",
        "id": 165322411,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557481251
    },
    {
        "content": "<p>but there is a way for Simplifier to collapse the difference - <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> and I spoke about that at this meeting</p>",
        "id": 165322429,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557481277
    },
    {
        "content": "<p>With the invariants section, could we have a version that ignores the \"core\" ones?<br>\nsomething like I've done with this IG here:<br>\n<a href=\"https://fhir.medicationknowledge.com.au/dev/StructureDefinition-mysl-patient.html\">https://fhir.medicationknowledge.com.au/dev/StructureDefinition-mysl-patient.html</a><br>\n<a href=\"/user_uploads/10155/ALgYRzw6iboUpqPLEVSiuw0i/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/ALgYRzw6iboUpqPLEVSiuw0i/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/ALgYRzw6iboUpqPLEVSiuw0i/image.png\"></a></div>",
        "id": 243872742,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1624592598
    },
    {
        "content": "<p>It then means you can see any locally defined constraints without being bombarded by all the 1000 core ones.<br>\n(and the note underneath that they all still apply)</p>",
        "id": 243872750,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1624592628
    },
    {
        "content": "<p>I have a post processing step on my local IG building process that \"prunes\" out these specific ones from the table.</p>",
        "id": 243872814,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1624592695
    },
    {
        "content": "<p>how do you decide which ones?</p>",
        "id": 243873325,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1624593560
    },
    {
        "content": "<p>My routine explicitly picks those in the note and strips those out - just that set from core<br>\nInterested if others have any thoughts too.</p>",
        "id": 243873389,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1624593624
    },
    {
        "content": "<p>you just want the invariants on the diff, right?</p>",
        "id": 243873799,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1624594231
    },
    {
        "content": "<p>In this case it would cover it yes, and I think we should definitely have a fragment for that (and I probably would have just used it if it was there already)</p>",
        "id": 243874578,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1624595414
    },
    {
        "content": "<p>It's just those real core ele-1 and ext-2 ones across EVERYTHING make what you need to see impossible.</p>",
        "id": 243874612,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1624595479
    },
    {
        "content": "<p>so the next release will also generate an {x}-inv-diff as well as an {x}-inv file, and the inv-diff file will be generated from the differential</p>",
        "id": 243874802,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1624595767
    },
    {
        "content": "<p>The current code already produces the {x}-inv file right?</p>",
        "id": 243875834,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1624597210
    },
    {
        "content": "<p>yes</p>",
        "id": 243876911,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1624598641
    },
    {
        "content": "<p>Would it be helpful to include text that says “Additional constraints may be defined in &lt;base&gt;.”?</p>",
        "id": 243879370,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1624601792
    },
    {
        "content": "<p>You could put that text into your template that includes the relevant fragment (in the appropriate language <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span>).</p>",
        "id": 243879440,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1624601883
    },
    {
        "content": "<p>Is any of this a candidate for the base template or other templates?</p>",
        "id": 243880362,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1624602986
    },
    {
        "content": "<p>The proposal in the template is to move the invariants into the differential, snapshot and mustSupport/implement view.  Differential would show only the invariants that had changed.  Snapshot would show everything.  mustSupport/implement would show the invariants that pertained to the elements that were mustSupport, mandatory or that implementers otherwise need to worry about.</p>",
        "id": 243913160,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1624626683
    },
    {
        "content": "<p>I still Think the \"everything\" should exclude ext-2 and ele-1, they just pollute the view too much.</p>",
        "id": 243981562,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1624663647
    },
    {
        "content": "<p>Maybe the complete invariants should be a tab of its own, as that's going to be very long.</p>",
        "id": 243981648,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1624663735
    },
    {
        "content": "<p>The other thing we're going to do is we're going to group the invariants - so ext-2 will be a single row in the table - listing all the elements it applies to.  That should make it much less visually overwhelming.</p>",
        "id": 243981808,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1624663905
    },
    {
        "content": "<p>Apart from the 2 above, do we have any examples where you'd see more than 1 value?</p>",
        "id": 243982008,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1624664100
    },
    {
        "content": "<p>same for bindings too right?</p>",
        "id": 243982427,
        "sender_full_name": "Eric Haas",
        "timestamp": 1624664634
    },
    {
        "content": "<p>Any constraint that applys to Element or BackboneElement would hold - and any StructureDefinition could theoretically introduce those.  (And future versions of core might introduce some too.)</p>",
        "id": 243990061,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1624674656
    }
]