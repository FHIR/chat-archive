[
    {
        "content": "<p>I have a tracker that complains that my differential contains stuff that is unchanged from the base.  These are mostly min max and type that is repeated.  I am reluctant to go through dozens of profiles to scrub them out partly since I think is a waste of my time and partly because I think its useful for me when I edit the diff to see these elements.   I had assumed that the publisher dims out the element if they are unchanged from the base.  In other words if min = 0  and max ='1' in both the profile diff and the base the tree view min max would be dimmed out.  Has this been discussed before? Anyway I think it should be dimmed -mostly  so I don't get any more trackers :-)</p>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>?</p>",
        "id": 258123402,
        "sender_full_name": "Eric Haas",
        "timestamp": 1634603466
    },
    {
        "content": "<p>Right now, the validator highlights whatever is in the differential.  It doesn't check against the base to see if it's different.  (Making things even more fun, if authoring using spreadsheets, sometimes declaring the type is mandatory even if unchanged to allow other elements (e.g. pattern) to be declared.</p>",
        "id": 258128328,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1634607531
    },
    {
        "content": "<p>I assume you meant the publisher's narrative generator and not the validator.... I don't expect the publisher to change the contents for the differential.</p>",
        "id": 258133469,
        "sender_full_name": "Eric Haas",
        "timestamp": 1634611948
    },
    {
        "content": "<p>Yeah, we probably can't change the differential - because sometimes you want to force something to be a particular way, even if the parent changes.</p>",
        "id": 258139154,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1634617216
    },
    {
        "content": "<p>what's the actual complaint?</p>",
        "id": 258251527,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634669310
    },
    {
        "content": "<p>It's highlighting things as 'changed' because they're in the differential - even though they haven't actually changed.</p>",
        "id": 258251887,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1634669463
    },
    {
        "content": "<p>if you mean, it's not making them less opaque, then that's what it does. It's a statement of what's in the differential. That's not a statement of what hasn't changed</p>",
        "id": 258252422,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634669688
    },
    {
        "content": "<p>What people want to see is \"what's changed\".  What's in the differential doesn't typically matter if it hasn't changed.</p>",
        "id": 258252671,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1634669776
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/196008-ig-publishing.20requirements/topic/Highlighting.20unchanged.20stuff.20in.20differential/near/258252671\">said</a>:</p>\n<blockquote>\n<p>What people want to see is \"what's changed\".  What's in the differential doesn't typically matter if it hasn't changed.</p>\n</blockquote>\n<p>From my point of view as a consumer, the differential <em>is</em> what's changed, and if there's something in there that hasn't changed, well, it shouldn't be in there. I understand if that's not actually works, but as a reader of an IG, that's my expectation.</p>",
        "id": 258271569,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1634677383
    },
    {
        "content": "<p>the issue is that profile authors are lazy and not always careful about including <em>only</em> what is changed.</p>",
        "id": 258272962,
        "sender_full_name": "Eric Haas",
        "timestamp": 1634677950
    },
    {
        "content": "<p>Agree. And that's why I'd like to see the publisher strip out content that isn't changed. But again, I recognize that's not consistent with historical use.</p>",
        "id": 258273950,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1634678337
    },
    {
        "content": "<p>the other option is to make a rule that the diffs need to be pure and validate that they are</p>",
        "id": 258274126,
        "sender_full_name": "Eric Haas",
        "timestamp": 1634678375
    },
    {
        "content": "<p>you know, if I'm going to do that work, I might as well just make the things that haven't changed less opaque. It's the same underlying work</p>",
        "id": 258274266,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634678414
    },
    {
        "content": "<p>right now, I know what isn't in the differential, because I copied it across. In order to change the rendering, I'd have to add logic to decide whether the content that is present is different. Some times, for things like strings, that'll be easy. for other things... it's tricky.</p>",
        "id": 258274411,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634678481
    },
    {
        "content": "<p>does order of choice types matter? Does forgetting profiles in types in the differential matter? Does missing invariants matter?</p>",
        "id": 258274506,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634678522
    },
    {
        "content": "<p>I agree it gets complicated quickly.  What is currently added as greyed in content?    min, max , type</p>",
        "id": 258274716,
        "sender_full_name": "Eric Haas",
        "timestamp": 1634678604
    },
    {
        "content": "<p>the renderer, because the content isn't in the differential, so it falls through to the base</p>",
        "id": 258274781,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634678638
    },
    {
        "content": "<p>looking at US Core diffs the min max and type stick out.    Is it worth doing if only captures the 90%?</p>\n<p><a href=\"/user_uploads/10155/QUauRWvMTBpS8Fr9jPoZt5cK/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/QUauRWvMTBpS8Fr9jPoZt5cK/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/QUauRWvMTBpS8Fr9jPoZt5cK/image.png\"></a></div>",
        "id": 258276213,
        "sender_full_name": "Eric Haas",
        "timestamp": 1634679335
    },
    {
        "content": "<p>is what worth doing?</p>",
        "id": 258277609,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634679950
    },
    {
        "content": "<p>dimming the unchanged propertied - if most (the easy stuff) but not 100%  of the unchanged items are dimmed</p>",
        "id": 258279747,
        "sender_full_name": "Eric Haas",
        "timestamp": 1634680922
    },
    {
        "content": "<p>well, I figure that once I start, people will bitch about the corner cases until it's 100% right. Well, at least Lloyd, if not normal peoples</p>",
        "id": 258280654,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634681399
    },
    {
        "content": "<p>If people use SUSHI, it automatically includes only the changed things in the differential by default. ;-)</p>",
        "id": 258283880,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1634683164
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span>  I figured that much out from the tracker :-). But I use sushi and it doesn't do that to my json files.  So I assume it only works on the fsh ones.</p>",
        "id": 258284731,
        "sender_full_name": "Eric Haas",
        "timestamp": 1634683583
    },
    {
        "content": "<p>if it did that on json and yaml files would save me a little time writing my own script to do the same.</p>",
        "id": 258285437,
        "sender_full_name": "Eric Haas",
        "timestamp": 1634684037
    },
    {
        "content": "<p>Yeah.  I guess I should have been more specific.  SUSHI includes only the things that truly changed when creating differentials from FSH files only.  Sorry about that!</p>",
        "id": 258300864,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1634694992
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191401\">Eric Haas</span> <a href=\"#narrow/stream/196008-ig-publishing.20requirements/topic/Highlighting.20unchanged.20stuff.20in.20differential/near/258284731\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191469\">Chris Moesel</span>  I figured that much out from the tracker :-).</p>\n</blockquote>\n<p>Oh.  Is this my tracker?  Oops.  Thanks for chasing it down!</p>",
        "id": 258300990,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1634695089
    },
    {
        "content": "<p>There are two issues here:</p>\n<ol>\n<li>Is a differential <em>only</em> things that have changed?</li>\n<li>\n<p>Do we need to highlight what's in the differential or what's changed?</p>\n</li>\n<li>\n<p>Differentials contain content for 4 reasons:<br>\na) it's changed (obvious &amp; most common)<br>\nb) it hasn't changed - but the profile author wants to ensure a constraint is enforced even if the underlying resource/profile changes.  E.g. current max is 1, but I want to enforce a max of 1 even if the parent changes<br>\nc) some authoring tools (e.g. spreadsheet authoring) mandate certain elements are present even if unchanged<br>\nd) some authors include content in their differential as reminders or because they forget to remove stuff that's unchanged from the base, or the base has evolved to match the differential and differential hasn't changed to reflect that</p>\n</li>\n<li>\n<p>Of those reasons, we don't really want to show stuff that's in category (c) or (d).  Ideally, we'd like these things to not appear in the differential at all.  Auto-stripping them would sort of be nice.  However, we can't really distinguish them from (b)</p>\n</li>\n</ol>\n<p>So, I think the first question we need to ask is - is (b) a real thing?  It's a theoretical possibility.  But I'm not aware of any situation where anyone's actually done this.  If it's not a practical reality, then \"normalizing\" the differential seems like a good thing to do.</p>\n<p>On Grahame's other point, should we normalize other information - like ensuring that types are listed in the same order?  (Obviously only works where types are unchanged - if you start introducing profiles and have no idea what the underlying types are, retaining order isn't really feasible.)</p>",
        "id": 258309292,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1634702744
    },
    {
        "content": "<p>One other display issue when experimenting with this. I noticed that the MS flags are not displayed if inherited in the diff.   I think that is important to expose just like cardinality, and type, even if inherited. Which is why I add em in if not showing up in the diff.</p>",
        "id": 258312446,
        "sender_full_name": "Eric Haas",
        "timestamp": 1634705818
    },
    {
        "content": "<p>well, I think that's a bug, that last bit</p>",
        "id": 258342930,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634724790
    },
    {
        "content": "<p>you could make a github issue for that</p>",
        "id": 258342945,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1634724798
    },
    {
        "content": "<p>For the other bits discussed above (dimming out the repeated stuff), do we have enough discussion here to move it to github issue to hash it out more? next steps?  ( I am basing a tracker on this outcome so I need to push for a resolution and timeframe)</p>",
        "id": 258796505,
        "sender_full_name": "Eric Haas",
        "timestamp": 1634953757
    },
    {
        "content": "<p>I don't think we have.  I think the first question is whether constraints that aren't changes should be removed from the differential.</p>",
        "id": 258797336,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1634954935
    },
    {
        "content": "<p>well that could be part of the WG discussion of  if and how to implement when review  possible options :<br>\n1) the ig-pub changes the diff to be unique then the renders<br>\n2) the ig-pub checks if diff  uniquie when  rendering</p>\n<p>I don't have an opinion except that the source should be unchanged.</p>",
        "id": 258797566,
        "sender_full_name": "Eric Haas",
        "timestamp": 1634955311
    },
    {
        "content": "<p>...but I do think we need an overide, because I have a few diff that I want the diff  to be rendered with redundant element s for display purposes.</p>",
        "id": 258797629,
        "sender_full_name": "Eric Haas",
        "timestamp": 1634955413
    },
    {
        "content": "<p>or maybe is easier to just leave it and exhort editors to not repeat in the diff...</p>",
        "id": 258797755,
        "sender_full_name": "Eric Haas",
        "timestamp": 1634955607
    },
    {
        "content": "<p>(I've already scripted a solution to sanitized my profiles so I am good personally)</p>",
        "id": 258797787,
        "sender_full_name": "Eric Haas",
        "timestamp": 1634955701
    },
    {
        "content": "<p>Diff should be rendered consistently - I'm definitely opposed to overrides.  If something should be displayed, it should always be displayed - it shouldn't be up to author whim.</p>",
        "id": 258798481,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1634956725
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/196008-ig-publishing.20requirements/topic/Highlighting.20unchanged.20stuff.20in.20differential/near/258797336\">said</a>:</p>\n<blockquote>\n<p>I think the first question is whether constraints that aren't changes should be removed from the differential.</p>\n</blockquote>\n<p>As noted above, this is the way SUSHI operates, but it's also worth noting that there are some exceptions <em>required</em> by the IG Publisher.  For example, the <code>sliceName</code> element must be repeated in the differential if you constrain an inherited slice (even though you're not changing the sliceName).  And we just recently learned that although a slice \"inherits\" the constraints from its base, you <em>must</em> repeat constraints from the base in every slice in order for the validator to work correctly.</p>\n<p>So... if we were to suggest that differentials should only contain true differences, then we should also document the exceptions that require inclusion of non-different data due to limitations in the tooling.  (Actually, we should probably document those anyway).</p>",
        "id": 258952671,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1635165685
    },
    {
        "content": "<p>Should the tooling not do it's best to create a pure differential? As SUSHI is doing now. I think that the eld-1, that is incorrectly triggered, should be silenced here.</p>",
        "id": 260142341,
        "sender_full_name": "Matthijs van der Wielen",
        "timestamp": 1635950102
    }
]