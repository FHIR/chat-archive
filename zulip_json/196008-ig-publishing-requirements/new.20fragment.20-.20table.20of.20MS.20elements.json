[
    {
        "content": "<p>adding this to wish list see  <a href=\"#narrow/stream/179252-IG-creation/topic/table.20of.20MS.20elements.20being.20produced.3F\">https://chat.fhir.org/#narrow/stream/179252-IG-creation/topic/table.20of.20MS.20elements.20being.20produced.3F</a></p>",
        "id": 261886002,
        "sender_full_name": "Eric Haas",
        "timestamp": 1637210841
    },
    {
        "content": "<p>Within a profile?  Across all profiles?  To what purpose?  How is this distinct from the existing MS view?</p>",
        "id": 261931731,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637244708
    },
    {
        "content": "<p>across ig like this: <a href=\"https://hackmd.io/CdjEs6YKSI6fFACKqvCDRA\">https://hackmd.io/CdjEs6YKSI6fFACKqvCDRA</a> (but ignoring the flavors)</p>",
        "id": 261947343,
        "sender_full_name": "Eric Haas",
        "timestamp": 1637251243
    },
    {
        "content": "<p>And who's the consumer?  What's the use-case for this view?</p>",
        "id": 261951421,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637252772
    },
    {
        "content": "<p>the implementers who want to know what is must support,  the testers who want to test for must support.  and this is not a view this is a handy download like a csv or technical artifact.</p>",
        "id": 261962744,
        "sender_full_name": "Eric Haas",
        "timestamp": 1637257310
    },
    {
        "content": "<p>I would like a fragment produced but no view created like the lists</p>",
        "id": 261962898,
        "sender_full_name": "Eric Haas",
        "timestamp": 1637257364
    },
    {
        "content": "<p>I understand wanting to know it (and we have it already on a per profile basis), but I don't understand wanting to know it across all profiles...</p>",
        "id": 261997065,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637272693
    },
    {
        "content": "<p>for a typical IG it would be very long</p>",
        "id": 262001367,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637274764
    },
    {
        "content": "<p>And if your profiles exist in a hierarchy, there'd be a lot of redundancy too...<br>\nMy experience is that QA folks like the Excel views (which currently are already pre-filtered to the mustSupport elements)</p>",
        "id": 262005442,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637277137
    },
    {
        "content": "<p>yes it is a long table but is handy to have all the ms in one place if you are trying to review.  I will create for US Core and put in as a download and get feedback.</p>",
        "id": 262031249,
        "sender_full_name": "Eric Haas",
        "timestamp": 1637302584
    },
    {
        "content": "<p>I agree with Eric that having this information available in one page is useful</p>",
        "id": 262068747,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1637330169
    },
    {
        "content": "<p>Why MS and not other information?</p>",
        "id": 262082820,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637336452
    },
    {
        "content": "<p>I didn't say this was to the exclusion of other info -- but \"MS\" plus required elements is a pretty good way to get a handle on the minimu requirements for mapping data into a set of profiles.</p>",
        "id": 262083150,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1637336581
    },
    {
        "content": "<p>If we're going to a dump, why not just dump <em>all</em> of the metadata into a CSV/Excel file and people can then filter on what they want?</p>",
        "id": 262084153,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637336991
    },
    {
        "content": "<p>A super long HTML table is pretty useless, in my opinion...</p>",
        "id": 262084231,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637337007
    },
    {
        "content": "<p>unless you put some fancy javascript that allows people to filter on what they want...</p>",
        "id": 262105211,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1637345208
    },
    {
        "content": "<p>(which fwiw i don't think is a good solution for where things need to be \"printable\"...)</p>",
        "id": 262105322,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1637345263
    },
    {
        "content": "<p>You'll never hit the degree of 'fancy' that people get for free when the open it in Excel (or Google docs or whatever)</p>",
        "id": 262109268,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637346990
    },
    {
        "content": "<p>Or the degree of \"easy\" that people get for free when the content is right there in the spec. I thought we've long since agreed there is not one \"best for everyone\" way to present this material, so why not broadly enable the things editors want to use in their work?</p>",
        "id": 262109378,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1637347055
    },
    {
        "content": "<p>I'm not saying it shouldn't be produced in the spec.  I'm saying that a link to a CSV and/or Excel file is far more useful to everyone who's going to want a cross-artifact listing than an HTML table.  HTML tables are going to be too long, too wide and too limiting (regardless of what Javascript we throw at it).  If we have a downloadable file, I think there's zero utility to also having an HTML table.</p>",
        "id": 262111579,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637347873
    },
    {
        "content": "<blockquote>\n<p>I think there's zero utility to also having an HTML table.</p>\n</blockquote>\n<p>I hear this as \"zero utility for Lloyd\", but everyone gets to define their own utility function. I'm hearing Eric say <em>he finds utility</em>, which seems fair.</p>",
        "id": 262111932,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1637348006
    },
    {
        "content": "<p>otoh, we then get to argue about a bunch of things like, is this diff or snapshot based?</p>",
        "id": 262118810,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637350783
    },
    {
        "content": "<p>My question for Eric is whether his target users would find equal or more utility in a spreadsheet with all the information from all the models.  (I know all the testers and analysts I've worked with would.)</p>",
        "id": 262159954,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637379399
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>   Yes you are right the build already produces csv files for the profiles. ( which I forgot <span aria-label=\"rolling eyes\" class=\"emoji emoji-1f644\" role=\"img\" title=\"rolling eyes\">:rolling_eyes:</span> )  These would work for my use case if they were all appended together into one big csv .    So my request is a single downloadable artifact of one table with all the profiles.  I will create for US Core as an example and add as a downloadable artifact.  Thanks for digging into this.</p>\n<p>Also I am not really that interested in an html table although others may be</p>",
        "id": 262166237,
        "sender_full_name": "Eric Haas",
        "timestamp": 1637389100
    },
    {
        "content": "<p>A CSV export and an excel export and much more magic would be available with a bit of JavaScript. We don't need to build that functionality from scratch</p>",
        "id": 262170257,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1637395453
    },
    {
        "content": "<p>If we have a single CSV file we just throw it at a DataTable and the rest is done for us</p>",
        "id": 262170290,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1637395524
    },
    {
        "content": "<p>We could use Javascript magic, but given that the publisher can already spit them out, may as well let the publisher spit out the combined files too.  That'd be more elegant.  (And I'm not sure how to combine multiple Excel worksheets into one, removing excess header rows using Javascript...)</p>",
        "id": 262187989,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637420754
    },
    {
        "content": "<p>We want this for StructureDefinitions.  Do we want one file for everything?  One file for profiles and a separate one for logical models?  Do we want files for CodeSystems or ValueSet expansions too?</p>",
        "id": 262188049,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637420849
    },
    {
        "content": "<p>I added this feature in US Core - <a href=\"http://build.fhir.org/ig/HL7/US-Core/downloads.html\">http://build.fhir.org/ig/HL7/US-Core/downloads.html</a></p>\n<p>thanks again <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  for getting me to see this obvious solution and <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  for  making it so easy.</p>\n<p>my aggregation code is <a href=\"https://github.com/Healthedata1/MyNotebooks/blob/master/fhir_ig_csv_appender.ipynb\">here </a> - but assume is useless for the build since is all Pandas and Python.</p>\n<p>@GG I discovered a 2 deep issues: </p>\n<p>1) with the snapshot generator - my diff for US Core Organization I had a redundant mapping and it resulted in a repeated mapping in the snapshot....</p>\n<div class=\"codehilite\" data-code-language=\"YAML\"><pre><span></span><code><span class=\"c1\"># ==== US Core Organization profile snapshot for Organization.identifier element =====</span>\n      <span class=\"nt\">mustSupport</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n      <span class=\"nt\">isModifier</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">false</span>\n      <span class=\"nt\">isSummary</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n      <span class=\"nt\">mapping</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"nt\">identity</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">w5</span>\n          <span class=\"nt\">map</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">FiveWs.identifier</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"nt\">identity</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">v2</span>\n          <span class=\"nt\">map</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">XON.10 / XON.3</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"nt\">identity</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">rim</span>\n          <span class=\"nt\">map</span><span class=\"p\">:</span> <span class=\"s\">'.scopes[Role](classCode=IDENT)'</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"nt\">identity</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">servd</span> <span class=\"c1\">#&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Repeats !</span>\n          <span class=\"nt\">map</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">./Identifiers</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"nt\">identity</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">servd</span> <span class=\"c1\">#&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; Repeats !</span>\n          <span class=\"nt\">map</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">n/a</span>\n   <span class=\" -Error\"> </span><span class=\"p p-Indicator\">-</span> <span class=\"nt\">id</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Organization.identifier.id</span>\n      <span class=\"nt\">path</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Organization.identifier.id</span>\n<span class=\"c1\">#...</span>\n<span class=\"c1\"># ==== US Core Organization profile diff for Organization.identifier element =====</span>\n  <span class=\" -Error\"> </span><span class=\"p p-Indicator\">-</span> <span class=\"nt\">id</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Organization.identifier</span>\n      <span class=\"l l-Scalar l-Scalar-Plain\">path</span><span class=\"p p-Indicator\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Organization.identifier</span>\n      <span class=\"l l-Scalar l-Scalar-Plain\">slicing</span><span class=\"p p-Indicator\">:</span>\n        <span class=\"nt\">discriminator</span><span class=\"p\">:</span>\n          <span class=\"p p-Indicator\">-</span> <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">pattern</span>\n            <span class=\"nt\">path</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">$this</span>\n        <span class=\"nt\">rules</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">open</span>\n     <span class=\" -Error\"> </span><span class=\"nt\">comment</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">NPI preferred.</span>\n      <span class=\"nt\">mustSupport</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">true</span>\n      <span class=\"nt\">mapping</span><span class=\"p\">:</span>  <span class=\"c1\">#&lt;&lt;&lt;&lt;&lt;&lt; redundant mapping in the diff</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"nt\">identity</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">servd</span>\n          <span class=\"nt\">map</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">n/a</span>\n<span class=\"c1\"># ....</span>\n</code></pre></div>\n<p>2) the data doesn't seem to match the header in the columns starting at or around column 27:</p>\n<p><a href=\"/user_uploads/10155/SIwkBZFYmTmSLQpjDhjBCpak/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/SIwkBZFYmTmSLQpjDhjBCpak/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/SIwkBZFYmTmSLQpjDhjBCpak/image.png\"></a></div><p>Github issues?</p>",
        "id": 262202483,
        "sender_full_name": "Eric Haas",
        "timestamp": 1637439514
    },
    {
        "content": "<p>Can you submit a Git issue for us to add it to the publisher in general?</p>",
        "id": 262215839,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637459283
    }
]