[
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span> can you provide a list of all the fields in US Core that have a minimum cardinality or must-support that creates problems for your work please?</p>",
        "id": 188004295,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581509702
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  The only US Core profiles we use in mCODE are US Core Condition, US Core Observation Lab, US Core Diagnostic Report, US Core Patient, and US Core Procedure.  On US Core Patient, mCODE doesn't care about these MS elements: communication.language, address.line, .city, .state, .period, contact, race.text.  On US Core Diagnostic Report, we don't want to require the user to implement US Core Organization (referenced in DiagnosticReport.performer). The other MS flags are pretty minimal and don't create additional burden on the mCODE user.</p>",
        "id": 188019606,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1581521144
    },
    {
        "content": "<p>ok thanks.</p>",
        "id": 188044839,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581535610
    },
    {
        "content": "<p>specifically, why do you not require US Patient? I understand that mCode mightn't have it's own requirements for those things, but if those are general regulation based requirements, why not have them anyway? is mCode international?</p>",
        "id": 188044947,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581535680
    },
    {
        "content": "<p>mCODE is US realm, and we do require US Core Patient. However, mCODE for its own purposes doesn't need communication, address, etc (as above). If mCODE had the ability to independently assign its own MS flags, these would not be MS.</p>",
        "id": 188460449,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1582039909
    },
    {
        "content": "<p>Why US Core organization a problem.  It's name, Identifier, phone and address?</p>",
        "id": 188489914,
        "sender_full_name": "Eric Haas",
        "timestamp": 1582059235
    },
    {
        "content": "<p>And is this pushback from the implementers or from the profilers/modelers perspective?</p>",
        "id": 188490120,
        "sender_full_name": "Eric Haas",
        "timestamp": 1582059357
    },
    {
        "content": "<blockquote>\n<p>If mCODE had the ability to independently assign its own MS flags, these would not be MS.</p>\n</blockquote>\n<p>I'm thinking about that. If US-Core labels something as must-support, and you use it, what would it mean not to make it must-support?</p>\n<ul>\n<li>it seems to me that this implies that US-Core has a divergent use case?</li>\n</ul>",
        "id": 188490955,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582059960
    },
    {
        "content": "<p>For example, mCODE doesn't need the details  of the patient address, aside from the postal code, because of our use case is learning health care system. We aren't trying to contact the patient. US Core seems to assume that the patient is being treated in a health care system. The address information will probably be available, it is not harmful, but I'm only saying we don't need it.</p>",
        "id": 188540665,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1582116417
    },
    {
        "content": "<p>So the cost of inheriting the mustSupport on the other components is that a system that's <em>only</em> being created for the purpose of mCode is being asked to do things that are unnecessary.</p>",
        "id": 188559064,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582129230
    },
    {
        "content": "<blockquote>\n<p>asked to do things that are unnecessary.</p>\n</blockquote>\n<p>I think you often pay a price up front for supporting a standard.</p>\n<p>I'd really like to know if we are making a correct assumption ... are implementers balking because of US Core?  Sounds like the burden falls on the mCode Sender or Responder.  The Receiver can just ignore whatever it does  not care about.   One view is these things are unnecessary and a burden but another implementer might already be set up for US Core so benefits from reuse.</p>",
        "id": 188592220,
        "sender_full_name": "Eric Haas",
        "timestamp": 1582150959
    },
    {
        "content": "<blockquote>\n<p>The Reciever can just ignore whatever it does not care about.</p>\n</blockquote>\n<p>But that's exactly what must-support is about.</p>",
        "id": 188592277,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582151010
    },
    {
        "content": "<p>\"US Core Requestors SHALL be capable of processing resource instances containing the data elements without generating an error or causing the application to fail. In other words US Core Requestors SHOULD be capable of displaying the data elements for human use or storing it for other purposes.\"</p>",
        "id": 188592396,
        "sender_full_name": "Eric Haas",
        "timestamp": 1582151110
    },
    {
        "content": "<p>wooah. The \"in other words\" is actually, not just an alternative set of words - it says something quite different. And the difference is very relevant to this dsicussion</p>",
        "id": 188592653,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582151288
    },
    {
        "content": "<p>Yes 'in other words'  reads  'and'. </p>\n<ol>\n<li>don't fail</li>\n<li>you should process it.  -  Its purposefully ambiguous as to what to do with the data since we anticipated a wide variety of clients and uses</li>\n</ol>",
        "id": 188593148,
        "sender_full_name": "Eric Haas",
        "timestamp": 1582151635
    },
    {
        "content": "<p>We are facing similar issues with the Patient, Practitioner and other admin resources while developing the Canadian Core FHIR profiles. We consider defining 2 Canadian profiles for each of these resource: a relaxed one (with minimal constraints) for systems were these resources are used as supporting information (e.g. prescriber and dispenser in a pharmacy systems) and a constrained one for systems that are used as a source of truth for this information (e.g. Patient or Provider Registry).â€© For example, for a general Practitioner profile, we would define only name and identifier as Must Support where one instance of the identifier has to be an equivalent of NPI, but for the source of truth system (e.g. Provider registry), we would define a bunch of additional Must Support elements as well as required search parameters.</p>",
        "id": 188594255,
        "sender_full_name": "Igor Sirkovich",
        "timestamp": 1582152416
    },
    {
        "content": "<p>Essentially, the \"mustSupport\" wording in US core is currently next to meaningless.</p>",
        "id": 188597122,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582155254
    },
    {
        "content": "<p>\"Don't blow up if data is present\" is an exceptionally low must support bar.</p>",
        "id": 188597154,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582155287
    },
    {
        "content": "<p>It doesn't even say you have to accept the instance - rejecting it in a friendly manner would still seem to be conformant.</p>",
        "id": 188597196,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582155333
    },
    {
        "content": "<blockquote>\n<p>Essentially, the \"mustSupport\" wording in US core is currently next to meaningless.</p>\n</blockquote>\n<p>for the Receiver is a pretty low bar,  no so for the Sender (Responder) 80% of the MustSupport describes the server requirements.</p>",
        "id": 188598316,
        "sender_full_name": "Eric Haas",
        "timestamp": 1582156429
    },
    {
        "content": "<p>Ask any system getting certified</p>",
        "id": 188598380,
        "sender_full_name": "Eric Haas",
        "timestamp": 1582156475
    },
    {
        "content": "<p>Another thing that's in play here is timing. It is not clear when US systems must certify as US Core compliant (2 years? 3 years?). But systems are implementing mCODE now. Using US Core as a base for mCODE is good citizenship, but also a bit forward-looking for vendors only looking to implement mCODE right NOW.</p>",
        "id": 188691227,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1582242329
    }
]