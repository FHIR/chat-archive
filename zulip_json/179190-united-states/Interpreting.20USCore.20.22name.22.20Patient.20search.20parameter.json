[
    {
        "content": "<p>I am trying to figure out exactly how the Patient \"name\" search parameter would/should be used by a user and interpreted by a server.  If I were trying to find a patient \"John Smith\", I'd imagine I'd want to search by family and given explicitly (which we are planning on supporting) by doing something like \"/Patient?family=Smith&amp;given=John\"  The USCore spec dictates that a \"name=Smith\" search would/could search all parts of HumanName, meaning you'd get a patient whose family=Smith OR given=Smith OR suffix=Smith (since this is a \"server-defined\" text search, we will probably just limit to family and given).  But how would/should a \"name=John%20Smith\" or \"name=Smith\\,John\" search be handled?  It seems like there is not enough guidance on this.  What are other systems doing?  And if interpreting a \"name\" search can be left up to an individual server's discretion, how useful is it really, given the point of FHIR is allowing an application to build an integration once and reuse it everywhere... it seems that \"name\" search would become a lot less useful if it behaved differently on each system.</p>",
        "id": 241410099,
        "sender_full_name": "Aaron Moronez",
        "timestamp": 1622735185
    },
    {
        "content": "<p>No. I think the instruction is pretty clear in FHIR base spec. If you search name=John%20Smith, the server will match \"John Smith\" in </p>\n<blockquote>\n<p>any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text</p>\n</blockquote>\n<p><a href=\"http://hl7.org/fhir/patient.html#search\">http://hl7.org/fhir/patient.html#search</a></p>",
        "id": 241411556,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1622735832
    },
    {
        "content": "<p>in the <a href=\"http://build.fhir.org/ig/HL7/US-Core/StructureDefinition-us-core-patient.html#mandatory-search-parameters\">Quick Start for Patient</a> we have:</p>\n<p><a href=\"/user_uploads/10155/_PJ808x7Zoci3sNdXg0n9VHh/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/_PJ808x7Zoci3sNdXg0n9VHh/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/_PJ808x7Zoci3sNdXg0n9VHh/image.png\"></a></div><p>if  there is anything more that would make it clearer you can submit a tracker. Link at the bottom of any page in US Core.</p>",
        "id": 241413881,
        "sender_full_name": "Eric Haas",
        "timestamp": 1622736853
    },
    {
        "content": "<p>I am more interested in how people are interpreting \"It is at the discretion of the server whether to pre-process names, addresses, and contact details to remove separator characters prior to matching in order to ensure more consistent behavior. For example, a server might remove all spaces and - characters from phone numbers. What is most appropriate varies depending on culture and context. A server may also use a free-text style searches on this property to achieve the best results.<br>\nWhen searching whole names and addresses (not parts), servers may also use flexible match or a free-text style searches on names to achieve the best results.\" from <a href=\"http://hl7.org/fhir/R4/search.html#string\">http://hl7.org/fhir/R4/search.html#string</a> which seems to be the source of ambiguity in my mind.  Taking the name field verbatim and just matching the HumanName elements against \"John Smith\" would return nothing, indeed, since none of the fields would match.</p>",
        "id": 241413931,
        "sender_full_name": "Aaron Moronez",
        "timestamp": 1622736882
    },
    {
        "content": "<p>Is anyone actually interpreting the \"name\" field flexibly and doing something intelligent based on its contents, or are people just taking it verbatim and matching as-is to each HumanName element (which will likely not be fruitful) because doing otherwise is too difficult to get done in time for meeting deadlines?</p>",
        "id": 241414971,
        "sender_full_name": "Aaron Moronez",
        "timestamp": 1622737328
    },
    {
        "content": "<p>Our server takes it verbatim and matches it against first / last / middle name. Not a matter of deadlines, implementation choice</p>",
        "id": 241415546,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1622737586
    },
    {
        "content": "<p>As a note, the <code>name</code> search parameter isn't defined in US Core, it's defined in the core spec (see <a href=\"http://hl7.org/fhir/patient.html#search\">Patient - Search Parameters</a>).  US Core just flags that servers must support it, which is important to keep in mind since the definition is applied internationally.</p>\n<p>Overall, I believe it's described as server dependent because it needs to be.  In some regions the custom is \"FamilyName GivenName\", in other regions it is \"GivenName FamilyName\", and there are a lot of variations within those (e.g., reversing the order by adding a comma).  Trying to codify the rules for parsing that would not go well.</p>\n<p>If a client wants to search with multiple name parts and doesn't know which is supposed to be which, it should submit a search along the lines of <del>either</del> <code>name=Smith&amp;name=John</code> <del>or <code>name=Smith$John</code></del> (see: <a href=\"https://www.hl7.org/fhir/search.html#combining\">Composite Search Parameters</a>) to get the most consistent results.</p>",
        "id": 241418704,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1622739025
    },
    {
        "content": "<p>Good points.  As a clarification, I believe composite syntax can only be used search params of type <code>composite</code>, and <code>name</code> is a <code>string</code> type.  We will probably go with supporting multipleAnd for <code>name</code> (although that's a MAY requirement as far as USCore goes: <a href=\"https://www.hl7.org/fhir/us/core/SearchParameter-us-core-patient-name.html\">https://www.hl7.org/fhir/us/core/SearchParameter-us-core-patient-name.html</a>).  It'll be interesting to see how useful that field turns out to be if more systems decide to not support it than do.</p>",
        "id": 241431032,
        "sender_full_name": "Aaron Moronez",
        "timestamp": 1622744117
    },
    {
        "content": "<p><span aria-label=\"face palm\" class=\"emoji emoji-1f926\" role=\"img\" title=\"face palm\">:face_palm:</span>  the first syntax is legal and I'll strike the second, thanks.  It looks like we need to clean up that section, as some of the text describes the <code>composite</code> type and some is discussing the general syntax of joining search parameters.</p>",
        "id": 241434521,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1622745769
    },
    {
        "content": "<p>For reference, <a href=\"http://jira.hl7.org/browse/FHIR-32851\">FHIR#32851</a>, <a href=\"http://jira.hl7.org/browse/FHIR-32852\">FHIR#32852</a>.</p>",
        "id": 241439186,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1622747901
    },
    {
        "content": "<p><code>name=Smith,John</code> should work - if you want OR</p>",
        "id": 241439348,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1622748000
    },
    {
        "content": "<p>Yes - if you want AND <code>name=Smith&amp;name=John</code> should work, correct?  Though it would also likely match things like \"Andrea Smith-Johnson\".</p>",
        "id": 241439794,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1622748216
    },
    {
        "content": "<p>Mhh, no, it won't match that - default string comparison is 'starts with'</p>",
        "id": 241444924,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1622750534
    },
    {
        "content": "<p>Interesting Michele - and since <code>HumanName.family</code> is <code>0..1</code>, you can't separate hyphenated names into distinct values either (had not given this any thought previously).  Thanks for all the info.</p>",
        "id": 241447661,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1622751844
    },
    {
        "content": "<p>Of course you can do <code>name:contains=John</code> and that will match <code>Smith-Johnson</code> (and a lot of other things!)</p>",
        "id": 241462267,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1622757939
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"396744\">Aaron Moronez</span> <a href=\"#narrow/stream/179190-united-states/topic/Interpreting.20USCore.20.22name.22.20Patient.20search.20parameter/near/241413931\">said</a>:</p>\n<blockquote>\n<p>Taking the name field verbatim and just matching the HumanName elements against \"John Smith\" would return nothing, indeed, since none of the fields would match.</p>\n</blockquote>\n<p>HumanName.text could have matched text.</p>",
        "id": 241466090,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1622760374
    }
]