[
    {
        "content": "<p>Hi. We are going to have a scheduled backend worker that gets all FHIR Patient resources from a FHIR API R4 source or updates that data if there is some updates and stores the data locally (S3). We need that data for Clinical Quality Measures done by cql-execution (JS library). I apprisiate any help to get an idea how to imlement the first part (get/update FHIR resources and store locally). Is there any available tools for that? Thanks!</p>",
        "id": 222975409,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1610795320
    },
    {
        "content": "<p>Is it about Subscription to updates of resources? FHIR Server implementations support it. If you have your own, you may need to implement it - unless I misunderstood the question.</p>",
        "id": 223467305,
        "sender_full_name": "Iryna Roy",
        "timestamp": 1611201252
    },
    {
        "content": "<p>Hi, <span class=\"user-mention\" data-user-id=\"191416\">@Iryna Roy</span><br>\nWell I didn't know that FHIR supports \"Subscription to updates of resources\". Thanks, it can be helpful for our research :)</p>\n<p>Let me try to explain what we are trying to do:<br>\nOur goal is to run CQL against a FHIR Data Source using cql-exec-fhir and cql-execution (JS libraries). The FHIR Data Source expects each patient to be represented as a single FHIR Bundle containing all of the patient's relevant data. First of all we need to export data from  FHIR APIs and store it I believe localy as .json files. Existing FHIR APIs work well for accessing small amounts of data, but large exports can require hundreds of thousands of requests. There is standardized, FHIR based approach for exporting bulk data from a FHIR server usign another JS library called fhir-downloader. Using fhir-downloader you can perform Patient-level export or System-level export as .ndjson files. Here you go. We have all Patient's relevant data stored localy as ndjson files. Next step is to convert ndjson files to FHIR Bundle. At this point it is a question on how to convert. Finally we can run CQL</p>",
        "id": 223485249,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1611221325
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"376706\">@Vasyl Herman</span> Can you store data in FHIR Server instead of json files and run CQL against data in the server? <a href=\"http://build.fhir.org/ig/cqframework/payerextract/implementation-documentation.html\">http://build.fhir.org/ig/cqframework/payerextract/implementation-documentation.html</a>  I am honestly just a high-level CQL aware, there are some interesting works related to the use of Subscriptions and CQL execution but it is not through the use of the libraries you mentioned.</p>",
        "id": 223554354,
        "sender_full_name": "Iryna Roy",
        "timestamp": 1611255367
    },
    {
        "content": "<p>Next release of HAPI FHIR promisses something related to CQL <a href=\"https://www.smilecdr.com/quarterly-product-release-webinar-reminder\">https://www.smilecdr.com/quarterly-product-release-webinar-reminder</a></p>",
        "id": 223557586,
        "sender_full_name": "Iryna Roy",
        "timestamp": 1611256856
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191416\">Iryna Roy</span> <a href=\"#narrow/stream/179219-analytics-on.20FHIR/topic/Get.2Fupdate.20all.20the.20resources.20from.20FHIR.20source/near/223554354\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"376706\">Vasyl Herman</span> Can you store data in FHIR Server instead of json files and run CQL against data in the server? </p>\n</blockquote>\n<p>It would be awesome. At this point I am not aware of any other ways for performing health quality measures. Looks like the <a href=\"http://build.fhir.org/ig/cqframework/payerextract/implementation-documentation.html\">mentieoned document</a> promises exactly what I need. <br>\nSo, an analyst would pass in a clq file an get the result.</p>",
        "id": 223561581,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1611258618
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"376706\">@Vasyl Herman</span> , yes, there is a java-based CQL engine that can be plugged in to the HAPI FHIR server via the <a href=\"https://github.com/dbcg/cqf-ruler\">CQF Ruler extension</a>, that is what we use in the Clinical Reasoning track of the connectathon to run quality measures. The same components are also used to support file-based CQL/FHIR evaluation in the <a href=\"https://github.com/cqframework/atom_cql_support\">Atom CQL Plugin</a>, and have also been used as part of a Spark pipeline.</p>",
        "id": 223830661,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1611516493
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> Thank you for valuable information! Have you ever used AWS Glue to work with FHIR Bulk data? Or other services/tools available for processing/analizing Bulk?</p>",
        "id": 223832173,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1611518120
    },
    {
        "content": "<p>I haven't, but maybe <span class=\"user-mention\" data-user-id=\"194178\">@Jonathan Percival</span>, any thoughts on AWS Glue?</p>",
        "id": 223832245,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1611518194
    },
    {
        "content": "<p>I am wondering how you guys export data from HAPI FHIR and if it possible to run CQL against that dataset localy. Fhir Bulk data access is one of the way of exporting. Or you export Patient by Patient using API requests?</p>",
        "id": 223832453,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1611518463
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span><br>\nBtw, you are saying about file-based CQL/FHIR evaluation. What is the input data? .ndjson files ot Patient bundles?</p>",
        "id": 223832718,
        "sender_full_name": "Vasyl Herman",
        "timestamp": 1611518749
    },
    {
        "content": "<p>Currently it can be individual files or bundles, but expanding it to ndjson would be straightforward.</p>",
        "id": 223834645,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1611521113
    },
    {
        "content": "<p>The Java-based CQL engine has a data access interface, and when it's running in the HAPI server, the implementation for that interface uses the JPA layer.</p>",
        "id": 223834707,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1611521165
    },
    {
        "content": "<p>I actually haven't messed with Glue so I can't say how to it compares to other ETL tools or if works well with FHIR.</p>",
        "id": 223949947,
        "sender_full_name": "JP",
        "timestamp": 1611604027
    }
]