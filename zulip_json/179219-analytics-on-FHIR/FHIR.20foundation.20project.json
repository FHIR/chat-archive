[
    {
        "content": "<blockquote>\n<p>I'm not sure that this work sits nicely in HL7. And there'd be an overhead for HL7. The Foundation would have lower overhead, and is a better home for code etc</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  is there any information about FHIR foundation projects - how it works?</p>",
        "id": 153987528,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1534421739
    },
    {
        "content": "<p>It would be nice to start weekly calls? Who is interested? What day and time?</p>",
        "id": 153987536,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1534422957
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191318\">@nicola (RIO/SS)</span> , I am interested, Mondays are usually good for me, but open to whenever.</p>",
        "id": 153987648,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1534442506
    },
    {
        "content": "<p>I'm definitely interested. If there is a time that works during business hours of US/Pacific I could probably make that work, but don't mind the off-hour calls if necessary as well.</p>",
        "id": 153988504,
        "sender_full_name": "Ryan Brush",
        "timestamp": 1534531420
    },
    {
        "content": "<p>I'll also contribute the scenarios. Does \"User-friendly standard SQL across very large FHIR datasets\" seem like an appropriate scope for that? Or should each scenario be targeted at a more specific use case?</p>",
        "id": 153988505,
        "sender_full_name": "Ryan Brush",
        "timestamp": 1534531511
    },
    {
        "content": "<blockquote>\n<p>I'm definitely interested. If there is a time that works during business hours of US/Pacific I could probably make that work, but don't mind the off-hour calls if necessary as well.</p>\n</blockquote>\n<p>Hi! Grigory from Health Samurai.</p>\n<p>I’ll take care about all the administrative part of future Connectathon track or Foundation or whatever related to Storage &amp; Analytics.<br>\nHow about to take a conference call to define our need , proposals, justifications?</p>\n<p>Please provide me exact timeframe during the next week day by day. So I well be able to compare the availability and define the day and time for call between the interested people.</p>",
        "id": 153989222,
        "sender_full_name": "Grigory Nokhrin",
        "timestamp": 1534706554
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"196502\">@Grigory Nokhrin</span> can you provide something like <a href=\"https://doodle.com/polling-tool\" target=\"_blank\" title=\"https://doodle.com/polling-tool\">https://doodle.com/polling-tool</a></p>",
        "id": 153989444,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1534752526
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"196502\">@Grigory Nokhrin</span> can you provide something like <a href=\"https://doodle.com/polling-tool\" target=\"_blank\" title=\"https://doodle.com/polling-tool\">https://doodle.com/polling-tool</a></p>\n</blockquote>\n<p>For sure.</p>\n<p><a href=\"https://doodle.com/poll/34wix33u5y7ycnab\" target=\"_blank\" title=\"https://doodle.com/poll/34wix33u5y7ycnab\">https://doodle.com/poll/34wix33u5y7ycnab</a></p>\n<p><strong>Please vote for the time that suits you best for conference call.</strong></p>",
        "id": 153989445,
        "sender_full_name": "Grigory Nokhrin",
        "timestamp": 1534754561
    },
    {
        "content": "<p>+1</p>",
        "id": 153989664,
        "sender_full_name": "Michael van der Zel",
        "timestamp": 1534799580
    },
    {
        "content": "<p>Sounds good! I went ahead and posted on the Doodle as well, but can probably make other times work if none of the current times do. Thanks for setting that up!</p>",
        "id": 153989677,
        "sender_full_name": "Ryan Brush",
        "timestamp": 1534802858
    },
    {
        "content": "<p><a href=\"http://meet.google.com/ond-rsha-bfj\" target=\"_blank\" title=\"http://meet.google.com/ond-rsha-bfj\">meet.google.com/ond-rsha-bfj</a></p>\n<p>Feel free to join the call in 30 minutes.</p>\n<p>We will talk about 19th Connectathon track “Storage &amp; Analytics”</p>\n<p>BTW. If you're checking Zulip not so often or not getting the notifications, then maybe we can coordinate our conversations any other way? WhatsApp group chat?</p>\n<p><a href=\"https://chat.whatsapp.com/AeZYpzVd0UoDkESPUX2k5M\" target=\"_blank\" title=\"https://chat.whatsapp.com/AeZYpzVd0UoDkESPUX2k5M\">https://chat.whatsapp.com/AeZYpzVd0UoDkESPUX2k5M</a></p>",
        "id": 153990441,
        "sender_full_name": "Grigory Nokhrin",
        "timestamp": 1535038438
    },
    {
        "content": "<p>Here is google calendar for meetings - <a href=\"https://calendar.google.com/calendar?cid=aGVhbHRoLXNhbXVyYWkuaW9fOGVxZDgxdm1tNDRpNnNpZmI3aHRtaDdoaWdAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ\" target=\"_blank\" title=\"https://calendar.google.com/calendar?cid=aGVhbHRoLXNhbXVyYWkuaW9fOGVxZDgxdm1tNDRpNnNpZmI3aHRtaDdoaWdAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ\">https://calendar.google.com/calendar?cid=aGVhbHRoLXNhbXVyYWkuaW9fOGVxZDgxdm1tNDRpNnNpZmI3aHRtaDdoaWdAZ3JvdXAuY2FsZW5kYXIuZ29vZ2xlLmNvbQ</a></p>",
        "id": 153990962,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1535366802
    },
    {
        "content": "<p>If time is not convenient for you - let's discuss here</p>",
        "id": 153990964,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1535367024
    },
    {
        "content": "<p>Last connectathon I used a tool - VonkLoader - to upload data to my own FHIR server Vonk. Mainly Synthea collection bundles. I promised to see if we could publish the tool to the community. We did. If you had not found it yourself yet, you can get it from Simplifier: <a href=\"https://simplifier.net/downloads\" target=\"_blank\" title=\"https://simplifier.net/downloads\">https://simplifier.net/downloads</a>. <br>\nDocumentation is here: <a href=\"http://docs.simplifier.net/vonkloader/index.html\" target=\"_blank\" title=\"http://docs.simplifier.net/vonkloader/index.html\">http://docs.simplifier.net/vonkloader/index.html</a><br>\nIt is free to use, but there is no official support. You can ask questions here of course.</p>",
        "id": 153991189,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1535437272
    },
    {
        "content": "<p>Can your loader load directly into database?</p>",
        "id": 153991199,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1535444298
    },
    {
        "content": "<p>31 aug meeting notes:</p>\n<p>Work on scenarios for track:</p>\n<p>* loaders (bulk api)<br>\n  * sql on FHIR (postgresql, spark, bigquery)<br>\n  * fhirpath in database<br>\n  * more</p>\n<p>Specify scenarios on github issues - <a href=\"https://github.com/fhir-fuel/fhir-storage-and-analytics-track/issues\" target=\"_blank\" title=\"https://github.com/fhir-fuel/fhir-storage-and-analytics-track/issues\">https://github.com/fhir-fuel/fhir-storage-and-analytics-track/issues</a><br>\nWork on track definition - <a href=\"http://wiki.hl7.org/index.php?title=201809_FHIR_Storage_and_Analytics\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=201809_FHIR_Storage_and_Analytics\">http://wiki.hl7.org/index.php?title=201809_FHIR_Storage_and_Analytics</a></p>\n<p>Different types of scenarios from tutorials to top level </p>\n<p>Book room for discussion \"SQL on FHIR\" (<span class=\"user-mention\" data-user-id=\"193657\">@Ryan Brush</span>  provides proposal for SQL on FHIR)</p>\n<p>Use synthea dataset as default</p>\n<p><span class=\"user-mention\" data-user-id=\"191318\">@nicola (RIO/SS)</span> is track leader</p>\n<p>Next meeting <a href=\"https://calendar.google.com/event?action=TEMPLATE&amp;tmeid=MWFpbWRvbWEwcmIybThnbmt1OGlyaTRvdXNfMjAxODA5MDZUMTYwMDAwWiBoZWFsdGgtc2FtdXJhaS5pb184ZXFkODF2bW00NGk2c2lmYjdodG1oN2hpZ0Bn&amp;tmsrc=health-samurai.io_8eqd81vmm44i6sifb7htmh7hig%40group.calendar.google.com&amp;scp=ALL\" target=\"_blank\" title=\"https://calendar.google.com/event?action=TEMPLATE&amp;tmeid=MWFpbWRvbWEwcmIybThnbmt1OGlyaTRvdXNfMjAxODA5MDZUMTYwMDAwWiBoZWFsdGgtc2FtdXJhaS5pb184ZXFkODF2bW00NGk2c2lmYjdodG1oN2hpZ0Bn&amp;tmsrc=health-samurai.io_8eqd81vmm44i6sifb7htmh7hig%40group.calendar.google.com&amp;scp=ALL\">https://calendar.google.com/event?action=TEMPLATE&amp;tmeid=MWFpbWRvbWEwcmIybThnbmt1OGlyaTRvdXNfMjAxODA5MDZUMTYwMDAwWiBoZWFsdGgtc2FtdXJhaS5pb184ZXFkODF2bW00NGk2c2lmYjdodG1oN2hpZ0Bn&amp;tmsrc=health-samurai.io_8eqd81vmm44i6sifb7htmh7hig%40group.calendar.google.com&amp;scp=ALL</a></p>",
        "id": 153992029,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1535664784
    },
    {
        "content": "<p>No, it targets a FHIR server. It even starts by requesting its capabilitystatement to check the endpoint.</p>",
        "id": 153992273,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1535706604
    },
    {
        "content": "<p>Some reading material that i think is relevant for these discussions: <a href=\"http://www.healthintersections.com.au/?p=2824\" target=\"_blank\" title=\"http://www.healthintersections.com.au/?p=2824\">http://www.healthintersections.com.au/?p=2824</a> and (if you have a lot of time) <a href=\"#narrow/stream/4-implementers/topic/JSON.20Format.20for.20Primitives.20.26.20extensions\" title=\"#narrow/stream/4-implementers/topic/JSON.20Format.20for.20Primitives.20.26.20extensions\">https://chat.fhir.org/#narrow/stream/4-implementers/topic/JSON.20Format.20for.20Primitives.20.26.20extensions</a></p>",
        "id": 153992460,
        "sender_full_name": "Patrik Sundberg",
        "timestamp": 1535764508
    },
    {
        "content": "<p>As discussed on the August 31 call, I wanted to start discussion with a straw-man proposal for analytic workloads via \"SQL on FHIR\". You can find that proposal here (although we can easily move it to a collaborative repository elsewhere):</p>\n<p><a href=\"https://github.com/rbrush/sql-on-fhir/blob/master/sql-on-fhir.md\" target=\"_blank\" title=\"https://github.com/rbrush/sql-on-fhir/blob/master/sql-on-fhir.md\">https://github.com/rbrush/sql-on-fhir/blob/master/sql-on-fhir.md</a></p>\n<p>This proposal focuses on the schema and views provided to SQL users -- which may or may not be a direct reflection of the underlying physical model. There are tradeoffs here, but I think it's important that we provide our SQL users with a model that strongly matches their intuitions.  We have a lot of users working through a variety of statistical analyses of healthcare data, and I would very much like to have them do so on FHIR-based data models. This gives them access to a much broader dataset than they have had historically, enables more portable and reproducible analysis, and makes the results of such analysis much easier to implement in any system that speaks FHIR. This could be a significant gain for the creation and application of new knowledge.</p>\n<p>However, this only works if we can bring this class of analyst and researcher on board to using FHIR-based data for their needs. Therefore the proposal in this document prefers offering a simpler view for the 99% case (such as primitives that do not have extensions) to make this an appealing environment for their work. It may be convenient for underlying physical storage to follow the same pattern, but that is not required.</p>\n<p>In any case, my goal here is simply to offer a more concrete basis to start the conversation -- so feedback and suggestions are strongly desired!</p>",
        "id": 153993028,
        "sender_full_name": "Ryan Brush",
        "timestamp": 1536078132
    },
    {
        "content": "<p>Great writeup, thanks a lot for that. At a high level I agree with generating a schema from a profile, and in particular using the extension slices in that profile to simplify use of extensions. I also agree with keeping choice types as structs, which is sort of what FHIRPath does. Two items for discussion:<br>\n- should we handle references differently in some way? joining across resources is cumbersome with the standard representation<br>\n- decimal as VARCHAR vs DECIMAL: switching to a numeric type means we can't go back from SQL to FHIR without loss of knowledge of precision. That's worth noting.<br>\n-  why store date/datetime/time as VARCHAR? to retain knowledge of timestamp precision?<br>\n- other fields can be sliced; how do we handle that? worth a section. i think slicing is actually a great assert for the SQL representation.</p>\n<p>at a high level, we need to decide if  we expect to be able to round trip from FHIR to SQL and back in a lossless manner, or if we're giving that up.</p>",
        "id": 153993095,
        "sender_full_name": "Patrik Sundberg",
        "timestamp": 1536084616
    },
    {
        "content": "<p>Great questions. A few initial thoughts here:</p>\n<ul>\n<li>should we handle references differently in some way? joining across resources is cumbersome with the standard representation</li>\n</ul>\n<p>Good idea. Perhaps we generate an additional field that sits in the Reference structure that that can be equi-joined to other resources? Maybe something like subject.patient_reference in the generated SQL schema, so the type of the reference is clear from the field?</p>\n<ul>\n<li>decimal as VARCHAR vs DECIMAL: switching to a numeric type means we can't go back from SQL to FHIR without loss of knowledge of precision. </li>\n</ul>\n<p>Agreed this is worth noting, but I think this tradeoff is worthwhile for SQL users. We had a similar system where we kept these as strings, and users would use comparison operators without realizing these numbers were still strings...leading to bad results. I think this justifies the lack of clarity in precision here.</p>\n<ul>\n<li>why store date/datetime/time as VARCHAR? to retain knowledge of timestamp precision?</li>\n</ul>\n<p>Yes, this retains knowledge of precision and avoids ambiguity in timestamp fields. If we get 2018-09-01 in a datetime field but encode it as 2018-09-01T00:00:00 in a timestamp, we don't know if the source really meant midnight or just that day. Unlike the conversion to DECIMAL, this is less prone to induce hidden user error...but we can discuss the tradeoffs further.</p>\n<ul>\n<li>other fields can be sliced; how do we handle that? worth a section. i think slicing is actually a great assert for the SQL representation.</li>\n</ul>\n<p>I hadn't thought through how we'd handle this yet, but agree it makes a lot of sense. (I'd much rather be able to reference .systolic and .diastolic fields rather than using some external reference to know they are [0] and [1] in some array...) Let's see if we can find a way to add this.</p>",
        "id": 153993120,
        "sender_full_name": "Ryan Brush",
        "timestamp": 1536087940
    },
    {
        "content": "<p>As for lossless bi-directional conversion: I think we should aim for this, but there are likely to be edge cases where that isn't practical, such as recursive structures of unbounded depth or nested resources.  I think we should aim for lossless conversion in all cases possible, and make sure the exceptions are well defined and documented</p>\n<p>Users who need strong lossless guarantees can use this proposal merely as a <em>view</em> of underlying data, but also keep their data in a storage format that offers strong guarantees of round-trip lossless conversion...</p>",
        "id": 153993138,
        "sender_full_name": "Ryan Brush",
        "timestamp": 1536088651
    },
    {
        "content": "<p>references: the FHIR spec anticipates that storage forms will add an an additional element to the reference data type that contains the resolution of the reference - usually, a primary key. But the exact details of what the reference is will depend on design and technology. The question is, what table does the key refer into?</p>",
        "id": 153993198,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536095498
    },
    {
        "content": "<p>the mismatches between the fhir data type and the sql data types in the corner cases are difficult. I would have thought that storing using the native type with a precision field as a sibling field is a better tradeoff for native storage (and justified there, where it's not justified on the wire for exchange)</p>",
        "id": 153993202,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536095606
    },
    {
        "content": "<p>I like the idea of using the native type with precision as a sibling field. I'll look into a simple approach for doing so and add it to the proposal. (Suggestions on conventions here are welcome as well.) </p>\n<p>As for what table do references join to: I (perhaps naïvely) was thinking the referent table could be determined by generating a sibling field to the reference field, e.g., patient_reference, encounter_reference, and so on.  This isn't expressed in the current draft, but Patrik's comments above got me thinking down these lines. There may be considerations here I'm overlooking...so if I'm missing something obvious please let me know. :)</p>",
        "id": 153993309,
        "sender_full_name": "Ryan Brush",
        "timestamp": 1536113773
    },
    {
        "content": "<p>In the proto representation, we use { timestamp, precision } tuples for datetime types, and that carries over into our current experimental sql representation. same with references, a references of the form \"Patient/123\" will be represented as \"{ patient_id: 123 }\". But both of these approaches have drawbacks as well. For example (and to Grahame's point), this approach for references more or less assumes a single table, which isn't always appropriate.</p>",
        "id": 153993320,
        "sender_full_name": "Patrik Sundberg",
        "timestamp": 1536119816
    },
    {
        "content": "<p>I'd imagine we would have and reference different tables based on the resource profiles...so (for example) in US Core there would be separate tables for results and vital signs, as opposed to just one observation table. Is a table-per-profile in an Implementation Guide the right path? I would be curious if there are examples where this isn't sufficient (realizing that we'd have to flesh out this pattern to really be sure we've covered all of the corner cases.)</p>\n<p>That's something we implied earlier but should be explicit about: these schemas are generated in the context of an Implementation Guide, and therefore would handle extensions and reference fields in a way consistent with that particular guide...</p>",
        "id": 153993323,
        "sender_full_name": "Ryan Brush",
        "timestamp": 1536120703
    },
    {
        "content": "<p>agreed. a lot of this makes the most sense in the context of a complete implementation guide. we should be explicit about that.</p>\n<p>even so, linking \"Observation/abc\" to Vitals vs Labs vs SomethingElse isn't going to be trivial. Where/when would that be done?</p>",
        "id": 153993326,
        "sender_full_name": "Patrik Sundberg",
        "timestamp": 1536121077
    },
    {
        "content": "<p>I would advise against 'a table per profile' for the simple reason that there will be many cases where observations - in particular - meet multiple profiles.</p>",
        "id": 153993328,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536121854
    },
    {
        "content": "<p>I've seen a pattern where you have a table for each resource, and a separate table for each profile that is just a key:key pair, so you can join by profile if you want to</p>",
        "id": 153993329,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536121902
    },
    {
        "content": "<p>with regard to references: I think that there are 2 different issues:</p>\n<ul>\n<li>classic polymorphic joins issue - see e.g. <a href=\"https://hashrocket.com/blog/posts/modeling-polymorphic-associations-in-a-relational-database\" target=\"_blank\" title=\"https://hashrocket.com/blog/posts/modeling-polymorphic-associations-in-a-relational-database\">https://hashrocket.com/blog/posts/modeling-polymorphic-associations-in-a-relational-database</a></li>\n<li>fhir specifix issue around the fact that references are much broader in functionality than a relational reference in the same database</li>\n</ul>",
        "id": 153993330,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536122054
    },
    {
        "content": "<p>one of the challenges here is that I feel it's unlikely that people will buy into a single answer for the first part</p>",
        "id": 153993333,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536122318
    },
    {
        "content": "<p>Fair enough, a rote table-per-profile isn't where we want to go. At the same time, I don't think a table-per-resource is sufficient in all cases, either...since we want to generate concrete fields based on extensions that exist only in some profiles to make things easier to query.</p>\n<p>Looking closer, I'm not sure that there is an algorithmic solution to define what tables should exist and how they are linked based purely on Implementation Guides as they exist today. It almost feels like we need to build an \"SQL Implementation Guide\" that evolves from usage patterns to supplement the existing guides, stating which tables exist, the collection of profiles they may serve, and how they are linked together. Just speculating here, but maybe it makes sense for vitals and labs to co-exist in an Observation table...but something significantly different (like genetics extensions to observations) would live in its own table and we handle these explicitly. Such polymorphic queries might still cause headaches, but we can isolate them to where they're really needed and explicitly define how to handle them.</p>",
        "id": 153993342,
        "sender_full_name": "Ryan Brush",
        "timestamp": 1536125923
    },
    {
        "content": "<p>polymophism is bad enough, but what is going on with the profiles is worse :-(</p>",
        "id": 153993344,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536131849
    },
    {
        "content": "<p>but, in fact, a lake of json fragments should be superior, shouldn't it, if you can sql directly on them - isn't that what this is about?</p>",
        "id": 153993345,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1536131909
    },
    {
        "content": "<p>A main goal (from my perspective) is to make FHIR data easily used by a variety of popular data science tools. If a lake of JSON fragments satisfies that, I'm all for it...although it's not obvious how to make that easily discoverable and understandable by a set of users that generally start with SQL-based tooling. (Also, JSON doesn't lend itself to efficient analytic operations at scale.)</p>\n<p>Given the complexity here, I wonder if our first iteration should have a less ambitious goal to create a building block for larger systems. So our first goalpost might be to:</p>\n<p>1. For a given StructureDefinition, generate an SQL schema that can represent the corresponding records in way that is efficient and simple to query in a variety of analytic databases, and<br>\n2. Be able to load the NDJSON files from Bulk Extract (or other sources) into tables using the above schema.</p>\n<p>As this evolves we can consider defining what tables should exist and how to join them in the context of an IG. But even if that's not practical, I think this first goalpost of conventions around SQL schema derived from a StructureDefinition is a useful asset -- and gets some currently ongoing projects using common building blocks in this space.</p>",
        "id": 153993536,
        "sender_full_name": "Ryan Brush",
        "timestamp": 1536170273
    },
    {
        "content": "<p>Can we do discussion of specific topics in issues of Ryan's repo - it will be more structured. I created couple of issues to discuss. We represent references as <code>{id: 'textid', resourceType: 'Patient'}</code> object.</p>",
        "id": 153993816,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1536241346
    },
    {
        "content": "<p>Another solution of polymorphic refs is to move resource type into key -   subject: {Patient: 'pt-id'} - and this approach can be unified with polymorphic/union elements.</p>",
        "id": 153993820,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1536241504
    },
    {
        "content": "<p>I think, we can have logical representation of FHIR resource for storage - which can be used for both -  json and native databases.</p>",
        "id": 153993823,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1536241559
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193657\">@Ryan Brush</span> can we split your initial doc into sections and have discussion over each section separately.</p>",
        "id": 153993824,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1536241606
    },
    {
        "content": "<p>I'm fine with discussing specific considerations as GitHub issues. </p>\n<p>Does the initial goalpost I mentioned above make sense here? If so, I'll log specific issues for topics that have come up along that path (e.g., dealing with precision with numeric and time structures, etc.)</p>",
        "id": 153993849,
        "sender_full_name": "Ryan Brush",
        "timestamp": 1536247543
    },
    {
        "content": "<p>weekly meeting <a href=\"https://meet.google.com/zvs-ucbe-ufk\" target=\"_blank\" title=\"https://meet.google.com/zvs-ucbe-ufk\">https://meet.google.com/zvs-ucbe-ufk</a></p>",
        "id": 153993868,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1536249570
    },
    {
        "content": "<p>Some links for reference at the Connectathon. The straw man SQL on FHIR draft is here: <a href=\"https://github.com/rbrush/sql-on-fhir/blob/master/sql-on-fhir.md\" target=\"_blank\" title=\"https://github.com/rbrush/sql-on-fhir/blob/master/sql-on-fhir.md\">https://github.com/rbrush/sql-on-fhir/blob/master/sql-on-fhir.md</a> and the tutorial for using Spark on FHIR is here: <a href=\"https://github.com/cerner/bunsen-tutorial\" target=\"_blank\" title=\"https://github.com/cerner/bunsen-tutorial\">https://github.com/cerner/bunsen-tutorial</a></p>",
        "id": 154001564,
        "sender_full_name": "Ryan Brush",
        "timestamp": 1538231579
    }
]