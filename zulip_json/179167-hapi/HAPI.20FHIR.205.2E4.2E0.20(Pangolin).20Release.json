[
    {
        "content": "<p>Hi All,</p>\n<p>Just a quick note that HAPI FHIR 5.4.0 (Pangolin) has been released to Maven Central and GitHub Releases.</p>\n<p>Highlights of this release are shown below. See the <a href=\"https://hapifhir.io/hapi-fhir/docs/introduction/changelog.html\">Changelog</a> for a complete list. There will be a live Webinar (recording available on-demand afterward) on May 20 2021. Details available here: <a href=\"https://www.smilecdr.com/quarterly-product-release-webinar-reminder\">https://www.smilecdr.com/quarterly-product-release-webinar-reminder</a></p>\n<h3>Security Changes</h3>\n<ul>\n<li>A resource exhaustion vulnerability in the HAPI FHIR JPA server was corrected. Learn more about CVE-2021-32053 <a href=\"https://snyk.io/vuln/SNYK-JAVA-CAUHNHAPIFHIR-1290393\">here</a>. Thanks to Zachary Minneker at Security Innovation for reporting!</li>\n</ul>\n<h3>General Client/Server/Parser Changes</h3>\n<ul>\n<li>HAPI FHIR now supports OpenAPI (aka Swagger). See <a href=\"http://hapi.fhir.org/baseR4/swagger-ui/\">here</a> for an example.</li>\n<li>Normalization and Standardization interceptors have been added. These can be used to normalize selected data fields according to configurable rules prior to storage.</li>\n<li>Contained resources can now reference <em>to</em> containing resources, as allowed in the FHIR Specification. Previously this direction was blocked and contained resources with no incoming reference <em>from</em> the containing resource were automatically stripped, as this style was not permitted in early versions of the FHIR specification. In addition, contained resource order will now be preserved during parsing round-trips.</li>\n<li>New interceptors have been added that can automatically map terminology in response resources using HAPI FHIR terminology services, returning configurable canonical terminology in the response payload.</li>\n<li>Support for the FHIR <code>Prefer: handling=lenient</code> header has been added via an optional interceptor. </li>\n<li>The automatic CapabiityStatement generation has been completely rewritten for R4+ servers. CapabilityStatements now include many new data elements, such as supported profiles, revincludes, resource level operations, and more.</li>\n<li>Token Search Parameters in GraphQL expressions are now correctly parsed.</li>\n</ul>\n<h3>JDK Changes</h3>\n<ul>\n<li>HAPI FHIR now supports JDK 16, and this version is used to execute our CI test suite in order to ensure continued compliance. The minimum Java version required in order to use HAPI FHIR remains JDK 8. This may be updated to JDK 11 in an upcoming release, as many of the libraries we use are now either contemplating or have already completed an upgrade to JDK 11 as a minimum requirement.</li>\n</ul>\n<h3>JPA Server General Changes</h3>\n<ul>\n<li>Support for the <code>_list</code> search parameter has been added to the JPA server</li>\n<li>Support for the <code>:contained</code> modifier has been added, allowing searches to select from data in contained resources found within the resource being searches. Note that this feature is disabled by default and must be enabled if needed.</li>\n<li>The JPA server now supports persisting FHIR extensions in <code>Resource.meta</code></li>\n<li>Bulk Export now supports Patient- and Group- based exports</li>\n<li>Auto-created reference target placeholder resources now include an extension and an identifier if one is known</li>\n<li>A profiling effort led to improvements in performance when processing large FHIR Transaction bundles</li>\n<li>Resources imported into a repository via NPM Packages will now attempt to preserve the resource ID defined in the source package.</li>\n</ul>\n<h3>JPA Server Performance Changes</h3>\n<ul>\n<li>Searches with only a single search parameter now generate a more streamlined SQL expression (one unnecessary JOIN was removed), improving performance.</li>\n<li>A new header <code>X-Upsert-Extistence-Check</code> (note there is a typo in the name, this will be addressed in the next release of HAPI FHIR! Please be aware if you are planning on using this feature) can be added which avoids existence checks when using client assigned IDs to create new records. This can speed up performance.</li>\n</ul>\n<h3>JPA Server Partitioning Changes</h3>\n<ul>\n<li>Resource Reindexing is now supported on partitioned servers.</li>\n<li>FHIR Bulk Export is now supported on partitioned servers (note that this operation is run at the system level and includes data from all partitions. Future enhancements may allow for more nuanced exports on partitioned servers.) </li>\n</ul>\n<h3>Terminology Server and Validation Changes</h3>\n<ul>\n<li>ValueSet expansion can now optionally return codes in the same hierarchy that they are defined in their source CodeSystem.</li>\n<li>Validation can now be configured to return only a warning when a code is found from a CodeSystem that is unknown/unavailable to the validator.</li>\n</ul>\n<h3>JPA Server MDM Enhancements</h3>\n<ul>\n<li>A new search mdm-expansion syntax has been added to FHIR searches on MDM-enabled servers. For example <code>Observation?patient:mdm=Patient/123</code> can be used to search for Observation resources belonging to <code>Patient/123</code> but also to other MDM-linked patient records.</li>\n<li>MDM matching rules can now use FHIRPath expressions as selection criteria.</li>\n<li>A new syntax has been added to Group Bulk Export that allows MDM matching to be used to include matches in the group to export.</li>\n<li>MDM matching rules can now match on extensions, checking the URL and Value for equality.</li>\n<li>A new NUMERIC matcher has been added, allowing matching using numeric values.</li>\n</ul>\n<p>Cheers,<br>\nJames</p>",
        "id": 239477919,
        "sender_full_name": "James Agnew",
        "timestamp": 1621450474
    },
    {
        "content": "<p>Hi.  I've been using the hapi-fhir-jpaserver-starter.  I'd been using 5.3.0 and wanted to play around with 5.4.0.  I noticed that when I  changed the parent version in the pom.xml from 5.3.0 to 5.4.0, the  hapi-fhir-jpaserver-base disappeared from the maven dependency list.    Did I miss something?  Thanks.</p>",
        "id": 239518986,
        "sender_full_name": "Joe Atterberry",
        "timestamp": 1621472652
    },
    {
        "content": "<p>Hmm, that's weird - no, nothing like that should happen. Might be worth comparing your project with the current git master to see if there are any obvious structural changes missing</p>",
        "id": 239560485,
        "sender_full_name": "James Agnew",
        "timestamp": 1621503051
    },
    {
        "content": "<p>Thanks.  It was an IDE issue.  I upgraded to latest version and all is well.</p>",
        "id": 239594837,
        "sender_full_name": "Joe Atterberry",
        "timestamp": 1621518831
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> </p>\n<p>I'm working on Instant OpenHIE development and I've noticed a missing DockerHub tag release - v5.4.2</p>\n<p>We were using Pangolin v5.4.2 as it was available as the <code>latest</code> DockerHub release but since the latest tag was updated a few weeks ago (to v5.5.1) we are now dependant on a non-existent tag.</p>\n<p><strong>Could we please get this tag released on DockerHub?</strong></p>\n<p>Thanks,<br>\nMatt</p>",
        "id": 258167413,
        "sender_full_name": "Matthew Dickie",
        "timestamp": 1634636690
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"364091\">@Matthew Dickie</span> are you talking about the HAPI FHIR jpa starter Docker image?</p>",
        "id": 258167801,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634636898
    },
    {
        "content": "<p>Yes.</p>",
        "id": 258169773,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1634637988
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194192\">@Richard Stanley</span> / <span class=\"user-mention\" data-user-id=\"364091\">@Matthew Dickie</span>  Here's an advice: <em>Don't EVER depend on latest on anything</em>. I can make a tag on <a href=\"https://github.com/hapifhir/hapi-fhir-jpaserver-starter/commit/83908242a5ce69618a955d2f89e4534bc86aab73#diff-9c5fb3d1b7e3b0f54bc5c4182965c4fe1f9023d449017cece3005d3f90e8e4d8\">https://github.com/hapifhir/hapi-fhir-jpaserver-starter/commit/83908242a5ce69618a955d2f89e4534bc86aab73#diff-9c5fb3d1b7e3b0f54bc5c4182965c4fe1f9023d449017cece3005d3f90e8e4d8</a> which then <em>should</em> trigger a deploy to docker hub. Is there any specific reason why you cannot use the 5.5.1 ?</p>",
        "id": 258185077,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634646275
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span>. I don't know <span class=\"user-mention\" data-user-id=\"364091\">@Matthew Dickie</span> 's specific use for that release. But, indeed, point taken :) and I think that's the goal here.</p>",
        "id": 258186063,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1634646760
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194192\">@Richard Stanley</span> whats the goal? Not to depend on <code>latest</code> or to depend on v5.4.2?</p>",
        "id": 258201611,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634652911
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span><br>\nThis is the repo: <a href=\"https://hub.docker.com/r/hapiproject/hapi/tags\">https://hub.docker.com/r/hapiproject/hapi/tags</a><br>\nWe did not depend on <code>latest</code> willingly, but we needed some features quickly as we were blocked and we hoped the version would be tagged before a new latest image was pushed.</p>\n<p>All our testing has been done on version v5.4.2 as that's the tagged version on GitHub with the changes needed.<br>\nWe haven't tested our system with v5.5.1 and there's a production in-country deployment happening in two weeks so jumping to that version could be risky for us.<br>\nIs this minor version well adopted?</p>",
        "id": 258201633,
        "sender_full_name": "Matthew Dickie",
        "timestamp": 1634652917
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"364091\">@Matthew Dickie</span>  - you're linking to the docker repo - and that is fed from the gtihub repo. I terms of tags you need to differentiate between the HAPI framework and the HAPI FHIR JPA Starter. The starter project does not have a 5.4.2 tag: <a href=\"/user_uploads/10155/dRUMMD9zuPrPdWta8E4lPM-P/image.png\">See image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/dRUMMD9zuPrPdWta8E4lPM-P/image.png\" title=\"See image\"><img src=\"/user_uploads/10155/dRUMMD9zuPrPdWta8E4lPM-P/image.png\"></a></div>",
        "id": 258202296,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634653119
    },
    {
        "content": "<p>I would recommend that you use v5.5.1</p>",
        "id": 258202950,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634653326
    },
    {
        "content": "<p>... - and when you say production <span class=\"user-mention\" data-user-id=\"364091\">@Matthew Dickie</span>  ... - do you intend to go to production with the HAPI FHIR  JPA Starter stock image?</p>",
        "id": 258203169,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634653410
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> <br>\nThis is my local docker image version of latest (pulled from the Dockerhub repo above):<br>\n<a href=\"/user_uploads/10155/x35JkRcKrNRp5prd3gXQeP4j/hapi-version.png\">hapi-version.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/x35JkRcKrNRp5prd3gXQeP4j/hapi-version.png\" title=\"hapi-version.png\"><img src=\"/user_uploads/10155/x35JkRcKrNRp5prd3gXQeP4j/hapi-version.png\"></a></div><p>If possible, we'd like the HAPI FHIR server version 5.4.2 on a docker image again for the remainder of our QA process. If not, we'll make a plan to use v5.4.1 or v5.5.1.</p>\n<p>Preferably, we'd like to go live with server version v5.4.2 as that's what we know, but we haven't agreed on how we are going to deploy yet though.<br>\n<strong>If you have any suggestions, they would be most welcome.</strong><br>\nThe environment is two large servers in-country with Linux virtual machines for every service.</p>",
        "id": 258206740,
        "sender_full_name": "Matthew Dickie",
        "timestamp": 1634654546
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"364091\">@Matthew Dickie</span>  I'm a bit puzzled here - the HAPI FHIR JPA starter server sort of an example of what you can do with the HAPI FHIR framework - as such it is not really intended for production, IMHO. For starters, there are no security restrictions on it and no compartmental limitations in regards to access to data. I myself use it as a highly effective mock in test setups where I have to interface other FHIR servers - but not production without any modifications. Surely, it delivers a lot of capabilities but I wouldn't use it for production without adding a authorization layer. Am I missing something here?</p>",
        "id": 258208678,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634655166
    },
    {
        "content": "<p>I think there are a lot of users using the JPA-Starter-Server in production. I do it myself. <br>\nWe are facading the endpoint with an oidc filtering layer in apache.</p>",
        "id": 258209263,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1634655369
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> The HAPI-FHIR server will not have any ports exposed publicly - the only way to access it would be through an OpenHIM channel which requires authorisation.</p>",
        "id": 258210342,
        "sender_full_name": "Matthew Dickie",
        "timestamp": 1634655709
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"364091\">@Matthew Dickie</span> - ok, so more like a guarded datalake. That makes sense. I'd still recommend you to use the 5.5.1</p>",
        "id": 258213601,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634656780
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> how is OICD sufficient? How do you control that the queries executed against the server does not include resources that you are not allowed to read/write? The JPA starter does not evaluate whether what you are reading are according to the claims. I can't see how the OICD flow is nearly sufficient, unless the case is like <span class=\"user-mention\" data-user-id=\"364091\">@Matthew Dickie</span> 's. Eg. if a user does a read on eg. Observation, how do you determine that the user is related to that Observation, in hindsight? That is what the <a href=\"https://hapifhir.io/hapi-fhir/docs/security/authorization_interceptor.html\">https://hapifhir.io/hapi-fhir/docs/security/authorization_interceptor.html</a> and <a href=\"https://hapifhir.io/hapi-fhir/docs/security/search_narrowing_interceptor.html\">https://hapifhir.io/hapi-fhir/docs/security/search_narrowing_interceptor.html</a> are there for.</p>",
        "id": 258214458,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634657043
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> my answer was a little bit too short/abstract &amp;we are not using SMART ON FHIR. We are just having some roles which have access to the whole repo, filtering for write read operations and specific operations. We are also do some filtering with an Authorization Interceptor</p>",
        "id": 258241959,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1634665849
    },
    {
        "content": "<p>well in that case you're not using the stock docker image if you've added a HAPI AuthorizationInterceptor</p>",
        "id": 258242362,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634665985
    },
    {
        "content": "<p>and FYI <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> - we (my colleagues and I) are working on adding SMART evaluation as an option to the example implementation</p>",
        "id": 258242426,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634666009
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191427\">Jens Villadsen</span> <a href=\"#narrow/stream/179167-hapi/topic/HAPI.20FHIR.205.2E4.2E0.20.28Pangolin.29.20Release/near/258242362\">said</a>:</p>\n<blockquote>\n<p>well in that case you're not using the stock docker image if you've added a HAPI AuthorizationInterceptor</p>\n</blockquote>\n<p>yes. But we war relying on the jpastarter project.</p>",
        "id": 258327435,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1634716844
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191427\">Jens Villadsen</span> <a href=\"#narrow/stream/179167-hapi/topic/HAPI.20FHIR.205.2E4.2E0.20.28Pangolin.29.20Release/near/258242426\">said</a>:</p>\n<blockquote>\n<p>and FYI <span class=\"user-mention silent\" data-user-id=\"191451\">Patrick Werner</span> - we (my colleagues and I) are working on adding SMART evaluation as an option to the example implementation</p>\n</blockquote>\n<p><span aria-label=\"hearts\" class=\"emoji emoji-2665\" role=\"img\" title=\"hearts\">:hearts:</span></p>",
        "id": 258327451,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1634716856
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191451\">Patrick Werner</span> <a href=\"#narrow/stream/179167-hapi/topic/HAPI.20FHIR.205.2E4.2E0.20.28Pangolin.29.20Release/near/258327435\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191427\">Jens Villadsen</span> <a href=\"#narrow/stream/179167-hapi/topic/HAPI.20FHIR.205.2E4.2E0.20.28Pangolin.29.20Release/near/258242362\">said</a>:</p>\n<blockquote>\n<p>well in that case you're not using the stock docker image if you've added a HAPI AuthorizationInterceptor</p>\n</blockquote>\n<p>yes. But we war relying on the jpastarter project.</p>\n</blockquote>\n<p>There's a huge difference between using the JPA starter project as a kickstarter for doing own development and using the docker image. <span class=\"user-mention\" data-user-id=\"364091\">@Matthew Dickie</span> is using the docker image</p>",
        "id": 258329919,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634718181
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191451\">Patrick Werner</span> <a href=\"#narrow/stream/179167-hapi/topic/HAPI.20FHIR.205.2E4.2E0.20.28Pangolin.29.20Release/near/258327451\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191427\">Jens Villadsen</span> <a href=\"#narrow/stream/179167-hapi/topic/HAPI.20FHIR.205.2E4.2E0.20.28Pangolin.29.20Release/near/258242426\">said</a>:</p>\n<blockquote>\n<p>and FYI <span class=\"user-mention silent\" data-user-id=\"191451\">Patrick Werner</span> - we (my colleagues and I) are working on adding SMART evaluation as an option to the example implementation</p>\n</blockquote>\n<p><span aria-label=\"hearts\" class=\"emoji emoji-2665\" role=\"img\" title=\"hearts\">:hearts:</span></p>\n</blockquote>\n<p>I know <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 258329975,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634718215
    },
    {
        "content": "<p>The hope/intention is to enable more users to think about the security model, having a SMART setup ready at hand. - and yes, it will also involve an example Keycloak / IdP - so a total docker compose setup, ready to run</p>",
        "id": 258330193,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634718329
    },
    {
        "content": "<p>wow</p>",
        "id": 258335233,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1634720813
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191427\">Jens Villadsen</span> <a href=\"#narrow/stream/179167-hapi/topic/HAPI.20FHIR.205.2E4.2E0.20.28Pangolin.29.20Release/near/258329919\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191451\">Patrick Werner</span> <a href=\"#narrow/stream/179167-hapi/topic/HAPI.20FHIR.205.2E4.2E0.20.28Pangolin.29.20Release/near/258327435\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191427\">Jens Villadsen</span> <a href=\"#narrow/stream/179167-hapi/topic/HAPI.20FHIR.205.2E4.2E0.20.28Pangolin.29.20Release/near/258242362\">said</a>:</p>\n<blockquote>\n<p>well in that case you're not using the stock docker image if you've added a HAPI AuthorizationInterceptor</p>\n</blockquote>\n<p>yes. But we war relying on the jpastarter project.</p>\n</blockquote>\n<p>There's a huge difference between using the JPA starter project as a kickstarter for doing own development and using the docker image. <span class=\"user-mention silent\" data-user-id=\"364091\">Matthew Dickie</span> is using the docker image</p>\n</blockquote>\n<p>Hi <span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> out of interest, other than the security ramifications of not having authentication and straight http access, what would the concerns be regarding using the jpastarter Docker image in a production environment?</p>",
        "id": 258346151,
        "sender_full_name": "Peter Imrie",
        "timestamp": 1634726534
    },
    {
        "content": "<p>Well - nothing.</p>",
        "id": 258346812,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634726925
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"390311\">@Peter Imrie</span> I find security pretty central when dealing with other peoples data</p>",
        "id": 258349473,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1634728463
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191427\">Jens Villadsen</span> <a href=\"#narrow/stream/179167-hapi/topic/HAPI.20FHIR.205.2E4.2E0.20.28Pangolin.29.20Release/near/258349473\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"390311\">Peter Imrie</span> I find security pretty central when dealing with other peoples data</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> For sure, definitely a key consideration. Just wanting to check there wasn't something else like a hard limit on record numbers or something like that.</p>",
        "id": 258350604,
        "sender_full_name": "Peter Imrie",
        "timestamp": 1634729074
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> -&gt; <a href=\"https://github.com/hapifhir/hapi-fhir-jpaserver-starter/pull/287\">https://github.com/hapifhir/hapi-fhir-jpaserver-starter/pull/287</a></p>",
        "id": 260418053,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1636125021
    },
    {
        "content": "<p>just saw this, but the PR was closed?</p>",
        "id": 261116178,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1636626764
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span></p>",
        "id": 261129910,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1636635464
    },
    {
        "content": "<p>I'll let <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> comment on that</p>",
        "id": 261172959,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1636657561
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> may I suggest you try out the features of the PR by building <a href=\"https://github.com/trifork/hapi-fhir-jpaserver-starter/tree/feature/smart-support\">https://github.com/trifork/hapi-fhir-jpaserver-starter/tree/feature/smart-support</a></p>",
        "id": 261173096,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1636657633
    },
    {
        "content": "<p>Will have a look at the weekend.</p>",
        "id": 261230309,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1636710128
    }
]