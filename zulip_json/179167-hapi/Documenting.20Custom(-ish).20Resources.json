[
    {
        "content": "<p>Very general question here: How are folks documenting their resources? In our case:</p>\n<ul>\n<li>We use HAPI as a RESTful server facade in front of our DB.</li>\n<li>Let's just talk about our Patient data...</li>\n<li>We are only using a small subset of the available Patient fields. In addition, we're using a couple of extension fields to capture data that doesn't fit into the base Patient resource type.</li>\n</ul>\n<p>I imagine pretty much everyone is in a similar situation there. But what would folks recommend we do for documenting what our Patient resources look like? We want consumers of our FHIR API to know what to expect.</p>",
        "id": 153927165,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1514480509
    },
    {
        "content": "<p>I know very little about them, but perhaps folks are using FHIR profiles for this? If so, is there any implementation guidance available on how to get started using custom profiles with HAPI and to generate documentation?</p>",
        "id": 153927166,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1514480744
    },
    {
        "content": "<p>(And Happy Holidays to all! Thanks in advance for any guidance you can provide.)</p>",
        "id": 153927167,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1514480768
    },
    {
        "content": "<p>I'm not an expert on HAPI, but the gist of going about this is IMHO:<br>\n- define what a Patient from your system looks like in a profile (most people use Forge to do so)<br>\n- include definitions for the extensions you had to invent (and are they special to your situation or more general / reusable / already existing) <br>\n- do the same for any other resourcetypes you serve<br>\n- publish them for others to find / read / download, e.g. on <a href=\"http://Simplifier.net\" target=\"_blank\" title=\"http://Simplifier.net\">Simplifier.net</a><br>\n- assemble them in an Implementation Guide.<br>\n- adjust your CapabilityStatement to mention the custom profiles<br>\nThat way the outside world will know what your FHIR Facade will serve.</p>\n<p>I have not heard of creating Java code out of custom profiles, but since the custom elements have to be serialized as extensions anyway that is not a requirement either.</p>\n<p>Then you mentioned 'to generate documentation' - what kind of documentation besides the things mentioned above would you like to generate?</p>",
        "id": 153927179,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1514489789
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191757\">@Christiaan Knaap</span> That's super useful, thanks! I think \"assemble them in an Implementation Guide\" is the main piece I was missing. That's likely the documentation I was referring to. As an example, I've seen this: <a href=\"http://hl7.org/fhir/us/daf-research/index.html\" target=\"_blank\" title=\"http://hl7.org/fhir/us/daf-research/index.html\">http://hl7.org/fhir/us/daf-research/index.html</a>, and wondered how I'd produce something similar.</p>\n<p>Do you know where the best place to start learning about how to create an Implementation Guide would be?</p>\n<p>(Thanks again!)</p>",
        "id": 153927320,
        "sender_full_name": "Karl M. Davis",
        "timestamp": 1514555038
    },
    {
        "content": "<p>There are two main tools for creating Implementation Guides:<br>\n- IG Editor on <a href=\"https://simplifier.net\" target=\"_blank\" title=\"https://simplifier.net\">Simplifier.net</a>, described in the <a href=\"http://docs.simplifier.net/simplifier/simplifierIGeditor.html\" target=\"_blank\" title=\"http://docs.simplifier.net/simplifier/simplifierIGeditor.html\">help</a><br>\n- HL7 IG Publisher, described on the <a href=\"http://wiki.hl7.org/index.php?title=IG_Publisher_Documentation\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=IG_Publisher_Documentation\">HL7 Wiki</a></p>\n<p>For background: <a href=\"http://www.hl7.org/implement/standards/fhir/implementationguide.html\" target=\"_blank\" title=\"http://www.hl7.org/implement/standards/fhir/implementationguide.html\">ImplementationGuide</a> is also a resourcetype.</p>",
        "id": 153927324,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1514557957
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> if I do</p>\n<div class=\"codehilite\"><pre><span></span>curl \\\n -H &quot;Accept: application/fhir+json&quot; \\\n -H &quot;Content-type: application/fhir+json&quot;\\\n -X POST\\\n  https://fhirtest.uhn.ca/baseDstu3/Patient/$validate \\\n --data &#39;{&quot;resourceType&quot;: &quot;Patient&quot;}&#39;\n</pre></div>\n\n\n<p>... should this result in a newly created resource? I thought by default there would be no action, but this is telling me :</p>\n<div class=\"codehilite\"><pre><span></span>  &quot;issue&quot;: [\n    {\n      &quot;severity&quot;: &quot;information&quot;,\n      &quot;code&quot;: &quot;informational&quot;,\n      &quot;diagnostics&quot;: &quot;Successfully created resource \\&quot;Patient/783176/_history/1\\&quot; in 3ms&quot;\n    },\n    {\n      &quot;severity&quot;: &quot;information&quot;,\n      &quot;code&quot;: &quot;informational&quot;,\n      &quot;diagnostics&quot;: &quot;No issues detected during validation&quot;\n    }\n  ]\n</pre></div>",
        "id": 153933155,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1517270042
    },
    {
        "content": "<p>Also for a payload with multiple errors it appears to be returning only the first (whereas previously it used to return a whole set). Is this by design?</p>",
        "id": 153933158,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1517270116
    },
    {
        "content": "<p>Darn it, I see my <code>$</code> problem. I need single quotes.  Fixing that, I still have the issue that I only learn about a single error...</p>",
        "id": 153933160,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1517270141
    },
    {
        "content": "<p>like <code>{\"resourceType\": \"Patient\",  \"birthDate\": 13, \"badProp\":5}</code> fails on birthDate with no further info.</p>",
        "id": 153933163,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1517270233
    },
    {
        "content": "<p>Oh that's interesting..... Lemme try and replicate.</p>",
        "id": 153933192,
        "sender_full_name": "James Agnew",
        "timestamp": 1517273737
    }
]