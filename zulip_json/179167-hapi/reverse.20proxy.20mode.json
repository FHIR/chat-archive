[
    {
        "content": "<p>hey James, can you run HAPI in a reverse proxy mode, where it simply serves the interface and then redirects to another server? </p>",
        "id": 153853263,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476910145
    },
    {
        "content": "<p>well, can you run the CLI in that mode..</p>",
        "id": 153853264,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476910157
    },
    {
        "content": "<p>Hmm no, CLI assumes it's the only FHIR server in the world at this point. Curious, why would you want to do this? </p>",
        "id": 153853722,
        "sender_full_name": "James Agnew",
        "timestamp": 1477065845
    },
    {
        "content": "<p>well, let's say I'm putting up a FHIR server. I need to host a set of functions off my database in my own server. </p>",
        "id": 153853750,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477083487
    },
    {
        "content": "<p>but my dev team is not so large, and I don't have $$ for a focused web security guy, and I'm concerned that I don't have the skills to put up a secure web server that doesn't accidentally expose other services I know nothing about </p>",
        "id": 153853751,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477083540
    },
    {
        "content": "<p>but I could put a reverse proxy HAPI CLI, and know that my server is completely hidden behind a FHIR server that has been inspected and hammered</p>",
        "id": 153853752,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477083600
    },
    {
        "content": "<p>and I can get HAPI to handle conformance and tx in front of me....</p>",
        "id": 153853753,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477083637
    },
    {
        "content": "<p>oh interesting. yeah, i could see that.</p>\n<p>not supported yet, but that does sound like something worthwhile to add to the roadmap... i guess similarly if you had a FHIR server that only supported one of JSON or XML it could handle translation too.</p>",
        "id": 153853754,
        "sender_full_name": "James Agnew",
        "timestamp": 1477084766
    },
    {
        "content": "<p>y</p>",
        "id": 153853756,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477084906
    },
    {
        "content": "<p>Would it be worth thinking about how to support something like nginx in that role?  I don't know enough to really comment properly, but suspect there will be issues with references where HAPI thinks it's at a particular URL, but nginx is re-writing it...</p>",
        "id": 153853811,
        "sender_full_name": "David Hay",
        "timestamp": 1477162321
    },
    {
        "content": "<p>Would Apache Camel be suitable for this? It could pass conformance requests to the HAPI server and forward requests to other FHIR servers (and filter other resources). We're looking at using it for rewriting urls, profile mappings and security translations. In our Camel apps we use Spring and also HAPI FHIR libraries. [We also plan to use traditional health middleware but camel is enabling a micro-service architecture] </p>",
        "id": 153853813,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1477172510
    },
    {
        "content": "<p>you could use any reverse proxy, yes. but having HAPI out in front gives you FHIR specific stuff</p>",
        "id": 153853816,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477193640
    },
    {
        "content": "<p>Yes, explicit URLs would need to be re-written.<br>\nBut that would then cause issues if XML content is signed (or re-signed).</p>",
        "id": 153853866,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1477271739
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191321\">@David Hay</span> Having had some involvement in doing this kind of thing, I can say that it's somewhat feasible if you're running in a read-only mode but it quickly gets very hard as soon as you want to support batch / transactions since you effectively need to do deep inspection of the requests.</p>\n<p>HAPI itself is not extra helpful here since it doesn't provide a simple mechanism to process batch requests and feed them up into HAPI's internal dispatch mechanism.</p>",
        "id": 153857883,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1479604594
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> Another related use-case would be for delegating terminology-specific requests to a dedicated server while use the HAPI server to handle other resource types.</p>",
        "id": 153857884,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1479604693
    }
]