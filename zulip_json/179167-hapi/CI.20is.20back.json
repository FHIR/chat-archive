[
    {
        "content": "<p>Oh man I am relieved to finally be able to post this.</p>\n<p>After probably 6 months of fighting and fighting with Travis-CI to troubleshoot mysterious failures that seemed to happen in 3/4 of our builds, I decided to take a look at the new Azure Pipelines support that was announced recently. Azure finishes the build in 30 mins (travis generally timed out, having spent 60 minutes only getting half-way through) and seems to pass pretty consistently.</p>\n<p>I am so impressed with azure's implementation. Damn.</p>",
        "id": 176498192,
        "sender_full_name": "James Agnew",
        "timestamp": 1569353895
    },
    {
        "content": "<p>Good to know - any tips / learnings from getting it going?</p>",
        "id": 176498299,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1569353992
    },
    {
        "content": "<p>It was remarkably smooth. Feel free to borrow from HAPI's pipeline descriptor if it's useful: <a href=\"https://github.com/jamesagnew/hapi-fhir/blob/master/azure-pipelines.yml\" target=\"_blank\" title=\"https://github.com/jamesagnew/hapi-fhir/blob/master/azure-pipelines.yml\">https://github.com/jamesagnew/hapi-fhir/blob/master/azure-pipelines.yml</a></p>\n<p>The main thing that is neat is that Maven is a native capability of Azure (as are many other build systems). In travis you have to script up your maven call, which isn't hard obviously.. but Azure understands its output format and gives you nice test reports and things like that. It looks like it's got some native JaCoCo support too for test coverage, although I haven't tried playing with that yet.</p>\n<p>I have been planning on migrating off of <a href=\"http://coveralls.io\" target=\"_blank\" title=\"http://coveralls.io\">coveralls.io</a> for coverage reporting (that platform has gotten pretty flaky too) so I'm gonna take this opportunity to get things working with CodeCov instead. I keep looking enviously at the reports that Synthea gets from CodeCov.</p>\n<p>The one thing I haven't gotten working right yet is artifact caching between builds (for the local Maven repo's downloaded artifacts). Still trying to figure that one out..</p>",
        "id": 176506166,
        "sender_full_name": "James Agnew",
        "timestamp": 1569359141
    },
    {
        "content": "<p>Nice! This is what we're using for the FHIR core build too. (I've also been pretty impressed with the GitHub Actions pre-release, but it doesn't have quite the same feature set yet.)</p>",
        "id": 176513416,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1569364395
    },
    {
        "content": "<p>Semi-related, the page on <a href=\"http://hapifhir.io/\" target=\"_blank\" title=\"http://hapifhir.io/\">hapifhir.io</a> still has the old build badge (failing).</p>",
        "id": 176586154,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1569431750
    },
    {
        "content": "<p>Yeah- I'm gonna update that when we launch the revamped page in a few weeks.</p>",
        "id": 176594179,
        "sender_full_name": "James Agnew",
        "timestamp": 1569436992
    }
]