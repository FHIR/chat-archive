[
    {
        "content": "<p>Is there additional documentation that anyone is aware of for setting up and using Elasticsearch - primarily for terminology (but not limited to that)? I'm looking specifically at the jpaserver-starter (5.3.0).  The documentation in the <a href=\"https://github.com/hapifhir/hapi-fhir-jpaserver-starter#using-elasticsearch\">README</a> is fairly minimal and leaves (at least for me) a few things not quite clear. I also didn't find very much on it doing searches on this Zulip stream and in the Google Group.  One thing in particular is, I'm not sure how things are supposed to work alongside or instead of the Lucene searching and what the proper settings are in application.yaml (or anywhere else) for that. And what is the best way to check if Elasticsearch is working correctly and the necessary indexes are all there?  Any suggestions or answers will be appreciated!</p>",
        "id": 234752443,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1618520542
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> Do you have some thoughts/suggestions on this - particularly about the proper settings in application.yaml (James suggested checking with you on that)?</p>",
        "id": 235349838,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1618927825
    },
    {
        "content": "<p>I do have - but I haven't got the time to go into it. I'm currently doing a national COVID solution that takes up 150% of my time. I'll have suggestions and thoughts on this matter after the 7th of may</p>",
        "id": 235358451,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1618930946
    },
    {
        "content": "<p>Thanks, Jens.  No problem and definitely understand the priorities!</p>",
        "id": 235367092,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1618933697
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span> Do you have any insights or suggestions for the application.yaml elasticsearch settings?  What particularly isn't clear to me is how to set <code>username</code> and <code>password</code> when the Elasticsearch endpoint is on localhost.  My local Elasticsearch endpoint on Ubuntu 20.04 (installed from the Ubuntu repo) doesn't require (or even directly allow?) any credentials, so I haven't figured out how to populate those parameters.  I tried commenting those two parameters out, but that gave: <code>java.lang.IllegalArgumentException: Username may not be null</code>.  I also tried leaving the values empty - that didn't give a exception, but it also so far hasn't worked (value set expansions particularly are failing).</p>",
        "id": 236584881,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1619645699
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> , would love to say I know... I didn't setup any of the elastic search stuff, so I'm a bit in the dark. I'll take a quick glance and see if I can spot anything, though.</p>",
        "id": 237084741,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1619989991
    },
    {
        "content": "<p>So, I see this in the <code>hapi-fhir</code> project:</p>\n<div class=\"codehilite\"><pre><span></span><code>        final CredentialsProvider credentialsProvider =\n                new BasicCredentialsProvider();\n        credentialsProvider.setCredentials(AuthScope.ANY,\n                new UsernamePasswordCredentials(theUsername, thePassword));\n        RestClientBuilder clientBuilder = RestClient.builder(\n                new HttpHost(stripHostOfScheme(theHostname), thePort, determineScheme(theHostname)))\n                .setHttpClientConfigCallback(httpClientBuilder -&gt; httpClientBuilder\n                        .setDefaultCredentialsProvider(credentialsProvider));\n</code></pre></div>",
        "id": 237085240,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1619990167
    },
    {
        "content": "<p>It appears that it should be modified to not always assume basic credentials...</p>",
        "id": 237085288,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1619990187
    },
    {
        "content": "<p>But, this is part of the core <code>hapi-fhir</code> project, not the <code>hapi-fhir-jpaserver-starter</code> project... so, it's not as easy to get that changed</p>",
        "id": 237085355,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1619990215
    },
    {
        "content": "<p>Thanks, Sean.  I think I've figured out some of it.  I do have Elasticsearch running now and it seems to be indexing - but I'm not sure yet how well and completely it's working.  It seems to not really care (at least in my particular case running on localhost) what the username and password are, as long as they are there.</p>",
        "id": 237085415,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1619990237
    },
    {
        "content": "<p>nice!</p>",
        "id": 237085460,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1619990255
    },
    {
        "content": "<p>I'd suggest submitting an issue requesting that this functionality be changed to not always require user/pass</p>",
        "id": 237085561,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1619990286
    },
    {
        "content": "<p>seems like a reasonable change to me</p>",
        "id": 237085586,
        "sender_full_name": "Sean McIlvenna",
        "timestamp": 1619990295
    },
    {
        "content": "<p>Here is my current <a href=\"/user_uploads/10155/AjagrFVWdPHhQ7btBug2PhHu/application.yaml\">application.yaml</a>.  Any further thoughts you have would be great.</p>",
        "id": 237086071,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1619990474
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> I am fairly new to FHIR, so this may be very basic stuff for you. But what's your primary driver to move to ElasticSearch ? Is there an expectation of performance gains on  REST queries ?</p>",
        "id": 237086335,
        "sender_full_name": "dsh",
        "timestamp": 1619990574
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191783\">@dsh</span>  No, probably not that basic at all - I'm still working through figuring it out.  The motivation for trying Elasticsearch was a couple of things.  We were trying to implement type-ahead search using $expand + filter on ValueSet, but the existing search behavior was doing partial string matching but only with an exact match on the full entered text, rather than basing the search on tokens (which would provide a much more natural search result).  Elasticsearch seems potentially able to provide much more configurability and capability in that regard.  Plus the HAPI documentation states that Elasticsearch is now available and that it is likely to become the default in the future, so I thought it would make sense to go ahead and give it a try now and see what it would be able to do.</p>",
        "id": 237087108,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1619991286
    },
    {
        "content": "<p>Thanks for sharing that <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span></p>",
        "id": 237134109,
        "sender_full_name": "dsh",
        "timestamp": 1620033668
    },
    {
        "content": "<p>In initial tests on queries on resources with huge volumes (e.g., over &gt;5 million observation resources), we did significantly better with the standard Lucenes engine than with ElasticSearch integration (e.g.: 6 minutes when retrieving all resources via self + next instead of 7 minutes with ElasticSearch). Full text searches via \"contains\" operator were also significantly faster. <br>\nAre there any other experience reports here? Could of course be due to configuration or other technical details.</p>",
        "id": 267424025,
        "sender_full_name": "David Meyers",
        "timestamp": 1641812521
    },
    {
        "content": "<p>ElasticSearch is built on top of lucene. So Lucene should always be faster.<br>\nElasticSearch adds in horizontal scalibility</p>",
        "id": 267429033,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1641815582
    },
    {
        "content": "<p>Thanks for the clarification <span class=\"user-mention\" data-user-id=\"191687\">@Kevin Mayfield</span>. Are there any tips (configuration, infrastructure, ...) that you don't constantly run into timeouts with \"_summary=count\" initial queries (without prior caching) for resources with high entity ? Sure you could increase the timeout parameter (currently 60 seconds afaik), however I think that just counting the resources shouldn't take that long ? We are currently using a mysql database.</p>",
        "id": 267433055,
        "sender_full_name": "David Meyers",
        "timestamp": 1641818392
    }
]