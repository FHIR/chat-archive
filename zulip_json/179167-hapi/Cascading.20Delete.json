[
    {
        "content": "<p>Hi All,</p>\n<p>So, lots of people have been asking for a cascading delete function in HAPI FHIR lately ( <span class=\"user-mention\" data-user-id=\"191372\">@René Spronk</span>  <span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span> <span class=\"user-mention\" data-user-id=\"191321\">@David Hay</span> ).. This is now available on the public HAPI FHIR server, and will be available as an optional interceptor in the JPA server by this weekend.</p>\n<p>Do do a cascading delete, add <code>_cascade=true</code> do your HTTP DELETE URL.</p>",
        "id": 169261465,
        "sender_full_name": "James Agnew",
        "timestamp": 1561755427
    },
    {
        "content": "<p>Cool! And the CLI?</p>",
        "id": 169262697,
        "sender_full_name": "David Hay",
        "timestamp": 1561756325
    },
    {
        "content": "<p>Is that standard FHIR, or a HAPI extra?</p>",
        "id": 169265147,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1561758422
    },
    {
        "content": "<p>Thanks - just as a point of clarification: if used on e.g. Encounter/123, this would delete the encounter as well as any resources referencing the encounter, expanding the tree to anything that somewhere in the tree structure directly or indirectly references Encounter/123?</p>",
        "id": 169282759,
        "sender_full_name": "René Spronk",
        "timestamp": 1561785821
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191321\">@David Hay</span> - Yup it'll be supported in the CLI<br>\n<span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span> - This is a HAPI specific feature. I think HAPI is one of the few that enforces referential integrity in the first place so most wouldn't need this feature anyhow.<br>\n<span class=\"user-mention\" data-user-id=\"191372\">@René Spronk</span> - That's how it should work, yup. Definitely welcome any feedback if it's not doing what you expect.</p>",
        "id": 169342374,
        "sender_full_name": "James Agnew",
        "timestamp": 1561905730
    },
    {
        "content": "<p>Oh, and this has been merged to master not for anyone who wants to try it on their own server - This is the interceptor in question: <a href=\"https://github.com/jamesagnew/hapi-fhir/blob/master/hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/interceptor/CascadingDeleteInterceptor.java\" target=\"_blank\" title=\"https://github.com/jamesagnew/hapi-fhir/blob/master/hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/interceptor/CascadingDeleteInterceptor.java\">https://github.com/jamesagnew/hapi-fhir/blob/master/hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/interceptor/CascadingDeleteInterceptor.java</a></p>\n<p>Man, I can not tell you how much I love the new interceptor framework. It is so cool for this kind of thing. We have Ken Stevens to thank for most of the hard work on this feature.</p>",
        "id": 169342445,
        "sender_full_name": "James Agnew",
        "timestamp": 1561905900
    },
    {
        "content": "<p>Postman, trying to exec DELETE <a href=\"http://hapi.fhir.org/baseDstu3/Patient?identifier=1020304050&amp;_cascade=true\" target=\"_blank\" title=\"http://hapi.fhir.org/baseDstu3/Patient?identifier=1020304050&amp;_cascade=true\">http://hapi.fhir.org/baseDstu3/Patient?identifier=1020304050&amp;_cascade=true</a> - error 409 Conflict, OperationOutcome states \"Trying to delete Condition/1686707/_history/1 but this is not the current version\"</p>",
        "id": 169377310,
        "sender_full_name": "René Spronk",
        "timestamp": 1561970010
    },
    {
        "content": "<p>Ah thanks for letting me know, will investigate.</p>\n<p>FYI I have changed the syntax slightly, so you now need to do <code>_cascade=delete</code> (not <code>true</code>). It occurs to me that there are plenty of other behaviours that might also make sense, so a more flexible syntax is better, even if we only support one option right now.</p>",
        "id": 169409053,
        "sender_full_name": "James Agnew",
        "timestamp": 1561998024
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191372\">@René Spronk</span> This bug has been (hopefully) fixed</p>",
        "id": 169466801,
        "sender_full_name": "James Agnew",
        "timestamp": 1562060486
    },
    {
        "content": "<p>Works like a charm. Side observation during testing: using a GET for Patient?_tag=http://www.alpha.alp/use-case| (i.e. no code supplied) produces an error - can't search for 'any tag from a particular coding system' , code is mandatory. Why is that?</p>",
        "id": 169467489,
        "sender_full_name": "René Spronk",
        "timestamp": 1562061223
    },
    {
        "content": "<p>We don't have indexes in the DB to support that search, nothing more interesting than that. Could definitely add if there is a usecase.</p>",
        "id": 169467714,
        "sender_full_name": "James Agnew",
        "timestamp": 1562061468
    },
    {
        "content": "<p>No particular use case here - during FHIR training courses we ask people to update the patient name in an instance example, and sometimes they modify the tag-value as well (it has the same value as the patients' given name). But there are different ways of dealing with that issue when deleting these training resources from the public test servers (mostly either HAPI or Vonk for the STU3 exercises, we'll reselect the appropriate open test servers for our R4 exercises which we'll start using this September, I'm fairly sure HAPI and Vonk will still be part of our list though - especially now that cleaning up has gotten easier on HAPI than it was before).</p>",
        "id": 169468707,
        "sender_full_name": "René Spronk",
        "timestamp": 1562062439
    }
]