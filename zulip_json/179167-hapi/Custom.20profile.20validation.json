[
    {
        "content": "<p>I am assisting a developer in implementing validation of a custom profile using HAPI.  What I'd like to be able to do is validate a set of resources against a set of custom profiles, regardless of whether they actually declare conformance to the profile or not.  He thought that starting with a FHIRInstanceValidator would do the trick but I don't see  way to ask \"is this resource conformant to this profile?\".  Is there a known way of doing this with HAPI?</p>",
        "id": 172590753,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1565099900
    },
    {
        "content": "<p>hapi can do this as you can provide the profile to validate against in the $validate operation</p>",
        "id": 172592292,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1565100931
    },
    {
        "content": "<p><a href=\"https://www.hl7.org/fhir/resource-operation-validate.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/resource-operation-validate.html\">https://www.hl7.org/fhir/resource-operation-validate.html</a></p>",
        "id": 172592396,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1565100964
    },
    {
        "content": "<p>Yes, I know that it implements that function, so I know that it must have support on the server-side for calling the equivalent, but I can't see it.  I've implemented a server operation and I want to call this validation to ensure my operation parameters conform to the proper profiles.  I'll go look how the $validate operation works to see how we can implement this in our operation.</p>",
        "id": 172592725,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1565101192
    },
    {
        "content": "<p>Hmm, do we know that the HAPI $validate function works when given a specific profile?  I am about to test it, but the code would tell me otherwise.<br>\nThis method:<br>\npublic MethodOutcome validate(T theResource, IIdType theId, String theRawResource, EncodingEnum theEncoding, ValidationModeEnum theMode, String theProfile, RequestDetails theRequest)</p>\n<p>in FhirResourceDaoR4 doesn't actually use the \"String theProfile\" parameter at all.</p>",
        "id": 172597379,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1565104147
    },
    {
        "content": "<p>oh, you are right. In FhirResourceDaoR4.java the String containing the profile is never used.<br>\n<span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> is this a bug?</p>",
        "id": 172607079,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1565110836
    },
    {
        "content": "<p>hmm yeah, i'd say that does sound like a bug :(</p>",
        "id": 172617129,
        "sender_full_name": "James Agnew",
        "timestamp": 1565116877
    },
    {
        "content": "<p>I looked at FhirResourceDaoSTU3 and it also doesn't use the profile string, so it's not a recent bug.  I haven't tested the $validate call with the profile specified on the URL to see if that actually does work or not.</p>",
        "id": 172617299,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1565116993
    },
    {
        "content": "<p><a href=\"https://github.com/jamesagnew/hapi-fhir/issues/1414\" target=\"_blank\" title=\"https://github.com/jamesagnew/hapi-fhir/issues/1414\">https://github.com/jamesagnew/hapi-fhir/issues/1414</a></p>",
        "id": 172618830,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1565118100
    },
    {
        "content": "<p>Okay, notwithstanding the issue raised, is there a workaround?  can I \"inject\" a profile into a resource and then validate it?  I'm trying to read the HAPI code to see if it will validate a resource that declares it conforms to a profile.</p>",
        "id": 172627104,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1565124579
    },
    {
        "content": "<p>I'm not clear on the problem here. The core validator does do profile based validation...</p>",
        "id": 172627895,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1565125190
    },
    {
        "content": "<p>The issue here is that there is a bug in HAPI's wrapper around the core validator where if you explicitly ask it to validate against a specific profile URI, it ignores that URI. </p>\n<p>Jean- you could explicitly declare your profile URL in your Resource.meta.profile element- if that's populated, the validator will use it.</p>",
        "id": 172630806,
        "sender_full_name": "James Agnew",
        "timestamp": 1565127626
    },
    {
        "content": "<p>except that he said at the beginning: he wants to enforce the validation irrespective of what the resource claims or not</p>",
        "id": 172631541,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1565128183
    },
    {
        "content": "<p>yeah, that's the bug, I'm just proposing a temporary workaround while I fix that :)</p>",
        "id": 172631884,
        "sender_full_name": "James Agnew",
        "timestamp": 1565128510
    },
    {
        "content": "<p>This has been fixed in the latest 4.0.0-SNAPSHOT in Maven Central, and on <a href=\"http://hapi.fhir.org\" target=\"_blank\" title=\"http://hapi.fhir.org\">hapi.fhir.org</a></p>\n<p>Also of note, we are now using the R5 validator, and a bunch of new caching has been added to the default IValidationSupport implementation used by the JPA server. I'm seeing some decent performance gains in my smoke tests right now.</p>",
        "id": 172708846,
        "sender_full_name": "James Agnew",
        "timestamp": 1565207056
    },
    {
        "content": "<p>The R5 validator is getting pretty solid now. I'm close to moving to asking for test cases with bug reports</p>",
        "id": 172718268,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1565213774
    },
    {
        "content": "<p>Quick question folks -- using <code>http://hapi.fhir.org/baseR4/Patient/$validate</code> works as expected, but when I include <code>?profile=http://bogus/profile/url</code> parameter it seems to ignore it, reporting 200 with \"No issues detected during validation\". Is this expected behavior for the test server?</p>",
        "id": 184745434,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1578067843
    },
    {
        "content": "<p>not from my pov</p>",
        "id": 184789944,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1578116338
    },
    {
        "content": "<p>Hmm.. okay, it works-for-me now.</p>",
        "id": 184963531,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1578349549
    }
]