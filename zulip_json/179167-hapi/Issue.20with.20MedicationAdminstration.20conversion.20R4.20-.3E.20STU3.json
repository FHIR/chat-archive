[
    {
        "content": "<p>There seems to be an issue with MedicationAdministration.dosage.rate[x] when converting from R4 to STU3.</p>\n<p>The conversion itself doesn't throw an exception but after trying to encode the resource to string the parser throws an exception:</p>\n<p>ca.uhn.fhir.parser.DataFormatException: rate has type org.hl7.fhir.dstu3.model.Quantity but this is not a valid type for this element - Expected one of: [class org.hl7.fhir.dstu3.model.Ratio, class org.hl7.fhir.dstu3.model.SimpleQuantity]<br>\n    at ca.uhn.fhir.parser.BaseParser.throwExceptionForUnknownChildType(BaseParser.java:968)<br>\n    at ca.uhn.fhir.parser.BaseParser.getChildNameAndDef(BaseParser.java:429)<br>\n    at ca.uhn.fhir.parser.JsonParser.encodeCompositeElementChildrenToStreamWriter(JsonParser.java:421)<br>\n    at ca.uhn.fhir.parser.JsonParser.encodeCompositeElementToStreamWriter(JsonParser.java:577)<br>\n    at ca.uhn.fhir.parser.JsonParser.encodeChildElementToStreamWriter(JsonParser.java:281)<br>\n    at ca.uhn.fhir.parser.JsonParser.encodeCompositeElementChildrenToStreamWriter(JsonParser.java:487)<br>\n    at ca.uhn.fhir.parser.JsonParser.encodeCompositeElementToStreamWriter(JsonParser.java:577)<br>\n    at ca.uhn.fhir.parser.JsonParser.encodeResourceToJsonStreamWriter(JsonParser.java:731)<br>\n    at ca.uhn.fhir.parser.JsonParser.encodeResourceToJsonStreamWriter(JsonParser.java:615)<br>\n    at ca.uhn.fhir.parser.JsonParser.doEncodeResourceToJsonLikeWriter(JsonParser.java:163)<br>\n    at ca.uhn.fhir.parser.JsonParser.doEncodeResourceToWriter(JsonParser.java:170)<br>\n    at ca.uhn.fhir.parser.BaseParser.encodeResourceToWriter(BaseParser.java:367)<br>\n    at ca.uhn.fhir.parser.BaseParser.encodeResourceToWriter(BaseParser.java:351)<br>\n    at ca.uhn.fhir.parser.BaseParser.encodeResourceToString(BaseParser.java:340)</p>\n<p>As far as I know, shouldn't the MedicationAdministration.dosage.rate[x] be either SimpleQuantity or Ratio? For some reason after converting the resource, the type of rate is Quantity.</p>\n<p>Also after parsing the R4-version of the MedicationAdministration resource, both the rate and dose were Quantity but this is considered valid it would seem.</p>\n<p>The version we are running is 4.0.3.</p>\n<p>I managed to replicate this behavior with a unit test, since the original issue was spotted when RestfulServer sends the resource back as response to the user after the OutgoingResponse-hooks.</p>\n<p>I also looked up the code in the VersionConvertor30_40 and I found out that MedicationAdministration.dosage.rate[x] doesn't even have an option for converting the rate to SimpleQuantity, it will always convert it Quantity. (check: VersionConvertor30_40:convertMedicationAdmistrationDosageComponent():13934 and VersionConvertor30_40:convertType():2910)</p>\n<p>I can add more context by means of a unit test and some resource data if it is necessary.</p>\n<p>This does look kind of weird to me.</p>",
        "id": 178948283,
        "sender_full_name": "Juuso Oksanen",
        "timestamp": 1571921643
    },
    {
        "content": "<p>sure please submit the unit test as a PR or an issue, and I'll look at the underlying problem</p>",
        "id": 178975882,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1571938012
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> this is actually an issue in your parser framework - SimpleQuantity is not a real class, it's just a profile, so the underlying type is actually a Quantity</p>",
        "id": 178984536,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1571943058
    },
    {
        "content": "<p>Created an issue regarding this:<br>\n<a href=\"https://github.com/jamesagnew/hapi-fhir/issues/1564\" target=\"_blank\" title=\"https://github.com/jamesagnew/hapi-fhir/issues/1564\">https://github.com/jamesagnew/hapi-fhir/issues/1564</a></p>",
        "id": 179052877,
        "sender_full_name": "Juuso Oksanen",
        "timestamp": 1572012816
    }
]