[
    {
        "content": "<p>Hi All,</p>\n<p>As mentioned during the 5.7.0 release webinar, our next release will be a major bump to 6.0.0.</p>\n<p>One of the changes being considered as a part of this bump is to replace our use of <code>java.util.Date</code> in the datatype classes for date/dateTime/instant with their respective java.time equivalents. Presumably:</p>\n<ul>\n<li>date: java.time.LocalDate</li>\n<li>dateTime / instant: java.time.ZonedDateTime</li>\n</ul>\n<p>This would be a breaking change since calling (for example) <code>DateTime#getValue()</code> would start returning a ZonedDateTime and not a Date. Presumably we would include utility method like <code>getValueAsDate()</code> and <code>setValueAsDate(Date)</code>.</p>\n<p>So I guess the question here is: Are there any objections to this change? Or for that matter do people think this is beneficial enough to warrant the change?</p>",
        "id": 273718323,
        "sender_full_name": "James Agnew",
        "timestamp": 1646172363
    },
    {
        "content": "<p>It would definitely affect any clients or PlainServer based implementations. It's likely not too difficult to deal with though. Easier than some of the recent Spring updates probably for those of using HAPI in SpringBoot apps. </p>\n<p>You could presumably remove half? the pain points if the existing setters were overloaded to accept both types?</p>",
        "id": 273721103,
        "sender_full_name": "Craig McClendon",
        "timestamp": 1646173761
    },
    {
        "content": "<p>+1 for the switch, looking forward for java.time ...</p>",
        "id": 273767741,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1646207565
    },
    {
        "content": "<p>+1 for the modern dateTime java classes</p>",
        "id": 273782303,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1646215549
    },
    {
        "content": "<p>I second that</p>",
        "id": 273801685,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1646225801
    }
]