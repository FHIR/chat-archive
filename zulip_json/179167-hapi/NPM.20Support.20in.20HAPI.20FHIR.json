[
    {
        "content": "<p>Hi All- I'm working now on beefing up package support to HAPI FHIR. (A bunch of the initial legwork was done by <span class=\"user-mention\" data-user-id=\"294872\">@Martin Zacho Grønhøj</span> . Big shoutout for the fine work!)</p>\n<p>I'd like to validate the approach we're taking to make sure this will be useful to people who are working with NPM packages. Essentially we're thinking the following:</p>\n<ul>\n<li>A new \"package installation spec\" will be present in the JPA server. It is defined by configuration, and is read only on server startup.</li>\n<li>In this spec you can define IG packages by any of the following:<ul>\n<li>ID/version (meaning it will be fetched automatically from the FHIR package server at <a href=\"http://packages.fhir.org\">packages.fhir.org</a>)</li>\n<li>URL to direct download</li>\n<li>Local file path</li>\n</ul>\n</li>\n<li>The system will import the IG and optionally any dependency IGs. Importing happens into a set of dedicated database tables in order to provide permanent storage. The actual IG binary is stored in a Binary resource, and the individual conformance resources within it also get extracted into Binary resources (in order to allow people who are using externalized binary storage to take advantage).</li>\n<li>Once an IG is imported, it becomes available to the validator via a newly IValidationSupport module. We don't load the whole IG into memory in order to save space, but the usual caching tier in front of the validation support module will cache these resources too and performance seems pretty good in my tests so far.</li>\n<li>Optionally, the conformance resources can also be loaded into the repository as resources (i.e. if the IG contained a StructureDefinition, that SD will actually be saved in the repo as a SD so it can be found using searches/reads/etc.). This step is optional since the validator can get at these resources without them being saved as resources in the DB.</li>\n<li>This same mechanism will also be usable for people who need to \"pre seed\" resources of other types into their repository. E.g. if you need a set of patients and observations automatically imported into every environment you build or something like that.</li>\n</ul>\n<p>Would like to hear feedback from anyone who is developing against IG packages right now- would this meet your needs? Do you have other needs?</p>\n<p>I'm hoping this will be merged in the next few days, would really love some early testing so we can get this feature right by the time august rolls around..</p>",
        "id": 199387455,
        "sender_full_name": "James Agnew",
        "timestamp": 1591027476
    },
    {
        "content": "<p>there's some test data available via packages - fhir.test.data.r[v]. There's also an additional package that contains a bunch of terminology resources that we can't put in the base FHIR spec: fhir.tx.support</p>",
        "id": 199422394,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591045168
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> note that it would be good to define a way to get the latest published version of a package without nominating a specific version. It might also be good to allow <code>current</code> as a version as well</p>",
        "id": 199422630,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1591045245
    },
    {
        "content": "<p>yep - support for WIP packages is highly needed</p>",
        "id": 199423772,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1591045711
    },
    {
        "content": "<p>What about the example resources that are part of IG? Where are they placed? Are they what you call \"pre seed\" <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> ?</p>",
        "id": 199424056,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1591045820
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> the npm support sounds awesome! we are using npm packages for StructureMap/StructureDefinition/ValueSet  for the $transform operation where we don't need JPA at all but would be happy to migrate to the setup you describe. As far as I can see your description fits our needs.</p>",
        "id": 199463285,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1591087159
    },
    {
        "content": "<p>Would \"pre seed\" be anything that isn't Conformance/Terminology resources, with the subscription resource being an exception to that?</p>",
        "id": 199463676,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1591087352
    }
]