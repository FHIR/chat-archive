[
    {
        "content": "<p>We are building a reference implementation for a Drug Formulary IG -- <a href=\"http://hl7.org/fhir/us/Davinci-drug-formulary/Jun2019/\" target=\"_blank\" title=\"http://hl7.org/fhir/us/Davinci-drug-formulary/Jun2019/\">http://hl7.org/fhir/us/Davinci-drug-formulary/Jun2019/</a> using HAPI 3.8.<br>\nThe IG profiles MedicationKnowledge for the drugs in a formulary, and List for the CoveragePlan (metadata, drug tiers, cost sharing).  The actual list entries in the List are references to FormularyDrug (MedicationKnowledge) entries.</p>\n<p>The sample formulary we are trying to load has 4135 drugs in each plan.<br>\nLoading the LIst elements is touch and go, and often times out.    For example, <a href=\"/user_uploads/10155/7HzOQTZupH0Doo-HolDAZXXz/0d33e2.List.json\" target=\"_blank\" title=\"0d33e2.List.json\">0d33e2.List.json</a>    try loading with:</p>\n<p>PUT <a href=\"http://hapi.fhir.org/baseR4/List/0d33e2\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/List/0d33e2\">http://hapi.fhir.org/baseR4/List/0d33e2</a>  ... it times out for me.   All of the referenced MedicationKNowledge entries are loaded.</p>\n<p>I did succeed in loading a list of similar size:   <a href=\"http://hapi.fhir.org/baseR4/List/6448eb\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/List/6448eb\">http://hapi.fhir.org/baseR4/List/6448eb</a></p>\n<p>Questions:<br>\n1) Do you consider this a HAPI issue, or is it bad form to have lists with 1000s of elements?<br>\n2) Since we are not concerned about referential integrity of the List,  are there means to speed up the load so it doesn't timeout?</p>\n<p>Thanks,<br>\nSaul<br>\n<span class=\"user-mention\" data-user-id=\"225612\">@Stephen MacVicar</span></p>",
        "id": 169044511,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1561564917
    },
    {
        "content": "<p>As a follow up, HAPI initially <a href=\"/user_uploads/10155/IHDlkbugfqvCfK8ga_C3hmvU/stack_trace_1.txt\" target=\"_blank\" title=\"stack_trace_1.txt\">throws an error</a> during the upload.</p>\n<p>The client receives no response when this error occurs and times out. Then a bit later, the database raises a duplicate key error which causes HAPI to raise <a href=\"/user_uploads/10155/HppYIdHiLbcFvvvwdF4mGkpe/stack_trace_2.txt\" target=\"_blank\" title=\"stack_trace_2.txt\">some more errors</a>. A duplicate key error would seem to indicate that the resource was successfully persisted despite the errors, and performing a search/read confirms that the resource was persisted and is available on the server.</p>",
        "id": 169066555,
        "sender_full_name": "Stephen MacVicar",
        "timestamp": 1561573966
    },
    {
        "content": "<p>Indeed, <a href=\"http://hapi.fhir.org/baseR4/List/0d33e2\" target=\"_blank\" title=\"http://hapi.fhir.org/baseR4/List/0d33e2\">http://hapi.fhir.org/baseR4/List/0d33e2</a> is alive and well despite the time out.</p>",
        "id": 169066784,
        "sender_full_name": "Saul Kravitz",
        "timestamp": 1561574114
    }
]