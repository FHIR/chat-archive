[
    {
        "content": "<p>Hi,<br>\nI am currently working with a HAPI JPA Server module for an enterprise FHIR project (large document bundles). Trying work out if there a way for this to be configured to allow us to specify our own resource IDs/version ID handling as by default it appears to be controlled automatically. If this is not an easy config task we were thinking of adding our own ID within the resource identifier element instead?<br>\nThanks!</p>",
        "id": 173565977,
        "sender_full_name": "Ben Grey",
        "timestamp": 1566238566
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span></p>",
        "id": 173675419,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1566320487
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"235201\">@Ben Grey</span> ,  yes, you can control the \"server ID mode\" and \"client ID mode\" via the DaoConfig. By default HAPI FHIR creates sequential numeric IDs and allows clients to assign non-numeric IDs but you can adjust both of these behaviours.</p>",
        "id": 173778410,
        "sender_full_name": "James Agnew",
        "timestamp": 1566380199
    },
    {
        "content": "<p>I am creating a local HAPI FHIR server, but when performing a search with multiple parameters it completely freezes. Is there a configuration parameter that needs to be enabled?</p>",
        "id": 254353941,
        "sender_full_name": "Stefan Heijmans",
        "timestamp": 1632311433
    },
    {
        "content": "<p>I doubt there is a \"don't freeze\" configuration parameter. You're going to have to figure out where it's \"freezing\". You are going to have to instrument your code to find out where it appears to be freezing. Is it taking too long to parse your parameters, too long to query the database, slow network pipe, etc. Once you find our where the \"freeze\" is, then you can determine what needs to be done about it.</p>",
        "id": 254355031,
        "sender_full_name": "Daniel Venton",
        "timestamp": 1632312086
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"335936\">Daniel Venton</span> <a href=\"#narrow/stream/179166-implementers/topic/JPA.20Server.20Config/near/254355031\">said</a>:</p>\n<blockquote>\n<p>I doubt there is a \"don't freeze\" configuration parameter. You're going to have to figure out where it's \"freezing\". You are going to have to instrument your code to find out where it appears to be freezing. Is it taking too long to parse your parameters, too long to query the database, slow network pipe, etc. Once you find our where the \"freeze\" is, then you can determine what needs to be done about it.</p>\n</blockquote>\n<p>So in general and just to be clear, all HAPI servers should be able to accept a multi parameter query? Performing the same query on the online server at <a href=\"http://hapi.fhir.org\">http://hapi.fhir.org</a> does immediately return a result. Is there anyway to view the .yaml configuration file for this online server?</p>",
        "id": 254356135,
        "sender_full_name": "Stefan Heijmans",
        "timestamp": 1632312659
    },
    {
        "content": "<p>Everybody can do their own thing, so it's entirely possible that there are servers that can only accept 1 parameter. But if they are using HAPI and they are coded that way then HAPI will tell you, \"No matching signature\" or some such message, telling you it doesn't know how to process that search set. <br>\nI would expect that most servers treat the search param list as all values are optional, you can search with any combination of the allowed items.</p>",
        "id": 254357109,
        "sender_full_name": "Daniel Venton",
        "timestamp": 1632313143
    },
    {
        "content": "<p>That said, not everything is free. If your search requires the database to table scan (because you don't have indexes) the entire database with billions of records, then it's probably going to take awhile. If your searches only filter on indexed columns it'll be faster. I don't know how your database is setup, but if HAPI has to read billions of rows, de-serialize each item to get to the value of X, just to determine if that row is 'selected', then good luck ever getting a response.</p>",
        "id": 254357636,
        "sender_full_name": "Daniel Venton",
        "timestamp": 1632313384
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"335936\">Daniel Venton</span> <a href=\"#narrow/stream/179166-implementers/topic/JPA.20Server.20Config/near/254357636\">said</a>:</p>\n<blockquote>\n<p>That said, not everything is free. If your search requires the database to table scan (because you don't have indexes) the entire database with billions of records, then it's probably going to take awhile. If your searches only filter on indexed columns it'll be faster. I don't know how your database is setup, but if HAPI has to read billions of rows, de-serialize each item to get to the value of X, just to determine if that row is 'selected', then good luck ever getting a response.</p>\n</blockquote>\n<p>But what if there is only one record, that is easily found when performing a search on its identifier, but the server does not respond when doing the same search with identifier + subject ID, for instance. Is there any indication what goes wrong?</p>",
        "id": 254359353,
        "sender_full_name": "Stefan Heijmans",
        "timestamp": 1632314217
    },
    {
        "content": "<p>Are there logs, monitoring tools. Are you running an out-of-the-box solution (stand up a jar, set some config and go) or a custom implementation (you wrote some code to utilize HAPI libraries)? If the 1st then you'll have to provide the scenario to the application provider you can try stream <a class=\"stream\" data-stream-id=\"179167\" href=\"/#narrow/stream/179167-hapi\">#hapi</a> , if the second, then you can debug and trace what is happening.</p>",
        "id": 254369840,
        "sender_full_name": "Daniel Venton",
        "timestamp": 1632318515
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"335936\">Daniel Venton</span> <a href=\"#narrow/stream/179166-implementers/topic/JPA.20Server.20Config/near/254369840\">said</a>:</p>\n<blockquote>\n<p>Are there logs, monitoring tools. Are you running an out-of-the-box solution (stand up a jar, set some config and go) or a custom implementation (you wrote some code to utilize HAPI libraries)? If the 1st then you'll have to provide the scenario to the application provider you can try stream <a class=\"stream\" data-stream-id=\"179167\" href=\"/#narrow/stream/179167-hapi\">#hapi</a> , if the second, then you can debug and trace what is happening.</p>\n</blockquote>\n<p>We are running the HAPI server in Docker as an more or less out of the box solution. So far I have not seen any logs and are not aware of any monitoring tools, so any help there would be appreciated.</p>",
        "id": 254518267,
        "sender_full_name": "Stefan Heijmans",
        "timestamp": 1632395941
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191315\">Josh Mandel</span> has marked this topic as resolved.</p>",
        "id": 254567584,
        "sender_full_name": "Notification Bot",
        "timestamp": 1632416016
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191315\">Josh Mandel</span> has marked this topic as unresolved.</p>",
        "id": 254567618,
        "sender_full_name": "Notification Bot",
        "timestamp": 1632416028
    },
    {
        "content": "<p>This topic was moved here from <a class=\"stream-topic\" data-stream-id=\"179166\" href=\"/#narrow/stream/179166-implementers/topic/JPA.20Server.20Config\">#implementers &gt; JPA Server Config</a> by <span class=\"user-mention silent\" data-user-id=\"191315\">Josh Mandel</span></p>",
        "id": 254567709,
        "sender_full_name": "Notification Bot",
        "timestamp": 1632416052
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"443316\">Stefan Heijmans</span> <a href=\"#narrow/stream/179167-hapi/topic/JPA.20Server.20Config/near/254518267\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"335936\">Daniel Venton</span> <a href=\"#narrow/stream/179166-implementers/topic/JPA.20Server.20Config/near/254369840\">said</a>:</p>\n<blockquote>\n<p>Are there logs, monitoring tools. Are you running an out-of-the-box solution (stand up a jar, set some config and go) or a custom implementation (you wrote some code to utilize HAPI libraries)? If the 1st then you'll have to provide the scenario to the application provider you can try stream <a class=\"stream\" data-stream-id=\"179167\" href=\"/#narrow/stream/179167-hapi\">#hapi</a> , if the second, then you can debug and trace what is happening.</p>\n</blockquote>\n<p>We are running the HAPI server in Docker as an more or less out of the box solution. So far I have not seen any logs and are not aware of any monitoring tools, so any help there would be appreciated.</p>\n</blockquote>\n<p>I got the logging of Docker itself working and now I am seeing the following error popping up: 'Failed to pre-expand ValueSet: Unknown code system <a href=\"http://hl7.org/fhir/sid/icd-10-cm\">http://hl7.org/fhir/sid/icd-10-cm</a>.' How can I resolve this? Do I need to include a coding system in the configuration .yaml file as implementation guide? If so, how should this be done? Hopefully someone can help me.</p>",
        "id": 255013945,
        "sender_full_name": "Stefan Heijmans",
        "timestamp": 1632732567
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"443316\">Stefan Heijmans</span> <a href=\"#narrow/stream/179167-hapi/topic/JPA.20Server.20Config/near/255013945\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"443316\">Stefan Heijmans</span> <a href=\"#narrow/stream/179167-hapi/topic/JPA.20Server.20Config/near/254518267\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"335936\">Daniel Venton</span> <a href=\"#narrow/stream/179166-implementers/topic/JPA.20Server.20Config/near/254369840\">said</a>:</p>\n<blockquote>\n<p>Are there logs, monitoring tools. Are you running an out-of-the-box solution (stand up a jar, set some config and go) or a custom implementation (you wrote some code to utilize HAPI libraries)? If the 1st then you'll have to provide the scenario to the application provider you can try stream <a class=\"stream\" data-stream-id=\"179167\" href=\"/#narrow/stream/179167-hapi\">#hapi</a> , if the second, then you can debug and trace what is happening.</p>\n</blockquote>\n<p>We are running the HAPI server in Docker as an more or less out of the box solution. So far I have not seen any logs and are not aware of any monitoring tools, so any help there would be appreciated.</p>\n</blockquote>\n<p>I got the logging of Docker itself working and now I am seeing the following error popping up: 'Failed to pre-expand ValueSet: Unknown code system <a href=\"http://hl7.org/fhir/sid/icd-10-cm\">http://hl7.org/fhir/sid/icd-10-cm</a>.' How can I resolve this? Do I need to include a coding system in the configuration .yaml file as implementation guide? If so, how should this be done? Hopefully someone can help me.</p>\n</blockquote>\n<p>If anyone is able to provide the complete configuration.yaml file of the online HAPI server at HAPI FHIR that would also already be very useful!</p>",
        "id": 255053435,
        "sender_full_name": "Stefan Heijmans",
        "timestamp": 1632751538
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"443316\">@Stefan Heijmans</span> I don't expect that the HAPI server that runs on <a href=\"http://hapi.fhir.org/\">http://hapi.fhir.org/</a> is running the same instance as the one you find on hapi-fhir-jpa-starter</p>",
        "id": 255053979,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1632751746
    },
    {
        "content": "<p>hence, no such configuration.yaml file exists</p>",
        "id": 255054017,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1632751761
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191427\">Jens Villadsen</span> <a href=\"#narrow/stream/179167-hapi/topic/JPA.20Server.20Config/near/255054017\">said</a>:</p>\n<blockquote>\n<p>hence, no such configuration.yaml file exists</p>\n</blockquote>\n<p>That would be a shame as that server is working properly with our own created application...</p>",
        "id": 255061275,
        "sender_full_name": "Stefan Heijmans",
        "timestamp": 1632754304
    },
    {
        "content": "<p>The poster error suggests, that your Server doesn‘t know the ICD10-CM CodeSystem. After adding this CS, the expansion should work.</p>",
        "id": 255269101,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1632852137
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191451\">Patrick Werner</span> <a href=\"#narrow/stream/179167-hapi/topic/JPA.20Server.20Config/near/255269101\">said</a>:</p>\n<blockquote>\n<p>The poster error suggests, that your Server doesn‘t know the ICD10-CM CodeSystem. After adding this CS, the expansion should work.</p>\n</blockquote>\n<p>Sounds logical, but can you also help me with explaining how this CS should be added? Ideally, it is done through the application.yaml configuration file, as an implementation guide I can imagine. However, adding the following does not work:</p>\n<p>hapi:<br>\n    fhir:<br>\n        implementationguides:<br>\n            icd10:<br>\n                url: <a href=\"http://hl7.org/fhir/sid/icd-10-cm\">http://hl7.org/fhir/sid/icd-10-cm</a><br>\n                name: <a href=\"http://hl7.org/fhir/sid/icd-10-cm\">http://hl7.org/fhir/sid/icd-10-cm</a><br>\n                version: 2.1.0</p>\n<p>Any suggestions on how to solve this?</p>\n<p>PS: Please find attached the complete application.yaml file. Note that also the included implementation guides for Loinc and Snomed are not working either. <a href=\"/user_uploads/10155/u_PCpSmKGLrx3Vf3vzVEgze2/application.yaml\">application.yaml</a></p>",
        "id": 255351520,
        "sender_full_name": "Stefan Heijmans",
        "timestamp": 1632898776
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"443316\">@Stefan Heijmans</span> any update on this? I'm hitting a similar issue.</p>",
        "id": 269148818,
        "sender_full_name": "Alex Bennett",
        "timestamp": 1643049068
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"443316\">@Stefan Heijmans</span>  you have to include a package containing the populated CodeSystem. Unfortunately there is no official source i am aware of.<br>\nBy the way, the correct package for what you have tried would be: hl7.terminology#2.0.0</p>",
        "id": 269149030,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1643049148
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 269149126,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1643049203
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 269149182,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1643049236
    },
    {
        "content": "<p><a href=\"http://tx.fhir.org\">tx.fhir.org</a> is also aware of ICD-10-CM. <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> are there ICD-10-CM CodeSystems with content available?</p>",
        "id": 269149547,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1643049383
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> We do have an ICD-10-CM code system <a href=\"https://github.com/FHIR/packages/blob/master/packages/fhir.tx.support.r4/package/CodeSystem-icd-10-cm.json\">resource</a> in the packages repo, which is the source that <a href=\"http://tx.fhir.org\">tx.fhir.org</a> is using.</p>",
        "id": 269175551,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1643059795
    },
    {
        "content": "<p>that is one big Code system</p>",
        "id": 269176339,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1643060192
    },
    {
        "content": "<p>Yes, it's definitely pretty good sized - but it works on <a href=\"http://tx.fhir.org\">tx.fhir.org</a> (and I expect will in HAPI, too).</p>",
        "id": 269176556,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1643060287
    },
    {
        "content": "<p>Roughly 244849 codes in it</p>",
        "id": 269176579,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1643060307
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> is it part of an IG?</p>",
        "id": 269176638,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1643060349
    },
    {
        "content": "<p>hapi handles them really well. You might have to increase max expansion size tho, if expansions are needed.</p>",
        "id": 269176688,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1643060383
    },
    {
        "content": "<p>right ... I guess the package is <code>fhir.tx.support.r4</code></p>",
        "id": 269176756,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1643060407
    },
    {
        "content": "<p>No, it isn't in an IG (unless someone has picked it up and using it that way that I'm not aware of).  Yes - it's in <code>fhir.tx.support.r4</code>.</p>",
        "id": 269176836,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1643060464
    },
    {
        "content": "<p>It can be resolved from there - <a href=\"https://packages.fhir.org/catalog?name=fhir.tx.support.r4\">https://packages.fhir.org/catalog?name=fhir.tx.support.r4</a> and an IG is more or less an npm in terms of FHIR</p>",
        "id": 269176986,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1643060541
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> shouldn't stuff like <a href=\"https://github.com/FHIR/packages/blob/master/packages/fhir.tx.support.r4/package/CodeSystem-usps.json\">https://github.com/FHIR/packages/blob/master/packages/fhir.tx.support.r4/package/CodeSystem-usps.json</a> be in US core instead?</p>",
        "id": 269177438,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1643060790
    },
    {
        "content": "<p>as well as <a href=\"https://github.com/FHIR/packages/blob/master/packages/fhir.tx.support.r4/package/CodeSystem-nucc-provider-taxonomy.json\">https://github.com/FHIR/packages/blob/master/packages/fhir.tx.support.r4/package/CodeSystem-nucc-provider-taxonomy.json</a></p>",
        "id": 269177668,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1643060918
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> It certainly would be reasonable to reference and/or publish in US Core.  But it's also reasonable and very useful to have it available in the FHIR build terminology server, I think - so that's why it's in the packages repo.</p>",
        "id": 269178189,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1643061207
    }
]