[
    {
        "content": "<p>We are introducing the last parts of the HAPI FHIR framework that we hadn't been using to our national setup: Adding HAPI FHIR JAX-RS handles to our Keycloak installation so that users (Practitioners) can be read using FHIR. This means that we are probably using all of the HAPI FHIR frameworks components in our setup. Once again - shoutout to <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> and all of the contributors to the HAPI FHIR reference implementation. IT. IS. AWESOME!</p>",
        "id": 189880778,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1583491892
    },
    {
        "content": "<p>very interesting, we are also using Keycloak with hapi. Will you share your solution?<br>\nWe are having an intermediate, non-FHIR Service handling the creation of users which then creates a Practicioner + its PracticionerRole and creates the corresponding user in Keykloak.</p>",
        "id": 189890199,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1583499778
    },
    {
        "content": "<p>Are you sharing. I toyed with the idea but ended up putting a HAPI facade on top of LDAP. <a href=\"https://github.com/project-wildfyre/sds-adaptor\" target=\"_blank\" title=\"https://github.com/project-wildfyre/sds-adaptor\">https://github.com/project-wildfyre/sds-adaptor</a></p>",
        "id": 189895411,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1583503721
    },
    {
        "content": "<p>We are open sourcing our whole solution. It isn't ready yet to be published, but will be soon.</p>",
        "id": 189896523,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1583504260
    },
    {
        "content": "<p>I'll see what I can do <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> <span class=\"user-mention\" data-user-id=\"191687\">@Kevin Mayfield</span> - I'll follow up on monday ;)  - most of it if highly coupled to our surrounding design, but regardless, I think that I can share most of it - at least in terms of concepts, design, architecture and bindings</p>",
        "id": 189906958,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1583510528
    },
    {
        "content": "<p>Our setup is the following: <a href=\"/user_uploads/10155/52G7q6g7dVFSVYGXlDaLAe92/image.png\" target=\"_blank\" title=\"image.png\">image.png</a>  (from <a href=\"https://ehealth-dk.atlassian.net/wiki/spaces/EDTW/pages/7045392/Security\" target=\"_blank\" title=\"https://ehealth-dk.atlassian.net/wiki/spaces/EDTW/pages/7045392/Security\">https://ehealth-dk.atlassian.net/wiki/spaces/EDTW/pages/7045392/Security</a>)</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/52G7q6g7dVFSVYGXlDaLAe92/image.png\" target=\"_blank\" title=\"image.png\"><img src=\"/user_uploads/10155/52G7q6g7dVFSVYGXlDaLAe92/image.png\"></a></div><p>All our users are federated. Once they log in (through Keycloak), Keycloak creates or updates the user as the Practitioner resource on the FHIR server based on the SAML assertion that it receives. The SAML assertion also includes which CareTeam the Practitioner is associated with which means that KeyCloak also updates the CareTeams</p>",
        "id": 190049248,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1583743541
    },
    {
        "content": "<p>In the picture, the Authorization Service is our Keycloak which is where our solution start</p>",
        "id": 190049305,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1583743578
    },
    {
        "content": "<p>User sessions are  stored in Keycloak as usual</p>",
        "id": 190049335,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1583743628
    },
    {
        "content": "<p>What we are about to do within the next couple of days is to also provide a REST interface to Keycloak using the JAX RS HAPI implementation so that the information about a Practitioner can be fetched on-demand from Keycloak</p>",
        "id": 190049404,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1583743700
    }
]