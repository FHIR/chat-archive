[
    {
        "content": "<p>I am trying to load the <a href=\"https://simplifier.net/packages/de.gecco/1.0.3\">de.gecco#1.0.3 FHIR package</a> into the JPA starter server by declaring it in <em>application.yaml</em>. The loading is triggered just fine, but at some point an error is thrown, seemingly because of a problem with a dependency (of which this package has quite a few). The triggering error is this (I have included more complete log output in the expandable spoiler section below):</p>\n<div class=\"codehilite\"><pre><span></span><code>Caused by: ca.uhn.fhir.rest.server.exceptions.PreconditionFailedException: Unknown base definition: https://www.medizininformatik-initiative.de/fhir/core/modul-diagnose/StructureDefinition/Diagnose\n</code></pre></div>\n<p>The profile with this URL is indeed included in the <a href=\"https://simplifier.net/packages/de.medizininformatikinitiative.kerndatensatz.diagnose/1.0.1\">de.medizininformatikinitiative.kerndatensatz.diagnose#1.0.1 package</a> which is declared as a dependency. That particular version of this package <a href=\"https://registry.fhir.org/package/de.medizininformatikinitiative.kerndatensatz.diagnose%7C1.0.1\">is annotated as \"unlisted\" in the package registry</a>, but is still downloadable from simplifier. Might that be the source of the problem in HAPI or is there perhaps an issue with the dependency resolution?</p>\n<div class=\"spoiler-block\"><div class=\"spoiler-header\">\n<p>Relevant part of server log</p>\n</div><div class=\"spoiler-content\" aria-hidden=\"true\">\n<p>[...]<br>\n2021-05-12 15:43:38.249 [main] INFO  c.u.f.j.p.PackageInstallerSvcImpl [PackageInstallerSvcImpl.java:327] Creating new resource matching ?url=https%3A%2F%2Fwww.netzwerk-universitaetsmedizin.de%2Ffhir%2FStructureDefinition%2Funcertainty-of-presence<br>\n2021-05-12 15:43:38.390 [main] INFO  c.u.f.j.p.PackageInstallerSvcImpl [PackageInstallerSvcImpl.java:327] Creating new resource matching ?url=https%3A%2F%2Fwww.netzwerk-universitaetsmedizin.de%2Ffhir%2FStructureDefinition%2Fgecco-bundle<br>\n2021-05-12 15:43:38.435 [main] INFO  ca.uhn.fhir.context.FhirContext [FhirContext.java:200] Creating new FHIR context for FHIR version [R4]<br>\n2021-05-12 15:43:38.467 [main] WARN  c.u.f.j.p.PackageInstallerSvcImpl [PackageInstallerSvcImpl.java:224] Failed to upload resource of type StructureDefinition with ID null - Error: ca.uhn.fhir.jpa.packages.ImplementationGuideInstallationException: Failure when generating snapshot of StructureDefinition: null<br>\n2021-05-12 15:43:38.469 [main] ERROR o.a.c.c.C.[Tomcat].[localhost].[/] [DirectJDKLog.java:175] Servlet.init() for servlet [jpaRestfulServer] threw exception<br>\nca.uhn.fhir.jpa.packages.ImplementationGuideInstallationException: Error installing IG de.gecco#1.0.3: ca.uhn.fhir.jpa.packages.ImplementationGuideInstallationException: Failure when generating snapshot of StructureDefinition: null<br>\n    at ca.uhn.fhir.jpa.packages.PackageInstallerSvcImpl.install(PackageInstallerSvcImpl.java:225)<br>\n    at ca.uhn.fhir.jpa.packages.PackageInstallerSvcImpl.install(PackageInstallerSvcImpl.java:175)<br>\n    at ca.uhn.fhir.jpa.starter.BaseJpaRestfulServer.initialize(BaseJpaRestfulServer.java:368)<br>\n    at ca.uhn.fhir.jpa.starter.JpaRestfulServer.initialize(JpaRestfulServer.java:22)<br>\n    at ca.uhn.fhir.rest.server.RestfulServer.init(RestfulServer.java:1285)<br>\n    at javax.servlet.GenericServlet.init(GenericServlet.java:203)<br>\n    at org.apache.catalina.core.StandardWrapper.initServlet(StandardWrapper.java:1134)<br>\n    at org.apache.catalina.core.StandardWrapper.load(StandardWrapper.java:986)<br>\n    at org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext.load(TomcatEmbeddedContext.java:82)<br>\n    at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)<br>\n    at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1655)<br>\n    at java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:658)<br>\n    at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:274)<br>\n    at java.base/java.util.TreeMap$ValueSpliterator.forEachRemaining(TreeMap.java:2890)<br>\n    at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)<br>\n    at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)<br>\n    at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)<br>\n    at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)<br>\n    at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)<br>\n    at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)<br>\n    at org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext.lambda$deferredLoadOnStartup$0(TomcatEmbeddedContext.java:65)<br>\n    at org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext.doWithThreadContextClassLoader(TomcatEmbeddedContext.java:106)<br>\n    at org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext.deferredLoadOnStartup(TomcatEmbeddedContext.java:64)<br>\n    at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.performDeferredLoadOnStartup(TomcatWebServer.java:305)<br>\n    at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:216)<br>\n    at org.springframework.boot.web.servlet.context.WebServerStartStopLifecycle.start(WebServerStartStopLifecycle.java:43)<br>\n    at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:178)<br>\n    at org.springframework.context.support.DefaultLifecycleProcessor.access$200(DefaultLifecycleProcessor.java:54)<br>\n    at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:356)<br>\n    at java.base/java.lang.Iterable.forEach(Iterable.java:75)<br>\n    at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:155)<br>\n    at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:123)<br>\n    at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:940)<br>\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:591)<br>\n    at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:144)<br>\n    at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:767)<br>\n    at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)<br>\n    at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:426)<br>\n    at org.springframework.boot.SpringApplication.run(SpringApplication.java:326)<br>\n    at org.springframework.boot.SpringApplication.run(SpringApplication.java:1309)<br>\n    at org.springframework.boot.SpringApplication.run(SpringApplication.java:1298)<br>\n    at ca.uhn.fhir.jpa.starter.Application.main(Application.java:33)<br>\nCaused by: ca.uhn.fhir.jpa.packages.ImplementationGuideInstallationException: Failure when generating snapshot of StructureDefinition: null<br>\n    at ca.uhn.fhir.jpa.packages.PackageInstallerSvcImpl.generateSnapshot(PackageInstallerSvcImpl.java:413)<br>\n    at ca.uhn.fhir.jpa.packages.PackageInstallerSvcImpl.install(PackageInstallerSvcImpl.java:221)<br>\n    ... 41 common frames omitted<br>\nCaused by: ca.uhn.fhir.rest.server.exceptions.PreconditionFailedException: Unknown base definition: <a href=\"https://www.medizininformatik-initiative.de/fhir/core/modul-diagnose/StructureDefinition/Diagnose\">https://www.medizininformatik-initiative.de/fhir/core/modul-diagnose/StructureDefinition/Diagnose</a><br>\n    at org.hl7.fhir.common.hapi.validation.support.SnapshotGeneratingValidationSupport.generateSnapshot(SnapshotGeneratingValidationSupport.java:89)<br>\n    at org.hl7.fhir.common.hapi.validation.support.ValidationSupportChain.generateSnapshot(ValidationSupportChain.java:66)<br>\n    at org.hl7.fhir.common.hapi.validation.support.BaseValidationSupportWrapper.generateSnapshot(BaseValidationSupportWrapper.java:94)<br>\n    at org.hl7.fhir.common.hapi.validation.support.SnapshotGeneratingValidationSupport.generateSnapshot(SnapshotGeneratingValidationSupport.java:96)<br>\n    at org.hl7.fhir.common.hapi.validation.support.ValidationSupportChain.generateSnapshot(ValidationSupportChain.java:66)<br>\n    at org.hl7.fhir.common.hapi.validation.support.BaseValidationSupportWrapper.generateSnapshot(BaseValidationSupportWrapper.java:94)<br>\n    at ca.uhn.fhir.jpa.packages.PackageInstallerSvcImpl.generateSnapshot(PackageInstallerSvcImpl.java:411)<br>\n    ... 42 common frames omitted<br>\n[...]</p>\n</div></div>",
        "id": 238479742,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1620828601
    },
    {
        "content": "<p>I think you'll have to step it to find out exactly where it goes wrong</p>",
        "id": 238563732,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1620865386
    },
    {
        "content": "<p>OK, will spend some serious time with the debugger when I get back to the office Monday and see if I can find the culprit <span aria-label=\"magnifying glass\" class=\"emoji emoji-1f50d\" role=\"img\" title=\"magnifying glass\">:magnifying_glass:</span> .</p>",
        "id": 238665948,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1620932994
    },
    {
        "content": "<p>So, going down the rabbit-hole I found the following: The overall IG load failure error flies in the <a href=\"https://github.com/hapifhir/hapi-fhir/blob/75c74a22dbd1f0dde3631b540d1898eef2a2666f/hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/packages/PackageInstallerSvcImpl.java#L200\">method <code>PackageInstallerSvcImpl#install</code></a> when it finds a profile (directly in the package) without a snapshot, tries to generate this snapshot, and than cannot find a profile that the profile in question is based on (re-profiling of). Specifically, the underlying error happens <a href=\"https://github.com/hapifhir/hapi-fhir/blob/26d030f93e9a3d0bea1bcfdeb74f68e32b970903/hapi-fhir-validation/src/main/java/org/hl7/fhir/common/hapi/validation/support/SnapshotGeneratingValidationSupport.java#L76\">here</a> in <code>SnapshotGeneratingValidationSupport#generateSnapshot</code> because <code>ValidationSupportChain#fetchStructureDefinition</code> does not find the StructureDef in any of the validation supports. In my case, the specific chain of re-profiled profiles that triggered this was the following: </p>\n<ol>\n<li><code>https://www.netzwerk-universitaetsmedizin.de/fhir/StructureDefinition/cardiovascular-diseases</code> - is directly in package, is a re-profiling of...</li>\n<li><code>https://www.netzwerk-universitaetsmedizin.de/fhir/StructureDefinition/gecco-base-condition</code> - is directly in package, is a re-profiling of...</li>\n<li><code>https://www.medizininformatik-initiative.de/fhir/core/modul-diagnose/StructureDefinition/Diagnose</code> - only present in a dependency  (<code>de.medizininformatikinitiative.kerndatensatz.diagnose#1.0.1</code>)</li>\n</ol>\n<p>The last profile is not found, triggering the error. So it looks like the code tries to use resources from the dependencies without having pulled them first (I couldn't see where in <code>PackageInstallerSvcImpl#install</code> the dependencies should actually be pulled).</p>",
        "id": 239072203,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1621251148
    },
    {
        "content": "<p>(PS: As noted in the initial message, the package <code>de.medizininformatikinitiative.kerndatensatz.diagnose#1.0.1</code> is unlisted in the package registry)</p>",
        "id": 239072426,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1621251252
    },
    {
        "content": "<p>would you have some example packages 'to spare' in order to  debug it?</p>",
        "id": 239324823,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1621371472
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> Thanks for looking into this - the one case I have seen is triggered by loading the <a href=\"https://simplifier.net/packages/de.gecco/1.0.3\">de.gecco#1.0.3  package</a> . Is that enough? I don't have any \"synthetic\" packages triggering the behaviour at hand, though I suspect any package with a snapshot-less profile that is based on a profile in a dependency would do the trick.</p>",
        "id": 239365852,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1621400405
    },
    {
        "content": "<p>Ahoi <span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> <span aria-label=\"wave\" class=\"emoji emoji-1f44b\" role=\"img\" title=\"wave\">:wave:</span> , did you by any chance find time to look at this or is there perhaps also still input from me missing?</p>",
        "id": 240159390,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1621933049
    },
    {
        "content": "<p>I haven't had the time to look at it</p>",
        "id": 240160391,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1621933663
    },
    {
        "content": "<p>Now I have ... you might wan't to bring <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> in on this</p>",
        "id": 240162219,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1621934910
    },
    {
        "content": "<p>Thanks for ringing his doorbell <span aria-label=\"smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 240162975,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1621935440
    },
    {
        "content": "<p>If find the time, ill have a look as well</p>",
        "id": 240227296,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1621965893
    },
    {
        "content": "<p>Update: Problem persists (missing resources from package dependencies at snapshot generation), even with the new updated package <code>de.gecco#1.0.4-rc.1</code> which I believe does not use unlisted packages.</p>",
        "id": 240298748,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1622021650
    },
    {
        "content": "<p>(It seems one can get around the issue by manually declaring  the dependencies for loading, but the JDoc for the <code>ca.uhn.fhir.jpa.packages#install</code> method explicitly says <code>Installs a package and its dependencies.</code>, suggesting that dependency handling is included. Which is, I realize, no picnic cf. <a href=\"#narrow/stream/179167-hapi/topic/Package.20version.20conflict.20resolution\">this other thread on dependency conflicts</a> I opened)</p>",
        "id": 240305898,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1622026203
    },
    {
        "content": "<p>I don't follow ... the loading of packages are done recursively. See <a href=\"https://github.com/hapifhir/hapi-fhir/blob/75c74a22dbd1f0dde3631b540d1898eef2a2666f/hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/packages/PackageInstallerSvcImpl.java#L242\">https://github.com/hapifhir/hapi-fhir/blob/75c74a22dbd1f0dde3631b540d1898eef2a2666f/hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/packages/PackageInstallerSvcImpl.java#L242</a></p>",
        "id": 240306153,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1622026385
    },
    {
        "content": "<p>But as far as I can tell from debugging, the <code>install</code> method being called is <a href=\"https://github.com/hapifhir/hapi-fhir/blob/75c74a22dbd1f0dde3631b540d1898eef2a2666f/hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/packages/PackageInstallerSvcImpl.java#L200\">the one returning <code>void</code></a> which does not seem to call <code>fetchAndInstallDependencies</code> (unlike <a href=\"https://github.com/hapifhir/hapi-fhir/blob/75c74a22dbd1f0dde3631b540d1898eef2a2666f/hapi-fhir-jpaserver-base/src/main/java/ca/uhn/fhir/jpa/packages/PackageInstallerSvcImpl.java#L154\">the <code>install</code> method returning PackageInstallOutcomeJson`</a>). Or am missing smt.?</p>",
        "id": 240307136,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1622027012
    },
    {
        "content": "<p>(the latter <code>install</code> function, on the other hand, expects the StructureDefs to already have snapshots, cf. JDoc)</p>",
        "id": 240307407,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1622027181
    },
    {
        "content": "<p>Ok ... so assuming you are using the hapi-fhir-starter-project ... try add the following:</p>\n<div class=\"codehilite\"><pre><span></span><code>                .setFetchDependencies(true)\n                .addDependencyExclude(&quot;hl7.fhir.r4.core&quot;)\n</code></pre></div>\n<p>around line 366, in BaseJpaRestfulServer, then you will see things start happening</p>",
        "id": 240337117,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1622040837
    },
    {
        "content": "<p>Eventually you will see the following error:</p>\n<div class=\"codehilite\"><pre><span></span><code>2021-05-26 16:52:02.919 [main] INFO  c.u.f.jpa.packages.JpaPackageCache [JpaPackageCache.java:195] Parsing package .tar.gz (28612 bytes) from http://packages.fhir.org/kbv.basis/1.1.3\n2021-05-26 16:52:02.948 [main] ERROR o.a.c.c.C.[Tomcat].[localhost].[/] [DirectJDKLog.java:175] Servlet.init() for servlet [jpaRestfulServer] threw exception\nca.uhn.fhir.rest.server.exceptions.InvalidRequestException: Package ID KBV.Basis doesn&#39;t match expected: kbv.basis\n    at ca.uhn.fhir.jpa.packages.JpaPackageCache.addPackageToCache(JpaPackageCache.java:199)\n    at ca.uhn.fhir.jpa.packages.JpaPackageCache.loadPackage(JpaPackageCache.java:398)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.base/java.lang.reflect.Method.invoke(Method.java:566)\n    at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)\n    at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:208)\n    at com.sun.proxy.$Proxy213.loadPackage(Unknown Source)\n    at ca.uhn.fhir.jpa.packages.PackageInstallerSvcImpl.fetchAndInstallDependencies(PackageInstallerSvcImpl.java:265)\n    at ca.uhn.fhir.jpa.packages.PackageInstallerSvcImpl.fetchAndInstallDependencies(PackageInstallerSvcImpl.java:268)\n</code></pre></div>",
        "id": 240337311,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1622040895
    },
    {
        "content": "<p>with those line added you will see that the packages are found and installed recursively and other stuff starts to bug you from the actual packages</p>",
        "id": 240337717,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1622041053
    },
    {
        "content": "<p>Ah, thanks for the tip! Indeed, I see the same now - looks like a version of the recent issue with upper vs. lower-case in package IDs discussed in <a href=\"#narrow/stream/179166-implementers/topic/Error.20loading.20package.20in.20java.20validator\">this thread</a>. Grahame put out a fix in the validator on May 14th, I'm guessing that hasn't propagated to the JPA starter yet?</p>",
        "id": 240344338,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1622043334
    },
    {
        "content": "<p>Update: Turns out to be a similar but separate issue, proposed fix here:  <a href=\"https://github.com/hapifhir/hapi-fhir/pull/2683\">https://github.com/hapifhir/hapi-fhir/pull/2683</a></p>",
        "id": 240466010,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1622121791
    },
    {
        "content": "<p>Did you just link to your own link ;)</p>",
        "id": 240620879,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1622215984
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194703\">@Morten Ernebjerg</span> merged! Thanks for the contribution.</p>",
        "id": 240706692,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1622301201
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 240755063,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1622380106
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191427\">Jens Villadsen</span> <a href=\"#narrow/stream/179167-hapi/topic/Error.20loading.20de.2Egecco.20package.20into.20JPA.20starter/near/240337117\">said</a>:</p>\n<blockquote>\n<p>Ok ... so assuming you are using the hapi-fhir-starter-project ... try add the following:</p>\n<div class=\"codehilite\"><pre><span></span><code>                .setFetchDependencies(true)\n                .addDependencyExclude(&quot;hl7.fhir.r4.core&quot;)\n</code></pre></div>\n<p>around line 366, in BaseJpaRestfulServer, then you will see things start happening</p>\n</blockquote>\n<p>all in favour that I add this as a configuration option for the starter project? <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> <span class=\"user-mention\" data-user-id=\"194703\">@Morten Ernebjerg</span> ?</p>",
        "id": 243626647,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1624440499
    },
    {
        "content": "<p>or should it be default behavior?</p>",
        "id": 243626668,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1624440514
    },
    {
        "content": "<p>I think this should be default behaviour. I also want to add ConceptMaps to the loaded ResourceTypes</p>",
        "id": 243626824,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1624440615
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> THanks for suggesting this - I would actually say it should be the default behavior (that was my ow naive assumption when I started...). Are there situation where one would <em>not</em> want this?</p>",
        "id": 243626848,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1624440631
    },
    {
        "content": "<p>what are the other packages Id's that should always be ignored (besides the r4)?</p>",
        "id": 243629793,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1624442476
    },
    {
        "content": "<p><a href=\"https://github.com/hapifhir/hapi-fhir-jpaserver-starter/pull/254\">https://github.com/hapifhir/hapi-fhir-jpaserver-starter/pull/254</a> <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> <span class=\"user-mention\" data-user-id=\"194703\">@Morten Ernebjerg</span>  <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span></p>",
        "id": 243763687,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1624529008
    },
    {
        "content": "<p>merged. Thanks <span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span></p>",
        "id": 243768848,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1624532507
    }
]