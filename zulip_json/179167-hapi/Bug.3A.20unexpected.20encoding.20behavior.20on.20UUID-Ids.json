[
    {
        "content": "<p>I experienced this issue some while ago:</p>\n<div class=\"codehilite\"><pre><span></span><code> <span class=\"n\">Observation</span> <span class=\"n\">o</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">Observation</span><span class=\"p\">();</span>\n    <span class=\"n\">o</span><span class=\"p\">.</span><span class=\"na\">setStatus</span><span class=\"p\">(</span><span class=\"n\">ObservationStatus</span><span class=\"p\">.</span><span class=\"na\">FINAL</span><span class=\"p\">);</span>\n    <span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"n\">IdDt</span><span class=\"p\">.</span><span class=\"na\">newRandomUuid</span><span class=\"p\">();</span>\n    <span class=\"n\">o</span><span class=\"p\">.</span><span class=\"na\">setId</span><span class=\"p\">(</span><span class=\"n\">id</span><span class=\"p\">);</span>\n    <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"na\">out</span><span class=\"p\">.</span><span class=\"na\">println</span><span class=\"p\">(</span><span class=\"n\">id</span><span class=\"p\">);</span>\n    <span class=\"n\">System</span><span class=\"p\">.</span><span class=\"na\">out</span><span class=\"p\">.</span><span class=\"na\">println</span><span class=\"p\">(</span><span class=\"n\">parser</span><span class=\"p\">.</span><span class=\"na\">encodeResourceToString</span><span class=\"p\">(</span><span class=\"n\">o</span><span class=\"p\">));</span>\n</code></pre></div>\n\n\n<p>Output:</p>\n<div class=\"codehilite\"><pre><span></span><code>urn:uuid:92ba7135-b731-430f-bdc0-87d6a78ef0f7\n{\n  &quot;resourceType&quot;: &quot;Observation&quot;,\n  &quot;status&quot;: &quot;final&quot;\n}\n</code></pre></div>",
        "id": 198584854,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1590329262
    },
    {
        "content": "<p>the parser doesn't encode the id if it is an urn:uuid.</p>",
        "id": 198584896,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1590329289
    },
    {
        "content": "<p>I think this is wrong and should be fixed.</p>",
        "id": 198584900,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1590329303
    },
    {
        "content": "<p><a href=\"https://github.com/jamesagnew/hapi-fhir/issues/1868\">https://github.com/jamesagnew/hapi-fhir/issues/1868</a></p>",
        "id": 198739639,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1590486186
    },
    {
        "content": "<p>I had the same problem. But the specification say:</p>\n<p>Any combination of upper- or lower-case ASCII letters ('A'..'Z', and 'a'..'z', numerals ('0'..'9'), '-' and '.', with a length limit of 64 characters. (This might be an integer, an un-prefixed OID, UUID or any other identifier pattern that meets these constraints.)   xs:string   JSON string<br>\nRegex: [A-Za-z0-9\\-\\.]{1,64}</p>\n<p>So an id starting wirh urn:uuid isnâ€˜t a valid id...</p>",
        "id": 199408224,
        "sender_full_name": "Michael Sauer",
        "timestamp": 1591037736
    }
]