[
    {
        "content": "<p>Has anyone in the HAPI community done some of the grunt interceptor code work publicly that generates proper auditevents when poking the HAPI FHIR server?</p>",
        "id": 172013856,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564472958
    },
    {
        "content": "<p>I've done it in my server. It's similar logic, but I haven't done it in HAPI. Is that at all relevant?</p>",
        "id": 172013883,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564473000
    },
    {
        "content": "<p>yes, hence the question. Besides being able to generate an audit log, I ( and maybe others) are in the need to runtime send an audit log to national services</p>",
        "id": 172014073,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564473151
    },
    {
        "content": "<p>right. So if the question is about the HAPI integration part, anything I did on my server is irrelevant. but if it's about the auditevent side, then the logic is basically the same...</p>",
        "id": 172014099,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564473191
    },
    {
        "content": "<p>I found <a href=\"https://github.com/nhsconnect/careconnect-reference-implementation/blob/020665c5216ae614402f46d7f01bce9228d231e5/cc-core/src/main/java/uk/org/hl7/fhir/core/Stu3/CareConnectAuditEvent.java\" target=\"_blank\" title=\"https://github.com/nhsconnect/careconnect-reference-implementation/blob/020665c5216ae614402f46d7f01bce9228d231e5/cc-core/src/main/java/uk/org/hl7/fhir/core/Stu3/CareConnectAuditEvent.java\">https://github.com/nhsconnect/careconnect-reference-implementation/blob/020665c5216ae614402f46d7f01bce9228d231e5/cc-core/src/main/java/uk/org/hl7/fhir/core/Stu3/CareConnectAuditEvent.java</a> and <a href=\"https://github.com/jamesagnew/hapi-fhir/blob/f7029b9a0f91da772499a8cbdba4ee8f8994dd10/hapi-fhir-structures-dstu/src/main/java/ca/uhn/fhir/rest/server/interceptor/AuditingInterceptor.java\" target=\"_blank\" title=\"https://github.com/jamesagnew/hapi-fhir/blob/f7029b9a0f91da772499a8cbdba4ee8f8994dd10/hapi-fhir-structures-dstu/src/main/java/ca/uhn/fhir/rest/server/interceptor/AuditingInterceptor.java\">https://github.com/jamesagnew/hapi-fhir/blob/f7029b9a0f91da772499a8cbdba4ee8f8994dd10/hapi-fhir-structures-dstu/src/main/java/ca/uhn/fhir/rest/server/interceptor/AuditingInterceptor.java</a> in where I may find inspiration</p>",
        "id": 172014112,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564473206
    },
    {
        "content": "<p>Its the auditevent generation on the server side I'm fishing for</p>",
        "id": 172014132,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564473239
    },
    {
        "content": "<p>which vesrion?</p>",
        "id": 172014183,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564473265
    },
    {
        "content": "<p>STU3</p>",
        "id": 172014192,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564473274
    },
    {
        "content": "<p><a href=\"https://github.com/grahamegrieve/fhirserver/blob/master/Server/FHIR.Server.OperationsR3.pas#L599\" target=\"_blank\" title=\"https://github.com/grahamegrieve/fhirserver/blob/master/Server/FHIR.Server.OperationsR3.pas#L599\">https://github.com/grahamegrieve/fhirserver/blob/master/Server/FHIR.Server.OperationsR3.pas#L599</a> - different language and server framework, but the logic should be similar and applicable</p>",
        "id": 172014233,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564473327
    },
    {
        "content": "<p>I believe <span class=\"user-mention\" data-user-id=\"191687\">@Kevin Mayfield</span> is the author of one of those</p>",
        "id": 172014237,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564473330
    },
    {
        "content": "<p>some parameters to that call:<br>\n- session - links to information about the client and any authentication provided<br>\n- intreqid - intrernal unique id for the request <br>\n- extreqid - client provided id using the relevant X- header<br>\n- ip - IP of the client (not sure what that doesn't come from the session)</p>",
        "id": 172014426,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564473492
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> something like that, yes. Now that function/method is some 140 lines ... including testcode that probably would accumulate to some 500-1000 lines that I wondered if already existed in some other project that I could use</p>",
        "id": 172014436,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564473513
    },
    {
        "content": "<p>I don't know of any. Just trying to help here ;-)</p>",
        "id": 172014463,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564473540
    },
    {
        "content": "<p>I know</p>",
        "id": 172014476,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564473547
    },
    {
        "content": "<p>And its appreciated</p>",
        "id": 172014480,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564473552
    },
    {
        "content": "<p>But as most developers of nature, I'm lazy</p>",
        "id": 172014502,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564473582
    },
    {
        "content": "<p>and want quality at the same time</p>",
        "id": 172014533,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564473602
    },
    {
        "content": "<p>naturally</p>",
        "id": 172014577,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564473615
    },
    {
        "content": "<p>I'll guess I'll have to do a (non-existing) brush up on my Delphi ;)</p>",
        "id": 172014657,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564473679
    },
    {
        "content": "<p>not a lot of deep pascal knowledge required there; most of your questions will be about the implied knowledge of the server framework, not the langauge. ask away....</p>",
        "id": 172014845,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564473798
    },
    {
        "content": "<p>Yep ... I'll let you know</p>",
        "id": 172015219,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564474124
    },
    {
        "content": "<p>We didn't finish that code. We put in a stub (best guess) to form a basis for future work.</p>",
        "id": 172015769,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1564474617
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191687\">@Kevin Mayfield</span> I had a feeling of that. I couldn't find much coverage of it neither. And the \"System.out.println(operationOutcome.getIssue().get(0).getCode());\" gave it away</p>",
        "id": 172015878,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564474689
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> how does one select among <a href=\"http://build.fhir.org/valueset-audit-event-action.html\" target=\"_blank\" title=\"http://build.fhir.org/valueset-audit-event-action.html\">http://build.fhir.org/valueset-audit-event-action.html</a> - more specifically R vs. E. Isn't it sort of expected that information that is searched for ('E') is also read ('R')?</p>",
        "id": 172016101,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564474876
    },
    {
        "content": "<p>:) we intended to build AuditEvent on top of the logs in elastic.</p>",
        "id": 172016132,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1564474916
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191687\">@Kevin Mayfield</span> interesting. Do you intend to store it separately afterwards?</p>",
        "id": 172016356,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564475107
    },
    {
        "content": "<p>I don’t recall, and don’t have the code in front of me right now. but search is read, for me, usually.</p>",
        "id": 172022441,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564480643
    },
    {
        "content": "<p>Execute is a $operation</p>",
        "id": 172022447,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564480651
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/BvBF8T3gmmwq0FCla748xLXE/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/BvBF8T3gmmwq0FCla748xLXE/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/BvBF8T3gmmwq0FCla748xLXE/pasted_image.png\"></a></div>",
        "id": 172026847,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564484657
    },
    {
        "content": "<p>query/search =&gt; E</p>",
        "id": 172026873,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564484691
    },
    {
        "content": "<p>May I suggest that the sentence is then rephrased</p>",
        "id": 172027007,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564484827
    },
    {
        "content": "<p>to omit the query/search thingy</p>",
        "id": 172027016,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564484843
    },
    {
        "content": "<p>make a task for... Security, I think (<span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>)</p>",
        "id": 172028656,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564486459
    },
    {
        "content": "<p>which way are we wanting? I see the spec today as saying that a query is an action == execute... this is what the text, codes, and examples say... right?</p>",
        "id": 172064436,
        "sender_full_name": "John Moehrke",
        "timestamp": 1564511898
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> - we don't agree. FHIR Search is primarily a wide spread read, not an execute.</p>",
        "id": 172068774,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564515069
    },
    {
        "content": "<p>okay.  I can understand that. It was just not clear in the zulip discussion thread what the conclusion was.. So the CR would switch all mentions (narrative, model, codes, and examples).</p>",
        "id": 172068968,
        "sender_full_name": "John Moehrke",
        "timestamp": 1564515201
    },
    {
        "content": "<p>yes. though it might switch examples to actual execute examples</p>",
        "id": 172069140,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564515340
    },
    {
        "content": "<p>yes we need an execute example... likely one of the many operations we now have. Right?</p>",
        "id": 172069206,
        "sender_full_name": "John Moehrke",
        "timestamp": 1564515382
    },
    {
        "content": "<p>I can bring in the audit example from IHE PIXm, which is an operation</p>",
        "id": 172069233,
        "sender_full_name": "John Moehrke",
        "timestamp": 1564515408
    },
    {
        "content": "<p>yes, any $operation is clearly an execute</p>",
        "id": 172069300,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564515459
    },
    {
        "content": "<p>The difficulty we do need to deal with is that AuditEvent is derived from DICOM AuditMessage, which defined these vocabulary. In that specification they do describe query as a form of execute -- <a href=\"http://dicom.nema.org/medical/dicom/current/output/html/part15.html#sect_A.5.3.10\" target=\"_blank\" title=\"http://dicom.nema.org/medical/dicom/current/output/html/part15.html#sect_A.5.3.10\">http://dicom.nema.org/medical/dicom/current/output/html/part15.html#sect_A.5.3.10</a></p>",
        "id": 172069833,
        "sender_full_name": "John Moehrke",
        "timestamp": 1564515890
    },
    {
        "content": "<p>FHIR search is not query. I think that's the difference. We should be able to clarify that. a _query (or the mpi operation) can be called a query. See <a href=\"http://hl7.org/fhir/search.html#query\" target=\"_blank\" title=\"http://hl7.org/fhir/search.html#query\">http://hl7.org/fhir/search.html#query</a></p>",
        "id": 172069962,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564516014
    },
    {
        "content": "<p>I am missing some elegant difference you imply between query and search...</p>",
        "id": 172070131,
        "sender_full_name": "John Moehrke",
        "timestamp": 1564516167
    },
    {
        "content": "<p>I think we should move this discussion to a broader stream than HAPI</p>",
        "id": 172070233,
        "sender_full_name": "John Moehrke",
        "timestamp": 1564516260
    },
    {
        "content": "<p>sure</p>",
        "id": 172070265,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564516294
    },
    {
        "content": "<p>Wow ... Had forgot about the query param</p>",
        "id": 172070966,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564516755
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> let me know where you move it to</p>",
        "id": 172078113,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564522123
    },
    {
        "content": "<p>While we're at the query/search discussion: Couldn't the <a href=\"https://www.hl7.org/fhir/operation-patient-match.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/operation-patient-match.html\">https://www.hl7.org/fhir/operation-patient-match.html</a> just as well have been expressed as a 'query' profile then?</p>",
        "id": 172198869,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564645256
    },
    {
        "content": "<p>it could have been, yes. In fact, the very first cut, it was. But there's more than a few people who don't like _query and it was kind of a style question, in the end.</p>",
        "id": 172198973,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564645348
    },
    {
        "content": "<p>okay <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  - let me know when you open up the 'query vs search'-distinction-terminology discussion ... its of interest for me as well</p>",
        "id": 172212597,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1564659329
    },
    {
        "content": "<p>well, that'll be up to <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> I think</p>",
        "id": 172213856,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564660699
    },
    {
        "content": "<p>The patient match can take up to a whole patient resource, not just the fields that happen to be in the search parameters. A query style wouldn't meet that. So you could be more careful on matching the names in the resource.</p>",
        "id": 172214984,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1564661843
    },
    {
        "content": "<p>back to this: <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>, <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  never moved the discussion (or at least it is not present in this discussion). Bottom line is that <a href=\"http://build.fhir.org/auditevent.html#6.4.4.4\" title=\"http://build.fhir.org/auditevent.html#6.4.4.4\">http://build.fhir.org/auditevent.html#6.4.4.4</a> still lists search and search-type as 'E' where it IMHO better fits to 'R'. Should I make a CR on this or should it be moved to another stream first?</p>",
        "id": 194911778,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587550797
    },
    {
        "content": "<p><a class=\"stream\" data-stream-id=\"179166\" href=\"/#narrow/stream/179166-implementers\">#implementers</a> I guess. but search is R for me not E</p>",
        "id": 194921531,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1587558077
    },
    {
        "content": "<p>The discussion has happened. Search/Query do not identify the instance in the request, one must execute a search on the parameters provided to get the result. This is why search/query is an execute. The discussion did result in a clarification in the section pointed at, that explains this. </p>\n<blockquote>\n<p>Agent for logged in user, if available, and one object with a query element. The Execute action is used as the server must execute the search parameters to get the results, whereas a Read action identifies a specific object.</p>\n</blockquote>\n<p>I have not heard any reason why this conclusion is so difficult to live with.  Can this be explained, other than a rhetorical argument about the HTTP GET verb?</p>",
        "id": 194924183,
        "sender_full_name": "John Moehrke",
        "timestamp": 1587559631
    },
    {
        "content": "<p>While it does not identify a single resource it identifies multiple resources - as such I would even call it multiple reads - which I would simply to an 'R', not an 'E'</p>",
        "id": 194928505,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587561518
    },
    {
        "content": "<p>there is indeed a degenerate query on the _id that could be seen as identical to a read. but this does produce a bundle , and as an exception does not invalidate the dominant fact that the query parameters do not identify objects, but rather parameters that must be searched on to discover the results.</p>",
        "id": 194929704,
        "sender_full_name": "John Moehrke",
        "timestamp": 1587562063
    },
    {
        "content": "<blockquote>\n<p>query parameters do not identify objects</p>\n</blockquote>\n<p>indeed query parameters identifies objects. If I search a database for all males named ' <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> ' I'm pretty sure those objects are identified, aren't they?</p>",
        "id": 194931611,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587562864
    },
    {
        "content": "<p>no, they were 'found' at a moment in time. But they are not known. As in a DELETE operation seconds after that query will produce nothing. Yet a GET on an ID will be clear what it was that was retrieved regardless of the DELETE operation.</p>",
        "id": 194935371,
        "sender_full_name": "John Moehrke",
        "timestamp": 1587564302
    },
    {
        "content": "<p>everything is found in a moment of time</p>",
        "id": 194935767,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587564468
    },
    {
        "content": "<p>and at that time they will be identified with those parameters</p>",
        "id": 194935863,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587564496
    },
    {
        "content": "<p>and at that time they are known</p>",
        "id": 194936027,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587564575
    },
    {
        "content": "<p>can you explain  what is wrong with Execute? I have explained that consensus (actually multiple standards organizations) have agreed it is execute.</p>",
        "id": 194936123,
        "sender_full_name": "John Moehrke",
        "timestamp": 1587564604
    },
    {
        "content": "<p>I simply have not heard any reason why execute is problematic</p>",
        "id": 194936195,
        "sender_full_name": "John Moehrke",
        "timestamp": 1587564632
    },
    {
        "content": "<p>'R' simply fits better to the picture</p>",
        "id": 194936260,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587564658
    },
    {
        "content": "<p>multiple standard organizations would have multiple takes on it</p>",
        "id": 194936283,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587564672
    },
    {
        "content": "<p>ask those that standardize SQL</p>",
        "id": 194936306,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587564684
    },
    {
        "content": "<p>and AuditEvent is designed for multiple uses</p>",
        "id": 194936321,
        "sender_full_name": "John Moehrke",
        "timestamp": 1587564690
    },
    {
        "content": "<p>sure</p>",
        "id": 194936338,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587564697
    },
    {
        "content": "<p>which basically means that multiple uses would have multiple takes on it</p>",
        "id": 194936396,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587564719
    },
    {
        "content": "<p>everything is an 'execute' if you go deep enough</p>",
        "id": 194936477,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587564743
    },
    {
        "content": "<p>i think</p>",
        "id": 194936483,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587564745
    },
    {
        "content": "<p>it is a matter of abstraction</p>",
        "id": 194936505,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587564754
    },
    {
        "content": "<p>or one person has a different view than others</p>",
        "id": 194936529,
        "sender_full_name": "John Moehrke",
        "timestamp": 1587564766
    },
    {
        "content": "<p>and from my point of view (and maybe others) 'R' fits better into the picture</p>",
        "id": 194936552,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587564779
    },
    {
        "content": "<p>sure</p>",
        "id": 194936559,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587564782
    },
    {
        "content": "<p>maybe only <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  and me thinks 'R' is a better fit. That might be plausible</p>",
        "id": 194936833,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587564871
    },
    {
        "content": "<p>there are historic reasons,  companion standards reasons, modeling reasons, etc... that up against the only argument against \"R fits better into the picture\". Which is a very REST flavor of FHIR specific viewpoint (picture).  Given this is your answer to what is wrong with \"E\", I am not persuaded.</p>",
        "id": 194943051,
        "sender_full_name": "John Moehrke",
        "timestamp": 1587567164
    },
    {
        "content": "<p>Just to be clear: in your book, searching for multiple entites resulting in the return of multiple instances that are associated to that search is not a read of data?</p>",
        "id": 194953615,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587571540
    },
    {
        "content": "<p>you are correct that in FHIR the results of a search is not just a list of id values. more reason that a search is an Execute, as one must understand the  search must be looked at to understand what was exposed. Good point as to why E is correct.</p>",
        "id": 194957397,
        "sender_full_name": "John Moehrke",
        "timestamp": 1587573236
    },
    {
        "content": "<p>So if the result is in a bundle, it is E?</p>",
        "id": 194963670,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587576008
    },
    {
        "content": "<p>(besides searching using _id)</p>",
        "id": 194978152,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587582938
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span></p>",
        "id": 195109054,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587670432
    },
    {
        "content": "<p>I don't think that is a good definition of a query / search... especially given document bundles, message bundles, and collection bundles.. so, no.</p>",
        "id": 195192616,
        "sender_full_name": "John Moehrke",
        "timestamp": 1587737323
    },
    {
        "content": "<p>Given the context of a REST interface, would that change anything?</p>",
        "id": 195194615,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587738143
    },
    {
        "content": "<p>as in a \"searchset\" bundle? well, yes a searchset bundle is the result of a search. / query. It also indicates this could be the result of an operation (clearly an Execute, right?), or a \"message\". Where I think the \"message\" here means a message bundle that had a search request in it, but that is not clear.    <a href=\"http://build.fhir.org/codesystem-bundle-type.html#bundle-type-searchset\" title=\"http://build.fhir.org/codesystem-bundle-type.html#bundle-type-searchset\">http://build.fhir.org/codesystem-bundle-type.html#bundle-type-searchset</a></p>",
        "id": 195195516,
        "sender_full_name": "John Moehrke",
        "timestamp": 1587738513
    },
    {
        "content": "<p>but, a failed search / query does not result in a searchset bundle... and it too must be recorded as an Execute ... so searchset bundle is not sufficient clarification</p>",
        "id": 195195671,
        "sender_full_name": "John Moehrke",
        "timestamp": 1587738586
    },
    {
        "content": "<p>maybe 'R' is too narrow and 'E' is to wide. I my mind, 'E' is what cannot be categorized as neither CRU or D.</p>",
        "id": 195196116,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587738741
    },
    {
        "content": "<p>E is: hey service, please fetch all y, extrapolate to x and combine with z</p>",
        "id": 195196180,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587738775
    },
    {
        "content": "<p>or: hey service, please read from a third party register and do the fuzzy logic transformation for me</p>",
        "id": 195196322,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587738829
    },
    {
        "content": "<p>searching is neither of those ... searching is ... well, search based on some optional filtering and restriction requirements</p>",
        "id": 195196558,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587738914
    },
    {
        "content": "<p>I don't see searching as a way of transforming og altering data - which an execute would do - as it is anything else.</p>",
        "id": 195196923,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587739055
    },
    {
        "content": "<p>what would your take be on that <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span></p>",
        "id": 195197040,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587739095
    },
    {
        "content": "<p>Much of what is <strong>really</strong> useful in FHIR Search is \"extrapolate to x [include, revinclude]\", combine with (:in=ValueSet), and similar.<br>\nThe set of required/optional parameters  is really important.  I know of few EHRs which would allow a user to search for Observation?code=X without specifying patient/subject also, unless it's a special kind of system that is allow to search across patients (e.g. for quality measurement).</p>\n<p>A lot of what is in FHIR search  isn't just read these things, it's \"give me this view\"</p>",
        "id": 195197344,
        "sender_full_name": "Keith Boone",
        "timestamp": 1587739228
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191387\">@Keith Boone</span> -yet the search does not transform the data. you ask for at set of filtered observations - and you get observations in return</p>",
        "id": 195197784,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587739402
    },
    {
        "content": "<p>they will still be observations</p>",
        "id": 195197830,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587739424
    },
    {
        "content": "<p>you do not transform nor manipulate it (besides including other items as mean of optimization)</p>",
        "id": 195198038,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587739492
    },
    {
        "content": "<p>filtering is transforming... it is reducing the results based on the filter criteria</p>",
        "id": 195198071,
        "sender_full_name": "John Moehrke",
        "timestamp": 1587739502
    },
    {
        "content": "<p>how can filtering be transforming?</p>",
        "id": 195198215,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587739552
    },
    {
        "content": "<p>reducing the set is filtering</p>",
        "id": 195198288,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587739575
    },
    {
        "content": "<p>filtering on a search on observations still only gives you observations - it doesn't give you organizations, right?</p>",
        "id": 195198533,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587739685
    },
    {
        "content": "<p>I think about it from a database permissions perspective.  These kinds of searches with these parameters are allowed by people in this roles, those kinds of searches with those parameters are allowed by those others in that kind of role.  This first \"Search\" with a fixed set of parameters is akin to a Stored procedure with one set of parameters, on which Role 1 has Execute privileges, but role 2 has not, while the second is allowed to be executed by both roles.</p>\n<p>We can get hung up on whether R or E is right or wrong.  That's actually less material than why or what impact it has on software that's being implemented and/or has been implemented.  What's the use of E going to impact that is so fundamentally frustrating for use of it in audits is what I'd like to understand.  Because changing the use of now is going to impact existing commercial and open source implementations and other published guides, so I'd like to see something other than what has been mostly an academic discussion about whether it's E or R.</p>",
        "id": 195199305,
        "sender_full_name": "Keith Boone",
        "timestamp": 1587739986
    },
    {
        "content": "<p>For what it's worth, I've implemented E twice for AuditEvent in commercially available products that have been in production for several years in one case, and a year in the other, and used it for several FHIR IGs as well.  I'm not interested in seeing it change unless someone can come up with something other than an academic rationale.</p>",
        "id": 195229179,
        "sender_full_name": "Keith Boone",
        "timestamp": 1587754056
    },
    {
        "content": "<blockquote>\n<p>What's the use of E going to impact that is so fundamentally frustrating for use of it in audits is what I'd like to understand</p>\n</blockquote>\n<p>I would like the use of the model to reflect the actual use as correctly as possible. I don't find 'E' doing that. Especially as I would like to differentiate between 'searches' and 'executions'. Searches in my system are expected to be idempotent whereas the same cannot be said about executions</p>\n<blockquote>\n<p>Because changing the use of now is going to impact existing commercial and open source implementations and other published guides, so I'd like to see something other than what has been mostly an academic discussion about whether it's E or R.</p>\n</blockquote>\n<p>That is of course a valid concern - but that goes for any change to future versions and time/money can be a reason not to change it. My system is a greenfield national solution where we besides the actual system also bridges AuditEvents from multiple sources with no ties to ATNA, IHE or DICOM. Processing the AuditEvent and the ability to filter e.g. whether an action is a search or not may not be the most central piece of information as every request and response is saved anyways and eventually indexed. I do however like to keep my model tight and clean - and the categorization of whether an action is potentially modifying data or not is part of that process. I don't find that approach particularly academic.</p>",
        "id": 195335797,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587909172
    },
    {
        "content": "<p>Practically, Execute never has had the meaning of modify in any sense.  An execution can modify, but it can also just read.</p>\n<p>Green field ... \"reflect actual use\".  But your definition of actual use and my definition of actual use come to different answers.  There is no right or perfect answer to that question, and there's history, and an agreement as to what was selected, and implementations in place that use that answer.</p>\n<p>FHIR defines E as follows:<br>\nE   Execute Perform a system or application function such as log-on, program execution or use of an object's method, or perform a query/search operation.</p>\n<p>That vocabulary is defined in terms of FHIR operations:<br>\nC = create<br>\nR = read or vread<br>\nU = update or patch (since patch is defined in terms of update)<br>\nD = delete<br>\nE = just about everything else.</p>\n<p>Looking at it from that perspective, I feel even more strongly.  E is operations other than CRUD, and search with ANY sort of complexity isn't CRUD.  And the FHIR restful API is normative.  I'd rather all search be E than some be R and some be E, and at least some of it needs to be E.</p>",
        "id": 195395341,
        "sender_full_name": "Keith Boone",
        "timestamp": 1587981530
    },
    {
        "content": "<p>How would you categorize the following <span class=\"user-mention\" data-user-id=\"191387\">@Keith Boone</span>  :<br>\n1) A transaction that does a single entity create<br>\n1) A transaction where two entities are created<br>\n2) A transaction that does a single entity read<br>\n3) A transaction where two entities are read<br>\n4) A query where two entities are read by id</p>",
        "id": 195405853,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587988516
    },
    {
        "content": "<p>In terms of CRUDE</p>",
        "id": 195405858,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1587988529
    },
    {
        "content": "<p>When I implemented this using interceptors, prior to HAPI cutting over to the current format, but basically after it had processed the parameters.  1) Create operations went to create (C)  2) I didn't implement transaction, but did implement batch in one case, so a batch that created 2 entities uing batch  went to (E), 3) went to read (R), 4) didn't implement a batch read, but it would have gone to (E) the same way that batch writes went to (E), 5) GET Resource?_id=1,2 would have gone to (E) if I had allowed it, both times I implemented search, I disallowed query by more than one id.  Since it entered as Search, it would again have been (E).</p>",
        "id": 195416467,
        "sender_full_name": "Keith Boone",
        "timestamp": 1587994155
    },
    {
        "content": "<p>I would say they all should result in an \"E\" record, but items 1-4 would ALSO result in some CRUD audit entries.</p>",
        "id": 195416938,
        "sender_full_name": "John Moehrke",
        "timestamp": 1587994387
    },
    {
        "content": "<p>If using FHIR transaction or FHIR batch, I would agree, these would all have been (E) in the implementation I did.  If using FHIR operations (read,vread, create, delete, etc), these would have gone as I've indicated.</p>",
        "id": 195417121,
        "sender_full_name": "Keith Boone",
        "timestamp": 1587994464
    },
    {
        "content": "<p>Someone might notice the query of _id, and recognize that as a Read; but they still should record it as a E/query. Just because the _id parameter is used does not mean it should not be recorded as an E/query. The nice part about E for query is that it works ALWAYS the same way.</p>",
        "id": 195417139,
        "sender_full_name": "John Moehrke",
        "timestamp": 1587994476
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> <a href=\"#narrow/stream/179167-hapi/topic/general.20auditevent.20generator/near/195416938\" title=\"#narrow/stream/179167-hapi/topic/general.20auditevent.20generator/near/195416938\">said</a>:</p>\n<blockquote>\n<p>I would say they all should result in an \"E\" record, but items 1-4 would ALSO result in some CRUD audit entries.</p>\n</blockquote>\n<p>Ain't that a bit too ambiguous</p>",
        "id": 195472471,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1588020128
    },
    {
        "content": "<p>I believe we can agree to disagree on this matter ;)</p>",
        "id": 195473862,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1588020909
    },
    {
        "content": "<p>To me, a search/query that is idempotent that does filtering and/or narrowing and optional includes is a read of data</p>",
        "id": 195532796,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1588062601
    }
]