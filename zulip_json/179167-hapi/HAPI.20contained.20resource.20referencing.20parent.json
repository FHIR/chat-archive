[
    {
        "content": "<p>HAPI strips out contained resources that are not referenced by the parent. </p>\n<p>But these may actually be valid, if the contained resource references the parent, instead of the usual opposite direction. </p>\n<p>It filters out this contained resource, even though the target element references the parent (and still does if it uses a proper id in the reference rather than just '#')</p>\n<div class=\"codehilite\"><pre><span></span>         &lt;Observation&gt;\n            &lt;contained&gt;\n               &lt;Provenance&gt;\n                  &lt;target&gt;\n                     &lt;reference value=&quot;#&quot;/&gt;\n                  &lt;/target&gt;\n</pre></div>\n\n\n<p>Is there a way to structure this so HAPI accepts it? Adding a dummy id or something?</p>",
        "id": 174015122,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1566607523
    },
    {
        "content": "<p>Is that valid for a contained resource to reference the container but with no references the other way around? My understanding has always been that it isn't...</p>",
        "id": 174130609,
        "sender_full_name": "James Agnew",
        "timestamp": 1566815965
    },
    {
        "content": "<p>that was changed in R4</p>",
        "id": 174130721,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566816085
    },
    {
        "content": "<p>Hmm... Well, sounds like we need to remove that check or make it more nuanced then now.</p>\n<p><span class=\"user-mention\" data-user-id=\"191651\">@Rik Smithies</span> as a short term workaround you could add a dummy extension from your outer resource pointing to your inner one... it's ugly i know but it would work</p>",
        "id": 174189959,
        "sender_full_name": "James Agnew",
        "timestamp": 1566870095
    },
    {
        "content": "<p>Do we have any references to the change? Wondering what the use case is ... and I've seen a number of 'standards' coming out which (unnecessarily and inconsistently) make use of contained.</p>",
        "id": 174204003,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1566891907
    },
    {
        "content": "<p>My use case is to add a data item for the  Observation \"source system\". I wanted to use Provenance but don't want to have a Provenance end point. Hence a contained Provenance in each Observation. And they point to Observation rather than the other way around. <br>\nIt's a prototype and we may go to full Provenance eventually. But in the mean time I wanted to round trip the data to FHIR and check it all went in and out again, so a contained Provenance does the job for now.</p>",
        "id": 174217961,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1566904045
    },
    {
        "content": "<p>That makes sense, probably saves a lot of calls. <br>\nThe one I've just seen (below), is an example of one I think is wrong. The contained reference is likely to be static (and the contained resource is mandating other contained resources!).<br>\n<a href=\"/user_uploads/10155/0sf6UpKfQ-H82rs1cNst92ei/Contained.PNG\" target=\"_blank\" title=\"Contained.PNG\">Contained.PNG</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/0sf6UpKfQ-H82rs1cNst92ei/Contained.PNG\" target=\"_blank\" title=\"Contained.PNG\"><img src=\"/user_uploads/10155/0sf6UpKfQ-H82rs1cNst92ei/Contained.PNG\"></a></div>",
        "id": 174227342,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1566911854
    },
    {
        "content": "<p>HL7v3 in disguise?</p>",
        "id": 174227428,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1566911899
    },
    {
        "content": "<p>Well if there is a known set of organizations and they are well identified and re-used, it should not be a contained resource. </p>\n<p>A use case for a contained organization is if you have low quality data. e.g. hand entered names \"St Agnes Hospital\" and \"Saint Agnes Hosp\".  You can't create a resource for every variation of the name and can't easily canonicalize the strings (and it may not even be the same hospital). So a contained resource with just the name can work. </p>\n<p>I have considered an empty reference and putting the org name in reference.display, but I think that might be cheating.</p>",
        "id": 174248966,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1566925582
    },
    {
        "content": "<p>Think it's sensible to put in sensible to put in display and reference.identifier where possible - in UK for organisation references  this would be ODS code (and this links to HL7v2 standards in UK) e.g. <br>\n  \"managingOrganization\": {<br>\n        \"reference\": \"Organization/self\",<br>\n        \"identifier\": {<br>\n            \"system\": \"<a href=\"https://fhir.nhs.uk/Id/ods-organization-code\" target=\"_blank\" title=\"https://fhir.nhs.uk/Id/ods-organization-code\">https://fhir.nhs.uk/Id/ods-organization-code</a>\",<br>\n            \"value\": \"B81603\"<br>\n        }<br>\n    }</p>",
        "id": 174346201,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1566984406
    },
    {
        "content": "<p>You've then got the choice of following the reference or using the ODS server to resolve the organisation.</p>",
        "id": 174346229,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1566984444
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191651\">@Rik Smithies</span> - why would that be cheating? Seems a valid use of reference,display to me...</p>",
        "id": 174673632,
        "sender_full_name": "David Hay",
        "timestamp": 1567365674
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191321\">@David Hay</span>  I always assumed display was there to support the actual reference and was not intended to replace it. Is that not the case? One of my main reasons for using contained would not be needed if that use is actually legitimate.</p>",
        "id": 174680942,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1567379759
    },
    {
        "content": "<p>if there</p>",
        "id": 174680993,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1567379879
    },
    {
        "content": "<p>it's valid to have just a display, if that's all you have about the target of the reference. Obviously, it's a lot less functional than an actual reference</p>",
        "id": 174681036,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1567379916
    },
    {
        "content": "<p>I saw it kinda like an intermediate step - \"this is all I have right now, as systems mature and become more FHIR enabled then a 'real' reference might become available later...\"</p>",
        "id": 174682393,
        "sender_full_name": "David Hay",
        "timestamp": 1567382819
    },
    {
        "content": "<p>If it's ok to use reference.display alone for a name or short description of the referenced item that seems to remove one of the uses for a contained resource. Contained can be for when the item is not \"identifiable\". But if you have more than one data point (so it can't all go in reference.display) then it seems a better chance it can be identified.  An exception could be a forename and surname I suppose, though concatenating them wouldn't seem a big issue for such an \"unidentified\" person. And it's a lot simpler than contained.</p>",
        "id": 174705469,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1567418899
    },
    {
        "content": "<p>From working on a GP Connect client (and also supplier) perspective. The references can contain most of what is needed by a client and helps prevent a chatty API.</p>",
        "id": 174705692,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1567419156
    },
    {
        "content": "<p>Hi Kevin, do you mean the single string of reference.display is sufficient?<br>\nChat is reduced by both the reference.display and contained resource route. But you can get more structure in contained. But now I am seeing less cases where that middle level of structure is necessary. <br>\nIf it's a fully identified thing like an ODS reference, then this isn't so much of an issue, that would never really be contained. Reference.display is still helpful there of course. But not on it's own.</p>",
        "id": 174706926,
        "sender_full_name": "Rik Smithies",
        "timestamp": 1567420557
    },
    {
        "content": "<p>I think that's what I'm seeing. Reference.display is  often sufficient, if not a reference or identifier reference can be followed. If following the reference creates a very chatty interface then contained can be used, if not very chatty consider local caching to avoid repeated reference lookups?</p>",
        "id": 174707526,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1567421236
    }
]