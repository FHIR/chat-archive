[
    {
        "content": "<p>In the spec (<a href=\"https://www.hl7.org/fhir/patient-operation-everything.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/patient-operation-everything.html\">https://www.hl7.org/fhir/patient-operation-everything.html</a>) it says:</p>\n<blockquote>\n<p>The key differences between this operation and simply searching the patient compartment are:</p>\n<ul>\n<li>unless the client requests otherwise, the server returns the entire result set in a single bundle (rather than using paging)<br>\n...</li>\n</ul>\n</blockquote>\n<p>However, making the following request to the HAPI test server returns a paged bundle:</p>\n<p><code>GET http://hapi.fhir.org/baseR4/Patient/38/$everything</code></p>\n<p>How would I go about retrieving a Bundle with \"everything everything\"?</p>",
        "id": 184877375,
        "sender_full_name": "John Grimes",
        "timestamp": 1578281518
    },
    {
        "content": "<p>HAPI FHIR JPA's architecture does not allow us to stream back a bundle of unlimited size to the client, so we do not support \"fetch $everything with no paging under any circumstances\". If I'm honest here, I have never understood why the spec allows this or why anyone would want it either... Do any other servers implement this behaviour as documented in the spec? What do they do if I request $everything on a patient with 10 million observations and no _count?</p>\n<p>You can set the default and maximum page sizes on the server to very very big though if you want, which does allow you to sort of achieve this, while still keeping a failsafe in place.</p>",
        "id": 184894966,
        "sender_full_name": "James Agnew",
        "timestamp": 1578307095
    },
    {
        "content": "<p>Ok, thanks, that makes sense.</p>",
        "id": 184984532,
        "sender_full_name": "John Grimes",
        "timestamp": 1578376531
    },
    {
        "content": "<p>mainly it's allowed not because it's expected that server will ,but because any attempt to standardise the limit will cause lots of arguments about where the line is</p>",
        "id": 185258768,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1578605803
    }
]