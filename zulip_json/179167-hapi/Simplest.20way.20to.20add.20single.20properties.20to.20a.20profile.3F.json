[
    {
        "content": "<p>I'm currently in the process of modelling profiles for a few administrative objects that we want to store in fhir, which don't have anything to do with patients, and don't map on to any of the existing fhir types.  To do this I'm creating a profile on basic.</p>\n<p>I want to add a few basic properties to the resource, e.g. a name (string), a description (string), and identifier (identifier), and a few other similar properties.  Am I right in thinking that the way to go here is to use an extension for each property, when the extension definition has just one item in it?  It feels a bit heavy weight to just add single values.  Is there a way of just defining straight on the profile that I want it to have a slot for a new string called name, a new string called description, etc?</p>\n<p>If not, is there a technical reason for this?  Extensions can have new elements defined on them, and profiles being StructureDefinitions too, I'm not totally sure why they cannot.</p>",
        "id": 153895083,
        "sender_full_name": "Andrew Broadbent",
        "timestamp": 1498227434
    },
    {
        "content": "<p>As an addition to that, if you do have to use extensions to do this; are there already extensions defined which just contain an instance of each datatype?</p>",
        "id": 153895087,
        "sender_full_name": "Andrew Broadbent",
        "timestamp": 1498228076
    },
    {
        "content": "<p>Just to add some further context, here is what I'm trying to do expressed in java classes:</p>\n<p>class MyObject{<br>\n    String name;<br>\n    String description;<br>\n    Identifier identifier;<br>\n    etc...<br>\n}</p>\n<hr>\n<p>Am I right in thinking that the only way to do this in fhir is like this:</p>\n<p>// This is an extension<br>\nclass Name {<br>\n    String value;<br>\n}</p>\n<p>// This is an extension<br>\nclass Description {<br>\n    String value;<br>\n}</p>\n<p>// This is an extension<br>\nclass Identifier {<br>\n    Identifier value;<br>\n}</p>\n<p>// This is a profile<br>\nclass MyObject{<br>\n    Name name;<br>\n    Description description;<br>\n    Identifier identifier;<br>\n    etc...<br>\n}</p>",
        "id": 153895091,
        "sender_full_name": "Andrew Broadbent",
        "timestamp": 1498228636
    },
    {
        "content": "<p>yes - you add elements to existing StructureDefinitions using extensions .    If you want to purely model something in FHIR you can create a <a href=\"http://build.fhir.org/structuredefinition.html#logical\" target=\"_blank\" title=\"http://build.fhir.org/structuredefinition.html#logical\">logical model</a></p>",
        "id": 153895147,
        "sender_full_name": "Eric Haas",
        "timestamp": 1498263145
    },
    {
        "content": "<p>If you're interested, there is a UI for creating logical models in <a href=\"http://clinfhir.com/\" target=\"_blank\" title=\"http://clinfhir.com/\">clinFHIR</a>. You can then generate instances of them in the Scenario Builder (though you can't save them to a FHIR server at the moment)...</p>",
        "id": 153895153,
        "sender_full_name": "David Hay",
        "timestamp": 1498279075
    },
    {
        "content": "<blockquote>\n<p>If you're interested, there is a UI for creating logical models in <a href=\"http://clinfhir.com/\" target=\"_blank\" title=\"http://clinfhir.com/\">clinFHIR</a>. You can then generate instances of them in the Scenario Builder (though you can't save them to a FHIR server at the moment)...</p>\n</blockquote>\n<p>Dear David,<br>\nI could create a logical model using clinFHIR was able to upload to HAPI test server. But could not send a message since server could not identify the resource name specified. Can you please provide me solution on this..</p>",
        "id": 153907357,
        "sender_full_name": "Binu DGIT",
        "timestamp": 1505288843
    },
    {
        "content": "<p>Sorry - It's not possible to save a logical model to the HAPI server as it expects the resources to be conformant to the core FHIR resource types. The purpose of the logical model (in this context) is to identify the changes you need to make to the core types for your particular implementation - the new elements actually need to be represented by an extension (as you've said). You can then decide what extensions you need and build the profile...</p>",
        "id": 153907370,
        "sender_full_name": "David Hay",
        "timestamp": 1505293846
    },
    {
        "content": "<blockquote>\n<p>Sorry - It's not possible to save a logical model to the HAPI server as it expects the resources to be conformant to the core FHIR resource types. The purpose of the logical model (in this context) is to identify the changes you need to make to the core types for your particular implementation - the new elements actually need to be represented by an extension (as you've said). You can then decide what extensions you need and build the profile...</p>\n</blockquote>\n<p>Thank you very much for the information.<br>\nAs per my understanding, Observation is the base resource type suitable to make a profile to keep pregnancy information. Further, I can add extensions. what do you think?</p>",
        "id": 153908085,
        "sender_full_name": "Binu DGIT",
        "timestamp": 1505381634
    },
    {
        "content": "<p>Hi Binu - if you search the chat for 'pregnancy' you'll see quite a few references that might help you.  I think the key thing is that there will be multiple observations over a period of time for any given pregnancy - much like vital signs (so might be worth taking a look at that profile for inspiration...</p>",
        "id": 153908284,
        "sender_full_name": "David Hay",
        "timestamp": 1505412762
    }
]