[
    {
        "content": "<p>Hi,</p>",
        "id": 153870820,
        "sender_full_name": "Shlomy Reinstein",
        "timestamp": 1486625563
    },
    {
        "content": "<p>Trying to continue the thread here: <a href=\"https://groups.google.com/forum/#!searchin/hapi-fhir/performance%7Csort:date/hapi-fhir/0GJNC7kvCGQ/aESUJtiGCQAJ\" target=\"_blank\" title=\"https://groups.google.com/forum/#!searchin/hapi-fhir/performance%7Csort:date/hapi-fhir/0GJNC7kvCGQ/aESUJtiGCQAJ\">https://groups.google.com/forum/#!searchin/hapi-fhir/performance%7Csort:date/hapi-fhir/0GJNC7kvCGQ/aESUJtiGCQAJ</a> - hopefully more interactively.<br>\nA few questions:<br>\n1. Do you have performance numbers for HAPI FHIR?</p>",
        "id": 153870821,
        "sender_full_name": "Shlomy Reinstein",
        "timestamp": 1486625642
    },
    {
        "content": "<p>2. What is a proper way to exchange files with you? (showing the performance data we've collected and the test code)</p>",
        "id": 153870822,
        "sender_full_name": "Shlomy Reinstein",
        "timestamp": 1486625669
    },
    {
        "content": "<p>3. What features do you think may be configured differently / disabled / enabled to improve the performance of the server?</p>",
        "id": 153870823,
        "sender_full_name": "Shlomy Reinstein",
        "timestamp": 1486625704
    },
    {
        "content": "<p>Switching from 1.4 to 2.2, we've experienced a major improvement in performance of resource creation, but also a major degradation of performance of resource queries.</p>",
        "id": 153870824,
        "sender_full_name": "Shlomy Reinstein",
        "timestamp": 1486625754
    },
    {
        "content": "<p>The current performance numbers we get are not acceptable for our use case</p>",
        "id": 153870826,
        "sender_full_name": "Shlomy Reinstein",
        "timestamp": 1486626079
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/lbHlqeK8ynOlfqERSLWnWIlM/1279112986.html\" target=\"_blank\" title=\"1279112986.html\">1279112986.html</a> </p>",
        "id": 153870828,
        "sender_full_name": "Shlomy Reinstein",
        "timestamp": 1486627244
    },
    {
        "content": "<p>Here's a sample of the performance data I got on my development machine. MySQL is used as the database of HAPI, and the test keeps running 6 concurrent threads. 3 of these threads create resources all the time (patients, diagnostic reports and observations), and the other 3 keep reading specific resources (using resource-type?_id=...).</p>",
        "id": 153870829,
        "sender_full_name": "Shlomy Reinstein",
        "timestamp": 1486627328
    },
    {
        "content": "<p>The average read time, in this test, for an Observation is nearly a second, and there are some spikes of 4.5 seconds.</p>",
        "id": 153870830,
        "sender_full_name": "Shlomy Reinstein",
        "timestamp": 1486627390
    },
    {
        "content": "<p>This test shows, however, that the read time does not depend on the number of resources in the system (which is expected).</p>",
        "id": 153870831,
        "sender_full_name": "Shlomy Reinstein",
        "timestamp": 1486627436
    },
    {
        "content": "<p>I found out that by completely disabling the paging support, the test results became an order of magnitude better, and are acceptable. (The test now only reads specific resources, so no use for paging).</p>",
        "id": 153870832,
        "sender_full_name": "Shlomy Reinstein",
        "timestamp": 1486627856
    },
    {
        "content": "<p>So I guess the paging support should be somehow tweaked.</p>",
        "id": 153870833,
        "sender_full_name": "Shlomy Reinstein",
        "timestamp": 1486627868
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/DLaM865IZg8iiCunic6p23Zj/870714572.html\" target=\"_blank\" title=\"870714572.html\">870714572.html</a> <br>\nThe results with no paging support.</p>",
        "id": 153870834,
        "sender_full_name": "Shlomy Reinstein",
        "timestamp": 1486627902
    },
    {
        "content": "<p>Interesting.</p>\n<p>I don't have shareable performance numbers at this point. We've run loads of benchmarks over time, and I've spoken to a bunch of others who have but I don't think we've ever kept them in shareable form. I'm curious about how you generated the results you shared? Is that automated in some way? Any chance the methodology is shareable?</p>\n<p>The easiest way to send me stuff is to email me at <a href=\"mailto:jamesagnew@gmail.com\" title=\"mailto:jamesagnew@gmail.com\">jamesagnew@gmail.com</a> . If it's too big for email let me know and I can share access to our secure file portal where you can upload bigger files.</p>\n<p>In looking at the <code>DatabaseBackedPagingProvider</code> after the discussion on the list, and there is one thing I noticed- DatabaseBackedPagingProvider extends <code>FifoMemoryPagingProvider</code> which doesn't really make much sense, but it seems like that was just making up for a bug where <code>_history</code> calls weren't being paged to the database like they should be. I've just checked in a fix for that.</p>\n<p>I'm baffled by your \"nearly a second\" time for reading an observation though. What type of load is the server under when you get that? Our public server reports response times in the &lt; 10ms range even under load (e.g. <a href=\"http://fhirtest.uhn.ca/baseDstu3/Observation/8524\" target=\"_blank\" title=\"http://fhirtest.uhn.ca/baseDstu3/Observation/8524\">this query</a> ) . Is this a plain read you're doing? Certainly if you send your test harness my way I'm happy to see if I see similar results.</p>",
        "id": 153870890,
        "sender_full_name": "James Agnew",
        "timestamp": 1486664251
    },
    {
        "content": "<p>Can you make the performance numbers shareable? Or are they confidential?</p>",
        "id": 153871127,
        "sender_full_name": "Shlomy Reinstein",
        "timestamp": 1486885292
    },
    {
        "content": "<p>We're doing plain reads. However, there are 3 concurrent plain reads, and at the same time, 3 concurrent resource creations.</p>",
        "id": 153871128,
        "sender_full_name": "Shlomy Reinstein",
        "timestamp": 1486885322
    },
    {
        "content": "<p>I have just sent you an email with the code of the test we run. It's a Maven project so you should be able to import it easily to most IDEs.</p>",
        "id": 153871129,
        "sender_full_name": "Shlomy Reinstein",
        "timestamp": 1486886095
    }
]