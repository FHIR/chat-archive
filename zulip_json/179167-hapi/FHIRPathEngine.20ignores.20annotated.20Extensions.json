[
    {
        "content": "<p>The FHIRPathEngine is not seeing Extensions, that have been added by using the Field-Annotations @Child / @Extension. </p>\n<p>Lets say i have the following class for MyPatient (just like in the HAPI documentation):</p>\n<div class=\"codehilite\" data-code-language=\"Java\"><pre><span></span><code><span class=\"nd\">@ResourceDef</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">\"Patient\"</span><span class=\"p\">,</span> <span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"s\">\"http://example.com/StructureDefinition/mypatient\"</span><span class=\"p\">)</span>\n<span class=\"kd\">public</span> <span class=\"kd\">class</span> <span class=\"nc\">MyPatient</span> <span class=\"kd\">extends</span> <span class=\"n\">Patient</span> <span class=\"p\">{</span>\n    <span class=\"kd\">private</span> <span class=\"kd\">static</span> <span class=\"kd\">final</span> <span class=\"kt\">long</span> <span class=\"n\">serialVersionUID</span> <span class=\"o\">=</span> <span class=\"mi\">1L</span><span class=\"p\">;</span>\n\n    <span class=\"nd\">@Child</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s\">\"petName\"</span><span class=\"p\">)</span>\n    <span class=\"nd\">@Extension</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s\">\"http://example.com/dontuse#petname\"</span><span class=\"p\">,</span> <span class=\"n\">definedLocally</span><span class=\"o\">=</span><span class=\"kc\">false</span><span class=\"p\">,</span> <span class=\"n\">isModifier</span><span class=\"o\">=</span><span class=\"kc\">false</span><span class=\"p\">)</span>\n    <span class=\"nd\">@Description</span><span class=\"p\">(</span><span class=\"n\">shortDefinition</span><span class=\"o\">=</span><span class=\"s\">\"The name of the patient's favourite pet\"</span><span class=\"p\">)</span>\n    <span class=\"kd\">private</span> <span class=\"n\">StringType</span> <span class=\"n\">myPetName</span><span class=\"p\">;</span>\n\n    <span class=\"nd\">@Override</span>\n    <span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">isEmpty</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">return</span> <span class=\"kd\">super</span><span class=\"p\">.</span><span class=\"na\">isEmpty</span><span class=\"p\">()</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">ElementUtil</span><span class=\"p\">.</span><span class=\"na\">isEmpty</span><span class=\"p\">(</span><span class=\"n\">myPetName</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"n\">StringType</span> <span class=\"nf\">getPetName</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">myPetName</span> <span class=\"o\">==</span> <span class=\"kc\">null</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n            <span class=\"n\">myPetName</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">StringType</span><span class=\"p\">();</span>\n        <span class=\"p\">}</span>\n        <span class=\"k\">return</span> <span class=\"n\">myPetName</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"kd\">public</span> <span class=\"kt\">void</span> <span class=\"nf\">setPetName</span><span class=\"p\">(</span><span class=\"n\">StringType</span> <span class=\"n\">thePetName</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"n\">myPetName</span> <span class=\"o\">=</span> <span class=\"n\">thePetName</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>Now i would like to read the Extension with a FHIR-Path expression.</p>\n<div class=\"codehilite\" data-code-language=\"Java\"><pre><span></span><code><span class=\"nd\">@Test</span>\n<span class=\"kt\">void</span> <span class=\"nf\">readByFhirPath</span><span class=\"p\">()</span> <span class=\"kd\">throws</span> <span class=\"n\">Exception</span> <span class=\"p\">{</span>\n    <span class=\"n\">IFhirPath</span> <span class=\"n\">fhirPath</span> <span class=\"o\">=</span> <span class=\"n\">FhirContext</span><span class=\"p\">.</span><span class=\"na\">forR4</span><span class=\"p\">().</span><span class=\"na\">newFhirPath</span><span class=\"p\">();</span>\n\n    <span class=\"n\">MyPatient</span> <span class=\"n\">myPatient</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">MyPatient</span><span class=\"p\">();</span>\n    <span class=\"n\">myPatient</span><span class=\"p\">.</span><span class=\"na\">setPetName</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">StringType</span><span class=\"p\">(</span><span class=\"s\">\"Adam\"</span><span class=\"p\">));</span>\n    <span class=\"c1\">// notice: myPatient.getExtension() is empty</span>\n\n    <span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">Extension</span><span class=\"o\">&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">fhirPath</span><span class=\"p\">.</span><span class=\"na\">evaluate</span><span class=\"p\">(</span><span class=\"n\">myPatient</span><span class=\"p\">,</span> <span class=\"s\">\"Patient.extension('http://example.com/dontuse#petname')\"</span><span class=\"p\">,</span> <span class=\"n\">Extension</span><span class=\"p\">.</span><span class=\"na\">class</span><span class=\"p\">);</span>\n    <span class=\"k\">assert</span> <span class=\"n\">result</span><span class=\"p\">.</span><span class=\"na\">size</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"c1\">// fails, because the list is empty</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>This fails! But when i add the Extension the \"old-fsahion\" way everything is fine!</p>\n<div class=\"codehilite\" data-code-language=\"Java\"><pre><span></span><code><span class=\"nd\">@Test</span>\n<span class=\"kt\">void</span> <span class=\"nf\">readByFhirPath</span><span class=\"p\">()</span> <span class=\"kd\">throws</span> <span class=\"n\">Exception</span> <span class=\"p\">{</span>\n    <span class=\"n\">IFhirPath</span> <span class=\"n\">fhirPath</span> <span class=\"o\">=</span> <span class=\"n\">FhirContext</span><span class=\"p\">.</span><span class=\"na\">forR4</span><span class=\"p\">().</span><span class=\"na\">newFhirPath</span><span class=\"p\">();</span>\n\n    <span class=\"n\">MyPatient</span> <span class=\"n\">myPatient</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">MyPatient</span><span class=\"p\">();</span>\n<span class=\"c1\">//    myPatient.setPetName(new StringType(\"Adam\"));</span>\n    <span class=\"n\">myPatient</span><span class=\"p\">.</span><span class=\"na\">addExtension</span><span class=\"p\">(</span><span class=\"k\">new</span> <span class=\"n\">Extension</span><span class=\"p\">(</span><span class=\"s\">\"http://example.com/dontuse#petname\"</span><span class=\"p\">,</span> <span class=\"k\">new</span> <span class=\"n\">StringType</span><span class=\"p\">(</span><span class=\"s\">\"Adam\"</span><span class=\"p\">)));</span>\n\n    <span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">Extension</span><span class=\"o\">&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">fhirPath</span><span class=\"p\">.</span><span class=\"na\">evaluate</span><span class=\"p\">(</span><span class=\"n\">myPatient</span><span class=\"p\">,</span> <span class=\"s\">\"Patient.extension('http://example.com/dontuse#petname')\"</span><span class=\"p\">,</span> <span class=\"n\">Extension</span><span class=\"p\">.</span><span class=\"na\">class</span><span class=\"p\">);</span>\n    <span class=\"k\">assert</span> <span class=\"n\">result</span><span class=\"p\">.</span><span class=\"na\">size</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">;</span> <span class=\"c1\">// succeeds</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n<p>Im not sure if this is an Issue with the FHIRPathEngine itself, or rather with the fact, that annotated Extensions are not accessable through <code>resource.getExtension()</code>. Is there some kind of a workaround to this?</p>",
        "id": 211141659,
        "sender_full_name": "Sergej Reiser",
        "timestamp": 1600958767
    },
    {
        "content": "<p><strong>PUSH</strong><br>\nCould someone please look into this? The circumstance, that FHIR-Path is not working for annotated Extensions has further implications for indexing of SearchParams.</p>\n<p>If i create a custom SearchParameter for <code>petName</code> it will not work, because HAPI also uses FHIR-Path for indexing. So this is what happens: <br>\nBefore indexing or persisting, HAPI will parse the resource into it's corresponding class. If i added  the<code>MyPatient</code> class to the FhirContext by <code>fhirContext.setDefaultTypeForProfile(\"http://example.com/StructureDefinition/mypatient\", MyPatient.class)</code>, HAPI will parse the resource into <code>MyPatient</code> and further pass this object for indexing.  Since <code>MyPatient</code> uses the <code>@Extension</code> annotation FHIR-Path will fail to evaluate the expression i use for my SearchParameter (<code>Patient.extension('http://example.com/dontuse#petname')</code>).  So <code>petName</code> will never be indexed as long as HAPI uses the <code>MyPatient</code>class for processing.</p>\n<p>The only workaround i found is to temporarily remove the <code>MyPatient </code> class from the FHIR-Context <code>fhirContext.setDefaultTypeForProfile(\"http://example.com/StructureDefinition/mypatient\", null)</code>. Than HAPI will parse incoming resources into the default <code>Patient</code> class which has no <code>@Extension</code> annotations.</p>",
        "id": 214023557,
        "sender_full_name": "Sergej Reiser",
        "timestamp": 1603270281
    }
]