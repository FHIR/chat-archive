[
    {
        "content": "<p>Does the HAPI server auto generate AuditEvent records for all api access? Is this a configurable setting? also see my discussion on how this enables privacy Audit on <a class=\"stream\" data-stream-id=\"179247\" href=\"/#narrow/stream/179247-Security-and-Privacy\">#Security and Privacy</a></p>",
        "id": 174547273,
        "sender_full_name": "John Moehrke",
        "timestamp": 1567173804
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> - Not currently. I mean, certainly all of the framework is there for someone to be able to implement this kind of rule using our interceptors.. But there is nothing out of the box.</p>\n<p>Would this be a useful thing to add? I could certainly see it being fairly easy to build at least..</p>",
        "id": 174678740,
        "sender_full_name": "James Agnew",
        "timestamp": 1567375032
    },
    {
        "content": "<p>I reckon this would be  a very nice feature to have out-of-the-box <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 174697874,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1567410792
    },
    {
        "content": "<p>I, as a Privacy advocate and Security professional, think it is essential to have. It is available in a few other platforms, and is configurable with default off. The reason is that auditEntry will quickly overwhelm the total real data. Also there should be some purge rule, with a default purge rule of something like a nothing-older-than-a-year.</p>",
        "id": 174782091,
        "sender_full_name": "John Moehrke",
        "timestamp": 1567512988
    },
    {
        "content": "<p>I, as a potential patient, also think this is important.</p>",
        "id": 174787794,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1567517342
    },
    {
        "content": "<blockquote>\n<p>Does the HAPI server auto generate AuditEvent records for all api access? Is this a configurable setting? also see my discussion on how this enables privacy Audit on <a class=\"stream\" data-stream-id=\"179247\" href=\"/#narrow/stream/179247-Security-and-Privacy\">#Security and Privacy</a></p>\n</blockquote>\n<p>see this thread for further development and CR recommending it</p>",
        "id": 174797307,
        "sender_full_name": "John Moehrke",
        "timestamp": 1567523244
    },
    {
        "content": "<p>Makes sense. Seems worth trying to implement.</p>\n<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> how would you foresee things like search results (and page loads for subsequent pages of search results) working? A single AuditEvent gets created with <code>AuditEvent.entity</code> references to each resource that appeared in the search results?</p>\n<p>Also, WRT adding this to our public test server: are there any concerns with the fact that presumably we'd now be making it possible for someone to check which IPs had recently accessed the test server? How have other test servers addressed this? I guess I could mask the IP address..</p>",
        "id": 174798808,
        "sender_full_name": "James Agnew",
        "timestamp": 1567524102
    },
    {
        "content": "<p>for search/query/operations that return many results, you do NOT duplicate the result in the AuditEvent. You record the query/operation parameters in an .entity, and another .entity holds the Patient. When the results include more than one patient's data, then multiple AuditEvent resources are recorded, one for each patient.</p>",
        "id": 174799188,
        "sender_full_name": "John Moehrke",
        "timestamp": 1567524348
    },
    {
        "content": "<p>Ahhh interesting. I guess in my mind I've always seen AuditEvent as a complete record of \"who has seen what\" but that makes a lot of sense for it to be fully centred around the more specific question of \"who has seen which patients\" at least as a default use case.</p>",
        "id": 174799628,
        "sender_full_name": "James Agnew",
        "timestamp": 1567524607
    },
    {
        "content": "<p>I guess this behavior on query/search/operations did not get mentioned on the AuditEvent page. I guess that should be another CR?</p>",
        "id": 174799813,
        "sender_full_name": "John Moehrke",
        "timestamp": 1567524737
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> did you happen to get audit logging into your server? I have a patient app for notifying a patient when activity on their subject based on AuditEvent activity. Just wondering if you implemented this in an experimental way, or in a way that is not turned on in your sandbox servers</p>",
        "id": 175727662,
        "sender_full_name": "John Moehrke",
        "timestamp": 1568512554
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>  not yet- will try to do this in the AM. would be fun to test while you're around the connectathon</p>",
        "id": 175727947,
        "sender_full_name": "James Agnew",
        "timestamp": 1568513082
    },
    {
        "content": "<p>Im around all week...</p>",
        "id": 175728064,
        "sender_full_name": "John Moehrke",
        "timestamp": 1568513315
    },
    {
        "content": "<p>Did either of you went ahead and implemented the AuditEvent in HAPI ?</p>",
        "id": 205052917,
        "sender_full_name": "Virendra Shinde",
        "timestamp": 1595771069
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> if you are interested, we actually have done this</p>",
        "id": 205053122,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1595771455
    },
    {
        "content": "<p>In HAPI</p>",
        "id": 205053124,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1595771463
    },
    {
        "content": "<p>With it being patient centric</p>",
        "id": 205053137,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1595771518
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span></p>",
        "id": 205053356,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1595771955
    },
    {
        "content": "<p>+1</p>",
        "id": 205053437,
        "sender_full_name": "John Moehrke",
        "timestamp": 1595772071
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span>  I'm curious to know how did you achieve it. Can you help?</p>",
        "id": 205377194,
        "sender_full_name": "Keerthivasan Ramanathan",
        "timestamp": 1596038790
    },
    {
        "content": "<p>We ended up implementing an interceptor invoked on the pointcuts for  SERVER_OUTGOING_RESPONSE, STORAGE_PRECOMMIT_RESOURCE_CREATED, STORAGE_PRECOMMIT_RESOURCE_UPDATED, STORAGE_PRECOMMIT_RESOURCE_DELETED and SERVER_INCOMING_REQUEST_PRE_HANDLED. Be cautious about when you actually generate the auditevent as the point cuts are hit by multiple threads pr request, which means you must delay invocation of the actual generation of auditevent until you get a call to the pointcut SERVER_PROCESSING_COMPLETED from the main thread of the request again. We successfully got it  to work as intended over XA meaning that our auditevents are put on a queue for async processing iff data is to be returned to a user</p>",
        "id": 205420458,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1596061152
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> this is really helpful. i would further investigate it. For us, its mostly READ operations for now. I think pointcuts for SERVER_INCOMING_REQUEST_PRE_HANDLED and SERVER_OUTGOING_RESPONSE should be helpful. Is there any way we can map the request with a response sharing the same AuditEvent resource or something like that? we also need to parse the request headers. Any suggestions will be appreciated. Thanks so much</p>",
        "id": 205448161,
        "sender_full_name": "Keerthivasan Ramanathan",
        "timestamp": 1596093610
    },
    {
        "content": "<p>That is what you need to do by eg. storing the request in the servletRequestDetails so that you can retrieve later on in the SERVER_PROCESSING_COMPLETED pointcut. Be aware that if you intend to produce this on READ, then you also should produce it on SEARCH at least.</p>",
        "id": 205449453,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1596094734
    },
    {
        "content": "<p>Sure, <span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span>  We will have to do for search as well. Where do you suggest that we store the request. Do you have any recommendations? Do you think that we should maintain in a map or something in the application layer? </p>\n<p>Thanks for your time and support.</p>",
        "id": 205558145,
        "sender_full_name": "Keerthivasan Ramanathan",
        "timestamp": 1596171902
    },
    {
        "content": "<p>you have the request in the ServletRequestDetails so you can access the contents there</p>",
        "id": 205566548,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1596182168
    },
    {
        "content": "<p>oh, I got it. Thanks..  Sorry, I missed it.</p>",
        "id": 205567220,
        "sender_full_name": "Keerthivasan Ramanathan",
        "timestamp": 1596182690
    }
]