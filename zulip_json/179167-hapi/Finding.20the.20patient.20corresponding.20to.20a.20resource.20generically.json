[
    {
        "content": "<p>Working on a Consent enforcement interceptor for HAPI, a problem I encounter is to find which patient a resource pertains to in order to find the Consents filed by that patient (or her/his behalf). Right now I have to loop over different resource types, cast the resource to the subtype and call the corresponding method for getting the patient. Since this seems to be a I'm wondering if there is a generic way of doing this without casting the resource. I am aware of the terser method which works directly on the XML of a resource but I think it is not guaranteed to always give the correct answer in this case. CC: <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> </p>",
        "id": 153846184,
        "sender_full_name": "Mohammad Jafari",
        "timestamp": 1472774727
    },
    {
        "content": "<p>what does 'pertain to' mean?</p>",
        "id": 153846185,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472774827
    },
    {
        "content": "<p>Generally, the patient whose consent would be effective and applicable to releasing of the resource but I hear your point. I'm thinking maybe a nice way to implement this in a configurable way is to have a mapping between resource names and the corresponding field which would refer to such patient and have it as part of the configuration of the interceptor<br>\n. </p>",
        "id": 153846186,
        "sender_full_name": "Mohammad Jafari",
        "timestamp": 1472775110
    },
    {
        "content": "<p>well, sounds like a interface + class combination to contribute to HAPI, so that James an write the hook point, and people can use your default contribution, or implement their own....?</p>",
        "id": 153846191,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472778557
    },
    {
        "content": "<p>This sounds like a case for compartments to me!</p>\n<p>You could do something like:</p>\n<div class=\"codehilite\"><pre><span class=\"n\">FhirTerser</span> <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"na\">newTerser</span><span class=\"o\">();</span>\n<span class=\"kt\">boolean</span> <span class=\"n\">pertains</span> <span class=\"o\">=</span> <span class=\"n\">t</span><span class=\"o\">.</span><span class=\"na\">isSourceInCompartmentForTarget</span><span class=\"o\">(</span><span class=\"s\">&quot;Patient&quot;</span><span class=\"o\">,</span> <span class=\"n\">condidateResource</span><span class=\"o\">,</span> <span class=\"k\">new</span> <span class=\"n\">IdType</span><span class=\"o\">(</span><span class=\"s\">&quot;Patient/123&quot;</span><span class=\"o\">));</span>\n</pre></div>",
        "id": 153846273,
        "sender_full_name": "James Agnew",
        "timestamp": 1472823741
    },
    {
        "content": "<p>we don't make any promises about the relationship between the patient and the resource when we make the compartment link - we link for any reason at all; pertains is narrower</p>",
        "id": 153846329,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472849357
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> this seems an excellent place to start and definitely good enough for my demo. But I agree with Grahame that in the general case, this may be a more nuanced and perhaps jurisdiction-dependent matter.</p>",
        "id": 153846917,
        "sender_full_name": "Mohammad Jafari",
        "timestamp": 1473461857
    }
]