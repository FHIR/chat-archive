[
    {
        "content": "<p>Hi! I must be missing something fundamental here, but I've tried to follow the tutorial to try validation against a published profile, but I just can't get it to work. I have tried adding the profile both in the Resource and to the validator (I'm guessing you should only need to do one of them). This is my code:</p>\n<div class=\"codehilite\"><pre><span></span><code>MedicationRequest rx =\n    new MedicationRequest()\n        .setSubject(new Reference(&quot;subject_id&quot;))\n        .setStatus(MedicationRequest.MedicationRequestStatus.ACTIVE);\nrx.setMeta(\n    new Meta()\n        .addProfile(              &quot;https://fhir.simplifier.net/SwedishNationalMedicationList/StructureDefinition/dcae1550-a48a-4d44-a431-73c47c9dd075&quot;));\nFhirContext ctx = FhirContext.forR4();\nFhirValidator validator = ctx.newValidator();\nIValidatorModule module = new FhirInstanceValidator(ctx);\nvalidator.registerValidatorModule(module);\nValidationOptions validationOptions = new ValidationOptions().addProfile(&quot;http://fhir.simplifier.net/SwedishNationalMedicationList/StructureDefinition/dcae1550-a48a-4d44-a431-73c47c9dd075&quot;);\nValidationResult result = validator.validateWithResult(rx, validationOptions);\nif (!result.isSuccessful()) {\n  result.getMessages().forEach(msg -&gt; System.out.println(msg.getMessage()));\n}\nAssert.assertTrue(result.isSuccessful());\n</code></pre></div>\n\n<p>And the output is:<br>\nProfile reference '<a href=\"https://fhir.simplifier.net/SwedishNationalMedicationList/StructureDefinition/dcae1550-a48a-4d44-a431-73c47c9dd075\">https://fhir.simplifier.net/SwedishNationalMedicationList/StructureDefinition/dcae1550-a48a-4d44-a431-73c47c9dd075</a>' could not be resolved, so has not been checked</p>\n<p>I have tried using another profile as well with the same result.</p>",
        "id": 217747577,
        "sender_full_name": "Håkan MacLean",
        "timestamp": 1606221654
    },
    {
        "content": "<p>what's XXXX?</p>",
        "id": 217802773,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1606246305
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179167-hapi/topic/Validation.20with.20a.20Profile/near/217802773\">said</a>:</p>\n<blockquote>\n<p>what's XXXX?</p>\n</blockquote>\n<p>Sorry <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> , don't know why I removed the link. I updated the example to reflect it. Am I using the wrong URL somehow? When I visit the URL a get a JSON with a StructureDefinition, so it makes sense to me.</p>",
        "id": 217808749,
        "sender_full_name": "Håkan MacLean",
        "timestamp": 1606249435
    },
    {
        "content": "<p>what's not obvious from what you've written is why you expect '<a href=\"https://fhir.simplifier.net/SwedishNationalMedicationList/StructureDefinition/dcae1550-a48a-4d44-a431-73c47c9dd075\">https://fhir.simplifier.net/SwedishNationalMedicationList/StructureDefinition/dcae1550-a48a-4d44-a431-73c47c9dd075</a>' to be resolved</p>",
        "id": 217808875,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1606249507
    },
    {
        "content": "<p>When I hit <a href=\"https://fhir.simplifier.net/SwedishNationalMedicationList/StructureDefinition/dcae1550-a48a-4d44-a431-73c47c9dd075\">https://fhir.simplifier.net/SwedishNationalMedicationList/StructureDefinition/dcae1550-a48a-4d44-a431-73c47c9dd075</a> with Postman I get back a FHIR JSON object with a StructureDefinition.</p>\n<p>I also tried the same code, but creating a Patient pointing to <a href=\"http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient\">http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient</a>, but got the same result, which is why I expected it to work? But I suspect I have misunderstood something fundamentally here :)</p>",
        "id": 217809276,
        "sender_full_name": "Håkan MacLean",
        "timestamp": 1606249748
    },
    {
        "content": "<p>the stand alone validator will automatically resolve links like this - mostly - but when you host the validator in HAPI, you have total control over how it acts (e.g. external dependencies), which also gives you the obligation to ensure content is available, or you have implemented the right interfaces</p>",
        "id": 217809449,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1606249849
    },
    {
        "content": "<p>but do you really need to host the validator in HAPI?</p>",
        "id": 217809453,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1606249856
    },
    {
        "content": "<p>what are you actually trying to achieve?</p>",
        "id": 217809468,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1606249865
    },
    {
        "content": "<p>I'm writing unit tests and just want to verify that the MedicationRequests we are creating are complying with a certain Profile.<br>\nWhen you write:<br>\n<code>which also gives you the obligation to ensure content is available, or you have implemented the right interfaces</code><br>\nDo you mean that my code is missing something? I was trying to follow the example in the HAPI tutorial. Right now I still haven't quite understood what is wrong in my example.</p>",
        "id": 217813253,
        "sender_full_name": "Håkan MacLean",
        "timestamp": 1606251864
    },
    {
        "content": "<p>you probably don't want to use the HAPI framework for the validator there. You really want to use the standalone validator. <span class=\"user-mention\" data-user-id=\"248736\">@Mark Iantorno</span> is doing a big lift on the validator framework at the moment, and we're making something better for JUnit testing.</p>",
        "id": 217817272,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1606254085
    },
    {
        "content": "<p>the real problem is the start up time - you certainly don't want the start up on each junit test. Could you run the valdiator as a local web service?</p>",
        "id": 217817304,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1606254108
    },
    {
        "content": "<p>No the startup time is of course a problem, but I thought it would be nice to have just <em>one</em> regression test in our test suit that verifies that we haven't changed anything that breaks the FHIR Profile. So are you saying the HAPI validator currently does not support this use case? In the documentation here <a href=\"https://hapifhir.io/hapi-fhir/docs/validation/instance_validator.html\">https://hapifhir.io/hapi-fhir/docs/validation/instance_validator.html</a> it talks about doing exactly what I want to achieve:<br>\n/*</p>\n<ul>\n<li>Note: You can also explicitly declare a profile to validate against</li>\n<li>using the block below.<br>\n */<br>\n// ValidationResult result = validator.validateWithResult(obs, new ValidationOptions().addProfile(\"<a href=\"http://myprofile.com\">http://myprofile.com</a>\"));</li>\n</ul>\n<p>Sorry for being so stubborn, but I still haven't quite understood why my simple example does not work as it seems perfectly aligned with what the docs suggest :)</p>",
        "id": 217821497,
        "sender_full_name": "Håkan MacLean",
        "timestamp": 1606256413
    },
    {
        "content": "<p>that part works; what doesn't work - and should probably be mentioned there - is that you first have to ensure that that profile and anything it depends on is already loaded</p>",
        "id": 217838027,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1606270525
    },
    {
        "content": "<p>I think, though, that what you are doing is better served by just using the validator directly - say, the class org.hl7.fhir.validation.ValidationEngine. You can see how I use in Junit tests looking here: org.hl7.fhir.validation.tests.ValidationEngineTests, or org.hl7.fhir.validation.tests.ValidationTests, though the second is much complicated by being the 'test everything about the validation logic' test set</p>",
        "id": 217838252,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1606270818
    },
    {
        "content": "<p>the validation engine in that case is surrounded by a bunch of code that (probably) should do what you're expecting</p>",
        "id": 217838273,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1606270862
    },
    {
        "content": "<p>where as HAPI explicitly doesn't, since the general design guideline is that HAPI servers don't use the web directly, especially not implicitly; only be explicit system owner choice</p>",
        "id": 217838292,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1606270907
    },
    {
        "content": "<p>one possibility to load profiles into hapi is providing it via an implementation guide. the hapi-fhir-jpaserver-starter load's the provided ig's from the <a href=\"https://github.com/hapifhir/hapi-fhir-jpaserver-starter/blob/master/src/main/resources/application.yaml\">configuration</a>. We use this approach for exposing a $validate operation on a <a href=\"https://github.com/ahdis/hapi-fhir-jpaserver-validator/releases/tag/v1.1.0\">server</a> and are <a href=\"https://github.com/ahdis/hapi-fhir-jpaserver-validator/blob/ig/src/test/java/ch/ahdis/validation/IgValidateR4Test.java\">testing</a> this with all implementation guides examples the server is configured. If you are not using the JPA stack you can use ValidationEngine as Grahame has explained.</p>",
        "id": 217856589,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1606293449
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"364590\">@Håkan MacLean</span> I think your profile URL is not correct in your code example. Yes, you can retrieve a StructureDefinition from it, but that is because it is the Simplifier endpoint and technical id for that FHIR resource. In the resource instance metadata, and also for validating, you need to use the canonical URL of the profile, which is in the StructureDefinition.url field. In this case it reads \"<a href=\"http://electronichealth.se/fhir/StructureDefinition/NLLMedicationRequest\">http://electronichealth.se/fhir/StructureDefinition/NLLMedicationRequest</a>\".</p>",
        "id": 217868820,
        "sender_full_name": "Mirjam Baltus",
        "timestamp": 1606301280
    },
    {
        "content": "<p>Hi I am currently trying to use the ValidationEngine to validate a resource against a profile. I am using the profile the <a href=\"http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient\">us-core patient</a> . I keep getting the error Unable to resolve profile. I was wondering if there is any way to validate a resource against a profile that is loaded as a StructureDefinition.<br>\nMy use case is to use the profile described <a href=\"http://build.fhir.org/ig/dvci/vaccine-credential-ig/branches/main/StructureDefinition-vaccine-credential-bundle.html\">here</a> to validate a bundle that is sent from a mobile client</p>",
        "id": 232412301,
        "sender_full_name": "Kashyap Jois",
        "timestamp": 1617105248
    },
    {
        "content": "<p>Ok looks like I need to use</p>\n<div class=\"codehilite\"><pre><span></span><code> validator.loadIg(src);\n call this any number of times for the Implementation Guide(s) of interest.\n See https://confluence.hl7.org/display/FHIR/Using+the+FHIR+Validator for documentation about the src parameter (-ig parameter)\n</code></pre></div>\n<p>and load the ig which contains all the profiles. But weirdly enough the function loadIg does not exist..<br>\n<a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/master/org.hl7.fhir.validation/src/main/java/org/hl7/fhir/validation/ValidationEngine.java\">Reference</a></p>",
        "id": 232422633,
        "sender_full_name": "Kashyap Jois",
        "timestamp": 1617110022
    },
    {
        "content": "<p>For anyone else who gets stuck due to this, you can use the validators igLoader, load the implementation guide, and then add all the profiles to the cache of the validators context.</p>",
        "id": 233301116,
        "sender_full_name": "Kashyap Jois",
        "timestamp": 1617707526
    },
    {
        "content": "<p>Hello everyone.<br>\nI have just discovered FHIR and HAPI FHIR these last days and it seems I have the same problem as <span class=\"user-mention\" data-user-id=\"364590\">@Håkan MacLean</span>: I am creating JSON resources which are based on custom Profiles (available on Simplifier) and I want to validate (manually) that my JSON resources are valid against the profile (by pushing them to a FHIR server with $validate option or just seeing the return when trying to create the resource in the server). I've found that there is a CLI tool for HAPI FHIR server and I am using it to start a local HAPI FHIR very easily. But this HAPI FHIR server starting with the CLI tool use only \"basic\" FHIR resource, so it validates my resource at creation against the Patient profile (for example) and not the FrPatient profile available on Simplifier.</p>\n<p>If I understand correctly the answer of <span class=\"user-mention\" data-user-id=\"191478\">@Oliver Egger</span> and <span class=\"user-mention\" data-user-id=\"191347\">@Mirjam Baltus</span>, I can upload the implementation Guide (containing the link to my custom profiles) to the HAPI server by editing the configuration file. But how can I access the configuration file with the CLI tool? Is it possible to give a custom config file to the HAPI server through this command line interface?</p>\n<p>Thank you in advance for your answers, and if I'm not posting in the right topic or stream, don't hesitate to tell me!</p>",
        "id": 235831541,
        "sender_full_name": "Clotaire Delanchy",
        "timestamp": 1619180905
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"407512\">@Clotaire Delanchy</span> if you want to validate manually I would suggest to start with the <a href=\"https://confluence.hl7.org/display/FHIR/Using+the+FHIR+Validator\">FHIR Java validator</a>. You can specify your custom profile and the dependent packages.</p>",
        "id": 235971435,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1619272275
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 266878704,
        "sender_full_name": "Eric Haas",
        "timestamp": 1641338919
    }
]