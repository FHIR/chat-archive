[
    {
        "content": "<p>I've been playing around with the capturingInterceptor to try to pull the raw response. However, the stream is always closed after the client execution is done.</p>",
        "id": 153863765,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1481914600
    },
    {
        "content": "<p>For example:<br>\nBundle bundle = client.search().byUrl(queryUrl).returnBundle(Bundle.class).execute();<br>\nIOUtils.toString(capturingInterceptor.myLastResponse.readEntity());</p>\n<p>Will always throw an exception for reading from a closed stream</p>",
        "id": 153863766,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1481914674
    },
    {
        "content": "<p>Is there some other path that will allow me to get to the raw entity body from the response after the execute?</p>",
        "id": 153863767,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1481914739
    },
    {
        "content": "<p>HAPI 2.1, if it makes a difference</p>",
        "id": 153863768,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1481914799
    },
    {
        "content": "<p>It looks like the interceptor has a direct copy of the original response, so it's not that surprising that the stream is closed once HAPI parses it. However, it was a bit surprising because I was expecting the interceptor to be used for this exact situation :)</p>",
        "id": 153863769,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1481914915
    },
    {
        "content": "<p>I've also been staring at a bunch of code for a while, so I could be missing something.</p>",
        "id": 153863770,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1481914943
    },
    {
        "content": "<p>Note: I got past this by creating my own interceptor, calling the bufferResponse() method when the interceptResponse(...) method was called, and copying the entity (in string form for now) to another field.</p>",
        "id": 153863793,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1481927799
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> , The right way to avoid the  is to call <code>bufferEntitity()</code> on the <code>IHttpResponse</code> method (presumably that's what you meant by <code>bufferResponse()</code>?) so you're definitely doing this the \"right\" way.</p>\n<p>CaptureInterceptor should probably do exactly what you're doing.. I've only ever used it to capture the request URL which is why it hasn't led to the problem you're talking about. (Any chance you want to contribute your interceptor? Happy to include it if you think it'd be a worthwhile successor to CaptureInterceptor)</p>\n<p>As a dumb aside, I see that <code>bufferEntitity</code> has a typo. Sigh, will fix that and deprecate the old method...</p>",
        "id": 153864014,
        "sender_full_name": "James Agnew",
        "timestamp": 1482163415
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> any interest in \"fixing\" the existing Interceptor? The documentation seems to indicate getting the response is one of the functions that should be available there? If so, I can look at contributing a patch that fixes it.</p>",
        "id": 153864016,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1482163937
    },
    {
        "content": "<p>That'd be awesome, yeah</p>",
        "id": 153864018,
        "sender_full_name": "James Agnew",
        "timestamp": 1482164026
    }
]