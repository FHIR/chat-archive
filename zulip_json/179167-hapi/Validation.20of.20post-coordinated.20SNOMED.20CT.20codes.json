[
    {
        "content": "<p>I am working on a validation service that builds on HAPI &amp; the HAPI JPA starter. I am loading SNOMED CT on start-up using the <code>termLoaderService.loadSnomedCt</code> method. I additionally load several IGs on start-up. When validating resources against profiles from the IGs, validation of individual SNOMED codes seems to work fine, but I am getting errors for (what I believe are) correct post-coordinated codes, e.g.</p>\n<div class=\"codehilite\"><pre><span></span><code>Unknown code {http://snomed.info/sct}417662000:246090004=22298006 for &#39;http://snomed.info/sct#417662000:246090004=22298006&#39;\n</code></pre></div>\n<p>Should validation of post-coordinated codes be working out-of-the-box or is it something that needs to be separately configured? Conversely, if it is a known limitation, is there some way to avoid this causing errors (without dropping validation of normal SNOMED codes)?</p>",
        "id": 249210834,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1628758366
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> Do you happen to have experience with this?</p>",
        "id": 249704472,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1629199425
    },
    {
        "content": "<p>yes and no :-)</p>",
        "id": 249704534,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1629199453
    },
    {
        "content": "<p>post-coordination and validation is a nightmare (one of the reasons we changed the icd10 profile recently)</p>",
        "id": 249704560,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1629199484
    },
    {
        "content": "<p>From my perspective you have to implement a IValidationSupport Module which does the magic on post coordination and add this to the ValidationChain BEFORE the other TermValidationModules.</p>",
        "id": 249704686,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1629199567
    },
    {
        "content": "<p>Naive approach: split the post-coordinated codes into singleSNOMED-CT codes and validate these. Ignoring the post-coordination syntax</p>",
        "id": 249704743,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1629199643
    },
    {
        "content": "<p>Or, trigger an existing SNOMED-CT capable Termserver. You could try integrating SNOWSTORM (<a href=\"https://github.com/IHTSDO/snowstorm\">https://github.com/IHTSDO/snowstorm</a>) as a ValidationModule, outsourcing the actual Validation of the post-cord code</p>",
        "id": 249704891,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1629199756
    },
    {
        "content": "<p>Ouch, but thanks for the info! - I guess I was expecting smt. like this <span aria-label=\"sweat smile\" class=\"emoji emoji-1f605\" role=\"img\" title=\"sweat smile\">:sweat_smile:</span> Maybe a first modest step will be to tell my terminology validation support to ignore post-coordinated codes for now.</p>\n<p><span class=\"user-mention\" data-user-id=\"194952\">@Julian Sass</span> FYI, in case others have validation issues, too: I met these in the sample resources from the GECCO project</p>",
        "id": 249705581,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1629200196
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194703\">@Morten Ernebjerg</span> Thanks for the info. I haven't tried SNOWSTORM yet. We have an Ontoserver handling the validation of the post-coordinated codes.</p>",
        "id": 249948151,
        "sender_full_name": "Julian Sass",
        "timestamp": 1629356273
    }
]