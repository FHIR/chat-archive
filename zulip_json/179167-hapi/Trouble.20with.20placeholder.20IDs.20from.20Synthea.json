[
    {
        "content": "<p>I'm trying to load some synthetic data generated by Synthea . Organizations load fine, but the Practitioner bundle  fails with  messages like:</p>\n<p>\"Unable to satisfy placeholder ID urn:uuid:d6c9c111-f4ed-3768-b6f0-e9983b6fa865 found in element named 'practitioner' within resource of type: PractitionerRole\" </p>\n<p>This happens on both the Logica Sandbox and our SmileCDR instance (which is configured with server IDs to be created with UUIDs). Any thoughts? <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> <span class=\"user-mention\" data-user-id=\"191381\">@Jason Walonoski</span> </p>\n<p>Thanks!</p>",
        "id": 221256616,
        "sender_full_name": "Daniel Vreeman",
        "timestamp": 1609372147
    },
    {
        "content": "<p>For those reading, the practitioner bundle should contain only Practitioner and PractitionerRole resources. Reviewing some freshly generated bundles... and nothing seems out of the ordinary as far as I can tell. Do any patient bundles load?</p>",
        "id": 221586538,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1609797440
    },
    {
        "content": "<p>Is the given identifier <code>urn:uuid:d6c9c111-f4ed-3768-b6f0-e9983b6fa865</code> actually in your bundle?</p>",
        "id": 221586584,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1609797474
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191381\">@Jason Walonoski</span> .  Yes, the Practitioner bundles created have only Practitioner and PractitionerRole resources. In the example above, the Practitioner resource with that uuid is in the bundle (just before the PractitionerRole that references it).  </p>\n<p>On SmileCDR, I was able to get the Patient bundles to load (without doing the Practitioner bundle) by enabling \"Allow Inline Match URL References Enabled\" (in addition to \"Auto-Create Placeholder Reference Targets\" which I had on previously). <a href=\"https://smilecdr.com/docs/configuration_categories/fhir_configuration.html\">https://smilecdr.com/docs/configuration_categories/fhir_configuration.html</a> </p>\n<p>For my main project needs, I'm good now b/c I'm focused on the patient data.</p>\n<p>However, others may be looking to do this with Logica. In my Logica R4 sandbox,  when I post the Practitioner bundle, all of the Practitioner resources are successfully created, but all the PractitionerRole resources from that bundle fail (400) with a message as above. Attempting a Patient Bundle resource load  then also fails with the message:  \"Invalid match URL \"Practitioner?identifier=https://github.com/synthetichealth/synthea|d6c9c111-f4ed-3768-b6f0-e9983b6fa865\" - No resources match this search.</p>\n<p>Makes sense because the Practitioner resources that do load have not not retained the uuid as an identifier, e.g.:</p>\n<p><a href=\"https://api.logicahealth.org/SDCTest/open/Practitioner/16173\">https://api.logicahealth.org/SDCTest/open/Practitioner/16173</a></p>",
        "id": 221959990,
        "sender_full_name": "Daniel Vreeman",
        "timestamp": 1610035333
    },
    {
        "content": "<p>A possibly similar case for hapi r4 (v5.1.0):  I had to use the identifier value  only without the system uri in the request.ifNoneExists to do the matching within the transaction bundle.</p>",
        "id": 221988481,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1610047556
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191978\">Daniel Vreeman</span> <a href=\"#narrow/stream/179167-hapi/topic/Trouble.20with.20placeholder.20IDs.20from.20Synthea/near/221959990\">said</a>:</p>\n<blockquote>\n<p>However, others may be looking to do this with Logica. In my Logica R4 sandbox,  when I post the Practitioner bundle, all of the Practitioner resources are successfully created, but all the PractitionerRole resources from that bundle fail (400) with a message as above. Attempting a Patient Bundle resource load  then also fails with the message:  \"Invalid match URL \"Practitioner?identifier=https://github.com/synthetichealth/synthea|d6c9c111-f4ed-3768-b6f0-e9983b6fa865\" - No resources match this search.</p>\n<p>Makes sense because the Practitioner resources that do load have not not retained the uuid as an identifier</p>\n</blockquote>\n<p>Ah, yes. I see. <span class=\"user-mention\" data-user-id=\"191438\">@Marc Hadley</span> We may need to relook at the identifiers across transaction bundles with the practitioner bundle in particular.</p>",
        "id": 222012606,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1610059528
    },
    {
        "content": "<p>This is tricky. The practitioner bundle is a <code>batch</code> since we are trying to avoid creating duplicate practitioners via <code>ifNoneExists</code>. If we used a <code>transaction</code> then all of the practitioners would fail to load if only one of them already exists. But, it sounds like these servers are replacing the resource ids on each <code>Practitioner</code> prior to processing the corresponding <code>PractitionerRole</code> so the reference from the latter to the former is failing. You can only use search references (e.g. <code>Practitioner?identifier=http://hl7.org/fhir/sid/us-npi|9999999559</code>) within transactions so we can't switch to using those in the practitioner bundle for the reason described earlier.</p>",
        "id": 222130743,
        "sender_full_name": "Marc Hadley",
        "timestamp": 1610142549
    },
    {
        "content": "<p>I do see a bug in the patient bundle we generate where some of the query references to practitioners (from EOB and Coverage) are using the practitioner UUID instead of the NPI - I can fix those.</p>",
        "id": 222131094,
        "sender_full_name": "Marc Hadley",
        "timestamp": 1610142776
    },
    {
        "content": "<p>One possible approach would be to create a transaction bundle for each pair of <code>Practitioner</code> and <code>PractitionerRole</code>, that would allow the references to work correctly and keep practitioners separate so we don't fail to load them all if only one (or more) already exist.</p>",
        "id": 222131449,
        "sender_full_name": "Marc Hadley",
        "timestamp": 1610142970
    },
    {
        "content": "<p><strong>Proposal</strong>: change the references from <code>PractitionerRole</code> to <code>Practitioner</code>, <code>Location</code> and <code>Organization</code> to be logical references (<code>Reference.identifier</code>) instead of literal (<code>Reference.reference</code>). This would match the reference in the hospital bundle from <code>Location</code> to <code>Organization</code>.</p>",
        "id": 222653585,
        "sender_full_name": "Marc Hadley",
        "timestamp": 1610576023
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 222653600,
        "sender_full_name": "Marc Hadley",
        "timestamp": 1610576035
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191978\">@Daniel Vreeman</span> <span class=\"user-mention\" data-user-id=\"192103\">@Lin Zhang</span> Thoughts?</p>",
        "id": 222655963,
        "sender_full_name": "Marc Hadley",
        "timestamp": 1610576859
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191438\">@Marc Hadley</span> Thanks.  I have no experience with Synthea although it's already downloaded. And I'm interested to use it.</p>",
        "id": 222662277,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1610580713
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191438\">@Marc Hadley</span>  I think that should work. I manually mocked up an example using the Reference.identifier approach and the bundles loaded in Logica successfully, but will admit that I'm not an expert on the tradeoffs of logical vs literal references.</p>",
        "id": 222762059,
        "sender_full_name": "Daniel Vreeman",
        "timestamp": 1610649453
    },
    {
        "content": "<p>Hello! <br>\nFirst, thanks for everyone who works on the synthea tool, I hadn't delved into it much before, but it's amazingly useful.<br>\nSecond, I was wondering if there were any suggestions for an issue I've run into. I'm trying to upload synthea data to google cloud. It generally goes ok, except to references for Practitioners and Organizations. So my first step was to upload these first, so that way I would know that they were on the server. </p>\n<p>But it still gives me a parsing error: \"an error occurred while reading the record starting at byte 0: error in parsing references Practitioner?identifier=http://hl7.org/fhir/sid/us-npi|9999907989\"</p>\n<p>Has anyone else run into this issue? Is it a problem with how google has implemented their FHIR server?</p>",
        "id": 234218691,
        "sender_full_name": "Grey Faulkenberry",
        "timestamp": 1618256794
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"235060\">@Grey Faulkenberry</span>  Synthea only creates bundles of type transaction. So I think that everything must be resolved for the transaction to be successful or it fails. I got past this by POSTing the hospital file, then practitioner after that. Do you have a hospitals/primary care locations file?</p>",
        "id": 234393287,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1618344918
    },
    {
        "content": "<p>I do. I run synthea with the bulk option on, and I have a hospitalInformation.json file and a practitionerInformation.json file. I can upload those as bundles, and that works properly. But then I have Patient.ndjson, Medication.ndjson, Provenenance.ndjson, etc.</p>",
        "id": 234393782,
        "sender_full_name": "Grey Faulkenberry",
        "timestamp": 1618345148
    },
    {
        "content": "<p>The Patient.ndjson loads fine, but any of the ones that reference a Provider fail</p>",
        "id": 234393812,
        "sender_full_name": "Grey Faulkenberry",
        "timestamp": 1618345163
    },
    {
        "content": "<p>Hmm. That sounds frustrating. Does your use case require bulk or can you use the default (patient bundles) to get around this issue?</p>",
        "id": 234394505,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1618345451
    },
    {
        "content": "<p>Haha, actually, you may have just given me the answer. I assigned: \"exporter.fhir.transaction_bundle = false\", which causes it to create as a collection bundle, which seems to let me upload.</p>",
        "id": 234396062,
        "sender_full_name": "Grey Faulkenberry",
        "timestamp": 1618346120
    },
    {
        "content": "<p>Interesting. I'm not familiar with that option. So, with 'true' it works? Or the other way around?</p>",
        "id": 234397985,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1618346885
    },
    {
        "content": "<p>No with false it works. With true, all of the bundles were transaction bundles, and it apparently didn't like something about the cross references. With collection, it doesn't put the same constraints on the data uploaded. In the long run probably not how I should do it, but I'm still learning the platform, so I was really just trying to get the data uploaded.</p>",
        "id": 234398804,
        "sender_full_name": "Grey Faulkenberry",
        "timestamp": 1618347253
    }
]