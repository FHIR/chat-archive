[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"195740\">Andreas</span> <a href=\"#narrow/stream/179166-implementers/topic/Validation.20-.20Reject.20resource.20if.20no.20meta.2Eprofile/near/200525235\">said</a>:</p>\n<blockquote>\n<p>Hi, we are implementing validation on our FHIR-server with HAPI, and are using the RequestValidatingInterceptor with a ValidationSupportChain consisting of DefaultProfileValidationSupport, PrePopulatedValidationSupport, InMemoryTerminologyServerValidationSupport. We have loaded our own StructureDefinitions into the PrePopulatedValidationSupport and want to only validate against these. This works if the resource contains a profile-url in meta.profile. But if the client does not provide a meta.profile-url, they can get around validating against our provided StructureDefinitions. </p>\n<p>Is it possible with HAPI (or the validator) to reject any resource that does not conform to our provided StructureDefinitions?</p>\n</blockquote>\n<p>yes, I believe this is possible in hapi, not sure if we've done it in Belgium already -  <span class=\"user-mention\" data-user-id=\"265472\">@Tom De Keyser</span> <span class=\"user-mention\" data-user-id=\"258848\">@Axel Magdelijns</span> ?</p>",
        "id": 200546259,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1591883331
    },
    {
        "content": "<p>That can be done in HAPI by extending the FhirInstanceValidator and overriding the <code>validate</code>with subsequent calls to the super method</p>",
        "id": 200547760,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1591884013
    },
    {
        "content": "<p>We have experimented with doing this in the past, and we implemented a rule outside of HAPI that simply checked the incoming profile. I'm curious to try out the suggestion of <span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> .</p>",
        "id": 201113824,
        "sender_full_name": "Tom De Keyser",
        "timestamp": 1592382962
    },
    {
        "content": "<p>it works like a charm ;)</p>",
        "id": 201114480,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1592383346
    }
]