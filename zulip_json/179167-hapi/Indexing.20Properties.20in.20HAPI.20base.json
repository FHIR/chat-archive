[
    {
        "content": "<p>Hi all,</p>\n<p>I'm using the HAPI base client API to interact with the server, I've created a system to deal with referencing other resources, in which I insert a temporary uri in the ResourceReference, and then at a later point, I use this information to search the fhir database, convert temporary uri's to logical ones, and then set the correct value.</p>\n<p>The issue I'm having is that I can't find any obvious way to index what's inside an IResource, so I'm having to write a lot of custom code to handle each property on each resource.  E.g. instead of:</p>\n<p>for (IResource resource: resources)<br>\n  for (Property property: resource.properties)<br>\n    hookup(property)</p>\n<p>I have to do:</p>\n<p>for (IResource resource: resources)<br>\n  if (resource instanceof Patient)<br>\n    hookup(((Patient)resource).getSibling())<br>\n  ...</p>\n<p>The only way I can think to get around this is serialise the resource to xml, walk the tree, then deserialize it, but I don't think that is a very efficient solution.  Am I missing some functionality in the API?  (DSTU2)</p>",
        "id": 153876192,
        "sender_full_name": "Andrew Broadbent",
        "timestamp": 1489416298
    },
    {
        "content": "<p>Sounds like a case for generics, no?</p>",
        "id": 153878902,
        "sender_full_name": "Gary Teichrow",
        "timestamp": 1490127909
    }
]