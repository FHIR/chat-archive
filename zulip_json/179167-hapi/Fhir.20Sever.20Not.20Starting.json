[
    {
        "content": "<p>Has anyone seen this one?</p>\n<p>Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.<br>\n2020-12-28 18:11:24.763 ERROR 9967 --- [           main] o.s.b.d.LoggingFailureAnalysisReporter   : </p>\n<hr>\n<p>APPLICATION FAILED TO START</p>\n<hr>\n<p>Description:</p>\n<p>Field myEntityManagerFactory in ca.uhn.fhir.jpa.search.builder.SearchBuilder required a bean of type 'ca.uhn.fhir.jpa.config.HapiFhirLocalContainerEntityManagerFactoryBean' that could not be found.</p>\n<p>The injection point has the following annotations:<br>\n    - @org.springframework.beans.factory.annotation.Autowired(required=true)</p>\n<p>Action:</p>\n<p>Consider defining a bean of type 'ca.uhn.fhir.jpa.config.HapiFhirLocalContainerEntityManagerFactoryBean' in your configuration.</p>\n<p>I'm attempting to wrap a fhir server in spring-boot and i'm seeing this now.</p>",
        "id": 221104382,
        "sender_full_name": "Neil Lott",
        "timestamp": 1609204734
    },
    {
        "content": "<p>Which version of HAPI are you using?</p>",
        "id": 221124909,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1609237647
    },
    {
        "content": "<p>5.2.0</p>",
        "id": 221153096,
        "sender_full_name": "Neil Lott",
        "timestamp": 1609264636
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"372576\">@Neil Lott</span>  look at the following it should get you around it:</p>\n<div class=\"codehilite\"><pre><span></span><code>    @Bean\n    public LocalContainerEntityManagerFactoryBean entityManagerFactory(FhirContext fhirContext,\n                                                                       DataSource dataSource,\n                                                                       ConfigurableListableBeanFactory beanFactory,\n                                                                       JtaTransactionManager jtaTransactionManager,\n                                                                       JpaVendorAdapter jpaVendorAdapter) {\n        LocalContainerEntityManagerFactoryBean entityManagerFactoryBean = new HapiFhirLocalContainerEntityManagerFactoryBean();\n        try {\n            entityManagerFactoryBean.setJpaVendorAdapter(jpaVendorAdapter);\n            entityManagerFactoryBean.setJtaDataSource(dataSource);\n            entityManagerFactoryBean.getJpaPropertyMap().putAll(getHibernateProperties(beanFactory, jtaTransactionManager));\n\n            BaseConfig.configureEntityManagerFactory(entityManagerFactoryBean, fhirContext);\n            entityManagerFactoryBean.setPersistenceUnitName(&quot;HAPI_PU&quot;);\n        } catch (Exception e) {\n            throw new ConfigurationException(&quot;Could create LocalContainerEntityManagerFactoryBean due to a configuration issue&quot;, e);\n        }\n        return entityManagerFactoryBean;\n    }\n</code></pre></div>\n<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span>  you should be aware of this</p>",
        "id": 221163304,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1609272767
    },
    {
        "content": "<p>Me too facing the same issue. Any solution for the same?</p>",
        "id": 224389966,
        "sender_full_name": "Kishore Karanam",
        "timestamp": 1611866619
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> Could you please ellaborate a little further on your solution?</p>\n<p>I am trying to upgrade from HAPI 5.1.0 to 5.2.1 but the server fails to start and throws the same Excepation as descirbed in the first post.</p>",
        "id": 229840818,
        "sender_full_name": "Sergej Reiser",
        "timestamp": 1615466063
    },
    {
        "content": "<p>Have you tried on 5.3.0 now that it is released?</p>",
        "id": 229842072,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1615466779
    },
    {
        "content": "<p>Yes i also tried to use 5.3.0 which ends up in the same issue.</p>\n<p>Im using <a href=\"https://github.com/hapifhir/hapi-fhir/tree/master/hapi-fhir-spring-boot/hapi-fhir-spring-boot-starter\">hapi-fhir-spring-boot-starter</a> to run a FHIR-Server in a spring-boot based project.<br>\nThe reason why i tried to upgrade to 5.2.1 first is that there is a sample project which i always used as a reference (apparently this sample was removed in 5.3.0): <a href=\"https://github.com/hapifhir/hapi-fhir/tree/v5.2.1/hapi-fhir-spring-boot/hapi-fhir-spring-boot-samples/hapi-fhir-spring-boot-sample-server-jpa\">hapi-fhir-spring-boot-sample-server-jpa</a>. <br>\nBut even this sample project fails with the same Exception.</p>\n<p>I am aware, that there is another sample project (<a href=\"https://github.com/hapifhir/hapi-fhir-jpaserver-starter\">hapi-fhir-jpaserver-starter</a>) but that one doesn't use the hapi-fhir-spring-boot-starter.</p>",
        "id": 229843147,
        "sender_full_name": "Sergej Reiser",
        "timestamp": 1615467351
    },
    {
        "content": "<p><a href=\"https://github.com/hapifhir/hapi-fhir-jpaserver-starter\">https://github.com/hapifhir/hapi-fhir-jpaserver-starter</a> is the only one that I co-maintain - the other ones are not really maintained anymore</p>",
        "id": 229844225,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1615467818
    },
    {
        "content": "<p>But HAPI's spring-boot-starter itself (<a href=\"https://github.com/hapifhir/hapi-fhir/tree/master/hapi-fhir-spring-boot/hapi-fhir-spring-boot-starter\">hapi-fhir-spring-boot-starter</a>) is still being maintained as it got a release for 5.3.0 and a pre-release for 5.4.0-PRE1-SNAPSHOT.<br>\nIt just doesn't seem to work out-of-the-box as it used to do. <br>\nMaybe i am mistaken, but shouldn't a spring-boot-starter provide convenient functionality to automatically wire up your application by simply adding the starter to the classpath?</p>\n<p>In other words: Shouldn't your code snipped be part of hapi-fhir-spring-boot-starter / <a href=\"https://github.com/hapifhir/hapi-fhir/tree/master/hapi-fhir-spring-boot/hapi-fhir-spring-boot-autoconfigure\">hapi-fhir-spring-boot-autoconfigure</a>?</p>",
        "id": 229872870,
        "sender_full_name": "Sergej Reiser",
        "timestamp": 1615478396
    },
    {
        "content": "<p>The jpa-starter is the only maintained way of getting a ready to use hapi instance. hapi-fhir-spring-boot-starter might have got some (search replace version updates, but no maintainance. Look for yourself: <a href=\"https://github.com/hapifhir/hapi-fhir/commits/master/hapi-fhir-spring-boot\">https://github.com/hapifhir/hapi-fhir/commits/master/hapi-fhir-spring-boot</a>)</p>",
        "id": 229874519,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1615478693
    },
    {
        "content": "<p>the spring boot project was a community contribution quite some time ago. Afaik there is no maintainer for this part of hapi. So it can work, or it can't. I would take the safe route with the jpa starter project.</p>",
        "id": 229875098,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1615478809
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> thank you for clarifying! I falsely assumed, that every artifact located at <a href=\"https://github.com/hapifhir/hapi-fhir\">https://github.com/hapifhir/hapi-fhir</a> is being maintained. And since the artifacts are being released to Maven-Central i didn't even bother to check the commits. Maybe it should be mentioned in the artifact's readme file.</p>\n<p>We have been using hapi-fhir-spring-boot-starter since 4.1.0 and it has served us very well thus far. We will look into hapi-fhir-jpaserver-starter though in order to upgrade to a newer version.</p>",
        "id": 229993424,
        "sender_full_name": "Sergej Reiser",
        "timestamp": 1615538148
    },
    {
        "content": "<p>Yes adding a disclaimer to the Readme which points to the jpastarter project sounds like a good idea. <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> ?</p>",
        "id": 229994631,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1615538873
    },
    {
        "content": "<p>Definitely agreed</p>",
        "id": 230031656,
        "sender_full_name": "James Agnew",
        "timestamp": 1615557320
    },
    {
        "content": "<p>Hi,</p>\n<p>In Instant OpenHIE our scripts aren't working with an update from v5.2.1 to v5.4.1 - all in docker.</p>\n<p>Previously, HAPI v5.2.1 connected to a MySQL DB (v5.7) when we configured Spring with the following:</p>\n<div class=\"codehilite\" data-code-language=\"yml\"><pre><span></span><code>      - spring.datasource.url=jdbc:mysql://mysql:3306/hapi\n      - spring.datasource.username=admin\n      - spring.datasource.password=&lt;password&gt;\n      - spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver\n      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect\n</code></pre></div>\n<p>With HAPI v5.3 onwards the service crashes with the following logs:</p>\n<div class=\"codehilite\"><pre><span></span><code>2021-08-26 15:19:21.889 [main] WARN  o.h.e.jdbc.spi.SqlExceptionHelper [SqlExceptionHelper.java:137] SQL Error: 1146, SQLState: 42S02\n2021-08-26 15:19:21.890 [main] ERROR o.h.e.jdbc.spi.SqlExceptionHelper [SqlExceptionHelper.java:142] Table &#39;hapi.HFJ_RESOURCE&#39; doesn&#39;t exist\n2021-08-26 15:19:21.892 [main] ERROR c.u.f.j.s.b.sql.SearchQueryExecutor [SearchQueryExecutor.java:136] Failed to create or execute SQL query\norg.hibernate.exception.SQLGrammarException: could not extract ResultSet\n</code></pre></div>\n<p>When I searched through MySQL DB I see that the table name casing has changed from upper to lower case.<br>\nHence <strong>HFJ_RESOURCE</strong> never resolved to <strong>hfj_resource</strong>.</p>\n<p>I've tried using the following config to try prevent tables being created in lowercase but no luck:</p>\n<div class=\"codehilite\" data-code-language=\"yml\"><pre><span></span><code>      - spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.SpringImplicitNamingStrategy\n      - spring.jpa.hibernate.naming.physical-strategy.case-insensitive=false\n</code></pre></div>\n<p>Not sure what other combinations are out there.</p>\n<p><strong>Does anyone have any suggestions for how to resolve the resource table names?</strong></p>",
        "id": 250793305,
        "sender_full_name": "Matthew Dickie",
        "timestamp": 1629992707
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"347882\">@Kevin Dougan</span> can you have a peek at this one please?</p>",
        "id": 250851545,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1630017382
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"364091\">@Matthew Dickie</span> ,<br>\nWhat O/S are you using for your MySQL DB?<br>\nAlso, if you can get access to the DB Server, what is the current value of the MySQL system variable called <strong>lower_case_table_names</strong>?</p>\n<p>You might have to change that MySQL system variable, according to the following documentation:<br>\n<a href=\"https://dev.mysql.com/doc/refman/5.7/en/identifier-case-sensitivity.html\">https://dev.mysql.com/doc/refman/5.7/en/identifier-case-sensitivity.html</a></p>",
        "id": 250924005,
        "sender_full_name": "Kevin Dougan",
        "timestamp": 1630067445
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"347882\">@Kevin Dougan</span> <br>\nMySQL DB is in a docker container from the official source  - <a href=\"https://hub.docker.com/_/mysql\">https://hub.docker.com/_/mysql</a> tag <strong>5.7</strong> - not sure what OS that is - I assume a unix distribution?<br>\nThe <code>lower_case_table_names</code> variable is currently set to <strong>0</strong><br>\nI'll try to pass in an Environment variable set to <strong>1</strong></p>",
        "id": 250927102,
        "sender_full_name": "Matthew Dickie",
        "timestamp": 1630069115
    }
]