[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> I do not understand the implementation of org.hl7.fhir.r5.model.BaseDateTimeType.equalsUsingFhirPathRules(BaseDateTimeType):</p>",
        "id": 165682531,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557890071
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>    <span class=\"n\">BaseDateTimeType</span> <span class=\"n\">me</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"o\">;</span>\n\n    <span class=\"c1\">// Per FHIRPath rules, we compare equivalence at the lowest precision of the two values,</span>\n    <span class=\"c1\">// so if we need to, we&#39;ll clone either side and reduce its precision</span>\n    <span class=\"kt\">int</span> <span class=\"n\">lowestPrecision</span> <span class=\"o\">=</span> <span class=\"n\">Math</span><span class=\"o\">.</span><span class=\"na\">min</span><span class=\"o\">(</span><span class=\"n\">me</span><span class=\"o\">.</span><span class=\"na\">getPrecision</span><span class=\"o\">().</span><span class=\"na\">ordinal</span><span class=\"o\">(),</span> <span class=\"n\">theOther</span><span class=\"o\">.</span><span class=\"na\">getPrecision</span><span class=\"o\">().</span><span class=\"na\">ordinal</span><span class=\"o\">());</span>\n    <span class=\"n\">TemporalPrecisionEnum</span> <span class=\"n\">lowestPrecisionEnum</span> <span class=\"o\">=</span> <span class=\"n\">TemporalPrecisionEnum</span><span class=\"o\">.</span><span class=\"na\">values</span><span class=\"o\">()[</span><span class=\"n\">lowestPrecision</span><span class=\"o\">];</span>\n    <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">me</span><span class=\"o\">.</span><span class=\"na\">getPrecision</span><span class=\"o\">()</span> <span class=\"o\">!=</span> <span class=\"n\">lowestPrecisionEnum</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n      <span class=\"n\">me</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">DateTimeType</span><span class=\"o\">(</span><span class=\"n\">me</span><span class=\"o\">.</span><span class=\"na\">getValueAsString</span><span class=\"o\">());</span>\n      <span class=\"n\">me</span><span class=\"o\">.</span><span class=\"na\">setPrecision</span><span class=\"o\">(</span><span class=\"n\">lowestPrecisionEnum</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n    <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">theOther</span><span class=\"o\">.</span><span class=\"na\">getPrecision</span><span class=\"o\">()</span> <span class=\"o\">!=</span> <span class=\"n\">lowestPrecisionEnum</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n      <span class=\"n\">theOther</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"n\">DateTimeType</span><span class=\"o\">(</span><span class=\"n\">theOther</span><span class=\"o\">.</span><span class=\"na\">getValueAsString</span><span class=\"o\">());</span>\n      <span class=\"n\">theOther</span><span class=\"o\">.</span><span class=\"na\">setPrecision</span><span class=\"o\">(</span><span class=\"n\">lowestPrecisionEnum</span><span class=\"o\">);</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">me</span><span class=\"o\">.</span><span class=\"na\">hasTimezoneIfRequired</span><span class=\"o\">()</span> <span class=\"o\">!=</span> <span class=\"n\">theOther</span><span class=\"o\">.</span><span class=\"na\">hasTimezoneIfRequired</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n      <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">me</span><span class=\"o\">.</span><span class=\"na\">getPrecision</span><span class=\"o\">()</span> <span class=\"o\">==</span> <span class=\"n\">theOther</span><span class=\"o\">.</span><span class=\"na\">getPrecision</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n        <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">me</span><span class=\"o\">.</span><span class=\"na\">getPrecision</span><span class=\"o\">().</span><span class=\"na\">ordinal</span><span class=\"o\">()</span> <span class=\"o\">&gt;=</span> <span class=\"n\">TemporalPrecisionEnum</span><span class=\"o\">.</span><span class=\"na\">MINUTE</span><span class=\"o\">.</span><span class=\"na\">ordinal</span><span class=\"o\">()</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">theOther</span><span class=\"o\">.</span><span class=\"na\">getPrecision</span><span class=\"o\">().</span><span class=\"na\">ordinal</span><span class=\"o\">()</span> <span class=\"o\">&gt;=</span> <span class=\"n\">TemporalPrecisionEnum</span><span class=\"o\">.</span><span class=\"na\">MINUTE</span><span class=\"o\">.</span><span class=\"na\">ordinal</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n          <span class=\"kt\">boolean</span> <span class=\"n\">couldBeTheSameTime</span> <span class=\"o\">=</span> <span class=\"n\">couldBeTheSameTime</span><span class=\"o\">(</span><span class=\"n\">me</span><span class=\"o\">,</span> <span class=\"n\">theOther</span><span class=\"o\">)</span> <span class=\"o\">||</span> <span class=\"n\">couldBeTheSameTime</span><span class=\"o\">(</span><span class=\"n\">theOther</span><span class=\"o\">,</span> <span class=\"n\">me</span><span class=\"o\">);</span>\n          <span class=\"k\">if</span> <span class=\"o\">(!</span><span class=\"n\">couldBeTheSameTime</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n            <span class=\"k\">return</span> <span class=\"kc\">false</span><span class=\"o\">;</span>\n          <span class=\"o\">}</span>\n        <span class=\"o\">}</span>\n      <span class=\"o\">}</span>\n      <span class=\"k\">return</span> <span class=\"kc\">null</span><span class=\"o\">;</span>\n    <span class=\"o\">}</span>\n\n    <span class=\"c1\">// Same precision</span>\n    <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">me</span><span class=\"o\">.</span><span class=\"na\">getPrecision</span><span class=\"o\">()</span> <span class=\"o\">==</span> <span class=\"n\">theOther</span><span class=\"o\">.</span><span class=\"na\">getPrecision</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n      <span class=\"k\">if</span> <span class=\"o\">(</span><span class=\"n\">me</span><span class=\"o\">.</span><span class=\"na\">getPrecision</span><span class=\"o\">().</span><span class=\"na\">ordinal</span><span class=\"o\">()</span> <span class=\"o\">&gt;=</span> <span class=\"n\">TemporalPrecisionEnum</span><span class=\"o\">.</span><span class=\"na\">MINUTE</span><span class=\"o\">.</span><span class=\"na\">ordinal</span><span class=\"o\">())</span> <span class=\"o\">{</span>\n        <span class=\"kt\">long</span> <span class=\"n\">leftTime</span> <span class=\"o\">=</span> <span class=\"n\">me</span><span class=\"o\">.</span><span class=\"na\">getValue</span><span class=\"o\">().</span><span class=\"na\">getTime</span><span class=\"o\">();</span>\n        <span class=\"kt\">long</span> <span class=\"n\">rightTime</span> <span class=\"o\">=</span> <span class=\"n\">theOther</span><span class=\"o\">.</span><span class=\"na\">getValue</span><span class=\"o\">().</span><span class=\"na\">getTime</span><span class=\"o\">();</span>\n        <span class=\"k\">return</span> <span class=\"n\">leftTime</span> <span class=\"o\">==</span> <span class=\"n\">rightTime</span><span class=\"o\">;</span>\n      <span class=\"o\">}</span> <span class=\"k\">else</span> <span class=\"o\">{</span>\n        <span class=\"n\">String</span> <span class=\"n\">leftTime</span> <span class=\"o\">=</span> <span class=\"n\">me</span><span class=\"o\">.</span><span class=\"na\">getValueAsString</span><span class=\"o\">();</span>\n        <span class=\"n\">String</span> <span class=\"n\">rightTime</span> <span class=\"o\">=</span> <span class=\"n\">theOther</span><span class=\"o\">.</span><span class=\"na\">getValueAsString</span><span class=\"o\">();</span>\n        <span class=\"k\">return</span> <span class=\"n\">leftTime</span><span class=\"o\">.</span><span class=\"na\">equals</span><span class=\"o\">(</span><span class=\"n\">rightTime</span><span class=\"o\">);</span>\n      <span class=\"o\">}</span>\n    <span class=\"o\">}</span>\n</pre></div>",
        "id": 165682536,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557890089
    },
    {
        "content": "<p>we start y forcing them to the same precision... and then we compare to see if the precision that we forced them to is indeed the same precision.... uh?</p>",
        "id": 165682554,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557890134
    },
    {
        "content": "<p>and given the comments:</p>",
        "id": 165682692,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557890364
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>   <span class=\"o\">*</span> <span class=\"n\">This</span> <span class=\"n\">method</span> <span class=\"n\">returns</span><span class=\"o\">:</span>\n   <span class=\"o\">*</span> <span class=\"o\">&lt;</span><span class=\"n\">ul</span><span class=\"o\">&gt;</span>\n   <span class=\"o\">*</span>     <span class=\"o\">&lt;</span><span class=\"n\">li</span><span class=\"o\">&gt;</span><span class=\"kc\">true</span> <span class=\"k\">if</span> <span class=\"n\">the</span> <span class=\"n\">given</span> <span class=\"n\">datetimes</span> <span class=\"n\">represent</span> <span class=\"n\">the</span> <span class=\"n\">exact</span> <span class=\"n\">same</span> <span class=\"n\">instant</span> <span class=\"n\">with</span> <span class=\"n\">the</span> <span class=\"n\">same</span> <span class=\"nf\">precision</span> <span class=\"o\">(</span><span class=\"n\">irrespective</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">timezone</span><span class=\"o\">)&lt;/</span><span class=\"n\">li</span><span class=\"o\">&gt;</span>\n   <span class=\"o\">*</span>     <span class=\"o\">&lt;</span><span class=\"n\">li</span><span class=\"o\">&gt;</span><span class=\"kc\">true</span> <span class=\"k\">if</span> <span class=\"n\">the</span> <span class=\"n\">given</span> <span class=\"n\">datetimes</span> <span class=\"n\">represent</span> <span class=\"n\">the</span> <span class=\"n\">exact</span> <span class=\"n\">same</span> <span class=\"n\">instant</span> <span class=\"n\">but</span> <span class=\"n\">one</span> <span class=\"n\">includes</span> <span class=\"n\">milliseconds</span> <span class=\"n\">of</span> <span class=\"o\">&lt;</span><span class=\"n\">code</span><span class=\"o\">&gt;.[</span><span class=\"mi\">0</span><span class=\"o\">]+&lt;/</span><span class=\"n\">code</span><span class=\"o\">&gt;</span> <span class=\"k\">while</span> <span class=\"n\">the</span> <span class=\"n\">other</span> <span class=\"n\">includes</span> <span class=\"n\">only</span> <span class=\"n\">SECONDS</span> <span class=\"nf\">precision</span> <span class=\"o\">(</span><span class=\"n\">irrespecitve</span> <span class=\"n\">of</span> <span class=\"n\">the</span> <span class=\"n\">timezone</span><span class=\"o\">)&lt;/</span><span class=\"n\">li</span><span class=\"o\">&gt;</span>\n   <span class=\"o\">*</span>     <span class=\"o\">&lt;</span><span class=\"n\">li</span><span class=\"o\">&gt;</span><span class=\"kc\">true</span> <span class=\"k\">if</span> <span class=\"n\">the</span> <span class=\"n\">given</span> <span class=\"n\">datetimes</span> <span class=\"n\">represent</span> <span class=\"n\">the</span> <span class=\"n\">exact</span> <span class=\"n\">same</span> <span class=\"n\">year</span><span class=\"o\">/</span><span class=\"n\">year</span><span class=\"o\">-</span><span class=\"n\">month</span><span class=\"o\">/</span><span class=\"n\">year</span><span class=\"o\">-</span><span class=\"n\">month</span><span class=\"o\">-</span><span class=\"n\">date</span> <span class=\"o\">(</span><span class=\"k\">if</span> <span class=\"n\">both</span> <span class=\"n\">operands</span> <span class=\"n\">have</span> <span class=\"n\">the</span> <span class=\"n\">same</span> <span class=\"n\">precision</span><span class=\"o\">)&lt;/</span><span class=\"n\">li</span><span class=\"o\">&gt;</span>\n   <span class=\"o\">*</span>     <span class=\"o\">&lt;</span><span class=\"n\">li</span><span class=\"o\">&gt;</span><span class=\"kc\">false</span> <span class=\"k\">if</span> <span class=\"n\">both</span> <span class=\"n\">datetimes</span> <span class=\"n\">have</span> <span class=\"n\">equal</span> <span class=\"n\">precision</span> <span class=\"n\">of</span> <span class=\"n\">MINUTE</span> <span class=\"n\">or</span> <span class=\"n\">greater</span><span class=\"o\">,</span> <span class=\"n\">one</span> <span class=\"n\">has</span> <span class=\"n\">no</span> <span class=\"n\">timezone</span> <span class=\"n\">specified</span> <span class=\"n\">but</span> <span class=\"n\">the</span> <span class=\"n\">other</span> <span class=\"n\">does</span><span class=\"o\">,</span> <span class=\"n\">and</span> <span class=\"n\">could</span> <span class=\"n\">not</span> <span class=\"n\">represent</span> <span class=\"n\">the</span> <span class=\"n\">same</span> <span class=\"n\">instant</span> <span class=\"n\">in</span> <span class=\"n\">any</span> <span class=\"n\">timezone</span><span class=\"o\">&lt;/</span><span class=\"n\">li</span><span class=\"o\">&gt;</span>\n   <span class=\"o\">*</span>     <span class=\"o\">&lt;</span><span class=\"n\">li</span><span class=\"o\">&gt;</span><span class=\"kc\">null</span> <span class=\"k\">if</span> <span class=\"n\">both</span> <span class=\"n\">datetimes</span> <span class=\"n\">have</span> <span class=\"n\">equal</span> <span class=\"n\">precision</span> <span class=\"n\">of</span> <span class=\"n\">MINUTE</span> <span class=\"n\">or</span> <span class=\"n\">greater</span><span class=\"o\">,</span> <span class=\"n\">one</span> <span class=\"n\">has</span> <span class=\"n\">no</span> <span class=\"n\">timezone</span> <span class=\"n\">specified</span> <span class=\"n\">but</span> <span class=\"n\">the</span> <span class=\"n\">other</span> <span class=\"n\">does</span><span class=\"o\">,</span> <span class=\"n\">and</span> <span class=\"n\">could</span> <span class=\"n\">potentially</span> <span class=\"n\">represent</span> <span class=\"n\">the</span> <span class=\"n\">same</span> <span class=\"n\">instant</span> <span class=\"n\">in</span> <span class=\"n\">any</span> <span class=\"n\">timezone</span><span class=\"o\">&lt;/</span><span class=\"n\">li</span><span class=\"o\">&gt;</span>\n   <span class=\"o\">*</span>     <span class=\"o\">&lt;</span><span class=\"n\">li</span><span class=\"o\">&gt;</span><span class=\"kc\">false</span> <span class=\"k\">if</span> <span class=\"n\">the</span> <span class=\"n\">given</span> <span class=\"n\">datetimes</span> <span class=\"n\">have</span> <span class=\"n\">the</span> <span class=\"n\">same</span> <span class=\"n\">precision</span> <span class=\"n\">but</span> <span class=\"k\">do</span> <span class=\"n\">not</span> <span class=\"n\">represent</span> <span class=\"n\">the</span> <span class=\"n\">same</span> <span class=\"nf\">instant</span> <span class=\"o\">(</span><span class=\"n\">irrespective</span> <span class=\"n\">of</span> <span class=\"n\">timezone</span><span class=\"o\">)&lt;/</span><span class=\"n\">li</span><span class=\"o\">&gt;</span>\n   <span class=\"o\">*</span>     <span class=\"o\">&lt;</span><span class=\"n\">li</span><span class=\"o\">&gt;</span><span class=\"kc\">null</span> <span class=\"nf\">otherwise</span> <span class=\"o\">(</span><span class=\"n\">since</span> <span class=\"n\">these</span> <span class=\"n\">datetimes</span> <span class=\"n\">are</span> <span class=\"n\">not</span> <span class=\"n\">comparable</span><span class=\"o\">)&lt;/</span><span class=\"n\">li</span><span class=\"o\">&gt;</span>\n   <span class=\"o\">*</span> <span class=\"o\">&lt;/</span><span class=\"n\">ul</span><span class=\"o\">&gt;</span>\n</pre></div>",
        "id": 165682694,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557890376
    },
    {
        "content": "<p>this just outright looks like an error. And, of course, the FHIRPath tests fail. So I think I just need to fix this routine to work as described, and JUnit test it directly...?</p>",
        "id": 165682750,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557890416
    },
    {
        "content": "<p>ah it does have direct tests and they all fail...</p>",
        "id": 165682768,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1557890512
    },
    {
        "content": "<p>The logic there is to satisfy the following text in the FhIrPaTh spec: <code>If one operand has less precision than the other, comparison is done at the lowest precision.</code></p>\n<p>The idea being that if the two sides don't have the same precision, we make a copy of whichever one had the higher precision and then reduce the precision of that copy. Then we compare the copy instead of the original.</p>",
        "id": 165715137,
        "sender_full_name": "James Agnew",
        "timestamp": 1557927634
    },
    {
        "content": "<p>this text has changed in the latest version. And that routine exists to serve the latest version of FHIRPath</p>",
        "id": 166057136,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1558328938
    },
    {
        "content": "<p>I checked in a revised version.</p>",
        "id": 166059194,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1558332086
    },
    {
        "content": "<p>sounds good</p>",
        "id": 166082597,
        "sender_full_name": "James Agnew",
        "timestamp": 1558357279
    }
]