[
    {
        "content": "<p>i'm currently playing around with hapis subscriptions (websocket).<br>\nI couldn't find any ping/pong or heartbeat function in hapi, so idle websockets will timeout.</p>",
        "id": 213809110,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1603123977
    },
    {
        "content": "<p>I want to prevent the timeout via ping/pong</p>",
        "id": 213809166,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1603124005
    },
    {
        "content": "<p>Did i miss something? Would you accept a PR adding this <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> ?</p>",
        "id": 213809213,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1603124029
    },
    {
        "content": "<p>I found the  ca.uhn.fhir.jpa.subscription.SocketImplementation class in the hapi tests, which just sends \"keep alive\" as a text message.</p>",
        "id": 213929697,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1603205147
    },
    {
        "content": "<p>Checked the Implementation of the WS in hapi, there are no ping frames sent out.</p>",
        "id": 213929921,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1603205231
    },
    {
        "content": "<p>Question to me is: what would be better: adding \"keep alive\" or sending out ping frames?</p>",
        "id": 213930041,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1603205288
    },
    {
        "content": "<p>I also like the idea of the client being able to check the connection with Ping/Pong</p>",
        "id": 213930207,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1603205376
    },
    {
        "content": "<p>to me this would lead to two aspects to implement:</p>\n<ul>\n<li>an (optional) Ping from Server -&gt; Client, (Pong response by the client optional)</li>\n<li>hapi websocket backend responds with PONG to a PING frame</li>\n</ul>",
        "id": 213932467,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1603206337
    }
]