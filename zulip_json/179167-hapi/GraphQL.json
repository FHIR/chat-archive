[
    {
        "content": "<p>Is there a way to fetch GraphQL schema supported by 4.1 ? or do some kind of introspection to know what in graphql is supported or not ?</p>",
        "id": 196934162,
        "sender_full_name": "dsh",
        "timestamp": 1588963268
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> any info on this ^</p>",
        "id": 196972296,
        "sender_full_name": "dsh",
        "timestamp": 1588997109
    },
    {
        "content": "<p>Nothing like this exists in HAPI yet- It does sound like something that would be useful though</p>",
        "id": 197003407,
        "sender_full_name": "James Agnew",
        "timestamp": 1589046520
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> in absence of a GraphQL schema are there any HAPI implementation specific documentation that can help? Moreover do u think HAPI is GraphQL ready?</p>",
        "id": 197009334,
        "sender_full_name": "dsh",
        "timestamp": 1589053846
    },
    {
        "content": "<p>This probably depends on your definition of \"ready\". GraphQL was only<br>\nreally added to the server fairly recently, and I don't have a sense that<br>\nit has been widely adopted or tested yet. So from the perspective of \"how<br>\nbattle tested is it\", I guess the answer is not very.</p>\n<p>That said, I do believe the code is solid for the use cases it currently<br>\ncovers. It still needs lots of work though to further enhance it (POST<br>\nsupport, paging support for searches, etc.)</p>",
        "id": 197009542,
        "sender_full_name": "James Agnew",
        "timestamp": 1589054187
    },
    {
        "content": "<p>I have very little interest in supporting mutations - it seems to me that it only supports mutations because of the hammer/nail thing - it doesn't do anything useful. OTOH, i though I had done schema support.</p>",
        "id": 197013148,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589058788
    },
    {
        "content": "<p>FWIW by POST support I just mean that there is no way in HAPI server right now to submit a GraphQL read query via a POST instead of on the GET URL, which I have heard complaints makes it kind of cumbersome.</p>",
        "id": 197015037,
        "sender_full_name": "James Agnew",
        "timestamp": 1589060533
    },
    {
        "content": "<p>ah ok. yes that is a necessary feature</p>",
        "id": 197017201,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589063229
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179167-hapi/topic/GraphQL/near/197013148\" title=\"#narrow/stream/179167-hapi/topic/GraphQL/near/197013148\">said</a>:</p>\n<blockquote>\n<p>I have very little interest in supporting mutations - it seems to me that it only supports mutations because of the hammer/nail thing - it doesn't do anything useful. OTOH, i though I had done schema support.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> that's fantastic</p>",
        "id": 197058637,
        "sender_full_name": "dsh",
        "timestamp": 1589121125
    },
    {
        "content": "<p>How do you access the graphql schema?</p>",
        "id": 197058725,
        "sender_full_name": "dsh",
        "timestamp": 1589121202
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> any ideas ^ ?</p>",
        "id": 197486238,
        "sender_full_name": "dsh",
        "timestamp": 1589409595
    },
    {
        "content": "<p>presumably you've tried using the standard graphql introspection request?</p>",
        "id": 197486505,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589409818
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> no I have not. But I have tried is very basic examples <a href=\"http://build.fhir.org/graphql.html\">http://build.fhir.org/graphql.html</a> and not knowing what fields and relations are searchable is what I think is the stumbling block.</p>",
        "id": 197504205,
        "sender_full_name": "dsh",
        "timestamp": 1589428921
    },
    {
        "content": "<p>apart from the fact currently graphql queries cannot be executed using a POST method</p>",
        "id": 197504253,
        "sender_full_name": "dsh",
        "timestamp": 1589428950
    },
    {
        "content": "<blockquote>\n<p>not knowing what fields and relations are searchable</p>\n</blockquote>\n<p>So that is driven from the definitions in the specification - which is more human readable than the graphql introspection tools generally create. So we've typically thought that graphql schema is primarily for graphql tooling</p>",
        "id": 197504427,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589429229
    },
    {
        "content": "<p>any pointers/references to graphql introspection tools. And any way to access graphql schema in any shape and form ?</p>",
        "id": 197504481,
        "sender_full_name": "dsh",
        "timestamp": 1589429299
    },
    {
        "content": "<p>the graphql schema are all posted to the <a href=\"http://hl7.org\">hl7.org</a> server, but aren't accessible. I presume this is because the <a href=\"http://hl7.org\">hl7.org</a> server won't serve unknown mime type files . <span class=\"user-mention\" data-user-id=\"193461\">@David Johnson</span> the file extension is .graphql, and the mime type for graphql is application/json.  The files aren't linked from anywhere, but exist at [resource].graphql (where resource is lower case). It does work on <a href=\"http://build.fhir.org\">build.fhir.org</a>: <a href=\"http://build.fhir.org/patient.graphql\">http://build.fhir.org/patient.graphql</a></p>",
        "id": 197504564,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589429522
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  That's very helpful indeed.</p>\n<p>My biggest reason to even consider GraphQL is to be able to do relational queries so I can pull some data for machine learning models. At a high level apart from REST approach what are some other query interfaces ?    GraphQL, CQL ..... ?</p>",
        "id": 197504773,
        "sender_full_name": "dsh",
        "timestamp": 1589429860
    },
    {
        "content": "<p>I am even considering using <a href=\"https://github.com/Asymmetrik/graphql-fhir\">https://github.com/Asymmetrik/graphql-fhir</a> to store a a copy the data from HAPI server so that it is easier to do run GraphQL queries .... but I understanding its like grasping at straws</p>",
        "id": 197504866,
        "sender_full_name": "dsh",
        "timestamp": 1589429966
    },
    {
        "content": "<p>well, there's a set of disparate choices that each work differently:</p>\n<ul>\n<li>the restful interface search </li>\n<li>the _filter parameter</li>\n<li>restful api + GraphDefinition</li>\n<li>graphQL</li>\n<li>cql </li>\n<li>bulk data + sql+ of your choice</li>\n</ul>",
        "id": 197504867,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589429968
    },
    {
        "content": "<p>you can mix'n'match between those</p>",
        "id": 197504880,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589429992
    },
    {
        "content": "<p>I've added the mimetype.  Is there a known link I can test?</p>",
        "id": 197547595,
        "sender_full_name": "David Johnson",
        "timestamp": 1589460790
    },
    {
        "content": "<p><a href=\"http://www.hl7.org/fhir/patient.graphql\">http://www.hl7.org/fhir/patient.graphql</a> seems to work (but I am just guessing it from the thread)</p>",
        "id": 197547886,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1589460924
    },
    {
        "content": "<p>Thank you!</p>",
        "id": 197547899,
        "sender_full_name": "David Johnson",
        "timestamp": 1589460937
    }
]