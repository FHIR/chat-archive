[
    {
        "content": "<p>Is it possible to accept \"in\" parameters that have \"parts\", within an annotated operation method in a HAPI resource provider?</p>\n<p>How would I annotate a method to implement an operation like this one?</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;resourceType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;OperationDefinition&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;parameter&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;someParameter&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;use&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;in&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;part&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;partA&quot;</span><span class=\"p\">,</span>\n          <span class=\"nt\">&quot;use&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;in&quot;</span><span class=\"p\">,</span>\n          <span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;string&quot;</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;partB&quot;</span><span class=\"p\">,</span>\n          <span class=\"nt\">&quot;use&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;in&quot;</span><span class=\"p\">,</span>\n          <span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;integer&quot;</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre></div>",
        "id": 161573389,
        "sender_full_name": "John Grimes",
        "timestamp": 1553426753
    },
    {
        "content": "<p>I guess one way to do it would be:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nd\">@Operation</span><span class=\"o\">(</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s\">&quot;$someOperation&quot;</span><span class=\"o\">)</span>\n<span class=\"kd\">public</span> <span class=\"n\">Parameters</span> <span class=\"nf\">someOperation</span><span class=\"o\">(</span><span class=\"nd\">@ResourceParam</span> <span class=\"n\">Parameters</span> <span class=\"n\">inParams</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n  <span class=\"c1\">// Iterate through parameters and parameter parts</span>\n<span class=\"o\">}</span>\n</pre></div>\n\n\n<p><code>@OperationParam</code> does not seem to support this use case.</p>",
        "id": 161574271,
        "sender_full_name": "John Grimes",
        "timestamp": 1553427976
    }
]