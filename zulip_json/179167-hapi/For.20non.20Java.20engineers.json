[
    {
        "content": "<p>for someone not much familiar with Java universe and used to simple install instruction it seems getting the <a href=\"https://hapifhir.io/\" target=\"_blank\" title=\"https://hapifhir.io/\">HAPI FHIR server</a> up and running is pretty difficult</p>\n<p>I tried <code>mvn install</code> and <code>mvn jetty:run</code> for <code>hapi-fhir-jpaserver-example</code> and I get these errors</p>\n<p><code>javax.servlet.ServletException: fhirServlet@7cc91a5a==ca.uhn.fhir.jpa.demo.JpaServerDemo,jsp=null,order=1,inst=false,async=false</code><br>\n<code>Caused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'ca.uhn.fhir.jpa.provider.dstu3.TerminologyUploaderProviderDstu3' available</code></p>\n<p>when I access the server on <code>localhost:8080</code> i get this message</p>\n<p><code>No context on this server matched or handled this request.\nContexts known to this server are: </code></p>",
        "id": 181607056,
        "sender_full_name": "dsh",
        "timestamp": 1574393019
    },
    {
        "content": "<p>I understand HAPI is useful for exposing your existing data as FHIR Resources but is it also a good candidate for our use case (basically a green field project) where clinical data received in HL7v2 transformed to FHIR (using Mirth FHIRConnector) and then transformed/stored in our business specific models. We are thinking of storing a copy of the original FHIR resource in HAPI server for a possible future analysis .</p>\n<p>If this is a good idea. Could some one please let me know which module of HAPI FHIR server do I need to get started with. As its all too overwhelming &amp; frankly confusing.</p>",
        "id": 181607165,
        "sender_full_name": "dsh",
        "timestamp": 1574393173
    },
    {
        "content": "<p>it sounds like the cli version would be a good start, and that requires no Java knowledge</p>",
        "id": 181611579,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574401128
    },
    {
        "content": "<p>I believe you are in the right area. Are you using this github project? <a href=\"https://github.com/hapifhir/hapi-fhir-jpaserver-starter\" target=\"_blank\" title=\"https://github.com/hapifhir/hapi-fhir-jpaserver-starter\">https://github.com/hapifhir/hapi-fhir-jpaserver-starter</a><br>\nThe links from the HAPI page take you to an unsupported version.</p>",
        "id": 181614491,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1574405926
    },
    {
        "content": "<p>Oh man I need to update that... Website relaunch coming very soon.....</p>",
        "id": 181627971,
        "sender_full_name": "James Agnew",
        "timestamp": 1574420712
    },
    {
        "content": "<p>this calls for docker ... ;)</p>",
        "id": 181664727,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1574447386
    },
    {
        "content": "<blockquote>\n<p>this calls for docker ... ;)</p>\n</blockquote>\n<p>Actually I was able to get <code>hapi-fhir-jpaserver-starter</code> running on docker on postgresql. Being a non-java guy what I don't know is </p>\n<ol>\n<li>how to secure this server </li>\n<li>and more importantly is it now ready for production use as an API backend. </li>\n<li>how to change the root path which is current set to i.e. how to change from this <code>http://localhost:8080/hapi-fhir-jpaserver/</code> to <code>http://localhost:8080/hapi</code> or <code>http://localhost:8080/</code></li>\n</ol>",
        "id": 181666463,
        "sender_full_name": "dsh",
        "timestamp": 1574448566
    },
    {
        "content": "<p>For securing this server, I can certainly put it behind AWS API gateway in a private subnet</p>",
        "id": 181666597,
        "sender_full_name": "dsh",
        "timestamp": 1574448658
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  If I have managed to run <code>hapi-fhir-jpaserver-starter</code> in docker setup can the same setup be used for production (obviously with some basic security) ?? <strong>Context</strong>: our is  green field project i.e. we don't have any data yet, but want to store any data we receive in FHIR server for future analysis.</p>",
        "id": 181699868,
        "sender_full_name": "dsh",
        "timestamp": 1574484680
    },
    {
        "content": "<p>Lots of people are using HAPI FHIR JPA in production solutions successfully, so it's definitely suitable for that task.</p>\n<p>Naturally though, the starter project doesn't have any security at all turned on. You will certainly want to add a security layer suitable for your application. HAPI FHIR's AuthorizationInterceptor may be helpful for this task</p>",
        "id": 181709510,
        "sender_full_name": "James Agnew",
        "timestamp": 1574503616
    },
    {
        "content": "<blockquote>\n<p>Lots of people are using HAPI FHIR JPA in production solutions successfully, so it's definitely suitable for that task.</p>\n</blockquote>\n<p>Yes I understand and I am thankful to the contributors. I am seeking is guidance here as I don't know if <code>hapi-fhir-jpaserver-starter</code> with added security ofcourse <strong>is that considered production ready</strong> from the point of view storing/querying clinical data via API??</p>\n<p>Are there any open source modules/tools that I can add on top of <code>hapi-fhir-jpaserver-starter</code> to achieve the Authn/Authz</p>",
        "id": 181742174,
        "sender_full_name": "dsh",
        "timestamp": 1574564891
    },
    {
        "content": "<p>Yes, if your question is whether you should be using <code>hapi-fhir-jpaserver-starter</code>, that is indeed the recommended way of using the JPA server.</p>\n<p>In terms of how to add security, there are all kinds of answers to this and it will depend on what you are trying to achieve. You could use HAPI's AuthorizationInterceptor and hand-roll an authentication layer with it, you could leverage container security if you're deploying to a container, you could put an API Gateway such as Kong or Apigee or even Nginx in front of the server, etc.</p>",
        "id": 181751916,
        "sender_full_name": "James Agnew",
        "timestamp": 1574585662
    },
    {
        "content": "<p>Changing contextPath of <code>hapi-fhir-jpaserver-starter</code> in pom.xml from <code>&lt;contextPath&gt;/hapi-fhir-jpaserver&lt;/contextPath&gt;</code> to <code>&lt;contextPath&gt;/&lt;/contextPath&gt;</code> causes Tomcat admin page to be rendered</p>\n<p>Could someone please let me know how I can run <code>hapi-fhir-jpaserver-starter</code> on root context?</p>",
        "id": 184432359,
        "sender_full_name": "dsh",
        "timestamp": 1577645815
    },
    {
        "content": "<p>How important is <code>serverId</code> e.g. <code>serverId=home_r4</code> in the URL ? What's the purpose for it? Is <code>serverId</code> persisted in database or is it persisted in some directory on Jetty/Tomcat server?</p>\n<p>I am running HAPI JPA on Docker in Fargate and I have NOT configured serverId and it default to <code>serverId=home</code>. My question is if my container dies and is recreated will I get a new <code>serverId</code> (<em>Fargate</em> does not have persistent volumes for docker) and does it mean <em>data loss</em> ??</p>",
        "id": 184858021,
        "sender_full_name": "dsh",
        "timestamp": 1578246893
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ^ <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> ^</p>",
        "id": 184858045,
        "sender_full_name": "dsh",
        "timestamp": 1578246943
    },
    {
        "content": "<p>Are you referring to the serverId in the testpage overlay? If so, it's just a static identifier.. the testpage overlay has no database component, it just talks to a server via the standard rest interface, so there is an identifier in the configuration file in case you have multiple servers.</p>",
        "id": 184858498,
        "sender_full_name": "James Agnew",
        "timestamp": 1578247581
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> I am referring to <code>serverId</code> in the URL <a href=\"http://hapi.fhir.org/resource?serverId=home_r4&amp;pretty=true&amp;resource=Composition\" target=\"_blank\" title=\"http://hapi.fhir.org/resource?serverId=home_r4&amp;pretty=true&amp;resource=Composition\">http://hapi.fhir.org/resource?serverId=home_r4&amp;pretty=true&amp;resource=Composition</a></p>",
        "id": 184860007,
        "sender_full_name": "dsh",
        "timestamp": 1578250346
    },
    {
        "content": "<blockquote>\n<p>Changing contextPath of <code>hapi-fhir-jpaserver-starter</code> in pom.xml from <code>&lt;contextPath&gt;/hapi-fhir-jpaserver&lt;/contextPath&gt;</code> to <code>&lt;contextPath&gt;/&lt;/contextPath&gt;</code> causes Tomcat admin page to be rendered</p>\n<p>Could someone please let me know how I can run <code>hapi-fhir-jpaserver-starter</code> on root context?</p>\n</blockquote>\n<p>Also any help on this front will be highly appreciated</p>",
        "id": 184860021,
        "sender_full_name": "dsh",
        "timestamp": 1578250394
    },
    {
        "content": "<p>That serverId is only for the web UI, it has nothing to do with what context the server runs on.</p>\n<p>I don't use Tomcat much, but this page seems to have pretty good instructions on how to deploy something to the root context: <a href=\"https://stackoverflow.com/questions/5328518/deploying-my-application-at-the-root-in-tomcat\" target=\"_blank\" title=\"https://stackoverflow.com/questions/5328518/deploying-my-application-at-the-root-in-tomcat\">https://stackoverflow.com/questions/5328518/deploying-my-application-at-the-root-in-tomcat</a></p>",
        "id": 184860425,
        "sender_full_name": "James Agnew",
        "timestamp": 1578251046
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>Changing contextPath of <code>hapi-fhir-jpaserver-starter</code> in pom.xml from <code>&lt;contextPath&gt;/hapi-fhir-jpaserver&lt;/contextPath&gt;</code> to <code>&lt;contextPath&gt;/&lt;/contextPath&gt;</code> causes Tomcat admin page to be rendered</p>\n<p>Could someone please let me know how I can run <code>hapi-fhir-jpaserver-starter</code> on root context?</p>\n</blockquote>\n<p>Also any help on this front will be highly appreciated</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ^ any help on this please.</p>",
        "id": 185005832,
        "sender_full_name": "dsh",
        "timestamp": 1578400307
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191783\">@Daya Sharma</span> did you try the steps outlined on the page I linked to? You are talking about docker and fargate and tomcat and basically ignoring the replies I am giving you. I mean no offense here, but you are not going to get help this way.</p>",
        "id": 185047040,
        "sender_full_name": "James Agnew",
        "timestamp": 1578426481
    },
    {
        "content": "<p>take the war, rename it to ROOT.war, deploy, done.</p>",
        "id": 185047208,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1578426551
    }
]