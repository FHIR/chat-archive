[
    {
        "content": "<p>Hi,<br>\nI would like to make some experiments like in the Yosemite Project by parsing FHIR profiles and transform them into graph structures.<br>\nTo achieve that, I am looking for a method to take a FHIR profile definition String (e.g. the XML resource content from <a href=\"http://www.hl7.org/fhir/observation.html#tabs-xml\" target=\"_blank\" title=\"http://www.hl7.org/fhir/observation.html#tabs-xml\">http://www.hl7.org/fhir/observation.html#tabs-xml</a>) and parse it to receive  a Java runtime object.<br>\nI hoped that in the HAPI Java structure package (hapi-fhir-structures-dstu3-3.6.0.jar) I could find a parser that I could use to accomplish this task.<br>\nHowever in some threads in the last two years there have been discussions that HAPI is not capable of handling custom profile definitions because it rather uses concrete classes for each profile.<br>\nIs this true, so it is of no use to search the HAPI code base for a component that I could use ? If this were true, is there an alternative that could be used to parse custom profiles ?<br>\nGreetings<br>\nGeorg</p>",
        "id": 154018842,
        "sender_full_name": "Georg Fette",
        "timestamp": 1542289986
    },
    {
        "content": "<p>If you have a XML representation of a FHIR resource you can parse it using HAPI with no extra effort like this:</p>\n<div class=\"codehilite\"><pre><span></span> <span class=\"n\">FhirContext</span> <span class=\"n\">ctx</span> <span class=\"o\">=</span> <span class=\"n\">FhirContext</span><span class=\"o\">.</span><span class=\"na\">forDstu3</span><span class=\"o\">();</span>\n<span class=\"n\">Observation</span> <span class=\"n\">obs</span> <span class=\"o\">=</span> <span class=\"o\">(</span><span class=\"n\">Observation</span><span class=\"o\">)</span> <span class=\"n\">ctx</span><span class=\"o\">.</span><span class=\"na\">newXmlParser</span><span class=\"o\">().</span><span class=\"na\">parseResource</span><span class=\"o\">(</span><span class=\"n\">resourceString</span><span class=\"o\">);</span>\n</pre></div>\n\n\n<p>The profile this instance is claiming to be compliant to doesn't matter as every profiled resource is still a resource, in your example still an observation.<br>\n<span class=\"user-mention\" data-user-id=\"196537\">@Georg Fette</span></p>",
        "id": 154019104,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1542360781
    },
    {
        "content": "<p>Ah, thank you. That worked well. I now managed to store the StructureDefinitions of a set of handcrafted profiles in a HAPI server.<br>\nWould it now also be possible to store instances/resources of these custom profiles in the same HAPI server ?</p>",
        "id": 154020420,
        "sender_full_name": "Georg Fette",
        "timestamp": 1542881828
    },
    {
        "content": "<p>sure. Profiles are always based on the base resources. <a href=\"http://fhir.de/StructureDefinition/patient-de-basis-0.2\" target=\"_blank\" title=\"http://fhir.de/StructureDefinition/patient-de-basis-0.2\">http://fhir.de/StructureDefinition/patient-de-basis-0.2</a> for example is based on patient. You can store the profile as a StructureDefinition on a HAPI Server.<br>\nPatient instances claiming their compliance to a profile through the meta tag, stating \"i am conforming to profile XY\".</p>",
        "id": 154020425,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1542883814
    },
    {
        "content": "<p>If you want to have an instance of patient-de-basis, then you create a patient conforming to the profile, include the profile(s) url(s) in meta and of course you then can persist it to a FHIR Server like HAPI.</p>",
        "id": 154020426,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1542883965
    },
    {
        "content": "<p>To check if the instance is conform to the profile you then can use the $validate operation on the instance.</p>",
        "id": 154020427,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1542883994
    }
]