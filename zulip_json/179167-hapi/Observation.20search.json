[
    {
        "content": "<p>Is it possible to search for an <code>Observation</code> based on the interpretation code?<br>\nThe Observation doc page doesn't list this attribute, so my understanding is it's not possible. Is there an alternative way?</p>",
        "id": 242858669,
        "sender_full_name": "Dexter",
        "timestamp": 1623837661
    },
    {
        "content": "<p>You can define your own search parameters</p>",
        "id": 242860548,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623838914
    },
    {
        "content": "<p>I tried creating a search parameter for a different usecase previously, and it didn't work well. I'll give that a go again, thanks!<br>\nUsing the default docker container should work, correct?</p>",
        "id": 242860732,
        "sender_full_name": "Dexter",
        "timestamp": 1623839003
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179167-hapi/topic/Observation.20search/near/242860548\">said</a>:</p>\n<blockquote>\n<p>You can define your own search parameters</p>\n</blockquote>\n<p>I have this JSON Path for finding all observations with a given interpretation code. </p>\n<div class=\"codehilite\"><pre><span></span><code>$.resource..interpretation[:].coding[:].code\n</code></pre></div>\n<p>Would something like this be correct for the top-level interpretation?  <br>\n<code>Observation.Interpretation.Where(Code = \"HIGH\")</code></p>",
        "id": 243148048,
        "sender_full_name": "Dexter",
        "timestamp": 1624016107
    },
    {
        "content": "<p>correct where?</p>",
        "id": 243155955,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1624020869
    },
    {
        "content": "<p>For an Observation, on the 'expression' part of the SearchParameter JSON POST body?</p>",
        "id": 243156211,
        "sender_full_name": "Dexter",
        "timestamp": 1624020972
    },
    {
        "content": "<p>SearchParameter.expression is FHIRPath, which is case sensitive, so it would be</p>",
        "id": 243156617,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1624021162
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>Observation.interpretation.where(code.coding.where(code in &quot;H&quot; | &quot;HU&quot; | &quot;HH).exists())\n</code></pre></div>\n<p>and maybe HX?</p>",
        "id": 243157129,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1624021386
    },
    {
        "content": "<p>I assume this doesn't work when there's interpretations inside components? Then I'd need some form of Union, correct?</p>",
        "id": 243157265,
        "sender_full_name": "Dexter",
        "timestamp": 1624021449
    },
    {
        "content": "<p>If you don't mind me asking,  in <code>code in \"H\" | \"HU\" | \"HH</code>, why the H | HU | HH?</p>",
        "id": 243157344,
        "sender_full_name": "Dexter",
        "timestamp": 1624021494
    },
    {
        "content": "<p>yes you'd need a union</p>",
        "id": 243161689,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1624023507
    },
    {
        "content": "<p>did you look at the possible codes for interpretation?</p>",
        "id": 243161708,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1624023517
    },
    {
        "content": "<p>We're using High, normal, low for now. My bad forgot there were more. Thanks!</p>",
        "id": 243161787,
        "sender_full_name": "Dexter",
        "timestamp": 1624023552
    },
    {
        "content": "<p>So if I'm using a union, it'd be something like this? </p>\n<div class=\"codehilite\"><pre><span></span><code>Observation.interpretation.where(code.coding.where(code in &quot;H&quot; | &quot;HU&quot; | &quot;HH).exists()).union(\n    Observation.components.where(interpretation.where(\n        code.coding.where(code in &quot;H&quot; | &quot;HU&quot; | &quot;HH).exists())\n    )\n)\n</code></pre></div>",
        "id": 243162081,
        "sender_full_name": "Dexter",
        "timestamp": 1624023674
    },
    {
        "content": "<p>feels about right</p>",
        "id": 243211710,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1624053205
    },
    {
        "content": "<p>Thanks! I'll give that a go!</p>",
        "id": 243338361,
        "sender_full_name": "Dexter",
        "timestamp": 1624249657
    }
]