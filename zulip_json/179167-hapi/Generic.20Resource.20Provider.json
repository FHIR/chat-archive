[
    {
        "content": "<p>Hello all,</p>\n<p>We are currently implementing the HAPI FHIR server framework against our own storage.<br>\nIs it possible in the HAPI framework to create a generic resource provider that takes any type of resource in input and persist it in our storage (we basically post the resource JSON on an API)? <br>\nIt seems that even with the Plain Provider, you need to specify for which type of Resource the operation applies (or it is inferred from the type of the method parameter).</p>\n<p>Thanks!</p>",
        "id": 169350593,
        "sender_full_name": "Matthieu Vegreville",
        "timestamp": 1561921295
    },
    {
        "content": "<p>Unfortunately it's not currently possible to create a single resource provider instance that handles multiple types.</p>\n<p>You can get close though by having a single class that you instantiate once per resource type you want to support. It's not completely optimal but it does work well. You can see an example of this in HashMapResourceProvider: <a href=\"https://github.com/jamesagnew/hapi-fhir/blob/master/hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/provider/HashMapResourceProvider.java\" target=\"_blank\" title=\"https://github.com/jamesagnew/hapi-fhir/blob/master/hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/provider/HashMapResourceProvider.java\">https://github.com/jamesagnew/hapi-fhir/blob/master/hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/provider/HashMapResourceProvider.java</a></p>",
        "id": 169356410,
        "sender_full_name": "James Agnew",
        "timestamp": 1561933252
    },
    {
        "content": "<p>Thank you James, will look into this!</p>",
        "id": 169388908,
        "sender_full_name": "Matthieu Vegreville",
        "timestamp": 1561982483
    }
]