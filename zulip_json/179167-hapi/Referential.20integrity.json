[
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> I'm giving a talk about referential integrity on FHIR APIs at DevDays today.(/tomorrow)</p>\n<p>I've got a question for you. HAPI has an interceptor that allows you to manage for some referential integrity constraints to be broken, but I was surprised that to my way of thinking, it only covers half the problem. You can say that you allow for resources to be deleted if <a href=\"https://hapifhir.io/hapi-fhir/docs/interceptors/built_in_server_interceptors.html#overridepathbasedreferentialintegrityfordeletesinterceptor\">some paths would be broken</a>, but you can't say, 'this path X, I'm OK for whatever it points to be broken, but not other paths'. </p>\n<p>Have I missed something?</p>",
        "id": 241724894,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623036805
    },
    {
        "content": "<p>Has versioning been covered in there too?</p>",
        "id": 241726367,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1623038786
    },
    {
        "content": "<p>not my subject, so I'm not sure.</p>",
        "id": 241728937,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623041436
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  I'm not sure Im actually getting the meat of your question, but:</p>\n<p>We do also support all or nothing. I.e. you can turn on referential integrity so that all reference paths are enforced and you can't delete a resource unless nothing is pointing at it. This is the default behaviour. You can also globally turn it off so that you'll never be blocked from deleting resources because something points at the thing you're deleting. There is also a similar setting for creates, where you can configure the server to not prevent you from creating a resource if it has a reference to a target that doesn't actually exist (but this isn't the default either).</p>\n<p>The interceptor was added based on a customer request, and the logic made sense to me - There are a few places where references don't actually need to indicate live links, they just need to indicate what the live link was at the time the resource was created. <a href=\"http://AuditEvent.target\">AuditEvent.target</a> would be an example of that. So when you use the interceptor you could let a Patient be deleted if only an AuditEvent points at it, but you'd still be blocked if an Observation also does.</p>",
        "id": 241751039,
        "sender_full_name": "James Agnew",
        "timestamp": 1623058748
    },
    {
        "content": "<p>I totally get what it does. it's what it doesn't do. I'd like to have an interceptor that let me say, require that Observation.subject is valid when a new Observation is posted, but decide that I don't care if DiagnosticReport.baseOn refers to a resource that I'll never get</p>",
        "id": 241751881,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623059217
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span></p>",
        "id": 241758639,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623063529
    },
    {
        "content": "<p>Oh I see.. So you're looking for the equivalent of the selective enforcement, but for resource creates as opposed to resource deletes.</p>\n<p>That isn't supported, but would be easy enough to add for sure.</p>",
        "id": 241783727,
        "sender_full_name": "James Agnew",
        "timestamp": 1623075781
    },
    {
        "content": "<p>ok thanks</p>",
        "id": 241785435,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623076452
    },
    {
        "content": "<p>Eg. black/whitelist of ignored fields expressed in fhirpath?</p>",
        "id": 241789400,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1623077956
    },
    {
        "content": "<p>something like that</p>",
        "id": 241790988,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623078519
    }
]