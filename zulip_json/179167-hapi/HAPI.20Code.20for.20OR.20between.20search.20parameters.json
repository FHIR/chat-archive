[
    {
        "content": "<p><a class=\"stream\" data-stream-id=\"179167\" href=\"/#narrow/stream/179167-hapi\">#hapi</a> </p>\n<p>We are presently using  HAPI FHIR 5.0 (Labrador) release for our Implementation.</p>\n<p>Presently I have HAPI code for below AND Query which is working fine.<br>\n<a href=\"http://127.0.0.1:8080/hapi-fhir-jpaserver/fhir/Organization?name=SIMPLY&amp;address=SIMPLY\">http://127.0.0.1:8080/hapi-fhir-jpaserver/fhir/Organization?name=SIMPLY&amp;address=SIMPLY</a><br>\nBundle bundle = client.search().forResource(Organization.class).where(Organization.ADDRESS.contains().value(\"SIMPLY\")).where(Organization.NAME.contains().value(\"SIMPLY\")).returnBundle(Bundle.class).execute();</p>\n<p>Can anyone help us with the OR Query code between the search parameters ?<br>\n<a href=\"http://127.0.0.1:8080/hapi-fhir-jpaserver/fhir/Organization?name=SIMPLY,address=SIMPLY\">http://127.0.0.1:8080/hapi-fhir-jpaserver/fhir/Organization?name=SIMPLY,address=SIMPLY</a></p>",
        "id": 205667896,
        "sender_full_name": "Virendra Shinde",
        "timestamp": 1596263177
    },
    {
        "content": "<p>That would be your own custom syntax, this is not a syntax allowed by FHIR. You can't OR between parameters (using this URL based syntax). You'll have to define a custom operation or named _query.</p>",
        "id": 205682707,
        "sender_full_name": "René Spronk",
        "timestamp": 1596290408
    },
    {
        "content": "<p>You can use filter</p>",
        "id": 205682745,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1596290511
    },
    {
        "content": "<p><a href=\"https://www.hl7.org/fhir/search_filter.html\">https://www.hl7.org/fhir/search_filter.html</a></p>",
        "id": 205682906,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1596290669
    },
    {
        "content": "<p>True - my point was that the URL based syntax doesn't support OR in the way which was suggested. filter is not supported by all FHIR servers, but apparently it is supported by HAPI (I've never played with the filter syntax myself).</p>",
        "id": 205683115,
        "sender_full_name": "René Spronk",
        "timestamp": 1596290983
    },
    {
        "content": "<p>(for the record we use it heavily as part of search narrowing and security)</p>",
        "id": 205683201,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1596291118
    },
    {
        "content": "<p>Or <a href=\"https://www.hl7.org/fhir/graphql.html\">graphQL</a></p>",
        "id": 205694950,
        "sender_full_name": "David Hay",
        "timestamp": 1596310157
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span>  Can you please share an example of HAPI code of using _filter ?</p>",
        "id": 205845135,
        "sender_full_name": "Virendra Shinde",
        "timestamp": 1596487368
    },
    {
        "content": "<p>For example the <a href=\"http://127.0.0.1:8080/hapi-fhir-jpaserver/fhir/Organization?_filter=name\">http://127.0.0.1:8080/hapi-fhir-jpaserver/fhir/Organization?_filter=name</a> co \"SIMPLY \" or address co \"SIMPLY\"</p>",
        "id": 205846776,
        "sender_full_name": "Virendra Shinde",
        "timestamp": 1596488334
    },
    {
        "content": "<p>take a look at eg. <a href=\"https://hapifhir.io/hapi-fhir/docs/client/generic_client.html#search-by-plain-url\">https://hapifhir.io/hapi-fhir/docs/client/generic_client.html#search-by-plain-url</a> if you want HAPI Client example code</p>",
        "id": 205849532,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1596490228
    }
]