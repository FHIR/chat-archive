[
    {
        "content": "<p>I am experiencing some strange behavior when calling extended operations in HAPI 2.4.</p>\n<p>The following works:</p>\n<div class=\"codehilite\"><pre><span></span>Parameters inParams = new Parameters();\n        inParams.addParameter().setName(&quot;patient&quot;).setValue(new StringType(&quot;Patient-12214&quot;));\n        inParams.addParameter().setName(&quot;startPeriod&quot;).setValue(new DateType(&quot;2001-01-01&quot;));\n        inParams.addParameter().setName(&quot;endPeriod&quot;).setValue(new DateType(&quot;2015-03-01&quot;));\n\n        Parameters outParams = ourClient\n                .operation()\n                .onInstance(new IdDt(&quot;Measure&quot;, &quot;col&quot;))\n                .named(&quot;$evaluate&quot;)\n                .withParameters(inParams)\n                .useHttpGet()\n                .execute();\n</pre></div>\n\n\n<p>But this does not:</p>\n<div class=\"codehilite\"><pre><span></span>Parameters inParams = new Parameters();\n        inParams.addParameter().setName(&quot;patient&quot;).setValue(new StringType(&quot;Patient-12214&quot;));\n\n        Parameters outParams = ourClient\n                .operation()\n                .onInstance(new IdDt(&quot;PlanDefinition&quot;, &quot;apply-example&quot;))\n                .named(&quot;$apply&quot;)\n                .withParameters(inParams)\n                .useHttpGet()\n                .execute();\n</pre></div>\n\n\n<p>I get the following error:</p>\n<div class=\"codehilite\"><pre><span></span>ca.uhn.fhir.rest.server.exceptions.InvalidRequestException: HTTP 400 Bad Request: No Content-Type header was provided in the request. This is required for &quot;EXTENDED_OPERATION_INSTANCE&quot; operation\n\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\n    at ca.uhn.fhir.rest.server.exceptions.BaseServerResponseException.newInstance(BaseServerResponseException.java:306)\n    at ca.uhn.fhir.rest.client.BaseClient.invokeClient(BaseClient.java:290)\n    at ca.uhn.fhir.rest.client.GenericClient$BaseClientExecutable.invoke(GenericClient.java:741)\n    at ca.uhn.fhir.rest.client.GenericClient$OperationInternal.execute(GenericClient.java:1630)\n    at org.opencds.cqf.RulerTestBase.PlanDefinitionApplyTest(RulerTestBase.java:206)\n</pre></div>\n\n\n<p>So, I tried using Postman with the following request with the Content-Type set to application/json:<br>\n<code>http://localhost:8080/cqf-ruler/baseDstu3/PlanDefinition/apply-example/$apply?patient=Patient-12214</code></p>\n<p>That request generates the following error:</p>\n<div class=\"codehilite\"><pre><span></span>&quot;issue&quot;: [\n        {\n            &quot;severity&quot;: &quot;error&quot;,\n            &quot;code&quot;: &quot;processing&quot;,\n            &quot;diagnostics&quot;: &quot;Failed to parse request body as JSON resource. Error was: Failed to parse JSON content, error was: Did not find any content to parse&quot;\n        }\n    ]\n</pre></div>\n\n\n<p>Am I doing something wrong or is this a known issue?</p>",
        "id": 153908961,
        "sender_full_name": "Christopher Schuler",
        "timestamp": 1505787480
    },
    {
        "content": "<p>Using Postman, you could try sending a <code>POST</code> request to <code>http://localhost:8080/cqf-ruler/baseDstu3/PlanDefinition/$apply</code> with a body something like the following.</p>\n<div class=\"codehilite\"><pre><span></span>{\n    &quot;resourceType&quot; : &quot;Parameters&quot;,\n    &quot;parameter&quot; : [\n        {\n            &quot;name&quot; : &quot;patient&quot;,\n            &quot;valueReference&quot; : {\n                &quot;identifier&quot;: {\n                    &quot;system&quot;: &quot;http://my-patient-id-system&quot;,\n                    &quot;value&quot;: &quot;Patient-12214&quot;\n                }\n            }\n        },\n        {\n            &quot;name&quot; : &quot;encounter&quot;,\n            &quot;valueReference&quot; : {\n                &quot;refererence&quot;: &quot;/Encounter/123&quot;\n            }\n        },\n        {\n            &quot;name&quot; : &quot;practitioner&quot;,\n            &quot;valueReference&quot; : {\n                &quot;refererence&quot;: &quot;/Practitioner/456&quot;\n            }\n        },\n        {\n            &quot;name&quot; : &quot;organization&quot;,\n            &quot;valueReference&quot; : {\n                &quot;refererence&quot;: &quot;/Organization/789&quot;\n            }\n        }\n    ]\n}\n</pre></div>\n\n\n<p>Not sure if that helps, but it should at least cause the server to return a different error message.</p>",
        "id": 153909003,
        "sender_full_name": "Joel Schneider",
        "timestamp": 1505832048
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191926\">@Joel Schneider</span>, that helped. I broke up the Parameter resource param into separate optional params and all is well. Makes sense that the request would need to be a POST with a resource param.</p>",
        "id": 153909107,
        "sender_full_name": "Christopher Schuler",
        "timestamp": 1505847957
    }
]