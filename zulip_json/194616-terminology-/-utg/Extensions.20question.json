[
    {
        "content": "<p>I'm just chatting to Ted and Jessica about the extensions defined in UTG. What we said was that we would define UTG extensions in a UTG meta IG. So we would have 2 IGs - UTG itself, and an IG that describes UTG</p>",
        "id": 164211110,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556227437
    },
    {
        "content": "<p>I</p>",
        "id": 164211112,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556227439
    },
    {
        "content": "<p>I</p>",
        "id": 164211115,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556227441
    },
    {
        "content": "<p>I'm going to build the guts of both today (or very soon). But I see that we (?) made all the extension URLs <a href=\"http://hl7.org/fhir/StructureDefinition/xxx\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/xxx\">http://hl7.org/fhir/StructureDefinition/xxx</a> - in other words they are defined in the main spec.</p>",
        "id": 164211213,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556227503
    },
    {
        "content": "<p>so the question is - should we change the extensions to a UTG extension space? or not do a UTG meta IG. <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> ?</p>",
        "id": 164213754,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556229386
    },
    {
        "content": "<p>We should change them - We can just do a search and replace.</p>",
        "id": 164219813,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556235420
    },
    {
        "content": "<p>do we have a version policy for UTG? an agreed current version?</p>",
        "id": 164222568,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556238824
    },
    {
        "content": "<p>Not sure what you mean</p>",
        "id": 164226067,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556243718
    },
    {
        "content": "<p>what is the current version of UTG/</p>",
        "id": 164229074,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556248108
    },
    {
        "content": "<p>when does the major version increment?</p>",
        "id": 164229077,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556248112
    },
    {
        "content": "<p>do all the publised resources have that common version?</p>",
        "id": 164229144,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556248242
    },
    {
        "content": "<p>For UTG terminology, I don't think the notion of major/minor version applies.  It'd essentially be a timestamp-based versioning or a single incrementing number</p>",
        "id": 164229166,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556248319
    },
    {
        "content": "<p>We might continue on the version numbering from the v3 repository</p>",
        "id": 164229212,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556248355
    },
    {
        "content": "<p>what's that version number?</p>",
        "id": 164229220,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556248383
    },
    {
        "content": "<p>Most recent is 1436-20190320</p>",
        "id": 164229403,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556248740
    },
    {
        "content": "<p>well, we need semver...</p>",
        "id": 164229416,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556248755
    },
    {
        "content": "<p>We're not going to follow semver</p>",
        "id": 164229420,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556248776
    },
    {
        "content": "<p>The most important part is the date</p>",
        "id": 164229424,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556248790
    },
    {
        "content": "<p>err, yes, we are</p>",
        "id": 164229425,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556248791
    },
    {
        "content": "<p>Not for terminology</p>",
        "id": 164229428,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556248799
    },
    {
        "content": "<p>No such thing as major vs. minor change</p>",
        "id": 164229472,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556248806
    },
    {
        "content": "<p>we are for the UTG package</p>",
        "id": 164229473,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556248810
    },
    {
        "content": "<p>The tooling IG yes, but not the vocab IG</p>",
        "id": 164229476,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556248832
    },
    {
        "content": "<p>yes the vocab IG - we have to, because of NPM</p>",
        "id": 164229481,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556248857
    },
    {
        "content": "<p>Might drop and add whole new code systems or might change a comma.  Still a new version</p>",
        "id": 164229482,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556248859
    },
    {
        "content": "<p>And we won't differentiate</p>",
        "id": 164229492,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556248867
    },
    {
        "content": "<p>Because we don't care</p>",
        "id": 164229493,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556248874
    },
    {
        "content": "<p>we'll still be using semvar. But as we talk about, I'm sure we already discussed this. <span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> ?</p>",
        "id": 164229552,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556248944
    },
    {
        "content": "<p>Just make the major version the date and set the others to zeros</p>",
        "id": 164229553,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556248945
    },
    {
        "content": "<p>hmm a problem: ValueSet-v3-RespiratoryAndOrRehabilitativeAndOrRestorativeSpecialistOrTechnologistHIPAA</p>",
        "id": 164232524,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556253884
    },
    {
        "content": "<p>that's a very illegal resource id -- too long</p>",
        "id": 164232527,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556253892
    },
    {
        "content": "<p>We discussed semver quite a while ago (3 WGMs?)..   I am in support of it, but Lloyd convinced me that the juice was not worth the squeeze.   For the overall UTG terminology, following the naming pattern of V3 (e.g 1436-T120190320) I think carries forward a lot of useless baggage; the part to the right of the hyphen refers to the harmonization cycle (3 per year) and the date of the coremif generation.  The integer to the left of the hype is really the version number that changes every update using the v3 tools.  This having been said, v2 uses a completely different scheme, as does FHIR vocabulary.   I am in favor of the simplest possible versioning that reflects the unification of the terminology in UTG.</p>",
        "id": 164252770,
        "sender_full_name": "Ted Klein",
        "timestamp": 1556277949
    },
    {
        "content": "<p>The main issue with semantic versioning IMHO is that any change at all could be important to users and be potentially a 'breaking' change.   Any judgment we made on major vs. minor change is guaranteed to generate issues in the community IMHO.   The simplest versioning is just an incrementing integer, however the date is pretty useful; I'm ok with a version reference table that has information on the dates a new version was done.    For vocabulary, each code system or vsd needs to be versioned when changed, and I have received a compelling argument that changes to concepts within a code system also need to be versioned (which we currently do not do).</p>",
        "id": 164252938,
        "sender_full_name": "Ted Klein",
        "timestamp": 1556278124
    },
    {
        "content": "<p>I though this was truncated let me check with Dave who stated it was fixed.</p>",
        "id": 164252973,
        "sender_full_name": "Ted Klein",
        "timestamp": 1556278162
    },
    {
        "content": "<p>ok, so we have to use semver. no choice....</p>",
        "id": 164253611,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556278820
    },
    {
        "content": "<p>so, major version increments when we change the UTG structure. minor version is date of release. patch is for patches to versions</p>",
        "id": 164253658,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556278879
    },
    {
        "content": "<p>makes total sense for the software and infrastructure.  For the content, I am not sure the best approach.   We have quite a few different kinds of objects in the content:   1.  UTG code system resources.  2.  UTG value set definition resources.  3.  UTG manifests (LIST resources).  4.  releases (published collections of a proper subset of the content)  5.  concepts within a code system.   6.  value sets expansion instances.     The last two we currently have no clue and discussions continue, but the first 4 we need to land on the versioning ASAP.</p>",
        "id": 164254297,
        "sender_full_name": "Ted Klein",
        "timestamp": 1556279443
    },
    {
        "content": "<p>the version number in v3 (like 1436-20190320) is a version applied to the entire release.  Inside v3 we do have some primitive version tracking in the database that I don't think is surfaced at this time in the MIF.    V2 does not individually version the tables before the tables project created versions for them, using incrementing integers.   It is my understanding that at the current time Trifolia has NO versioning numbering or version/change tracking on value sets maintained there.   So unifying the versioning mechanisms is part of the 'unified' in UTG, and is still a not-yet-completed design effort.</p>",
        "id": 164254477,
        "sender_full_name": "Ted Klein",
        "timestamp": 1556279601
    },
    {
        "content": "<p>I am ok with your notion to start with for now:  major number increment for structure/layout changes, minor number for approved content changes, patch number for technical patch fixes.    But some questions in my mine such as:  if we add extensions what kind of a change is that?   if we add or change how we will use or name the manifests, what kind of change is that?     etc.    Not clear to me in terms of what we are doing with UTG what would comprise a major vs. a minor number increment, and how this benefits the community.</p>",
        "id": 164254788,
        "sender_full_name": "Ted Klein",
        "timestamp": 1556279903
    },
    {
        "content": "<p>What sort of breaking change could happen to UTG structure?  The resources are normative...</p>",
        "id": 164263293,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556286809
    },
    {
        "content": "<p>If we want to say that major version is locked at 1, that's fine.  My only concern is that we're <em>not</em> going to bother with tracking breaking changes to value set or code system content as part of the package version because that would be a nightmare.</p>",
        "id": 164263386,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556286864
    },
    {
        "content": "<p>so I hear that we won't be imposing the UTG version on the individual code systems or value sets - they have their own version. And I have nothing to say about how those are maintained at this time.</p>",
        "id": 164294775,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556310000
    },
    {
        "content": "<p>as for changing structure - concept maps are not normative at this time.</p>",
        "id": 164294836,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556310015
    },
    {
        "content": "<p>but actually, what I was thinking about is restructuring the arrangements within UTG - if we changed the identifiers for v2/v3 code systems, for instance</p>",
        "id": 164294862,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556310060
    },
    {
        "content": "<p>btw this:</p>\n<blockquote>\n<p>a problem: ValueSet-v3-RespiratoryAndOrRehabilitativeAndOrRestorativeSpecialistOrTechnologistHIPAA</p>\n</blockquote>\n<p>I am stuck on this - it's fatal to me progressing, and we need to shorten it</p>",
        "id": 164294900,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556310110
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> this is really your issue. can I just change the id of this value set?</p>",
        "id": 164779923,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556875586
    },
    {
        "content": "<p>I'd already asked for it to be changed.  I thought it had been - but not in the URL.  I don't think it's actually referenced by anything, so it should just be a question of changing it in the source MIF that's used to create the XML files I process.</p>",
        "id": 164788095,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1556884857
    },
    {
        "content": "<p>ok I'm just going to change it then</p>",
        "id": 164805876,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1556899095
    },
    {
        "content": "<p>I thought we changed it in the latest Git image already...</p>",
        "id": 166388173,
        "sender_full_name": "Ted Klein",
        "timestamp": 1558637067
    }
]