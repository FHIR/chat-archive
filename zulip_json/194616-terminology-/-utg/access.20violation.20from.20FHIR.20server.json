[
    {
        "content": "<p>Getting quite a few of these errors on the build:</p>",
        "id": 192258602,
        "sender_full_name": "Ted Klein",
        "timestamp": 1585576558
    },
    {
        "content": "<p>getting quite a few of there errors on the build:</p>",
        "id": 192258674,
        "sender_full_name": "Ted Klein",
        "timestamp": 1585576575
    },
    {
        "content": "<p>v3-CalendarCycle    error   Error from server: Unable to find value set \"<a href=\"http://terminology.hl7.org/ValueSet/v3-CalendarCycleTwoLetter\" title=\"http://terminology.hl7.org/ValueSet/v3-CalendarCycleTwoLetter\">http://terminology.hl7.org/ValueSet/v3-CalendarCycleTwoLetter</a>\"</p>",
        "id": 192258724,
        "sender_full_name": "Ted Klein",
        "timestamp": 1585576597
    },
    {
        "content": "<p>But the value set is in the built IG at:  <a href=\"https://build.fhir.org/ig/HL7/UTG/ValueSet-v3-CalendarCycleTwoLetter.html\" title=\"https://build.fhir.org/ig/HL7/UTG/ValueSet-v3-CalendarCycleTwoLetter.html\">https://build.fhir.org/ig/HL7/UTG/ValueSet-v3-CalendarCycleTwoLetter.html</a></p>",
        "id": 192258877,
        "sender_full_name": "Ted Klein",
        "timestamp": 1585576663
    },
    {
        "content": "<p>it is unable to do an expansion based on: nclude these codes as defined in <a href=\"http://terminology.hl7.org/CodeSystem/v3-CalendarCycle\" title=\"http://terminology.hl7.org/CodeSystem/v3-CalendarCycle\">http://terminology.hl7.org/CodeSystem/v3-CalendarCycle</a>. followed by the list of included codes.   The code system is in the IG as well...this may be because we have not yet published the first UTG release so it cannot locate it, but it is able to locate the UTG code systems for other value sets.   In any case, it probably should not throw an access violation I should think.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> perhaps you can look at this if you get a chance?   Trying to work though the errors on the QA report of the UTG build before we do the initial release.</p>",
        "id": 192259314,
        "sender_full_name": "Ted Klein",
        "timestamp": 1585576838
    },
    {
        "content": "<p>ok investigating this, the first problem is versions</p>",
        "id": 192798358,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585918329
    },
    {
        "content": "<p>take, for example, the value set v3-OralInhalation</p>",
        "id": 192798426,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585918366
    },
    {
        "content": "<blockquote>\n<p>Error from server: Unable to locate code ORINHL</p>\n</blockquote>",
        "id": 192798433,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585918368
    },
    {
        "content": "<p>for this filter:</p>",
        "id": 192798442,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585918373
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://terminology.hl7.org/CodeSystem/v3-RouteOfAdministration&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;filter&gt;</span>\n        <span class=\"nt\">&lt;property</span> <span class=\"na\">value=</span><span class=\"s\">&quot;concept&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;op</span> <span class=\"na\">value=</span><span class=\"s\">&quot;is-a&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;value</span> <span class=\"na\">value=</span><span class=\"s\">&quot;ORINHL&quot;</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/filter&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n</pre></div>",
        "id": 192798471,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585918386
    },
    {
        "content": "<p>UTG is kind of special because it redefines a whole lot of code systems and value sets that are already in the base spec</p>",
        "id": 192798574,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585918425
    },
    {
        "content": "<p>The validator/internal terminology services load the base spec first, and then they load the UTG resources.</p>",
        "id": 192798686,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585918457
    },
    {
        "content": "<p>internally, the infrastructure is running full versioning, so loads them in parallel.</p>",
        "id": 192798726,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585918473
    },
    {
        "content": "<p>the version of the code system in the base spec is 2018-08-1 while the version in UTG is 2.0.0. So an unversioned code system reference will be interpreted as referring to the base specification version</p>",
        "id": 192798730,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585918474
    },
    {
        "content": "<p>I'm not sure how to think about this problem</p>",
        "id": 192798771,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585918490
    },
    {
        "content": "<p>choices:</p>\n<ul>\n<li>remove all the terminology in UTG from the base spec as a technical correction (only, I don't know how to)</li>\n<li>make a special rule in the infrastructure for the UTG resources. Only, anyone else handling them will have to </li>\n<li>hack the versions so that the UTG version is more recent than the base version (3.0.0)? Only, we don't really want everything to be &gt;3.0.0</li>\n</ul>",
        "id": 192799006,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585918591
    },
    {
        "content": "<p>I guess there's an underlying problem I had been kicking into the future that has become due: the base package and the UTG package depend on each other, and package depedencies can't be recursive</p>",
        "id": 192799107,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1585918639
    },
    {
        "content": "<p>Yes, some \"interesting\" issues to work through.  Not sure what will be the best approach.</p>",
        "id": 192799314,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1585918735
    },
    {
        "content": "<p>Yes I have been concerned about this for months but was hoping it would not raise its head prior to our first UTG release.  The most expedient solution, though ugly and may cause other issues down the road, is to choose a version # for all the UTG resources that evaluates to &gt;2019-12-31.   This would be a workaround, but I am not certain what further issues it might cause.  Certainly an explanation for the ve3rsiong must be written for the UTG home page.  Perhaps <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  or <span class=\"user-mention\" data-user-id=\"195036\">@Carol Macumber</span> might have some suggestions?</p>",
        "id": 192802406,
        "sender_full_name": "Ted Klein",
        "timestamp": 1585920114
    },
    {
        "content": "<p>Going forward, none of the UTG terminologies should exist in the FHIR source at all (because if it's there, people will inevitably try to update it there).  Which means that we're going to first load all of the structure definitions, extensions, etc. and they'll have references to value sets that don't exist in core.  You'll then need to suck in the full UTG IG - which will give you all of those value sets.  Only at that point can you check the references.</p>",
        "id": 192827800,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1585930523
    },
    {
        "content": "<p>Once we have stuff working for R5, we can think about how to make things work for R4.  Certainly the desire is to be able to point to 'current' terminology, so R4 (and earlier) SHOULD be using UTG too, which would mean yanking the terminology out of the R4 release as a technical correction.  Where we'll run into issues is with old releases that don't yet use the <a href=\"http://terminology.hl7.org\" title=\"http://terminology.hl7.org\">terminology.hl7.org</a> code system URLs.  For those, I think we'll have to stay \"as is\"</p>",
        "id": 192828122,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1585930660
    },
    {
        "content": "<p>This sounds like a pretty sensible approach, generally.</p>",
        "id": 192846486,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1585938791
    },
    {
        "content": "<p>Sensible != easy :(</p>",
        "id": 192852209,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1585941615
    },
    {
        "content": "<p>yes, not so easy.   Right now as long as the FHIR R4 source is pulled in on the Publish, the value sets in UTG can't find the correct code systems in UTG.   Until the material gets yanked from R4 I don't know enough about how the publisher resolves this to see how to make it work in the next month or two.  another potential approach, although I acknowledge it is aa dumb hack we will regret later, is to set the UTG versions to 2000.0.0, instead of 2.0.0 so the the publisher access these as the latest.   This could be done quickly - in the next day or two - but I am unsure what other ramifications might ensue</p>",
        "id": 192907106,
        "sender_full_name": "Ted Klein",
        "timestamp": 1586006145
    },
    {
        "content": "<p>The biggest challenge will be how to process the UTG IG when core needs to use UTG.  I suspect we'll have the same miserable situation where you need to use an old version of UTG in the publisher in order to build the new version of UTG - which is going to suck</p>",
        "id": 192910076,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1586010437
    },
    {
        "content": "<p>the biggest problem I have is the version. if core uses UTG, but UTG is using a particular version of core....</p>",
        "id": 192924718,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586030796
    },
    {
        "content": "<p>Yes the recursively will kill it.    How about the finesse it for now and set the version for all UTG stuff to 2020.0.0?</p>",
        "id": 192930159,
        "sender_full_name": "Ted Klein",
        "timestamp": 1586039419
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191982\">Ted Klein</span> <a href=\"#narrow/stream/194616-terminology-.2F.20utg/topic/access.20violation.20from.20FHIR.20server/near/192930159\" title=\"#narrow/stream/194616-terminology-.2F.20utg/topic/access.20violation.20from.20FHIR.20server/near/192930159\">said</a>:</p>\n<blockquote>\n<p>Yes the recursively will kill it.    How about the finesse it for now and set the version for all UTG stuff to 2020.0.0?</p>\n</blockquote>\n<p>Ugh, I don't love that hack. Basically tricking it to pick up that version as the latest?</p>",
        "id": 192930412,
        "sender_full_name": "Carol Macumber",
        "timestamp": 1586039809
    },
    {
        "content": "<p>yes that a was the thought.   But it has to be selective - only for the objects (code systems and value sets) with a canonical URI under <a href=\"http://terminology.hl7.org\" title=\"http://terminology.hl7.org\">http://terminology.hl7.org</a>.    But I am not sure if this notion will actually work as I am unfamiliar with the internal workings of the Publisher.</p>",
        "id": 192931069,
        "sender_full_name": "Ted Klein",
        "timestamp": 1586041005
    },
    {
        "content": "<p>Is there a way to carve out a stable API for the parts of Core that UTG uses, so that UTG can use the latest core, regardless of its own version?</p>",
        "id": 192931594,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1586041997
    },
    {
        "content": "<p>unfortunately not all the resources in UTG are normative:</p>\n<ul>\n<li>List</li>\n<li>NamingSystem</li>\n<li>ConceptMap</li>\n</ul>\n<p>Though I'm not sure we have any concept maps right now</p>",
        "id": 192953440,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586083739
    },
    {
        "content": "<p>No concept maps yet.  We are making heavy use of NamingSystem where each instance is a \"registry entry' of synonym code system identifiers in different HL7 standards family technologies, where we do not have the CodeSystem resource because the terminology is maintained and published outside of HL7.  I will be putting in a tracker with the suggestion that a different type for NamingSystem can be \"registryentry\" but that is not germane to the fact that UTG uses it.  We also use LIST for all of our manifests to control the rendering of code systems and value sets on the tabs, as well as a few other purposes.   At this time UTG does not have any import of the FHIR code systems that have canonical URLs beginning with something other than <a href=\"http://terminology.hl7.org/\" title=\"http://terminology.hl7.org/\">http://terminology.hl7.org/</a> but I think (need to check) there may be some normative ones that have been brought in.   We will use a LIST to identify those that cannot be modified through the UTG process, they must be done through the ballot process.</p>",
        "id": 192967357,
        "sender_full_name": "Ted Klein",
        "timestamp": 1586105008
    },
    {
        "content": "<p>there should be no normative ones</p>",
        "id": 192976807,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586118782
    },
    {
        "content": "<p>OK I will check.</p>",
        "id": 193060864,
        "sender_full_name": "Ted Klein",
        "timestamp": 1586187837
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> where the URL can't be the canonical URL: <a href=\"https://confluence.hl7.org/display/FHIR/Implementation+Guide+Parameters\" title=\"https://confluence.hl7.org/display/FHIR/Implementation+Guide+Parameters\">https://confluence.hl7.org/display/FHIR/Implementation+Guide+Parameters</a>, see <code>`special-url</code></p>",
        "id": 193256953,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586299216
    },
    {
        "content": "<p>that text error:</p>",
        "id": 193268714,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586310614
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>  &lt;/entry&gt;&quot;/&gt;\n</pre></div>\n\n\n<p>on line 301. I've enhanced the error to report location correctly (well, as close as it possible)</p>",
        "id": 193268723,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586310645
    },
    {
        "content": "<p>back to this... thinking about versions. </p>\n<p>My first postulate: </p>\n<ul>\n<li>UTG cannot be used with versions earlier than FHIR R4</li>\n</ul>",
        "id": 193273565,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586318309
    },
    {
        "content": "<p>my second postulate:</p>\n<ul>\n<li>R4+ can never be used without UTG</li>\n</ul>",
        "id": 193273812,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586318646
    },
    {
        "content": "<p>I'm fine with the second.  Does the first mean that an IG based on DSTU2 or STU3 won't be able to access the 'current' version of UTG-maintained terminologies?</p>",
        "id": 193274109,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1586319072
    },
    {
        "content": "<p>yes, if my postulate is applied</p>",
        "id": 193274281,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586319317
    },
    {
        "content": "<p>I don't personally have any IGs that will care too much about that, but I expect some might.  Do we need to post this proposition for wider feedback?  Or is this something that is simply a fact of life like Covid where whether people like it or not doesn't much matter?</p>",
        "id": 193275019,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1586320408
    },
    {
        "content": "<p>I'm not sure. The problem is that change in code system URLs between 3 and 4 to clear the way for UTG</p>",
        "id": 193275605,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586321343
    },
    {
        "content": "<p>Right - so you couldn't use the R3 URL if you're wanting to point to codes in UTG - but what if you make an STU3 profile and declare a dependency on UTG and use the new URLs ?</p>",
        "id": 193276192,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1586322238
    },
    {
        "content": "<p>now you have competing definitions of things between R3 and UTG, where as in R4, I can clean out everything in R4 that's in UTG</p>",
        "id": 193276417,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1586322540
    },
    {
        "content": "<p>Would they be seen as competing?  They'd have different canonical URLs - It wouldn't be ideal, but I think it would <em>work</em>.  The biggest issue would be different systems using different URLs for the same system - because one uses the old content and one uses the new.</p>",
        "id": 193276628,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1586322905
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> can we get around that differing URL issue with a namingSystem entry for the codesystem who's URLs have changed?</p>",
        "id": 193319878,
        "sender_full_name": "Carol Macumber",
        "timestamp": 1586352730
    },
    {
        "content": "<p>We <em>should</em> have a NamingSystem that would help with that, but I don't know that most systems would be looking at that.</p>",
        "id": 193330065,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1586357088
    }
]