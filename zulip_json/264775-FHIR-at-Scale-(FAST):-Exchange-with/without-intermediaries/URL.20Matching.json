[
    {
        "content": "<p>Hi all, just starting a thread based on our discussion today (October 19) regarding URL matching.</p>\n<p>I'm trying to include my assumptions, since I'm not convinced I don't have some wrong ones  =).</p>\n<ul>\n<li>A directory has a method for matching an entity (e.g., <code>Actor 2</code>) to a URL (e.g., <code>actor2.intermediary-abc.com/r4</code>, <code>r4.intermediary-abc.com/actor2</code>, etc.).</li>\n<li>A client interested in contacting <code>Actor 2</code> queries the directory and gets back a URL.</li>\n<li>A client uses the returned URL as the base FHIR URL to make queries against <code>Actor 2</code> (via <code>intermediary-abc</code>).</li>\n<li>Given that the requests are just standard FHIR requests, <code>intermediary-abc</code> is responsible for sorting out their convention, routing rules, etc.<ul>\n<li><code>intermediary-abc</code> will establish their conventions based on their architecture, tech stack, etc.</li>\n</ul>\n</li>\n<li>URLs are opaque to a caller (e.g., any convention should is acceptable).</li>\n<li><code>Actor 2</code> has some sort of relationship with <code>intermediary-abc</code>, such that <em>they</em> receive their opaque base URL that they should use in their links, etc.</li>\n</ul>\n<p>Is this correct?  And/or, what am I missing?  Thanks!</p>",
        "id": 258245859,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1634667183
    },
    {
        "content": "<p>If I were to map the same process using HTTP Headers:</p>\n<ul>\n<li>A directory has a method for matching an entity (e.g., <code>Actor 2</code>) to a URL (e.g., <code>intermediary-abc.com/r4</code>, <code>r4.intermediary-abc.com</code>, etc.) plus a header value for a documented header (e.g., <code>FHIR-Entity=actor2</code>).</li>\n<li>A client interested in contacting <code>Actor 2</code> queries the directory and gets back a URL and header value.</li>\n<li>A client uses the returned URL as the base FHIR URL to make queries against <code>Actor 2</code> (via <code>intermediary-abc</code>), with the expected header value.</li>\n<li><code>intermediary-abc</code> is responsible for routing based on the header value</li>\n<li>URLs and header values are opaque to a caller (e.g., any convention should is acceptable).</li>\n<li><code>Actor 2</code> has some sort of relationship with <code>intermediary-abc</code>, such that <em>they</em> receive their opaque base URL that they should use in their links, etc.</li>\n</ul>\n<p>Again, is this correct?</p>",
        "id": 258247556,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1634667785
    },
    {
        "content": "<p>Hi Gino,  I'm digesting your example above....</p>\n<p>OK - here goes.  I numbered the steps in the flow you outlined and added comments underneath.  Perhaps you can provide some example request URLs to illustrate your suggestions?</p>\n<ol>\n<li>\n<p>A directory has a method for matching an entity (e.g., Actor 2) to a URL (e.g., <a href=\"http://actor2.intermediary-abc.com/r4\">actor2.intermediary-abc.com/r4</a>, <a href=\"http://r4.intermediary-abc.com/actor2\">r4.intermediary-abc.com/actor2</a>, etc.).<br>\nMikeY&gt;&gt;&gt; Agreed.</p>\n</li>\n<li>\n<p>A client interested in contacting Actor 2 queries the directory and gets back a URL.<br>\nMikeY&gt;&gt;&gt; Agreed.</p>\n</li>\n<li>\n<p>A client uses the returned URL as the base FHIR URL to make queries against Actor 2 (via intermediary-abc).<br>\nMikeY&gt;&gt;&gt; Agreed.</p>\n</li>\n<li>\n<p>a) Given that the requests are just standard FHIR requests, intermediary-abc is responsible for sorting out their convention, routing rules, etc.<br>\nMikeY&gt;&gt;&gt; I am not clear on this.  If the client initiator (Actor 1) sends a request to an intermediary then the intermediary's baseURL should be used AND a target destination id should be added to it.  That would come from Actor 1's directory - so Actor 1 themselves doesn't need to do any injecting of target or anything.  </p>\n</li>\n</ol>\n<p>An example Patient read would be: <a href=\"https://abc.im1.com/fhir/r4/parkland/Patient/123\">https://abc.im1.com/fhir/r4/parkland/Patient/123</a>.  When the intermediary receives that request, it needs to parse the subdirectory path and extract out the target destination id.  The intermediary needs to know that this request should be routed to \"parkland\".  There has to be rules on how to do that.  I propose we take the following standard format (this is from <a href=\"http://hl7.org/fhir\">hl7.org/fhir</a>)</p>\n<p>VERB [base]/[type]/[id] {?_format=[mime-type]}</p>\n<p>and inject a target identifier in the path immediately after the [base] of the intermediary:</p>\n<p>VERB [base][/TargetId]/[type]/[id] {?_format=[mime-type]}</p>\n<p>Intermediary should then ALWAYS identify and extract the target id from the same location in each request.</p>\n<ol start=\"4\">\n<li>\n<p>b) intermediary-abc will establish their conventions based on their architecture, tech stack, etc.<br>\nMikeY&gt;&gt;&gt; Not sure what you mean.  Once 4a is done, Intermediary will then determine how to route to \"TargetId\" - most probably based on their own directory search.</p>\n</li>\n<li>\n<p>URLs are opaque to a caller (e.g., any convention should is acceptable).<br>\nMikeY&gt;&gt;&gt; Agreed that they are opaque.  Don't agree that any convention is acceptable, because how would intermediary know how to parse the request?</p>\n</li>\n<li>\n<p>Actor 2 has some sort of relationship with intermediary-abc, such that they receive their opaque base URL that they should use in their links, etc.<br>\nMikeY&gt;&gt;&gt; not sure I understand.  See my feedback under 4b - I think it's related.</p>\n</li>\n</ol>",
        "id": 258250736,
        "sender_full_name": "Mike Yackanich",
        "timestamp": 1634669009
    },
    {
        "content": "<p>This matches my understanding/assumptions.</p>",
        "id": 258251645,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1634669379
    },
    {
        "content": "<p>Forgot to add, @Gino - I do understand and agree with your outline of the HTTP Header approach.</p>",
        "id": 258253174,
        "sender_full_name": "Mike Yackanich",
        "timestamp": 1634669973
    },
    {
        "content": "<p>Yes, agreed that 4a is the most concerning part.  The intermediary could potentially be flexible with the URI that it received if there was an agreement between actor 2 and the intermediary.  For example, it would be agreed upon that the URI sent to the intermediary maps to the R4 endpoints of the intermediary and the destination....in other words, this is a R4 API.  This may add complexity.</p>",
        "id": 258254647,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634670497
    },
    {
        "content": "<p>It would have to be a unique URI such that if we see the URI from the initiator then we know that uniquely maps to responder actor 2 and no one else.</p>",
        "id": 258255136,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634670711
    },
    {
        "content": "<p>Great!<br>\n4.a) How does <code>Actor 1</code> know that <code>intermediary-abc</code> is the URL for <code>Actor 2</code>?  I assumed it was via looking up <code>Actor 2</code> in the directory.</p>\n<ul>\n<li>If that is true, the URL will include all the relevant path segments - <code>Actor 1</code> does not need to inject anything <em>specific</em> to <code>Actor 2</code> into the request, because it is, by definition, the URL for <code>Actor 2</code>.</li>\n<li>If that is not true, <code>Actor 1</code> has some external knowledge of the URL for <code>Actor 2</code>.  If <code>Actor 1</code> already has a mapping from <code>Actor 2</code> to <code>intermediary-abc</code>, it should not be an extra burden to include the additional path components of a URL.  (Indeed, it will likely need some path segments regardless, since it's unlikely that every intermediary will use a bare domain for their FHIR base URL).</li>\n</ul>\n<p>Using your example URL: <a href=\"https://abc.im1.com/fhir/r4/parkland/Patient/123\">https://abc.im1.com/fhir/r4/parkland/Patient/123</a> , <code>Actor 1</code> shouldn't care whether it uses that URL or something like <a href=\"https://abc.im1.com/fhir/r4/some-unique-key-like-a-guid/Patient/123\">https://abc.im1.com/fhir/r4/some-unique-key-like-a-guid/Patient/123</a> - the URL is opaque to <code>Actor 1</code>.  My argument is that the mapping from <code>intermediary-abc</code> to <code>Actor 2</code> is an implementation detail that I don't think we should be involved in defining.</p>\n<p>More generally, I believe<br>\n<code>VERB [actor2-actual-base]/[type]/[id]{?_format=[mime-type]}</code><br>\nshould map to<br>\n<code>VERB [actor2-base-url-via-intermediary-abc]/[type]/[id]{?_format=[mime-type]}</code></p>\n<p>This means that <code>Actor 1</code> is not responsible for injecting anything, and that existing clients will work 'out of the box' (e.g., I can take an arbitrary SMART on FHIR App and point it at <code>[actor2-base-url-via-intermediary-abc]</code>).</p>",
        "id": 258255194,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1634670724
    },
    {
        "content": "<p>In short, the URI proposed by Gino would have to be unique for all requests received by the intermediary:<br>\nVERB [actor2-base-url-via-intermediary-abc]/[type]/[id]{?_format=[mime-type]}</p>",
        "id": 258255670,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634670951
    },
    {
        "content": "<p>because the URI uniquely defines the target destination as a whole -- the one constraint is that the hostname must route to the intermediary.</p>",
        "id": 258255784,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634671004
    },
    {
        "content": "<p>as mentioned, there does have to be some agreement between the intermediary and actor 2 on the URI -- they must agree on something that uniquely identifies actor 2 and they must agree on the mapping of the URI to the base URL or URI of actor 2.</p>",
        "id": 258256109,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634671150
    },
    {
        "content": "<p>Yes, so if the intermediary wanted their clients to be:</p>\n<ul>\n<li><code>client1.intermediary-abc.com</code>, <code>client2.intermediary-abc.com</code>, etc.</li>\n<li><code>intermediary-abc.com/client1</code>, <code>intermediary-abc.com/client2</code>, etc.</li>\n<li><code>r4-endpoints.intermediary-abc.com/client1</code>, <code>r4-endpoints.intermediary-abc.com/client2</code>, etc.</li>\n<li><code>intermediary-abc.com/fhir/r4/provider/client1</code>, <code>intermediary-abc.com/fhir/r4/client2</code>, etc.</li>\n<li>or even <code>intermediary-abc.client1.com/r4</code>, <code>intermediary-abc.client2.com/r4</code>, etc.</li>\n</ul>\n<p>Those are all viable routing patterns, based on how <code>intermediary-abc</code> wants to design their system (and work with their clients).</p>",
        "id": 258256200,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1634671194
    },
    {
        "content": "<p>Yes, actor 1 looks up actor 2 in directory optimally or if the directory is not yet established, has downloaded some agreed upon directory endpoint.</p>\n<p>Initially, the app path concept considered using a segment of the URL, not the entire URL, but I think the entire URL is probably workable as well.</p>\n<p>Actor 2 is responsible for telling the intermediary the unique URL of which transactions should be routed to them.   Thus, there not not so much a pattern match but a full url.</p>",
        "id": 258256396,
        "sender_full_name": "Patrick Murta",
        "timestamp": 1634671271
    },
    {
        "content": "<p>and the hostname routes to the intermediary since actor 2 has full authority over the DNS configuration</p>",
        "id": 258256560,
        "sender_full_name": "Patrick Murta",
        "timestamp": 1634671333
    },
    {
        "content": "<p>That is possible.  In practice, each intermediary will probably advise a standard convention to follow for the URI which should make the configuration easier on the intermediary.  Then, you will end up with different URI conventions from each intermediary.</p>",
        "id": 258256725,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634671419
    },
    {
        "content": "<p>But, the spec could say that although intermediaries can define URI conventions, they cannot require a specific convention other than the establishment of a URI that uniquely defines the responder (actor 2).</p>",
        "id": 258256994,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634671526
    },
    {
        "content": "<p>I think each intermediary and actor 2 can define those but not mandating a constraint in the IG allows some flexibility and removes the need to look at specific segments of the URL</p>",
        "id": 258257012,
        "sender_full_name": "Patrick Murta",
        "timestamp": 1634671533
    },
    {
        "content": "<p>Right, I think we are on the same page Patrick with my last statement.</p>",
        "id": 258257131,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634671569
    },
    {
        "content": "<p>If the URI sent to the intermediary can be almost \"anything under the sun\" as long as it's unique, there will likely be additional web layer based forwarding/rules that say map URI xyz to the R4 URI for the intermediary...things like that.</p>",
        "id": 258257546,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634671734
    },
    {
        "content": "<p>So that's one reason intermediaries will probably prefer to establish a convention for the URI.</p>",
        "id": 258257592,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634671760
    },
    {
        "content": "<p>Agree, but providing that flexibility at the intermediary/actor level is probably more easily digested than a IG level constraint...</p>",
        "id": 258257762,
        "sender_full_name": "Patrick Murta",
        "timestamp": 1634671824
    },
    {
        "content": "<p>Yes, possibly.  My thinking is that the IG should document a preferred URI convention but state that the convention is not required as long as actor 2 and the intermediary can agree on a unique URI that can be assigned to actor 2 and maps to a specific endpoint for actor 2.</p>",
        "id": 258258346,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634672074
    },
    {
        "content": "<p>So you can take the preferred approach, but if for some reason that will not work out, come to an agreement on a unique URI and its mapping.</p>",
        "id": 258258556,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634672168
    },
    {
        "content": "<p>But if it can be \"anything under the sun\" (I like that phrase) - that won't work if the intermediary is a FHIR Server service - because the FHIR service has it's own baseURL portion of the path.  It would require that the intermediary instead be a REST service only.  And if the latter, customizations would also then be required if it needed to return, for example, an OperationOutcome.  For example, what if the \"anything under the sun\" value did not map to anything within the intermediary - I expect that the behavior of the intermediary should be to return an OperationOutcome with a related error message.</p>\n<p>I need to re-read the examples above...</p>",
        "id": 258259766,
        "sender_full_name": "Mike Yackanich",
        "timestamp": 1634672670
    },
    {
        "content": "<p>Hi Mike Y - the \"anything under the sun\" URI is not truly anything -- it's an agreed upon URI between the intermediary and actor 2 but it must uniquely define actor 2 and map to a specific endpoint for actor 2 and map to a specific intermediary endpoint.  In this case, the intermediary would likely need to do some web server \"magic\" to rewrite or forward the request to the appropriate intermediary endpoint.</p>",
        "id": 258260306,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634672904
    },
    {
        "content": "<p>Since the \"magic\" will put some extra burden on the intermediary, I stated my preference for establishing a URI convention and have the agreed upon URI (not using the convention) be more like the exception to the rule.</p>",
        "id": 258260614,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634673038
    },
    {
        "content": "<p>I think I'm coming at this from the perspective of an intermediary as a FHIR Server.  With that said - there is no \"agreed upon URI\".  The Intermediary will have a FHIR baseURL that must be used.  A target identifier can then be added/appended/inserted AFTER that - but it can't mess with the baseURL.  Based on how I am interpreting MikeM and Gino's comments - it seems like y'all are looking at the Intermediary not as a FHIR Server, but as a RESTful application service that says \"send me anything you want and I'll figure it out and map it to a target endpoint\".  Is that my disconnect?</p>",
        "id": 258262210,
        "sender_full_name": "Mike Yackanich",
        "timestamp": 1634673680
    },
    {
        "content": "<p>I think I'd argue that pushing a specific pattern on intermediaries is a higher burden.  What is 'simple' to do depends greatly on tech stack and architecture.</p>\n<p>Offering examples is great, but if we give a \"recommended\" approach, we need to do the diligence to ensure it's meeting the 80% rule for implementers.</p>",
        "id": 258262275,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1634673704
    },
    {
        "content": "<p>Mike Y - I am only focused on the intermediary as a FHIR pass-through right now or little more than a pass through and not a FHIR resource server that directly provides access to FHIR resources.  In other words, only actor 2 provides FHIR resources.</p>",
        "id": 258262947,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634673956
    },
    {
        "content": "<p>Yes - agreed.  Intermediary as a passthrough or proxy - not a resource repo.  Like our existing fhirproxy.  Which has a specific app path (part of baseURL) that must be used to access it (i.e. /fhirproxy/fhir/r4).  I don't see how we would be able to support </p>\n<p>/parkland/fhirproxy/fhir/r4<br>\nor <br>\n/fhirproxy/parkland/fhir/r4</p>\n<p>We have to have that baseURL portion consistently be /fhirproxy/fhir/r4.</p>\n<p>But that <em>is</em> implementation specific.</p>",
        "id": 258263959,
        "sender_full_name": "Mike Yackanich",
        "timestamp": 1634674324
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"255111\">Mike Yackanich</span> <a href=\"#narrow/stream/264775-FHIR-at.20Scale.20.28FAST.29.3A.20Exchange.20with.2Fwithout.20intermediaries/topic/URL.20Matching/near/258262210\">said</a>:</p>\n<blockquote>\n<p>I think I'm coming at this from the perspective of an intermediary as a FHIR Server.  With that said - there is no \"agreed upon URI\".  The Intermediary will have a FHIR baseURL that must be used.  A target identifier can then be added/appended/inserted AFTER that - but it can't mess with the baseURL.  Based on how I am interpreting MikeM and Gino's comments - it seems like y'all are looking at the Intermediary not as a FHIR Server, but as a RESTful application service that says \"send me anything you want and I'll figure it out and map it to a target endpoint\".  Is that my disconnect?</p>\n</blockquote>\n<p>The FHIR Base URL doesn't have any particular magic - it's just a URL that counts as the 'root' of a FHIR server (e.g., can service <code>[type]/[id]</code>, root operations, etc.).  Adding anything before the 'FHIR API' part is just changing the base URL as far as a caller is concerned.</p>\n<p>I'm not sure how something else could be inserted there and still be FHIR compliant, since there is no concept for URL parts in between those two components.  E.g., if I tell an app that my base URL is <code>example.com/actor2</code>, it works - regardless of whether I am using HTTP routing or I have built a FHIR implementation that virtualized <code>actor2</code> internally.  Telling a client that the base URL is <code>example.com</code> (e.g., metadata is <code>example.com/metadata</code>) but that I need to make requests to <code>example.com/actor2/Patient</code> isn't valid - no existing software would be able to handle that.</p>",
        "id": 258264941,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1634674697
    },
    {
        "content": "<p>Yeah.  \"I'm not sure how something else could be inserted there and still be FHIR compliant, since there is no concept for URL parts in between those two components.\" </p>\n<p>Yes - that was my original thought when \"AppPath\" routing was being introduced.  I saw it as a bastardization of the Intermediary's baseURL. </p>\n<p>\"Telling a client that the base URL is <a href=\"http://example.com\">example.com</a> (e.g., metadata is <a href=\"http://example.com/metadata\">example.com/metadata</a>) but that I need to make requests to <a href=\"http://example.com/actor2/Patient\">example.com/actor2/Patient</a> isn't valid - no existing software would be able to handle that.\"</p>\n<p>Yeah - this is where the customization within the Intermediary comes into play.  Like what we have done and demonstrated in the POC at the past couple of connectathons.  We needed rules for parsing the request so that we could deconstruct and extract the target identifier - so that we could do a directory lookup to find that target's endpoint.  So the intermediary has to be able to accept \"<a href=\"http://example.com/actor2/metadata\">example.com/actor2/metadata</a>\" and turn it into \"<a href=\"http://actor2.com/metadata\">actor2.com/metadata</a>\" (if that makes sense).</p>",
        "id": 258266221,
        "sender_full_name": "Mike Yackanich",
        "timestamp": 1634675273
    },
    {
        "content": "<p>Right, there wouldn't be a static base URL that could be used with an intermediary with app path routing.</p>",
        "id": 258266730,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634675477
    },
    {
        "content": "<p>The base URL for the intermediary always changes -- either adding a component that indicates the destination such as \"/actor2\" or the entire base URL is an agreed upon base URL between the intermediary and actor 2 that uniquely identifies actor 2 so that the Hub (intermediary) knows to route to actor 2.</p>",
        "id": 258267151,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634675657
    },
    {
        "content": "<p>In that sense, Mike Y has a point that the base URL for the intermediary is non-standard and not static.</p>",
        "id": 258267287,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634675718
    },
    {
        "content": "<p>So with respect to the intermediary, the base URL for the intermediary is constantly in flux, such as:<br>\n-- For actor 2 which is a responder and not an intermediary: <a href=\"http://example.com/actor2\">example.com/actor2</a><br>\n-- For actor 3 which is a responder  and not an intermediary: <a href=\"http://example.com/actor3\">example.com/actor3</a><br>\n-- For actor 4 which is a responder  and not an intermediary: <a href=\"http://example.com/actor4\">example.com/actor4</a><br>\n...and so on</p>",
        "id": 258267849,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634675921
    },
    {
        "content": "<p>.... we are saying that there is going to be a non-static component to the base URL when you send the request to the intermediary, unless we define the routing component outside of the base URL.  If neither of those options seem viable, then I'm not sure that the app path solution as a whole is viable?</p>",
        "id": 258268476,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634676145
    },
    {
        "content": "<p>Why is there a need to have \"an agreed upon base URL between the intermediary and actor 2\"? It seems to me that this is trying to solve some not-yet-described problem with the directory lookup - is that the case? </p>\n<p>If we go back to the original write-up that Gino did, why is there a need for 4a to be part of any consideration?</p>",
        "id": 258268560,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1634676176
    },
    {
        "content": "<p>Most servers (any type of web server, regardless of FHIR) have a defined URL/endpoint to connect which is commonly defined at the web server layer.  An intermediary is no different.  Vassil -- what do you propose about the application path part of the URL (minus the hostname) that is sent to the intermediary?  What does that look like?</p>",
        "id": 258269353,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634676479
    },
    {
        "content": "<blockquote>\n<p>we are saying that there is going to be a non-static component to the base URL when you send the request to the intermediary, unless we define the routing component outside of the base URL.</p>\n</blockquote>\n<p>Is there some assumption that states that the intermediary must dynamically construct URLs for arbitrary destinations? The way I see the intermediary providing a service to actor 2 is:</p>\n<ol>\n<li>Have a formal agreement for providing a service to actor 2</li>\n<li>Establish routes from intermediary to actor 2</li>\n<li>Statically declare the base FHIR URL for handling requests on behalf of actor 2 and publish them in a shared directory</li>\n</ol>\n<p>What are the missing pieces?</p>",
        "id": 258269533,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1634676558
    },
    {
        "content": "<p>Yes.  So at the end of the day, it's opaque to callers whether it is:</p>\n<ul>\n<li><a href=\"http://example.com/actor1\">example.com/actor1</a></li>\n<li><a href=\"http://actor2.example.com\">actor2.example.com</a></li>\n<li><a href=\"http://example.com/actor/3/\">example.com/actor/3/</a></li>\n<li><a href=\"http://example.com/&lt;UUID&gt;/\">example.com/&lt;UUID&gt;/</a><br>\n... even within a single intermediary.</li>\n</ul>\n<p>Since the caller needs to look up the URL of the intermediary regardless (e.g., in this example, <code>example.com</code>), and that URL is mapped via the actor, saying that the URL/app path is used for routing becomes transparent and an implementation detail of the intermediary.</p>\n<p>This means that intermediaries:</p>\n<ul>\n<li>have the flexibility to route based on their architecture</li>\n<li>are not forced into a mapping system we define (e.g., human-readable, regionalized, UUID, etc.)</li>\n<li>can change their patterns over time</li>\n<li>can choose to have multiple endpoints for a single actor, depending on some other rules (e.g., region, etc.)<br>\netc.</li>\n</ul>",
        "id": 258269537,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1634676561
    },
    {
        "content": "<p>Opaque to the callers sounds good, I agree.  For the intermediaries, it's easy to route to the next hop as long as the URI used by the caller uniquely identifies actor 2.  I get what you are saying about not enforcing a URI convention so each intermediary may establish their own convention...</p>",
        "id": 258270886,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634677154
    },
    {
        "content": "<blockquote>\n<p>what do you propose about the application path part of the URL (minus the hostname) that is sent to the intermediary? What does that look like?</p>\n</blockquote>\n<p>As Gino said - it is an implementation detail for the intermediary.</p>\n<p>I think now I understand what you mean by a non-static component of the app path - it is non-static with regards to a single instance of a web server application, which is handling the routing for all destinations (presumably with some kind of lookup based on the incoming URL). I think this is still an implementation detail - an intermediary may very well have multiple instances of the web server application, each with their own app path, and a static configuration setting for the destination.</p>\n<p>There is no need to be prescriptive about any of this.</p>",
        "id": 258271141,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1634677231
    },
    {
        "content": "<p>To be clear, each Intermediary will want to enforce a convention although intermediaries don't need to use the same convention.  A convention makes the difference between a highly manageable solution and a solution that is bogged down by requests that allow for any URI format being received by the intermediary.  At the web server layer of the current eHealth Exchange solution, mapping for any URI format for each actor is a hand edit in a configuration file -- very error prone and not a good idea if it can be avoided.</p>",
        "id": 258272338,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634677688
    },
    {
        "content": "<p>As long as each intermediary can prescribe a URI convention, then that makes the solution much more feasible.</p>",
        "id": 258272999,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634677968
    },
    {
        "content": "<p>So the process would be the following when the intermediary is acting as a FHIR pass through:<br>\n1) Actor 2 (the responder with a FHIR resource server) wants to work with an intermediary (INTM 1).<br>\n2) The intermediary provides a URI convention to actor 2 in order for callers to send requests through INTM 1 and eventually onwards to actor 2.  The URI convention may prescribe the app path and port including an app path component that designates the responder as actor 2 -- taken as a whole, this is effectively a \"base URL\" for INTM 1.<br>\n3) The intermediary and actor 2 will agree that the URI established under #2 will map to a specified base URL for actor 2.<br>\n4) Actor 2 publishes the URI established under #2 in a directory accessible to actor 1 (the caller).</p>",
        "id": 258274857,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634678662
    },
    {
        "content": "<p>OK - I got it.  It sunk in.  We're kinda saying something similar except I'm talking a specific implementation of the AppPath approach.  </p>\n<p>For our implementation that we've created for the CAT testing, for example, we required /fhirproxy/fhir/r4/&lt;target&gt;/[type]...and that is how directory entries pointing to us as an intermediary would have to be formatted.  From Actor1's (ultimate initiator) perspective - that endpoint/path is opaque.</p>\n<p>Carry on.  Nothing to see here.   <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 258275993,
        "sender_full_name": "Mike Yackanich",
        "timestamp": 1634679219
    },
    {
        "content": "<p>I agree. Steps 2 and 3 are only relevant to Actor 2 and INTM 1, and are therefore an implementation detail. Do you see a need for some specific coordination there that needs guidance?</p>",
        "id": 258276008,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1634679229
    },
    {
        "content": "<p>For step #3, I don't think any guidance is needed.  For step #2, I cannot think of any guidance needed -- possibly one exception would be the hostname used in the URI to connect to INTM 1 -- can the hostname be specified by actor 2 as long as it maps to the IP address of INTM 1?</p>",
        "id": 258276784,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634679653
    },
    {
        "content": "<p>If the domain belongs to the actor, the intermediary needs to get a certificate from them in order to host an HTTPS endpoint.  It's viable, but requires more coordination than the other way around.</p>",
        "id": 258277337,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1634679818
    },
    {
        "content": "<p>Good point, thanks Gino.</p>",
        "id": 258278753,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634680457
    },
    {
        "content": "<p>Oh gang, what do we do when there's multiple intermediaries in the path?  <a href=\"http://actor1.intermediary1.intermediary2.intermediary3.com\">actor1.intermediary1.intermediary2.intermediary3.com</a>?</p>",
        "id": 258365922,
        "sender_full_name": "David Pyke",
        "timestamp": 1634736167
    },
    {
        "content": "<p><a href=\"http://Intermediary3.com/intermediary2/intermediary1/actor1\">Intermediary3.com/intermediary2/intermediary1/actor1</a> ?</p>",
        "id": 258366004,
        "sender_full_name": "David Pyke",
        "timestamp": 1634736202
    },
    {
        "content": "<p>I think it is best to approach it the same way as eating a large meal - one bite at a time. As long as actor1 and actor2 don't need to be aware that there are intermediaries, there are ways to resolve the routing and other requirements. Navigating a federated network of networks is not necessarily a new problem.</p>",
        "id": 258369443,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1634737446
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"196338\">@Patrick Murta</span>  or <span class=\"user-mention\" data-user-id=\"238597\">@Frank McKinney</span> -- are you able to capture our thoughts from yesterday afternoon's chat above?  Let us know if we need to summarize or make it more concise.</p>",
        "id": 258373784,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634738872
    },
    {
        "content": "<p>I think the thing to keep in mind is that TCP connections are 1:1.  Regardless of how many layers or hops are actually involved with servicing a request, the most anyone can <em>publicly</em> know is the next URL.</p>\n<p>Someone is responsible for that domain and service to actually handle a request.  From there:</p>\n<ul>\n<li>If the resolution is to respond authoritatively, the server should do that.</li>\n<li>If the resolution is to forward somewhere else, that system can do that (edit: even if it's another intermediary - though the resolution needs to be setup in such a way as to avoid infinite loops).</li>\n<li>If the resolution is to ‘fan out’ to multiple actors on their part, they need to perform their discrete operations and process the results for passing along.<br>\nEtc.</li>\n</ul>",
        "id": 258374426,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1634738975
    },
    {
        "content": "<p>Also, doe anyone want to have an \"out of band\" call prior to the next scheduled HL7 call, if that's possible?  I'm hoping that might speed this up.</p>",
        "id": 258374843,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634739070
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"299807\">@Michael McCune</span> , <span class=\"user-mention\" data-user-id=\"196338\">@Patrick Murta</span> , all. Great discussion... just finished making my way through. Yes, I'll take a whack at capturing the discussion and resolution and will reach out if I need clarification.</p>",
        "id": 258397325,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1634746793
    },
    {
        "content": "<p>Excellent, thanks very much <span class=\"user-mention\" data-user-id=\"238597\">@Frank McKinney</span></p>",
        "id": 258397457,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634746822
    },
    {
        "content": "<p>I'd welcome an additional call prior to the next one scheduled for the 2nd. Others interested?</p>",
        "id": 258398052,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1634747037
    },
    {
        "content": "<p>Yes, I'm interested, in case that wasn't obvious.  :-)</p>",
        "id": 258402046,
        "sender_full_name": "Michael McCune",
        "timestamp": 1634748565
    },
    {
        "content": "<p>Please post the meeting details once you have it set?</p>",
        "id": 258728581,
        "sender_full_name": "David Pyke",
        "timestamp": 1634916798
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"254875\">@Michael McCune</span> , <span class=\"user-mention\" data-user-id=\"192587\">@David Pyke</span> , <span class=\"user-mention\" data-user-id=\"238597\">@Frank McKinney</span> , <span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span>, <span class=\"user-mention\" data-user-id=\"255111\">@Mike Yackanich</span> , <span class=\"user-mention\" data-user-id=\"192685\">@Vassil Peytchev</span> <br>\nCan folks make Thursday October 27th at 5 to 6PM eastern time work?  We will get a link to the updated IG out before then.</p>",
        "id": 259227981,
        "sender_full_name": "Patrick Murta",
        "timestamp": 1635336168
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"196338\">@Patrick Murta</span> , <span class=\"user-mention\" data-user-id=\"299807\">@Michael McCune</span> <span class=\"user-mention\" data-user-id=\"192587\">@David Pyke</span> , <span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span> , <span class=\"user-mention\" data-user-id=\"255111\">@Mike Yackanich</span> , <span class=\"user-mention\" data-user-id=\"192685\">@Vassil Peytchev</span> ,  all. It looks like 5-6 this Thursday the 28th works for most folks.  We'll be adding details to the HL7 calendar shortly.</p>",
        "id": 259238552,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1635341515
    },
    {
        "content": "<p>Thanks.  Please let us know when we can pickup the calendar invite.</p>",
        "id": 259241812,
        "sender_full_name": "Michael McCune",
        "timestamp": 1635342737
    },
    {
        "content": "<p>@Patrick Murta , @Michael McCune @David Pyke , @Gino Canessa , @Mike Yackanich , @Vassil Peytchev , all.  Because there's an overlapping FHIR-I call, we weren't able to add this week's meeting to the calendar, but it will still be happening at 5-6 ET this Thursday. We sent out invites to folks who have attended earlier calls and also posted to the FHIR-I listserv. But if you didn't see either of those, here's the meeting info: </p>\n<p><a href=\"https://global.gotomeeting.com/join/815167661\">https://global.gotomeeting.com/join/815167661</a> <br>\nYou can also dial in using your phone. <br>\n(For supported devices, tap a one-touch number below to join instantly.) <br>\nUnited States: +1 (872) 240-3212 </p>\n<ul>\n<li>One-touch: tel:+18722403212,,815167661# <br>\nAccess Code: 815-167-661</li>\n</ul>",
        "id": 259262879,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1635350748
    },
    {
        "content": "<p>Hi @Patrick Murta , @Michael McCune @David Pyke , @Gino Canessa , @Mike Yackanich , @Vassil Peytchev , all. The draft IG has been updated to (hopefully) align to where the group is landing. In particular, on the <a href=\"http://build.fhir.org/ig/HL7/fhir-exchange-routing-ig/branches/main/specification.html\">Specification page</a>...</p>\n<p>Added an Assumptions section including where I hear us landing on partnership and setup between the destination and intermediaries<br>\nUpdated the FHIR Service Base URLs section to... </p>\n<ul>\n<li>indicate that the guide does not prescribe a particular URL structure</li>\n<li>add content describing Private FHIR Service Base URLs Used in routing between intermediaries and to the actual destination server</li>\n<li>add content addressing sharing of private URLs among the destination and partner intermediaries <br>\nRemoved HTTP header and query string parameter approaches</li>\n</ul>\n<p>I also added a very draft Security guidance page</p>\n<p>We can walk through these sections in our call today and see what should be changed or added. And feel free to discuss here on Zulip as well</p>",
        "id": 259448330,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1635453349
    },
    {
        "content": "<p>Hi all. I made updates to the Exchange IG's <a href=\"http://build.fhir.org/ig/HL7/fhir-exchange-routing-ig/branches/main/specification.html\">specification page</a> ... adding a couple higher-level context pictures that we'll talk through during our call today at 1 ET</p>",
        "id": 260023388,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1635871363
    },
    {
        "content": "<p>Call details are on the HL7 calendar. But here's the zoom info: <br>\n<a href=\"https://global.gotomeeting.com/join/262996117\">https://global.gotomeeting.com/join/262996117</a></p>",
        "id": 260023666,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1635871495
    }
]