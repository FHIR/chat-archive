[
    {
        "content": "<p>For many of our choice questions, we want:</p>\n<p>If possible, populate the answer for the user using the answer from the parent questionnaire response<br>\nIf the answer from the parent questionnaire response is not available, then show a list of choices in a dropdown for the user to select from</p>\n<p>This seems to be extremely difficult .</p>\n<p>I can't populate the answer using the value from the parent questionnaire response with answerExpression  and use answerOption to set the dropdown values because I can't have both answerExpression  and answerOption on the same item.</p>\n<p>If I try to populate the answer using initialExpression, it doesn't seem to work when the question type is choice. </p>\n<p>If I change the question type to string, then I can't use the answerOption.</p>\n<p>Workaround is to use a  choice question type   then a  conditional fhirpath expression    in the answerExpression   so that if the answer in the parent questionnaire response exists()  then populate with it, otherwise, show the contained valueset to the user.</p>\n<p>Now I have a new problem where our HAPI server not liking the contained valueset (issue raised in HAPI stream).</p>\n<p>Are there any other suggestions to accomplish what we need?</p>\n<p>Also, in some of the FHIR validators, I am getting error messages about loading a contained valueset, but never actually \"using\" it.  I guess calling it conditionally in the  answerExpression doesn't count as actually using the contained resource.  So, is this going to end up being a problem for the IG?</p>",
        "id": 266903407,
        "sender_full_name": "Diane",
        "timestamp": 1641365598
    },
    {
        "content": "<p>I'm not sure what you mean by a \"parent\" response?<br>\nBut at least initialExpression on a choice type is specified and should work, see this example from <span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span> 's collection: <a href=\"https://github.com/lhncbc/lforms/blob/master/test/data/R4/questionnaire-initialx.json\">https://github.com/lhncbc/lforms/blob/master/test/data/R4/questionnaire-initialx.json</a></p>",
        "id": 266917398,
        "sender_full_name": "Tilo Christ",
        "timestamp": 1641377453
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"237340\">Diane</span> <a href=\"#narrow/stream/179255-questionnaire/topic/answerExpression.20and.20answerOption.20on.20same.20item.20workaround/near/266903407\">said</a>:</p>\n<blockquote>\n<p>For many of our choice questions, we want:</p>\n<p>If possible, populate the answer for the user using the answer from the parent questionnaire response<br>\nIf the answer from the parent questionnaire response is not available, then show a list of choices in a dropdown for the user to select from</p>\n</blockquote>\n<p>That sounds like a combination of initialExpression (for the answer) and answerExpression (for the answer list).</p>\n<p><span class=\"user-mention silent\" data-user-id=\"237340\">Diane</span> <a href=\"#narrow/stream/179255-questionnaire/topic/answerExpression.20and.20answerOption.20on.20same.20item.20workaround/near/266903407\">said</a>:</p>\n<blockquote>\n<p>I can't populate the answer using the value from the parent questionnaire response with answerExpression</p>\n</blockquote>\n<p>answerExpression does not populate an answer, but the answer list (answer options).  Perhaps It would be less confusing if it were called answerOptionExpression.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"237340\">Diane</span> <a href=\"#narrow/stream/179255-questionnaire/topic/answerExpression.20and.20answerOption.20on.20same.20item.20workaround/near/266903407\">said</a>:</p>\n<blockquote>\n<p>Also, in some of the FHIR validators, I am getting error messages about loading a contained valueset, but never actually \"using\" it.  I guess calling it conditionally in the  answerExpression doesn't count as actually using the contained resource.  So, is this going to end up being a problem for the IG?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> ?</p>",
        "id": 266942738,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1641393603
    },
    {
        "content": "<p>Agree w/ Paul - you use initialExpression for population, never answerExpression.  answerExpression is used to populate the list of dropdown options and is mutually exclusive w/ answerOption.</p>\n<p>The current invariant in R4 around use of contained resources can detect us in expressions, so in SDC we introduced an extension to accommodate - <a href=\"https://build.fhir.org/ig/HL7/sdc/StructureDefinition-sdc-referencesContained.html\">https://build.fhir.org/ig/HL7/sdc/StructureDefinition-sdc-referencesContained.html</a>.  You can see some examples of its use in the CI build.</p>",
        "id": 266976358,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1641409411
    },
    {
        "content": "<p>I agree that answerExpression  is designed for the list of dropdown options.   In the SDC IG,  it is clearly explained \"An expression (FHIRPath, CQL or FHIR Query) that resolves to a list of permitted answers for the question item or that establishes context for a group item. The user may select from among the list to choose answers for the question.\".      But, I have been unsuccessful at getting initialExpression to populate when the item type is choice or open-choice.    Instead,  I end up having to use answerExpression   to do the population of the value (and not the permitted answers).   I have never understood why I have to do this workaround.    </p>\n<p>Mostly likely, it is something that I am doing wrong.   So, I have now emailed a file to <span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span>    to see if he can see what I am doing wrong.</p>\n<p>If I don't have to do the workaround of using answerExpression to populate the initialValue,  then maybe I will have the ability to utilize initialExpression (for the answer) and answerExpression (for the answer list), which would solve many of my problems.</p>",
        "id": 267032075,
        "sender_full_name": "Diane",
        "timestamp": 1641453372
    },
    {
        "content": "<p>referencesContained is a great extension to accomodate conditionally used contained resources.  In case anyone needs a link to one of the examples Lloyd has mentioned, see <a href=\"https://build.fhir.org/ig/HL7/sdc/examples.html#using-answervalueset-with-expressions\">https://build.fhir.org/ig/HL7/sdc/examples.html#using-answervalueset-with-expressions</a>.</p>",
        "id": 267032442,
        "sender_full_name": "Diane",
        "timestamp": 1641453873
    },
    {
        "content": "<p>Replied to <span class=\"user-mention\" data-user-id=\"237340\">@Diane</span>  via email.</p>",
        "id": 267069058,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1641480735
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"195344\">Paul Lynch</span>  has found and explained the issue to me.   Thank you!</p>\n<p>You can definitely use initialExpression to do the population of a value when the item type is choice or open-choice.</p>\n<p>Posting a summary here in case anyone searches fhir chat in the future with this problem.</p>\n<p>When you are populating a choice (or open-choice) item type, the value from initialExpression must be a <strong>Coding</strong>.</p>\n<p>Examples of fhirpath syntax for the expression:</p>\n<p><code>%questionnaire.item.where(linkId = 'Q1.6').answer.value </code></p>\n<p>or</p>\n<p><code>%questionnaire.item.where(linkId = 'Q1.6').answer.valueCoding</code></p>\n<p>What does not work is:</p>\n<p><code>%questionnaire.item.where(linkId = 'Q1.6').answer.value.display</code></p>\n<p>This does not work either:</p>\n<p><code>%questionnaire.item.where(linkId = 'Q1.6').answer.value.code</code></p>\n<p>Another important requirement  (wasn't an issue for me but might cause issues for someone else so including it here):</p>\n<p>the answer populated must match one of the items in the list (for choice item type)</p>",
        "id": 267111045,
        "sender_full_name": "Diane",
        "timestamp": 1641501474
    },
    {
        "content": "<p>Those should work too, as the type can be either choosing, or string</p>",
        "id": 267233392,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1641584489
    }
]