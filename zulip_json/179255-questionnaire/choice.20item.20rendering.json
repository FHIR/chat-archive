[
    {
        "content": "<p>Grahame is implementing a rough converter to HTML for the IG Publisher and has noted that for a choice type, there is no definition of what the default control type to use is.<br>\nWe have the extension to permit the designer to be explicit about it, but should we have anything to say here about it?</p>",
        "id": 201922841,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1593047641
    },
    {
        "content": "<p>\"Question with a Coding drawn from a list of possible answers\" <a href=\"http://hl7.org/fhir/valueset-item-type.html\">http://hl7.org/fhir/valueset-item-type.html</a><br>\nThe extension and valueset are these for the control type when being explicit about it<br>\n<a href=\"http://hl7.org/fhir/extension-questionnaire-itemcontrol.html\">http://hl7.org/fhir/extension-questionnaire-itemcontrol.html</a><br>\n<a href=\"http://hl7.org/fhir/valueset-questionnaire-item-control.html\">http://hl7.org/fhir/valueset-questionnaire-item-control.html</a></p>",
        "id": 201922889,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1593047666
    },
    {
        "content": "<p>The control depends on whether it's a repeating question and also on how many choices there are.  Radio buttons or drop-downs work for non-repeating, check-boxes or multi-select drop-downs for repeating.  If the set gets too large, then you need a drop-down control that allows free-text search</p>",
        "id": 201923131,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1593047953
    },
    {
        "content": "<p>The very large sets would be item control = \"autocomplete\".   But, if there is no hint via the itemcontrol extension, how does one determine the number of items in the answerValueSet to decide whether the list is small or large or huge?  In the latter case, $expand probably would not return the full list.</p>",
        "id": 202013850,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1593113229
    },
    {
        "content": "<p>The expansion should indicate it isn't complete</p>",
        "id": 202022630,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1593117960
    },
    {
        "content": "<p>Via expansion.total being less than the number of expansion.contains nodes?</p>",
        "id": 202025435,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1593119418
    },
    {
        "content": "<p>Yes, and I always provide a value for the count, ensuring that I don't kill the browser downloading an entire 80k set of codes...<br>\nBut if the item has the hint, the designer is indicating that they thought about it.</p>",
        "id": 202029917,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1593121954
    },
    {
        "content": "<p><code>$expand?count=0</code> and then look at <code>expansion.total</code> if you need to make a UI rendering choice in advance. Otherwise, user <code>?count=[n]</code> where n is your threshold for switching over to autocomplete</p>",
        "id": 202161588,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1593222458
    },
    {
        "content": "<p>Value set item type defines <a href=\"https://www.hl7.org/fhir/codesystem-item-type.html#item-type-choice\">choice</a> as \"Question with a Coding drawn from a list of possible answers (specified in either the answerOption property, or via the valueset referenced in the answerValueSet property) as an answer (valueCoding).\" Where as in the questionnaire definition, answerOption can be of type Value[x] where [x] belongs to [\"Integer\", \"String\", \"Coding\", \"Reference\", \"Date\", \"Time\"] . Are these two definitions contradictory?</p>",
        "id": 224459677,
        "sender_full_name": "Kashyap Jois",
        "timestamp": 1611920487
    },
    {
        "content": "<p>I don't know that they're contradictory, but they're confusing.  In R5, we're dropping 'choice' and 'open-choice' entirely and adding 'Coding' as a type and making the question of whether a question is open or closed a coded element.  That will both be more flexible and more clear.  In R4, a type of 'choice' means that the data will be captured using valueCoding.  It's still possible to have options constrain the allowed choices for questions of type integer, string, Reference, Date or Time.</p>",
        "id": 224532292,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611953870
    },
    {
        "content": "<p>I'm still confused what you need to do to have a question that could have a coding or a string as the response.<br>\nDo we have an example of this yet?</p>",
        "id": 224576457,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1611999762
    },
    {
        "content": "<p>In R4 or R5?</p>",
        "id": 224588025,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612017465
    },
    {
        "content": "<p>In R4, you use open-choice.  In R5, you use type of Coding and declare the question to be open, allowing string.</p>",
        "id": 224588068,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612017503
    },
    {
        "content": "<p>Good to know. That R4/R5 difference is very helpful for some of the Questionnaire planning on the work <span class=\"user-mention\" data-user-id=\"235060\">@Grey Faulkenberry</span> and I are doing w/ open-choice questions.</p>",
        "id": 224589916,
        "sender_full_name": "John Manning",
        "timestamp": 1612020093
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179255-questionnaire/topic/choice.20item.20rendering/near/224532292\">said</a>:</p>\n<blockquote>\n<p>I don't know that they're contradictory, but they're confusing.  In R5, we're dropping 'choice' and 'open-choice' entirely and adding 'Coding' as a type and making the question of whether a question is open or closed a coded element.  That will both be more flexible and more clear.  In R4, a type of 'choice' means that the data will be captured using valueCoding.  It's still possible to have options constrain the allowed choices for questions of type integer, string, Reference, Date or Time.</p>\n</blockquote>\n<p>Oh that is interesting, but <a href=\"https://www.hl7.org/fhir/questionnaire-definitions.html#Questionnaire.item.answerOption\">Questionnaire.item.answerOption Definition : </a>mentions that answerOption is </p>\n<blockquote>\n<p>One of the permitted answers for a \"choice\" or \"open-choice\" question.</p>\n</blockquote>",
        "id": 224723311,
        "sender_full_name": "Kashyap Jois",
        "timestamp": 1612185347
    },
    {
        "content": "<p>Is it safe to say that for a \"choice\" type question we can write the rendering code assuming that only valueCoding will be in the answer options?</p>",
        "id": 224835224,
        "sender_full_name": "Kashyap Jois",
        "timestamp": 1612249474
    },
    {
        "content": "<p>I don't think that is always true. You can have a dropdown with strings (not necessarily a code)</p>",
        "id": 224867180,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1612270861
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"382830\">Kashyap Jois</span> <a href=\"#narrow/stream/179255-questionnaire/topic/choice.20item.20rendering/near/224723311\">said</a>:</p>\n<blockquote>\n<p>Oh that is interesting, but <a href=\"https://www.hl7.org/fhir/questionnaire-definitions.html#Questionnaire.item.answerOption\">Questionnaire.item.answerOption Definition : </a>mentions that answerOption is </p>\n<blockquote>\n<p>One of the permitted answers for a \"choice\" or \"open-choice\" question.</p>\n</blockquote>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> That looks contradictory to me.  answerOption's definition says it only for \"choice\" or \"openChoice\",  but then the structure shows answerOption.valueInteger, etc.</p>",
        "id": 224869427,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1612272019
    },
    {
        "content": "<p>It is contradictory and wrong.  We opened the set of options that can be restricted but didn't update the wording.  Can you submit a change request for us to fix this?</p>",
        "id": 224878797,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612276496
    },
    {
        "content": "<p>I do not have a HL7 Jira/Confluence account to do this. I can apply for one, unless someone here would like to submit the change request :)</p>",
        "id": 224880556,
        "sender_full_name": "Kashyap Jois",
        "timestamp": 1612277268
    },
    {
        "content": "<p>One of my secret missions is to encourage as many people as possible to get Jira/Confluence accounts to lower the level of friction for people submitting change requests whenever they see something that's wrong/could be better.</p>",
        "id": 224883792,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1612278571
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"382830\">@Kashyap Jois</span> Please post a link to the Jira item here when you are able to create it.</p>",
        "id": 224946049,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1612304621
    },
    {
        "content": "<p><a href=\"https://jira.hl7.org/browse/FHIR-30922\">https://jira.hl7.org/browse/FHIR-30922</a> do let me know if it clearly describes the problem</p>",
        "id": 225137163,
        "sender_full_name": "Kashyap Jois",
        "timestamp": 1612431453
    },
    {
        "content": "<p>Hello everybody,</p>\n<p>When I have a choice-Item with multiple predefined answerOptions with valueCoding linked to an existing terminology, but I want to rename these elements for the user, should I just switch the value of <code>Coding.display</code> or is there an extension for this?</p>\n<p>Kind regards<br>\nJohannes</p>",
        "id": 240429299,
        "sender_full_name": "Johannes Oehm",
        "timestamp": 1622100650
    },
    {
        "content": "<p>ValueSet allows you to define alternate display names.  No need for an extension</p>",
        "id": 240439495,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1622107402
    },
    {
        "content": "<p>Since we collapsed choice and open-choice into coding (with asnwerConstraint), should we have done the same thing with string and text? just have one of them and make the control formatting go into the itemControl too?<br>\n(and should itemControl come into the core definition?)</p>",
        "id": 241682943,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1622972015
    },
    {
        "content": "<p>I don't think those two things are correlated.  We could certainly talk about merging them, though my leaning is to put some invariants on string content and length instead.  I think it's a question of distinct data constraints, not just entry controls.</p>",
        "id": 241691269,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1622985093
    }
]