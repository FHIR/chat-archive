[
    {
        "content": "<p>In re to this guidance, I am curious why.  if you have the link_id your are good to go....</p>\n<p>\"The QuestionnaireResponse structure must be consistent with the Questionnaire (i.e. questions must be organized into the same groups, nested questions must still be nested, etc.\"</p>",
        "id": 153965433,
        "sender_full_name": "Eric Haas",
        "timestamp": 1527645074
    },
    {
        "content": "<p>Link id won't help with repeating groups.  And seeing as nesting is essential some of the time, it's easiest on implementers to be consistent and require it all the time.</p>",
        "id": 153965436,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1527649045
    },
    {
        "content": "<p>'Link id won't help with repeating groups.'  I don't understand this,  each item has a unique id so  you can always trace back to the item.    I certainly think flatter is easier so I'm not sure its easier.  Maybe the guidance is overly prescriptive?</p>",
        "id": 153965445,
        "sender_full_name": "Eric Haas",
        "timestamp": 1527656133
    },
    {
        "content": "<p>The grouped linkid and nesting keeps associated responses together, like rows in a table.</p>",
        "id": 153965478,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1527670890
    },
    {
        "content": "<p>Scenario: You have a repeating group for each relative (linkId=1).  You then have questions about the relative's age, gender, conditions(1.1, 1.2, 1.3, etc.)  If  you capture everything as a flat list, how do you tell which 1.1 and 1.2 go together?  You'd just have a whole bunch of 1.1s and 1.2s with nothing collecting them.</p>",
        "id": 153965518,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1527686544
    },
    {
        "content": "<p>OK thanks for the explanation.</p>",
        "id": 153965632,
        "sender_full_name": "Eric Haas",
        "timestamp": 1527691335
    },
    {
        "content": "<p>np</p>",
        "id": 153965649,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1527692375
    },
    {
        "content": "<p>Why not append an index to the linkId (1.1[0], 1.2[0], 1.3[0]) so QR is flat.  linkIdRepeat type int 0..1</p>",
        "id": 153968121,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528492203
    },
    {
        "content": "<p>that's how we do structure definition. For me, the primary reason there is a difference between the two cases is because structure definition has internal nesting references. So with SD, you effectively need a flat view and a nested view. Most of us who work with SD have the nesting as a view in memory. I've seen no such complexity with QR. So while what you suggest could be made to work, I'm not seeing any benefits</p>",
        "id": 153968122,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528492355
    },
    {
        "content": "<p>To me making qr flat seems like a benefit.  But I haven't done it either way yet.</p>",
        "id": 153968127,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528493378
    },
    {
        "content": "<p>Nesting makes it much easier to work with and render the QuestionnaireResponse alone.  It's also easier for implementers to wrap their heads around it when the response mirrors the Questionnaire.  Given that it's easier for implementers and we have no need to do it the other way, why would we?</p>",
        "id": 153968134,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528494815
    },
    {
        "content": "<p>Because its not easier for me to wrap my head around it, otherwise I would not have raised the question.</p>",
        "id": 153968238,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528644026
    },
    {
        "content": "<p>Flatter is better for me.</p>",
        "id": 153968239,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528644108
    },
    {
        "content": "<p>why?</p>",
        "id": 153968246,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528669462
    },
    {
        "content": "<p>Nesting makes it easier for maintaining clinical context within our questionnaire</p>",
        "id": 153968429,
        "sender_full_name": "Alex Goel",
        "timestamp": 1528740555
    },
    {
        "content": "<p>Ditto from the Electronic Data Capture World; we have our own model (the ODM) that allows us to manage shared context through nesting.  It helps for presentation and model; it's easier to flatten a nested model for your purposes than vice versa in my experience.</p>",
        "id": 153968556,
        "sender_full_name": "Geoff Low",
        "timestamp": 1528755696
    },
    {
        "content": "<p>FYI I was referring to QR not Q.    No problems with Q being nested.</p>",
        "id": 153968585,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528759478
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> Can you answer Grahame's question of \"why\" you prefer a flat model?</p>",
        "id": 153968664,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528806525
    },
    {
        "content": "<p>I'm trying to implement it before answering.  For now is just my Zen of Python belief that its an inherently simpler approach.</p>",
        "id": 153968752,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528830226
    },
    {
        "content": "<p>OK,  Now that I've tried it out using a simple Flask application, I'm sticking to my guns and thinking that a flat QR is easier at least for the simple forms - especially if you render them  on a single page.    I think the rendering is key here if you flatten your rendering and use the out of the box request .form object you get a list of objects  and so I'm haveing to indicate the index the id's anyway (or inspect the Q directly to mimic it structure) to try to reproduce the Q structure .   I 'd like to understand the inherent advantage of nesting  the QR vs indexed linkIds.  To me its a trade-off design decision to make it harder for the easy stuff to make it easier for the harder stuff.</p>",
        "id": 153969075,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528903026
    },
    {
        "content": "<p>converting to spreadsheets are another reason flatter is better  :-)</p>",
        "id": 153969076,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528903132
    },
    {
        "content": "<p>The solution has to work for <em>all</em> forms, not just the simple ones.  Have you tested it where you have repeating groups of questions?</p>",
        "id": 153969078,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528903372
    },
    {
        "content": "<p>Particularly where you have multiple nested repeating groups</p>",
        "id": 153969079,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528903400
    },
    {
        "content": "<p>nope</p>",
        "id": 153969106,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528908832
    },
    {
        "content": "<p>Try that before suggesting changes :)</p>",
        "id": 153969107,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528910222
    },
    {
        "content": "<blockquote>\n<p>FYI I was referring to QR not Q.    No problems with Q being nested.</p>\n</blockquote>\n<p>But then it becomes more difficult to understand the data when the context is lost in the QR</p>",
        "id": 153969130,
        "sender_full_name": "Alex Goel",
        "timestamp": 1528921788
    },
    {
        "content": "<p>I haven't suggested a change, I'm challenging the requirement and the premise that nesting is better.  QR has no context without the Q anyway.  Why is nesting better?</p>",
        "id": 153969133,
        "sender_full_name": "Eric Haas",
        "timestamp": 1528922196
    },
    {
        "content": "<p>Right. Eric is not suggesting losing the context, but moving the context from the structure to the link instead.</p>",
        "id": 153969201,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528926844
    },
    {
        "content": "<p>I think that we are talking about a bi-directional transform here. In fact, Eric, I can't see what rule in the existing QR stops you from doing what you're doing....</p>",
        "id": 153969202,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528926914
    },
    {
        "content": "<p>QuestionnaireResponse can be rendered on its own.  There's no need for the Questionnaire for a clinician to review the content.  Nor is there a need for it to simply aggregate responses.  It's only needed if you care about what's in Questionnaire.item.definition (and there's actually something there) or if you want to validate that the answers are valid based on the Questionnaire definition.</p>",
        "id": 153969280,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528936623
    },
    {
        "content": "<p>I don't understand how you could represent the answers to a Questionnaire with nesting repeating groups in QuestionnaireResponse without replicating the same hierarchy.</p>",
        "id": 153969281,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528936676
    },
    {
        "content": "<p>And if you have to do it in some cases, then it should be done in all cases to ensure consistent processing - and to allow for evolution of the associated Questionnaires.</p>",
        "id": 153969282,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528936712
    },
    {
        "content": "<p>of course you can because you put the nested structure in the link id.</p>",
        "id": 153969316,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528937625
    },
    {
        "content": "<p>a.b.c.d</p>",
        "id": 153969317,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528937644
    },
    {
        "content": "<p>can interconvert the forms and right now there's nothing to say not to do that</p>",
        "id": 153969318,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528937658
    },
    {
        "content": "<p>If I've got 20 a.b.c.d entries, how do I know which of the 5 a.b.c entries they go with?</p>",
        "id": 153969326,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528938352
    },
    {
        "content": "<p>Or are you expecting ordered lists with paths like StructureDefinition?</p>",
        "id": 153969327,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528938379
    },
    {
        "content": "<p>That's ugly for anyone who wants to expand and collapse parts of the questionnaire response when they're rendering it.</p>",
        "id": 153969328,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528938413
    },
    {
        "content": "<p>yes that's what it would mean. I'm not particular arguing that I like this; just that as things stand right now I can't see why that's not valid</p>",
        "id": 153969329,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528938421
    },
    {
        "content": "<p>and it's what Eric wants.</p>",
        "id": 153969330,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528938441
    },
    {
        "content": "<p>I don't know how ugly it is ....</p>",
        "id": 153969331,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528938446
    },
    {
        "content": "<p>Right now, link ids have no hierarchical meaning.</p>",
        "id": 153969332,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528938447
    },
    {
        "content": "<p>So it's not safe to infer one</p>",
        "id": 153969333,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528938461
    },
    {
        "content": "<p>they have no assigned meaning other than that they refer to the question.</p>",
        "id": 153969334,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528938469
    },
    {
        "content": "<p>We can discuss it on SDC if Eric puts together a change request.  We certainly need to clarify one way or the other.</p>",
        "id": 153969335,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528938524
    },
    {
        "content": "<p>I think clarification is definitely called for</p>",
        "id": 153969339,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528938584
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17351\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17351\">GF#17351</a></p>",
        "id": 153969346,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528939195
    },
    {
        "content": "<blockquote>\n<p>I haven't suggested a change, I'm challenging the requirement and the premise that nesting is better.  QR has no context without the Q anyway.  Why is nesting better?</p>\n</blockquote>\n<p>OK, I see. It's up to the implementer to make sure the Q and QR are relatable. Could be difficult if you get a new Q and have old QRs. Will need to carefully maintain versions</p>",
        "id": 153969930,
        "sender_full_name": "Alex Goel",
        "timestamp": 1528998763
    }
]