[
    {
        "content": "<p>as discussed on the SDC call today.  am interested in how to represent <em>calculated</em> score ( both intermediate scores for a group and the cumulative score for the whole questionnaire in QuestionnaireResponse.</p>",
        "id": 153984616,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533870173
    },
    {
        "content": "<p>I heard options of an extension or using a hidden question?</p>",
        "id": 153984619,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533870209
    },
    {
        "content": "<p>for Adaptive Questionnaire,  issues: </p>\n<ul>\n<li>whether to hide or show the calculated score.  </li>\n<li>what type is the score  ( Quantity?)</li>\n<li>Extension or use an item to represent?  ( which still confuses me)</li>\n</ul>",
        "id": 153984621,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533870350
    },
    {
        "content": "<p>I was thinking of an extension would be the more direct approach but would it need to be a complex extension?</p>",
        "id": 153984623,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533870398
    },
    {
        "content": "<p>What's the reason for having intermediate scores that aren't visible?  (If they're visible, they'll absolutely have to be item.values as question answers.)</p>",
        "id": 153984624,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1533870465
    },
    {
        "content": "<p>I'm confused why a calculated score is considered an answer?  the answer to question = 'foo'  is \"bar'  if you answer \"bar'  your score is 3 .  they are different things right?</p>",
        "id": 153984629,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533871015
    },
    {
        "content": "<p>QR item answer is 'bar' not 3</p>",
        "id": 153984630,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533871049
    },
    {
        "content": "<p>BTW <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  brought up the hidden thing :-) I was just trying to figure out how to send calculated scores in a QR</p>",
        "id": 153984632,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533871125
    },
    {
        "content": "<p>but I appreciate the twist on the question</p>",
        "id": 153984634,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533871166
    },
    {
        "content": "<p>Because if you were doing it on paper, the calculated score would be just another answer on the form - think of your old tax forms :)</p>",
        "id": 153984636,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1533871223
    },
    {
        "content": "<p>That's the way systems represent the data.</p>",
        "id": 153984637,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1533871232
    },
    {
        "content": "<p>If it's always going to be filled in by the automated system and can't be adjusted/corrected by the user, it should be flagged as read-only.</p>",
        "id": 153984638,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1533871264
    },
    {
        "content": "<p>OK</p>",
        "id": 153984639,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533871307
    },
    {
        "content": "<p>ty</p>",
        "id": 153984640,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533871312
    },
    {
        "content": "<p>IF Adaptive Q server return just a score at the end does it update the QR with the answer or just the question in the Questionnaire?  that' s easy</p>\n<p>if it needs to return intermediate scores after each question then each question-answer pair returns the next question and a score as a question.  Will see if this is a valid use case before digging deeper.</p>",
        "id": 153984646,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533871948
    },
    {
        "content": "<p>Whether it's at the end or intermediate scores at the end of a group, the adaptive server would just add both the question <em>and</em> the answer to the response (along with the next question).  The only reason to do something funky would be if there was a need to return a continuously running tally of the score as you were filling things out.  However, I'd expect that to be unusual as it might guide the user's responses.  The only thing I can think of that you might want to update as the user went full is \"Percent complete\" - that way the user can get a sense of how close they are to done.  Though of course with an adaptive questionnaire, you might jump from 10% complete to 80% complete with a single answer...</p>",
        "id": 153984652,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1533872894
    },
    {
        "content": "<p>I would also be interested in if we should pass each of these new Questionnaire (parts) back to a pre-populate server, and what that might do to the rest of the stuff that the user already answered.<br>\nDo we just keep appending more questions (and thus answers)?<br>\nSo each time round the data transmitted is getting bigger and bigger?</p>",
        "id": 153984683,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533874939
    },
    {
        "content": "<p>Yes, each round the data transmitted gets bigger and bigger.  If you're dealing with an adaptive questionnaire, it could potentially be doing some of the pre-pop for you.</p>",
        "id": 153984685,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1533875257
    },
    {
        "content": "<p>And if the adaptive Q server isn't the same as where the patient data is?</p>",
        "id": 153984687,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533875838
    },
    {
        "content": "<p>(which I would expect to be the normal case)</p>",
        "id": 153984688,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533875866
    },
    {
        "content": "<p>I guess you could combine it with pre-pop and have the adaptive form include the necessary extensions to allow the client to pre-pop, but that seems unlikely.  It might actually be nicer to use CDS Hooks rather than an operation.  Then the adaptive server could have the token allowing them to fill out the form.  However, it's not clear what the EHR workflow event would be for this.  Perhaps we could define both modes?</p>",
        "id": 153984691,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1533876229
    },
    {
        "content": "<p>I think something for workshopping in person ;)</p>",
        "id": 153984692,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533876273
    },
    {
        "content": "<p>(or at 3am while others are all in person)</p>",
        "id": 153984693,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533876299
    }
]