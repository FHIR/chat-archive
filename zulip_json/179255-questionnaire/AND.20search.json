[
    {
        "content": "<p>Hi, I'm trying to search a Hapi FHIR server for questionnaires that match both a particular cpt code (\"focus\") and coverage code (\"program\").</p>\n<p>The Hapi server has two questionnaires having a <code>useContext</code> that looks as follows:</p>\n<div class=\"codehilite\"><pre><span></span><code>&quot;useContext&quot;: [ {\n        &quot;code&quot;: {\n          &quot;system&quot;: &quot;http://terminology.hl7.org/CodeSystem/usage-context-type&quot;,\n          &quot;code&quot;: &quot;program&quot;\n        },\n        &quot;valueCodeableConcept&quot;: {\n          &quot;coding&quot;: [ {\n            &quot;system&quot;: &quot;http://XYZ&quot;,\n            &quot;code&quot;: &quot;105&quot;\n          } ]\n        }\n      }, {\n        &quot;code&quot;: {\n          &quot;system&quot;: &quot;http://terminology.hl7.org/CodeSystem/usage-context-type&quot;,\n          &quot;code&quot;: &quot;focus&quot;\n        },\n        &quot;valueCodeableConcept&quot;: {\n          &quot;coding&quot;: [ {\n            &quot;system&quot;: &quot;http://www.ama-assn.org/go/cpt&quot;,\n            &quot;code&quot;: &quot;70480&quot;\n          } ]\n        }\n      } ],\n</code></pre></div>\n<p>(Both fragments are identical for each questionnaire, except for the program code being \"105\" vs \"104\")</p>\n<p>Each of the following searches returns one or the other questionnaire:</p>\n<p><a href=\"http://localhost:8080/cqf-ruler-r4/fhir/Questionnaire?context-type-value=focus$http://www.ama-assn.org/go/cpt|70480&amp;context-type-value=program$http://XYZ|104\">http://localhost:8080/cqf-ruler-r4/fhir/Questionnaire?context-type-value=focus$http://www.ama-assn.org/go/cpt|70480&amp;context-type-value=program$http://XYZ|104</a></p>\n<p><a href=\"http://localhost:8080/cqf-ruler-r4/fhir/Questionnaire?context-type-value=focus$http://www.ama-assn.org/go/cpt|70480&amp;context-type-value=program$http://XYZ|105\">http://localhost:8080/cqf-ruler-r4/fhir/Questionnaire?context-type-value=focus$http://www.ama-assn.org/go/cpt|70480&amp;context-type-value=program$http://XYZ|105</a></p>\n<p>However, the if I replace \"program\" with \"focus\" in the URLs, I still get the same results, eg:</p>\n<p><a href=\"http://localhost:8080/cqf-ruler-r4/fhir/Questionnaire?context-type-value=focus$http://www.ama-assn.org/go/cpt|70480&amp;context-type-value=focus$http://XYZ|105\">http://localhost:8080/cqf-ruler-r4/fhir/Questionnaire?context-type-value=focus$http://www.ama-assn.org/go/cpt|70480&amp;context-type-value=focus$http://XYZ|105</a><br>\n(^this should return 0 results?)</p>\n<p>...what's the correct way to yield the intersection / \"AND\" results for both focus and program?</p>",
        "id": 264733798,
        "sender_full_name": "erwin foxtree",
        "timestamp": 1639413777
    },
    {
        "content": "<p>That sounds like a bug in HAPI to me.   I would not expect context-type-value=focus$http://XYZ|105 to find anything.</p>",
        "id": 264735631,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1639414539
    },
    {
        "content": "<p>You should be getting the intersection now...  What do you see in the 'self' link returned by the HAPI server?  Is it paying attention to both parameters?</p>",
        "id": 264783106,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1639436400
    },
    {
        "content": "<p>Thanks for all the replies.   I'm dealing w/ an inherited, somewhat complicated codebase that's similar to the set of microservices associated w/ the <a href=\"https://github.com/HL7-DaVinci/prior-auth\">https://github.com/HL7-DaVinci/prior-auth</a> reference implementation. </p>\n<p>It's difficult to to ascertain whether this is actually problem w/ the <code>cqf-ruler</code> service, or something else.</p>\n<p>However, the following search appears to behave correctly:</p>\n<p><a href=\"http://localhost:8080/cqf-ruler-r4/search?serverId=home&amp;pretty=true&amp;_summary=&amp;resource=Questionnaire&amp;param.0.0=http%3A%2F%2Fwww.ama-assn.org%2Fgo%2Fcpt&amp;param.0.1=70480&amp;param.0.name=context&amp;param.0.type=token&amp;param.1.0=http%3A%2F%2FXYZ&amp;param.1.1=105&amp;param.1.name=context&amp;param.1.type=token\">http://localhost:8080/cqf-ruler-r4/search?serverId=home&amp;pretty=true&amp;_summary=&amp;resource=Questionnaire&amp;param.0.0=http%3A%2F%2Fwww.ama-assn.org%2Fgo%2Fcpt&amp;param.0.1=70480&amp;param.0.name=context&amp;param.0.type=token&amp;param.1.0=http%3A%2F%2FXYZ&amp;param.1.1=105&amp;param.1.name=context&amp;param.1.type=token</a></p>\n<p>Stripping out the empty values, for clarity:</p>\n<div class=\"codehilite\"><pre><span></span><code>http://localhost:8080/cqf-ruler-r4/search?serverId=home&amp;\n\nresource=Questionnaire&amp;\n\nparam.0.0=http%3A%2F%2Fwww.ama-assn.org%2Fgo%2Fcpt&amp;\nparam.0.1=70480&amp;\nparam.0.name=context&amp;\nparam.0.type=token&amp;\n\nparam.1.0=http%3A%2F%2FXYZ&amp;\nparam.1.1=105&amp;\nparam.1.name=context&amp;\nparam.1.type=token&amp;\n</code></pre></div>",
        "id": 264896677,
        "sender_full_name": "erwin foxtree",
        "timestamp": 1639503940
    },
    {
        "content": "<p>(I am wondering about where this search param notation comes from, and whether it's an official part of any FHIR spec...)</p>",
        "id": 264896792,
        "sender_full_name": "erwin foxtree",
        "timestamp": 1639503971
    },
    {
        "content": "<p>Well, technically you're allowed to make up your own SearchParameter definitions, so it's theoretically possible to do this in FHIR, though the notion that there's a whole bunch of grouped parameters that are organized based on the parameter name is completely foreign to FHIR.  It's certainly nothing 'standard' or that a regular FHIR server would recognize without a bunch of customization.</p>",
        "id": 264899079,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1639504722
    },
    {
        "content": "<p>This is one of the results after using the search-query builder at <a href=\"http://localhost:8080/cqf-ruler-r4/resource?resource=Questionnaire\">http://localhost:8080/cqf-ruler-r4/resource?resource=Questionnaire</a></p>",
        "id": 264902211,
        "sender_full_name": "erwin foxtree",
        "timestamp": 1639506054
    },
    {
        "content": "<p>(<code>context</code>, vs <code>context-type</code> and <code>context-type-value</code>)</p>",
        "id": 264902308,
        "sender_full_name": "erwin foxtree",
        "timestamp": 1639506109
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/BHWltEyUOhpvTyQQB8xMrLRJ/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/BHWltEyUOhpvTyQQB8xMrLRJ/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/BHWltEyUOhpvTyQQB8xMrLRJ/image.png\"></a></div>",
        "id": 264902316,
        "sender_full_name": "erwin foxtree",
        "timestamp": 1639506115
    },
    {
        "content": "<blockquote>\n<p>You should be getting the intersection now... What do you see in the 'self' link returned by the HAPI server? Is it paying attention to both parameters?</p>\n</blockquote>\n<p>The <code>self</code> link in the questionnaire resource looks normal, AFAICT:<br>\n<a href=\"http://ABC/Questionnaire/&lt;Condition&gt;Program105\">http://ABC/Questionnaire/&lt;Condition&gt;Program105</a></p>\n<p>and the bundle <code>self</code> link is:<br>\n<a href=\"http://localhost:8080/cqf-ruler-r4/fhir/Questionnaire?context-type-value=focus%24http%3A%2F%2Fwww.ama-assn.org%2Fgo%2Fcpt%7C70480&amp;context-type-value=focus%24http%3A%2F%2FXYZ%7C105\">http://localhost:8080/cqf-ruler-r4/fhir/Questionnaire?context-type-value=focus%24http%3A%2F%2Fwww.ama-assn.org%2Fgo%2Fcpt%7C70480&amp;context-type-value=focus%24http%3A%2F%2FXYZ%7C105</a></p>\n<p>(which is properly escaped, but: still yields 1 hit)</p>",
        "id": 264902417,
        "sender_full_name": "erwin foxtree",
        "timestamp": 1639506158
    },
    {
        "content": "<p>Have you tried asking on <a class=\"stream\" data-stream-id=\"179167\" href=\"/#narrow/stream/179167-hapi\">#hapi</a> ?</p>",
        "id": 264925542,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1639516065
    }
]