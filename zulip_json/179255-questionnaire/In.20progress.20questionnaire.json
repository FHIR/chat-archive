[
    {
        "content": "<p>Is there a way the UI Client can avoid calling the Questionnaire and QuestionnaireResponse resources to get the questionnaire definition and any in-progress responses?</p>\n<p>We are thinking on using the initialSelected in the Questionnaire. The UI Client gets the QuestionnaireResponse ID from the Task Resource.</p>",
        "id": 264066828,
        "sender_full_name": "Milton Mitjans",
        "timestamp": 1638908869
    },
    {
        "content": "<p>You should never update the Questionnaire to reflect a particular patient's answers.  Remember, the Questionnaire is the same instance for every patient (and every time they fill it out)</p>",
        "id": 264069169,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1638910077
    },
    {
        "content": "<p>We made the decision long ago to manage questions and answers as two separate resources.  Authorship responsibilities are different, permissions are different and even how they're organized internally are different.  (In a QR, groups and questions can repeat, while in the Q, they don't.)</p>",
        "id": 264069381,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1638910166
    },
    {
        "content": "<p>That makes sense. Is there a way we could optimize the client? meaning instead of having to call: Task / Questionnaire / QuestionnareResponse to make fewer calls.</p>",
        "id": 264069959,
        "sender_full_name": "Milton Mitjans",
        "timestamp": 1638910426
    },
    {
        "content": "<p>You could send a batch request.  Also I think you use _include to get the QuestionnaireResponse with the Questionnaire.</p>",
        "id": 264070135,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1638910509
    },
    {
        "content": "<p>Good Point! Didn't think about it. Thank you all!</p>",
        "id": 264070338,
        "sender_full_name": "Milton Mitjans",
        "timestamp": 1638910610
    },
    {
        "content": "<p>There's no standard search parameter for Task.input or Task.output in R4 (planning to fix in R5).  However, you could certainly define your own to include both when retrieving the Task.</p>",
        "id": 264071394,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1638911041
    },
    {
        "content": "<p>We've done that for at least one or two implementation guides</p>",
        "id": 264071447,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1638911056
    },
    {
        "content": "<p>that include gets a bit funky as its a canonical, and servers may not have that covered yet (ours doesn't, and not sure if HAPI does either)</p>",
        "id": 264113862,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1638941286
    }
]