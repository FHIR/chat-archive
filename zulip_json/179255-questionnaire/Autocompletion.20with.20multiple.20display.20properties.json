[
    {
        "content": "<p>The follow up to issue 15667 on GForge contains this line:  “Need Grahame to confirm that ValueSet.expansion can include properties”.  This discussion around other properties I think might deserve its own issue on GForge.  In general, if you have an external web API providing searches on tables of data (e.g. a provider data table) a form designer may want specify 1) which table fields are displayed to the user in the form as they type into an autocompleting field; 2) which fields are searched in response to the user typing in the field; and 3) which fields just get returned for future use (maybe autopopulation of other fields) but not displayed.</p>\n<p>Even if you have just a code and name, sometimes the form designer may want to display both but only search on the code (as I’ve seen).  Or, you might have a field of synonyms you want searched but not displayed.</p>",
        "id": 153963706,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1526652357
    },
    {
        "content": "<p>That's the intention of the tracker.  But to make it work, we need confirmation we can actually get the relevant properties back when we do a value set expansion.</p>",
        "id": 153963707,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1526653287
    },
    {
        "content": "<p>The original request I wrote  in 15667 was more about controls for 1) laying out questions horizontally in a table and 2) adding column headers for the extra properties of value sets once they were received.  (The first two points in the issue have nothing to do with autocompleting fields, and are listed there with the one about column headers because we thought both could be handled via changes to itemControl.)   I did not ask there about how to specify which properties were retrieved, searched, and displayed.  These other issues are related to the one about column headers for lists with multiple properties, and I am okay discussing these points along with 15667 as long as they do not get lost.  Should I add a follow up?</p>",
        "id": 153963709,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1526655047
    },
    {
        "content": "<p>sure</p>",
        "id": 153963713,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1526655809
    },
    {
        "content": "<p>The question is whether this is asking for purely visual content, or whether there needs to be semantics as well</p>",
        "id": 153963796,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526848611
    },
    {
        "content": "<p>e.g. I want the the following columns displayed, vs here are the properties</p>",
        "id": 153963797,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526848631
    },
    {
        "content": "<p>the former would be a lot less work for a client doing multi-column display, as in this case but is a lot less useful in the general case</p>",
        "id": 153963798,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1526848666
    },
    {
        "content": "<p>Even purely visual content would be an improvement, but in the LHC-Forms case, when a list item is selected, the \"value\" of the field internally is an object with \"code\", \"text\", and \"data\" properties, the latter of which is an object with as many properties as were requested by the form, and which can be used to autopopulate related fields.</p>",
        "id": 153963851,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1526912134
    }
]