[
    {
        "content": "<p>When using Definition-based extraction to extract multiple resources, what's the best way to distinguish them in the result set? It seems a little \"fickle\" to rely on the order of the extracted resources. e.g. Should we use a name field in the extraction context?</p>",
        "id": 273822378,
        "sender_full_name": "Jing Tang",
        "timestamp": 1646234477
    },
    {
        "content": "<p>The resulting operation output is just a bundle of resources, so not sure where naming comes into it?</p>",
        "id": 273880986,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1646257024
    },
    {
        "content": "<p>What's your objective in \"distinguishing\" them?</p>",
        "id": 273914189,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646276101
    },
    {
        "content": "<p>I think it depends on what we believe the application/developers should be able to do with the result set. In the most generic way, yes the result is just a bundle of resources and the application should probably save all of them to a server indistinguishably. But the application may have some knowledge of the expected resources, for example there might be two observations and they want to take the one that's about pulse oximetry. In this case shouldn't there be some facility for the developer/application to distinguish the resources? A name field in the extraction context or something similar? Is this the right way to think about it? Thanks.</p>",
        "id": 274005205,
        "sender_full_name": "Jing Tang",
        "timestamp": 1646327576
    },
    {
        "content": "<p>The Bundle that results would be a transaction Bundle.  The receiver doesn't really have a choice of taking some and not others - at least not if they're processing the Bundle according to the rules.  They can figure out which Observation is the pulseOx by doing a search by code once the data is stored.</p>",
        "id": 274021790,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646334155
    },
    {
        "content": "<p>The spec doesn't actually dictate what to do with that bundle that is produced from the $extract, the caller of that operation will make that decision.</p>",
        "id": 274034645,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1646339265
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191367\">Brian Postlethwaite</span> <a href=\"#narrow/stream/179255-questionnaire/topic/Definition-based.20extraction.20with.20multiple.20resources/near/274034645\">said</a>:</p>\n<blockquote>\n<p>The spec doesn't actually dictate what to do with that bundle that is produced from the $extract, the caller of that operation will make that decision.</p>\n</blockquote>\n<p>thanks this makes sense - i think the question here is that it's quite hard for the caller of that operation to make that decision without any hints on which resources are corresponding to which extraction contexts in the questionnaire</p>",
        "id": 275244559,
        "sender_full_name": "Jing Tang",
        "timestamp": 1647268711
    },
    {
        "content": "<p>In your example about the application wanting the Observation that is \"about pulse oximetry\", wouldn't looking at Observation.code be a way for the application to find that one?</p>",
        "id": 275245376,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1647269073
    },
    {
        "content": "<p>for example, in this page <a href=\"https://developer.commure.com/docs/apis/sdc/examples/\">https://developer.commure.com/docs/apis/sdc/examples/</a> there're examples with named contexts. is this something we should/can use?</p>",
        "id": 275245378,
        "sender_full_name": "Jing Tang",
        "timestamp": 1647269074
    },
    {
        "content": "<p>I'm not really following the use-case.  What sort of traceability are you wanting and why?  You don't need <em>any</em> traceability from 'question' to Observation in order to be able to search the resulting Observations.</p>",
        "id": 275253774,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1647272316
    }
]