[
    {
        "content": "<p>When crating a pre-populated Questionnaire for 1 specific patient: AFAIK there is no reference to the patient (or: subject) resource from the Questionnaire. So how is one supposed to know which pre-pop Q should be answered by which patient ?</p>",
        "id": 176560397,
        "sender_full_name": "René Spronk",
        "timestamp": 1569415687
    },
    {
        "content": "<p>what do you mean by 'a pre-pop' questionnaire?</p>",
        "id": 176560449,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1569415739
    },
    {
        "content": "<p>pre-populated answers pulled from an EHR</p>",
        "id": 176560486,
        "sender_full_name": "René Spronk",
        "timestamp": 1569415765
    },
    {
        "content": "<p>the you need a QuestionniareResponse</p>",
        "id": 176561397,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1569416418
    },
    {
        "content": "<p>The $populate will take the series of parameters which indicate which to use.<br>\nOften these come from the smart on fhir context.</p>",
        "id": 176561646,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1569416585
    },
    {
        "content": "<p>I have a set of slides that walks through the new SDC approach, and my server can now demonstrate it too.</p>",
        "id": 176561672,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1569416614
    },
    {
        "content": "<p>Slide decks are always welcome ;-) .. Ok, so the result is a Q-response. Which means a rendering engine should both be capable of rendering a Q (without pre-population), as well as a Q-response (a partially populated questionnaire). If one renders a Q-response, one would also need the Q, the questions/text is not in the Q-response, but only in the Q.</p>",
        "id": 176579110,
        "sender_full_name": "René Spronk",
        "timestamp": 1569426977
    },
    {
        "content": "<p>right. But since a typical workflow includes 'save and come back', being able to start with a pre-populated QR should be the default</p>",
        "id": 176597223,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1569439259
    },
    {
        "content": "<p>In LHC-Forms, the pre-population is done on the client side, starting with Questionnaire.  The patient data comes from the SMART on FHIR connection.  The QuestionnaireResponse is not created until the user tries to save.</p>",
        "id": 176608096,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1569447851
    },
    {
        "content": "<p>Can someone please help on how I can pre-populate some questions in a questionnaire ? <br>\nIf there are any examples related to it.</p>",
        "id": 263330216,
        "sender_full_name": "Anubhav Gulati",
        "timestamp": 1638381331
    },
    {
        "content": "<p>There's a whole section on pre-population, including links to examples, in the SDC IG <a href=\"https://build.fhir.org/ig/HL7/sdc/populate\">here</a></p>",
        "id": 263339598,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1638385108
    },
    {
        "content": "<p>Thanks.  I am trying to pre-populate a question from database source rather than questionnaire itself. How can I pre-populate the answer of a question from database column ? For example - Assume I have 2 questions , First name and Last Name. I want to fetch the values from database columns and pre-populate it. <br>\nSo, while creating questionnaire, how can I refer a question (item) to give database context ?</p>",
        "id": 263345592,
        "sender_full_name": "Anubhav Gulati",
        "timestamp": 1638387311
    },
    {
        "content": "<p>There's no standard way to do that because there's no standard way to access arbitrary databases or to  provide other context necessary to allow secure and appropriate execution of queries against the database.  That's why all the defined mechanisms in SDC leverage a FHIR interface - there are well-defined standards for performing the query, securing the query, and you know exactly what you'll get back regardless of what server you're filling out the form on.  If you want to create a Questionnaire intended for use with a specific database and with a specific form filler that knows how to query that database, then you could define your own extensions for doing so.  There won't be a standard mechanism though.</p>",
        "id": 263373366,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1638401860
    },
    {
        "content": "<p>Thank you for your inputs.</p>",
        "id": 263459848,
        "sender_full_name": "Anubhav Gulati",
        "timestamp": 1638461085
    }
]