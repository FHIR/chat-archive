[
    {
        "content": "<p>In a questionnaire we have a multiple choice question with repeated answers. We want to extract a separate <code>Observation</code> resource for each answer selected. For example, the user may select 'cough' and 'high blood pressure' and two <code>Observation</code>s should be extracted with the respective codes. We have found this difficult to do using definition-based extraction. 2 ideas: 1) separate each answer option as a single question with a check box with a nested hidden group which has a separate extraction context and includes code to be extracted 2) use enable when to enable separate hidden groups that include separate extraction context and code. Are we on the right track? Any comments / additional ideas? Is structure map recommended for cases like this that are slightly complicated. <span class=\"user-mention\" data-user-id=\"315122\">@Fred Hersch</span> <span class=\"user-mention\" data-user-id=\"426666\">@santosh pingle</span></p>",
        "id": 249116291,
        "sender_full_name": "Jing Tang",
        "timestamp": 1628692362
    },
    {
        "content": "<p>Why are you having issues with definition-based extraction?  It <em>should</em> just be a matter of applying the mechanism once for each answer...</p>",
        "id": 249122932,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1628695187
    },
    {
        "content": "<p>Because definition-based extraction relies on setting context for each expected resource, when we expect each answer to create a new resource, we need to create the hidden groups to make it work. Is there a better way of doing this? Are 1) and 2) as I mentioned reasonable approaches?</p>",
        "id": 249141450,
        "sender_full_name": "Jing Tang",
        "timestamp": 1628703287
    },
    {
        "content": "<p>The context would presumably be the same for each - same patient, same observation code, same effective time, etc.  You'd just instantiate the definition information multiple times - once for each value.</p>",
        "id": 249148057,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1628706106
    },
    {
        "content": "<p>It may be that we should make that expectation explicit in the SDC documentation - feel free to submit a change request.</p>",
        "id": 249148122,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1628706125
    },
    {
        "content": "<p>No the observation code would not be the same -- they are different conditions. Imagine a check box list with different symptoms.</p>",
        "id": 249205427,
        "sender_full_name": "Jing Tang",
        "timestamp": 1628753729
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"414255\">@Aditya K</span></p>",
        "id": 249205838,
        "sender_full_name": "Jing Tang",
        "timestamp": 1628754086
    },
    {
        "content": "<p>Well, either the Observation.code would be the same (\"diagnosis\") or the Observation.value would be the same (\"present\"), depending on how you break them down.</p>",
        "id": 249240198,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1628777827
    },
    {
        "content": "<p>Alternatively use Condition.</p>",
        "id": 249240218,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1628777840
    },
    {
        "content": "<p>Sorry I'm a bit confused. Because these are different symptoms, we want to use different codes (e.g. cough, shortness of breath, etc) in whatever resource we use (either Observation or Condition). So at the very least we need to have different hidden groups with nested hidden questions with initial answers being set to these different codes. And these hidden groups would only be activated(EDIT: enabled) with certain answers given to the multiple choice question. Are you suggesting something different to this?</p>",
        "id": 249333623,
        "sender_full_name": "Jing Tang",
        "timestamp": 1628842192
    },
    {
        "content": "<p>Are your answer values not the codes themselves?</p>",
        "id": 249364634,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1628863702
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> . Here is an example that <span class=\"user-mention\" data-user-id=\"366686\">@Jing Tang</span> is referring too. We want to be able to have a <em>multi-select set of check-boxes</em> to indicate the presence of different symptoms as part of a screener type questionnaire.  Here we are following the pattern (for option 3 or 4) here - <a href=\"https://www.hl7.org/fhir/observation.html#code-interop\">https://www.hl7.org/fhir/observation.html#code-interop</a></p>\n<p>Here is an example of the Questionnaire Item and the output. We are not sure how to implement the correct definition extraction queries to be able to achieve a situation where if you select multiple choices, for each an Observation resource will be created where:</p>\n<p>In this scenario you only create resources for those that have been selected: </p>\n<ul>\n<li>Observation.code = valueCoding of the answerSelected</li>\n<li>Observation.value = valueBoolen(true) - to indicate present</li>\n</ul>\n<div class=\"codehilite\"><pre><span></span><code>&quot;item&quot;: [\n        {\n          &quot;text&quot;: &quot;In the past two weeks have you experienced ANY of these symptoms?&quot;,\n          &quot;type&quot;: &quot;choice&quot;,\n          &quot;linkId&quot;: &quot;1.1.0&quot;,\n          &quot;repeats&quot;: true,\n          &quot;answerOption&quot;: [\n            {\n              &quot;valueCoding&quot;: {\n                &quot;code&quot;: &quot;386661006&quot;,\n                &quot;display&quot;: &quot;Fever&quot;,\n                &quot;system&quot;: &quot;http://snomed.info/sct&quot;\n              }\n            },\n            {\n              &quot;valueCoding&quot;: {\n                &quot;code&quot;: &quot;13645005&quot;,\n                &quot;display&quot;: &quot;Shortness of breath&quot;,\n                &quot;system&quot;: &quot;http://snomed.info/sct&quot;\n              }\n            },\n            {\n              &quot;valueCoding&quot;: {\n                &quot;code&quot;: &quot;49727002&quot;,\n                &quot;display&quot;: &quot;Cough&quot;,\n                &quot;system&quot;: &quot;http://snomed.info/sct&quot;\n              }\n            },\n            {\n              &quot;valueCoding&quot;: {\n                &quot;code&quot;: &quot;44169009&quot;,\n                &quot;display&quot;: &quot;Loss of smell&quot;,\n                &quot;system&quot;: &quot;http://snomed.info/sct&quot;\n              }\n            }\n          ]\n        }\n      ]\n    },\n</code></pre></div>\n<p>In this scenario, for each of the symptoms selected, we will create an Observation resource where the Observation.code = [value of the selected valueCoding] and the Observation.value = valueBoolen (to indicate present or not). For cough this would look like:</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n&quot;resourceType&quot;: &quot;Observation&quot;,\n &quot;id&quot;: &quot;78354025-1059-4f0f-8b04-8478d696d234&quot;,\n  &quot;issued&quot;: &quot;1990-03-12T09:04:10.192-05:00&quot;,\n  &quot;meta&quot;: {\n    &quot;lastUpdated&quot;: &quot;2021-04-01T12:45:31.338652+00:00&quot;,\n    &quot;versionId&quot;: &quot;MTYxNzI4MTEzMTMzODY1MjAwMA&quot;\n  },\n  &quot;status&quot;: &quot;final&quot;,\n  &quot;category&quot;: [\n    {\n      &quot;coding&quot;: [\n        {\n          &quot;code&quot;: &quot;exam&quot;,\n          &quot;display&quot;: &quot;symptoms&quot;,\n          &quot;system&quot;: &quot;http://terminology.hl7.org/CodeSystem/observation-category&quot;\n        }\n      ]\n    }\n  ],\n  &quot;code&quot;: {\n    &quot;coding&quot;: [\n      {\n        &quot;code&quot;: &quot;49727002&quot;,\n        &quot;display&quot;: &quot;Cough&quot;,\n        &quot;system&quot;: &quot;http://loinc.org&quot;\n      }\n    ],\n    &quot;text&quot;: &quot;Cough&quot;\n  },\n  &quot;effectiveDateTime&quot;: &quot;1990-03-12T09:04:10-05:00&quot;,\n  &quot;encounter&quot;: {\n    &quot;reference&quot;: &quot;Encounter/&lt;encounter_id&gt;&quot;\n  },\n  &quot;subject&quot;: {\n    &quot;reference&quot;: &quot;Patient/&lt;patient_id&gt;&quot;\n  },\n  &quot;valueBoolean&quot;: {\n   &quot;value&quot; : &quot;true&quot;\n  }\n}\n</code></pre></div>",
        "id": 249538270,
        "sender_full_name": "Fred Hersch",
        "timestamp": 1629074420
    },
    {
        "content": "<p>Observation-based extraction is not designed for situations where the answer goes in the Observation.code and the Observation.value is fixed to true.  Observation.value is used for situations where the Observation.code comes from item.code and Observation.value comes from item.answer.value[x].  To do what you want, you'll have to use definition-based extraction.</p>",
        "id": 249587529,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1629120148
    },
    {
        "content": "<p>I think the question is how can that work with the definition-based extraction. <br>\nObservation-based is too limited, which is one reason I presume Jing has gone directly to definition-based extraction</p>",
        "id": 249640933,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1629144623
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span>, have you encountered this?</p>",
        "id": 249655662,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1629152285
    },
    {
        "content": "<p>That doesn't feel like definition would be expressive enough for that either.<br>\nI've done multiple resources from different sections of a questionnaire, not from one question to multiple.</p>",
        "id": 249656052,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1629152574
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span>! the approach we have taken is using enableWhen + hidden groups, so that groups are enabled (but remain hidden) with certain answers being present in the multiple choice question... this requires each hidden group to have a separate context and is slightly fiddly. but seems to work. not sure if there's a better approach -- we can also explore structure map (which we have a prototype) but we will need to author the structure map.</p>",
        "id": 249704314,
        "sender_full_name": "Jing Tang",
        "timestamp": 1629199311
    }
]