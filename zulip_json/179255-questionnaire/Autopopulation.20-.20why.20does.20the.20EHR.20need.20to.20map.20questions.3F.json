[
    {
        "content": "<p>Hi Everyone,</p>\n<p>Epic implemented the <a href=\"https://wiki.ihe.net/index.php/Retrieve_Form_for_Data_Capture\" target=\"_blank\" title=\"https://wiki.ihe.net/index.php/Retrieve_Form_for_Data_Capture\">IHE RFD</a> profile many, many years ago.  Like the FHIR SDC IG, the basic workflow is that the EHR bundles up patient data (in a CDA) and pushes that data to the questionnaire/form owner when the form is requested. This allows the manager of the form to pre-populate some questions  with data from the CDA/Bundle.</p>\n<p>Ultimately, our implementation of RFD has seen surprisingly limited implementations for a few reasons:<br>\n1) There's too much data - the EHR sends all the data, not just what the form needs. Especially for inpatient, our CCDs can be massive, slowing down the process of generating, transmitting and parsing the document. <br>\n2)  It's not the right data. Any given form/questionnaire only needs a small number of very specific data elements. As the form changes or the EHR's support of the standard data model (CDA, FHIR, etc) increases, the EHR must adjust what it sends. </p>\n<p>I think that CDS Hooks handles these problems well because the responsibility for gathering and mapping data is owned by the system that knows and controls what data is needed (the external cds service). The analogy is that the form owner should be querying the FHIR server to gather data. The Form Filler ought not to be responsible for interpreting the information needed by the form that it doesn't own. </p>\n<p>Can the form manager be enabled to query the form filler's FHIR server in lieue of the form filler attempting to map and provide the data up front?</p>\n<p>Isaac</p>",
        "id": 153954519,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1524751698
    },
    {
        "content": "<p>We're going to be talking about better approaches to pre-population/auto-population with the SDC project shortly after cologne.  One of the possibilities is to allow a Questionnaire to define a Batch of queries that could be executed that would provide the data needed (partially?) populate the form.  Whether the client would take it upon itself to run the queries and then invoke the \"populate\" operation passing in the Bundle, or whether the form filler would do a call-back to invoke the queries, I'm not sure.  Perhaps there'd be use-cases for both approaches.</p>",
        "id": 153954558,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1524763058
    },
    {
        "content": "<p>That's exactly the approach that we've implemented with custom extensions <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> , and works pretty well to date.<br>\nWe pass the Questionnaire resource to the FHIR server along with the smart on fhir context to populate and return as a QuestionnaireResponse.<br>\nThis was the FHIR server is able to run only the queries that it needs to for extracting the data, and nothing else apart from what was explicitly asked for is returned.</p>",
        "id": 153954663,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1524777744
    },
    {
        "content": "<p>Happy/keen to discuss this in Cologne if it comes up.</p>",
        "id": 153954664,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1524777790
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> - If you get a chance, would you mind explaining this a bit more:</p>\n<blockquote>\n<p>pass the Questionnaire resource to the FHIR server along with the smart on fhir context </p>\n</blockquote>\n<p>I'm not a fan of the <a href=\"http://hl7.org/fhir/us/sdc/index.html#workflow\" target=\"_blank\" title=\"http://hl7.org/fhir/us/sdc/index.html#workflow\">SDC actor terminology</a>, but for the hope of clarity - <br>\n1) The Form Filler requests the questionnaire from the Form Manager. <br>\n2) The Form Manager responds to this request with the FHIR Questionnaire as well as a SMART json object (incl. context and access_token).  <br>\n3) The Form Filler queries the FHIR server to auto-populate the form. <br>\n4) The user completes the form. The Form Filler system POSTs the QuestionnaireResponse to the Form Receiver. </p>\n<p>Did I get that right?</p>\n<p>Which SDC actor is the FHIR server? the OAuth server?</p>\n<p>Isaac</p>",
        "id": 153954786,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1524839133
    },
    {
        "content": "<p>\"The Form Manager responds to this request with the FHIR Questionnaire as well as a SMART json object \" - not my expectation. why would the form manager have a smart json object - a json object that says what about what?</p>",
        "id": 153954873,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524873472
    },
    {
        "content": "<p>I would expect that there are multiple fhir servers in play here - the form manager, the form filler's data store(s), and the form reciever</p>",
        "id": 153954874,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524873528
    },
    {
        "content": "<p>might have to oauth to all of them</p>",
        "id": 153954875,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524873538
    },
    {
        "content": "<blockquote>\n<p>Hi Everyone,</p>\n<p>Epic implemented the <a href=\"https://wiki.ihe.net/index.php/Retrieve_Form_for_Data_Capture\" target=\"_blank\" title=\"https://wiki.ihe.net/index.php/Retrieve_Form_for_Data_Capture\">IHE RFD</a> profile many, many years ago.  Like the FHIR SDC IG, the basic workflow is that the EHR bundles up patient data (in a CDA) and pushes that data to the questionnaire/form owner when the form is requested. This allows the manager of the form to pre-populate some questions  with data from the CDA/Bundle.</p>\n<p>Ultimately, our implementation of RFD has seen surprisingly limited implementations for a few reasons:<br>\n1) There's too much data - the EHR sends all the data, not just what the form needs. Especially for inpatient, our CCDs can be massive, slowing down the process of generating, transmitting and parsing the document. <br>\n2)  It's not the right data. Any given form/questionnaire only needs a small number of very specific data elements. As the form changes or the EHR's support of the standard data model (CDA, FHIR, etc) increases, the EHR must adjust what it sends. </p>\n<p>I think that CDS Hooks handles these problems well because the responsibility for gathering and mapping data is owned by the system that knows and controls what data is needed (the external cds service). The analogy is that the form owner should be querying the FHIR server to gather data. The Form Filler ought not to be responsible for interpreting the information needed by the form that it doesn't own. </p>\n<p>Can the form manager be enabled to query the form filler's FHIR server in lieue of the form filler attempting to map and provide the data up front?</p>\n<p>Isaac</p>\n</blockquote>\n<p>Hi Isaac, </p>\n<p>This is a great point about RFD, it's simply too limited. However I think that there are use cases where the Form Filler needs to be able to handle the data without interaction from the Form Manager. E.g. if your Form manager is a jurisdictional form manager providing data to multiple sites, you probably don't want to unnecessarily send patient data to the Form manager for pre-population. It makes much more sense for the Form filler to pre-populate the form to avoid sharing of patient data.</p>",
        "id": 153955440,
        "sender_full_name": "Alex Goel",
        "timestamp": 1525286218
    },
    {
        "content": "<blockquote>\n<p>I would expect that there are multiple fhir servers in play here - the form manager, the form filler's data store(s), and the form reciever</p>\n</blockquote>\n<p>I assumed the expectation was that these would be 3+ separate servers. FM, FF, FR, and a data store hit by the FF. Is \"1) The Form Filler requests the questionnaire from the Form Manager.\" likely a GET or a POST? Is the request a GET, then the response a POST?</p>",
        "id": 153955441,
        "sender_full_name": "Alex Goel",
        "timestamp": 1525286394
    },
    {
        "content": "<p>response - you mean outcome of filling in the form? a post is most likely for me</p>",
        "id": 153956100,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525495250
    }
]