[
    {
        "content": "<p>(Bonus points if someone can help point me to the relevant docs; I just spent ~20min trying to find this in guidance at <a href=\"http://build.fhir.org/questionnaire\">http://build.fhir.org/questionnaire</a> and <a href=\"http://build.fhir.org/questionnaireresponse\">http://build.fhir.org/questionnaireresponse</a>.)</p>",
        "id": 251587316,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630513277
    },
    {
        "content": "<p>/poll Let's say I have a Questionnaire with a single question (\"tell me the name of a color you like\"), and it's marked as \"repeats\". Now, a user supplies answers indicating they like \"Red\", and \"Green\", and \"Blue\". Does the resulting QuestionnaireReponse...</p>",
        "id": 251588908,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630513846
    },
    {
        "content": "<p>Looks like there isn't explicit guidance that says you can't do #2 - we never contemplated anyone would try.  (The fact that QuestionnaireResponse.item.answer repeats I would have thought made the answer obvious.)  Feel free to submit a tracker item.</p>",
        "id": 251593867,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630515751
    },
    {
        "content": "<p>I don't think that's obvious.  In its internal (non-FHIR) format, for a string data type (i.e. not a list) that repeats, LHC-Forms would have three items for these three answers.  LHC-Forms converts those on export to QuestionnaireResponse into a single item with multiple answers.</p>",
        "id": 251594561,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1630516012
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> are there circumstances where any of the following would not hold?</p>\n<hr>\n<h3>Top-level items with the same linkId</h3>\n<div class=\"codehilite\"><pre><span></span><code>QuestionnaireResponse\n  .item.where(value.exists())\n  .linkId\n  .isDistinct()\n</code></pre></div>\n<p>I'm guessing this is always true.</p>\n<hr>\n<h3>Sibling answer.items with the same linkId</h3>\n<div class=\"codehilite\"><pre><span></span><code>QuestionnaireResponse\n  .descendants()\n  .answer\n  .select(\n      item\n      .where(value.exists())\n      .linkId\n      .isDistinct())\n  .allTrue()\n</code></pre></div>\n<p>I'm guessing this is always true?</p>\n<hr>\n<h3>Sibling item.items with the same linkId</h3>\n<div class=\"codehilite\"><pre><span></span><code>QuestionnaireResponse\n  .descendants()\n  .item\n  .select(\n      item\n      .where(value.exists())\n      .linkId\n      .isDistinct())\n  .allTrue()\n</code></pre></div>\n<p>I'm guessing this  is always true.</p>\n<hr>\n<p>(As you can see, I'm thinking about how to formalize this, and trying to test my understanding at the same time. I suspect there's some interaction with item.type=group that I'm not quite grokking. I'm using <code>.where(value.exists())</code> as a kind of proxy for question-type items, since the item type is only modeled in the Questionnaire, not surfaced in the QuestionnaireResponse.)</p>",
        "id": 251604096,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630519881
    },
    {
        "content": "<p>The definition of \"repeats\" today says:</p>\n<blockquote>\n<p>An indication, if true, that the item may occur multiple times in the response, collecting multiple answers for questions or multiple sets of answers for groups.</p>\n</blockquote>\n<p>but if I'm understanding Lloyd's answer to the poll correctly, then \"collecting multiple answer for questions\" is <em>not</em> a use case where the item will occur multiple times in the response (rather, the item will occur once and there will be multiple answers within it). I've submitted <a href=\"http://jira.hl7.org/browse/FHIR-33335\">FHIR-33335</a> to start, but I don't understand enough to know what exactly to propose.</p>",
        "id": 251607866,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630521346
    },
    {
        "content": "<p>If your root item is a group and it repeats, then there will be multiple items with the same link id at the root.</p>",
        "id": 251616772,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630525104
    },
    {
        "content": "<p>Same is true at the non-root level</p>",
        "id": 251616833,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630525127
    },
    {
        "content": "<p>It's only sibling questions that must have distinct linkIds.</p>",
        "id": 251616889,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630525148
    },
    {
        "content": "<p>Cool -- so I think the fhirpath I wrote above is <del>all</del> roughly correct, and if so can be lumped together in a constraint like:</p>\n<div class=\"codehilite\"><pre><span></span><code>QuestionnaireResponse\n  .union(descendants())\n  .select(\n    item.where(answer.value.exists())\n    .linkId\n    .isDistinct())\n.allTrue()\n</code></pre></div>",
        "id": 251619388,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630526151
    },
    {
        "content": "<p>I've updated the issue to propose this in addition to language tweaks.</p>",
        "id": 251620279,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630526522
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> That doesn't look correct to me, for that case Lloyd mentioned of a repeating group.  A QuestionnaireResponse that had two instances of a repeating group will repeat not just the group linkIDs, but the linkIDs of the answered questions within the group.</p>",
        "id": 251647207,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1630540919
    },
    {
        "content": "<p>Example:</p>",
        "id": 251647248,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1630540924
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>        {\n          &quot;linkId&quot;: &quot;/54126-8/54137-5&quot;,\n          &quot;text&quot;: &quot;Diseases history panel&quot;,\n          &quot;item&quot;: [\n            {\n              &quot;linkId&quot;: &quot;/54126-8/54137-5/54140-9&quot;,\n              &quot;text&quot;: &quot;History of diseases&quot;,\n              &quot;answer&quot;: [\n                {\n                  &quot;valueCoding&quot;: {\n                    &quot;code&quot;: &quot;3982&quot;,\n                    &quot;display&quot;: &quot;Abdominal pain&quot;\n                  }\n                }\n              ]\n            }\n          ]\n        },\n        {\n          &quot;linkId&quot;: &quot;/54126-8/54137-5&quot;,\n          &quot;text&quot;: &quot;Diseases history panel&quot;,\n          &quot;item&quot;: [\n            {\n              &quot;linkId&quot;: &quot;/54126-8/54137-5/54140-9&quot;,\n              &quot;text&quot;: &quot;History of diseases&quot;,\n              &quot;answer&quot;: [\n                {\n                  &quot;valueCoding&quot;: {\n                    &quot;code&quot;: &quot;2315&quot;,\n                    &quot;display&quot;: &quot;Back pain&quot;\n                  }\n                }\n              ]\n            }\n          ]\n        }\n</code></pre></div>",
        "id": 251647263,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1630540932
    },
    {
        "content": "<p>(That example comes from <a href=\"https://lhcforms.nlm.nih.gov/sdc\">https://lhcforms.nlm.nih.gov/sdc</a>.  After picking a form to view, you can choose \"Show As\"-&gt;\"QuestionnaireResponse\".)</p>",
        "id": 251647885,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1630541452
    },
    {
        "content": "<p>I don't think the example you shared here would violate the constraint I proposed -- at least, I believe \".where(item.value.exists())\" should effectively ignore any group-type items because they have no direct answers. Does this make sense, or am I still confused?</p>",
        "id": 251650306,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630543357
    },
    {
        "content": "<p>You called descendants(), which will pick up the children of the repeated group, namely the items with the same linkId that have answers.</p>",
        "id": 251650539,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1630543539
    },
    {
        "content": "<p>But I think I misread your FHIRPath expression.  I thought it was checking that all of the linkId for items with answers are distinct.  Did you mean to put the isDistinct() inside the select(...)?</p>",
        "id": 251651202,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1630544065
    },
    {
        "content": "<p>I am checking that the linked IDs for items <em>that are sibling members of the same array</em> and also have answers... are unique. I want this to be true for each items array, but not a cross them. In other words, for every item array \"A\" at any level of the hierarchy: look at just the items of A that have answers, and and sure their link IDs are unique <em>within A</em>.. That's why isDistinct() sits inside of the select.</p>",
        "id": 251651423,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630544290
    },
    {
        "content": "<p>Okay, that looks correct then.  Sorry for the confusion.  I should have tested it first.</p>",
        "id": 251651965,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1630544745
    },
    {
        "content": "<p>It's a hard expression to parse in your head :)</p>",
        "id": 251659912,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1630552282
    },
    {
        "content": "<p>I'm very open to ideas for better ones. The main thrust is to capture what seems to be implicit knowledge of the rules in an explicit + computable fashion</p>",
        "id": 251713123,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630588738
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> Do you see any issue with replacing QuestionnaireResponse<br>\n  .union(descendants()) with QuestionnaireResponse.union(repeat(item))?  It avoids picking up a bunch of nodes that won't have items as children.</p>",
        "id": 251714582,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1630589369
    },
    {
        "content": "<p>Won't that just find paths like .item.item.item and miss paths like .item.answer.item ?</p>",
        "id": 251715411,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630589685
    },
    {
        "content": "<p>There may be a variant of <code>repeat(item | answer)</code> that works though.</p>",
        "id": 251715503,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630589728
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>(QuestionnaireResponse | repeat(answer | item))\n.select(\n  item.where(answer.value.exists())\n  .linkId.isDistinct())\n.allTrue()\n</code></pre></div>\n<p>This works, I think.</p>",
        "id": 251755916,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1630604793
    },
    {
        "content": "<p>Yes, that looks good.  Another issue with descendants() is would pick up resources under \"contains\"-- so this is better.</p>",
        "id": 251760695,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1630606470
    },
    {
        "content": "<p>Fhirpath ninjas!</p>",
        "id": 251811016,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1630633314
    }
]