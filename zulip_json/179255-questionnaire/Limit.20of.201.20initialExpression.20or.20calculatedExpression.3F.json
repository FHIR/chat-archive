[
    {
        "content": "<p>I think that logically, it does not make sense for a field to have more than one initialExpression, or more than one calculatedExpression, and (probably) not more than one of either.  Is there anything in the spec to say that a valid questionnaire will not have more that one of those?</p>",
        "id": 154024471,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1544546228
    },
    {
        "content": "<p>The cardinality of each should have a max of 1.  We could add context invariants to each that would prevent there from being more than one of both</p>",
        "id": 154024484,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544548154
    },
    {
        "content": "<p>Okay-- I see there is a cardinality setting of  0..1 on those extensions.</p>",
        "id": 154024491,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1544549150
    },
    {
        "content": "<p>If you think it's important to enforce the cross-extension cardinality limit, you can submit a change request</p>",
        "id": 154024492,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544549469
    },
    {
        "content": "<p>I am unsure about that.  As a contrived example, suppose you have a BMI field.  You might want an initialExpression to load in the previous BMI value, and then have a calculatedExpression to update it when height and weight values (which could start out blank, preventing the calculatedExpression from running) are filled in.</p>",
        "id": 154024493,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1544550705
    },
    {
        "content": "<p>One of the things we haven't done with calculatedValue yet is declare at what point the value gets calculated - does there have to be an answer for all of the questions?</p>",
        "id": 154024500,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544551713
    },
    {
        "content": "<p>The spec says, \"Calculated value is updated as other answers in the QuestionnaireResponse are filled in\".  I was assuming this meant, \"whenever a value changes, run the calculatedExpressions\".</p>",
        "id": 154024522,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1544555707
    },
    {
        "content": "<p>And the renderer could be smart about it, maybe.</p>",
        "id": 154024666,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1544580936
    },
    {
        "content": "<p>If by \"smart\" you mean being selective about which expressions need to be run, I don't see a way to do that with the current spec.  You do not know in advance what other answers a FHIRPath expression might reference, and the set of answers it references could change from one run to the next.  In LHC-Forms, we specify explicitly what the source items are, so we only run what is needed when one of the source items changes.  It would be nice if something like that were in Questionnaire, though for small forms it doesn't seem to hurt too much to run them all.</p>",
        "id": 154024805,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1544627303
    }
]