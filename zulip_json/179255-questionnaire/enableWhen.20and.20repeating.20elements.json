[
    {
        "content": "<p>Can a question outside a repeating group have an enableWhen referring a linkId within that repeating group?</p>\n<p>The definition at <a href=\"http://hl7.org/fhir/questionnaire-definitions.html#Questionnaire.item.enableWhen.question\" target=\"_blank\" title=\"http://hl7.org/fhir/questionnaire-definitions.html#Questionnaire.item.enableWhen.question\">http://hl7.org/fhir/questionnaire-definitions.html#Questionnaire.item.enableWhen.question</a> seems not to handle that case.</p>\n<p>We have looked at this in our Form Filler and is considering \"isolating\" repeating groups such that an enableWhen can only refer to items within the repeating group, if itself is within that group. Thereby disallowing a question outside a repeating group to have an enableWhen referring a linkId within that repeating group</p>",
        "id": 188385182,
        "sender_full_name": "Kenneth Myhra",
        "timestamp": 1581951991
    },
    {
        "content": "<p>Certainly we should have some clarity around the behavior here.  Care to submit a change request?</p>\n<p>As currently defined, I believe the enableWhen would be driven by the 'nearest' repetition (first for a following group, last for a preceding group), but that's rather odd behavior and probably not too useful.</p>",
        "id": 188388975,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1581955035
    },
    {
        "content": "<p>That’s the same conclusion we came to. I’ll submit a change request</p>",
        "id": 188391297,
        "sender_full_name": "Kenneth Myhra",
        "timestamp": 1581956997
    },
    {
        "content": "<p><a href=\"https://jira.hl7.org/browse/FHIR-26312\" target=\"_blank\" title=\"https://jira.hl7.org/browse/FHIR-26312\">FHIR-26312</a></p>",
        "id": 188397343,
        "sender_full_name": "Kenneth Myhra",
        "timestamp": 1581962706
    },
    {
        "content": "<p>Would a case where you have a follow up group after a repeating section that checks inside for the presence of a specific question answer/combination of answers to enable it to ask?<br>\n(I don't have a need for it, but was just considering possibilities that might make sense)</p>",
        "id": 188415937,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1581986836
    },
    {
        "content": "<p>We actually went briefly through the use case you're suggesting. I was a bit wary of the level of complexity it could add, but looking at your definition it might not be that complicated. I'm also thinking that it does not necessarily need to physically come after the repeating section although that would probably make sense from UX level.</p>",
        "id": 188431371,
        "sender_full_name": "Kenneth Myhra",
        "timestamp": 1582014052
    },
    {
        "content": "<p>Does this sound like a possible rule set that could work for my original question and Brian's suggested additional use case?</p>\n<ul>\n<li>An enableWhen within a repeating group can only refer to items within one instance of the repeating group, effectively isolating its context</li>\n<li>An enableWhen that lives outside a repeating section, but refers to items in a repeating section will be enabled if the presence of a specific answer or combination of answers exists</li>\n</ul>",
        "id": 188537802,
        "sender_full_name": "Kenneth Myhra",
        "timestamp": 1582113663
    },
    {
        "content": "<p>My preference is that if we're going to talk about pointing into repeating things, you should use enableWhenExpression - that allows you to define very concretely what your expectations are (all of, at least one of, etc.)</p>",
        "id": 188557646,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582128305
    },
    {
        "content": "<p>Agree, I was not aware of that one</p>",
        "id": 188565090,
        "sender_full_name": "Kenneth Myhra",
        "timestamp": 1582133063
    },
    {
        "content": "<p>Agree with using expression there.</p>",
        "id": 188623687,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1582192400
    }
]