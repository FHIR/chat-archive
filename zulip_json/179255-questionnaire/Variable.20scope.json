[
    {
        "content": "<p><a href=\"http://hl7.org/fhir/R4/extension-variable.html\">http://hl7.org/fhir/R4/extension-variable.html</a> says, \"The name of the variable will be added to FHIRPath's context when processing descendants of the element that contains this extension.\"  What about when processing the element (item) itself?  The LHC-Forms implementation supports calculatedExpression referencing variables defined on the same item.  I suppose that it not necessary, but it is nice to have all the expressions listed together on the same item.</p>",
        "id": 213456458,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1602781512
    },
    {
        "content": "<p>Yes, should add for the current node too.  Change request for us to clarify?</p>",
        "id": 213457048,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1602781773
    },
    {
        "content": "<p>Very good!  We will have at least one thing to vote on at today's call.  <a href=\"http://jira.hl7.org/browse/FHIR-29264\">J#29264</a>.</p>",
        "id": 213458727,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1602782552
    },
    {
        "content": "<p>No call today</p>",
        "id": 213459399,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1602782877
    },
    {
        "content": "<p>(I'd already cancelled it - have a conflict)</p>",
        "id": 213459451,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1602782890
    },
    {
        "content": "<p>SHould be an easy approval item for next week though</p>",
        "id": 213459471,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1602782900
    },
    {
        "content": "<p>Okay-- and thanks for the reminder.</p>",
        "id": 213459590,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1602782953
    },
    {
        "content": "<p>Um, on the same node?<br>\nJust let me assume that they wouldn't be able to see each other.</p>",
        "id": 213861253,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1603151857
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> Why not?  It already possible to construct a variable and a calculatedExpression that \"see each other\" on different nodes.  It seems like an unnecessary and complicating restriction to require that you can't refer to variables on the same item.  The same issue arises between variables.  If your formula is complicated, you might want to define on the same item:</p>\n<div class=\"codehilite\"><pre><span></span><code>varA = complicated expression\nvarB = (varA + ...)/(varA + otherVar)\n</code></pre></div>\n\n\n<p>You would not want to require that varA and varB be different items, which might require the introduction of a new group item into the form simply for sake of putting a variable on it.</p>",
        "id": 213910228,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1603196553
    },
    {
        "content": "<p>If you are worried about dependency loops, that possibility is warned against in section on <a href=\"https://build.fhir.org/ig/HL7/sdc/expressions.html#dependencies-between-expressions\">expression dependencies</a>.  It is up to the Questionnaire author to avoid such situations, and rendering system is supposed to detect them and produce an error message.</p>",
        "id": 213931514,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1603205952
    },
    {
        "content": "<p>Variables could even refer to other variables.  The key is to make clear that order of appearance matters and to define the order in which evaluation needs to occur</p>",
        "id": 213932526,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603206361
    },
    {
        "content": "<p>I had the same thought, that we should specify that, but now I am not sure the order of evaluation matters.  My understanding is you keep evaluating things until the values stabilize.</p>",
        "id": 213933104,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1603206590
    },
    {
        "content": "<p>From <a href=\"https://build.fhir.org/ig/HL7/sdc/expressions.html#dependencies-between-expressions\">5.4.1</a>:  \"However, in some cases, updates to later elements may trigger an update to earlier elements, which then cascade through again. Systems should allow for this and allow for iterative updating of expressions until values reach a stable state - or until an unstable looping condition is detected. \"</p>",
        "id": 213933592,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1603206755
    },
    {
        "content": "<p>I'm thinking more about whether forward referencing of variables is allowed.  I.e. can you declare a variable that depends on bar, then declare bar (within the same element)?  I would think that would be somewhat hinky.  However, if no one thinks it's a problem, I'm fine with not defining any constraints.</p>",
        "id": 213935457,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1603207482
    },
    {
        "content": "<p>I don't know why you would write it that way, but it should not cause a problem (except maybe make it run a little slower, because it would need an extra iteration of evaluation).  Variables can depend on fields which initially do not have a value, but they have to get processed anyway.  A variable depending on another variable that doesn't have a value is handled the same way, and does not need to care whether that other variable is \"defined\" yet.  Of course, some implementation might keep a list of defined variables, I suppose, and then have an issues with Questionnaires that were using forward-references.  Perhaps it is better to be explicit about whether that is allowed or not.  But, if we disallow it, I would like it be worded in such a way that it does require that systems that don't care do extra error checking that is not necessary.</p>",
        "id": 213936454,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1603207925
    },
    {
        "content": "<p>My engine was evaluating the expression, putting it into the variable then permitting its use. So it couldn't use other variables not already declared, as they don't exist (yet) - not in scope.<br>\nBut I guess they could use ones at the same level declared before them.</p>",
        "id": 213992430,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1603237047
    },
    {
        "content": "<p><a href=\"http://jira.hl7.org/browse/FHIR-29329\">J#29329</a>, \"Allow variables to be in scope on their own element\"</p>",
        "id": 214084511,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1603300834
    },
    {
        "content": "<p>Is there anything preventing a variable be \"re-defined\" on a child item?</p>",
        "id": 257450561,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1634165052
    },
    {
        "content": "<p>And now that I'm implementing support for this, what is the scope of a variable on a repeating group?<br>\nWhile processing, does it contain the nodes of all items, or just the repetition that it is processing at a time (asking as this would impact aggregates)</p>",
        "id": 257462210,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1634172770
    },
    {
        "content": "<p>Not a particularly valid example, but I think it kinda shows the potential issues<br>\n(wanting to have the height/weight variables on a per item basis)<br>\n<a href=\"/user_uploads/10155/8pSpFopbQrvZ2i_3n26a_8FS/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/8pSpFopbQrvZ2i_3n26a_8FS/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/8pSpFopbQrvZ2i_3n26a_8FS/image.png\"></a></div>",
        "id": 257462520,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1634172978
    },
    {
        "content": "<p>Also wondering if there's a way to access properties/extensions from a coding (or answerCoding) from the response (while using expressions)</p>",
        "id": 257470588,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1634179080
    },
    {
        "content": "<p>Yes.  We've said that it's an error for the name to exist multiple times within the same scope.</p>",
        "id": 257471668,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1634180125
    },
    {
        "content": "<p>Another example for the variable scope context discussion<br>\n<a href=\"/user_uploads/10155/9no3SM2WocQT2zAvAnroOzZ_/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/9no3SM2WocQT2zAvAnroOzZ_/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/9no3SM2WocQT2zAvAnroOzZ_/image.png\"></a></div>",
        "id": 257604968,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1634245188
    }
]