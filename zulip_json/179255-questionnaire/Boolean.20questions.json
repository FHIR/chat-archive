[
    {
        "content": "<p>If an item is of type boolean, one could either render that as a checkbox, or as two radio buttons.</p>\n<p>The problem with the checkbox is that it always in one state or other, and there is no \"unanswered\" state.  If you render a Questionnaire with a checkbox, then when you export the QuestionnaireResponse, that answer will have to have a value regardless of whether the user made a selection or not.</p>\n<p>If you render a boolean item as two radio buttons, those buttons need labels, which I guess would be \"True\" and \"False\", though there might be cases were a user would prefer \"Yes\" and \"No\".  Should a form designer be able to specify those labels?</p>\n<p>With only two radio buttons, there can be an initial \"unanswered\" state, but once the user makes a selection, there is no way to get back to the unanswered state.  So, maybe three radio buttons are needed-- \"True\" , \"False\", and \"No answer\"?</p>",
        "id": 171726192,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1564087590
    },
    {
        "content": "<p>Some systems have 3-state check boxes  that can differentiate and toggle through \"no answer\"</p>",
        "id": 171733850,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564094530
    },
    {
        "content": "<p>I think and implement bool as a check box, if you want radiobutton bool magically turns into a coding.</p>",
        "id": 171738055,
        "sender_full_name": "Eric Haas",
        "timestamp": 1564099788
    },
    {
        "content": "<p>That's really a form design question, and same with a checkbox, it has a value of false until someone ticks it.<br>\nIf you really want the 3 value logic, using a coding...</p>",
        "id": 171740501,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1564103802
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span>  &amp; <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span>  So if you just use a 2-state checkbox, if the user does not touch the checkbox, do you include \"false\" as an answer in the QuestionnaireResponse?</p>",
        "id": 171782378,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1564154307
    },
    {
        "content": "<p>I'd have to look into my implementation, but probably.</p>",
        "id": 171822155,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1564188568
    },
    {
        "content": "<p>Might there be an interoperability problem if some some systems use 3-state checkboxes and some 2-state?</p>",
        "id": 171955449,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1564414012
    },
    {
        "content": "<p>Generally speaking, systems should be able to differentiate between questions that have been answered vs. those that are filled in with a default answer.  If there's no default answer specified, the answer should be omitted.  And it should be possible to 'wipe' an answer previously submitted if a users so wishes.</p>",
        "id": 171956173,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564414493
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span>  In LHC-Forms widget,  for the Boolean type If the checkbox is not touched by the users, there would be no value captured in QuestionnaireResponse. Once it's touched, the value has to be ether true or false. There are probably use cases that need an \"unanswered\" state even after users have touched.</p>",
        "id": 171956179,
        "sender_full_name": "Ye Wang",
        "timestamp": 1564414498
    },
    {
        "content": "<p>We can't assume that booleans, numbers, etc. have default values not declared in the form.</p>",
        "id": 171956213,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564414518
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> I believe we handle that correctly in LHC-Forms widget. Just not sure if we need to give user an option to back to the \"unanswered\" state once he/she makes a selection.</p>",
        "id": 171956416,
        "sender_full_name": "Ye Wang",
        "timestamp": 1564414658
    },
    {
        "content": "<p>Ctrl-Z should at a minimum.  And it's good practice to be able to go back to an 'unknown' state.  Not sure we should make it a SHALL in the spec, but I'd be in favor of a change request that makes it a SHOULD</p>",
        "id": 171957011,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564414982
    },
    {
        "content": "<p>which spec?</p>",
        "id": 171977512,
        "sender_full_name": "Eric Haas",
        "timestamp": 1564429741
    },
    {
        "content": "<p>SDC, probably.  Though I could get talked into putting it into core</p>",
        "id": 171983887,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564434697
    },
    {
        "content": "<p>Allowing check boxes to be reset to unknown should be good practice. It is sad that an exchange specification needs to go to that level of human interface design. <span aria-label=\"frown\" class=\"emoji emoji-1f641\" role=\"img\" title=\"frown\">:frown:</span></p>",
        "id": 171998612,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1564451689
    },
    {
        "content": "<p>It doesn't necessarily <em>need</em> to - but doing so will likely increase the quality of FHIR-based systems...</p>",
        "id": 172001516,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1564456310
    },
    {
        "content": "<p><a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23019\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23019\">GF#23019</a></p>",
        "id": 172050887,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1564502387
    }
]