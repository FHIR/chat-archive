[
    {
        "content": "<p>I'm working on updating the core Questionnaire resource based on the change request to remove 'choice' and 'open-choice' types (See <a href=\"https://jira.hl7.org/browse/FHIR-20396\">https://jira.hl7.org/browse/FHIR-20396</a>).  Since we're removing these types, this invariant on 'item' is not applicable anymore:</p>\n<p>que-5: Only 'choice' and 'open-choice' items can have answerValueSet</p>\n<p>I've discussed this with Lloyd and he thinks, this invariant should be updated so answerValueSet should only be allowed for 'coding', 'string' and 'url' type questions.  Any thoughts or concerns?</p>",
        "id": 208772052,
        "sender_full_name": "Joee Garcia",
        "timestamp": 1599012344
    },
    {
        "content": "<p>url type questions?</p>",
        "id": 208898333,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1599086923
    },
    {
        "content": "<p>Can a ValueSet contain something other than Coding?</p>",
        "id": 208898531,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1599087063
    },
    {
        "content": "<p>According to Lloyd, you can only get codes on ValueSets but you can treat them as strings (ie you can have codes like \"Canada\", \"U.S.\" and treat them as strings  for an address part).   For url, he said there are places where you actually have a list of URLs as pseudo codes so it should be applicable, too.</p>",
        "id": 208978691,
        "sender_full_name": "Joee Garcia",
        "timestamp": 1599144486
    },
    {
        "content": "<p>That would require the form renderer to know that if there is an item of type 'string' or 'url', it should convert Codings into strings by taking just the code part.  Is there something in the specification that suggests the form renderer should do that?   When showing the list for the user to pick from, would it then show the code attributes rather than the display attributes?</p>",
        "id": 208984492,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1599146770
    },
    {
        "content": "<p>We should probably add some explicit language making clear that's possible - care to submit a change request? :)</p>",
        "id": 208985191,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1599147083
    },
    {
        "content": "<p>I am not sure it is a change I want.  Who is it that wants answerValueSet for items of type string or url?  Why wouldn't you just use type \"coding\"?</p>",
        "id": 208985648,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1599147245
    },
    {
        "content": "<p>Because the element you're mapping to is type string - e.g. Address.country or Address.state, HumanName.prefix, etc.</p>",
        "id": 209008131,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1599156696
    },
    {
        "content": "<p>If you are creating a StructureMap to extract from Questionnaire to something containing an Address or HumanName, presumably that StructureMap could handle an answer with a Coding, couldn't it?   It doesn't seem like form renderer's role to know how to convert a Coding to a string.</p>",
        "id": 209011966,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1599158530
    },
    {
        "content": "<p>It's commonly done in profiles - so it seems to make sense to allow it in Questionnaire too...</p>",
        "id": 209014070,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1599159574
    },
    {
        "content": "<p>When displaying a list of Codings, the user normally sees the display strings, and that it was goes into the field when they pick one.  Making a special case for putting the code property into the field does not sound right to me, especially when the value in the response is not the full Coding.  There would need to be some way to state how the Coding should be converted to a string and there is more that one option for that.</p>",
        "id": 209015853,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1599160337
    },
    {
        "content": "<p>The string support in open-choice isn't for the valuieset, its for an answer where it isn't in the set.</p>",
        "id": 209033097,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1599169419
    },
    {
        "content": "<p>That's true currently, but see the top of this thread for context.</p>",
        "id": 209034889,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1599170653
    },
    {
        "content": "<p>Lloyd is right that in Structure Definitions you can \"bind\" a valueset to a text field like city, which will then check that the display value is in the field. (from my understanding)<br>\nAnd I think he's suggesting that Questionnaire should support that too.</p>",
        "id": 209041448,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1599176307
    },
    {
        "content": "<p>Yup</p>",
        "id": 209047362,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1599183037
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"217312\">Joee Garcia</span> <a href=\"#narrow/stream/179255-questionnaire/topic/answerValueSet.20invariant/near/208978691\">said</a>:</p>\n<blockquote>\n<p>According to Lloyd, you can only get codes on ValueSets but you can treat them as strings</p>\n</blockquote>\n<p>I thought this meant the code was in the field.  Is the code or the display value in the field?  It is not clear which of them one would want.  Possibly, one would combine the two into one string with some separator.</p>",
        "id": 209096309,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1599227774
    },
    {
        "content": "<p>Not for things like a state or postcode or even city. You'd want to only see the display value.</p>",
        "id": 209140720,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1599253437
    },
    {
        "content": "<p>So there are seem to be at least two use-cases with different desired outputs (codes, or display values).  If you were picking an ICD-10 code, you might want both code and display in the field.  It sounds like there should be some FHIRPath to construct the value from the Coding.</p>",
        "id": 209537709,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1599670437
    },
    {
        "content": "<p>Can we make use of candidateExpression (which will be renamed to answerExpression) with a FHIRPath in constructing the value for the Coding?  If so, how can we reference the answerValueSet in the FHIRPath?</p>",
        "id": 210452575,
        "sender_full_name": "Joee Garcia",
        "timestamp": 1600377432
    },
    {
        "content": "<p>Sorry <span class=\"user-mention\" data-user-id=\"217312\">@Joee Garcia</span> - just saw this.  We could have taken some time to discuss on the call.  I'm not sure I understand the question - can you expand/give an example?</p>",
        "id": 210457133,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1600380129
    },
    {
        "content": "<p>I don't think candidateExpression and answerExpression are the same thing.</p>",
        "id": 210461355,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1600383336
    },
    {
        "content": "<p>candidateExpression's description says, \"NOTE: the set of candidate expressions is intended to be a starter set, not exhaustive. The user should be free to enter or look-up additional values.\"  But, answerExpression is the complete list for the field.</p>",
        "id": 210461586,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1600383548
    },
    {
        "content": "<p>My understanding for this ticket <a href=\"http://jira.hl7.org/browse/FHIR-21332\">J#21332</a> is that we are changing candidateExpression to answerExpression. Is this not the case?</p>",
        "id": 210461837,
        "sender_full_name": "Joee Garcia",
        "timestamp": 1600383765
    },
    {
        "content": "<p>Yes, I was just looking at that.  I don't see how that works though.  answerExpression will resolve to some list of items.  That is all the user has to choose from, though they could enter a string.  My understanding of candidateExpression was like \"here is a list of medications based on your record, but you can enter others\" and then the user could either pick one of those or get any other medication using answerValueSet.  The user of answerExpression precludes the use of answerValueSet.  (For references answerExpresion is documented in <a href=\"http://jira.hl7.org/browse/FHIR-25960\">J#25960</a> and <a href=\"http://jira.hl7.org/browse/FHIR-28386\">J#28386</a>.)</p>",
        "id": 210462226,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1600384009
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"195344\">Paul Lynch</span> <a href=\"#narrow/stream/179255-questionnaire/topic/answerValueSet.20invariant/near/210461355\">said</a>:</p>\n<blockquote>\n<p>I don't think candidateExpression and answerExpression are the same thing.</p>\n</blockquote>\n<p>I've added a ticket to discuss this further: <a href=\"http://jira.hl7.org/browse/FHIR-28580\">J#28580</a></p>",
        "id": 210566379,
        "sender_full_name": "Joee Garcia",
        "timestamp": 1600458065
    }
]