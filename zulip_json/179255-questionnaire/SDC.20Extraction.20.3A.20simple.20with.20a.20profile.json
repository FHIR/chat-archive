[
    {
        "content": "<p>I would like to use the \"simple\" Observation -based extract option, but would like to specify a profile (for the eventual Observation) to use. I was thinking of two options: <br>\n1) Use item.definition (but do not include the <code>#</code> segment) to refer to the StructureDefinition for the profile<br>\n2) Create a new extension on item.</p>\n<p>I am leaning toward (1) but it seems like it would conflict the guidance in the spec \"Implementers are free to try combining this mechanism with the Definition-based approach. If they do, they should take care that a given item (and its children) are only handled by one approach or the other - not both.\"</p>\n<p>Any thoughts/recommendations on how to do this?</p>",
        "id": 220122053,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1608129197
    },
    {
        "content": "<p>What are your objectives in specifying a profile rather than the base resource?</p>",
        "id": 220137723,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1608136012
    },
    {
        "content": "<p>I have a profile on Observation. In this first specific case, it specifies the category.</p>",
        "id": 220144727,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1608139229
    },
    {
        "content": "<p>So your intention is that by specifying a profile, certain fixed values would be auto-populated into the extracted Observation?</p>",
        "id": 220145192,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1608139433
    },
    {
        "content": "<p>Right. A variation on the Observation-based extract where you can also specify a profile on Observation. So the same extract rules apply, but would ensure the result conforms to the profile (in this case, fixed category code). I think there are lots of IG out there with Observation profiles that might be asked for in a survey as well, so I hope this is more than just my problem :)</p>",
        "id": 220146666,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1608140025
    },
    {
        "content": "<p>I don't think there's any way to ensure that the result complies with the profile.  The best you could do is auto-populate fixed values, and perhaps have the item paths be aware of slicing names when performing extractions.</p>",
        "id": 220147031,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1608140181
    },
    {
        "content": "<p>Can you submit a change request for us to discuss this?</p>",
        "id": 220147055,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1608140194
    },
    {
        "content": "<p>Would something doing the extraction just be expected to set meta.profile, or to know that a particular profile means add a particular category?</p>",
        "id": 220156325,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1608144557
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  -- that is a good point. e.g. there would be no way to specify to fix the category.</p>\n<p><span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span>  -- yes, the profile fixes category to be <code>survey</code>, and in this case the Questionnaire is an AOE survey. I want to be able to differentiate Observations from the survey from others.</p>",
        "id": 220169569,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1608151028
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191782\">@Brian Kaney</span>  Couldn't you differentiate by meta.profile?  You could search for them using _profile.</p>",
        "id": 220190031,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1608162661
    },
    {
        "content": "<p>Wouldn’t Observation.derivedFrom work? You could then tie that to the canonical URL of the questionnaire in  QuestionnaireResponses.questionnaire? Alternatively, isn’t there a role here for providence?</p>",
        "id": 220192520,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1608164475
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span> - I will think about that. I haven't used <code>profile</code> in that way before (e.g. for querying purposes). So if I understand what you are proposing -- the semantics would be if an Observation is known to conform to a profile (e.g. it has a profile claim and we trust the server has validated it), it is of a certain kind of Observation?</p>\n<p><span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span> - I think either of these could work in this case (of knowing the Observation came from a survey)</p>\n<p>But I was wondering if there was a more general solution for specifying Observation profiles with questionnaires. For instance if we wanted to ask a question about a patient's TNM stage and would like to specify the Observation would use a profile such as <a href=\"http://hl7.org/implement/standards/fhir/us/mcode/StructureDefinition-mcode-tnm-clinical-primary-tumor-category.html\">http://hl7.org/implement/standards/fhir/us/mcode/StructureDefinition-mcode-tnm-clinical-primary-tumor-category.html</a></p>",
        "id": 220376241,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1608300966
    },
    {
        "content": "<p>That sounds to me like what Observation.code is for.  The page you link to suggests LOINC code 21905-5.</p>",
        "id": 220377231,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1608301509
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span>  - So would a general solution be to ensure the questionnaire item would only ever allow for a valid Observation (e.g. code, available answers) and then specify the profile in <code>item.definition</code> (without a<code>#</code> segment). When extracting the Observation use the Observation-based technique, then simply copy over the definition and add to the Observation.meta.profile list?</p>",
        "id": 220378110,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1608301953
    },
    {
        "content": "<p>Observation based extraction is based on item.code, which becomes the Observation code.  It there is a list associated with that code (e.g. a LOINC answer list), you would make sure the Questionnaire definition has the correct list.  The derivedFrom field would get set to the QuestionnaireResponse (a reference).  Given a particular Observation, you could check derivedFrom to know whether it can from a Questionnaire, and you could query for Observations that came from a particular patient's QuesitonnaireResponse, but I don't think you could search the server to get a list of Observations that came from any QuestionnaireResponse.  (I'm not sure if that is what you want, anyway.)  item.definition gets used for other purposes, so I am uneasy about putting a profile URL there.  If putting a profile on it is important (though I am still not sure why people do that, when there is there is Observation.code) then I think a new extension would be needed.</p>",
        "id": 220379085,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1608302438
    },
    {
        "content": "<p>Thank <span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span> for helping me think through this!</p>\n<blockquote>\n<p>but I don't think you could search the server to get a list of Observations that came from any QuestionnaireResponse</p>\n</blockquote>\n<p>My use-case is to know that an observation came from a survey (verses somewhere else, such lab results). So for me using derivedFrom will work nicely.</p>\n<blockquote>\n<p>If putting a profile on it is important (though I am still not sure why people do that, when there is there is Observation.code) then I think a new extension would be needed.</p>\n</blockquote>\n<p>Well I think it is important as I would like to validate the extracted Observation when it comes time to save it. But maybe I am alone in this thinking this is important...</p>",
        "id": 220380518,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1608303143
    },
    {
        "content": "<p>You are definitely not alone, but I don't understand the reasoning behind it. If the profile just tells you that the Observation should have a certain code, then why not just validate the code?  But, I think you started out saying the profile specifies a category for the Observation, and not it's code, so maybe there is some utility if you are trying to constrain more that one field.</p>",
        "id": 220381786,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1608303734
    }
]