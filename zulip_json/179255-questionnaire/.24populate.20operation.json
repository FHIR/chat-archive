[
    {
        "content": "<p><a href=\"http://build.fhir.org/ig/HL7/sdc/OperationDefinition-Questionnaire-populate.html\">http://build.fhir.org/ig/HL7/sdc/OperationDefinition-Questionnaire-populate.html</a> indicate that input parameter content is \"Resource containing information to be used to help populate the QuestionnaireResponse\" and the type is Reference. While using with SMART and CDS Hooks, the client is authorized to access FHIR resources from EHR server. Questionnaires are served by different server. Client cannot share its authorization with Questionnaire server. In such case, when client calls $populate on Questionnaire server with list of Reference, the Questionnaire server could not retrieve those referenced resourced. Client should be allowed to send a Bundle of related resources as an input parameter with $populate operation.</p>",
        "id": 207470488,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1597877392
    },
    {
        "content": "<p>If the Questionnaire server isn't authorized to access the EHR server, is it okay to send it resources from the EHR server which might contain PHI data?</p>",
        "id": 207516248,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1597926506
    },
    {
        "content": "<p>Authorization is given to the user who is using the client. My understanding the user has privilege to decide what to do with the data he/she received.</p>",
        "id": 207521253,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1597929787
    },
    {
        "content": "<p>Okay.  I think your argument above about $populate needing to take a bundle as input makes sense, but I am curious about what others who have implemented $populate think.   <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> ?</p>",
        "id": 207521994,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1597930195
    },
    {
        "content": "<p>I'm not certain the blanket statement that the user can do what they want with the data is true.  In the use case that I imagine <span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span> is talking about , DaVinici,  the use case and the use of the data by the application is known and more than likely agreed upon in advance, so sending the data over may be permissible in that sense.  But, DaVinici is not currently sending over full resources, but rather a QuestionnairreResponse that contains derived data that may have a lower degree of PHI than sending entire resources over.   Long winded way of saying I think it depends on the use case  and agreements in place as too if it is permissible or not. </p>\n<p>That being said I think the idea of the operation being able to take a bundle of data makes sense.  I also think that having an inverse operation on Patient that takes a Questionnaire and populates it makes sense as well.  That way the whole patient record isn't sent to an external server.  Though the use case and agreements in place would still dictate what is able to be done with that QuestionnaireResponse once it is filled out.</p>",
        "id": 207523420,
        "sender_full_name": "Rob Dingwell",
        "timestamp": 1597931043
    },
    {
        "content": "<p>I thought about the adding $populate function to EHR itself. That removes the authorization hurdle. In my understanding, Questionnaires handling itself is a complicated system. It is similar to terminology handling. EHR server doesn't have to host all questionnaires, CQLs, and operations. Using DaVinci as an example. Provider's EHR hosts clinical data, Payer's Questionnaire service hosts questionnaire, libraries, and SDC operations. Client is smart app registered with EHR auth server and connect to questionnaire service provided by Payer's server. In such design, I am wondering either SMART client share its authorization (token) with the Payer's backend service or share data it receives with the Payer's service.</p>",
        "id": 207525635,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1597932346
    },
    {
        "content": "<p>The way I've done it is through adding other resource properties through in the parameters, context variables pass in the context object, then also support using context query too.<br>\nHave a working demo to share of all that. <br>\n<a href=\"http://smartqedit4.azurewebsites.net/Questionnaire/Populate\">http://smartqedit4.azurewebsites.net/Questionnaire/Populate</a></p>",
        "id": 207528224,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1597933780
    },
    {
        "content": "<p>It separates form server, data server and populate servers.</p>",
        "id": 207528337,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1597933822
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> How do you deal with the authorization between data server and populate server?</p>",
        "id": 207529910,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1597934575
    },
    {
        "content": "<p>I could be wrong but it looks like what is being sent to the $populate operation is outside of the data the $populate operation defines.  Things like LaunchPatient, LaunchProvider and PreQuery are not defined in that operation so it's a deviation.   The same issues apply in whether or not a user is allowed to send data to a remote server.</p>",
        "id": 207538091,
        "sender_full_name": "Rob Dingwell",
        "timestamp": 1597938461
    },
    {
        "content": "<p>The context parameters may not have been applied to the latest version of the spec, but it is intended to be supported - slightly different to this, but the same way.</p>",
        "id": 207606334,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1597994644
    },
    {
        "content": "<p>The approach I've done means that the data server and the populate server don't need to talk, as the client retrieves the data from the data server (that was defined in the form definition) and then passes that to the populate server.<br>\nSo it nicely doesn't require that permission to be granted.<br>\nJust as with the LHC approach where the browser does all the work...</p>",
        "id": 207606439,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1597994781
    },
    {
        "content": "<p>This page <a href=\"http://build.fhir.org/ig/HL7/sdc/populate.html\">http://build.fhir.org/ig/HL7/sdc/populate.html</a> states that using questionnaire-launchContext for FHIRPath approach. If I need to specify CQL library used for populate, is that <a href=\"http://hl7.org/fhir/StructureDefinition/cqf-library\">http://hl7.org/fhir/StructureDefinition/cqf-library</a> extension?</p>",
        "id": 208130672,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1598467056
    },
    {
        "content": "<p>Another question about candidateExpression. $populate operation returns QuestionnaireResponse. The result for initialExpression will be added to the QuestionnaireResponse. CandidateExpression \"resolves to a list of candidate answers for the question item\". How should these \"list of candidate answers\" return in QuestionnaireResponse by $populate?</p>",
        "id": 208136344,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1598469865
    },
    {
        "content": "<p>I would expect that they wouldn't be, I think that would be for runtime experience, not pre-populate</p>",
        "id": 208165673,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1598487456
    },
    {
        "content": "<p>how about my first question? <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span></p>",
        "id": 208241749,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1598545732
    },
    {
        "content": "<p>You could still use launchContext with CQL I think...</p>",
        "id": 208259283,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1598553993
    },
    {
        "content": "<p>launchContext extension does not provide information for library canonical url</p>",
        "id": 208338785,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1598619649
    },
    {
        "content": "<p>I wouldn't have expected it to?  Launch context provides information that could be used by a library.  The library would need to be referenced by other extensions.</p>",
        "id": 208347440,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1598623828
    }
]