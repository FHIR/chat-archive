[
    {
        "content": "<p>If initialExpression is set on a question with repeats=true, and the user adds a new instance, does it make sense to run the initialExpression on the new instance?  Presumably, that value was already in the first instance.</p>",
        "id": 268865317,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1642781900
    },
    {
        "content": "<p>I don't think so.</p>",
        "id": 268885302,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1642790476
    },
    {
        "content": "<p>As you say, if there were multiple values, they should already ha e been included.</p>",
        "id": 268885370,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1642790503
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191367\">Brian Postlethwaite</span> <a href=\"#narrow/stream/179255-questionnaire/topic/initialExpression.20.26.20repeats/near/268885370\">said</a>:</p>\n<blockquote>\n<p>As you say, if there were multiple values, they should already ha e been included.</p>\n</blockquote>\n<p>I was actually thinking of a case where a single value was returned, but then the user adds another repetition of the question.</p>",
        "id": 268899892,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1642797453
    },
    {
        "content": "<p>I would expect the population process to add repetitions for all candidate answers found.   If the user adds another one, that wouldn't invalidate the previous population or create any need to re-run.</p>",
        "id": 268915578,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1642806402
    },
    {
        "content": "<p>If you had Candidate expressions to select extra content, and picked one of them I would expect it to do initial expressions on that (but nothing else)<br>\nI haven't looked into it in any real detail yet.</p>",
        "id": 268918863,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1642808474
    },
    {
        "content": "<p>If repeats is false, and initialExpression returns more than one value, is that an error?</p>",
        "id": 278375341,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1649461931
    },
    {
        "content": "<p>My implementation(s) just take the first entry. My new one might include an information message, but I don't remember.</p>",
        "id": 278375900,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1649462512
    },
    {
        "content": "<p>I think LHC-Forms does that too.</p>",
        "id": 278375979,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1649462562
    },
    {
        "content": "<p>I think it should be an error</p>",
        "id": 278378208,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1649465368
    },
    {
        "content": "<p>I don't think an error in fill time for an issue from design time there.<br>\nMaybe something I'll try a design time validation check.</p>",
        "id": 278387033,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1649478351
    },
    {
        "content": "<p>How do you safely choose 1 when there are many?  Yes, it's a design-time issue, but there are other design-time issues that can manifest at runtime.</p>",
        "id": 278414650,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1649517226
    },
    {
        "content": "<p>Would it be safer to not pre-fill anything? And make the user key in everything?<br>\nThe pre-pop routine may not have any ability to interact with the user (such as when done on a server side)<br>\nBut there could be a warning indicating that this occurred. But then how to return that, include it in the QR as contained?</p>",
        "id": 278495860,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1649634162
    },
    {
        "content": "<p>You could treat an initialExpression  that returns too many elements as a candidateExpression.  That might be the most useful thing to do.</p>",
        "id": 278501220,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1649642134
    },
    {
        "content": "<p>That would require the renderer to know that the populate failed and to do an in memory conversion.</p>",
        "id": 278502367,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1649643613
    },
    {
        "content": "<p>Correct</p>",
        "id": 278502444,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1649643749
    },
    {
        "content": "<p>More specifically, to know that the list of candidates for the populate was more than the max for the item</p>",
        "id": 278502463,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1649643797
    },
    {
        "content": "<p>Maybe we need to define how the populate operation can return warnings.</p>",
        "id": 278503035,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1649644578
    },
    {
        "content": "<p>Via a parameters object with both the outcome and result?<br>\nMust check if that's what's already documented.</p>",
        "id": 278503050,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1649644633
    },
    {
        "content": "<p>Warnings wouldn't be helpful to the end user</p>",
        "id": 278504411,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1649646491
    },
    {
        "content": "<p>This one would...?</p>",
        "id": 278506807,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1649650066
    },
    {
        "content": "<p>How?  The user just needs to fill out the form.  \"There's data, but it's too much, so I did nothing\" isn't super useful...</p>",
        "id": 278507977,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1649651763
    },
    {
        "content": "<p>The message could be indicate that there were other responses for this question too (maybe even include a toString form of that) so that the user could then go checkout the clinical record to see which was more appropriate (and if the renderer knew what was going on, could convert it to the candidate expression like you suggested)</p>",
        "id": 278509250,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1649653644
    },
    {
        "content": "<p>(and the issue would be tagged to the specific question/answer so the context is clear)</p>",
        "id": 278509257,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1649653667
    },
    {
        "content": "<p>Not convinced this is the right thing to do here though.</p>",
        "id": 278509295,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1649653684
    },
    {
        "content": "<p>toString could be butt ugly, depending on the data type.  My leaning is to just either provide a candidateExpression or indicate that there was an issue with population with the form overall (i.e. there may be data that could have been populated but wasn't due to logic issues with the form) and let the user fill it in normally.</p>",
        "id": 278510409,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1649655434
    },
    {
        "content": "<p>A generic message that was just indicating that there were multiple entries for this answer, and it picked the first one would be ok as a minimum I think?<br>\nCandidateExpression is a non starter for me as can't feedback that data from the $populate operation, unless we come-up with some way to do that.</p>",
        "id": 278512315,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1649657949
    },
    {
        "content": "<p>Knowing it picked the first one isn't great because \"first\" is random and you don't know if it got the right one or not.  I don't think \"pick at random\" is ever appropriate for populate.</p>",
        "id": 278567335,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1649689506
    }
]