[
    {
        "content": "<p>One of the challenges we are having in using Questionnaire and QuestionnaireResponse in SDC is that the QuestionnaireResponse object does not fully represent the information content with regard to the codes associated with the questions.  For some use cases, the need to request the referenced Questionnaire would cause an extra server interaction, and that's not entirely desirable.  There's also the case that the Questionnaire at time the QuestionnaireResponse was used could be a different version with different codes.</p>\n<p>So, our thought was to request that item.code be added to QuestionnaireResponse so that lookup is not needed.  Has anyone thought about this?</p>",
        "id": 185527966,
        "sender_full_name": "Keith Boone",
        "timestamp": 1578943695
    },
    {
        "content": "<p>There are also other things missing from QuestionnaireResponse, like the score for answers that have the ordinalValue extension (which I was asked for in <a href=\"https://jira.hl7.org/browse/FHIR-19615\" target=\"_blank\" title=\"https://jira.hl7.org/browse/FHIR-19615\">https://jira.hl7.org/browse/FHIR-19615</a>, and would still like, but I conceded I could do without it).  I think QuestionnaireResponse is meant to be minimal amount of data needed to capture answers, and that in general having the Questionnaire will be necessary to process those answers.</p>",
        "id": 185529561,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1578944606
    },
    {
        "content": "<p>We've talked about it.  The reality is that when you're looking at a QuestionnaireResponse for any purpose other than rendering, you're <em>always</em> going to need the Questionnaire.  The 'code' isn't necessarily unique to a single question.  If I ask for your weight and I ask for the weight of each of your parents, the 'code' for that question might well be the same.  As well, the answers available can also vary even though the code is the same.  Finally, the 'shared computable meaning' associated with a given question might be conveyed by item.code or it might be conveyed by item.definition.  If we expose one in the QuestionnaireResponse, we'd need to expose the other.  And then someone might want to see what the answer choices were too.  (Or scores as Paul says).  It becomes a slippery slope.</p>\n<p>The only reason we echo the text of the item is so that a system can render (and a human can understand) a completed QuestionnaireResponse even if they can't access the Questionnaire.  However, if you want to edit, the response, populate it, extract from it or do anything else computable, the system needs to have a copy of the Questionnaire.</p>",
        "id": 185529794,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1578944746
    },
    {
        "content": "<p>Yeah, sorry, that's the kind of answer I was expecting.  But the reality is, for MOST QuestionnaireResponses, you wouldn't need the Questionnaire.  I was expecting that I would probably have to add an extension for this.  To date there are multiple HL7 implementation guides for CDA and HL7 V2 for which a populated item contains both the code for the question as well as the answer, and ideally, the same tools which process the extracted results could also extract from a populated QuestionnaireResponse without having to perform an additional fetch.  What I'm hearing though is that this isn't the case.  And there are numerous assessment instruments for which every question has a distinct code for the question already established in LOINC panels, and the code for \"parent weight\" in those kinds of instruments would be different from the code for \"your weight\".</p>",
        "id": 185547402,
        "sender_full_name": "Keith Boone",
        "timestamp": 1578956382
    },
    {
        "content": "<blockquote>\n<p>..., and the code for \"parent weight\" in those kinds of instruments would be different from the code for \"your weight\".</p>\n</blockquote>\n<p>An example of Keith's last point:  <a href=\"https://loinc.org/54127-6/\" target=\"_blank\" title=\"https://loinc.org/54127-6/\">https://loinc.org/54127-6/</a></p>",
        "id": 185547785,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1578956681
    },
    {
        "content": "<p>I believe our resolution to your change request, we agreed to add extensions for this purpose as a convenience.  My example might not have been a great one, but the point is that 'code' isn't necessarily expected to carry the full context of the entire questionnaire.  It is legitimate to have a code whose meaning is impacted by where in the instance it appears.</p>",
        "id": 185547929,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1578956777
    },
    {
        "content": "<p>The other way to resolve that <span class=\"user-mention\" data-user-id=\"191387\">@Keith Boone</span> is to contain the questionnaire definition in the QR.</p>",
        "id": 186971941,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1580380745
    },
    {
        "content": "<p>If you're retrieving the QR, then you can ask with an _include to get the Q with it.<br>\nAnd even better if you're getting multiple, you only get 1 copy of the form.</p>",
        "id": 186971990,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1580380800
    },
    {
        "content": "<p>As for versioning, in our QRs we put in a versionId reference to the questionnaire definition.</p>",
        "id": 186972062,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1580380828
    },
    {
        "content": "<p>Been there, did that, it's not satisfying, but it does work.</p>",
        "id": 187177836,
        "sender_full_name": "Keith Boone",
        "timestamp": 1580593540
    }
]