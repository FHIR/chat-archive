[
    {
        "content": "<p>When a UI client Posts a Questionnaire Response should it set status as Completed when all required questions are answered?</p>\n<p>Does the BackEnd is responsible for changing the status when all questions are answered?</p>\n<p>If the backend determines the questionnaire is not completed should it return an error on the QuestionnaireResponse or change back the status as in progress?</p>",
        "id": 242155311,
        "sender_full_name": "milton mitjans",
        "timestamp": 1623294877
    },
    {
        "content": "<p>If that's the intent yes.<br>\nStoring it with in-progress is for drafts.</p>",
        "id": 242155458,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1623295098
    },
    {
        "content": "<p>Backend doesn't imply storing as complete.</p>",
        "id": 242155476,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1623295147
    },
    {
        "content": "<p>Keep in mind that a questionnaire response where all questions have an answer isn't necessarily \"completed\"; sometimes the act of marking a questionnaire response \"complete\" is an explicit final step (e.g., before that, it may still represent work in progress, with draft answers that aren't considered finished.)</p>",
        "id": 242155731,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1623295541
    },
    {
        "content": "<p>Agree that it would typically be client driven.  Exception would be <a href=\"http://build.fhir.org/ig/HL7/sdc/adaptive.html\">adaptive forms</a> where the server determines when the form is 'complete'.</p>",
        "id": 242223659,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1623338298
    },
    {
        "content": "<p>Thanks all for the response</p>",
        "id": 242268572,
        "sender_full_name": "milton mitjans",
        "timestamp": 1623358067
    },
    {
        "content": "<p>When there's a \"In-Progress\" QuestionnaireResponse. When the client wants go to back to continue on the Questionnaire administration. The flow we have is: </p>\n<ol>\n<li>Call Task Resource. It returns the Questionnaire ID and the Questionnaire Response ID</li>\n<li>Grabs the Questionnaire Resource to get the definition</li>\n<li>Grabs the In Progress Answers by calling the QuestionnaireResponse</li>\n</ol>\n<p>Is there a way that client can avoid calling Questionnaire and QuestionnaireResponse to continue on the flow? Maybe by setting the already answered questions in the Questionnaire Resource as \"selected answers\"? For example \"initial: [value]\"</p>",
        "id": 242269033,
        "sender_full_name": "milton mitjans",
        "timestamp": 1623358278
    },
    {
        "content": "<p>I'm not following here. If you have a client managing in-progress questionnaires, you could POST a QuestionnaireReponse with an <code>in-progress</code> status, and PUT to that same endpoint when you've got updates.</p>",
        "id": 242276310,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1623362022
    },
    {
        "content": "<p>Right.  You should be GETing your prior QuestionnaireResponse and just loading that up to continue editing</p>",
        "id": 242281736,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1623365544
    },
    {
        "content": "<p>Correct, in order for the client to get the question definition (for example when a user logs back in to website)  does it needs to call Questionnaire to get definitions? we would like to avoid GET on Questionnaire and another GET in QuestionnaireResponse to get answered questions and questions definitions.</p>",
        "id": 242287095,
        "sender_full_name": "milton mitjans",
        "timestamp": 1623370106
    },
    {
        "content": "<p>In theory, you should be able to do a search for the Task and do an _include to get both the QuestionnaireResponse and the Questionnaire, though at the moment, you'd need a custom search parameter on Task to do that.  You can certainly do a search to grab the QuestionnaireResponse and do an _include to get the Questionnaire.</p>",
        "id": 242291354,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1623375002
    },
    {
        "content": "<p>Would it be a valid/supported way to put the Questionnaire into the \"contained\" section of the response and thus retrieve it as part of the response?</p>",
        "id": 242333888,
        "sender_full_name": "Tilo Christ",
        "timestamp": 1623412298
    },
    {
        "content": "<p>No. If the questionnaire can have an independent existence then it needs to. Assuming this is a response to an actual questionnaire that was created somewhere else and is managed independently, you should not be sticking in \"contained\" array.</p>",
        "id": 242342804,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1623417275
    },
    {
        "content": "<p>We use 'contained' Questionnaires for adaptive form responses because in that case, the Questionnaire is created as part of the answering process - and is only relevant to that specific set of answers.  If the Questionnaire can be used for multiple responses, it needs to be a separate resource.  'contained' is for resources that have no independent existence.  It's never for packaging convenience or to avoid searching for multiple resources.</p>",
        "id": 242346666,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1623419057
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"415911\">@milton mitjans</span> One of our client loads existing answers from QuestionnaireResponse to Questionnaire.initial</p>",
        "id": 242353024,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1623421784
    },
    {
        "content": "<p>Was also thinking on those lines but how does the Questionnaire.initial is linked to a QuestionnaireResponse id?</p>",
        "id": 242385176,
        "sender_full_name": "milton mitjans",
        "timestamp": 1623436140
    }
]