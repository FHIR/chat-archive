[
    {
        "content": "<p>Based on one of the tracker items, we've now added the following language to the <a href=\"http://build.fhir.org/ig/HL7/sdc/expressions.html#use-of-the-expression-type\">Using Expressions</a> page:<br>\n<code>Collisions between names that are defined more than once within the same scope will be treated as an error. I.e. If there is a launchContext extension called 'patient' and then on the same item or any item nested beneath it there's also a variable extension also named 'patient', that would be an error.</code><br>\nHowever, when we were talking about modular questionnaires and using the linkIdPrefix mechanism in <a href=\"https://confluence.hl7.org/display/FHIRI/Prefix-based+Modularized+Questionnaires\">this document</a>, we explicitly contemplated having a variable on a child with the same name as that on the parent (look at how 'E' and 'F' result in a linkIdPrefix of 'foobar'.</p>\n<p>For now, my plan is to carve out a narrow exception that says that variables can be overridden on child elements, but can't have conflicting declarations on siblings.  Shout if anyone thinks that's unreasonable.</p>",
        "id": 260595995,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1636319867
    },
    {
        "content": "<p>I don't think I'd support that in my implementation. Sibblings isn't the problem, as they aren't in each other's scope. parent child is the problem.</p>",
        "id": 260598457,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1636323126
    },
    {
        "content": "<p>Siblings on the same element would be a problem.  How can the prefix approach work if we *don't * allow this?</p>",
        "id": 260742230,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1636420276
    },
    {
        "content": "<p>Siblings don't see each other. There for not a problem.</p>",
        "id": 260745316,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1636423103
    },
    {
        "content": "<p>I don't see the need for the restriction at all.  LHC-Forms allows child nodes to declare variables that override the definition in the parent node.</p>",
        "id": 260806533,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1636468842
    },
    {
        "content": "<p>If you have two variables with the same name on the same item, they'll see each other.  That's what we need to prevent.  I don't see a way to support link prefix unless descendants override.</p>",
        "id": 260832631,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1636479855
    },
    {
        "content": "<p>Maybe thin is a topic for our call next week (since none this week)</p>",
        "id": 260858596,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1636490984
    },
    {
        "content": "<p>I am fine with disallowing the same item to declare two variables with the same name.  I think descendants should just override the ancestor definitions where there is matching variable name-- not that I need that behavior, but I don't see the need for a restriction on that, and it is a little more work to restrict it.</p>",
        "id": 260887389,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1636507012
    }
]