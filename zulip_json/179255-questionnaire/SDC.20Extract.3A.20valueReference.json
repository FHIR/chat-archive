[
    {
        "content": "<p>Following the \"Observation -based extraction\" mode, since Observation does not have valueReference should a questionnaire item that is a  valueReference be non-extractable item in this mode?</p>",
        "id": 223767186,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1611429124
    },
    {
        "content": "<p>Do you have a concrete example of information you'd expect to be captured as an Observation that <em>would</em> be a Reference?</p>",
        "id": 223772344,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611432070
    },
    {
        "content": "<p>The question is to pick a device (form a filtered list of DeviceDefinition). So the extracted Observation could mean a type of device (the Obs code could be a dialyzer, for instance) and the valueReference would be a reference to one (from a catalog).</p>",
        "id": 223776758,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1611436883
    },
    {
        "content": "<p>Does it make sense that an Observation value be a reference to something defined in FHIR? BodyStructure also comes to mind. I imagine this might also be the case to refer to ObservationDefinition or perhaps other archetypical resource types as well.</p>",
        "id": 223776907,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1611437096
    },
    {
        "content": "<p>That wouldn't make sense for any Observation-type system I've ever seen.  At best, you might have an Observation that would capture an identifier</p>",
        "id": 223783549,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611443854
    },
    {
        "content": "<p>Okay, as Observation can't have a valueReference, then the SDC documentation should explain expected behavior in the case the QR answer is a  valueReference -- (<a href=\"http://build.fhir.org/ig/HL7/sdc/extraction.html#observation-based-extraction\">http://build.fhir.org/ig/HL7/sdc/extraction.html#observation-based-extraction</a>, bullet number 10 \"Observation.value[x] - set to QuestionnaireResponse.item.answer.value[x]\")</p>",
        "id": 223838604,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1611526086
    },
    {
        "content": "<p>Likely omit extraction for this item, I am guessing...</p>",
        "id": 223838624,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1611526141
    },
    {
        "content": "<p>No need to explain that as if you're creating an Observation-driven Questionnaire, you wouldn't have any 'Reference' questions</p>",
        "id": 223840233,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611528354
    },
    {
        "content": "<p>What's an Observation-driven Questionnaire?</p>",
        "id": 223845798,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1611535627
    },
    {
        "content": "<p>Also, does a QuestionnaireResponse.answer.valueCoding =&gt; Observation.valueCodeableConcept.coding[0]</p>",
        "id": 223849645,
        "sender_full_name": "Brian Kaney",
        "timestamp": 1611541509
    },
    {
        "content": "<p>A Questionnaire where some/most/all of the questions correspond to things that would typically be captured as Observations.</p>\n<p>The Questionnaire answer wouldn't necessarily be the first.  We haven't talked about how to select.  In most cases, I'd expect the Questionnaire to have a list of allowed options.  The extraction process would grab the coding repetition that fell within the value set.  If the answer was an 'open' question (i.e. that allowed other codings) and no match was found, the ideal thing to do would be to grab the valueCodeableConcept.text.  If that didn't exist, second best would be the display from whatever code was flagged as userSelected.  If that wasn't possible, it'd be up to the client.  It could choose to grab the display from the first repetition, but there's no 'special' meaning to the order of the codings, so picking one at random would be just as viable.</p>",
        "id": 223851497,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611544333
    }
]