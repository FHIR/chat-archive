[
    {
        "content": "<p>Per <a href=\"http://jira.hl7.org/browse/FHIR-29664\">FHIR-29664</a>, the name field is now bound extensibly to patient, encounter, location, or user, and type field can be any FHIR type.  Could we specify that if the name field is some off-list name, that what is being requested is an instance of the resource indicated by \"type\" that is currently in the application's context?  This would allow us to handle Diane's case of needing to pass in a QuestionnaireResponse from a different questionnaire for prepopulation in the current Questionnaire.</p>",
        "id": 239294307,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1621359246
    },
    {
        "content": "<p>For example, launchContext with \"name\" = \"qrForFirstQ\", type = \"QuestionnaireResponse\", would define a variable qrForFirstQ, which would have the context QuestionnaireReponse (if there was one, as there is in Diane's case).</p>",
        "id": 239294865,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1621359482
    },
    {
        "content": "<p>I like that apporach, for our usecase we have a document (FHIR Bundle) as the context for prepopulation, what do you think <span class=\"user-mention\" data-user-id=\"410858\">@Alexander Kreutz</span> ? If this would be a possible solution, how we would specify the defined launchContext name, resource|reference pairs it in the $populate operation (raised also here <a href=\"#narrow/stream/179255-questionnaire/topic/.24populate.20-.20launch.20Context\">https://chat.fhir.org/#narrow/stream/179255-questionnaire/topic/.24populate.20-.20launch.20Context</a> ) ?</p>",
        "id": 239309012,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1621364899
    },
    {
        "content": "<p>That makes the presumption that there can only be one instance of a given type in an application's context.  I don't think that's true.</p>",
        "id": 239320920,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621369914
    },
    {
        "content": "<p>E.g. there could be multiple Practitioner instances in context (data entry person, author, supervisor, etc.)</p>",
        "id": 239321024,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621369950
    },
    {
        "content": "<p>I found Paul's solution reasonable. I have already been using launchContext in this way.<br>\nThere is no issue with having multiple elements with the same type and different names.<br>\n launchContext with \"name\" = \"author\", type = \"Practitioner\", and \"name\" = \"supervisor\", type = \"Practitioner\".</p>",
        "id": 239329086,
        "sender_full_name": "Ilya Beda",
        "timestamp": 1621373417
    },
    {
        "content": "<p>That means you must understand the meaning of the name in order to populate the context.  If we make it extensible, 'name' will need to change to Coding so there can be a system which establishes context for the code.</p>",
        "id": 239336082,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621377149
    },
    {
        "content": "<p>The name should be a free text, exactly as it defined at <a href=\"https://build.fhir.org/ig/HL7/sdc/StructureDefinition-sdc-questionnaire-launchContext.html\">https://build.fhir.org/ig/HL7/sdc/StructureDefinition-sdc-questionnaire-launchContext.html</a></p>\n<p>The meaning is defined by the type. I see an issue with making it extensible.<br>\nIt makes sense to keep binding for the type required and restrict it by a set of all FHIR resource names and FHIR data types. </p>\n<p>I updated my task accordingly <a href=\"https://jira.hl7.org/browse/FHIR-32644\">https://jira.hl7.org/browse/FHIR-32644</a></p>",
        "id": 239377541,
        "sender_full_name": "Ilya Beda",
        "timestamp": 1621408672
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179255-questionnaire/topic/launchContext.20off-list.20.22names.22/near/239321024\">said</a>:</p>\n<blockquote>\n<p>E.g. there could be multiple Practitioner instances in context (data entry person, author, supervisor, etc.)</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"195980\">@Peter Muir</span>  raised the issue this morning that one might want to pull in the physician (I think he meant), and that the person filling in the form might be someone else in the office (e.g. an MA).</p>",
        "id": 239397087,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1621418782
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179255-questionnaire/topic/launchContext.20off-list.20.22names.22/near/239336082\">said</a>:</p>\n<blockquote>\n<p>If we make it extensible, 'name' will need to change to Coding so there can be a system which establishes context for the code.</p>\n</blockquote>\n<p>I don't object to it becoming a Coding (though I am not sure if that helps) but we did already make it extensible in <a href=\"http://jira.hl7.org/browse/FHIR-29664\">FHIR-29664</a>.</p>",
        "id": 239397520,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1621419005
    },
    {
        "content": "<p>I think the reason the \"name\" field was so limited was that we were following the SMART App <a href=\"http://hl7.org/fhir/smart-app-launch/scopes-and-launch-context/index.html\">launch</a> scopes, which are extensibly limited to user, launch/patient, and launch/encounter.   However, an application (SMART or not) might have the user working on more than one thing, and be able to provide more types of context resources.</p>",
        "id": 239399109,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1621419813
    },
    {
        "content": "<p>SDC may be used outside of SMART App. So, I think that idea to limit launchContex.type by SMART App launch scopes was wrong.</p>",
        "id": 239401564,
        "sender_full_name": "Ilya Beda",
        "timestamp": 1621421205
    },
    {
        "content": "<p>After talking with Ilya, it seems like a good approach would be to have launchContext define (using name and type) context variables that the application can either know about or prompt the user to select.   launchContext also includes a \"description\", so in cases where the application had to ask the user to find it, the description could guide them about what they were providing.  For example, if there were two launchContexts:</p>\n<div class=\"codehilite\"><pre><span></span><code>launchContext extensions: [{\n   name: prac1\n   type: Practitioner\n   description:  The practitioner entering the data.\n},\n{\n  name: prac2\n  type: Practitioner\n  description:  The patient&#39;s physician\n}]\n</code></pre></div>\n<p>then the application (if unfamiliar with the Questionnaire) could provide separate prompts for the user to select each practitioner from a list.</p>\n<p>It would still be beneficial to keep the standard names we have defined, so the application would not always have to ask the user for the information even if showing an unknown Questionnaire.</p>",
        "id": 239413481,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1621427096
    },
    {
        "content": "<p>I don't think (not in my mind anyway) that the intent was to limit to SMART app launch, but as to how it would support/leverage smart all launch</p>",
        "id": 239416955,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1621428471
    },
    {
        "content": "<p>The meaning can't be defined by the type - because as pointed out, there can be different meanings associated with the type.  We can allow it to be extensible, but if we do that, then the 'name' needs to be globally unique to avoid collisions, and that essentially means Coding.</p>",
        "id": 239454368,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1621441272
    },
    {
        "content": "<p>I don't think we are trying to define new, globally unique names.  The new names only have meaning in the context of a particular Questionnaire, just like Questionnaire variable names.</p>",
        "id": 239587233,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1621515915
    },
    {
        "content": "<p>Either the application would know the Questionnaire's launchContext names and therefore know what resources should be passed in, or it would ask the user to pick appropriate resources before rendering the Questionnaire.</p>",
        "id": 239587567,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1621516041
    },
    {
        "content": "<p>Is the LHC Forms able to support a QuestionnaireResponse  as a launchContext now?  <span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span> </p>\n<p>If yes, how do we set the launch context?</p>\n<p>I see in the documentation: <br>\nLForms.Util.setFHIRContext(fhirContext);</p>\n<p>Is this where we give the url/path to the resource and the resource ID?    In our case,  <a href=\"https://ourfhirserver.com/fhir/QuestionnaireResponse/6789\">https://ourfhirserver.com/fhir/QuestionnaireResponse/6789</a></p>",
        "id": 271495273,
        "sender_full_name": "Diane",
        "timestamp": 1644527667
    },
    {
        "content": "<p>No, and I don't see an option for that in <a href=\"https://build.fhir.org/ig/HL7/sdc/ValueSet-launchContext.html\">https://build.fhir.org/ig/HL7/sdc/ValueSet-launchContext.html</a>.  Is there a tracker item about that idea?</p>",
        "id": 271502364,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1644530885
    },
    {
        "content": "<p>Which idea?</p>",
        "id": 271517151,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1644540996
    },
    {
        "content": "<p>It looks like Ilya's issue was solved with <a href=\"https://jira.hl7.org/browse/FHIR-32644\">https://jira.hl7.org/browse/FHIR-32644</a>.</p>\n<p>I think the launchContext extension is a more FHIR-ish way to represent the QuestionnaireResponse being passed into the Questionnaire.</p>",
        "id": 271524891,
        "sender_full_name": "Diane",
        "timestamp": 1644548180
    }
]