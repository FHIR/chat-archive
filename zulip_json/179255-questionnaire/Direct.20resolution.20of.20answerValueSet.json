[
    {
        "content": "<p>If the FHIR server cannot provide an expansion of an answerValueSet's URI, the section on type canonical says that one should \"fall back to direct resolution using the URL as a literal reference\".  Does this mean that the answerValueSet URI (as a URL) might be expected to return a ValueSet expansion or just a definition?  If the latter, how does one expand it?  By appending \"/$expand\"?</p>",
        "id": 201921983,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1593046655
    },
    {
        "content": "<p>That's what mine does, it appends the /$expand with filter=blah</p>",
        "id": 201922791,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1593047542
    },
    {
        "content": "<p>What if the URL has a #fragment part?  Would you then be expected not to $expand it, but to look inside the returned resource for .contained?</p>",
        "id": 202016155,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1593114526
    },
    {
        "content": "<p>It would be helpful if there were a list of steps for how to process answerValueSet.</p>",
        "id": 202016319,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1593114629
    },
    {
        "content": "<p>You can't have a #fragment when pointing to a value set?</p>",
        "id": 202022708,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1593117984
    },
    {
        "content": "<p>Do you mean as a contained reference?</p>",
        "id": 202029970,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1593122007
    },
    {
        "content": "<p>In my renderer if it's contained I currently expect that to be pre-expanded.</p>",
        "id": 202030003,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1593122031
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179255-questionnaire/topic/Direct.20resolution.20of.20answerValueSet/near/202022708\">said</a>:</p>\n<blockquote>\n<p>You can't have a #fragment when pointing to a value set?</p>\n</blockquote>\n<p>It is just a more complicated thing at that point.  You have <a href=\"https://example.com/SomeResource/123#fragment\">https://example.com/SomeResource/123#fragment</a> where \"fragment\" is now an ID of a ValueSet that is contained inside the SomeResource instance.  So, instead of appending /$expand in the URL in that case, you would need to fetch  <a href=\"https://example.com/SomeResource/123\">https://example.com/SomeResource/123</a>, and look inside .contained for ValueSet \"fragment\", which <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> says we should expect to be already expanded.</p>",
        "id": 202031603,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1593122797
    },
    {
        "content": "<p>I don't handle the url#fragment format. I thought you meant a contained reference. If that was in my renderer, I'd just append $expand, which is likely wrong.</p>",
        "id": 202031788,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1593122954
    },
    {
        "content": "<p>Appending /$expand assumes that the answerValueSet URL is pointing to a server that not only can return the ValueSet, but can handle the /$expand operation.  (Reasonable; I just think this should be make explicit in the answerValueSet field documentation.)  The general page on canonical reference is helpful, but I think there needs to be something more specific on how to apply that when trying to get a ValueSet expansion for a Questionnaire.</p>",
        "id": 202032446,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1593123440
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> - can you reference contained ids with a canonical URL with a fragment identifier?  It may be possible with Reference, but I'm not sure it's allowed with canonicals...</p>",
        "id": 202032561,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1593123496
    },
    {
        "content": "<p>I don't know that we've discussed it?</p>",
        "id": 202033078,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1593123891
    },
    {
        "content": "<p>From <a href=\"https://www.hl7.org/fhir/datatypes.html#canonical\">https://www.hl7.org/fhir/datatypes.html#canonical</a>:  \"Like other URIs, elements of type canonical may also have #fragment references\"</p>",
        "id": 202033092,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1593123903
    },
    {
        "content": "<p>Ok, that's super clear :)</p>",
        "id": 202033278,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1593124036
    },
    {
        "content": "<p>I expect we havent talked about the effect on operations, or explicitly expansions though.</p>",
        "id": 202033324,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1593124069
    },
    {
        "content": "<p>Do we need to add anything explicit into the SDC spec around this?</p>",
        "id": 202033650,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1593124249
    },
    {
        "content": "<p>I think we should.</p>",
        "id": 202033821,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1593124385
    },
    {
        "content": "<p>The process for obtaining the answers from answerValueSet as I understand it is:<br>\n1) if the answerValueSet URI is like \"#fragment\", look for the ValueSet inside the Questionnaire's .contained, and assume it is expanded.<br>\n2) if the URI is like http://something#fragment, remove #fragment.<br>\n     a) If a FHIR server is available, query that for <a href=\"http://something\">http://something</a>;  Otherwise try to use the URI as a URL to get that resource <br>\n     b) Obtain the ValueSet (assumed expanded) from the resource's .contained<br>\n3) If the URI is like <a href=\"http://something\">http://something</a>,  If there is a \"preferredTerminologyServer\" set, query that for expansion of the answerValueSet URI; otherwise if there is a FHIR server available, try there; otherwise append /$expand and try to use the resulting string as a URL to get the expansion.</p>\n<p>I have not thought about to how handle versions in the URI.</p>\n<p>Another good part to document  for answerValueSet would be to how get the expected size.</p>",
        "id": 202034153,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1593124679
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> Change request? :)</p>",
        "id": 202034622,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1593125066
    },
    {
        "content": "<p>Sure.</p>",
        "id": 202036210,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1593126480
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> interested in your thoughts on this too.</p>",
        "id": 202036294,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1593126513
    },
    {
        "content": "<p>As a separate request we need to consider those chained questions where and answer in one changes the results of another questions valueset. We spoke about it, and I've forgotten what we considered to experiment with.</p>",
        "id": 202036362,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1593126590
    },
    {
        "content": "<p>I think that terminology handling will be a heading in the guide somewhere...</p>",
        "id": 202036418,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1593126622
    },
    {
        "content": "<p>So my take would be slightly different I think.</p>\n<ol>\n<li>Is about resolving a relative URI/L, so first do that and hopefully then you have a local copy of an actual ValueSet.</li>\n<li>You have an absolute URI, so that's good.<br>\nNow, you either have an actual ValueSet or an Identifier for a ValueSet.  In the former case, POST it to <code>[base]/ValueSet/$expand</code>. In the latter case, do a GET on <code>[base]/ValueSet/$expand?url=[URI]</code>.<br>\nThis assumes you have a remote (<code>[base]</code>) terminology server or a local capability, in which case these calls would be just routed internally.</li>\n</ol>\n<p>Technically you're only meant to use a pre-expanded ValueSet if the expansion parameters match.  Also, if your ValueSet expansion is large, then you're going to want a search-style UI rather than check box / pick list and that means you'll want to be calling <code>$expand</code> with the <code>filter</code> parameter.</p>",
        "id": 202037699,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1593127882
    },
    {
        "content": "<p>I don't think you should be treating the URI as a URL and resolving it directly.  It _might_ work, but relying on that is not a good idea.</p>",
        "id": 202037982,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1593128147
    },
    {
        "content": "<p>That's my irritation with canonicals, as they can be either.</p>",
        "id": 202038585,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1593128752
    },
    {
        "content": "<p>Thanks Michael, I guess that is a second alternative for the contained valueset resource, if it is expanded then you can use it directly with radios/checkboxes or a combo, if it isn't you need to post to get it to resolve.<br>\nThat's correct <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> ?</p>",
        "id": 202039176,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1593129377
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191343\">Michael Lawley</span> <a href=\"#narrow/stream/179255-questionnaire/topic/Direct.20resolution.20of.20answerValueSet/near/202037982\">said</a>:</p>\n<blockquote>\n<p>I don't think you should be treating the URI as a URL and resolving it directly.  It _might_ work, but relying on that is not a good idea.</p>\n</blockquote>\n<p>The current <a href=\"https://www.hl7.org/fhir/references.html#canonical\">guidance</a> for canonicals says we should do this as a fallback.   \"Systems resolving references to canonical URLs SHOULD first try to resolve the reference using the canonical reference (e.g. search on a known registry of terminology, conformance, or knowledge resources as appropriate), and then fall back to direct resolution using the URL as a literal reference if a local version of the canonical resource cannot be found.\"</p>",
        "id": 202039338,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1593129531
    },
    {
        "content": "<p>Personally, I think that's a bad idea.  We don't do it on principle because a malicious canonical might be used to probe local resources.  eg file:///etc/passwd or <a href=\"http://localhost/\">http://localhost/</a>..., <a href=\"https://intranet.acme.com/\">https://intranet.acme.com/</a>... because the resolution is happening server-side, inside the firewall</p>",
        "id": 202050396,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1593143761
    },
    {
        "content": "<p>That is great feedback Michael, and we should explicitly include that in the notes.<br>\nI may even reconsider my default implementation.</p>",
        "id": 202061856,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1593158415
    },
    {
        "content": "<p>In my case resolution (for answerValueSet) happens client-side, in the user's browser.  In the case of answerValueSet, where we are appending \"/$expand\", and expecting a ValueSet, I guess the security concern is limited to hitting some internal FHIR server (normally inaccessible) and loading a ValueSet from there into the Questionnaire.  A maliciously crafted Questionnaire might then be able to send that data somewhere else using some of the other SDC extensions, without the user even submitting the form.  I think maliciously crafted Questionnaires are already a potential problem, though.  The app needs to be able trust the source of the Questionnaire.</p>",
        "id": 202084856,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1593175680
    },
    {
        "content": "<p>In that case, similar security problems exist; a malicious Questionnaire could probe the user's systems either behind their home firewall/NAT router or behind their corporate firewall. Exfiltrating that data would require some scripting ability on behalf of the form runner - is this the \"other SDC extensions\" part?</p>",
        "id": 202161441,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1593222214
    },
    {
        "content": "<p>I don't really understand the threat.  When you resolve the canonical, the target has to be a FHIR resource.  If it's not, the system's not going to be able to parse it and expose it as a value set (or whatever it is you're referencing).  The best you could do is probe whether a file exists by looking at whether you get a \"not found\" or \"bad content\" error - but you couldn't actually get the content</p>",
        "id": 202161823,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1593222832
    },
    {
        "content": "<blockquote>\n<p>the system's not going to be able to parse it</p>\n</blockquote>\n<p>this depends entirely on \"the system\", eg the form renderer.  It may be that the renderer is very permissive in what it accepts, or it may be that it exposes the retrieved resource or fragments of it in an error dialog.<br>\nThe exact risk depends on whether the fetch is happening server-side (so a hacker can use canonicals to probe behind the server's firewall, depending on how it manages and reports failures), or client-side (but this likely depends on the ability to inject active content into the questionnaire).</p>",
        "id": 202163551,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1593225404
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179255-questionnaire/topic/Direct.20resolution.20of.20answerValueSet/near/202161823\">said</a>:</p>\n<blockquote>\n<p>I don't really understand the threat.  When you resolve the canonical, the target has to be a FHIR resource. </p>\n</blockquote>\n<p>Suppose the user's browser has access to an non-public FHIR server with private information, and an attacker knows this.  If the attacker can get the user to load a Questionnaire containing canonicals pointing to that non-public server, the data could be loaded into the form and then sent to to the attacker.</p>",
        "id": 202303765,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1593434737
    },
    {
        "content": "<p>Only if the data was in the form of a ValueSet...</p>",
        "id": 202312158,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1593439050
    },
    {
        "content": "<p>Only if the data was in the form of a ValueSet...</p>",
        "id": 202312167,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1593439052
    },
    {
        "content": "<p>In this case, yes, the canonical we are talking about is for answerValueSet, and so the expected data must be a ValueSet.  It does seem less likely that sensitive data would be in a ValueSet.  Perhaps there are other uses of canonical where resolving the URL directly might be more risky.  There is a similar issue with x-fhir-query Expressions, which can be a <a href=\"https://build.fhir.org/ig/HL7/sdc/expressions.html#x-fhir-query-enhancements\">full URL</a>,  and can pull back any sort of resource.  I am not saying we shouldn't, but there are potential problems depending on the use case.</p>",
        "id": 202314641,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1593440090
    },
    {
        "content": "<p>I hope this is the right stream/topic:</p>",
        "id": 223958419,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611608065
    },
    {
        "content": "<p>for the generation of a questionnaire form from a questionnaire resource, is there already a way to expand the answerValueSet at the time of IG publication?</p>",
        "id": 223958510,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611608114
    },
    {
        "content": "<p>I think the only way to do that now is either to use $expand somewhere (after sushi? in sushi?) or to do it manually and use answerOption</p>",
        "id": 223958672,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611608172
    },
    {
        "content": "<p>It sounds like you want to do that automatically as part  of the IG publication process (with which I am not familiar).  Why not just run $expand once, and include it in your Questionnaire as a contained ValueSet?  Then answerValueSet can point to the contained copy (if that is acceptable).</p>",
        "id": 223985698,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1611623301
    },
    {
        "content": "<p>Are you asking for expansion of contained value sets as part of the publication process?</p>",
        "id": 223997237,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611636633
    },
    {
        "content": "<p>not only contained</p>",
        "id": 224008399,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611649484
    },
    {
        "content": "<p>I'm asking if the VS in a questionnaire are being / can be expanded in a way it can be used by a form generation tool</p>",
        "id": 224008503,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611649541
    },
    {
        "content": "<p>the expansion code is there, so I wonder if it's a good idea to preserve the expanded valueset for tooling.</p>",
        "id": 224008695,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611649667
    },
    {
        "content": "<p>The publisher can and does expand value sets when rendering.  Whether it should store the expansion in the published value set is a question we can ask.  Keep in mind that the expansion at the time of publishing isn't necessarily what the expansion would be at the time the Questionnaire is used.</p>",
        "id": 224048953,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611672520
    },
    {
        "content": "<p>The expansion is only rendered, not preserved as a resource. We have several options - one of them would be to generate a Questionnaire that contains the expanded valueSets (for tooling that would be great, not sure if it is overall a sensible idea)</p>",
        "id": 224069171,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611680384
    },
    {
        "content": "<p>My point is - why preserve the expansion if it it might change?</p>",
        "id": 224076346,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611683323
    },
    {
        "content": "<p>weak reason: tooling convenience.<br>\nStronger reason: because it might change. You may want to produce the valusets as they are at a given time and package that in a single zip.</p>",
        "id": 224079187,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611684422
    },
    {
        "content": "<p>If it's \"you might want to\", then it should be a configuration option - perhaps on a per value set basis.</p>",
        "id": 224079808,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611684719
    },
    {
        "content": "<p>yes, I was thinking it should not be default for every VS. Perhaps an extension on the VS that triggers that expansion?</p>",
        "id": 224082012,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611685724
    },
    {
        "content": "<p>Submit a change request</p>",
        "id": 224085885,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611687377
    },
    {
        "content": "<p>change request to SDC or to FHIR spec? <br>\nIf FHIR spec, a standard extension to VS?</p>",
        "id": 224097699,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611692737
    },
    {
        "content": "<p>IG publisher, I think</p>",
        "id": 224100628,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611694089
    },
    {
        "content": "<p>Would be relevant for value sets used in a variety of circumstances</p>",
        "id": 224100670,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611694106
    },
    {
        "content": "<p>standard extension expandWhenPublishing, coded.</p>",
        "id": 224103161,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611695178
    },
    {
        "content": "<p>codes = none | contained |  resource</p>\n<ul>\n<li>none is default, do not expand</li>\n<li>contained creates the expanded valueset as a contained resource</li>\n<li>resource creates the expanded valueset as an autonomous resource</li>\n</ul>",
        "id": 224103421,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611695309
    },
    {
        "content": "<p>ok?</p>",
        "id": 224103428,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611695313
    },
    {
        "content": "<p>Don't understand why it's not a boolean.  The value sets might be contained or stand-alone.  The expansion will live inside the value set, wherever it is.</p>",
        "id": 224103488,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611695354
    },
    {
        "content": "<p>replacing the valueset?</p>",
        "id": 224103508,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611695370
    },
    {
        "content": "<p>you'd have something in input and something different in output?</p>",
        "id": 224103546,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611695386
    },
    {
        "content": "<p>could be - because we are actually telling the system to expand, so I guess that is ok.</p>",
        "id": 224103621,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611695415
    },
    {
        "content": "<p>boolean was my first choice, I just thought that it would be better to allow expansion AND preserving the input as it is. Which sounds a bit silly... if the editor asks this to be expanded, then it gets expanded.</p>",
        "id": 224103763,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611695507
    },
    {
        "content": "<p>You'd have an input with just compose and an output with compose + expansion</p>",
        "id": 224103792,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611695522
    },
    {
        "content": "<p>the only downside is that the published output should not be used as input in another IG...</p>",
        "id": 224103850,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611695551
    },
    {
        "content": "<p>Why?</p>",
        "id": 224103865,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611695560
    },
    {
        "content": "<p>If there was already an expansion and the extension was present, the expansion would get replaced</p>",
        "id": 224103895,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611695580
    },
    {
        "content": "<p>what woudl the publisher do? override the expansion ?</p>",
        "id": 224103896,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611695580
    },
    {
        "content": "<p>ok. I just want to see that all corners are covered.</p>",
        "id": 224103928,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611695598
    },
    {
        "content": "<p>ok, boolean and a warning in the extension definition that setting <em>expandWhenPublishing</em> to true WILL replace the existing expansion.</p>",
        "id": 224104267,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611695660
    },
    {
        "content": "<p>I think that makes sense</p>",
        "id": 224104604,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611695749
    },
    {
        "content": "<p>is <em>expandWhenPublishing</em>  a reasonable name?</p>",
        "id": 224104707,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611695789
    },
    {
        "content": "<p>Works for me.</p>",
        "id": 224106123,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611696479
    },
    {
        "content": "<p><a href=\"https://github.com/HL7/fhir-ig-publisher/issues/225\">https://github.com/HL7/fhir-ig-publisher/issues/225</a></p>",
        "id": 224108194,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611697432
    },
    {
        "content": "<p>Jira for standard extension as well?</p>",
        "id": 224108296,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611697463
    },
    {
        "content": "<p>No need</p>",
        "id": 224109721,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1611698176
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> <span class=\"user-mention\" data-user-id=\"340886\">@Joe Amlung</span> <span class=\"user-mention\" data-user-id=\"193544\">@Jonathan Payne</span></p>",
        "id": 231311607,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1616420589
    },
    {
        "content": "<p>We've been working on a profile of Library called a \"manifest\" that would allow you to define expansion parameters for a set of related artifacts that all shared value set dependencies. That way you can say \"I want this set of value sets expanded with these parameters and versions\", and that statement can itself be a resource. We've developed it in the context of quality measures (and based on the notion of an expansion profile that the VSAC currently supports for this purpose), but the idea is generally applicable: <a href=\"http://build.fhir.org/ig/HL7/cqf-measures/measure-terminology-service.html\">http://build.fhir.org/ig/HL7/cqf-measures/measure-terminology-service.html</a></p>",
        "id": 231574028,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1616553335
    },
    {
        "content": "<p>In particular, the $expand override and the $package operation.</p>",
        "id": 231574050,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1616553352
    }
]