[
    {
        "content": "<p>We are trying to implement form population along the lines of the <a href=\"http://build.fhir.org/ig/HL7/sdc/populate.html#fhirpath-based-population\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/sdc/populate.html#fhirpath-based-population\">FHIRPath-based Population</a> in current draft IG. It specifies the <a href=\"http://build.fhir.org/ig/HL7/sdc/extension-sdc-questionnaire-sourceQueries.html\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/sdc/extension-sdc-questionnaire-sourceQueries.html\">sdc-questionnaire-sourceQueries extension</a> containing a bundle of search queries.</p>\n<p>What structure should such a bundle have? Does this mean we put a FHIR search string in Bundle.entry.request, one entry in bundle per questionnaire item to be populated? </p>\n<p>The Questionnaire/{id}/$populate operation accepts resources to go into form fields in the \"content\" parameter. However, we want to keep some association between the resources and the fields they are intended for. One way of maintaining this is passing search results in a bundle of similar structure to the one with queries: for every entry containing a request, the Form Filler executes the search and places the result in Bundle.entry.resource. This way, for every form field, the search result would be located in the Bundle.entry at an index known in advance, and we could pre-generate FHIRPath queries against the bundle of search results for every questionnaire item at the time of authoring the questionnaire with its sourceQueries extension containing the bundle of queries.</p>\n<p><a href=\"/user_uploads/10155/21JbyleapqLJ5AbnBXWNJ4sC/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/21JbyleapqLJ5AbnBXWNJ4sC/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/21JbyleapqLJ5AbnBXWNJ4sC/pasted_image.png\"></a></div><p>This would work when a single resource is expected to result from the query, to go into a single instance of a questionnaire response item. But what if we want to get multiple search results, to populate a repeating form field? Some ways to accomplish this:</p>\n<ul>\n<li>To put the search results of a query as a nested bundle in Bundle.entry.resource. Nested bundles don't feel nice, but this lets us build FHIRPath queries against the bundle structure given in the sourceQueries extension.</li>\n<li>To put in the bundle multiple entries (one per search result) having the same query string. To populate a field, we select the entries having its corresponding query string, and extract values from their resources. This is fragile since it requires queries for every field to be unique.</li>\n<li>To put a custom extension in Bundle.entry, which would provide linkId of the item being populated. Now at least we don't use query strings as field identifiers.</li>\n<li>To reject the idea of passing all search results for the form in a single bundle, and instead pass the resources individually in the \"content\" parameter of $populate, but augment them with a similar extension stating the target linkId.</li>\n</ul>\n<p>I am sure there must have been discussions on this matter in the working group, weren't there any recommendations?</p>",
        "id": 154010215,
        "sender_full_name": "Vladimir Smirnov",
        "timestamp": 1539880401
    },
    {
        "content": "<p>It's not necessarily one query per item, it's one query per set of information that needs to be available to populate the questionnaire.  A simple Questionnaire might only need one query (possibly with includes) to grab all of the information needed to populate the questionnaire.  The results of the queries will be available for FHIRPath to reach into and grab the relevant information to populate the different items within the Questionnaire.  Our expectation is that forms often won't be well-aligned with the structure of resources, so we don't want to rely on such alignment in our extraction/population process.  A lot of forms are formally tested instruments that can't be altered or are defined by people who don't know (or care) what impact their design choices have on alignment of the data with FHIR.</p>\n<p>The search results will absolutely be a Bundle of Bundles - that's what the result would be to executing the Batch.  And you would indeed use FHIRPath to navigate the results.  This will be much more clear once we update the specification to actually have some example instances (and probably improve the documentation as well :&gt;)</p>",
        "id": 154010277,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539899454
    },
    {
        "content": "<p>Did this clarification get done, and any examples anywhere?<br>\n(looking to include it in Eric and My DevDays presentation)</p>",
        "id": 167639184,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1559978640
    },
    {
        "content": "<p>Examples?  Not yet  :(</p>",
        "id": 167652317,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1560002480
    },
    {
        "content": "<p>Looks like I have a job to do then.</p>",
        "id": 167652792,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1560003312
    },
    {
        "content": "<p>And you can review it too <span aria-label=\"yum\" class=\"emoji emoji-1f60b\" role=\"img\" title=\"yum\">:yum:</span><br>\nMaybe during the let's build session.</p>",
        "id": 167652796,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1560003345
    },
    {
        "content": "<p>I was planning to demo the NLM tooling for extraction if i can get it to.   Right now some glitches.  Otherwise I will try To Stand up a simple copy and paste proof of concept app</p>",
        "id": 167656047,
        "sender_full_name": "Eric Haas",
        "timestamp": 1560008650
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> Depending on what kind of examples you are looking for, we might have some <a href=\"https://github.com/lhncbc/lforms-fhir-app/tree/master/e2e-tests/data/R4\" target=\"_blank\" title=\"https://github.com/lhncbc/lforms-fhir-app/tree/master/e2e-tests/data/R4\">here</a>.  The <a href=\"https://github.com/lhncbc/lforms-fhir-app/blob/master/e2e-tests/data/R4/ussg-fhp.json\" target=\"_blank\" title=\"https://github.com/lhncbc/lforms-fhir-app/blob/master/e2e-tests/data/R4/ussg-fhp.json\">ussg-fhp.json</a> uses launchContext and initialExpression.  The <a href=\"https://github.com/lhncbc/lforms-fhir-app/blob/master/e2e-tests/data/R4/weight-height-questionnaire.json\" target=\"_blank\" title=\"https://github.com/lhncbc/lforms-fhir-app/blob/master/e2e-tests/data/R4/weight-height-questionnaire.json\">weight-height-questionnaire.json</a> contains an example of \"variable\" (though the source data is brought in via observationLinkPeriod, so it is kind of a mix of obsevation-based and FHIRPath-based).</p>",
        "id": 167775424,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1560185628
    }
]