[
    {
        "content": "<p>Any tips on validation contingent on Questionnaire Response status?    I am using the NLM LHC Forms  application, so that might limit what I can do as well.   Some of our Questionnaires are very long and might take 4-5 hours to complete.  I would like the users to be able to store their work if they want to take a break as a FHIR Questionnaire Response  (with a status of \"in-progress\" )  and not have the validation rules take effect.   </p>\n<p>So far, the validation rules  use readily available extensions like \"<a href=\"http://hl7.org/fhir/StructureDefinition/minLength\">http://hl7.org/fhir/StructureDefinition/minLength</a>\"    and are very simple like:<br>\nsome items  are required<br>\nitem has a minimum quantity<br>\nif \"other \"  is selected, then the text box explanation must be filled in<br>\ndate validation between answers (eg. the root cause assessment activity must occur after the problematic event actually happened)</p>\n<p>I would prefer that the users can submit their Questionnaire Response  with a status of \"in-progress\"  without being blocked by these value constraints.</p>\n<p>Once the user clicks a button on the UI to \"Submit as Completed\",  then I would like the validation to take place. </p>\n<p>Is this possible?    I thought about updating the Questionnaire Response status via the Client to \"Completed\" then pulling the Questionnaire Response back for editing  and validation  using custom fhirpath.js  invariants  with a ternary to check that Questionnaire Response status is \"Completed\".   But, that is cumbersome and if validation fails and the user gives up, then the client has to have a robust way to be sure to reset the Questionnaire Response to \"in-progress\" in the FHIR server.   </p>\n<p>Maybe I am making this too difficult.</p>",
        "id": 242261995,
        "sender_full_name": "Diane",
        "timestamp": 1623355165
    },
    {
        "content": "<p>If the user is clicking \"Submit as Completed\", your code that handles that button could call the LHC-Forms API LForms.Util.checkValidity() to run the validations then.</p>",
        "id": 242262637,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1623355436
    },
    {
        "content": "<p>Validation rules shouldn't kick in as anything other than 'warnings' unless the status is 'completed'.  However basic 'resource' validations are always in force.  Are you finding any of those problematic?</p>",
        "id": 242281654,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1623365492
    },
    {
        "content": "<p>After seeing this one recently in another post (and changing our internal implementation too) I've had a bit of a change of heart on this one...<br>\nThere is definitely a difference between errors and warnings here, and I think if you're calling $validate, then it shouldn't matter what the status is, but if you're storing it, then I think that should permit it to be stored (and maybe return warnings if you're returning the operationoutcome).<br>\n<span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  thoughts on that subtle difference?</p>",
        "id": 242292330,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1623376038
    },
    {
        "content": "<p>I think an instance of a QuestionnaireResponse must always be valid against the resource constraints and any profile it declares.  It doesn't need to be valid against the Questionnaire it asserts it's a response to until/unless the status is 'complete' or 'amended', though it should  have base validity - e.g. refer to the appropriate linkIds, use appropriate types for responses, etc.  But all invariants, required answers, etc. should be ignored until complete.  Once the status changes, servers MAY (but don't have to) reject instances that aren't strictly valid against their referenced Questionnaire.</p>",
        "id": 242296941,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1623381731
    },
    {
        "content": "<p>Base yes, but was thinking a $validate could also verify all the other rules there, but be permissive on the save.<br>\nStill seems a little weird. (either way)</p>",
        "id": 242335764,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1623413424
    },
    {
        "content": "<p>In my new validation implementation I'm considering the display text to be included in the output error messages, and I'm wondering if the display text in the QuestionnaireResponse should also be considered?</p>",
        "id": 276141513,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1647921637
    },
    {
        "content": "<p>e.g. IF the QR.item.text = 'localized/personalized Q1 display' and the W.item.text = 'Q1 Display value'<br>\nshould/could the localized display be included in the validation output?</p>",
        "id": 276141592,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1647921736
    },
    {
        "content": "<p>I'm not understanding the question...</p>",
        "id": 276189357,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1647956271
    },
    {
        "content": "<p>Eg. Output an error message like<br>\n'localuzed/personalised Q1 display is greater than the maximum value 4.4\"<br>\nWhere that display label text value was in the QR.</p>",
        "id": 276251273,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1647981731
    }
]