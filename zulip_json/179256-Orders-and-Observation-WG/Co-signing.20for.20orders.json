[
    {
        "content": "<p>I was wondering how to go about a situation in which a ServiceRequest needs to be signed by 2 or more parties before it can be executed. How would you model such a situation? The ServiceRequest should contain the practitioner(s) and their signature.</p>",
        "id": 268544239,
        "sender_full_name": "Bart Decuypere",
        "timestamp": 1642601402
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191689\">@Hans Buitendijk</span> <span class=\"user-mention\" data-user-id=\"191969\">@John David Larkin Nolen</span> ? Any guidance out there?</p>",
        "id": 268545607,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1642601991
    },
    {
        "content": "<p>the concepts of co-signatures and counter-signatures are supported in the general Signature datatype (type of signature).</p>",
        "id": 268565270,
        "sender_full_name": "John Moehrke",
        "timestamp": 1642609692
    },
    {
        "content": "<p>IIRC the meaning is not to capture the signature itself, but the workflow of ordering and co-ordering, validating, signing...</p>",
        "id": 268600056,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1642624813
    },
    {
        "content": "<p>Requesting a signature would typically be a Task, and the signature itself would typically be captured with Provenance, though it could also be done with an extension.</p>",
        "id": 268632105,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1642645241
    },
    {
        "content": "<p>We should bring it up to Workflow. in the ServiceRequest we may need to persist the signers/co-signers as References, and their roles. The rest is indeed tasks and capturing the events of signing</p>",
        "id": 268649099,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1642661362
    },
    {
        "content": "<p>After yesterday's OO call, my current  thinking is that the extension on ServiceRequest (and xxxRequest) could look like</p>\n<div class=\"codehilite\"><pre><span></span><code>* co-requester (0..*)\n  * role (1..1) Coding\n  * requester (1..1) Reference\n</code></pre></div>",
        "id": 268649234,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1642661481
    },
    {
        "content": "<p>Provenance can support any number of co-signatures, counter-signatures, etc... and there is no need for an extension, it is native use-case for Provenance.</p>",
        "id": 268684296,
        "sender_full_name": "John Moehrke",
        "timestamp": 1642681874
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span>  what is OO's reluctance to use Provenance?</p>",
        "id": 268724373,
        "sender_full_name": "Eric Haas",
        "timestamp": 1642698364
    },
    {
        "content": "<p>No reluctance.</p>",
        "id": 268724499,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1642698419
    },
    {
        "content": "<p>There are 2 sides to this:</p>",
        "id": 268724516,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1642698424
    },
    {
        "content": "<p>actually 3 sides:</p>",
        "id": 268724541,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1642698435
    },
    {
        "content": "<ol>\n<li>Indicate who co-ordered the service</li>\n</ol>",
        "id": 268724573,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1642698447
    },
    {
        "content": "<ol start=\"2\">\n<li>If needed get their signatures</li>\n</ol>",
        "id": 268724596,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1642698458
    },
    {
        "content": "<ol start=\"3\">\n<li>Manage the entire workflow for \"who needs to sign-off next, is this actionable without sign-off\"</li>\n</ol>",
        "id": 268724759,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1642698512
    },
    {
        "content": "<p>The part that is interesting is 1</p>",
        "id": 268724780,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1642698522
    },
    {
        "content": "<p>The other interesting part is 3.</p>",
        "id": 268724801,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1642698529
    },
    {
        "content": "<p>part 2 could be interesting IF we need to capture the actual signatures</p>",
        "id": 268724840,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1642698544
    },
    {
        "content": "<p>I think \"co-signing\" in this context is about \"signing off / approving / athorizing\"</p>",
        "id": 268724898,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1642698572
    },
    {
        "content": "<p>For 1 and 3 there's no need for actual signatures</p>",
        "id": 268724943,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1642698593
    },
    {
        "content": "<p>I think you are confusing a \"Digtial Signature\" from all classes of Signature. The Signature datatype, that is used by Provenance, is a Signature. One can choose to implement that Signature with Digital Signature, or just elements holding codes.</p>",
        "id": 268726675,
        "sender_full_name": "John Moehrke",
        "timestamp": 1642699280
    },
    {
        "content": "<p>I have no idea what this means.</p>",
        "id": 268732664,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1642701723
    },
    {
        "content": "<p>Anyway</p>",
        "id": 268732740,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1642701747
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"441371\">@Bart Decuypere</span> I believe the extension is enough. The workflow thing can be a 2nd priority, i guess?</p>",
        "id": 268732910,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1642701820
    },
    {
        "content": "<p>There's also medical/legal requirements for a provider to sign off/request an order/Service Request, such as the CLIA requirements discussed on O&amp;O.</p>",
        "id": 270472117,
        "sender_full_name": "Andrea Pitkus, PhD, MLS(ASCP)CM, CSM",
        "timestamp": 1643842578
    },
    {
        "content": "<p>In non FHIR implementations, the LIS can capture a primary verification of test results and a secondary verifier (two different user IDs), especially where required for CLIA.  Assume most EHRs would be able to support a primary and secondary \"signer\" on an order requisition (i.e. resident and fellow/attending).  It should be indicated who ultimately has medico-legal responsibility for the patient in case there are questions too.</p>\n<p>The question has arisen about digital signatures for lab orders.  The question is whether your use case supports EHR/electronic symptom capturing the \"signature\" via a valid/authorized User ID on the Service Request or are you trying to capture an actual digital signature, which may be a scanned paper/wet signature or capture of electronic pen or finger image/digital signature?  Each are different data and would have different requirements in how they are transmitted.</p>",
        "id": 273095335,
        "sender_full_name": "Andrea Pitkus, PhD, MLS(ASCP)CM, CSM",
        "timestamp": 1645712675
    }
]