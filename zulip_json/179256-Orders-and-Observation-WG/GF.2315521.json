[
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=15521\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=15521\">GF#15521</a> Add+%22supportingInformation%22+as+either+a+core+element+or+standard+extension+to+DiagnosticReport :</p>\n<p>I can see a use for this but would like to find out whether is a real implementation need or windowdressing for completeness sake. Is this typically all glommed together in the DR conclusion as free text or in DR.presentedForm.</p>",
        "id": 153955260,
        "sender_full_name": "Eric Haas",
        "timestamp": 1525190312
    },
    {
        "content": "<p>Specific use cases sought...</p>",
        "id": 153955261,
        "sender_full_name": "Eric Haas",
        "timestamp": 1525190354
    },
    {
        "content": "<p>I've only ever seen supporting information on the request. WHich is right where we have it</p>",
        "id": 153956101,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1525495290
    },
    {
        "content": "<p>Supporting information on the request lets you send (or call attention to) extra information that might be used when processing the request.  Supporting information on the response allows you to identify what information was <em>used</em> in the generation of the report and where adjustements to/refuting of that supporting information might call into question the report results.  It may be that it's redundant some times in that if you properly assert \"derived from\" relationships with all the leaf-level Observations, that would cover many of the situations.  But if the person generating the report relied on assertions that the patient had particular conditions, had particular family relationships, etc., there's no way to establish that linkage without adding DiagnosticReport.supportingInfo.</p>",
        "id": 153956132,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1525521111
    },
    {
        "content": "<p>My question is  whether it is a \" gee wouldn't it be great if we could do this\"  vs what capabilities do implementers need now.    I'm not getting a lot of  supporting information for adding it in.</p>",
        "id": 153956462,
        "sender_full_name": "Eric Haas",
        "timestamp": 1525703063
    },
    {
        "content": "<p>I'm fine with it being a standard extension</p>",
        "id": 153956467,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1525703283
    },
    {
        "content": "<p>OO on FHIR call, EH moves to make standard extension, second: JCT  :  4-0-1  (RH Chair)  ( move notes to jira)</p>",
        "id": 153956996,
        "sender_full_name": "Eric Haas",
        "timestamp": 1525804684
    },
    {
        "content": "<p>@Lloyd how does this request differ from  adding an element for citations using relatedArtifact.  <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=15824\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=15824\">GF#15824</a>  I think Supporting information would already cover this,  why is there a need for both?</p>",
        "id": 153976033,
        "sender_full_name": "Eric Haas",
        "timestamp": 1531909260
    },
    {
        "content": "<p>RelatedArtifact lets you point to literature - journal articles, papers, research studies, etc. that provide evidence for the results or guidance on how to interpret the results.  supportingInformation indicates information from the patient's record that was taken into account or used to help calculate the results.  They're rather different things.</p>",
        "id": 153976068,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531925242
    },
    {
        "content": "<p>if I made a Venn diagram SupportingInfo does everything RelatedArtifact does. <a href=\"/user_uploads/10155/WsXKeecQapYvSUBHhH_421Po/7-18-2018-9-03-42-AM.gif\" target=\"_blank\" title=\"7-18-2018-9-03-42-AM.gif\">7-18-2018-9-03-42-AM.gif</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/WsXKeecQapYvSUBHhH_421Po/7-18-2018-9-03-42-AM.gif\" target=\"_blank\" title=\"7-18-2018-9-03-42-AM.gif\"><img src=\"/user_uploads/10155/WsXKeecQapYvSUBHhH_421Po/7-18-2018-9-03-42-AM.gif\"></a></div>",
        "id": 153976086,
        "sender_full_name": "Eric Haas",
        "timestamp": 1531930031
    },
    {
        "content": "<p>No need for both.  They are even described using the say terms in the trackers.</p>\n<p>SupportingInfo tracker:</p>\n<p>\"Details (Edit)<br>\nWhen returning a diagnostic report, it's not uncommon to <strong>reference \"other\" information</strong> that was not generated as part of the diagnostic process that was either used by the lab in making their determination or is provided to the ordering clinician to help with their interpretation of the results.  In genomics, this can include family history, other observations about the patient and <strong>literature references.</strong>\"</p>\n<p>relatedInfo Tracker:<br>\n\"Details (Edit)<br>\nThe RelatedArtifact data type allows conveying <strong>citations, supporting evidence, documentation of processes,</strong>  caveats around testing methodology and <strong>other supporting documentation</strong> relevant to a resource.  This information is commonly included as references as part of laboratory and clinical genomics reports.  As such, it should be supported by Observation, at least as an extension.\"</p>",
        "id": 153976087,
        "sender_full_name": "Eric Haas",
        "timestamp": 1531930547
    },
    {
        "content": "<p>can reference directly using Binary in supporting information too</p>",
        "id": 153976088,
        "sender_full_name": "Eric Haas",
        "timestamp": 1531930601
    },
    {
        "content": "<p>So my impression is supportingInfo is the grab grab .everybody is clamoring for so they don't have to worry about context. Just dump a bunch of references in there and let the data consumer figure out the how it relate to the Observation or DiagnosticReport. <span class=\"user-mention\" data-user-id=\"192228\">@Brian Reinhold</span> ?? and <span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span>   ??  Why even have any other elements?  just code- value-supportingInfo</p>",
        "id": 153976090,
        "sender_full_name": "Eric Haas",
        "timestamp": 1531930929
    },
    {
        "content": "<p>On a less rhetorical note it is getting increasingly difficult to provide guidance for what to use when as we try to create new ways to reference yet another resource.    Which why I am reluctant to add another extension for relatedArtifact.   Just (over)use supportingInfo instead....</p>",
        "id": 153976091,
        "sender_full_name": "Eric Haas",
        "timestamp": 1531931149
    },
    {
        "content": "<p>Understand the concern.  RelatedArtifact gives a deeper structure that's appropriate for literature-type references that supportingInfo doesn't provide though.</p>",
        "id": 153976119,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531938706
    },
    {
        "content": "<p>I’m not sure what the discussion has evolved into but since Eric mentioned me I guess I’ll reiterate my request:</p>\n<ul>\n<li>result of breathing test was obtained while/after “administering extra oxygen”</li>\n</ul>\n<p>And yes sure there is a heap of things that can help determine context. My microbiologists kept the use cases coming. And yes that might not be recorded as structured as you would like. I blame the real world for that.</p>",
        "id": 153976255,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1531978218
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span>   I have a proposal for your tracker which is closely related to <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  and <span class=\"user-mention\" data-user-id=\"192228\">@Brian Reinhold</span> trackerrs and I'm having difficulty thinking we need all these different ways to do essentially the same thing and heartburn trying to describe how to use one verses the other. </p>\n<p>Like I say in my proposed disposition for your tracker \"result of breathing test was obtained while/after “administering extra oxygen\"  you can skin this cat about 6 different ways:</p>\n<ul>\n<li>with terminology using pre-coordinated or post-coordinated concepts, using translations in <code>code</code></li>\n<li>or structurally using components or like you want a new extension (for now) to reference a qualifying or refining Observation.... </li>\n</ul>\n<p>Observation has devolved into a  multipurpose name:value resource which  can meet the needs of all and none at the same time -  it is great for flexibility and really crappy for interoperability.  You will always need to profile it.  (I think I'll change the resource introduction to this  ;-)  )</p>",
        "id": 153976362,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532014228
    },
    {
        "content": "<p>After thinking about this I changing my answer and proposing :</p>\n<p>1. <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=15824\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=15824\">GF#15824</a> NeedRelatedArtifactonObservationandDiagnosticReport (Lloyd McKenzie)  : not persuasive  see use SupportingInfo</p>\n<p>2. <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17228\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17228\">GF#17228</a> SupportinginformationinObservation (Alexander Henket) : Persuasive/Mod  add extension (for R4) SupportingInfo which covers all the gaps in referencing whatever you want for whatever reason you want that is not covered by an existing element.</p>\n<p>3. <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=16172\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=16172\">GF#16172</a> Observation.derivedFrom%2FhasMember (Brian Reinhold) In Person  : Persuasive/Mod  add extension (for R4) SupportingInfo which covers all the gaps in referencing whatever you want for whatever reason you want that is not covered by an existing element.</p>",
        "id": 153976366,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532014778
    },
    {
        "content": "<p>supportingInfo and RelatedArtifact are <em>not</em> the same thing.  You can't say the same things with them.  RelatedArtifact allows you to point to literature, convey citations, relationship types, etc.  supportingInfo is just a linkage to what resources were used (or are to be used) to perform an action.</p>",
        "id": 153976369,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532015211
    },
    {
        "content": "<p>I accept that the boundaries may need to be made more clear, but that doesn't mean that both aren't needed.</p>",
        "id": 153976370,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532015238
    },
    {
        "content": "<p>If relatedArtifact were loosened up a bit it to include a Reference(Any) and more types and tweek to the definition  it could replace all this and more ( and we would go full circle back to related...)   it would be like a supportinfo on steriods...</p>",
        "id": 153976375,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532015896
    },
    {
        "content": "<p>In other words replace <code>related</code> with a  <code>related</code> type   metadataelement  superRelatedArtifact</p>",
        "id": 153976377,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532015956
    },
    {
        "content": "<p>We landed on extension because Observation is so close to normative and we felt enough uncomfortable to postpone new breaking changes. If more sort of similar use cases pop up I’m fine with anything that carries the right semantics. My use case involved a procedure with device characteristics so a simple CodeableConcept wouldn’t do</p>",
        "id": 153976379,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1532016193
    },
    {
        "content": "<p>RelatedInformation isn't intended to be supportinInformation on steroids.  It's intended to provide literature links, ties to other protocols, etc.  It's about accademic provenance.  What I'd actually prefer is for it to be more tightly defined so that it's very clear how it and supportingInfo are distinct.  <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> ?</p>",
        "id": 153976391,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532021597
    },
    {
        "content": "<p>Agreed, RelatedArtifact is a definitional component, I wouldn't expect to ever see a reference to patient-specific information in a RelatedArtifact.</p>",
        "id": 153976393,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532021738
    },
    {
        "content": "<p>I think that's potentially a reasonable boundary condition. Supporting Information is about what patient resources support a particular observation, RelatedArtifact is about what knowledge resources support it.</p>",
        "id": 153976394,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532021771
    },
    {
        "content": "<p>I like that boundary.</p>",
        "id": 153976399,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532022132
    },
    {
        "content": "<ul>\n<li>\n<p>Why limit relatedArtifact to definitional space- why exclude patient-specific information?  I mean it seems to handle the use cases for pulling in other FHIR and nonFHIR resources pretty comprehensively and we have gotten numerous trackers to do just that  ( reference other stuff ).</p>\n</li>\n<li>\n<p>What we talked about in OO is keeping the STU3<code>related</code> and it instead of a bunch of elements and extensions making it a  <em>single</em> reference to a new improved relatedArtifact-like meta element that could handle all this stuff.    What we ran into with related was meshing the type code with the Reference[Type].    That does go <strong>not</strong> away with this new improved relatedArtifact-like meta element, but why do we care at the base level?  Let implementers do what they want and create there own constraints of Reference([Type]).  It is no better or worse than having something like suppportingInfo Reference(Any) and more consistent approach.</p>\n</li>\n</ul>",
        "id": 153976411,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532023967
    },
    {
        "content": "<p>Because all of the places it's used, that's what it's for</p>",
        "id": 153976432,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532027789
    },
    {
        "content": "<p>RelatedArtifact is for provenance information for protocols, decision support rules, data models, etc.  All of the extra properties in it are tuned to that purpose.</p>",
        "id": 153976433,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532027831
    },
    {
        "content": "<p>When we want to send the height or weight along with a prescription or lab result, it's overkill and inappropriate</p>",
        "id": 153976434,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532027855
    },
    {
        "content": "<p>There's no reason to try to collapse the use-cases or the data structures</p>",
        "id": 153976435,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532027877
    },
    {
        "content": "<p>except the onesy twosy trackers are overwhelming me</p>",
        "id": 153976437,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532028375
    },
    {
        "content": "<p>they are asking for essentially the same thing with a slightly different context.</p>",
        "id": 153976438,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532028433
    },
    {
        "content": "<p>I disagree it is overkill - over the wire is no more than related in STU3.   and from your first response it is apparent relatedArtifact was created without consideration for broader use,  I am suggesting that maybe it is appropriate for the broader use case as well.</p>",
        "id": 153976439,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532028640
    },
    {
        "content": "<p>We don't RelatedPerson to support broader use.  The places it appears are specifically places where only definitional resources are appropriate.  Opening it up to non-definitional resources would be a signficant problem.</p>",
        "id": 153976442,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532028945
    },
    {
        "content": "<p>I don't understand fundamentally, why would it be a problem - I you want to use it definitionally then you restrict the references to definition resources?  can you explain?</p>",
        "id": 153976450,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532030591
    },
    {
        "content": "<p>In resources, we can't restrict the references.  When we reference the type, we get the full type - unconstrained.</p>",
        "id": 153976510,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532033861
    },
    {
        "content": "<p>Semantically, the name \"relatedArtifact\" doesn't imply anything about it being specific to citations. In English, it would be interpreted as an artifact that is related to the resource it appears in. A citation appearing in a resource could certainly be \"supporting\" why something was done, or is to be done. The name \"supportingInfo\" doesn't imply that a citation would be out of place. In English, it would be interpreted as information that is supporting why something was done or is to be done or even what is to be done. So semantically, they sure appear to be covering the same ground. And semantics are important since 99% of implementers are not going to have the extensive background or experience in why FHIR resource are the way the are and how they are supposed to be used like a Lloyd or Eric or Grahame, and are going to rely on the semantics of resource and element names, and secondarily are going to look at the definitions and scope; not perfect, but how implementers work.</p>\n<p>Structurally there is the same confusion. supportingInfo  <strong>is</strong> a reference to \"Any\", and RelatedArtifact <strong>includes</strong> a reference to \"Any\". So again, they really seem to be covering the same ground</p>\n<p>I am not aware of any resources that include both supportingInfo and RelatedArtifact, and if we did that would cause a ton of confusion with implementers. But it just seems odd to me to have 2 things that are semantically the same, and sometimes we use one and sometimes we use the other.</p>",
        "id": 153976530,
        "sender_full_name": "Jack Wallace",
        "timestamp": 1532037359
    },
    {
        "content": "<p>RelatedArtifact is indeed an overly broad name.  I'd be open to constraining that too...</p>",
        "id": 153976544,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532038333
    },
    {
        "content": "<p>I'd be open to that as well, names are hard. We could also constraint RelatedArtifact to be reference(ActivityDefinition|PlanDefinition|Library|...)</p>",
        "id": 153976566,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532038912
    },
    {
        "content": "<p>is already constrained to canonical so that covers it.</p>",
        "id": 153976607,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532040315
    },
    {
        "content": "<p>I'm still not convinced we need both supportingInfo and relatedArtifact in Observation and in FHIR  ... I think we keep that name and broaden its scope by smooshing them together.    I'm not understanding the downside.   The context of use determines what is referenced right?</p>",
        "id": 153976610,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532040544
    },
    {
        "content": "<p>are you proposing generally changing RelatedArtifact in all resources?</p>",
        "id": 153976612,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532040902
    },
    {
        "content": "<p>I'm pondering whether:</p>\n<ul>\n<li>changing relatedArtifact to be more used  generally which means replacing canoncal with Reference(Any),  edit description</li>\n<li>and replace all type Reference(Any) for <code>[Type].supportingInformation</code>, <code>Observation.related</code> type with it. </li>\n</ul>\n<p>Though is a proposal and I'm looking for the downsides.</p>",
        "id": 153976614,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532041362
    },
    {
        "content": "<p>so far you've only be interested in the downsides in the scope of Observation, not the downsides in the other contexts it is used</p>",
        "id": 153976615,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532041407
    },
    {
        "content": "<p>at least, that's my impression from this topic</p>",
        "id": 153976616,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532041424
    },
    {
        "content": "<p>when I say downsides I mean overall</p>",
        "id": 153976647,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532042776
    },
    {
        "content": "<p>well, there's very definite downsides for opening up related artifact to reference anything from the knowledge resources</p>",
        "id": 153976650,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532042904
    },
    {
        "content": "<p>why?  Seems like I've been saying the same for  Reference(anything) for a long time with Observation and nobody seems to think so.</p>",
        "id": 153976651,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532043011
    },
    {
        "content": "<p>Observation is not a knowledge resource.</p>",
        "id": 153976658,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532043388
    },
    {
        "content": "<p>that's why I said: \"you've only be interested in the downsides in the scope of Observation\"</p>",
        "id": 153976659,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532043410
    },
    {
        "content": "<p>all the other places where it's used...</p>",
        "id": 153976661,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532043420
    },
    {
        "content": "<p>Yes yes I know where its used, Ignoring Observation - why would it be bad if it were reference (any) where its presently used.  One would surmize that the context of use would dictate that it should reference the appropriate FHIR and non-FHIR resources.</p>",
        "id": 153976667,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532043725
    },
    {
        "content": "<p>In knowledge resources, it's essential that the references can only be to other knowledge resources and we want to convey things like citation information and the type of relationship.</p>\n<p>With supportingInfo, we want other clinical information and there's no type of relationship involved other than \"supported/will support execution of the event\"</p>",
        "id": 153976668,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532043736
    },
    {
        "content": "<p>Knowledge resources <em>can't</em> represent patient-specific resources.  That would be a very bad thing.</p>",
        "id": 153976669,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532043767
    },
    {
        "content": "<p>There is no such constraints on the nonFHIR resources it may reference.</p>",
        "id": 153976670,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532043776
    },
    {
        "content": "<p>just words ...</p>",
        "id": 153976671,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532043785
    },
    {
        "content": "<p>Right.  So we agree there should be such constraints.</p>",
        "id": 153976672,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532043833
    },
    {
        "content": "<p>OK back to Observation  too many extensions, too many options to do the same thing, too many opportunities to do it wrongly like using supportingInfo Reference(Any) to list all the members of a panel, the patient, the Device, the Procedure......</p>",
        "id": 153976679,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532044305
    },
    {
        "content": "<p>... and documentation, and citations.</p>",
        "id": 153976680,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532044402
    },
    {
        "content": "<p>but I don't think those last two are wrong</p>",
        "id": 153976681,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532044443
    },
    {
        "content": "<p>You could stick everything into an annotation too.  And I'm sure someone will try.  That doesn't mean we don't create distinct elements for things with clearly different purposes.  Agree that the definition for supportingInfo should clearly exclude the use-cases for Related if we add it.  There should be a clear location for different things.</p>",
        "id": 153976685,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532044647
    },
    {
        "content": "<p>but back to a point Lloyd may be familiar with... can existing systems differentiate between these things? How would they be represented in v2?</p>",
        "id": 153976706,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532046922
    },
    {
        "content": "<p>btw, shouldn't this stuff be extensions so we can see how this plays out before adding to Observation?</p>",
        "id": 153976708,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532046936
    },
    {
        "content": "<p>Yup - we're only talking about extensions.</p>",
        "id": 153976716,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532048482
    },
    {
        "content": "<p>And supporting RelatedArtifact is a particularly advanced piece of functionality.  If the differentiator is patient-related vs. not, presumably systems can do that.</p>",
        "id": 153976719,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532048564
    },
    {
        "content": "<p>I'd be surprised. certainly the lab system I used to be CTO for wouldn't. All we had was a text string that might be a reference to... something.....</p>",
        "id": 153976720,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532048675
    },
    {
        "content": "<p>Then that'd have to go into notes.  If you don't have a reference or a URI, you can't use either of these extensions.</p>",
        "id": 153976727,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532048881
    },
    {
        "content": "<p>OK waving the white flag ,  I've been convinced reluctantly to add three new extensions.   ( the third is qualifiedBy which wasn't added before when removed .related but  Alex's tracker fit this use case and is certainly not supporting information.) I will need to beef up the definition of supportingInfo reference(Any)</p>",
        "id": 153976756,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532050826
    },
    {
        "content": "<p>Looking at RelatedArtifact, it's actually using a canonical, so it's already the case that it can only point at KnowledgeResources. It does use \"canonical(Any)\" though, should that be just \"canonical\", or is the \"Any\" in this context understood to be \"Any resource referenceable by a canonical URL\"?</p>",
        "id": 153977111,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532292001
    },
    {
        "content": "<p>Any would need to be any resource referencable with a canonical URL - but probably worth a clarification of the spec to make that explicit</p>",
        "id": 153977112,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532292319
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17537\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17537\">GF#17537</a></p>",
        "id": 153977113,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532292920
    }
]