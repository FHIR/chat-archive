[
    {
        "content": "<p>Hello <span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span> and <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> <br>\nI created an entry called 'Orientation' in the namespace 'breastrad'. There is also an Orientation in shr.core. I get the following error message.</p>\n<p>ERROR shr: Found conflicting definitions for Orientation in multiple namespaces: breastrad,shr.core. ERROR_CODE:11022 (module=shr-text-input, file=CIMPL\\Generated\\Resources\\BreastAbnormality.txt, shrId=breastrad.BreastAbnormality)</p>\n<p>Is it the design to not allow entries having the same name in different namespaces? If so, what does a namespace do other than sit there and look pretty :-) ?</p>",
        "id": 170493718,
        "sender_full_name": "Kurt Allen",
        "timestamp": 1562709326
    },
    {
        "content": "<p>It shouldnâ€™t be an error, but you may have to use the fully qualified name in certain places. Or it might be a CIMPL compiler bug.</p>",
        "id": 170493890,
        "sender_full_name": "Mark Kramer",
        "timestamp": 1562709498
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"191447\">@Mark Kramer</span> <br>\nThat was my bad. I thought it was complaining that I created an item with the same name, but the error was that I was referencing Orientation without fully qualifying the name so it didn't know which one to use. I referenced it with the fully qualified name and the error went away.</p>\n<p>The Orientation reference was from an entry property defined in the same namespace as the Orientation element definition, so it might make sense when the name is not fully qualified to automatically use the 'local' definition even if there is a non local definition.</p>",
        "id": 170494352,
        "sender_full_name": "Kurt Allen",
        "timestamp": 1562710030
    },
    {
        "content": "<p>Oops.  I just wrote a whole long-winded response to your question, and then just noticed Mark already responded and it is resolved.  That said, I agree -- I think it makes sense to <em>prefer</em> the current namespace when resolving names, even if there is a conflict.  You should only need the FQN to resolve an element to an external namespace.</p>",
        "id": 170507144,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1562725876
    },
    {
        "content": "<p>I'll log a bug so it's on our list.</p>",
        "id": 170507214,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1562726025
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 170580813,
        "sender_full_name": "Kurt Allen",
        "timestamp": 1562793798
    }
]