[
    {
        "content": "<p>my pull failed with Bash exited with code 137 -- Please help <a href=\"https://github.com/HL7/fhir/pull/195\" target=\"_blank\" title=\"https://github.com/HL7/fhir/pull/195\">https://github.com/HL7/fhir/pull/195</a></p>",
        "id": 154014357,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541022341
    },
    {
        "content": "<p><a href=\"https://fhir-build.visualstudio.com/build.fhir.org/_build/results?buildId=1154&amp;view=logs\" target=\"_blank\" title=\"https://fhir-build.visualstudio.com/build.fhir.org/_build/results?buildId=1154&amp;view=logs\">https://fhir-build.visualstudio.com/build.fhir.org/_build/results?buildId=1154&amp;view=logs</a> has the full logs -- did you review?</p>",
        "id": 154014358,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541022438
    },
    {
        "content": "<p>Looks like a terminology cache issue</p>",
        "id": 154014359,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541022486
    },
    {
        "content": "<p>could be. I looked and can't see anything I can act upon.</p>",
        "id": 154014360,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541022519
    },
    {
        "content": "<p>so, if it is a term cache issue... is there a way to kick it to try again?</p>",
        "id": 154014361,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541022534
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> does this mean anything to you?</p>",
        "id": 154014362,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541022539
    },
    {
        "content": "<p>Well, if there a terminology issue, rerunning won't change the outcome</p>",
        "id": 154014363,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541022566
    },
    {
        "content": "<p>2018-10-31T21:40:36.5102961Z      [java] -tx cache miss: $validate {null#logic-library: \"null\"}: \"null\" for Include All codes from <a href=\"http://terminology.hl7.org/CodeSystem/library-type\" target=\"_blank\" title=\"http://terminology.hl7.org/CodeSystem/library-type\">http://terminology.hl7.org/CodeSystem/library-type</a></p>",
        "id": 154014364,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541022588
    },
    {
        "content": "<p>But FYI you can always kick off another build by pushing another commit.</p>",
        "id": 154014365,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541022589
    },
    {
        "content": "<p>so, make a small change that I push in another commit on the branch? (sorry I am struggling with GIT terms)</p>",
        "id": 154014366,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541023077
    },
    {
        "content": "<p>That'd do it, yeah. I can also kick this off for you, but I don't see how a rebuild would change anything here.</p>",
        "id": 154014367,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541023119
    },
    {
        "content": "<p>the change I made had nothing to do with terminology... so I expect the problem was not foundational to my change</p>",
        "id": 154014368,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541023173
    },
    {
        "content": "<p>I'm not sure if the -tx cache miss is the issue.  There are several of these -tx cache miss notifications that I typically see in the build that don't normally seem to be an issue.  The build got to <code>[java]  ...validate library-exclusive-breastfeeding-cds-logic</code> before it failed.</p>",
        "id": 154014369,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1541023217
    },
    {
        "content": "<p>Huh, okay. That's interesting then.</p>",
        "id": 154014370,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541023248
    },
    {
        "content": "<p>Maybe a memory error.</p>",
        "id": 154014371,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541023254
    },
    {
        "content": "<p>the end of the log is rather abrupt</p>",
        "id": 154014373,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541023270
    },
    {
        "content": "<p>I'll kick off a rebuild right now</p>",
        "id": 154014374,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541023277
    },
    {
        "content": "<p>thanks</p>",
        "id": 154014375,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541023283
    },
    {
        "content": "<p>sounds reasonable</p>",
        "id": 154014376,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1541023288
    },
    {
        "content": "<p>building.</p>",
        "id": 154014377,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541023346
    },
    {
        "content": "<p>In general, we have a lot of trouble constraining the amount of memory the build process uses. We have a <code>\n_JAVA_OPTIONS=-Xmx3200m</code> env var which (I thought) was supposed to limit usage, but even with just two builds running at the same time, our 16Gb VM sometimes kills one.</p>",
        "id": 154014378,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541023420
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>16999 ubuntu    20   0 7266128 3.931g  24152 S 335.5 25.1   6:51.21 java\n12247 ubuntu    20   0 7480120 4.743g  24044 S 199.3 30.3  82:16.41 java\n</pre></div>\n\n\n<p>I'm not sure how it gets to 4.7Gb with the limits that should be imposed.</p>",
        "id": 154014379,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541023563
    },
    {
        "content": "<p>Yeah, these two jobs are pushing very close to 12Gb, which is the amount of free RAM, even though they should be constrained to &lt;6.4Gb between them.</p>",
        "id": 154014380,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541023689
    },
    {
        "content": "<p>Java helpfully notes:</p>\n<div class=\"codehilite\"><pre><span></span>2018-10-31T21:41:30.5755733Z      [java] Picked up _JAVA_OPTIONS: -Xmx3200m\n</pre></div>\n\n\n<p>in its output -- but then doesn't respect the <code>-Xmx</code> limit. Am I misunderstanding how this limit is fundamentally supposed to work? <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> ? Is there a different way to prevent Java from eating more than the available RAM?</p>",
        "id": 154014383,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541023806
    },
    {
        "content": "<p>I always thought that limit did work properly when I've used it (as when I need a lot of RAM for an OWL reasoner to classify a large ontology).  In those cases for me the JVM (normally using Oracle) hasn't seemed to exceed the set limit.  So I don't know why it would in this case, since it says that it successfully \"picked up\" the option.</p>",
        "id": 154014385,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1541024122
    },
    {
        "content": "<p>The -Xmx option applies to only the heap space, so the process can use more RAM than that (not sure how much more is possible).  And if you exceed the heap space you'll get an out of memory error, so that by itself wouldn't actually solve the problem.</p>",
        "id": 154014388,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1541024591
    },
    {
        "content": "<p>sig137 = running out of heap</p>",
        "id": 154014394,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1541025730
    },
    {
        "content": "<p>what's running out of memory? local, or the build?</p>",
        "id": 154014395,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1541025755
    },
    {
        "content": "<p>the second attempt built successfully. so it seems it was an infrastructural temporary failure.</p>",
        "id": 154014397,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541026073
    },
    {
        "content": "<p>The build is running out, when two competing Java builds run simultaneously. There's plenty of RAM on the machine (16Gb) to accommodate both, but I can't figure out how to limit each process effectively.</p>",
        "id": 154014404,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541028790
    },
    {
        "content": "<p>I can always just throwing more VMs at the problem, but I'd like to understand this.</p>",
        "id": 154014405,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541028809
    },
    {
        "content": "<p><code>jinfo</code> on a running build (currently using 5.5Gb RAM) shows me:</p>\n<div class=\"codehilite\"><pre><span></span>VM Flags:\nNon-default VM flags: -XX:CICompilerCount=4 -XX:CompressedClassSpaceSize=796917760 -XX:InitialHeapSize=1468006400 -XX:MaxHeapSize=3355443200 -XX:MaxMetaspaceSize=805306368 -XX:MaxNewSize=1118306304 -XX:MinHeapDeltaBytes=524288 -XX:NewSize=489160704 -XX:OldSize=978845696 -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseParallelGC\nCommand line:  -Xmx2000m -Xms1400m -XX:MaxMetaspaceSize=768m -Djava.awt.headless=true -Djava.util.logging.config.file=logging.properties -Xmx10000m -Xmx3200m\n</pre></div>\n\n\n<p>...  whereas I would have thought this should be limited to Xmx + MaxMetaspaceSize == 3200 + 768 == ~4000Mb.</p>",
        "id": 154014434,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541033551
    },
    {
        "content": "<p>Looking at the running process with <a href=\"https://github.com/patric-r/jvmtop\" target=\"_blank\" title=\"https://github.com/patric-r/jvmtop\">https://github.com/patric-r/jvmtop</a> I see \"NHMAX\" is 1700Mb, so that would account for total usage approaching 5Gb, though I'm not sure what factors contribute to that NHMAX value.</p>",
        "id": 154014441,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541034232
    },
    {
        "content": "<p>It's  getNonHeapMemoryUsage ----&gt; <code>getMax()</code></p>",
        "id": 154014442,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541034358
    }
]