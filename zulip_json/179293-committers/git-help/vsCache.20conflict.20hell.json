[
    {
        "content": "<p>I can seem to get this branch to build.  all I did was update some html and I am getting all these gd conflicts.  Tried deleting the VsCache file, merging etc.  can not seem to locate the conflicts when I pull it up on my editor either.</p>",
        "id": 168476888,
        "sender_full_name": "Eric Haas",
        "timestamp": 1560919518
    },
    {
        "content": "<p><a href=\"https://github.com/HL7/fhir/pull/588\" target=\"_blank\" title=\"https://github.com/HL7/fhir/pull/588\">https://github.com/HL7/fhir/pull/588</a></p>",
        "id": 168476889,
        "sender_full_name": "Eric Haas",
        "timestamp": 1560919521
    },
    {
        "content": "<p>deleted the cache and running the build locally to see if that fixes it.</p>",
        "id": 168476961,
        "sender_full_name": "Eric Haas",
        "timestamp": 1560919635
    },
    {
        "content": "<p>GIT-Helpers --- is it possible to tell a branch to revert some files back to master? (e.g. Eric's situation with some .cache files in the docref branch)</p>",
        "id": 168511859,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560954659
    },
    {
        "content": "<p>alternative... as the branch initiator, can I reject Eric's adds of these cache files, while accepting other html/xml changes?</p>",
        "id": 168512354,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560955021
    },
    {
        "content": "<p>HI John I just tried to push some changes to the intro and definition.. I did not open excel all in text editors.   I think if revert back to the last successful merge and try again is the ticket.</p>",
        "id": 168513647,
        "sender_full_name": "Eric Haas",
        "timestamp": 1560955937
    },
    {
        "content": "<p>sign...my local branch is now toast as well.</p>",
        "id": 168514252,
        "sender_full_name": "Eric Haas",
        "timestamp": 1560956362
    },
    {
        "content": "<p>so. my copy of the branch does build locally, but GIT does tell me there was some issues.. how do I REJECT your additions to my branch? (selectively reject some files, as some are fine)  or (reject them all, and re-apply your useful changes to my branch and re-submit?</p>",
        "id": 168519693,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560959899
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> ????</p>",
        "id": 168519778,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560959971
    },
    {
        "content": "<p>It looks to me like you just need to resolve the conflict in the loinc.cache file?</p>",
        "id": 168523175,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1560962698
    },
    {
        "content": "<p>okay...  how do I REJECT Eric's update where he added that loinc.cache file? This add was unnecessary.</p>",
        "id": 168523655,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560963075
    },
    {
        "content": "<p>(note not complaining about Eric... just trying to learn GIT)</p>",
        "id": 168523727,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560963123
    },
    {
        "content": "<p>or another learning opportunity... How do I tell GIT that the conflict it thinks exists is a figment of GIT's imagination.</p>",
        "id": 168523960,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560963284
    },
    {
        "content": "<p>I think there are at least a few approaches that can be used to deal with this.  I am curious why Eric apparently made commits to your work branch?</p>",
        "id": 168525464,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1560964259
    },
    {
        "content": "<p>because this branch is a group project... I am VERY happy with the majority of Eric's adds...</p>",
        "id": 168525742,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560964445
    },
    {
        "content": "<p>my ears are burning :-)    The question is how to go back?  resolving those conflicts is nigh impossible for me at leasr</p>",
        "id": 168528481,
        "sender_full_name": "Eric Haas",
        "timestamp": 1560966082
    },
    {
        "content": "<p>If you've got a branch (<code>my-feature-branch</code>) checked out locally and you want to blow away all cache changes since that branch diverged from master, do:</p>\n<div class=\"codehilite\"><pre><span></span># Make sure you&#39;re up to date with all remote branches\n$ git fetch\n\n# should show you&#39;re on my-feature-branch\n$ git status\n\n# Grab all vscache files from the origin/master branch\n$ git checkout origin/master -- vscache\n\n# should show you&#39;re still on my-feature-branch\n# ... and should show &quot;Changes to be committed&quot; in vscache\n$ git status\n\n# Commit the changes locally\n$ git commit -m &quot;Reset vscache changes&quot;\n</pre></div>",
        "id": 168530454,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560967363
    },
    {
        "content": "<p>Obviously the <code>git status</code> commands don't <em>do</em> anything; I just included them to help you follow along and check that things are working as expected.</p>",
        "id": 168533478,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560969299
    },
    {
        "content": "<p>is that what we want to do? The branch I have locally is building... but the pull-merge request that Eric submitted is complaining about conflicts. I just want to tell it that those conflicts are OKAY. or I want to tell it to forget some files that Eric added to that branch... I don't know that either of those are what you described. I don't know what a \"blow away all cache changes since that branch diverged from master\" means, but it seems like that is describing the destruction of the whole branch. The branch is 99% perfect, and that 1% that GIT is complaiing about --&gt; Doesn't matter AT ALL.</p>",
        "id": 168536177,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560970953
    },
    {
        "content": "<p>Unless I'm somehow misunderstanding, if your local branch is building fine but the auto-build is failing due to a conflict, then you must have some uncommitted and/or unpushed changes in your local branch.  If that's the case, then committing and pushing those changes to the upstream branch and thereby revising the pull request should resolve the auto-build conflict.  If there's something that I've missed in that you can let me know.</p>",
        "id": 168538196,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1560972526
    },
    {
        "content": "<p>local build is not related to conflict or not</p>",
        "id": 168538320,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560972627
    },
    {
        "content": "<p>not sure what point you are making</p>",
        "id": 168538985,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1560973115
    },
    {
        "content": "<p>I'm confused too.</p>",
        "id": 168539940,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560973861
    },
    {
        "content": "<p>But from what Grahame said, reverting cache files to the way they look in master should never cause a build to fail.</p>",
        "id": 168539969,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560973881
    },
    {
        "content": "<p>So it should be a \"safe\" operation.</p>",
        "id": 168539977,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560973888
    },
    {
        "content": "<p>agree</p>",
        "id": 168539989,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1560973901
    },
    {
        "content": "<p>A conflicted file is never \"okay\" -- because it contains markers like \"&gt;&gt;&gt;&gt;&gt;\" indicating where the conflict is, which makes it invalid json, or java, or markdown, or whatever.</p>",
        "id": 168539997,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560973913
    },
    {
        "content": "<p>right. but a conflict in the branch doesn't mean you'll have a conflict locally</p>",
        "id": 168540691,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560974444
    },
    {
        "content": "<p>so I have a working build, How do I force into my remote branch the file that I have locally? because GIT thinks things are sync but conflicted</p>",
        "id": 168540715,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560974464
    },
    {
        "content": "<p>so it's common for you to have a local build that works fine, and is synced between your local copy and your branch on the github repo, but is still a conflict with the master</p>",
        "id": 168540781,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560974521
    },
    {
        "content": "<blockquote>\n<p>How do I force into my remote branch the file that I have locally? because GIT thinks things are sync but conflicted</p>\n</blockquote>\n<p>like that. running the resolve should work...</p>",
        "id": 168540863,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560974551
    },
    {
        "content": "<p><a href=\"http://wiki.hl7.org/index.php?title=GIT_conflict_resolution_documentation\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=GIT_conflict_resolution_documentation\">http://wiki.hl7.org/index.php?title=GIT_conflict_resolution_documentation</a></p>",
        "id": 168540869,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560974558
    },
    {
        "content": "<p>so, we don't yet want to merge this branch with master... It feels to me like these instructions are telling me how to merge my branch into master. I don't want to merge my branch into master.</p>",
        "id": 168541444,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560975062
    },
    {
        "content": "<p>if these instructions are the ones I do want to do... how do I do them with Tortoise GIT (it is a supported tool, right?)</p>",
        "id": 168541501,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560975120
    },
    {
        "content": "<p>the reason for making a pull request is that you do want to merge your branch into master<br>\nif you don't want to do that then there isn't a need to worry about (or even know about) the conflict<br>\nthe conflict resolution instructions involve merging the changes in the upstream master into your local branch - then if there are conflicts you can see them (and fix them) locally so that you will be able to merge your branch into master, whenever you are ready to do that</p>",
        "id": 168541769,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1560975355
    },
    {
        "content": "<p>Those instructions don't merged anything -- they grab content from master (just in the vscache folder) and bring them into your working tree.</p>",
        "id": 168541827,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560975382
    },
    {
        "content": "<p>I don't know the details of how Tortoise works.</p>",
        "id": 168541844,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560975399
    },
    {
        "content": "<p>I don't use TortoiseGit (tried it once, I think) so I can't help much there</p>",
        "id": 168541875,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1560975428
    },
    {
        "content": "<p>those instructions to do not lead to committing the PR, just fixing the PR</p>",
        "id": 168541884,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560975441
    },
    {
        "content": "<p>yes</p>",
        "id": 168541901,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1560975469
    },
    {
        "content": "<p>I think you mean \"do not lead to committing\", and to be clear: they add a commit, but they don't push to GH, and they don't merge the PR into master.</p>",
        "id": 168542134,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560975637
    },
    {
        "content": "<p>To push to GH you'd <code>git push</code>, and the merging would happen via the GH web interface.</p>",
        "id": 168542150,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560975652
    },
    {
        "content": "<p>my instructions push reconciled changes up to GH on your branch</p>",
        "id": 168542158,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560975660
    },
    {
        "content": "<p>but they don't do the merge</p>",
        "id": 168542173,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560975666
    },
    {
        "content": "<p>Sorry, thanks -- I misunderstood what \"those\" referred to. Now I see it was your link, not my instructions above.</p>",
        "id": 168542196,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560975687
    },
    {
        "content": "<p>oops sorry</p>",
        "id": 168542220,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560975715
    },
    {
        "content": "<p>The instructions Grahame shared do indeed involve a merge, but it's a merge from master <em>into</em> the feature branch, rather than the other way around. <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> that's the important insight.</p>",
        "id": 168542288,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560975739
    },
    {
        "content": "<p>right</p>",
        "id": 168542318,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1560975762
    },
    {
        "content": "<p>Okay, so help me baby steps... I have on my local branch reverted these cache files to master... Now how do I put those reverted versions into my PR?</p>",
        "id": 168543159,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560976406
    },
    {
        "content": "<p>Sure thing. Did you revert according to my instructions or Grahame's link?</p>",
        "id": 168543343,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560976533
    },
    {
        "content": "<p>And can you share the output of <code>git status</code>?</p>",
        "id": 168543523,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560976672
    },
    {
        "content": "<p>Hm, this is difficult without a common understanding of tool, and my use of tortoise seems to be stressing things.</p>",
        "id": 168543581,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560976700
    },
    {
        "content": "<p>I agree:)</p>",
        "id": 168543586,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560976712
    },
    {
        "content": "<p>I reverted by just using the revert menu... as these vsCache files should have NEVER been included in the branch... I would prefer to just REMOVE them from the branch</p>",
        "id": 168543609,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560976733
    },
    {
        "content": "<p>Sorry I can't give you help in your preferred language .</p>",
        "id": 168543610,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560976734
    },
    {
        "content": "<p>Removing files from a branch only makes sense if you're planning (when you merge back into master) to have the files deleted from master, too.</p>",
        "id": 168543676,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560976789
    },
    {
        "content": "<p>Which isn't the case here</p>",
        "id": 168543688,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560976800
    },
    {
        "content": "<p>If you hit \"revert\" in tortoise, I'm guessing that would just revert to the content in your own branch, not master.</p>",
        "id": 168543766,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560976847
    },
    {
        "content": "<p>TortoiseGit is convenient for normal use, but please use the command line when following command line instructions</p>",
        "id": 168543781,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560976864
    },
    {
        "content": "<p>You probably want to follow the instructions from me or Grahame rather than doing a third thing</p>",
        "id": 168543789,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560976871
    },
    {
        "content": "<p>okay, I have git in my command line.</p>",
        "id": 168543934,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560976986
    },
    {
        "content": "<p>git status gives me</p>",
        "id": 168543939,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560976991
    },
    {
        "content": "<p>On branch moehrke-docRef<br>\nYour branch and 'origin/moehrke-docRef' have diverged,<br>\nand have 1 and 24 different commits each, respectively.<br>\n  (use \"git pull\" to merge the remote branch into yours)</p>\n<p>Untracked files:<br>\n  (use \"git add &lt;file&gt;...\" to include in what will be committed)</p>\n<div class=\"codehilite\"><pre><span></span>git.txt\npublishout.txt\nvscache/media-type.cache\n</pre></div>\n\n\n<p>nothing added to commit but untracked files present (use \"git add\" to track)</p>",
        "id": 168543941,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560976994
    },
    {
        "content": "<p>so, now you want me to do all the instructions in grahame's wiki page? staring with git fetch origin?</p>",
        "id": 168544083,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560977116
    },
    {
        "content": "<p>So you've made local changes distinct from the changes someone else (Eric?) has pushed to your \"shared branch\"</p>",
        "id": 168544117,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560977145
    },
    {
        "content": "<p>I thought that I pulled Eric's changes and did a build local</p>",
        "id": 168544187,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560977166
    },
    {
        "content": "<p>Having a shared branch is fine, but you need to know how to keep this kind of thing up to say.</p>",
        "id": 168544190,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560977168
    },
    {
        "content": "<p>You might try \"git pull\"</p>",
        "id": 168544199,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560977176
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> wondering whether it's at the point that John should start again with his local copy</p>",
        "id": 168544203,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560977179
    },
    {
        "content": "<p>That'd be fine too -- but to be clear, nothing has been lost and nothing requires more than a couple of commands to restore. It might still be easier for you to blow it all up.</p>",
        "id": 168544288,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560977255
    },
    {
        "content": "<p>Starting new is what I did two weeks ago... Do I really need to do that?</p>",
        "id": 168544574,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560977422
    },
    {
        "content": "<p>It was not my intention that others would provide updates to my branch before merge... but it should work, right?</p>",
        "id": 168544630,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560977457
    },
    {
        "content": "<p>The problem is that Eric submitted into my branch some files that are not versioned and therefore should not have been included in my branch...</p>",
        "id": 168544669,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560977488
    },
    {
        "content": "<p>you don't <strong>have</strong> to do that, as Josh said<br>\nbut there are still at least probably a couple of steps to get it all back into sync if you don't</p>",
        "id": 168544681,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1560977506
    },
    {
        "content": "<p>My best thought is that I want to reject his add of the vscache files to my branch</p>",
        "id": 168544682,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560977507
    },
    {
        "content": "<p>which is what I have done by reverting to the master version of these vscache files locally</p>",
        "id": 168544747,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560977539
    },
    {
        "content": "<p>or I think that is what I have done</p>",
        "id": 168544753,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560977545
    },
    {
        "content": "<p>I think I would just merge all of the changes (from master, Eric, etc.) into the local branch and then resolve whatever conflicts there are locally<br>\nresolving the conflict(s) might be as easy as just checking those files out fresh from master and then making new commit(s) of any changes (if there are any)</p>",
        "id": 168544959,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1560977697
    },
    {
        "content": "<p>so the I think the conflict is simply vscache/loinc.cache</p>",
        "id": 168545311,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560977966
    },
    {
        "content": "<p>so how do I make my change into the remote branch?</p>",
        "id": 168545324,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560977981
    },
    {
        "content": "<p>commit to the remote branch</p>",
        "id": 168545441,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560978032
    },
    {
        "content": "<p>I think you want to say \"fix locally and<br>\npush a commit to the remote\"</p>",
        "id": 168545479,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560978076
    },
    {
        "content": "<p>yes</p>",
        "id": 168545482,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560978087
    },
    {
        "content": "<p>(Not to be pedantic, but accuracy matters here.)</p>",
        "id": 168545512,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560978106
    },
    {
        "content": "<p>I am so confused</p>",
        "id": 168545751,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560978272
    },
    {
        "content": "<p>I think if you follow Grahame's instructions for that file (for \"fix\" and \"committing\", if you've already done the \"set up\"), that should do it</p>",
        "id": 168546084,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1560978502
    },
    {
        "content": "<p>my instructions may fail since John has already diverged from the remote branch. They assume no divergence</p>",
        "id": 168546452,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560978778
    },
    {
        "content": "<p>I am cloning into a new local repository...</p>",
        "id": 168546557,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560978851
    },
    {
        "content": "<p>okay back to working with my working copy of my branch.. I have done a clean build... but when I try to push I get the cache//loinc.cache conflict. So I follow Grahames instructions and FAIL this way</p>",
        "id": 168557591,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560991285
    },
    {
        "content": "<p>C:\\Users\\john.moehrke\\Git\\fhirD&gt;git checkout --theirs vscache/loinc.cache<br>\nUpdated 1 path from the index</p>\n<p>C:\\Users\\john.moehrke\\Git\\fhirD&gt;git commit -m \"fix vscache/loinc.cache conflict\"</p>\n<p>[moehrke-docRef 45c830ca44] fix vscache/loinc.cache conflict<br>\n 118 files changed, 89093 insertions(+), 13452 deletions(-)<br>\n rewrite fhir-error-dump.html (98%)<br>\n rewrite source/specimendefinition/specimendefinition-spreadsheet.xml (68%)</p>\n<p>C:\\Users\\john.moehrke\\Git\\fhirD&gt;git push<br>\nTo <a href=\"https://github.com/HL7/fhir\" target=\"_blank\" title=\"https://github.com/HL7/fhir\">https://github.com/HL7/fhir</a><br>\n ! [rejected]              moehrke-docRef -&gt; moehrke-docRef (non-fast-forward)<br>\nerror: failed to push some refs to '<a href=\"https://github.com/HL7/fhir\" target=\"_blank\" title=\"https://github.com/HL7/fhir\">https://github.com/HL7/fhir</a>'<br>\nhint: Updates were rejected because the tip of your current branch is behind<br>\nhint: its remote counterpart. Integrate the remote changes (e.g.<br>\nhint: 'git pull ...') before pushing again.<br>\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.</p>\n<p>C:\\Users\\john.moehrke\\Git\\fhirD&gt;</p>",
        "id": 168557592,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560991287
    },
    {
        "content": "<p>The hint is spot on: looks like you haven't done a <code>git pull</code></p>",
        "id": 168562762,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560999300
    },
    {
        "content": "<p>Yes.  The hints are normally (or probably always) accurate and following them is very helpful.  Maybe it's sometimes less clear when using TortoiseGit (or other tool) whether the pull has been done or not (not sure, just wondering)?  Doing it via the command line doesn't leave any doubt.</p>",
        "id": 168565395,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1561003948
    },
    {
        "content": "<p>okay... tried that...<br>\nC:\\Users\\john.moehrke\\Git\\fhirD&gt;git pull<br>\nerror: The following untracked working tree files would be overwritten by merge:</p>\n<div class=\"codehilite\"><pre><span></span>    vscache/media-type.cache\n</pre></div>\n\n\n<p>Please move or remove them before you merge.<br>\nAborting</p>\n<p>C:\\Users\\john.moehrke\\Git\\fhirD&gt;del vscache\\media-type.cache</p>\n<p>C:\\Users\\john.moehrke\\Git\\fhirD&gt;git pull<br>\nCONFLICT (modify/delete): vscache/loinc.cache deleted in 93fed714344924f05137aad<br>\nd182c651ea36edbd8 and modified in HEAD. Version HEAD of vscache/loinc.cache left<br>\n in tree.<br>\nAutomatic merge failed; fix conflicts and then commit the result.</p>\n<p>C:\\Users\\john.moehrke\\Git\\fhirD&gt;</p>",
        "id": 168599503,
        "sender_full_name": "John Moehrke",
        "timestamp": 1561040205
    },
    {
        "content": "<p>so WHAT does \"fix conflicts...\" mean? If I understood what a conflict was, I would likely be way ahead of the process.</p>",
        "id": 168599559,
        "sender_full_name": "John Moehrke",
        "timestamp": 1561040250
    },
    {
        "content": "<p>\"Fix conflicts\" means basically that where there are non-mergeable (incompatible) differences between two versions of the file, you have to choose which version of the differences you want to use (or even something different, if that's appropriate).  As Josh mentioned earlier, when Git detects a conflict it inserts conflict markers like \"&gt;&gt;&gt;&gt;&gt;\" into the file which indicate where the conflict is - and the presence of those markers makes the file invalid json, or java, or markdown, or whatever it is.  So, to fix the conflict you remove those markers and the marked up sections of the file that you <strong>don't</strong> want and then save and commit the fixed version.  Tools can do that, or you can do it by hand using an editor.  I think that doing it by hand editing probably is going to make what's happening more obvious and easier to understand (at least until you're comfortable with how it is working).</p>",
        "id": 168601597,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1561041687
    },
    {
        "content": "<p>okay, logically I follow you...</p>",
        "id": 168611846,
        "sender_full_name": "John Moehrke",
        "timestamp": 1561048631
    },
    {
        "content": "<p>so it is complaining about vscache/loinc.cache</p>",
        "id": 168611870,
        "sender_full_name": "John Moehrke",
        "timestamp": 1561048654
    },
    {
        "content": "<p>I look at that file on my filesystem, and don't find any \"&gt;&gt;&gt;&gt;\"</p>",
        "id": 168611954,
        "sender_full_name": "John Moehrke",
        "timestamp": 1561048691
    },
    {
        "content": "<p>so, where do I go to see these \"&gt;&gt;&gt;&gt;\"?</p>",
        "id": 168611966,
        "sender_full_name": "John Moehrke",
        "timestamp": 1561048701
    },
    {
        "content": "<p>all I can say is, if git status shows a conflict on that file locally then the conflict markers should be there and you should see them when you open the file to view or edit<br>\nis that what's happening?</p>",
        "id": 168612177,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1561048878
    },
    {
        "content": "<p>here is git status<br>\nC:\\Users\\john.moehrke\\Git\\fhirD&gt;git status<br>\nOn branch moehrke-docRef<br>\nYour branch and 'origin/moehrke-docRef' have diverged,<br>\nand have 2 and 24 different commits each, respectively.<br>\n  (use \"git pull\" to merge the remote branch into yours)</p>\n<p>All conflicts fixed but you are still merging.<br>\n  (use \"git commit\" to conclude merge)</p>\n<p>Changes to be committed:</p>\n<div class=\"codehilite\"><pre><span></span>    new file:   vscache/media-type.cache\n</pre></div>\n\n\n<p>Changes not staged for commit:<br>\n  (use \"git add &lt;file&gt;...\" to update what will be committed)<br>\n  (use \"git checkout -- &lt;file&gt;...\" to discard changes in working directory)</p>\n<div class=\"codehilite\"><pre><span></span>    modified:   source/status-codes.xml\n    modified:   vscache/null.cache\n</pre></div>\n\n\n<p>Untracked files:<br>\n  (use \"git add &lt;file&gt;...\" to include in what will be committed)</p>\n<div class=\"codehilite\"><pre><span></span>    git.txt\n    publishout.txt\n</pre></div>\n\n\n<p>C:\\Users\\john.moehrke\\Git\\fhirD&gt;</p>",
        "id": 168612717,
        "sender_full_name": "John Moehrke",
        "timestamp": 1561049367
    },
    {
        "content": "<p>so the untracked are expected.. no issue there.</p>",
        "id": 168612830,
        "sender_full_name": "John Moehrke",
        "timestamp": 1561049445
    },
    {
        "content": "<p>vscache/media-type.cache SHOULD NOT be a tacked file. It seems in one of Eric's updates he added it.</p>",
        "id": 168613067,
        "sender_full_name": "John Moehrke",
        "timestamp": 1561049622
    },
    {
        "content": "<p>this is why I want to know how I can reject an update of my branch made by Eric.</p>",
        "id": 168613125,
        "sender_full_name": "John Moehrke",
        "timestamp": 1561049652
    },
    {
        "content": "<p>This one specifically <a href=\"https://github.com/HL7/fhir/pull/588/commits/f12e397dfa83f560dfde3ba1e1aca58114f0b27e?file-filters%5B%5D=\" target=\"_blank\" title=\"https://github.com/HL7/fhir/pull/588/commits/f12e397dfa83f560dfde3ba1e1aca58114f0b27e?file-filters%5B%5D=\">https://github.com/HL7/fhir/pull/588/commits/f12e397dfa83f560dfde3ba1e1aca58114f0b27e?file-filters%5B%5D=</a></p>",
        "id": 168613180,
        "sender_full_name": "John Moehrke",
        "timestamp": 1561049716
    },
    {
        "content": "<p>SO two things that I need help with (1) How do I revert media-type.cache back to not tracked? (2) what exactly do I do about the modified things? I don't find any \"&gt;&gt;&gt;&gt;\" in my local files, so how do I force my files into the remote branch?</p>",
        "id": 168614228,
        "sender_full_name": "John Moehrke",
        "timestamp": 1561050556
    },
    {
        "content": "<p>I'll take a look at it locally and see what I find on my end.</p>",
        "id": 168616416,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1561052086
    },
    {
        "content": "<p>media-type.cache should be tracked.</p>",
        "id": 168625670,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1561058218
    },
    {
        "content": "<p>it seems that people are tripping up on these terminology cache files, but they save you approximately 90 min time on the build.</p>",
        "id": 168625705,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1561058246
    },
    {
        "content": "<p>ah, okay. it is not marked as tracked in my repository that is just master</p>",
        "id": 168625722,
        "sender_full_name": "John Moehrke",
        "timestamp": 1561058258
    },
    {
        "content": "<p>I did a local build on the branch and committed/pushed the updated files (loinc.cache and null.cache).  Then I merged from master into moehrke-docRef, which showed the loinc.cache conflict locally.  I then did <code>git reset -- vscache/loinc.cache</code> and <code>git checkout MERGE_HEAD -- vscache/loinc.cache</code> to get the copy of loinc.cache from the master branch and commited/pushed those changes, and the pull request check completed successfully - the conflict is resolved.</p>",
        "id": 168625801,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1561058301
    },
    {
        "content": "<p>whew. thanks</p>",
        "id": 168625861,
        "sender_full_name": "John Moehrke",
        "timestamp": 1561058346
    },
    {
        "content": "<p>can you explain in purely human english what the git reset... and git checkout... are?</p>",
        "id": 168626011,
        "sender_full_name": "John Moehrke",
        "timestamp": 1561058416
    },
    {
        "content": "<p>I can try.  I started with trying the git checkout --theirs [path] in Grahame's instructions, but it didn't work.  Some further reading indicated that might have to do with the version of git.  I tried the alternative suggestion for git versions &lt; 1.61 (I didn't check into which versions we're actually using) as documented <a href=\"http://gitready.com/advanced/2009/02/25/keep-either-file-in-merge-conflicts.html\" target=\"_blank\" title=\"http://gitready.com/advanced/2009/02/25/keep-either-file-in-merge-conflicts.html\">here</a>, which did work.  The alternative would have been to hand edit the file as I mentioned before (which wouldn't have been too hard to do), but I decided to try this way with just replacing the file outright first.</p>",
        "id": 168626807,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1561059004
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span>  is our hero.   but</p>",
        "id": 168641833,
        "sender_full_name": "Eric Haas",
        "timestamp": 1561071689
    },
    {
        "content": "<blockquote>\n<p>The alternative would have been to hand edit the file as I mentioned before (which wouldn't have been too hard to do), but I decided to try this way with just replacing the file outright first.</p>\n</blockquote>",
        "id": 168641835,
        "sender_full_name": "Eric Haas",
        "timestamp": 1561071692
    },
    {
        "content": "<p>I tried and I could fix the conflicts nor find any after a second try ( no &gt;&gt;&gt;&gt;)  so not always so straitforward to fix conflicts.</p>",
        "id": 168641932,
        "sender_full_name": "Eric Haas",
        "timestamp": 1561071788
    },
    {
        "content": "<p>I will need to remember that trick.</p>",
        "id": 168641987,
        "sender_full_name": "Eric Haas",
        "timestamp": 1561071827
    },
    {
        "content": "<p>@GG  as I understand the vscache should be committed with the rest of the changes, but they are poorly understood and set you up for faliure like this which took &gt; 90 minutes to resolve.     Is there something we should do to make sure they are always up to date?</p>",
        "id": 168642312,
        "sender_full_name": "Eric Haas",
        "timestamp": 1561072131
    },
    {
        "content": "<p>if people always commit them, they're always up to date</p>",
        "id": 168642326,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1561072153
    },
    {
        "content": "<p>the problem I think this time is that I changed the format of all of them by adding language support to the terminology sub-system</p>",
        "id": 168642344,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1561072188
    },
    {
        "content": "<p>Why do you think this occured?  I just edite a intro.html file and text edited a definition in an xml file?  The branch was over a week old.</p>",
        "id": 168642403,
        "sender_full_name": "Eric Haas",
        "timestamp": 1561072226
    },
    {
        "content": "<p>hand (or tool) editing would have worked, too<br>\nwhat you have to do is produce the conflict in the file locally by merging from the master into the working branch first - then the conflict markers and everything will be there</p>",
        "id": 168642408,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1561072231
    },
    {
        "content": "<p>@Rob I have dealt with conflicts before and this one was a mystery</p>",
        "id": 168642437,
        "sender_full_name": "Eric Haas",
        "timestamp": 1561072276
    },
    {
        "content": "<p>I know - but it ended up being pretty straightforward and could be handled in the usual way(s)</p>",
        "id": 168642558,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1561072426
    },
    {
        "content": "<p>OK I see what you mean now.  thanks</p>",
        "id": 168642885,
        "sender_full_name": "Eric Haas",
        "timestamp": 1561072777
    }
]