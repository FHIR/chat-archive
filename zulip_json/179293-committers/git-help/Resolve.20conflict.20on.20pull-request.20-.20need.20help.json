[
    {
        "content": "<p>I just did a pull-request and get a conflict on vscache/snomed.cache.  I'm using GitKraken and am not sure how to resolve this conflict.  I didn't see it before I did the pull-request.  Can anyone tell me how to resolve?</p>",
        "id": 154010087,
        "sender_full_name": "Melva Peters",
        "timestamp": 1539817005
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191759\">@Melva Peters</span> , for conflicts in caches, they'll be regenerated by the build anyway, so you can just resolve them by accepting the merge version. In TortoiseGit, they call that \"theirs\", not sure what the wording for it is in GitKraken.</p>",
        "id": 154010095,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1539818564
    },
    {
        "content": "<p>I don't see the conflicts in GitKraken - only on Github - maybe I have to merge the build changes into my local branch.  <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span>, is that how I should manage this in GitKraken?</p>",
        "id": 154010096,
        "sender_full_name": "Melva Peters",
        "timestamp": 1539818797
    },
    {
        "content": "<p>you have do the git version of revert.</p>",
        "id": 154010097,
        "sender_full_name": "Eric Haas",
        "timestamp": 1539818851
    },
    {
        "content": "<p>Yes, Melva - that's correct.  The develop had changes which caused a conflict locally. Remember we solved these on our shared Skype.  The same happens now again when you create the PR - the develop has different changes again in these files. This is painful, since whenever you want to integrate changes on the develop branch into your feature branch - you'll get this. And then when you do a PR - you'll get them again. But I don't see a way to avoid this - the root cause is the fact that we check in generated files.</p>",
        "id": 154010173,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1539861648
    },
    {
        "content": "<p>Now, the solution is not apparent - GitKraken has the \"use theirs\" option - but this only becomes available after the tool has shown you all the differences first (that's the built-in 3-way merge tool we looked at together).  Unfortunately, for these huge files that's way too time consuming and so no option.  I'll take a look whether I can get around this in GitKraken.</p>",
        "id": 154010174,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1539861749
    },
    {
        "content": "<p>Thinking about the root cause here, do we expect anyone should ever be making changes to the cache files other than (basically) Grahame? My strong preference would be  not to check cached files into the repository at all -- but even if we are not ready to take that step, could we perhaps add these cache files to the .gitignore (while keeping them checked in into git), so at least git wouldn't prompt users to include changes to them in unrelated commits, and we would not see them coming along for the ride in random pull requests?</p>",
        "id": 154010178,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1539865561
    },
    {
        "content": "<p>If something is committed, would having it in gitignore make any difference to git's behavior?</p>",
        "id": 154010188,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539869925
    },
    {
        "content": "<p>Yes: it wouldn't propose adding changes to that file in new commits. (You can still force add a change, but it is hard to do by accident).</p>",
        "id": 154010189,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1539870352
    },
    {
        "content": "<blockquote>\n<p>My strong preference would be not to check cached files into the repository at all</p>\n</blockquote>",
        "id": 154010288,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539901816
    },
    {
        "content": "<p>that would make approx 3 hours difference to build time</p>",
        "id": 154010289,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539901823
    },
    {
        "content": "<p>Do cache commits need to be done by everyone?</p>",
        "id": 154010307,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539902997
    },
    {
        "content": "<p>no. I thought i had got them stable, but apparently not, and I'm not yet ready to spend more time on that. I'm just reverting them for now</p>",
        "id": 154010327,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539915650
    }
]