[
    {
        "content": "<p>I thought the reason for having to close the spreadsheet prior to each commit was so the conflicts would be easier to resolve.  as in a conflict in a single line or lines  instead the entire file as I see it now before me in my text editor...</p>",
        "id": 154008675,
        "sender_full_name": "Eric Haas",
        "timestamp": 1539391401
    },
    {
        "content": "<p>it should indeed work that way. not sure what work flow lead you to that point</p>",
        "id": 154008680,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539400873
    },
    {
        "content": "<p>Right now I looking for any workflow that works for me...I'm running these huge commits in a the fhir-clone and when and if it is successful I'll stash it to a new branch and then commit.    But after a git pull,  I got a conflict that was the whole spreadsheet.</p>",
        "id": 154008683,
        "sender_full_name": "Eric Haas",
        "timestamp": 1539403564
    },
    {
        "content": "<p>so if you do a local stash without letting the build update the spreadsheet first, you can get this problem, because the build hasn't canonicalised the spreadsheet first</p>",
        "id": 154008789,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539458142
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I thought the CI-build was going to check that the spreadsheets had been processed before allowing them to be merged - so if your stash messes things up, that should still get caught before a merge to master?</p>",
        "id": 154008814,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539469736
    },
    {
        "content": "<p>It does. But your stash has nothing to do with the ci-build. You can stash an uncorrected spreadsheet, and end up in this place</p>",
        "id": 154008831,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539470650
    }
]