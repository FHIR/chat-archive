[
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191315\">Josh Mandel</span> renamed stream <strong>#CARIN Real-time Pharmacy Benefit Check IG</strong> to <strong>CARIN Real-time Pharmacy Benefit Check IG</strong>.</p>",
        "id": 175459327,
        "sender_full_name": "Notification Bot",
        "timestamp": 1568225029
    },
    {
        "content": "<p>For this weekend, here's an example of how <span class=\"user-mention\" data-user-id=\"196338\">@Patrick Murta</span>'s server at Humana is looking for inputs:</p>\n<p><a href=\"https://gist.github.com/jmandel/5f0f5a6e7967f4a3319f4e0906a9a623\" target=\"_blank\" title=\"https://gist.github.com/jmandel/5f0f5a6e7967f4a3319f4e0906a9a623\">https://gist.github.com/jmandel/5f0f5a6e7967f4a3319f4e0906a9a623</a></p>",
        "id": 175547235,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568306742
    },
    {
        "content": "<p>(OK, I udated that gist with a full API call -- request + response).</p>",
        "id": 175547407,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568306875
    },
    {
        "content": "<p>Reviewing this request, it seems to have a lot of information (E.g., pricing, coverage) that a client app wouldn't likely know. And on the response: I can't tell where/how multiple fulfillment options would be represented (e.g., different pharmacies, or alternative meds).</p>",
        "id": 175548621,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568307657
    },
    {
        "content": "<p>It's also not clear to me how the actual prescription details would be conveyed (e.g., the prescription.reference in the request assumes there's a web-hosted copy of the prescription somewhere, but who'd be hosting that in real life?</p>",
        "id": 175548682,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568307699
    },
    {
        "content": "<p>(Also note there's a Coding in the request that's probably supposed to be labeled as NDC, not RxNorm:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;system&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://www.nlm.nih.gov/research/umls/rxnorm&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;51079-456-20&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;display&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Alprazolam 0.25mg (Xanax)&quot;</span>\n<span class=\"p\">}</span>\n</pre></div>",
        "id": 175548766,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568307745
    },
    {
        "content": "<p>The <em>massive</em> flexibility of these resources (and the <code>$submit</code> operation, which can take bundles or Claims,  or Bundles of Bundles.... and can return ClaimResponses or Bundles, or Bundles of Bundles) worries me re: consistency of support, so it'll be important to have super clear IG constraints. (I also think it's worth exploring a more specific <code>$rx-pricing</code> operation like <a href=\"https://gist.github.com/jmandel/fff82af95d2115497b5ccd74a42cfdb0\" target=\"_blank\" title=\"https://gist.github.com/jmandel/fff82af95d2115497b5ccd74a42cfdb0\">this mock-up</a>).</p>",
        "id": 175548976,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568307898
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/SK1zS0Og-F2fAI3VKe-SLiED/rtpbc-request-example.json\" target=\"_blank\" title=\"rtpbc-request-example.json\">rtpbc-request-example.json</a></p>",
        "id": 175550319,
        "sender_full_name": "Philips Johnson",
        "timestamp": 1568308750
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> for your take on contained resources: per example from <span class=\"user-mention\" data-user-id=\"211905\">@Philips Johnson</span> above:  if a FHIR API client is making a call to an operation like <code>$submit</code>, and the client knows some details like a prescription or a set of patient demographics (but the client doesn't host a FHIR endpoint of its own): is it okay to use <code>contained</code> to capture these details, linked to from the Claim? Or better to make them siblings in a Bundle? Or would you force the client to somehow \"create\" them with a server, first, and then link to those freshly-created resources from the <code>$submit</code> query?</p>",
        "id": 175550331,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568308760
    },
    {
        "content": "<p>Above example is what we had originally put together on our side as what we expected a sample request to look like</p>",
        "id": 175550356,
        "sender_full_name": "Philips Johnson",
        "timestamp": 1568308784
    },
    {
        "content": "<p>One question that comes up comparing the dispense request: the price depends on some notion of how much stuff is being dispensed. This can be captured via NDC + quantity(e.g., for NDC code <code>51079-456-20</code>, that's a 100-pill blisterpack of Simvastatin; so a quantity of 2 would be 200 pills), or by tablet quantity (e.g., you could specify a number of pills) or by days supply -- and we've seen a combination of all of these in the two example requests so far. What's most important? Do we want a standardized way to convey all three?</p>",
        "id": 175550812,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568309093
    },
    {
        "content": "<p>My preference would be to rely on the <code>MedicationRequest</code> to convey this information, since it has a nice way to model product + dispense quantity + expected days supply.</p>",
        "id": 175551026,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568309228
    },
    {
        "content": "<p>Though even this doesn't quite get at the distinction between # of packs/bottles of pills vs # of tabs -- like for </p>\n<div class=\"codehilite\"><pre><span></span>      <span class=\"s2\">&quot;medicationCodeableConcept&quot;</span><span class=\"err\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;coding&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n          <span class=\"nt\">&quot;system&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://hl7.org/fhir/sid/ndc&quot;</span><span class=\"p\">,</span>\n          <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;51079-456-20&quot;</span><span class=\"p\">,</span>\n          <span class=\"nt\">&quot;display&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Simvastatin 40mg tablet 100 blister pack&quot;</span>\n        <span class=\"p\">}]</span>\n      <span class=\"p\">}</span><span class=\"err\">,</span>\n</pre></div>\n\n\n<p>You can specify either <code>TAB</code> or else (presumably) # packs, but you have to pick just one of those for your <code>dispenseRequest</code>:</p>\n<div class=\"codehilite\"><pre><span></span>      <span class=\"s2\">&quot;dispenseRequest&quot;</span><span class=\"err\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;quantity&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">,</span>\n          <span class=\"nt\">&quot;unit&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;tablets&quot;</span><span class=\"p\">,</span>\n          <span class=\"nt\">&quot;system&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm&quot;</span><span class=\"p\">,</span>\n          <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;TAB&quot;</span>\n        <span class=\"p\">},</span>\n</pre></div>",
        "id": 175551183,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568309315
    },
    {
        "content": "<p>I agree w/ <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>  that piggy backing the MedicationRequest object is probably best here</p>",
        "id": 175551383,
        "sender_full_name": "Philips Johnson",
        "timestamp": 1568309423
    },
    {
        "content": "<p>And generally when I look at a block of <a href=\"https://gist.github.com/jmandel/5f0f5a6e7967f4a3319f4e0906a9a623#file-sample-request-json-L64-L125\" target=\"_blank\" title=\"https://gist.github.com/jmandel/5f0f5a6e7967f4a3319f4e0906a9a623#file-sample-request-json-L64-L125\"><code>supportingInfo</code> like this</a> -- I see an ad-hoc data model creeping into the <code>Claim</code> (challenges: it's verbose and also hard to express constraints to pin this down). I suspect it'd be better to re-use existing resource definitions, or call out these parameters explicitly in the operation itself, rather than baking into Claim.</p>",
        "id": 175551584,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568309587
    },
    {
        "content": "<p>\"contained\" resources are <em>not</em> for packaging.  So the question is: Would you expect the resources to be represented as 'contained' if the resource was stored on a server somewhere?  For a patient to be 'contained', it would mean that you don't have enough information to point to a specific patient in a registry somewhere (e.g. all you've got is a gender and birth year).  In the case of doing claims processing, that should presumably never be the case.  (Unless you have payers who pay for coverage for anonymous patients maybe?).</p>\n<p>The 'pure' RESTful way to handle this related data scenario is either:<br>\na) first look up the patient on the payer system and then point to the payer's patient record as part of the claim; or<br>\nb) point to the provider's patient and the payer can come query it if they don't recognize the URL (a one-time process where they establish the link to the provider's id)</p>\n<p>An alternative (and slightly harder/clunkier) but still valid RESTful way of doing this is to send the claim as part of a \"transaction\" bundle where the reference to the Patient (or other resources) are expressed as a conditional link - which is essentially a query.</p>\n<p>However, if you're doing an operation, then the simplest think is to just package everything into a Bundle and define the semantics of the $submit operation to be that you should 'match' on the referenced subject and practitioner records and 'create' the supporting info and other information.</p>",
        "id": 175573461,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1568323989
    },
    {
        "content": "<blockquote>\n<p>first look up the patient on the payer system and then point to the payer's patient record as part of the claim; or</p>\n</blockquote>\n<p>For the patient, this might be possible; for the \"prescription\" (drug/dose in question, and dispense quantities, etc), it doesn't exist in the payer's registry anywhere. And what you call the \"provider\" isn't an actor in this exchange (it's just a client-side-only consumer app making the request), so we can't necessarily look things up in the \"provider's system\".</p>",
        "id": 175581020,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568331360
    },
    {
        "content": "<p>Also for an operation, why do you say Bundle <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> rather than named resource-type parameters?</p>",
        "id": 175581077,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568331388
    },
    {
        "content": "<p>(I don't think any \"creation\" is expected here on the side of the service providing pricing information. It's just a transient query and from the perspective of data minimzation, it'd be better not to store information beyond the scope of the query.)</p>",
        "id": 175581101,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568331425
    },
    {
        "content": "<p>I believe the Claim/$submit operation is set to process a Bundle that contains a claim and related information.  Given that the relationships are asserted by the claim, breaking them into separate parameters seems unnecessary (and a bit heavier too).  If you're not using that and don't have a single resource that ties everything together, separate parameters are appropriate.</p>",
        "id": 175583364,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1568334330
    },
    {
        "content": "<p>Cool, okay -- that's consistent with how I was looking at things. (I am thinking the existing $submit operation kind of obscures what's going on.)</p>",
        "id": 175587395,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568339797
    },
    {
        "content": "<p>From the above, I'm reading that the plan going forward will be that the request from b.well will be a bundle that includes a single claim and whatever related objects are needed as part of the bundle and that the <code>contained</code> parameter won't be used. (That was my initial inclination, but from the documentation I saw it was not clear how/if <code>Claim/$submit</code>handles bundles.)<br>\nDoes that sound right to everyone?</p>",
        "id": 175622749,
        "sender_full_name": "Matt Printz",
        "timestamp": 1568380947
    },
    {
        "content": "<p>We can discuss the use of medicationrequest and other resources during our sessions in Atlanta.  We are ready to continue with claim and claims response with updated logic.  All 5 scenarios per the spreadsheet are ready with the previously submitted $claim Humana endpoint.  </p>\n<p>We have provided a simplified request example since most of the information in the original one posted is not used in the processing and seemed to imply that we needed it.  We are really only using patient, provider, pharmacy, and NDC.  Example request and response for scenario 1 is attached. </p>\n<p><a href=\"/user_uploads/10155/_jX8kadBQlQoBwuKpyieDA_b/claimresponse.txt\" target=\"_blank\" title=\"claimresponse.txt\">claimresponse.txt</a> <a href=\"/user_uploads/10155/PHUs7H9iTtx4qMvvffX6ye0p/claim.txt\" target=\"_blank\" title=\"claim.txt\">claim.txt</a></p>",
        "id": 175622804,
        "sender_full_name": "Patrick Murta",
        "timestamp": 1568380999
    },
    {
        "content": "<p>Seems like operationoutcome is the appropriate response for member not found so we plan to implement that today.</p>",
        "id": 175622972,
        "sender_full_name": "Patrick Murta",
        "timestamp": 1568381109
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"196338\">@Patrick Murta</span> Thanks for the updated documents. In claimresponse.txt I'm not seeing the GoodRx cash pricing included. Is it still part of the plan to include that info?</p>",
        "id": 175623211,
        "sender_full_name": "Matt Printz",
        "timestamp": 1568381310
    },
    {
        "content": "<p>That information should come from the GoodRx service, I believe.  Spoke with Philips and Kristen a bit on that yesterday.  Also, I have attached the updated Pooja spreadsheet to include member ids on our FHIR server so that you don't get a patient not found error. Column G in spreadsheet.<br>\n<a href=\"/user_uploads/10155/FvfTNkHQHcyAjPwwMwPYmj2N/Sample-Data-for-Consumer-RTPBC-Transaction-with-Payer-Member-IDs.xlsx\" target=\"_blank\" title=\"Sample-Data-for-Consumer-RTPBC-Transaction-with-Payer-Member-IDs.xlsx\">Sample-Data-for-Consumer-RTPBC-Transaction-with-Payer-Member-IDs.xlsx</a></p>",
        "id": 175624024,
        "sender_full_name": "Patrick Murta",
        "timestamp": 1568381848
    },
    {
        "content": "<p>Can someone help me understand the difference between items and addItems? In the example claim response I see a $25 copay in each.</p>",
        "id": 175625914,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568383094
    },
    {
        "content": "<p>(Also for spreadsheets that might change over time, It would be good to put them in a collaborative editor so people are always looking at the latest.)</p>",
        "id": 175625962,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568383128
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"196338\">@Patrick Murta</span> I'm a little confused by something. In our system we created two users, John and Jane Doe, and the expectation in our system is that they'll have a single external member id per the patient, not per the medication. So we were expecting to have just, say, <code>id1</code> and <code>id2</code> and with the 2 RXs for id1 and 3 RXs for id2. Instead it looks like the member id changes for each RX. Can you confirm?</p>",
        "id": 175625975,
        "sender_full_name": "Matt Printz",
        "timestamp": 1568383135
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"196338\">@Patrick Murta</span> I'm getting a \"NDC Not Found\" operation outcome response when trying to look up Repatha. So far, this is the only drug I've seen this for. I've confirmed that the NDC I'm sending matches the spreadsheet and the actual NDC for Repatha.<br>\nRequest and response attached.<br>\n<a href=\"/user_uploads/10155/T32C_1PNwcvHswhX17tHmJU7/Repatha_request.txt\" target=\"_blank\" title=\"Repatha_request.txt\">Repatha_request.txt</a> <a href=\"/user_uploads/10155/BXbriO47lATAhPE1mIKmqqh-/Repatha_response.txt\" target=\"_blank\" title=\"Repatha_response.txt\">Repatha_response.txt</a></p>",
        "id": 175632663,
        "sender_full_name": "Matt Printz",
        "timestamp": 1568387054
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"196338\">@Patrick Murta</span> This is a biologic/biosimilar.  I was curious what the response would be with these types of drugs which is why I chose this one.  Any additional feedback on this one from your end yet?</p>",
        "id": 175700083,
        "sender_full_name": "Pooja Babbrah",
        "timestamp": 1568467407
    },
    {
        "content": "<p>Just talked to Philips and we are going to go through each issue at table 10.  We are talking now if you want to join..</p>",
        "id": 175701670,
        "sender_full_name": "Patrick Murta",
        "timestamp": 1568467963
    },
    {
        "content": "<p>All - We're going to use NDC 55513-760-02 for Repatha</p>",
        "id": 175702499,
        "sender_full_name": "Philips Johnson",
        "timestamp": 1568469296
    },
    {
        "content": "<p>Thanks Philips.  Here are the updated Member IDs correcting the issue with the same member having multiple IDs in the spreadsheet:<br>\nFN  LN  DOB Gender  Zip Member Id<br>\nJane    Doe 7/15/1935   F   85251   Id1<br>\nJane    Doe 7/15/1935   F   85251   Id1<br>\nJohn    Doe 7/15/1935   M   85251   Id2<br>\nJohn    Doe 7/15/1935   M   85260   Id2<br>\nJohn    Doe 7/15/1935   M   85260   Id2</p>",
        "id": 175702921,
        "sender_full_name": "Patrick Murta",
        "timestamp": 1568470011
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"196338\">@Patrick Murta</span> it looks like your validation of the NDC requires dashes.  we dont typically see the NDCs coming in with dashes.  is this something that could be relaxed?  are you doing an exact match in this example api?</p>",
        "id": 175705379,
        "sender_full_name": "Mike Berkman",
        "timestamp": 1568473493
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"240271\">@Mike Berkman</span> Hi Mike, we are using the actual NDC codes themselves which do include the dashes.</p>",
        "id": 175707173,
        "sender_full_name": "Douglas DeShazo",
        "timestamp": 1568476435
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"240271\">@Mike Berkman</span> , per Doug's note, we use the dashes since those are the official representation.  Hopefully, that is not a big issue for you.</p>",
        "id": 175710604,
        "sender_full_name": "Patrick Murta",
        "timestamp": 1568482402
    },
    {
        "content": "<p>The follow items have been mitigated and deployed to the Humana testing endpoint:</p>",
        "id": 175711771,
        "sender_full_name": "Patrick Murta",
        "timestamp": 1568484565
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/K91N7hAFd3Ws0ZJp9-IJPtsK/Connectathon22FHIRIssues.xlsx\" target=\"_blank\" title=\"Connectathon22FHIRIssues.xlsx\">Connectathon22FHIRIssues.xlsx</a></p>",
        "id": 175711852,
        "sender_full_name": "Patrick Murta",
        "timestamp": 1568484670
    },
    {
        "content": "<p>all good, thx!</p>",
        "id": 175713498,
        "sender_full_name": "Mike Berkman",
        "timestamp": 1568487200
    }
]