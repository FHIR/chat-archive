[
    {
        "content": "<p>Here is the beginning of a draft version of the <a class=\"stream\" data-stream-id=\"208660\" href=\"/#narrow/stream/208660-CARIN-Benefit-Check-IG\">#CARIN Benefit Check IG</a> Implementation Guide. <a href=\"https://trifolia-fhir.lantanagroup.com/igs/lantana_hapi_r4/CARIN-RTPBC/index.html\" target=\"_blank\" title=\"https://trifolia-fhir.lantanagroup.com/igs/lantana_hapi_r4/CARIN-RTPBC/index.html\">https://trifolia-fhir.lantanagroup.com/igs/lantana_hapi_r4/CARIN-RTPBC/index.html</a> It is still a work in progress but should have a more complete IG by the end of next week. <span class=\"user-mention\" data-user-id=\"238597\">@Frank McKinney</span> <span class=\"user-mention\" data-user-id=\"232952\">@Pooja Babbrah</span> are helping us create it. Please let us know if you have feedback you'd like to provide to our team.</p>",
        "id": 179435973,
        "sender_full_name": "Ryan Howells",
        "timestamp": 1572444993
    },
    {
        "content": "<p>Thanks! I've shared some of this over email, but will include some thoughts here.</p>",
        "id": 179466084,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572462345
    },
    {
        "content": "<p>First off, getting more of the basic documentation out of images and into the resource-specific profiles pages will make review a bit easier. Adding examples for the end-to-end flow should be a top priority, since they'll probably help shape the profiles themselves.</p>",
        "id": 179466377,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572462513
    },
    {
        "content": "<p>What's the rationale for requiring MedicationRequest.reasonCode? (This is optional in US Core and other profiles I've seen.)</p>",
        "id": 179466381,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572462516
    },
    {
        "content": "<p>In general I'd recommend against \"zeroing out\" (prohibiting) elements unless there's a compelling rationale. This applies across the various profiles, like:</p>\n<p><a href=\"/user_uploads/10155/Ktml2KGXS8BSnxiKMVWRSKKw/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/Ktml2KGXS8BSnxiKMVWRSKKw/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/Ktml2KGXS8BSnxiKMVWRSKKw/pasted_image.png\"></a></div>",
        "id": 179466568,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572462624
    },
    {
        "content": "<p><a href=\"https://trifolia-fhir.lantanagroup.com/igs/lantana_hapi_r4/CARIN-RTPBC/StructureDefinition-carin-rtpbc-request-Claim-definitions.html#Claim.provider\" target=\"_blank\" title=\"https://trifolia-fhir.lantanagroup.com/igs/lantana_hapi_r4/CARIN-RTPBC/StructureDefinition-carin-rtpbc-request-Claim-definitions.html#Claim.provider\">https://trifolia-fhir.lantanagroup.com/igs/lantana_hapi_r4/CARIN-RTPBC/StructureDefinition-carin-rtpbc-request-Claim-definitions.html#Claim.provider</a> documentation describes it as a provider, but the reference is to a \"preferred pharmacy\". I would have expected to find a prescribing clinician there (but instead the prescribing clinician is listed under <a href=\"https://trifolia-fhir.lantanagroup.com/igs/lantana_hapi_r4/CARIN-RTPBC/StructureDefinition-carin-rtpbc-request-Claim-definitions.html#Claim.careTeam.provider\" target=\"_blank\" title=\"https://trifolia-fhir.lantanagroup.com/igs/lantana_hapi_r4/CARIN-RTPBC/StructureDefinition-carin-rtpbc-request-Claim-definitions.html#Claim.careTeam.provider\">https://trifolia-fhir.lantanagroup.com/igs/lantana_hapi_r4/CARIN-RTPBC/StructureDefinition-carin-rtpbc-request-Claim-definitions.html#Claim.careTeam.provider</a> (which I think is complicating the picture).</p>",
        "id": 179466816,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572462782
    },
    {
        "content": "<p><a href=\"https://trifolia-fhir.lantanagroup.com/igs/lantana_hapi_r4/CARIN-RTPBC/StructureDefinition-carin-rtpbc-request-Claim-definitions.html#Claim.insurance\" target=\"_blank\" title=\"https://trifolia-fhir.lantanagroup.com/igs/lantana_hapi_r4/CARIN-RTPBC/StructureDefinition-carin-rtpbc-request-Claim-definitions.html#Claim.insurance\">https://trifolia-fhir.lantanagroup.com/igs/lantana_hapi_r4/CARIN-RTPBC/StructureDefinition-carin-rtpbc-request-Claim-definitions.html#Claim.insurance</a> is a repeating field, but the profile fixes <code>sequence</code> to <code>0</code> for all entries, which looks like a modeling error. If the intention is to limit to a single insurance field, the cardinality should be restricted (and there's no need to restrict <code>sequence</code>). But better in my opinion to leave this as an open list, since some real-world use cases will involve multiple insurance providers (why prohibit those use cases at the level of the spec?)</p>",
        "id": 179467025,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572462906
    },
    {
        "content": "<p>I'm unclear on how <a href=\"https://trifolia-fhir.lantanagroup.com/igs/lantana_hapi_r4/CARIN-RTPBC/StructureDefinition-carin-rtpbc-request-Claim-definitions.html#Claim.item\" target=\"_blank\" title=\"https://trifolia-fhir.lantanagroup.com/igs/lantana_hapi_r4/CARIN-RTPBC/StructureDefinition-carin-rtpbc-request-Claim-definitions.html#Claim.item\">https://trifolia-fhir.lantanagroup.com/igs/lantana_hapi_r4/CARIN-RTPBC/StructureDefinition-carin-rtpbc-request-Claim-definitions.html#Claim.item</a> is being used; the docs don't explain this, but I do see some constraints.</p>",
        "id": 179467086,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572462956
    },
    {
        "content": "<p>(OK. that's some quick feedback on the outbound Claim -- request -- from <a href=\"https://trifolia-fhir.lantanagroup.com/igs/lantana_hapi_r4/CARIN-RTPBC/profiles.html\" target=\"_blank\" title=\"https://trifolia-fhir.lantanagroup.com/igs/lantana_hapi_r4/CARIN-RTPBC/profiles.html\">https://trifolia-fhir.lantanagroup.com/igs/lantana_hapi_r4/CARIN-RTPBC/profiles.html</a>. I haven't looked through the others in detail, partly because I'm not sure how they're used, and where/how the outbound request includes these various resources. Some narrative/examples/tutorial would be a big help.)</p>",
        "id": 179467213,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572463024
    },
    {
        "content": "<p>Thanks for the feedback <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>  - <span class=\"user-mention\" data-user-id=\"238597\">@Frank McKinney</span>  should be able to help answer some of these questions and address concerns.  I know he is also working on moving everything to the <a href=\"http://build.fhir.org\" target=\"_blank\" title=\"http://build.fhir.org\">build.fhir.org</a> site which may help with the version tracking, etc. questions you raised through email.</p>",
        "id": 179472027,
        "sender_full_name": "Pooja Babbrah",
        "timestamp": 1572466231
    },
    {
        "content": "<p>Yes (well, managing source in github will provide that tracking; publishing at <a href=\"http://build.fhir.org\" target=\"_blank\" title=\"http://build.fhir.org\">build.fhir.org</a> is just a nice side effect).</p>",
        "id": 179473973,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572467583
    },
    {
        "content": "<p>Thanks for the comments/questions Josh! I appreciate the feedback</p>\n<p>Re. the prescription reason/diagnosis... Good catch. I'm adjusting that now. The diagnosis can factor in to coverage (and is included in the NCPDP RTPBC spec), but we discussed in the CARIN WG and agreed that its reliability would likely be a challenge when provided by a patient (rather than the prescriber). So, is now 0..1 in the IG. Leading to your other point...</p>\n<p>Re. making elements not-used (0..0). I wasn't sure what would be the right / conventional approach for clarifying what is expected to be populated in the Claim and ClaimResponse resources, since it's not immediately apparent what the different elements represent and when they're used. I think that folks in the benefits processing world like to 'lock down' what they're supposed to provide (and what they need to accept), but appreciate that FHIR has more of a 'don't constrain unless you need to' perspective. For the supporting resources (Patient, etc.) I agree there's no benefit in making elements unavailable... but I'm on the fence about the claim/response. </p>\n<p>From our conversations with the Financial Mgmt WG folks, the meaning of Claim.provider is the party that would get paid due to the claim, so in this case, the pharmacy. Definitely not obvious. The prescriber then is captured as part of the care team that created the order. I've gone over the request mapping in some detail with Paul Knapp on the FM WG, but we haven't yet had a chance to review the mapping I've proposed for the ClaimResponse... was scheduled for yesterday but got bumped to next Tuesday. </p>\n<p>Claim.insurance: Right.. that looks goofed up. Whether to restrict cardinality to 1 is the question, which relates back to earlier notes. I think a key determiner for questions like this is the extent we (especially the payers/PBMs) want this process to stay compatible with how they're performing provider-requested RTPBC, and preadjudication in general. My understanding is that coordination of benefits with multiple payers is seen as problematic... predicting what other payers might pay, etc. <br>\n- I think it would be good to get folks from the payer side together to discuss how much we want/need to align with their current ways of processing... so as to not create obstacles for them</p>\n<p>Re the Claim.item, that's where the product identifier and quantity will go. I was fighting with Trifolia over this part last night and pulled out what I had... A complicating factor is whether we want/need to enable the product to be identified using an RxNorm in addition to an NDC... which is totally useful in clinical functions but basically never used for pharmacy benefits processing. <br>\n - Based on earlier discussions in the team, do you think it would it be reasonable to limit the product ID to NDC?</p>\n<p>Thanks again... it's helpful to talk stuff over</p>",
        "id": 179481551,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1572472446
    },
    {
        "content": "<p>The recommendation is to only constrain maxOccurs (whether it's to 0 or 1 or something else) if it's an error for the data to be present.  If it's data that will be ignored, just don't mark it  as \"mustSupport\".  For repeating elements, slice it and define the constraints that will allow you to extract the repetition(s) you care about from the larger collection.  Always assume that the client will be exposing the same \"maximum\" interface to all possible consumers, filtering only based on access permissions, not on receiver preferences.</p>",
        "id": 179484105,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572474637
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  , that's very helpful. I think we'll have a mix of \"error\" and \"can ignore\" in our use of the Claim.</p>\n<p>Quick question: We're using Claim as a predetermination request where, instead of asking to get paid some amount for a service, the submitter is asking \"how much would you pay for this service?\".   In this scenario, it wouldn't make sense to include pricing information in the request. Would this be an example where we'd set maxOccurs to 0 (e.g., on the item.unitPrice element)... considering it to be an error to populate it?</p>\n<p>Thanks again!<br>\n<span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> <span class=\"user-mention\" data-user-id=\"232952\">@Pooja Babbrah</span></p>",
        "id": 179495821,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1572487975
    },
    {
        "content": "<p>That sounds logical, indeed.</p>",
        "id": 179495893,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572488052
    },
    {
        "content": "<p>It sort of depends.  In a pre-determination, you've got two options - the client sends a pseudo-claim representing what they 'would' bill, but marks it as a pre-determination and the payer then adjudicates it as they'd expect to and indicates how much they 'would' have paid (and perhaps reserves funds).  The benefit of that approach is that if the client is billing for less than the payer might be willing to pay, the payer doesn't automatically tell them what the max is.  (Though smart clients will bump the billing numbers up to something unreasonable to find the max anyhow).  The question is whether the inclusion of the dollar amounts means that the request can't be processed, or if they're just noise.  I think in this case, they'd just be ignorable noise.  Even payee (which wouldn't be relevant on a pre-determination) wouldn't be wrong.  And could result in a response where you could indicate that you're not willing to pay that particular payee (e.g. you always pay the policy holder).  The only one that's somewhat suspect as being a true 'error' would be 'encounter', as in most cases the encounter wouldn't have happened yet.  However, if the pre-determination is for something when the patient's already admitted.</p>",
        "id": 179498964,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572493093
    },
    {
        "content": "<p>Errors would be things like ordering a blood pressure and providing a specimen - that's obviously out to lunch.  Or registering a new patient with a deceased date filled in (might be legitimate in some systems, but fine to say it's an error in a particular set of implementation circumstances).</p>",
        "id": 179498975,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572493162
    },
    {
        "content": "<p>In other words, if the population of the data indicates the instance is clearly out to lunch or violates business rules, then prohibit it.  If it's merely unnecessary for processing but could conceivably legitimately be present, don't yell.</p>",
        "id": 179499026,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572493225
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> . It feels like the key determiner of how we evaluate whether something is an error or extra is whether we think of this profile as being \"a predetermination\" or \"this specific kind of predetermination\".  I feel pulled to want to say \"in this particular process, the stakeholders agreed that these were the only inputs that will be considered\".  <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> <span class=\"user-mention\" data-user-id=\"232952\">@Pooja Babbrah</span></p>",
        "id": 179544790,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1572536924
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> . Since you're being so generous with expertise, I'm going to push it and ask a couple related profiling / cardinality questions...</p>\n<p>(a) When constraining an element's cardinality, is it best practice to just constrain the \"end\" that doesn't match your needs? E.g., if the base is 0..1 and you need it to be 1..1, should the structure definition just include a min=1 for that element and not a max=1 (since it's already 1 in the base)? <br>\n(b) Similar, if you're making an element 1..1, is there a reason to also set it as Must Support?<br>\nI've seen cases where foks have taken a 'belt + suspenders' approach and included a max=1 when the base is already 1, and a Must Support on a 1..1 element... which seems redundant to me. Esp. the Must Support w/1..1</p>\n<p>(c) When binding a codeable concept to a valuset and setting the codeable concept element itself to 1..1, is it also appropriate to set the children system, code and display elements to 1..1 (if you want to require that they're all populated)? Or does the parent codeable concept 1..1 apply down to at least the system/code, due to the binding?</p>\n<p>Thanks again! and I'll stop bugging you now<br>\n<span class=\"user-mention\" data-user-id=\"232952\">@Pooja Babbrah</span> <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span></p>",
        "id": 179546086,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1572537660
    },
    {
        "content": "<p>A specification will always reflect what data is needed for a particular scenario.  However, the <em>implementation</em> should ideally not have to be tied to only that scenario.  If you create that tie, then you end up with a separate interface for each scenario, which creates additional development costs and ongoing maintenance costs.  Therefore, specifications should try to allow, as much as possible, data to be present that is unnecessary for the design scenario but could potentially be relevant for others.</p>",
        "id": 179549167,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572539544
    },
    {
        "content": "<p>a) Typically, you only declare what's changed.<br>\nb) 1..1 and mustSupport are orthogonal.  If something is 1..1 and not mustSupport, then nothing stops the sender from populating the element with a fixed value (or even a fixed extension that says something like 'not supported').  And on the receiving side, a mandatory element not marked as mustSupport is free to be ignored and thrown away.  mustSupport is what sets conformance expectations that the system must be able to store/display/\"allow user entry of\"/\"consider in decision support\"/\"do whatever with\" the element.  So typically if an element is 1..1 it will <em>also</em> be flagged as mustSupport.<br>\nc) Setting an element to 1..1 has no impact on the cardinalities of the children.  All you inherit is the base rule that at least one of the children must be present and at some descendant level there must be a value.  It's possible the only child might be an extension.  If you have a <em>required</em> binding, then that imposes an additional constraint that at least one of the Codings must have a value from the value set (which means, at minimum, code + system must be present).  It has no impact on other Coding repetitions though so long as at least one includes a code + system and matches something in the value set.</p>",
        "id": 179549826,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572540001
    },
    {
        "content": "<p>Thanks a lot <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  for the direction. I appreciate it!</p>",
        "id": 179552252,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1572541295
    },
    {
        "content": "<p>No problem.  That's what this community is for :)</p>",
        "id": 179552336,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572541325
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"232952\">@Pooja Babbrah</span> <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> <span class=\"user-mention\" data-user-id=\"196361\">@Ryan Howells</span>.  I've got the draft IG on <a href=\"http://build.fhir.org\" target=\"_blank\" title=\"http://build.fhir.org\">build.fhir.org</a> now...<br>\n<a href=\"http://build.fhir.org/ig/HL7/carin-rtpbc/\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/carin-rtpbc/\">http://build.fhir.org/ig/HL7/carin-rtpbc/</a></p>\n<p>Kind of ugly, but has the profiles framed up and an example request and response scenario. I'll be working on it over the next few days to get it better organized and fleshed out for review / refinement .</p>\n<p>Have a great weekend!</p>",
        "id": 179662575,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1572640311
    },
    {
        "content": "<p>Thanks! Are <a href=\"http://build.fhir.org/ig/HL7/carin-rtpbc/other.html\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/carin-rtpbc/other.html\">http://build.fhir.org/ig/HL7/carin-rtpbc/other.html</a> the examples you mentioned? It'd be good to show a full bundle of request details / response details -- or at least, I'm assuming that you're planning to use a <code>$submit</code> operation with a Bundle. Is this correct? I don't see it documented yet.</p>",
        "id": 179877942,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572902523
    },
    {
        "content": "<p>Re: content, I wouldn't expect to see contained resources here, and I don't think the payor will have a way to reach back into the client for more details (e.g., to fetch resources), so a bundle or operation parameters will be necessary to send along the full details.</p>",
        "id": 179878053,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1572902565
    },
    {
        "content": "<p>Thank Josh. I was thinking that containing might be appropriate since the patient, etc. are sent more for identification/matching than for consumption. I'm working on a bundle example and some associated guidance, which I'll get into the IG yet today</p>",
        "id": 179984219,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1572992335
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> . I added bundled versions of the request and response, along with related discussion in Table of Contents &gt; Submit Operation. </p>\n<p>I also left the Claim-with-contained-resources versions of the request and response... for discussion. The supporting resources (Patient, MedicationRequest, etc.) are very light... providing identifying/matching information to the insurer, rather than to be stored or used to update the insurer's info. It feels uncomfortable to me to reference them in the bundle like they're full resources. Is this a situation where contained resources might be appropriate? </p>\n<p>Let me know what you think</p>\n<p><span class=\"user-mention\" data-user-id=\"232952\">@Pooja Babbrah</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <span class=\"user-mention\" data-user-id=\"196361\">@Ryan Howells</span></p>",
        "id": 180017843,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1573035253
    },
    {
        "content": "<p>Contained resources are used when something isn't independently identifiable and can't have independent existence.  The contained mechanism is <em>not</em> a transport packaging mechanism.  If you send a resource with contained data, the general expectation is that the receiver will store the resource with the contained resources and will not resolve them to existing data structures.  I don't think that's what's wanted here.</p>",
        "id": 180060350,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1573063834
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>, <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>  for weighing in. Hoping you have time for  couple quick questions to make sure I understand... </p>\n<p>- I wonder if the basic driver is \"what is the _thing we're exchanging?\" I tend to think of the Claim/predetermination submission as an entity unto itself, with its own, short existence. Sort of a point-in-time, non-evolving formulation of a question with pieces of information to be used when answering the question at the moment it is asked.  From that viewpoint, the bits from the prescription, the coverage IDs, the the patient's name, etc. are just components of the request--not pointers to independent things that will live on after the claim's been processed.</p>\n<p>We'd want the recipient to store off the request in their \"submitted claims\" file, and not try to update their member record etc. with the patient matching info it contained... since we know we're not giving them the full Patient, etc.</p>\n<p>- With regard to the transport packaging aspect, the Claim $submit operation allows either a Claim or a Bundle as its parameter... and I understand they are both workable from a mechanical 'getting the information from here to there' perspective... but maybe there's more to be considered in that respect than I'm aware of.</p>\n<hr>\n<p>If all this still points to Bundle, that's cool with me :) Just wanted to clarify what I think the information means in the process</p>\n<p>Thanks again!</p>",
        "id": 180068858,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1573068959
    },
    {
        "content": "<p>I think our methodology points to Bundle for conveying the auxiliary data needed by the $submit operation on the claim. (My own recommendation was to use a more tailored operation, taking its own named parameters -- but I think that ship has sailed.)</p>",
        "id": 180069122,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1573069126
    },
    {
        "content": "<p>In pure RESTful FHIR, there's no such thing as a 'submission'.  There's just a bunch of creates, updates, queries, etc.  As an example, when there's a patient admission, you'll see the creation or update of a Patient, the creation or update of a bunch of allergies, medication statements, observations, coverage and other information and the creation of an Encounter.  On discharge, you'll see an update to the encounter and updates and creates of a bunch of other things.  Those creations and updates might flow completely independently or they might be sent as one or more transactions.  There's no notion of a \"submission\" though and there's nothing that tells the receiving system that the update to the Patient demographics is driven by an admission or discharge.</p>\n<p>Similarly, if we were doing claims processing with pure REST, we'd capture all of the supporting information in whatever servers were appropriate, we'd create the Claim resource on the source system and create a Task asking for the Claim to be processed.  The payer would retrieve the Claim and, as needed, any referenced resources from wherever they lived.  At some point, the ClaimResponse would be created and the Task updated to point to it.  Via subscription or other means, the provider would be made aware of the Task update and they could go out and query the ClaimResponse.</p>\n<p>That's obviously different from how systems are used to doing such processing today - and different from how the X12/NCPDP back ends for a lot of this functionality.  Thus the tendency to use operations to pass a collection of interrelated resources.</p>",
        "id": 180080741,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1573077438
    },
    {
        "content": "<p>Im with Lloyd, except that a Provenance of a Create or an Update can indicate Who/What/Where/When/Why including if it was because of an admit or discharge. This seems unnecessary to track this kind of comprehensive Provenance, but it can be done. So, as Lloyd has made clear we should be careful not to re-invent the old model for no good reason, while leveraging the FHIR models every benefit.</p>",
        "id": 180131329,
        "sender_full_name": "John Moehrke",
        "timestamp": 1573133342
    },
    {
        "content": "<p>Lloyd, you're describing something \"pure\" but I'm not sure whether you're advocating it for this use use case, or what the advantages are (to offset the obvious additional complexity of adding tasks and subscriptions/polling, and so on). Can you clarify?</p>",
        "id": 180138021,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1573137584
    },
    {
        "content": "<p>The benefit is that the server's capabilities are not use-case-specific.  You just expose the resources that can be manipulated and the client decides what to manipulate and in what order.  Having a use-case-independent interface lowers overall costs and increases flexibility.  However, it doesn't necessarily align well with existing back-ends.  If there's tight control required over what resources must be shared, they must all be shared at a particular time and the relationships are known, then you're looking at either an operation or FHIR messaging.  The latter uses a Bundle.  The former <em>can</em> use a Bundle, but more typically has specific parameters.  Using operations with Bundles limits your ability to clearly define exactly what must be present and what relationships can exist because operations don't give you an ability to use GraphDefinition to define your content.</p>",
        "id": 180143058,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1573140623
    },
    {
        "content": "<p>The organizations building support for RTBC today (if I'm not mistaken) are basically trying to scaffold a FHIR interface for this specific purpose on top of existing infrastructure -- if I understand correctly. As such, I think a specific operation of some kind (whether \"generic\"/pre-existing <code>$submit</code> or something more tailored like an <code>$rtbc-evaluate</code>) fits the bill.</p>",
        "id": 180157809,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1573150003
    },
    {
        "content": "<p>That’s true, Josh. The CARIN effort can be thought of as an adaptation of the existing provider-oriented RTPBC process for patient use. With the idea of tailoring content to the new context but enabling payers to leverage existing capabilities, to promote adoption</p>",
        "id": 180163560,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1573153389
    },
    {
        "content": "<p>I really appreciate us having this conversation now... good to think this through</p>\n<p>Bulleting a few things that are arising... and relating them to this particular CARIN rtpbc effort...</p>\n<p>- A pure REST approach wouldn't collect and submit information to the payer, but instead would create a Claim and point the payer to the relevant resources wherever they reside. The payer would grab what it needs, generate a ClaimResponse and notify parties<br>\n       &gt;&gt; w/respect to  this effort (rtpbc): The \"real\" relevant resources (e.g., the prescription) aren't owned by the party (the 'app') creating the Claim/predetermination. The app also probably doesn't have the info to systematically access them. Instead, the app collects information elements about/from those resources from the patient. What the app collects has been pre-defined by the payer community to be sufficient for pharmacy predetermination</p>\n<p>- To John's point, Provenances are used to track the reason, parties, etc. of a resource creation or change<br>\n         &gt;&gt; the only resource being created/changed in rtpbc is the ClaimResponse (predetermination outcome). A couple things that might be considerations... the ClaimResponse itself captures the key who/what/where/why/when type info, because that's kind of the nature of the thing... a record of a determination based on particular inputs at a particular point in time<br>\n        &gt;&gt; to that point, maybe a question is whether locking down the information element _values as they existed at the time of the request (e.g., whether the prescription allows substitutions) is more on-point than recording a reference to a possibly-changing resource (where the doctor might later adjust the prescription from 'dispense as written' to 'substitutions allowed')?</p>\n<p>- if the fact that the party requesting the Claim/predetermination can't reference queryable input resources leads us to providing the input information in a Bundle parameter to a Claim operation...  Lloyd mentioned limimations in specifying/validating the Bundle's content and relationships<br>\n        &gt;&gt;  is this where having a purpose-built operation like @rtpbc-evaluate comes in? Where we could specify separate Patient, MedicationRequest, etc. parameters rather than \"a bundle\" as allowed by Claim.$submit<br>\n        &gt;&gt; [this is from my newness to FHIR profiling]: I was thinking our IG could constrain the content of the Bundle for this use, but maybe that's not possible. Can we profile a Bundle to state that it must contain entry.resources of the type RTPBC-MedicationRequest, RTPBC-Patient, etc.? E.g., 'one entry must be a Patient resource that conforms to RTPBC-Patient'?</p>\n<p>Thanks again for helping us work this through <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span>. I'm also looping in <span class=\"user-mention\" data-user-id=\"191430\">@Paul Knapp</span>  who is leading some discussion with FM and PIE that's in the same territory <br>\nFrank</p>",
        "id": 180233575,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1573223073
    },
    {
        "content": "<p>Hoping Lloyd will weigh in on the formal profiling piece. From my perspective, a couple of notes:</p>\n<ol>\n<li>\n<p>I wouldn't characterize \"pure REST\" as meaning that the PBM app needs to stand up its own FHIR endpoint so that PBM can come back to it for details. (Especially because in this use case, many of these details only exist ephemerally in a user's app session, and not as persistent state.) I think we are getting tripped up on a misconception of \"purity\".</p>\n</li>\n<li>\n<p>Not everything we specify needs to be expressed in a formal StructureDefinition-backed constraint; the important thing is that our guide works and is easy for developers to follow consistently.</p>\n</li>\n</ol>",
        "id": 180234571,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1573223689
    },
    {
        "content": "<p>Agree that the app doesn't need to have its own repository  so long as it has permission to write stuff elsewhere.  The key thing is the ability to query to find what data exists and the ability to point to records wherever they exist and expect other systems to be able to grab them \"as needed\".  If you want to pass a collection of data and say \"process this\" where what happens to different records is determined by the receiver rather than the client, you're in operation/messaging space.</p>",
        "id": 180244230,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1573229419
    },
    {
        "content": "<blockquote>\n<p>If you want to pass a collection of data and say \"process this\" where what happens to different records is determined by the receiver rather than the client, you're in operation/messaging space.</p>\n</blockquote>\n<p>I think that's exactly where we are.</p>",
        "id": 180257447,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1573237751
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> , <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>. Feels like the discussion set out the rationale for using an operation to accomplish the RTPBC request/response. <br>\nJosh: I agree it makes sense to establish an distinct operation, since RTPBC expects different behavior than the existing Claim.$submit, and nothing in the Claim explicitly flags it as RTPBC. Seems we need to tell the server what exactly we want it to do. Your suggestion of $rtbc-evaluate sounds good to me. <br>\nIf we were to take advantage of the specific operation and break out the request information into separate input parameters, would you propose using a separate parameter for each resource that contains input information (patient, coverage, medication-request, practitioner, pharmacy-organization)?</p>",
        "id": 180429457,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1573483990
    },
    {
        "content": "<p>Yeah, that's something like what I had drafted at <a href=\"https://gist.github.com/jmandel/fff82af95d2115497b5ccd74a42cfdb0\" target=\"_blank\" title=\"https://gist.github.com/jmandel/fff82af95d2115497b5ccd74a42cfdb0\">https://gist.github.com/jmandel/fff82af95d2115497b5ccd74a42cfdb0</a></p>",
        "id": 180433348,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1573486739
    },
    {
        "content": "<p>Okay, I see the earlier Connectathon thread where you proposed this. Sorry for covering this ground again</p>\n<p>I see you were proposing that the parameters in the new operation's input and output would essentially replace the Claim and ClaimResponse... which _is pretty different than what the group ultimately pursued. It's attractive to think more greenfield and define just what's needed. Though I do think it's reasonable to consider RTPBC to be a flavor of predetermination as covered in the Claim/Response.</p>\n<p>In the spirit of continuity and following the direction of the Fin'l Mgmt WG, I'm thinking it would be best to stick with using the Claim and ClaimResponse to represent the request and response.</p>\n<p>But if we submit a Claim request using the existing $submit operation, how would the server know that our $submit operation is expected to be processed as an RTPBC request versus a vanilla predetermination?</p>\n<p>Would it be reasonable to define a new operation that (a) specifically returns RTPBC results but (b) still uses the Claim/ClaimResponse resources?</p>",
        "id": 180440974,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1573492136
    },
    {
        "content": "<p>Hi to the folks who will be implementing the consumer RTPBC… Hoping to get your feedback / input on the draft IG, especially the broad strokes approach...<br>\n- <strong>Use of the Claim.$submit operation (proposed in the Imp Guide)</strong>. An alternative mentioned by the Financial Mgmt Workgroup is to post the request to the processor’s $process-message endpoint. Do folks have any preferences... especially on the payer/PBM/discount pricing source side?<br>\n- <strong>Population of the request and response bundles</strong>. <em>Request content:</em> anything that’s missing or would be difficult to process. <em>Response:</em> population of…<br>\n    - the ClaimResponse.item (adjudication for the specific requested med + pharmacy)<br>\n    - the .addItems (adjudication for alternative med + pharmacy combinations)<br>\n    - the .processNote (linked to individual .item and .addItem, containing a summary of how the med is covered for the patient (e.g., Covered, Covered requiring PA, etc.). The list of values is in the Terminology menu, Coverage Summary Value Set  </p>\n<p>Thanks for reviewing and providing feedback</p>",
        "id": 180749645,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1573750430
    },
    {
        "content": "<p>My general leaning is that if you're passing in a Bundle and getting back a Bundle, $process-message is going to give you more control over the content of those bundles and will let you leverage generic messaging infrastructure.</p>",
        "id": 180755254,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1573753874
    },
    {
        "content": "<p>Thanks Lloyd. I also like that that would enable us to state the expected handling in the request's MessageHeader.eventCoding (e.g., \"rtpbc-request\")</p>",
        "id": 180758568,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1573755900
    },
    {
        "content": "<p>Updated the IG based on input from the thread and the Financial Mgmt WG, along with other refinements: </p>\n<ul>\n<li>Added discussion of submission/response using FHIR messaging to the Submission Method page (renamed from Submit Operation). Added examples of submission / response using messaging. Added an extension (isAlternative) to characterize ClaimResponse.addItem composites as independent alternative fulfillment options (based on feedback from the FM WG). Added a Security page under Guidance, to be further fleshed out through stakeholder discussion.<br>\n<a href=\"http://build.fhir.org/ig/HL7/carin-rtpbc/\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/carin-rtpbc/\">http://build.fhir.org/ig/HL7/carin-rtpbc/</a></li>\n</ul>",
        "id": 180848020,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1573835237
    },
    {
        "content": "<p>Can someone explain the benefit of sub-profiling a totally generic operation like \"process-message\" rather than defining our own? It seems to me like we're just tunneling one generic protocol (messaging) on top of another (FHIR operations) even though we have none of the routing/delivery requirements of messaging.</p>",
        "id": 180849165,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1573836012
    },
    {
        "content": "<p>What's the advantage, to offset the complexity cost?</p>",
        "id": 180849186,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1573836038
    },
    {
        "content": "<p>(In terms of defining the conformance resources / specifications, does FHIR even have a way to sub-profile an existing operation like $process-message?)</p>",
        "id": 180849254,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1573836088
    },
    {
        "content": "<p>I wouldn't recommend sub-profiling the operation.  I would recommend using MessageDefinition to define the content to be sent (and returned back).  Because MessageDefinition gives you much more control than OperationDefinition does.</p>",
        "id": 180851332,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1573837542
    },
    {
        "content": "<p>But to be clear, Messages bring a lot of baggage to the table that aren't relevant in this \"remote procedure call\"-like use case.</p>",
        "id": 180916709,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1573918886
    },
    {
        "content": "<p>(things like sources, destinations, asynchronous response patterns, and so forth)</p>",
        "id": 180916715,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1573918913
    },
    {
        "content": "<p>Yes, though they don't mandate support for asynchronous or routing.  Those capabilities are simply available if needed.</p>",
        "id": 180924717,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1573931936
    },
    {
        "content": "<p>And individual parameters can only be specified by their resource type, rather than by specific parameter names. like if you have multiple focus resources of type MedicationRequest, one representing a preferred prescription and one representing an alternate prescription, I don't see a way to label each of these with MessageDefinition.(though I might just be missing something in the modeling machinery).</p>",
        "id": 180936375,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1573953540
    },
    {
        "content": "<p>Right.  If you're passing multiple named parameters rather than a Bundle'O'Stuff, then a custom operation makes more sense.</p>",
        "id": 180939200,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1573959443
    },
    {
        "content": "<p>Josh: Do you see the operation's parameters taking the place of the Claim and ClaimResponse resources? In the approaches we've drafted, those resources/profiles characterize the referenced resources (based on the element that's doing the referencing and the target type specified in the profile)</p>\n<p>Is this a different way to state what we're discussing... whether to use a custom operation's parameters, profiles of the Claim/ClaimResponse resources (or both?) to define the request and response content? </p>\n<p>It feels like using parameters in a custom operation would overlap what the Claim and ClaimResponse do</p>",
        "id": 180970630,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1574021518
    },
    {
        "content": "<p>Agreed there's overlap; I'm advocating for what I see as a more direct/explicit approach (one that for me at least is a lot easier to follow; I am interested to know whether others find these two approaches equally straightforward).</p>",
        "id": 180970964,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1574021942
    },
    {
        "content": "<p>Yes... this is important to think through now versus later. <br>\nI'd like to hear what folks on the payer/pbm side think</p>",
        "id": 180971289,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1574022480
    },
    {
        "content": "<p>An updated IG is available at <a href=\"http://build.fhir.org/ig/HL7/carin-rtpbc\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/carin-rtpbc\">http://build.fhir.org/ig/HL7/carin-rtpbc</a></p>\n<ul>\n<li>Added an Error Handling section under Guidance and additional material to support discussion of the use of FHIR Messaging versus $submit or a custom operation (Profiles and Extensions page... MessageDefinitions for the request and response, at the bottom of the page).</li>\n</ul>",
        "id": 181041836,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1574101629
    },
    {
        "content": "<p>Thanks! The examples here are extremely helpful. My quick take in comparing the $process vs $submit operation is that they are nearly identical. I don't think the message header really adds anything, but neither does it complicate the situation very much.</p>",
        "id": 181043412,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1574102542
    },
    {
        "content": "<p>In the example payloads, since the client does not necessarily represent a system that would be hosting resources online, it might make more sense to avoid putting \"http://example.org\"-prefixed fullUrls in the Bundle. Maybe do reference by uuid instead, to avoid the implication that the client would be hosting content?</p>",
        "id": 181043773,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1574102791
    },
    {
        "content": "<p>For locations where a prescription can  be filled, it might help to say something more about the expectations for how this is modeled. In other words, this approach uses organizations with street addresses for a particular place, rather than organizations representing a business (e.g., headquarters) plus Location resources representing particular spots where fulfillment can occur. (Either approach seems fine to me but we should pin down the expectations.)</p>",
        "id": 181043859,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1574102870
    },
    {
        "content": "<p>Also, has there been thought about how to represent a virtual service that will mail out medications? I.e., how would this appear in the response?</p>",
        "id": 181043923,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1574102895
    },
    {
        "content": "<p>Similarly, has there been thought about how to represent alternative medications like a generic, versus simply alternative locations to pick up a given exact prescription?</p>",
        "id": 181043991,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1574102940
    },
    {
        "content": "<p>Another issue would be various kinds of hints that the client might provide indicating what sorts of pharmacies the patient wants to use. In dense areas there may be many more options than a PBM wants to individually generate prices for, so it would be good to constrain or filter this list based on patient preferences.</p>",
        "id": 181044055,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1574102985
    },
    {
        "content": "<p>I think it would also be valuable to think about how this API can be used in an \"anonymous\" context -- in other words if we just want to ask the hypothetical question of how much a patient on a particular plan would need to pay for a particular drug, can this be done without providing full details about who the patient is and what their member number is and what their healthcare provider's identity is? it would be nice to make sure the API can be applied consistently between this anonymous use case and the full identified use case.</p>",
        "id": 181044190,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1574103079
    },
    {
        "content": "<p>Thanks for reviewing, Josh. Great comments</p>\n<ul>\n<li>Good point that using URLs in fullUrl typically won't make sense...I'll change the examples to use uuids instead</li>\n<li>For the alternative dispensing options, I was thinking that the address in the referenced pharmacy Organization resource would be the physical store location (for retail pharmacies)... though I didn't state it... I will now.</li>\n<li><strong>Regarding mail service pharmacies:</strong> The NCPDP message we're adapting contains more detail about each dispensing option, including the pharmacy type (mail, retail, specialty...), which we currently don't have in the spec. It wasn't part of the Connectathon content, but I think it would be important to the client... for example when interpreting pharmacy addresses (e.g., display addresses for retail pharmacies but not mail service). I'm going to bring this up on today's Pharmacy WG call... to see if there are any conventions for stating a pharmacy type... I'm thinking that we could define a value set and refer to it in Organization.type</li>\n<li>Re. flagging alternatives / generics. The spec currently would require a client to determine when an alternative (an .addItem) represents a different medication or a different pharmacy... which might not be the best. The NCPDP message uses a very structured, looping format  that doesn't transfer well to the ClaimResponse (and also is probably more hierarchical than we need). One thought would be to include an extension that indicates the nature of each alternative option: <em>alternative drug, alternative pharmacy, or both</em>. What do you think?</li>\n<li>Re. tailoring the request to indicate alternative pharmacy preferences. That's a good idea: we can bring it up with the CARIN group (that's not part of the NCPDP message, and I don't know if the group's discussed)</li>\n<li>Re. an anonymous version, that's straying a fair distance from the patient-specific nature of the RTPBC (though that's not to say it wouldn't be useful). A challenge would probably be that the payer systems might be based on their claim processing infrastructures, requiring a patient and prescriber in order to run. But also something we can bring up with the group</li>\n</ul>\n<p>Thanks again!</p>",
        "id": 181055783,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1574111147
    },
    {
        "content": "<p>Made updates to the IG (at <a href=\"http://build.fhir.org/ig/HL7/carin-rtpbc\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/carin-rtpbc\">http://build.fhir.org/ig/HL7/carin-rtpbc</a>) </p>\n<p>Couple points where feedback would be appreciated...</p>\n<ul>\n<li>I attempted to create the terminology assets necessary to handle code and identifier systems for which there are no HL7/FHIR URLs (NDC-11.. for which a FHIR URL is in process, NCPDP proprietary code sets, Canadian province code). I created NamingSystem resources, which don't seem to be supported fully in the IG publishing process (they don't appear to establish URIs that can be referenced within the IG). To work around that, I created temporary placeholder CodeSystems and pointed ValueSets and coded elements to them. I put comments to that effect on the terminology pages in the guide... indicating that things would be trued up before publishing. <strong>Is that a reasonable way to handle these for balloting purposes?</strong></li>\n<li>The ClaimResponse's addItem composite holds alternatives to the requested med/pharmacy combination. Currently, it doesn't explicitly state whether the addItem represents an alternative drug, pharmacy, or both. The expecation is that the requester can compare to what was requested and determine the difference. <strong>Do we want to add indicators to explicitly state what each returned alternative contains (e.g., “requested drug / alternative pharmacy”), or can the client determine on its own?</strong></li>\n<li>Use of the FHIR messaging model would enable implementers to reuse common messaging components that they already have, and might be preferable to using the Claim $submit operation. The guide currently describes both. <strong>To our implementers... What are your thoughts, preferences?</strong></li>\n</ul>\n<p>Thanks!</p>",
        "id": 182314146,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1575259408
    },
    {
        "content": "<p>I wouldn't create temporary code systems or value sets for naming systems.  If the publication tooling isn't working correctly, raise a change request to get the tooling fixed.  Errors caused by tooling problems won't stop an IG from being published.  </p>\n<p>I don't think that addItem is intended to convey alternatives.  On an actual Claim, that wouldn't make any sense.  <span class=\"user-mention\" data-user-id=\"191430\">@Paul Knapp</span> ?</p>",
        "id": 182342594,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575291964
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> (also looping in <span class=\"user-mention\" data-user-id=\"191430\">@Paul Knapp</span> )</p>\n<p>Handling for proprietary code systems like NCPDPs was discussed in last week's Finl Mgmt call and I believe there's a call being set up for tomorrow morning (Tuesday @10 ET) to talk over with Vocabulary folks. My understanding from the call was that we'd need to use placeholders in the IG... though I could have got that wrong, or executed it wrong. I tried to find a way to create a placeholder that enabled the rest of the profile to validate without errors and look as close as possible to what we expect. I'll do whatever makes the most sense to folks </p>\n<p>Re addItems... During a Finl Mgmt WG call we discussed using addItems to represent alternatives and arrived at an approach where we characterize the addItem as an alternative using an extension. That's specified here... <a href=\"http://build.fhir.org/ig/HL7/carin-rtpbc/StructureDefinition-carin-rtpbc-extension-isAlternative.html\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/carin-rtpbc/StructureDefinition-carin-rtpbc-extension-isAlternative.html\">http://build.fhir.org/ig/HL7/carin-rtpbc/StructureDefinition-carin-rtpbc-extension-isAlternative.html</a>    and here's an example of use... <a href=\"http://build.fhir.org/ig/HL7/carin-rtpbc/ClaimResponse-rtpbc-claim-response-03.html\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/carin-rtpbc/ClaimResponse-rtpbc-claim-response-03.html\">http://build.fhir.org/ig/HL7/carin-rtpbc/ClaimResponse-rtpbc-claim-response-03.html</a>. Interested in your thoughts<br>\nBest</p>",
        "id": 182353302,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1575299002
    },
    {
        "content": "<p>If you're dealing with actual code systems, that's fine.  I had understood that you were creating code systems for identifier systems - and that wouldn't be appropriate.</p>",
        "id": 182358296,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575301713
    },
    {
        "content": "<p>There are a couple identifier systems for which I created temporary CodeSystem resources, which I agree isn't kosher. I just couldn't think of an alternative... Is there a way to create an identifier system from scratch in the same way as a CodeSystem?<br>\nThx!</p>",
        "id": 182360496,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1575302928
    },
    {
        "content": "<p>NamingSystem is the proper mechanism.  If you're getting validation issues after doing that, then raise a tracker item.</p>",
        "id": 182363116,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575304536
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> . I was chatting with <span class=\"user-mention\" data-user-id=\"192205\">@Lisa Nelson</span>  and <span class=\"user-mention\" data-user-id=\"252570\">@James Shalaby</span> this morning about situations where each of us are looking to define placeholder CodeSystems and NamingSystems within IGs we're working on. So I'm inviting them into this thread...</p>\n<p>After talking with Lisa and Jim, I think I understand your last comments better ... Let me know if this is correct...</p>\n<ul>\n<li>\n<p>It's okay to create temporary CodeSystems where a final/official code system URL isn't yet available. <br>\nIn the Benefit Check IG that I'm working on, I think an example of this is the 11-digit NDC, for which there's a tracker item currently being worked to create a HL7 url (<a href=\"http://terminology.hl7.org/CodeSystem/ndc-11\" target=\"_blank\" title=\"http://terminology.hl7.org/CodeSystem/ndc-11\">http://terminology.hl7.org/CodeSystem/ndc-11</a>). In this case, I created a CodeSystem resource, used the expected HL7 URL in the CodeSystem.url element, and then referenced that URL in the .compose.include element in a value set. <strong>Is that the right way to do it?</strong></p>\n</li>\n<li>\n<p>Creating a CodeSystem to represent an external identification system <em>isn't</em> kosher, even as a placeholder</p>\n</li>\n</ul>\n<p>Thanks! Frank</p>",
        "id": 182490738,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1575404241
    },
    {
        "content": "<p>Technically, you don't need to define a CodeSystem.  You can just accept that the proposed CodeSystem isn't official yet.  No one should stop you from publishing because of that.  For something that's totally a placeholder, make sure that the URL reflects that.  E.g. \"<a href=\"http://todo/CodeSystem/foo\" target=\"_blank\" title=\"http://todo/CodeSystem/foo\">http://todo/CodeSystem/foo</a>\" so that it's pretty obvious to implementers that they should expect change in that space.</p>",
        "id": 182491941,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575405057
    },
    {
        "content": "<p>Thanks Lloyd. That's helpful</p>\n<p>Regarding the publishing error I get when trying to use a NamingSystem to reference a licensed code system... here's an example:</p>\n<p>I created a NamingSystem resource to reference an NCPDP pharmacy type code set. I set the NamingSystem.uniqueId element to \"<a href=\"http://ncpdp.org/pharmacy-type\" target=\"_blank\" title=\"http://ncpdp.org/pharmacy-type\">http://ncpdp.org/pharmacy-type</a>\" and created a value set with that url in the ValueSet.compose.include.system element. When I run the publisher, the QA log contains one error: </p>\n<p><em>Path: carin-rtpbc-pharmacy-type-value-set</em> <br>\n<em>Severity: error</em>   <br>\n<em>Message: Error from server: Unable to provide support for code system <a href=\"http://ncpdp.org/pharmacy-type\" target=\"_blank\" title=\"http://ncpdp.org/pharmacy-type\">http://ncpdp.org/pharmacy-type</a> (see Tx log)</em></p>\n<p>The ValueSet html page still gets generated, but with the following text under Expansion: \"No Expansion for this valueset (not supported by Publication Tooling)\"... which makes sense since the code system's concepts aren't known to the terminology server. The publisher doesn't compain about the element I have bound to to the value set, and everything else looks like I'd expect.  </p>\n<p>It seems to me like the publishing process might be completing okay, but it's expecting the terminology server to know about the concepts in the code system defined in the NamingSystem resource (which the server doesn't)</p>\n<p>I'm interested in whether you've experienced this, and how you think it should behave</p>\n<p>Thanks again</p>",
        "id": 182517838,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1575425119
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> This doesn't seem like it should be an error, but rather a warning?</p>",
        "id": 182517932,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575425278
    },
    {
        "content": "<p>I'm not entirely sure I understand this. The server can't expand the value set, that's an error not a warning</p>",
        "id": 182518008,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575425363
    },
    {
        "content": "<p>Why is that an error for the IG?  You're pointing to a value set.  The terminology server doesn't recognize the code system.  There will be lots of code systems that exist that the TX server won't know about.  It's only an error if you expect the TX server to recognize the system.</p>",
        "id": 182518100,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575425461
    },
    {
        "content": "<p>Hi Grahame. The value set that's causing the error is based on a code system referenced in a NamingSystem resource. (It's a licensed code system from NCPDP)</p>",
        "id": 182518176,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1575425550
    },
    {
        "content": "<p>The terminology server has been asked to expand a value set based on a code system it doesn't know. I can only return an error that it can't expand the value set</p>",
        "id": 182518213,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575425607
    },
    {
        "content": "<p>I think LLoyd's saying that it's appropriate for the terminology server to return an error, but the publishing process should expect that and ignore it since it's caused by a code system defined in a NamingSystem resource</p>",
        "id": 182518305,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1575425733
    },
    {
        "content": "<p>I don't understand the namingsystem thing. There's no reason that nominating some uri in a naming system will result in a value set being expanded</p>",
        "id": 182518369,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575425792
    },
    {
        "content": "<p>The NamingSystem is unnecessary.  It won't help the value set be expanded.  But the failure to recognize the system when trying to expand the value set shouldn't be an IG error, just a warning.</p>",
        "id": 182518588,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575426003
    },
    {
        "content": "<p>Only exception would be if the code system canonical had an HL7 base</p>",
        "id": 182518603,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575426022
    },
    {
        "content": "<p>this assumes that the IGPublisher can magically determine which errors you think are only a warning</p>",
        "id": 182518701,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575426156
    },
    {
        "content": "<p>If the IGPublisher doesn't know if something is an error, it raises a warning.  Authors need to review the warnings and either suppress them (if they know they're not a problem) or fix them.</p>",
        "id": 182518743,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575426229
    },
    {
        "content": "<p>If it raises an error, the only option is to fix the problem - and there's nothing to fix here.</p>",
        "id": 182518793,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575426256
    },
    {
        "content": "<p>To back up a step... We want to use the NCPDP code system in the IG, but it's licensed. My understanding was that we can make the code system known within the IG by using a NamingSystem. Where I'm sensing I went off track was that I thought I could then bind elements to a ValueSet that refers to the licensed code system. </p>\n<p>I know that that wouldn't enable systematic validation of element values, but thought it would provide value in the documentation</p>",
        "id": 182518908,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1575426420
    },
    {
        "content": "<p>In terms of the goals here, what does it mean to \"use [NCPDP]... In the IG\"? Does it mean reproducing a whole bunch of NCPDP content, or just referencing it? And what specific content?) How will this impact the usability of the guide itself?</p>",
        "id": 182519005,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1575426539
    },
    {
        "content": "<p>sure that provides value, it's just orthogonal to this problem</p>",
        "id": 182519013,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575426547
    },
    {
        "content": "<blockquote>\n<p>If the IGPublisher doesn't know if something is an error, it raises a warning. </p>\n</blockquote>\n<p>No, it calls it it an error. I'm really mystified why this is suddenly a big deal. It's not like this is the first time it's happened</p>",
        "id": 182519031,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575426589
    },
    {
        "content": "<p>Are we saying that US developers will need to independently seek a license for this content in order to support this IG?</p>",
        "id": 182519102,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1575426626
    },
    {
        "content": "<p>for the NCPDP part, yes</p>",
        "id": 182519118,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575426648
    },
    {
        "content": "<p>Grahame: How I thought that relates to this problem is that the publishing process could know that the underlying code system was defined in a NamingSystem, and use that knowledge to suppress the error</p>",
        "id": 182519129,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1575426663
    },
    {
        "content": "<p>Hmm, and is that an essential part of the guide? How much NCPDP content are we depending on?</p>",
        "id": 182519141,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1575426686
    },
    {
        "content": "<p>the IGPublisher simply knows that it went to expand the value set, and it got an error back with an OperationOutcome, which it renders as text along with the note that it go an error.</p>",
        "id": 182519192,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575426732
    },
    {
        "content": "<p>Josh: The reject code set is one that the PBMs will likely want to keep... since their systems use it today and it has a lot of values (and would be the most work to swap out). I've been hoping for some feedback from that side, but we haven't got it yet</p>",
        "id": 182519273,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1575426856
    },
    {
        "content": "<p>These are reasons for rejecting a query?</p>",
        "id": 182519310,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1575426942
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Do you think we should fail to publish IGs that include valuesets that the Tx server can't expand?  Because our expectation right now is zero errors unless they're tooling issues that haven't been fixed yet.</p>",
        "id": 182519366,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575426975
    },
    {
        "content": "<p>This, to me, is clearly not an error in the IG - so we shouldn't be treating it as such.</p>",
        "id": 182519373,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575427010
    },
    {
        "content": "<p>actually, our expectation is that we review the errors. We've published several IG with this error on the grounds that we are ok with it. Of course we're not going to fail to publish it</p>",
        "id": 182519398,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575427054
    },
    {
        "content": "<p>Josh: Yes. We could conceivably build our own set... which I'd be open to. It would just increase the implementation work on the PBM side if they're leveraging their claim backend (which I believe most will)</p>",
        "id": 182519553,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1575427274
    },
    {
        "content": "<p>I'm wondering if we could away with just two or three high level reasons. I don't have access to NCPDP to know what kinds of things are in there now...</p>",
        "id": 182519570,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1575427322
    },
    {
        "content": "<p>(apologies if this is a totally naive question; I am naive to the domain :-))</p>",
        "id": 182519619,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1575427348
    },
    {
        "content": "<p>Josh: Reasonable questions... I've just gotten used to trying to make things as easy as possible for the payers/PBMs in order to reduce barriers for them. But to your last point, if we could make the mapping from the full NCPDP set to our IGs errors straightforward, that would probably work fine for them</p>",
        "id": 182519744,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1575427514
    },
    {
        "content": "<p>Thanks Lloyd, Grahame. I'm gathering that I can suppress this particular IG publishing error...</p>",
        "id": 182519813,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1575427597
    },
    {
        "content": "<p>yes</p>",
        "id": 182519818,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575427611
    },
    {
        "content": "<p>Thanks again everyone</p>",
        "id": 182519833,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1575427644
    },
    {
        "content": "<p>No.  You can't suppress errors.  You can only suppress warnings.  (Which is why I'm arguing w/ <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> :) )</p>",
        "id": 182519974,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575427835
    },
    {
        "content": "<p>Only exception is broken links.</p>",
        "id": 182519978,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575427848
    },
    {
        "content": "<p>well, don't suppress it then</p>",
        "id": 182520050,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575427985
    },
    {
        "content": "<p>Similar need is happening around ISO vocabulary... I am with Lloyd that failure to expand the vocabulary, which is properly defined with a codeSystem system, should be a warning not a error.  I don't think this is just an IG problem, as I need to put two ISO vocabularies into AuditEvent and Provenance because the ISO vocabularies are used globally, but currently can't because ISO is not giving HL7 rights to do such. Thus these environments are forced to map to the vocabulary we can use in FHIR core. Thus making FHIR harder to use, not easier to use.</p>",
        "id": 182560968,
        "sender_full_name": "John Moehrke",
        "timestamp": 1575470414
    },
    {
        "content": "<p>I don't follow the logic here at all</p>",
        "id": 182575063,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575478637
    },
    {
        "content": "<p>Pointing to external code systems that the terminology server can't expand will be an increasingly common thing.  It should not manifest in the QA as an error - because it's not.</p>",
        "id": 182581717,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575482630
    },
    {
        "content": "<p>The logic I didn't follow was John's logic.</p>",
        "id": 182582545,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575483094
    },
    {
        "content": "<p>I follow your logic just fine. I just don't agree or don't know how to magic things to the state you want</p>",
        "id": 182582623,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575483125
    },
    {
        "content": "<p>Don't see how magic is required.  In the IGPublisher, a failure of the expand operation should be captured as a warning.  In situations like this, where the problem is due to inability to find an external terminology we wouldn't expect to be found, the warning can be added to the suppress list.  If it's a temporary thing (e.g. tx server misbehaving) then we leave it as a warning expecting it to soon go away.  If it's something that should have expanded, we debug and figure out why it failed.  When the FMG reviews balloting and publication requests, we look at the QA - including suppressed messages in making the determination of whether to allow the content to move forward.</p>\n<p>I don't see any magic?</p>",
        "id": 182583480,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575483610
    },
    {
        "content": "<p>there are multiple reasons why a value set might fail to expand. Unknown code system is one, as is transient errors. but mostly they are errors in the value set definition</p>",
        "id": 182583594,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575483677
    },
    {
        "content": "<p>I am not going to call errors in the value set definition a warning</p>",
        "id": 182583637,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575483713
    },
    {
        "content": "<p>Warnings are possible errors that require human review.  Some failures will be true errors.  Some won't.  Raise them all as warnings and allow the humans to fix the ones that are true errors and suppress the ones that aren't.</p>",
        "id": 182584847,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575484380
    },
    {
        "content": "<p>Warnings are possible errors that require human review.  Some failures will be true errors.  Some won't.  Raise them all as warnings and allow the humans to fix the ones that are true errors and suppress the ones that aren't.</p>",
        "id": 182600915,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575494479
    },
    {
        "content": "<p>that's a fantasy. warnings are ignored</p>",
        "id": 182601670,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575494963
    },
    {
        "content": "<p>Warnings are <em>not</em> ignored by the FMG - which is the governance that applies here</p>",
        "id": 182609639,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575500415
    },
    {
        "content": "<p>(We just demonstrated that by rejecting a publication request for an IG that contained resolvable warnings)</p>",
        "id": 182609671,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575500443
    },
    {
        "content": "<p>Anything that's not fatal is ignored in the core publisher because there's no ramifications to ignoring them</p>",
        "id": 182609706,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575500471
    },
    {
        "content": "<p>And we turn stuff that should be errors into warnings there because we can't afford for the build to fail.</p>",
        "id": 182609743,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575500499
    },
    {
        "content": "<p>But the dynamics in that space are completely different from the IG publisher</p>",
        "id": 182609835,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575500556
    },
    {
        "content": "<p>The build does not fail. FMG does not look at all guides - in fact, a minority</p>",
        "id": 182610277,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575500905
    },
    {
        "content": "<p>Right - but the ones that the FMG doesn't look at, there's no penalty for errors or warnings, so it makes no difference.</p>",
        "id": 182610442,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575501034
    },
    {
        "content": "<p>Either someone's going to look at the QA and deal with it, or they're not.  Flagging things as errors that aren't is just going to make those who do look less trustful of the issues raised</p>",
        "id": 182610603,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575501165
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> . We started getting a bunch of new broken link errors in our IG after the IG Publisher was updated late Sunday night. I see in the commiter notification thread that others are getting these too. Prior to the updated publisher, we weren't getting any broken links</p>\n<p><em>The link 'http://hl7.org/fhir/R4/\"element-definitions.html#Element.id' for \"id\" cannot be resolved</em>  <br>\nNote the errant quote character after ...R4/   </p>\n<p>It's occurring only in the StructureDefinition page tree table for two elements in (id and extension) on four of our resources. (example: StructureDefinition-carin-rtpbc-coverage.html#/html/head/link/body/div/div/div/div/div/div/hr/div/div/div/div/table/tr/td/a at Line 475, column 903)</p>\n<p>If you happen to be familar with this, I'd appreciate any info on how to debug this... or any info if its the publisher and not our IG</p>\n<p>If not, where would be the right place for me to post something or otherwise get more info?</p>\n<p>Thanks!</p>",
        "id": 183091521,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1576005184
    },
    {
        "content": "<p>It's not tied to the template.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>, I  can't see where in the publisher code this is coming from</p>",
        "id": 183091763,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1576005360
    },
    {
        "content": "<p>sigh. that's eclipse trying to be clever on me. fixed next release</p>",
        "id": 183100498,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576010763
    },
    {
        "content": "<p>Thanks Grahame, Lloyd</p>",
        "id": 183101120,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1576011178
    },
    {
        "content": "<p>From today's fmg call, there are three outstanding build errors that need to be fixed if the guide is going to continue on to ballot:</p>\n<p>1.  need to get rid of the lower of the two yellow boxes</p>\n<ol start=\"2\">\n<li>need to update the hl7 logo, and</li>\n<li>need to fix the footer</li>\n</ol>",
        "id": 183792929,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1576705053
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"238597\">@Frank McKinney</span> FYI</p>",
        "id": 183792940,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1576705067
    },
    {
        "content": "<p>(these can be fixed independently or by switching to the standard template.)</p>",
        "id": 183793007,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1576705092
    },
    {
        "content": "<p>Thanks for the heads up <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> . I'll make the fixes</p>",
        "id": 183793198,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1576705256
    },
    {
        "content": "<p>note: switching to the standard template is probably not such a good idea to do at the last minute</p>",
        "id": 183793204,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576705263
    },
    {
        "content": "<p>Great. (<span class=\"user-mention\" data-user-id=\"232952\">@Pooja Babbrah</span> joined the fmg call just now, FYI.)</p>",
        "id": 183793264,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1576705311
    },
    {
        "content": "<p>any advice on what we can do to fix these errors if we don't switch to the new template? <span class=\"user-mention\" data-user-id=\"238597\">@Frank McKinney</span> <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 183793872,
        "sender_full_name": "Pooja Babbrah",
        "timestamp": 1576705706
    },
    {
        "content": "<p>Hi Pooja. I think I can figure these out... I'll look at it this afternoon</p>",
        "id": 183794305,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1576706002
    },
    {
        "content": "<p>I've made the adjustments identified in the FMG meeting today. If folks could take a look to confirm I covered the issues, that would be great.</p>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> :  Three unrelated errors arose with the current IG publisher (v1.0.27) that don't show up with v1.0.26...</p>\n<p><em>/scratch/ig-build-temp-L0Z9JL/repo/source/resources/structuredefinition/carin-rtpbc-request-claim.xml</em><br>\n<em>Path   Severity    Message</em></p>\n<ul>\n<li><em>Claim.careTeam.sequence     error    The fixed value has type 'integer' which is not valid (valid type: [positiveInt])</em></li>\n<li><em>Claim.insurance.sequence   error The fixed value has type 'integer' which is not valid (valid type: [positiveInt])</em></li>\n<li><em>Claim.item.sequence    error The fixed value has type 'integer' which is not valid (valid type: [positiveInt])</em></li>\n</ul>\n<p>Here is one of the element definitions that are now causing an error. I believe the error is pointing to the fixed value below... which I think is correctly specified as <strong>fixedPositiveInt</strong>...</p>\n<p><em>&lt;element id=\"<strong>Claim.careTeam.sequence</strong>\"&gt;</em><br>\n<em>&lt;path value=\"Claim.careTeam.sequence\" /&gt;</em><br>\n<strong><em>&lt;fixedPositiveInt value=\"1\" /&gt;</em></strong><br>\n<em>&lt;mustSupport value=\"true\" /&gt;</em><br>\n<em>&lt;/element&gt;</em></p>\n<p>Hoping you could take a look and let me know if I have a mistake I'm not seeing, or if the publisher might have an issue<br>\nThanks</p>",
        "id": 183816905,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1576731871
    },
    {
        "content": "<p>yes it should be fixedPositiveInt</p>",
        "id": 183816931,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576731912
    },
    {
        "content": "<p>Thanks Grahame... that's how it's defined in the build that has the errors</p>",
        "id": 183817507,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1576732637
    },
    {
        "content": "<p>which IG is this? not carin-bb?</p>",
        "id": 183817671,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576732836
    },
    {
        "content": "<p>No, it's carin-rtpbc</p>",
        "id": 183817860,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1576733167
    },
    {
        "content": "<p>ok I'll look into it</p>",
        "id": 183817874,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576733241
    },
    {
        "content": "<p>Thanks again</p>",
        "id": 183817878,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1576733258
    },
    {
        "content": "<p>wooah. that's a version conversion error. I'll release a fix shortly</p>",
        "id": 183819930,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576736553
    },
    {
        "content": "<p>Republished using the updated IG Publisher (thanks again Grahame)</p>",
        "id": 183861955,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1576773217
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> , <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> . I think I've made all the adjustments the FMG identified yesterday. If you could confirm, that would be great. Thanks!</p>",
        "id": 183865910,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1576776042
    },
    {
        "content": "<p>Only thing I see left is this:<br>\nHistory Page 'null' is wrong (ig.json#paths/history) - must be '<a href=\"http://hl7.org/fhir/us/carin-rtpbc/history.html\" target=\"_blank\" title=\"http://hl7.org/fhir/us/carin-rtpbc/history.html\">http://hl7.org/fhir/us/carin-rtpbc/history.html</a>' or '<a href=\"http://hl7.org/fhir/us/carin-rtpbc/history.cfml\" target=\"_blank\" title=\"http://hl7.org/fhir/us/carin-rtpbc/history.cfml\">http://hl7.org/fhir/us/carin-rtpbc/history.cfml</a>'</p>\n<p>I <em>think</em> this is just complaining about the fact that you've got \"www.\" in front of <a href=\"http://hl7.org\" target=\"_blank\" title=\"http://hl7.org\">hl7.org</a> in your canonical URL.</p>",
        "id": 183869365,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1576778413
    },
    {
        "content": "<p>Thanks Lloyd. My ig.json was missing the paths/history reference entirely. Fixed now</p>",
        "id": 183871574,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1576780085
    },
    {
        "content": "<p>actually, it should be .html not .cfml now</p>",
        "id": 183871675,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576780197
    },
    {
        "content": "<p>Thx. Just changed to .html</p>",
        "id": 183872644,
        "sender_full_name": "Frank McKinney",
        "timestamp": 1576780819
    }
]