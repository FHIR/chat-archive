[
    {
        "content": "<p>Tracker <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23937\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23937\">GF#23937</a> suggests the dateOp parameters need to be documented. The operation is expected to transform from the string representation of a date/time to a date/time-value. Discussion on FHIR-I today raised the question of whether there are some existing patterns we could use to inform this. Specifically, FHIRPath documents date/time formatting patterns that it uses for the toDateTime, toDate, toTime, and toString functions: <a href=\"http://build.fhir.org/ig/HL7/FHIRPath/branches/master/N1/#conventions\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/FHIRPath/branches/master/N1/#conventions\">http://build.fhir.org/ig/HL7/FHIRPath/branches/master/N1/#conventions</a></p>",
        "id": 178689211,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1571686257
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193430\">@Alexander Zautke</span></p>",
        "id": 178689342,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1571686346
    },
    {
        "content": "<p>I don't mind using FHIRPath in this case.  It would look like the following, right? <code>src.element as dateSrc -&gt; tgt.dateTgt = evaluate(dateSrc, \"'2019-10-28'.toDate()\")</code>. We could make it shorter by using the shorthand syntax for evaluate here: <code>src.element -&gt; tgt.dateTgt = (\"'2019-10-28'.toDate()\")</code></p>",
        "id": 179222670,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1572262379
    },
    {
        "content": "<p>Related question: The description of the evaluate function in the mapping language says that 'it must start with a reference to one of the defined variables' if the shorthand syntax is used. Does this sentence imply that you can't begin the statement with a constant as in the example above?</p>",
        "id": 179227008,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1572266858
    },
    {
        "content": "<p>Any advice <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ?</p>",
        "id": 179467087,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1572462957
    },
    {
        "content": "<p>Plan (from FMG call) is to use this thread to make a list of the various things we may want to do with date.  Then we can evaluate which of those we can do with FHIRPath vs. mapping language vs. what might want changes to one or the other or both.</p>",
        "id": 183588337,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1576528862
    },
    {
        "content": "<p>known requirements for dates+times in the mapping language:</p>\n<ul>\n<li>initialise a target element with a fixed date or with [now]</li>\n<li>specify an alternative string format for either source or target</li>\n<li>allow conflating separate date/time elements, or splitting to separate date/time fields</li>\n<li>switch between local and UTC (in either direction)</li>\n<li>convert a date/time + duration to a new date time, or calculate a duration between two dates (v3 IVL)</li>\n<li>specify a running century window for dates with YY not YYYY ?</li>\n</ul>",
        "id": 183588953,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576529290
    },
    {
        "content": "<p>CQL defines <a href=\"https://cql.hl7.org/09-b-cqlreference.html#duration\" target=\"_blank\" title=\"https://cql.hl7.org/09-b-cqlreference.html#duration\">duration</a> and <a href=\"https://cql.hl7.org/09-b-cqlreference.html#difference\" target=\"_blank\" title=\"https://cql.hl7.org/09-b-cqlreference.html#difference\">difference</a> to support date/time duration calculations at a given precision.</p>",
        "id": 183589480,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1576529670
    },
    {
        "content": "<p>do you want to bring other requirements suggested by the CQL semantics?</p>",
        "id": 183589644,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576529803
    },
    {
        "content": "<p>Yes, CQL also defines <a href=\"https://cql.hl7.org/09-b-cqlreference.html#datetime-component-from\" target=\"_blank\" title=\"https://cql.hl7.org/09-b-cqlreference.html#datetime-component-from\">date/time component extraction</a></p>",
        "id": 183592637,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1576531655
    },
    {
        "content": "<p><a href=\"https://cql.hl7.org/09-b-cqlreference.html#date-1\" target=\"_blank\" title=\"https://cql.hl7.org/09-b-cqlreference.html#date-1\">Date</a>, <a href=\"https://cql.hl7.org/09-b-cqlreference.html#time-1\" target=\"_blank\" title=\"https://cql.hl7.org/09-b-cqlreference.html#time-1\">Time</a>, and <a href=\"https://cql.hl7.org/09-b-cqlreference.html#datetime-1\" target=\"_blank\" title=\"https://cql.hl7.org/09-b-cqlreference.html#datetime-1\">DateTime</a> selectors</p>",
        "id": 183592729,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1576531716
    },
    {
        "content": "<p>And precision-based comparison of date/time values (e.g. comparing two date/time values to the day, even though they may be specified further)</p>",
        "id": 183592933,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1576531861
    },
    {
        "content": "<p>and these things are relevant to the transformation problem?</p>",
        "id": 183592973,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576531881
    },
    {
        "content": "<p>date/time component extraction is \"splitting to separate date/time fields\" above</p>",
        "id": 183593365,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1576532146
    },
    {
        "content": "<p>Date, Time, and DateTime selectors is \"initialise a target element with a fixed date\"</p>",
        "id": 183593439,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1576532169
    },
    {
        "content": "<p>I'm not sure what's meant by \"allow conflating separate date/time elements\"</p>",
        "id": 183593462,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1576532183
    },
    {
        "content": "<p>Precision-based comparison, I'm not sure, we've found it to be indispensable in quality improvement, so I imagine it would be applicable.</p>",
        "id": 183593588,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1576532267
    },
    {
        "content": "<p>source has 2 elements, date and time. Target has one, which is a dateTime (or vice versa)</p>",
        "id": 183593679,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576532309
    },
    {
        "content": "<p>Ah, gotcha</p>",
        "id": 183593930,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1576532469
    },
    {
        "content": "<p>While working on ccda mappings we (Firely) needed an implementation of the dateOp function. We implemented three overloads:</p>\n<ol>\n<li>\n<p>dateOp(string input, string datetimeType) <br>\nwith 'input' in a valid partial datetime format; where datetimeType is either 'Date' or 'DateTime', turning input into a FHIR Date or FHIR DateTime</p>\n</li>\n<li>\n<p>dateOp(string input, string inputFormat, string datetimeType)<br>\nas above, but inputFormat allows you to specify the format of the input so it can be parsed into as FHIR Date / DateTime. So the input need not be a valid partial datetime.</p>\n</li>\n<li>\n<p>dateOp(string input, string inputFormat, string outputFormat, string type)<br>\nallows you to specify the format in which to write the output and 'type' is the datatype you want returned (could als be a custom datatype, defined by a Logical Model).</p>\n</li>\n</ol>\n<p>For input/outputformats we used the formats that .NET recognizes (<a href=\"https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings\" target=\"_blank\" title=\"https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings\">https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-date-and-time-format-strings</a>). That is a superset of the informal format strings suggested in FHIRPath.</p>",
        "id": 189488727,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1583154326
    },
    {
        "content": "<p>FHIR-I is trying to move towards a resolution of this issue.<br>\nTaking the requirements into from <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> into account, we could have the following solutions:</p>\n<ul>\n<li>\n<p>initialise a target element with a fixed date or with [now]. This can be solved with FHIRPath. <code>src -&gt; tgt.element = (\"now()\")</code></p>\n</li>\n<li>\n<p>specify an alternative string format for either source or target: Any ideas on how to come to an agreement which format strings to use here? Do we think this should be solved in FHIRPath?</p>\n</li>\n<li>\n<p>allow conflating separate date/time elements, or splitting to separate date/time fields. With the addition of string manipulation in FHIRPath, this seems to be solved as well. See <a href=\"http://jira.hl7.org/browse/FHIR-27757\">FHIR#27757</a>.</p>\n</li>\n<li>\n<p>switch between local and UTC (in either direction). Should be part of the format strings.</p>\n</li>\n<li>\n<p>convert a date/time + duration to a new date time, or calculate a duration between two dates. Can this be done with date math logic in FHIRPath?</p>\n</li>\n<li>\n<p>specify a running century window for dates with YY not YYYY ?. Format string issue as above.</p>\n</li>\n</ul>",
        "id": 269083332,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1643019147
    },
    {
        "content": "<p>My proposal would be that we add the the overloads as outlined by <span class=\"user-mention\" data-user-id=\"191757\">@Christiaan Knaap</span> above. Should we leave the format strings up to the implementation?</p>",
        "id": 269083583,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1643019307
    },
    {
        "content": "<p>Local/UTC conversions - that sounds like fun and danger...</p>",
        "id": 269186481,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1643066097
    }
]