[
    {
        "content": "<p>Pain points from the HL7 FHIR Connectathon this weekend:</p>\n<ul>\n<li>Hard to subscribe to exactly what you want.<ul>\n<li>Knowing when something stops meeting your criteria (issue with expressivity)</li>\n</ul>\n</li>\n<li>Systems are broken down into topics and subscriptions; we want clear separation between those. <ul>\n<li>One topic can have multiple subscriptions.</li>\n<li>Topics have been handled thus far as a Subscription linked to an EventDefinition</li>\n<li>Good syntax and a framework will be better for R5 than what we have today.</li>\n</ul>\n</li>\n</ul>",
        "id": 165161111,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557320976
    },
    {
        "content": "<p>Josh has a proposal to refactor FHIR subscriptions and test it out at the HL7 FHIR Connectathon before this fall's WGM.<br>\n<a href=\"https://docs.google.com/document/d/1rjOI49M-PBVDT7DpLT9LolV4e3qNU1jZbBKdxTwtRE8/edit\" target=\"_blank\" title=\"https://docs.google.com/document/d/1rjOI49M-PBVDT7DpLT9LolV4e3qNU1jZbBKdxTwtRE8/edit\">https://docs.google.com/document/d/1rjOI49M-PBVDT7DpLT9LolV4e3qNU1jZbBKdxTwtRE8/edit</a></p>",
        "id": 165161381,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557321149
    },
    {
        "content": "<p>This won't use lots of extensions because there's a \"developer ergonomics bias\" against complicated structures like that.</p>",
        "id": 165161409,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557321178
    },
    {
        "content": "<p>We're looking at examples of subscription mechanisms that have topics with filters.</p>",
        "id": 165161523,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557321254
    },
    {
        "content": "<p>A trigger has:</p>\n<ul>\n<li>a human readable description</li>\n<li>a computable definition<ul>\n<li>native-FHIR systems (like HAPI) can use this </li>\n<li>fa√ßade servers will have to write their own logic</li>\n</ul>\n</li>\n<li>what resources are subscription candidates for this topic</li>\n</ul>",
        "id": 165161697,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557321398
    },
    {
        "content": "<p>A topic has a list of properties on which that topic can be filtered</p>\n<ul>\n<li>almost all will be FHIR search criteria</li>\n<li>not all FHIR search criteria will be filters</li>\n</ul>",
        "id": 165161829,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557321522
    },
    {
        "content": "<p>Once you create a topic, nothing happens until there's a subscription to that topic.</p>",
        "id": 165162137,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557321764
    },
    {
        "content": "<p>Topics can be server specific.  If there are widely defined topics, a server will specify which of those it will support.</p>",
        "id": 165162190,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557321805
    },
    {
        "content": "<p><span aria-label=\"checkbox\" class=\"emoji emoji-2611\" role=\"img\" title=\"checkbox\">:checkbox:</span> <strong>PARKING LOT</strong>: how do we align topics from server to server?</p>",
        "id": 165162303,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557321853
    },
    {
        "content": "<p>When a client wants to subscribe, it creates a subscription on the server.  Much of this is like what we have today.  Differences:</p>\n<ul>\n<li>instead of search criteria, the client specifies the topic to which it wants to subscribe </li>\n<li>it supplies a list of criteria for any filters defined in the topic</li>\n</ul>",
        "id": 165162511,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557321970
    },
    {
        "content": "<p>Topic has \"canFilterBy\" and Subscription has \"filterBy\"</p>",
        "id": 165162520,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557321991
    },
    {
        "content": "<p>(filterBy syntax can look a lot like FHIR search syntax)</p>",
        "id": 165162670,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322092
    },
    {
        "content": "<p>How does a provider get notifications about patients he or she cares about?</p>",
        "id": 165162690,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322111
    },
    {
        "content": "<p>Today you might be able to do something like \"Encounter?patient:_has:Group:patient:_id=my-group\"</p>",
        "id": 165162885,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322234
    },
    {
        "content": "<p>With this proposal, you'd filterBy \"matchType\": \"memberOfGroup\" with \"value\": [\"Group/my-high-risk-patients\"]</p>",
        "id": 165163029,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322330
    },
    {
        "content": "<p><span aria-label=\"white medium square\" class=\"emoji emoji-25fb\" role=\"img\" title=\"white medium square\">:white_medium_square:</span>  <strong>PARKING LOT</strong>: Filter syntax<br>\n<span aria-label=\"checkbox\" class=\"emoji emoji-2611\" role=\"img\" title=\"checkbox\">:checkbox:</span>  <strong>PARKING LOT</strong>: Scheduling use case</p>",
        "id": 165163084,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322385
    },
    {
        "content": "<p>Previously, there was no clear way to learn about something falling out of your search set.</p>",
        "id": 165163169,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322445
    },
    {
        "content": "<p>In the current system, when you have a REST hook channel, you specify a URL that the server treats as a FHIR base.</p>",
        "id": 165163233,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322510
    },
    {
        "content": "<p>In this proposal, the server posts a bundle to that URL.</p>",
        "id": 165163249,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322524
    },
    {
        "content": "<p>A FHIR server can parse the Bundle and use it.  Other clients will know it'll get everything to the same place.</p>",
        "id": 165163275,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322552
    },
    {
        "content": "<p>If a server only wants tobatch up notifications (e.g. twice a minute), it can put more things in the Bundle.</p>",
        "id": 165163358,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322585
    },
    {
        "content": "<p>Bundles can handle deletes.</p>",
        "id": 165163361,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322591
    },
    {
        "content": "<p>A client can say they only want the IDs and not the full resources.</p>",
        "id": 165163386,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322620
    },
    {
        "content": "<p>Some clients want nothing - jsut getting pinged on the endpoint with an empty payload will let them know something happened.</p>",
        "id": 165163420,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322649
    },
    {
        "content": "<p>The last case could be useful if the message is going through somewhere unsecure.</p>",
        "id": 165163507,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322697
    },
    {
        "content": "<p>How does a Bundle do a delete?<br>\n<code>Bundle.entry.request.method=DELETE</code></p>",
        "id": 165163536,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322723
    },
    {
        "content": "<p>This Bundle is the server telling the client, \"This is what you should execute to look like me.\"</p>",
        "id": 165163609,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322793
    },
    {
        "content": "<p>But many clients don't want to look like the server.</p>",
        "id": 165163734,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322876
    },
    {
        "content": "<p>Should this be a transaction bundle or a history bundle?</p>",
        "id": 165163774,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322904
    },
    {
        "content": "<p>A transaction Bundle only allows you to send the request part.</p>",
        "id": 165163845,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322942
    },
    {
        "content": "<p>So history is probably what we want.   (Josh updated his Google doc)</p>",
        "id": 165163860,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557322961
    },
    {
        "content": "<p>How can a server detect deletes?</p>",
        "id": 165163895,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557323005
    },
    {
        "content": "<p>Before: <a href=\"http://Practitioner.org\" target=\"_blank\" title=\"http://Practitioner.org\">Practitioner.org</a> = 123<br>\nAfter: Practitioner.org:not=123</p>",
        "id": 165164148,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557323210
    },
    {
        "content": "<p>But the latter won't work because there's nothing to evaluate.</p>",
        "id": 165164169,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557323223
    },
    {
        "content": "<p>There's no resource to reason about.</p>",
        "id": 165164182,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557323231
    },
    {
        "content": "<p>Even with an implied search criterion of _id being the current context, nothing will ever be true (in FHIRpath) for it.</p>",
        "id": 165164748,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557323595
    },
    {
        "content": "<p>Maybe After: \"$not-found\"</p>",
        "id": 165164762,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557323613
    },
    {
        "content": "<p>?</p>",
        "id": 165164765,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557323615
    },
    {
        "content": "<p>Looks like in addition to Before and After with FHIRpath, we need boolean's of isDeletion and isCreation.</p>",
        "id": 165164886,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557323687
    },
    {
        "content": "<p><span aria-label=\"star\" class=\"emoji emoji-2b50\" role=\"img\" title=\"star\">:star:</span> For later follow up: we need syntax to address detection of deletion and creation in native FHIR servers.</p>",
        "id": 165164965,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557323739
    },
    {
        "content": "<p><strong>Scheduling use case</strong></p>",
        "id": 165165264,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557323966
    },
    {
        "content": "<p>A client wants to know about schedule slots - when it can schedule appointments</p>",
        "id": 165165341,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557324004
    },
    {
        "content": "<p>They're looking at Slots as a proxy for time periods that a Practitioner is available.</p>",
        "id": 165165377,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557324030
    },
    {
        "content": "<p>Subscribe to Slot where Practitioner=123</p>",
        "id": 165165533,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557324165
    },
    {
        "content": "<p>They get an update when the Slot changes</p>",
        "id": 165165544,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557324178
    },
    {
        "content": "<p>The client does a couple of queries.</p>",
        "id": 165165563,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557324195
    },
    {
        "content": "<p>The problem is that there's no Practitioner on Slot.</p>",
        "id": 165165584,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557324217
    },
    {
        "content": "<p>Idea: instead of subscribing to Slot, the client could subscribe to changes in Schedule for Practitioner, but when there's a change the client would requery for Slots for that Practitioner.</p>",
        "id": 165165726,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557324319
    },
    {
        "content": "<p><strong>Canonical references</strong></p>",
        "id": 165165834,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557324411
    },
    {
        "content": "<p>Josh would like an Argonaut IG to point to topics out there somewhere.</p>",
        "id": 165165861,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557324434
    },
    {
        "content": "<p>url - server declares its own canonical url<br>\ninstantiatesUrl - declare alignment with an official topic</p>",
        "id": 165165876,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557324446
    },
    {
        "content": "<p>Should a Subscription.topic be to a shared URL or one specific to the server?</p>",
        "id": 165166375,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557324824
    },
    {
        "content": "<p><span aria-label=\"star\" class=\"emoji emoji-2b50\" role=\"img\" title=\"star\">:star:</span> This remains an open question.</p>",
        "id": 165166481,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557324882
    },
    {
        "content": "<p><strong>Filter Syntax</strong></p>",
        "id": 165166529,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557324928
    },
    {
        "content": "<p>Should we have filters split out into separate JSON elements or combined into comma separated lists?</p>",
        "id": 165166561,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557324960
    },
    {
        "content": "<p>Arbitrary.  The group has a weak preference for JSON, and we'll try that out first, but we're open to considering the other way in the future.</p>",
        "id": 165166722,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557325080
    },
    {
        "content": "<p><strong>Motion</strong><br>\n<span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> moved/Michael Donnelly seconded: </p>\n<ul>\n<li>Use Josh's proposal to<ul>\n<li>draft a new Topic resource</li>\n<li>update the Subscription resource</li>\n<li>make best effort to resolve the outstanding issues (see stars in this Zulip topic)</li>\n<li>get it into the CI build </li>\n</ul>\n</li>\n<li>test this in an HL7 FHIR Connectathon track this September.<br>\nVote: 13/0/0</li>\n</ul>",
        "id": 165166982,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557325269
    },
    {
        "content": "<p><strong>Considering Michele's alternate proposal</strong><br>\n<a href=\"https://github.com/CareEvolution/Public/blob/master/Subscriptions.md\" target=\"_blank\" title=\"https://github.com/CareEvolution/Public/blob/master/Subscriptions.md\">https://github.com/CareEvolution/Public/blob/master/Subscriptions.md</a></p>",
        "id": 165167133,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557325388
    },
    {
        "content": "<p>Use a List for subscriptions.</p>",
        "id": 165167173,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557325417
    },
    {
        "content": "<p>Entries are added to or removed from the List by the server.  (The mechanism for this is up to the server.)</p>",
        "id": 165167248,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557325452
    },
    {
        "content": "<p>I have an alternative proposal: <a href=\"https://github.com/CareEvolution/Public/blob/master/Subscriptions.md\" target=\"_blank\" title=\"https://github.com/CareEvolution/Public/blob/master/Subscriptions.md\">https://github.com/CareEvolution/Public/blob/master/Subscriptions.md</a> (that is backward compatible, so it can be used in existing servers)</p>",
        "id": 165167337,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1557325513
    },
    {
        "content": "<p>There could be a list of \"Admissions in the last 24 hours\"</p>\n<p>Josh: Since the items in the list are patients, the list should be called \"Patients who were admitted in the last 24 hours\".</p>",
        "id": 165167344,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557325519
    },
    {
        "content": "<p>A client can subscribe to the List and get notification of changes to it.</p>",
        "id": 165167442,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557325566
    },
    {
        "content": "<p>In the example of \"patients admitted in the last 24 hours\", the list would be updated when a new patient is admitted or when a patient on that list has been admitted for more than 24 hours.</p>",
        "id": 165167489,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557325600
    },
    {
        "content": "<p>Josh: In my opinion, this doesn't address the core concerns we have including scalability.</p>",
        "id": 165167507,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557325620
    },
    {
        "content": "<p>JM: the list could get longer and longer over time.</p>",
        "id": 165167529,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557325636
    },
    {
        "content": "<p>It works for us - and we have some fairly large deployments</p>",
        "id": 165167583,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1557325682
    },
    {
        "content": "<p>(fairly large = tens of million patients, billion of data points)</p>",
        "id": 165168013,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1557325969
    },
    {
        "content": "<p>Q1 ended.  Notes above aren't my opinions or arguments, they're notes on the discussion that took place at the WGM.</p>",
        "id": 165168063,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557326012
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> you can put as more or little of this as you want into the minutes.</p>",
        "id": 165168096,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1557326036
    },
    {
        "content": "<p>(thanks Michael for 'live-streaming' it)</p>",
        "id": 165168179,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1557326074
    },
    {
        "content": "<p>Thanks a bundle <span class=\"user-mention\" data-user-id=\"191936\">@Michael Donnelly</span> -- This is super helpful for folks who could not join. I've added pretty much all these notes verbatim to the official minutes as well.</p>",
        "id": 165192215,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1557342955
    },
    {
        "content": "<p>I'm not a big fan of using a deletion in a bundle to indicate that the item went out of the search.<br>\nIs this process also to be used to handle actual deletions?<br>\nI would have preferred including the new version of the resource (with whatever details it does have) and include an extension in the bundle entry to indicate that it went out of range. If the resource was excluded for security (or other) issues, there is enough detail to know without the actual resource. Deletion just feels wrong.<br>\nI do like the List idea.</p>",
        "id": 165676702,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1557881995
    },
    {
        "content": "<p>On deletion, just to be clear: if the resource actually <em>was</em> deleted, then an entry with \"DELETE\" makes sense to you <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> ?</p>",
        "id": 165677228,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1557882555
    },
    {
        "content": "<p>It's just for the \"got updated\" case that you're concerned? Because I think updates should be conveyed as <code>\"Bundle.entry.request.method\": \"UPDATE\"</code></p>",
        "id": 165677443,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1557882752
    },
    {
        "content": "<p>yes a real deletion is fine. Its for cases where the filter was Practitioner.active = true and the record is updated to not be active.<br>\nIts still there, but isn't wanted to be included anymore. Don't want to delete it, as there is content referencing it.<br>\nJust need to know that this specific ID went out of range, and I should also mark it.<br>\nThis would be very useful to have the new data to update in-place, then I can see why, and choose what to do with my own system.</p>",
        "id": 165677686,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1557883028
    },
    {
        "content": "<p>Agreed. Is that inconsistent with what we wrote, or just unclear?</p>",
        "id": 165677980,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1557883443
    },
    {
        "content": "<p>Wasn't clear in the discussion above, I'll re-read the updated content.</p>",
        "id": 165678859,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1557884608
    }
]