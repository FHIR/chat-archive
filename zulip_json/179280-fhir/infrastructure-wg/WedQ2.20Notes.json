[
    {
        "content": "<h2><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22770\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22770\">GF#22770</a> Server response when a client tries to create a duplicate patient</h2>",
        "id": 176013799,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568819148
    },
    {
        "content": "<p>Current behavior in epic: when a client tries to POST a patient that matches an existing record: acts like it was created (201)</p>\n<ul>\n<li>(-) philosophically impure</li>\n<li>(-) may be differences between the supplied data, or imperfect matches</li>\n<li>(-) may lose desired changes (... but ignoring some data on POST is generally allowed)</li>\n<li>(+) a naive client can \"just work\"</li>\n</ul>",
        "id": 176014076,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568819328
    },
    {
        "content": "<p>Cerner has somewhat similar behavior not for Patient, but for Allergies (return a 201 on POST, with a location header pointing to a pre-existing AllergyIntolerance record).</p>",
        "id": 176014221,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568819417
    },
    {
        "content": "<p>Other kinds of special handling for <code>create</code> include for patient-entered data, which might need to be reviewed by a clinician first.</p>",
        "id": 176014343,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568819515
    },
    {
        "content": "<p>Clients might create duplicate records, but the server may have better / more accurate / more consistent logic for matching.</p>",
        "id": 176014834,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568819826
    },
    {
        "content": "<p>Functionally, it's convenient for servers/clients to implement create as \"create or get\".</p>",
        "id": 176015006,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568819946
    },
    {
        "content": "<p>Passed: </p>\n<blockquote>\n<p>Danielle Friend/Dennis Patterson: 9-0-1</p>\n</blockquote>",
        "id": 176018942,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568822597
    },
    {
        "content": "<h1><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23819\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23819\">GF#23819</a> create a set of common timezones</h1>",
        "id": 176019051,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568822659
    },
    {
        "content": "<p>Eric: Clients have difficulty displaying appropriate timezones; they might learn offsets without knowing the location in which events occurred.</p>",
        "id": 176019138,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568822734
    },
    {
        "content": "<ul>\n<li>One issue is user display: how to pick the right time zone (can't do so if you only know with an <code>instant</code> or <code>dateTime</code> is an offset)</li>\n</ul>",
        "id": 176019239,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568822803
    },
    {
        "content": "<ul>\n<li>This is important for showing historical data about care, e.g. when care was provisioned somewhere else from where the user is viewing information</li>\n</ul>",
        "id": 176019314,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568822870
    },
    {
        "content": "<ul>\n<li>An existing \"<a href=\"http://build.fhir.org/extension-tz-code.html\" target=\"_blank\" title=\"http://build.fhir.org/extension-tz-code.html\">http://build.fhir.org/extension-tz-code.html</a>\"</li>\n</ul>",
        "id": 176019385,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1568822915
    },
    {
        "content": "<p>Sorry to go back to something that you've already voted on but <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22770\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22770\">GF#22770</a> if you updated rather than created, shouldn't  you return a 200 rather than a 201?</p>",
        "id": 176028217,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1568828941
    },
    {
        "content": "<p>Philosophically, yes.</p>",
        "id": 176028386,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568829036
    },
    {
        "content": "<p>The reasoning was to make it as easy as possible for clients.</p>",
        "id": 176028417,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568829060
    },
    {
        "content": "<p>If a lightweight client needs there to be a patient so it can schedule an appointment or file an observation, it likely doesn't care whether it got a new client or an existing one.</p>",
        "id": 176028465,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568829110
    },
    {
        "content": "<p>We discussed letting clients use <code>Prefer: handling=strict</code> to indicate that they didn't want the server to do this;</p>",
        "id": 176028557,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568829155
    },
    {
        "content": "<p>and I'd support a proposal to add that to the http page.</p>",
        "id": 176028573,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568829170
    },
    {
        "content": "<p>Wasn't suggesting changing to prevent it, just to get a more accurate return code.</p>",
        "id": 176028603,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1568829187
    },
    {
        "content": "<p>Want me to log another tracker for this? Or can I leave you with it?</p>",
        "id": 176028625,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1568829214
    },
    {
        "content": "<p>How likely is it (honest question - I don't know) that a client would expect a 201, get a 200, and react unpredictably?</p>",
        "id": 176028707,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1568829253
    },
    {
        "content": "<p>Highly unlikely I would think.</p>",
        "id": 176035667,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1568833703
    },
    {
        "content": "<p>The dotnet client would behave the same, you'd have to go looking in the status result to see any difference.</p>",
        "id": 176035698,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1568833741
    }
]