[
    {
        "content": "<p>This is a continuation of  <a href=\"#narrow/stream/179202-terminology/topic/multiple.20bindings\" title=\"#narrow/stream/179202-terminology/topic/multiple.20bindings\">https://chat.fhir.org/#narrow/stream/179202-terminology/topic/multiple.20bindings</a>. Should we define multiple bindings?</p>",
        "id": 179382518,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572388564
    },
    {
        "content": "<p>And also it's in reference to <a href=\"#narrow/stream/179175-argonaut/topic/US.20Core.3AExtensible.20and.20Required.20bindings.20for.20historical.20data\" title=\"#narrow/stream/179175-argonaut/topic/US.20Core.3AExtensible.20and.20Required.20bindings.20for.20historical.20data\">https://chat.fhir.org/#narrow/stream/179175-argonaut/topic/US.20Core.3AExtensible.20and.20Required.20bindings.20for.20historical.20data</a></p>",
        "id": 179382549,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572388599
    },
    {
        "content": "<p>the idea is that while we have a single binding: the set of codes from which one of the codings must come for conformance purposes, we could add the ability to have other bindings:</p>\n<p>- min (not happy with the name)<br>\n- max (not entirely happy with the name)<br>\n- common-subset (usually for if required is intensional)<br>\n- regulated (a subset with a date, required for data created from that date)<br>\n- additional (means that the translations must include something from this subset)<br>\n- language/jurisdiction variant (use this for this context, must be a subset / sameset)</p>",
        "id": 179383497,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572389185
    },
    {
        "content": "<p>I don't think that the notion of 'regulated' being tied to just a date is going to have sufficient nuance.  Regulation can apply to how data is sourced, when it was sourced, how it was transmitted, where it's being shared to and various other factors.</p>",
        "id": 179396904,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572401867
    },
    {
        "content": "<p>even the date part is tricky in practice</p>",
        "id": 179399156,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572405420
    },
    {
        "content": "<p>What is the advantage of a proliferation of bindings vs a set of origin/exception codes for the existing bindings either as an extensions or a new element on coding?  e.g. this code is historical this one is regulatory and this one is payor, and this one is crap which we inherited from the source.</p>",
        "id": 179493546,
        "sender_full_name": "Eric Haas",
        "timestamp": 1572484625
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> <br>\nWhere do you want the complexity? More distinct types of binding, each of which behaves the same for all instances of coding; or fewer types of binding that have behaviour that depends upon properties of the coding?</p>",
        "id": 179495188,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1572486987
    },
    {
        "content": "<p>that is my question.   What are the advantages shifting it one way or the other?</p>",
        "id": 179497452,
        "sender_full_name": "Eric Haas",
        "timestamp": 1572490500
    },
    {
        "content": "<p>I prefer more types of binding each with a simple semantics. I think that it will reduce unexpected misunderstanding.</p>",
        "id": 179498421,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1572492172
    },
    {
        "content": "<p>The meaning of the current binding types are normative.  They can't be changed and their meaning can't be altered except by  modifier extensions - which wouldn't be a great option.  If we have a need for additional types of conformance expectations for bindings, the cleanest and most logical way to do that is with new binding codes</p>",
        "id": 179498543,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572492393
    },
    {
        "content": "<p>I am not convinced that we are solving a problem or potentially creating new ones.</p>",
        "id": 179546621,
        "sender_full_name": "Eric Haas",
        "timestamp": 1572537964
    },
    {
        "content": "<p>The problem is that specifications are wanting to declare something the current binding types don't allow you to say.  That's the problem we're trying to address.  It's certainly possible that some of the solutions we might consider will introduce new issues.  But the only binding we have that would not result in false \"non-compliance\" determinations for US Core right now would be \"preferred\".  Neither Required nor Extensible do what the implementation space seems to require.  And \"Preferred\" is softer than is wanted for conformance expectations.</p>",
        "id": 179548912,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572539398
    },
    {
        "content": "<p>what is wrong with preferred? is it what we should be using?</p>",
        "id": 179552281,
        "sender_full_name": "John Moehrke",
        "timestamp": 1572541314
    },
    {
        "content": "<p>Preferred is fine if what we want to say is \"it'd be nice if you used this, but there are no conformance expectations at all that anyone will do so\"</p>",
        "id": 179553605,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572542135
    },
    {
        "content": "<p>My impression is that we wanted to say something stronger than that</p>",
        "id": 179553637,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572542159
    },
    {
        "content": "<p>it seems we are tending more toward an understanding that we really mean preferred...  Not clear to me what could possibly between</p>",
        "id": 179553889,
        "sender_full_name": "John Moehrke",
        "timestamp": 1572542284
    },
    {
        "content": "<p>If we were going to do a new \"regulatory\" binding, my recommendation for a definition would be:<br>\n\"There are regulatory expectations around the use of this value set.  Refer to documentation associated with the profile to determine in what circumstances codes must be drawn from this value set\".<br>\nValidator behavior would be to throw a warning if the value set doesn't come from the specified value set.  (I don't think the validator does anything for preferred bindings.)</p>",
        "id": 179554679,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572542736
    },
    {
        "content": "<p>ah, the warning vs none... that is useful, right? Although I would think warnings could be thrown on preferred binding too. That is to say I am struggling with understanding why preferred is not exactly what we are looking for</p>",
        "id": 179569259,
        "sender_full_name": "John Moehrke",
        "timestamp": 1572551423
    },
    {
        "content": "<p>I would expect no warnings to be thrown if the binding was example</p>",
        "id": 179569312,
        "sender_full_name": "John Moehrke",
        "timestamp": 1572551458
    },
    {
        "content": "<p>I think warnings on preferred is a bit over the top.  <em>maybe</em> a best-practice warning?  My take on validator messages is as follows:<br>\n- errors: instance is non-conformant.  No debate/nuance involved.<br>\n- warnings: you may be non-conformant.  Human or other inspection more sophisticated/capable than the validator code can achieve is required to determine<br>\n- best practice: you're fully conformant, but not adhering to recommended/best practice.  (These might not even show up, depending on how the validator is set)<br>\n- information messages: Information about how the validation process was executed, but no relevance to conformance or to what systems must/should do</p>",
        "id": 179569746,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572551728
    },
    {
        "content": "<p>The igPublisher gives an information message when codes are not in the preferred binding.</p>",
        "id": 179587906,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1572566559
    },
    {
        "content": "<p>So:<br>\nFailure on </p>\n<ul>\n<li>required binding gives error</li>\n<li>extensible binding gives warning</li>\n<li>preferred binding gives not best practice</li>\n<li>example binding gives no message</li>\n</ul>\n<p>Not best practice seems a variation on information</p>",
        "id": 179588239,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1572566993
    },
    {
        "content": "<p>Extensible gives one type of warning.  It would be a different warning - and a different type of verification from a \"regulation\" binding. <br>\nNot best practice can be turned off.</p>",
        "id": 179588918,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1572567955
    },
    {
        "content": "<p>And also this one please, if we have time. I do not expect to close this out, but to lay out a process</p>",
        "id": 179899819,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572926386
    },
    {
        "content": "<p>ok decisions after discussion:</p>\n<ul>\n<li>I'll blog about the issues around extensible as a policy practice vs temporal and process dislocations</li>\n<li>we'll prepare a proposal to go to vocabulary for dsicussion</li>\n<li>we'll work up a proposal using a google document</li>\n</ul>",
        "id": 179986534,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1572994214
    },
    {
        "content": "<p>We are running into an analogous issue with reference types.  Constrained types for certification testing creates too tight a constraint for reuse.  Yet allowing all types create a problem for certification.  see this question.   <a href=\"#narrow/stream/179177-conformance/topic/How.20to.20express.20min.20and.20max.20types.20for.20reference\" title=\"#narrow/stream/179177-conformance/topic/How.20to.20express.20min.20and.20max.20types.20for.20reference\">https://chat.fhir.org/#narrow/stream/179177-conformance/topic/How.20to.20express.20min.20and.20max.20types.20for.20reference</a></p>",
        "id": 180098528,
        "sender_full_name": "Eric Haas",
        "timestamp": 1573096184
    }
]