[
    {
        "content": "<p>There's this kind of permathread to the question of resources having identifiers</p>",
        "id": 183886319,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576790327
    },
    {
        "content": "<p>right now, the rules that that, except for some named exceptions, it's a warning if an resource does not have an identifier element. So any resource crossing the FMM 3-&gt;4 boundary gets an identifier. That's kind of ridiculous, really. They should just have them, or not. Not be forced to add them for procedural reasons late in the game.</p>\n<p>And now that reference can be identifier, there's basically an infrastructural reason for resources to have an identifier.</p>\n<p>Let's say we decided to enforce that all DomainResources get an identifier : Identifier [0..*], here's what would change:</p>\n<p>Add Identifier : Identifier [0..*] to:</p>\n<ul>\n<li>AuditEvent</li>\n<li>CapabilityStatement</li>\n<li>CompartmentDefinition</li>\n<li>GraphDefinition</li>\n<li>ImplementationGuide</li>\n<li>Linkage</li>\n<li>MessageHeader</li>\n<li>NamingSystem</li>\n<li>OperationDefinition</li>\n<li>OperationOutcome</li>\n<li>Provenance</li>\n<li>SearchParameter</li>\n<li>SubstanceNucleicAcid</li>\n<li>SubstancePolymer</li>\n<li>SubstanceProtein</li>\n<li>SubstanceReferenceInformation</li>\n<li>SubstanceSourceMaterial</li>\n<li>TerminologyCapabilities</li>\n<li>VerificationResult</li>\n</ul>\n<p>Change identifier from [0..1] to [0..*] in:</p>\n<ul>\n<li>Composition</li>\n<li>ConceptMap</li>\n<li>Ingredient</li>\n<li>ObservationDefinition</li>\n<li>QuestionnaireResponse</li>\n<li>SpecimenDefinition</li>\n<li>SubstanceDefinition</li>\n<li>TestReport</li>\n<li>TestScript</li>\n<li>Bundle (? not an DomainResource, but has identifier [0..1])</li>\n</ul>",
        "id": 183886748,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576790652
    },
    {
        "content": "<p>Not super thrilled with saying \"we put identifier everywhere, even when there's no use-case and when existing systems don't support it just so we can have modelling elegance\"...</p>",
        "id": 183897514,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1576799984
    },
    {
        "content": "<p>that wasn't the use case, though we already do that, just by stealth. The use case is based on Reference.identifier</p>",
        "id": 183902183,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576805735
    },
    {
        "content": "<p>I think that the real question is, why should not have identifier. In that category:</p>\n<ul>\n<li>AuditEvent</li>\n<li>MessageHeader</li>\n</ul>\n<p>But even those, there's reasons to refer to them by identifier rather than a direct link. Maybe the one most unlikely to use identifier is OperationOutcome. The others.... I think that they'd be better with them</p>",
        "id": 183904521,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576809345
    },
    {
        "content": "<p>You're free to think that, but if it's not something there's a current use for, it should be an extension at best.  Reference doesn't have an identifier because <em>everything</em> can be referred to by identifier.  It has it because <em>many</em> things can be referred to that way.  (And several of these resources aren't generally referred to using Reference anyhow.)</p>",
        "id": 183942777,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1576854253
    },
    {
        "content": "<p>I understood that .identifier is different than .id. The Reference.reference is the  place to use the .id. The Reference.identifier is to be used when the thing being referenced does not (yet) have an .id, but does have a business identifier. Thus the only Resources that really need to have a .identifier are those that might have a business identifier outside of FHIR...Said another way, in a perfectly (100%) FHIR world, there would be no .identifier(s). We know that is not realistic, for example  Patient.identifier holds many identifiers that will never be FHIR resources. Hence, .identifier is 'added' to a resource when there is an identified real-world evidence that an .identifier exists.</p>",
        "id": 183944223,
        "sender_full_name": "John Moehrke",
        "timestamp": 1576855174
    },
    {
        "content": "<p>that said... I get that by adding a 0..* .identifier more liberally, that we are not really forcing .identifiers to exist. But I am with Lloyd that this feels like adding an identifier just for modelling elegance.</p>",
        "id": 183944444,
        "sender_full_name": "John Moehrke",
        "timestamp": 1576855306
    },
    {
        "content": "<p>Even in a 100% FHIR world, we are looking at using identifiers in the context of $import to represent resource IDs from a different server. Those are being attached to an extension in meta because they're not part of the content, but I think this calls into question whether a 100% FHIR world would actually have no identifiers.</p>",
        "id": 183948215,
        "sender_full_name": "Paul Church",
        "timestamp": 1576857758
    },
    {
        "content": "<p>well, here's what I think:</p>\n<ul>\n<li>people keep asking about this - implementers do</li>\n<li>Reference.identifier exists because you need to reference resources that exist in potential or on another server that you know it's address</li>\n<li>so that means, resources should have an identifier unless we feel that there's no need to refer to them on an unknown server</li>\n<li>hence my list, AuditEvent and MessageHeader</li>\n</ul>",
        "id": 183969794,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576873410
    },
    {
        "content": "<p>in fact, by that logic, Binary should too</p>",
        "id": 183969812,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576873434
    },
    {
        "content": "<p>No, I agree with Lloyd here.  You are mixing up the logic.  If a resource has no business need for a business identifier, then there is no need to give it one.  How can I reference a resource via identifier if it doesn't have one?  And just giving all resources an identifier element so they can be referenced, doesn't make sense unless you tell me what that resource's business identifier is going to be.</p>",
        "id": 183977135,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576878927
    },
    {
        "content": "<p>\"reference a resource via identifier\" is not a business need?</p>",
        "id": 183977843,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576879448
    },
    {
        "content": "<blockquote>\n<p>what that resource's business identifier is going to be</p>\n</blockquote>\n<p>Whatever people assign it, so it can be referenced</p>",
        "id": 183977861,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576879471
    },
    {
        "content": "<p>I point out that this use case arises not infrequently for system architects - the was a thread on this for binary a week ago in the implementers channel</p>",
        "id": 183977902,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576879513
    },
    {
        "content": "<p>why is an infrastructural architecture requirement  not a business requireement?</p>",
        "id": 183977924,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576879539
    },
    {
        "content": "<p>so you have a resource that has no natural business identifier that you want to reference somehow?  how do you do that?</p>",
        "id": 183978026,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576879609
    },
    {
        "content": "<p>then you give it an id so that you can</p>",
        "id": 183978050,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576879634
    },
    {
        "content": "<p>so you give it a <a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a></p>",
        "id": 183978060,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576879647
    },
    {
        "content": "<p>what's a <strong>natural</strong> business identifier?</p>",
        "id": 183978063,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576879649
    },
    {
        "content": "<p>umm no. <a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a> is not stable</p>",
        "id": 183978075,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576879664
    },
    {
        "content": "<p>Patient's health care number<br>\nHospital's encounter number</p>",
        "id": 183978079,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576879674
    },
    {
        "content": "<p>what makes them \"natural\"?</p>",
        "id": 183978202,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576879802
    },
    {
        "content": "<p>let me step back a bit to try and understand your argument:<br>\nwe have some resources where the FHIR community has agreed that assigning a business identifier to it is not in the 80% mainly (I suspect) because the real world objects do not usually (or ever) have business identifiers assigned to them.  Someone has decided that they want to reference a resource instance, not by it's <a href=\"http://resource.id\" target=\"_blank\" title=\"http://resource.id\">resource.id</a> but by its business identifier.  And one of these resources that they want to reference is of a type that does not have business identifiers.  So they will assign some arbitrary string to it so that they can reference it by identifier rather than referencing it by using that same arbitrary string as its <a href=\"http://resource.id\" target=\"_blank\" title=\"http://resource.id\">resource.id</a>?</p>",
        "id": 183978438,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576880026
    },
    {
        "content": "<p>let me posit a related argument:<br>\nwe have some resources where the FHIR community has agreed that assigning a NAME to it is not in the 80% mainly because the real world objects do not usually or ever have a NAME.  A number of system architects have decided that they want to refer to all resources by NAME, including one of the resources that has a type that does not have a  NAME element.  So we are going to force all resource types to include a NAME element if it doesn't make sense from a business need.</p>",
        "id": 183978649,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576880188
    },
    {
        "content": "<p>if we thought that architects had a valid argument argument there - which I can't imagine - we'd have to consider it.</p>",
        "id": 183978719,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576880280
    },
    {
        "content": "<p>why not use <a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a>... because (a) that is not reliable - it is changed from server to server and (b) we have not made that available as a target for Reference.identifier (because of (a))</p>",
        "id": 183978798,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576880339
    },
    {
        "content": "<p>you missed a resource type in your list: MedicationKnowledge.  It has no identifier because it is describing a kind and having a business identifier makes no sense.  The Pharmacy committee has intentionally not given it an identifier element.</p>",
        "id": 183978810,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576880350
    },
    {
        "content": "<p>I suspect the SubstanceX resources are similar</p>",
        "id": 183978830,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576880383
    },
    {
        "content": "<p>actually, it does have an identifier.</p>",
        "id": 183978882,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576880406
    },
    {
        "content": "<p>and so it should.</p>",
        "id": 183978886,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576880410
    },
    {
        "content": "<p>unless you're going to claim that (a) MedicationKnowledge is only ever represented as FHIR resources (I think not) and (b) there would never be a reason to refer to a MedicationKnowledge resource on another server whose address is presently not known ,perhaps because it has not yet been defined.</p>",
        "id": 183978934,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576880481
    },
    {
        "content": "<p>hmm, I see that it does in the build.  it didn't originally and I'll have to look into why it does.  Because there is no sensical identifier that you could give to a MedicationKnowledge resource.</p>",
        "id": 183978942,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576880490
    },
    {
        "content": "<p>and I don't know why why you think that those are not real requirements and also why you don't think that those are business requirements</p>",
        "id": 183978958,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576880512
    },
    {
        "content": "<p>that's what the MedicationKnowledge.code is for.  That describes what the MedicationKnowledge is about</p>",
        "id": 183978961,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576880515
    },
    {
        "content": "<p>so code is unique? There can only be one statement per code? really?</p>",
        "id": 183979031,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576880548
    },
    {
        "content": "<p>you're saying that the Patient.identifier is unique?  that there can be only one patient instance per identifier?</p>",
        "id": 183979074,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576880589
    },
    {
        "content": "<p>on some systems yes but in general no,, but so what?</p>",
        "id": 183979100,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576880615
    },
    {
        "content": "<p>i'll just echo that back to you - there can be multiple knowledges per code, but so what?</p>",
        "id": 183979158,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576880643
    },
    {
        "content": "<p>within FDB, I use the Medication code to reference all of the knowledge that I have access to about that Medication.  There is no other \"identifier\" for the knowledge</p>",
        "id": 183979203,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576880688
    },
    {
        "content": "<p>so what you are saying is that there's never any need to reference another particular medication knowledge somewhere else, because you can just state the code, and there can be no ambiguity about which instance you are referring to</p>",
        "id": 183979235,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576880729
    },
    {
        "content": "<p>and that's true not just within a single system (FDB) but across all systems</p>",
        "id": 183979257,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576880748
    },
    {
        "content": "<p>whether FHIR or no</p>",
        "id": 183979263,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576880754
    },
    {
        "content": "<p>how do you get that non-ambiguity with Patient.identifier???</p>",
        "id": 183979323,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576880777
    },
    {
        "content": "<p>umm, because Patient identifiers are assigned once and conserved as patient information is copied from system to system however the information is copied</p>",
        "id": 183979386,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576880848
    },
    {
        "content": "<p>How does this &lt;reference&gt;&lt;identifier system=\"AB-ULI\" value=\"Jean-s ULI\"/&gt;&lt;/reference&gt; relate to one specific instance of my patient record?</p>",
        "id": 183979389,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576880854
    },
    {
        "content": "<p>cause you look it up. I'm really not sure what you're getting at here</p>",
        "id": 183979449,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576880893
    },
    {
        "content": "<p>The information that you get back, using that reference, will be completely different if you use that reference against the AB Health registry versus my doctor's EHR vs my local FHIR repository.</p>",
        "id": 183979452,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576880896
    },
    {
        "content": "<p>you just told me that I had to reference a PARTICULAR medication knowledge using an identifier.  But I'm asserting that an identifier does NOT get you a PARTICULAR instance of information.</p>",
        "id": 183979506,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576880956
    },
    {
        "content": "<p><code>there's never any need to reference another particular medication knowledge somewhere else, because you can just state the code, and there can be no ambiguity about which instance you are referring to</code></p>",
        "id": 183979523,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576880978
    },
    {
        "content": "<blockquote>\n<p>completely different if you use that reference against the AB Health registry versus my doctor's EHR vs my local FHIR repository</p>\n</blockquote>\n<p>really? that would be a surprise.</p>",
        "id": 183979595,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576881013
    },
    {
        "content": "<p>the records may vary, but they should be about the same person. And on most clinical systems, there will be a business rule: one record per patient identifier. but on some systems (MPIs) there will be many</p>",
        "id": 183979706,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576881115
    },
    {
        "content": "<p>okay, and there is a business rule for kinds (like MedicationKnowledge) - one record per MedicationKnowledge.code</p>",
        "id": 183979783,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576881151
    },
    {
        "content": "<p>really? in all cases?</p>",
        "id": 183979814,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576881183
    },
    {
        "content": "<p>yes.  why would a knowledgebase have multiple knowledge records for the same medication?</p>",
        "id": 183979849,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576881226
    },
    {
        "content": "<p>because it serves a reconciliation purpose? because different people (/systems) came up with the statements and they are different, even they though are about the same code. Or could that never happen?</p>",
        "id": 183979916,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576881270
    },
    {
        "content": "<p>i suspect that many systems will just duplicate the code into the identifier for things like MedicationKnowldge, SubstanceX, eg. for the resources that are representing kinds of things.</p>",
        "id": 183979919,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576881274
    },
    {
        "content": "<p>why would they do that? hopefully  only because they need an identifier. And if they did, would it be wrong?</p>",
        "id": 183979941,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576881315
    },
    {
        "content": "<p>but if you want to argue that you don't need an identifier, you'd have to move from 'many systems would' to 'no systems wouldn't', which is something quite different</p>",
        "id": 183980103,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576881370
    },
    {
        "content": "<p>a) because you just said that every resource needs an identifier and they don't have a natural identifier to use<br>\nb) maybe not but it loses the distinction of what identifier has been used for</p>",
        "id": 183980107,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576881376
    },
    {
        "content": "<p>I think by \"natural\" identifier you mean \"an identifier that humans are concerned with'. So you are positing that there's only 2 levels of identifier:</p>\n<ul>\n<li>assigned in the resource, and reassigned from server to serve (resource id)</li>\n<li>assigned by humans to manage human processes (natural identifier)</li>\n</ul>\n<p>but that's not the case - there's a need for a stable identifier that is unchanged as records are copied from system to system, but is not (always) relevant to humans.</p>",
        "id": 183980252,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576881510
    },
    {
        "content": "<p>it's that 3rd case I am concerned about. <a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a> isn't it, and you're arguing that it cannot exist unless humans know about it. but that's very much not the case</p>",
        "id": 183980287,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576881542
    },
    {
        "content": "<p>in my view there is no \"natural\" identifier - it's just a number that you assign to a record by some assignment process.</p>",
        "id": 183980517,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576881735
    },
    {
        "content": "<p>In general, I agree that MedicationKnowledge resources would not be assigned an identifier i a knowledge base, since the system implicitly has one per code. But once you get into managing an eco-system of medication knowledge, then assigning identifiers becomes a natural thing to do, and it has to do with managing information records, not MedicationKnowledge</p>",
        "id": 183980604,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576881827
    },
    {
        "content": "<p>if you want to insist that those things are different , and should be different elements, then we could add identifier to Resource.meta, and explain the difference, and see if people can manage that</p>",
        "id": 183980675,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576881875
    },
    {
        "content": "<blockquote>\n<p>In general, I agree that MedicationKnowledge resources would not be assigned an identifier i a knowledge base, since the system implicitly has one per code. But once you get into managing an eco-system of medication knowledge, then assigning identifiers becomes a natural thing to do, and it has to do with managing information records, not MedicationKnowledge</p>\n</blockquote>\n<p>Then this seems like a meta-identifier that you are talking about.  It is not a business identifier per se but a stable identifier that is maintained across all instances of the same patient.  It can be sometimes be the business identifier but even then it might not, i.e. a patient identifier that a hospital assigns per encounter is a business identifier of a patient, but does not qualify as this meta-identifier that we need here.</p>",
        "id": 183981559,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576882592
    },
    {
        "content": "<blockquote>\n<p>if you want to insist that those things are different , and should be different elements, then we could add identifier to Resource.meta, and explain the difference, and see if people can manage that</p>\n</blockquote>\n<p>As the argument developed, I was going to suggest just this.  <a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a> is the instance-specific identifier of an business object in this specific information system.  Resource.identifier is the cross-instance stable identifier that uniquely identifiers any instance of this business object in any information system.</p>",
        "id": 183981719,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576882708
    },
    {
        "content": "<p>ok, progress. But Resource.identifier can't co-exist with [Resource].identifier - that's a name clash. But it's also a functional disaster, because whether an identifier is just a system assigned stable identifier, or something humans are concerned with has no fixed answer - it changes over time and across perspectives. Hence: put identifier on all resources unless we have a good reason not to have it there (and there are a few resources that are special in regard to these architectural concerns)</p>",
        "id": 183982105,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576882982
    },
    {
        "content": "<p>by your very earlier argument, what possible reason could there be not to have it be on a resource?</p>",
        "id": 183982365,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576883183
    },
    {
        "content": "<p>and by \"functional disaster\", you're saying that you don't want to have:<br>\n<a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a><br>\nResource.stableId<br>\nResource.identifier</p>\n<p>because what is a stableID today might be just an identifier tomorrow given context or perspective?  Or vice versa.</p>",
        "id": 183982423,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576883269
    },
    {
        "content": "<p>yes that's why.</p>",
        "id": 183982911,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576883734
    },
    {
        "content": "<blockquote>\n<p>what possible reason could there be not to have it be on a resource</p>\n</blockquote>\n<p>Apparent special cases: Parameters, OperationOutcome, AuditEvent. MessageHeader? Subscription?</p>",
        "id": 183982986,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576883791
    },
    {
        "content": "<p>I think we are dealing with different things here.  We have 'id' which is a pointer to a specific record on a particular system.  We have 'identifier' which refers to a particular business object, which may have multiple records on the same system and which may appear on multiple systems.  I think what Grahame/'the architects' are seeking here is a 'record identifier'.  I.e. something that remains consistent when a record is copied from one system to another.  I'm not sure that's common practice for many resources (even most resources).  And I also don't think it's the same thing as a business identifier.  There's no expectation that the content of multiple business records for the same object will be identical (though they would be expected to generally refer to the same business object).  Whereas, I believe the expectation is that if the 'record identifier' were the same, the data would be the same (allowing for variation in version and system storage capabilities).  Is that accurate?</p>",
        "id": 183984914,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1576885764
    },
    {
        "content": "<p>yes, that is what I ended up understanding</p>",
        "id": 183984933,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576885796
    },
    {
        "content": "<p>If we were going to add a notion of 'recordId', my leaning would be to do it as an extension, not to munge it in with our existing .identifier elements.</p>",
        "id": 183984981,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1576885810
    },
    {
        "content": "<p>that was akin to my initial thought - add it to Resource.meta.  Grahame seems to think that doesn't make sense.</p>",
        "id": 183985097,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576885989
    },
    {
        "content": "<p>Resource.meta is generally info that's server-specific.  The purpose here would be server-agnostic, so I tend to agree with Grahame on that.</p>",
        "id": 183985313,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1576886264
    },
    {
        "content": "<p>sorry, didn't mean resource.meta, but in Resource (i.e. the same place where <a href=\"http://Resource.id\" target=\"_blank\" title=\"http://Resource.id\">Resource.id</a> is)</p>",
        "id": 183985518,
        "sender_full_name": "Jean Duteau",
        "timestamp": 1576886471
    },
    {
        "content": "<p>adding it as a new field, or as an extension, that is different to [Resource.identifier], that will just create confusion, because these are - for a good reason - poorly differentiated use cases in practice. </p>\n<p>Also, we do we have a rule that identifier gets added at FMM 3-&gt;4? Most of these resources will get identifier added for that rule alone - which we defined for this use case - later. I'm not seeing any sense there</p>",
        "id": 183988865,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576891032
    },
    {
        "content": "<p>Where is the rule about adding identifier at FMM3-&gt;4 documented?  I don't remember that (and have no clue why it exists...)</p>",
        "id": 183992325,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1576896974
    },
    {
        "content": "<p>it's in the code. I don't know where it came from but it's been there a long time</p>",
        "id": 183993090,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576898515
    },
    {
        "content": "<p>Interesting discussion. Been here many times. To summarise, do I understand that in the abstract you want (I'll ignore the FHIR ids for right now):</p>\n<ul>\n<li>a <em>business identifier</em> that uniquely identifies <strong>a singleton thing in the real world</strong>, e.g. a patient Jane Dupont, a drug Amoxycillin, etc, and if there are records about this thing inside systems, such an id would be <em>one way</em> to search for such record(s)</li>\n<li>an <em>informational identifier</em> that is guaranteed unique for every informational entity known inside systems, including entities that appear to be not directly related to real world singleton entities (e.g. each med. rec. event on some patient's Rx list), aka things that don't have business identifiers;, aka things that are 'just information';</li>\n<li>an <em>instance identifier</em>, guaranteed to be unique for any distinguishable instance of each logical informational entity (i.e. doesn't change for exact copies, but does change as soon as changes are made)</li>\n</ul>\n<p>The first and third are easy to explain and understand. The second one is the challenge. The difficulty is that (most likely) <em>all</em> informational entities have as their <em>referent</em> something in the real world, but only some are assigned real-world identifiers (patient numbers, DVLA numbers and the like). The vast majority of them are not - e.g. each medication reconciliation event is a real thing, so is each diagnosis of Mrs Jones hayfever, but these kinds of things don't get assigned ids in the way that patients or medications do.</p>\n<p>You can easily see the difficulties in today's systems  relating to this problem when trying to distinguish between e.g. repeated diagnoses of the same thing (say,  tonsillitis, or a fracture of the toe) - are they really separate instances of tonsillitis / broken toe, or separate reports of the same occurrence, etc. Today, we rely on date/times of Dx and recording, but those are fallible. A patient can report to a new doc that he had tonsillitis in Jan and May last year - both these occurrences will be written to the EHR in the same note, only the date/time mentioned by the patient will distinguish them. And so on.</p>",
        "id": 184012492,
        "sender_full_name": "Thomas Beale",
        "timestamp": 1576938233
    },
    {
        "content": "<p>Solving this properly means adopting something like the referent-tracking system of Smith &amp; Ceusters - <a href=\"http://www.referent-tracking.com/RTU/papers.html\" target=\"_blank\" title=\"http://www.referent-tracking.com/RTU/papers.html\">http://www.referent-tracking.com/RTU/papers.html</a></p>",
        "id": 184012596,
        "sender_full_name": "Thomas Beale",
        "timestamp": 1576938375
    },
    {
        "content": "<p>The problem is that doing so would require the systems themselves to solve this properly; as a communications layer between systems, FHIR cannot easily inject identifiers that are going to 'stick', because receiver systems don't know what to do with them.</p>",
        "id": 184012618,
        "sender_full_name": "Thomas Beale",
        "timestamp": 1576938444
    },
    {
        "content": "<p>I'm not going to propose any solution for FHIR (right now, I don't have a proposal), I'll just leave the above as a contribution that might help clarify the discussion.</p>",
        "id": 184012662,
        "sender_full_name": "Thomas Beale",
        "timestamp": 1576938485
    },
    {
        "content": "<p>One thing to be aware of: if you start forcing systems to issue identifiers on things that they don't already identify, you may be creating a serious imposition on some systems by forcing them to track all ids, and versions of info entities, in a way that they don't do today. I once calculated out the cost of this for using ISO 13606, which forces Guids on every single data node, for a system that otherwise didn't create or track such ids, and it significantly increased the infrastructure, versioning, persistence requirements etc for the source system. (For this reason, openEHR only <em>requires</em> Guids in a few strategic places, and they are optional elsewhere.)</p>",
        "id": 184012738,
        "sender_full_name": "Thomas Beale",
        "timestamp": 1576938687
    },
    {
        "content": "<p>I'll just add one more thing: the most common and obvious example of the problem of ids and real world referents is the medication list. In reality, there is only one real list of medications being taken by the patient, and there should be a one single-source-of-truth medications list for any patient on the planet, with a transactional interface and that can be trusted by every other system. This list, if it existed, would be like your bank account - it would be a singleton information entity that corresponds 1:1 with the real world singleton thing it represents.</p>\n<p>However, as we all know, nearly all systems don't do this - instead there are multiple competing copies in GP and hospital systems, almost always out of date w.r.t. to the patient reality. Hence the tiresome routine of questioning the patient on what pills they are taking, and the whole industry around 'medications reconciliation'. So the problem to be solved here is exactly this: the multiple competing variant representations of a real world singleton - an N:1 situation. FHIR ain't going to fix this, so it can only deal with is; the question is, by what means?</p>",
        "id": 184013171,
        "sender_full_name": "Thomas Beale",
        "timestamp": 1576939542
    },
    {
        "content": "<p>Whatever solution you arrive at for this example, it will probably solve all of the others.</p>",
        "id": 184013213,
        "sender_full_name": "Thomas Beale",
        "timestamp": 1576939564
    },
    {
        "content": "<p>fortunately, we don't have to solve the problem, only let other people solve it their own way. But it was why I think we should be more consistent about allowing identifiers</p>",
        "id": 184022615,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576956307
    },
    {
        "content": "<p>I think that whether or not we add identifier to more resources, the discussion of identifier (at <a href=\"http://build.fhir.org/resource.html#identifiers\" target=\"_blank\" title=\"http://build.fhir.org/resource.html#identifiers\">http://build.fhir.org/resource.html#identifiers</a>) should mention informational identifiers.</p>",
        "id": 184080840,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1577071674
    },
    {
        "content": "<p><a href=\"https://jira.hl7.org/browse/FHIR-25404\" target=\"_blank\" title=\"https://jira.hl7.org/browse/FHIR-25404\">FHIR-25404</a></p>",
        "id": 184081226,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1577072428
    },
    {
        "content": "<p>This problem of importing a resource that is primarily on another system needs far more clarity. If we add this identifier solution, then we should really get rid of the .meta.source as it would seem to conflict. I, possibly incorrectly assumed, that this was used for import workflows. Where the .id would be preserved, but the .meta.source would be the root. Thus I would always have the original URL...</p>",
        "id": 184109745,
        "sender_full_name": "John Moehrke",
        "timestamp": 1577113144
    },
    {
        "content": "<p>And then in all the conformance resources there is the canonical url too.</p>",
        "id": 184725633,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1578049623
    }
]