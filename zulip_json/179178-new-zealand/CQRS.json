[
    {
        "content": "<p>Hi everyone, relatively new to FHIR, but would like to ask the owers to be if there is a place where CQRS in FHIR is somehow explained or if someone would be able to summarise it for me. Thanks</p>",
        "id": 212610025,
        "sender_full_name": "Harry Loris",
        "timestamp": 1602100055
    },
    {
        "content": "<p>CQRS?</p>",
        "id": 212621649,
        "sender_full_name": "David Hay",
        "timestamp": 1602106098
    },
    {
        "content": "<p>yes..not in the traditional meaning but more along the lines of a system keeping state..(or so I have been told)..;) sorry just trying to find out if there is an answer on the architectural design of FHIR</p>",
        "id": 212626250,
        "sender_full_name": "Harry Loris",
        "timestamp": 1602109150
    },
    {
        "content": "<p>What is CQRS.. - <a href=\"https://en.wikipedia.org/wiki/Command%E2%80%93query_separation#Command_query_responsibility_segregation\">https://en.wikipedia.org/wiki/Command%E2%80%93query_separation#Command_query_responsibility_segregation</a> ?</p>",
        "id": 212631542,
        "sender_full_name": "David Hay",
        "timestamp": 1602112844
    },
    {
        "content": "<p>Hi David, thanks for the reply. Do you know if this is applied in any way in FHIR? Thanks</p>",
        "id": 212633366,
        "sender_full_name": "Harry Loris",
        "timestamp": 1602114364
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191321\">David Hay</span> <a href=\"#narrow/stream/179178-new-zealand/topic/CQRS/near/212631542\">said</a>:</p>\n<blockquote>\n<p>What is CQRS.. - <a href=\"https://en.wikipedia.org/wiki/Command%E2%80%93query_separation#Command_query_responsibility_segregation\">https://en.wikipedia.org/wiki/Command%E2%80%93query_separation#Command_query_responsibility_segregation</a> ?</p>\n</blockquote>\n<p>For the record - that link works fine in Chrome on Mac but fails on my iPhone in Safari - it complains about %E2.  This version works: <a href=\"https://en.wikipedia.org/wiki/Command-query_separation#Command_query_responsibility_segregation\">https://en.wikipedia.org/wiki/Command-query_separation#Command_query_responsibility_segregation</a></p>",
        "id": 212634512,
        "sender_full_name": "Dave deBronkart",
        "timestamp": 1602115401
    },
    {
        "content": "<p>All good..works fine on Chrome and PC..;)</p>",
        "id": 212635894,
        "sender_full_name": "Harry Loris",
        "timestamp": 1602116814
    },
    {
        "content": "<p>I really don't know enough to comment. The wiki article states:</p>\n<div class=\"codehilite\"><pre><span></span><code>It states that every method should either be a command that performs an action, or a query that returns data to the caller, but not both. In other words, Asking a question should not change the answer.[1] More formally, methods should return a value only if they are referentially transparent and hence possess no side effects.\n</code></pre></div>\n\n\n<p>so you could argue that that is covered by the HTTP Verbs - GET, POST, Put  etc...</p>\n<p>You might want to ask in the implementers stream to get a wider set oy eyes looking at it...</p>",
        "id": 212647042,
        "sender_full_name": "David Hay",
        "timestamp": 1602132619
    },
    {
        "content": "<p>This has been discussed (briefly) before on <a href=\"#narrow/search/cqrs\">Zulip</a>. I first came across this  architectural pattern when reading <a href=\"https://ptgmedia.pearsoncmg.com/images/9780735685352/samplepages/9780735685352.pdf\">.NET Architecting Applications for the Enterprise</a>. In the Microsoft Book, REST is cited solely as an API /data exchange option and not within the CQRS/Event Sourcing patterns themselves.</p>",
        "id": 212784130,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1602220079
    }
]