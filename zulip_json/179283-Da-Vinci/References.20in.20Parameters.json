[
    {
        "content": "<p>Based on this <a href=\"http://build.fhir.org/parameters.html#ids\" target=\"_blank\" title=\"http://build.fhir.org/parameters.html#ids\">note</a> I think that using relative paths in the resources in the Parameters is non-conformant. <span class=\"user-mention\" data-user-id=\"191496\">@Nikolai Schwertner</span> <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span>, do you have the same read? So we'd expect to see absolute URLs in the resources being exchanged.</p>",
        "id": 153976452,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532030793
    },
    {
        "content": "<p>I agree,  but I don't understand the need for absolute references either since I don't know what data reciever is going to do with them.  all you need to know the resource Type. we may be missing a formal Graph definition ( I admit I didn't look at the MRP  Measure  profile - does that define it and can you send me link?  )  or back to  using a bundle instead as an implicit graph.  Good catch.   and great to have <span class=\"user-mention\" data-user-id=\"191496\">@Nikolai Schwertner</span>  implementing as we create the IG.</p>",
        "id": 153976460,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532031376
    },
    {
        "content": "<p>No, I think we still use parameters, but I do wonder whether we can use transient ids in a Parameters resource. <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> any thoughts? I assume this isn't the only place people would want to do that.</p>",
        "id": 153976464,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532031638
    },
    {
        "content": "<p>My point is at least in MRP <strong>assuming  the correct resources instances are present</strong> you only need to know the resource type to process so  the references matter only as a validation.</p>",
        "id": 153976471,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532032031
    },
    {
        "content": "<p>Yep, totally agree</p>",
        "id": 153976473,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532032050
    },
    {
        "content": "<p>We wouldn't use relative paths, we'd us local ids - so \"#foo\"</p>",
        "id": 153976500,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532033509
    },
    {
        "content": "<p>Though that doesn't totally work either because they're in the context of the parent...  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ?</p>",
        "id": 153976503,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532033586
    },
    {
        "content": "<p>?\"context of the parent\"?</p>",
        "id": 153976511,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532033869
    },
    {
        "content": "<p>Right, the parent in a Bundle is the Bundle so you can resolve it, or in a contained element is the containing resource, but in a Parameters, that documentation explicitly says you can't do that.</p>",
        "id": 153976515,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532034044
    },
    {
        "content": "<p>so Why not go back to a Bundle?</p>",
        "id": 153976516,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532034096
    },
    {
        "content": "<p>Pass a Bundle as the second parameter? Or as the only Parameter?</p>",
        "id": 153976517,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532034593
    },
    {
        "content": "<p>only one</p>",
        "id": 153976533,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532037774
    },
    {
        "content": "<p>since you need the rel urls to work</p>",
        "id": 153976536,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532037806
    },
    {
        "content": "<p>collection become just a return bundle</p>",
        "id": 153976537,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532037847
    },
    {
        "content": "<p>I wonder if this is an unintended consequence of this change: <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17273\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17273\">GF#17273</a></p>",
        "id": 153976540,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532038284
    },
    {
        "content": "<p>Because now in MeasureReport, we effectively can't reference transient resources, unless we make them contained.</p>",
        "id": 153976541,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532038300
    },
    {
        "content": "<p>Which is, I suppose, another option.</p>",
        "id": 153976542,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532038312
    },
    {
        "content": "<p>Contained is to be used when resources cannot stand alone and aren't expected to ever be referenced by anything else.  That wouldn't hold here.</p>",
        "id": 153976562,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532038791
    },
    {
        "content": "<p>Agree, just trying to figure out how to support the case where the Provider is trying to use $submit-data but doesn't necessarily want to say \"I actually have a Task resource at this URL\", they just want to communicate that this is what it would look like if I did.</p>",
        "id": 153976568,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532039009
    },
    {
        "content": "<p>I don't understand that.  You have a Task or you don't.  It may or may not have a RESTful URL.  And it may have an intent of proposed or planned rather than requested, but it's still a Task.</p>",
        "id": 153976578,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532039173
    },
    {
        "content": "<p>Okay, so if I send you a MeasureReport and it has a reference to a Task by an absolute URL, it's not non-conformant for me to return a 404 when you attempt to resolve that resource reference against my server?</p>",
        "id": 153976581,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532039291
    },
    {
        "content": "<p>Just trying to make sure I understand.</p>",
        "id": 153976583,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532039303
    },
    {
        "content": "<p>If the task doesn't exist on your server, it shouldn't have a URL</p>",
        "id": 153976586,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532039321
    },
    {
        "content": "<p>It can (and should) just be a urn:uuid as the fullUrl</p>",
        "id": 153976588,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532039341
    },
    {
        "content": "<p>Ah, gotcha.</p>",
        "id": 153976589,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532039360
    },
    {
        "content": "<p>(Should have said \"If the task doesn't exist on <em>some</em> server...\")</p>",
        "id": 153976591,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532039387
    },
    {
        "content": "<p>so, umm, I've missed some context here.... can someone explain with examples?</p>",
        "id": 153976618,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532041544
    },
    {
        "content": "<p>### Examples</p>\n<p><strong>Scenario:</strong> Provider X submits MRP data for Patient Z to Payer Z</p>\n<p><strong>Assumptions:</strong> ...TODO...</p>\n<p>#### Request using POST Syntax</p>\n<p><code>POST [base]/MeasureReport/measure-mrp/$submit-data</code></p>\n<p><strong>Request body</strong></p>\n<div class=\"codehilite\"><pre><span></span>{\n   &quot;resourceType&quot;:&quot;Parameters&quot;,\n   &quot;parameter&quot;:[\n      {\n         &quot;name&quot;:&quot;measurereport&quot;,\n         &quot;resource&quot;:&quot;{&quot;resourceType&quot;: &quot;MeasureReport&quot;,\n         ...}\n      },\n      {\n        &quot;name&quot;:&quot;resource&quot;,\n        &quot;resource&quot;:&quot;{&quot;resourceType&quot;: &quot;Task&quot;,\n        ...}\n      },\n      {\n        &quot;name&quot;:&quot;resource&quot;,\n        &quot;resource&quot;:&quot;{&quot;resourceType&quot;: &quot;Patient&quot;,\n        ...}\n      },\n      {\n        &quot;name&quot;:&quot;resource&quot;,\n        &quot;resource&quot;:&quot;{&quot;resourceType&quot;: &quot;Location&quot;,\n          ...}\n      },\n      {\n        &quot;name&quot;:&quot;resource&quot;,\n        &quot;resource&quot;:&quot;{&quot;resourceType&quot;: &quot;Practitioner&quot;,\n        ...}\n      },\n      {\n        &quot;name&quot;:&quot;resource&quot;,\n        &quot;resource&quot;:&quot;{&quot;resourceType&quot;: &quot;Organization&quot;,\n        ...}\n      },\n      {\n        &quot;name&quot;:&quot;resource&quot;,\n        &quot;resource&quot;:&quot;{&quot;resourceType&quot;: &quot;Encounter&quot;,\n        ...}\n</pre></div>",
        "id": 153976621,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532041722
    },
    {
        "content": "<p>ok, and what's the question?</p>",
        "id": 153976623,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532041896
    },
    {
        "content": "<p>If MeasureReport can't reference Task directly in the Parameters resource.  So if we want a reference that resolves what to do.  I suggested go back to bundle.  I'm not sure what Bryn was suggesting</p>",
        "id": 153976627,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532042124
    },
    {
        "content": "<p>I think he was suggesting the resources where created on the fly and are not persisted anywheres</p>",
        "id": 153976628,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532042164
    },
    {
        "content": "<p>MeasureReport needs to reference the Task?</p>",
        "id": 153976629,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532042174
    },
    {
        "content": "<p>Technically it does not for the MRP use case since its tightly defined what is to be sent.  But not sure about the general case.</p>",
        "id": 153976630,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532042247
    },
    {
        "content": "<p>so the general case is that the task resource has a an id of task1</p>",
        "id": 153976631,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532042281
    },
    {
        "content": "<p>the MeasureReport refers to it as \"reference\": \"Task/task1\"</p>",
        "id": 153976632,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532042300
    },
    {
        "content": "<p>Y</p>",
        "id": 153976633,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532042305
    },
    {
        "content": "<p>of course that can be a generated UUID</p>",
        "id": 153976634,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532042309
    },
    {
        "content": "<p>the tricky bit is that when you put a resource in a parameters, you have to say which other parameter location(s) the resource could resolve to in the Parameters</p>",
        "id": 153976635,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532042357
    },
    {
        "content": "<p>if it doesn't resolve in the parameters, then you fall back to general resolution rules</p>",
        "id": 153976637,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532042375
    },
    {
        "content": "<p>yes and as Bryn pointed out is not supported:  <a href=\"#narrow/stream/128-DaVinci/subject/References.20in.20Parameters/near/165935\" title=\"#narrow/stream/128-DaVinci/subject/References.20in.20Parameters/near/165935\">https://chat.fhir.org/#narrow/stream/128-DaVinci/subject/References.20in.20Parameters/near/165935</a></p>",
        "id": 153976638,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532042395
    },
    {
        "content": "<p>what is not supported?</p>",
        "id": 153976639,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532042415
    },
    {
        "content": "<p><a href=\"http://build.fhir.org/parameters.html#ids\" target=\"_blank\" title=\"http://build.fhir.org/parameters.html#ids\">http://build.fhir.org/parameters.html#ids</a></p>",
        "id": 153976640,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532042458
    },
    {
        "content": "<p>last row</p>",
        "id": 153976642,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532042470
    },
    {
        "content": "<p>umm, I'm not seeing what is not supported...</p>",
        "id": 153976643,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532042545
    },
    {
        "content": "<p>\"that resources cannot reference content in another resource using an internal reference (except for references inside contained resources)\"</p>",
        "id": 153976644,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532042574
    },
    {
        "content": "<p>Unless we have misinterpreted that part.</p>",
        "id": 153976645,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532042664
    },
    {
        "content": "<p>I didn't think we were talking about internal references</p>",
        "id": 153976648,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532042804
    },
    {
        "content": "<p>that's why I said \"reference\" : \"Task/task1\"</p>",
        "id": 153976649,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532042814
    },
    {
        "content": "<p>I thought that was what internal references meant here</p>",
        "id": 153976652,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532043148
    },
    {
        "content": "<p>reference inside the Parameters resource between parameters</p>",
        "id": 153976653,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532043175
    },
    {
        "content": "<p>So where is the topic of referencing resources within Parameters discussed.</p>",
        "id": 153976654,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532043273
    },
    {
        "content": "<p>For resources inside a Parameters instance, what's the fullUrl?</p>",
        "id": 153976655,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532043286
    },
    {
        "content": "<p>internal reference = \"reference\" : \"#a234234\"</p>",
        "id": 153976656,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532043341
    },
    {
        "content": "<p>there is no fullUrl. only relative reference resolution</p>",
        "id": 153976657,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532043359
    },
    {
        "content": "<p>So when you pass something to an operation, you can't indicate where the data actually lives?  So if something wants to query more information about a passed argument, it can't?</p>",
        "id": 153976660,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532043413
    },
    {
        "content": "<p>not in the infrastructure, no</p>",
        "id": 153976662,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532043434
    },
    {
        "content": "<p>has to be a parameter, I guess</p>",
        "id": 153976663,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532043443
    },
    {
        "content": "<p>or a Bundle</p>",
        "id": 153976664,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532043459
    },
    {
        "content": "<p>could do that too</p>",
        "id": 153976665,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532043471
    },
    {
        "content": "<p>but we're clear about internal, relative and absolute references y?</p>",
        "id": 153976666,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532043499
    },
    {
        "content": "<p>Relative references are only allowed between things that have the same fullUrl - and we don't know what the fullUrl of the things in Parameters are</p>",
        "id": 153976673,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532043881
    },
    {
        "content": "<p>\"Relative references are only allowed between things that have the same fullUrl\" - you have evidence for that?</p>",
        "id": 153976674,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532043940
    },
    {
        "content": "<p>That's the rule in Batch and in regular REST transactions.</p>",
        "id": 153976676,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532044101
    },
    {
        "content": "<p>You can't have a relative reference in a regular REST operation if the resource lives on a different server than the referencing resource.  And in Batch, relative references can only happen if the resource has the same base.  That's what the documented resolution rules say.</p>",
        "id": 153976677,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532044205
    },
    {
        "content": "<p>We don't have any resolution rules for Parameters</p>",
        "id": 153976678,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532044280
    },
    {
        "content": "<p>first paragraph: wrong. So far as I can see</p>",
        "id": 153976684,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532044645
    },
    {
        "content": "<p>First paragraph of what?</p>",
        "id": 153976686,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532044699
    },
    {
        "content": "<p>I can't find either of these explicitly stated:</p>\n<ul>\n<li>You can't have a relative reference in a regular REST operation if the resource lives on a different server than the referencing resource. </li>\n<li>And in Batch, relative references can only happen if the resource has the same base.</li>\n</ul>",
        "id": 153976687,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532044730
    },
    {
        "content": "<p>I think you've extrapolated and done so slightly wrongly</p>",
        "id": 153976688,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532044746
    },
    {
        "content": "<p>but we do have a problem:</p>\n<blockquote>\n<p>If the fullUrl starts with urn:uuid: or urn:oid:, then append the id to the base URL</p>\n</blockquote>",
        "id": 153976689,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532044771
    },
    {
        "content": "<p>what base URL?</p>",
        "id": 153976690,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532044775
    },
    {
        "content": "<p><a href=\"http://build.fhir.org/references.html#literal\" target=\"_blank\" title=\"http://build.fhir.org/references.html#literal\">http://build.fhir.org/references.html#literal</a>: a relative URL, which is relative to the Service Base URL, or, if processing a resource from a bundle, which is relative to the base URL implied by the Bundle.entry.fullUrl (see Resolving References in Bundles)</p>",
        "id": 153976691,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532044779
    },
    {
        "content": "<p>soI did not not think to look there, but you are extrapolating. but we could certainly clarify resolution in a parameters resource. The key thing is that you can only resolve using relative references, and only to specified parameters</p>",
        "id": 153976702,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532046692
    },
    {
        "content": "<p>Extrapolation is all you can do in the absence of specific guidance :)  </p>\n<p>If you can only resolve using relative references, does that mean that we can't assume that any of the relative references are or can refer to elements on the server on which the operation is being invoked?  If it can include a mixture, how do we differentiate?  I'm beginning to think that having fullUrl on Parameters.parameter (required and allowed only if parameter.resource is present) would be a good idea.</p>",
        "id": 153976714,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532048413
    },
    {
        "content": "<p>in the absence of guidance it creates less confusion if you admit the absence rather than stating that your expectations are law</p>",
        "id": 153976715,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532048474
    },
    {
        "content": "<p>what I proposed above is that for some parameters, you indicate that they can resolve in other parameters, and that either way you fall back to local resolution rules</p>",
        "id": 153976717,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532048524
    },
    {
        "content": "<p>the difference with Bundle is that we anticipate cross server resolution is necessary. I don't see that this is an issue for operations</p>",
        "id": 153976718,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532048551
    },
    {
        "content": "<p>Ok, so you treat all elements in the Parameters instance as potentially resolvable within  the instance.  It they don't, you expect them to resolve on the target server.  If they don't resolve there, it's an error.  If they resolve in both places (in the instance and on the server), the resource in the Parameters is interpreted to be the same as the one on the server?</p>",
        "id": 153976722,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532048820
    },
    {
        "content": "<p>(though possibly a different version)</p>",
        "id": 153976723,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532048829
    },
    {
        "content": "<p>well, I think it needs to be specified on the parameters in the defintion - it depends on why a parameter is provided.</p>",
        "id": 153976725,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532048862
    },
    {
        "content": "<p>but parameters overrides if there's a match</p>",
        "id": 153976726,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532048878
    },
    {
        "content": "<p>I'm not thrilled with the idea that resolution behaves differently based on non-computable rules.  That makes general-purpose validation of the instance impossible</p>",
        "id": 153976729,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532048940
    },
    {
        "content": "<p>can add it to operation definition if we want</p>",
        "id": 153976730,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532048976
    },
    {
        "content": "<p>So \"local-only\" (in Parameters, not on server), \"server-only\", \"both\", \"either\"?</p>",
        "id": 153976731,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532049073
    },
    {
        "content": "<p>nominate which parameter might be a place to look for resolution.</p>",
        "id": 153976732,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532049106
    },
    {
        "content": "<p>there's places where you don't want to resolve because of the operation semantics</p>",
        "id": 153976733,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532049121
    },
    {
        "content": "<p>Eric's example above: \"resource\" is provided to be a resolve target</p>",
        "id": 153976734,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532049146
    },
    {
        "content": "<p>But that could be different for different references - that gets evil fast.</p>",
        "id": 153976735,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532049157
    },
    {
        "content": "<p>don't see that would matter</p>",
        "id": 153976737,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532049189
    },
    {
        "content": "<p>just list the possible resolutions.</p>",
        "id": 153976738,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532049205
    },
    {
        "content": "<p>anyway, should be an extension for now</p>",
        "id": 153976739,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532049213
    },
    {
        "content": "<p>So \"these are the parameter paths where some of the references in this resource might resolve to\"?</p>",
        "id": 153976740,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532049239
    },
    {
        "content": "<p>y something like that</p>",
        "id": 153976741,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532049248
    },
    {
        "content": "<p>else server resolves locally. and decides what to do if there's no match</p>",
        "id": 153976742,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532049277
    },
    {
        "content": "<p>I think just saying \"might resolve somewhere in the Parameters instance\" should be sufficient.  It's not like it's hard to check across everything in the resource.</p>",
        "id": 153976743,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532049280
    },
    {
        "content": "<p>The question is knowing whether it's supposed to resolve or not</p>",
        "id": 153976744,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532049303
    },
    {
        "content": "<p>Or I guess more useful would be \"Is there an expectation this parameter will be pointed to by something\" and if so, from where.</p>",
        "id": 153976745,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532049419
    },
    {
        "content": "<p>y nicer that way round</p>",
        "id": 153976746,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532049467
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17508\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17508\">GF#17508</a>, <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17509\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17509\">GF#17509</a></p>",
        "id": 153976753,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1532050345
    }
]