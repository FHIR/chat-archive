[
    {
        "content": "<p>1) I'm hoping we can us these for both r3 and r4.   Need to check if they validate for R3.  However the <a href=\"http://build.fhir.org/measure-operation-submit-data.html#14.11.1.3.1\" target=\"_blank\" title=\"http://build.fhir.org/measure-operation-submit-data.html#14.11.1.3.1\">MRP example given</a>  is not all like what we discussed for DEQM.  I think that needs to be in alignment or there will be mass confusion.  <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span></p>",
        "id": 153979491,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532971391
    },
    {
        "content": "<p>it looks like $submit-data will work in R3 but $ collect-data uses elements added in R$ so will have to have a R3 version for that one.</p>",
        "id": 153979497,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532973118
    },
    {
        "content": "<p>What is unexpected about the MRP example included in the build? Just that it's not using Task or is there something else?</p>",
        "id": 153979565,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532983875
    },
    {
        "content": "<p>And yes, the $collect-data for R3 would need to use the $evaluate-measure parameters for R3 (they were broadened in R4 to support \"subject\" as opposed to just \"patient\")</p>",
        "id": 153979566,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1532983912
    },
    {
        "content": "<p>it does not follow what we discussed.  the only evaluated measure is either Task or Observation</p>",
        "id": 153979569,
        "sender_full_name": "Eric Haas",
        "timestamp": 1532986317
    },
    {
        "content": "<p>The Collect data operation  uses the GET syntax.  based on the spec : \"When an operation is idempotent, and the parameters are all primitive data types with no extensions (as is the case with the example above), it may be invoked using GET as well.\"</p>",
        "id": 153979619,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533007354
    },
    {
        "content": "<p>it is listed as not indempotent and reference isn't a simple search parameter.  It should be a POST only</p>",
        "id": 153979620,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533007566
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span></p>",
        "id": 153979621,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533007813
    },
    {
        "content": "<p>I don't this is an Idempotent operation.  How is it changing the state?</p>",
        "id": 153979626,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533011937
    },
    {
        "content": "<p>It depends whether the implementation stores the MeasureReport resource.</p>",
        "id": 153979646,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533026713
    },
    {
        "content": "<p>If I do $collect-data its like fetching a bag of resources.  I pretty sure I  can do  that without affecting them because its like a GET  right?  The operation does not affect them.</p>",
        "id": 153979765,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533057989
    },
    {
        "content": "<p>I don't think Reference is a primitive parameter  <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> ?</p>",
        "id": 153979767,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533058055
    },
    {
        "content": "<p>though it certainly behaves like one in your example but technically no.... do we need some clarification in the spec?</p>",
        "id": 153979768,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533058118
    },
    {
        "content": "<p>I'm not sure what you mean by \"primitive parameter\", but there is a search parameter that's associated with Reference that can be passed on the URL, if that's what you mean.</p>",
        "id": 153979774,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1533059309
    },
    {
        "content": "<p>Yes, $collect-data is like fetching a bag of resources, but it also creates a MeasureReport, which may or not be persisted by the responding server. If it's persisted, the operation wouldn't be idempotent (because invoking it multiple times would result in slightly different MeasureReport resources). If it's not persisted, it's still not 100% idempotent (for the same reason), but at least it's not actually changing state.</p>",
        "id": 153979785,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533061913
    },
    {
        "content": "<blockquote>\n<p>If it's persisted, the operation wouldn't be idempotent (because invoking it multiple times would result in slightly different MeasureReport resources</p>\n</blockquote>",
        "id": 153979833,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533068405
    },
    {
        "content": "<p>how exactly does it change the  MeasureReport?</p>",
        "id": 153979834,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533068437
    },
    {
        "content": "<p>how does that make it not idempotent?</p>",
        "id": 153979835,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533068447
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  from the spec on the operations page \"When an operation is idempotent, and the parameters are all primitive data types with no extensions (as is the case with the example above), it may be invoked using GET as well.\"</p>",
        "id": 153979836,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533068488
    },
    {
        "content": "<p>Reference is not a primitive data types  ( sorry not parameter)  but it can sure act like one.  It is a special case for using GET?</p>",
        "id": 153979837,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533068582
    },
    {
        "content": "<p>I have always used uri instead</p>",
        "id": 153979838,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533068608
    },
    {
        "content": "<p>or string with a reference search type but url is more direct</p>",
        "id": 153979839,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533068681
    },
    {
        "content": "<p>@Bryn ,  I missed a key concept here the $collect triggers the system to create a MR resource, but how is that different from a system that creates other resources on the fly from a GET.</p>",
        "id": 153979841,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533068887
    },
    {
        "content": "<p>If your operation parameter has a \"search type\" specified, then you can use it on a GET.  For a type of Reference, you can have a search type of reference.</p>",
        "id": 153979847,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1533069666
    },
    {
        "content": "<p>Rule opd-2: A search type can only be specified for parameters of type string (expression : searchType.exists() implies type = 'string', xpath: not(exists(f:searchType)) or (f:type/@value = 'string'))</p>",
        "id": 153979867,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533070976
    },
    {
        "content": "<p>My point is <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span>  if we want to use GET syntax then need to change the types from Reference to uri. and decide is Idempotent ( which I think it is)</p>",
        "id": 153979868,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533071046
    },
    {
        "content": "<p>I'm fine deciding it's idempotent, but based on Lloyd's last statement, I don't think we do need to change the type to uri, I've been using reference parameters with GET for a long time.</p>",
        "id": 153979871,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533071373
    },
    {
        "content": "<p>Well either you are wrong or the spec is wrong.....</p>",
        "id": 153979875,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533071648
    },
    {
        "content": "<p>opd-2 to be specific</p>",
        "id": 153979876,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533071694
    },
    {
        "content": "<p>... and a lot of servers are forgiving.</p>",
        "id": 153979878,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533071807
    },
    {
        "content": "<p>but my German in me says we should stick  to the spec and use either a uri or string and type reference search parameter.</p>",
        "id": 153979879,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533071864
    },
    {
        "content": "<p>and since OD is going normative, I'd like an opinion from <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> and <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> about this as well.</p>",
        "id": 153979880,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533071957
    },
    {
        "content": "<p>Why are we specifying the searchType?</p>",
        "id": 153979881,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533071984
    },
    {
        "content": "<p>I've never done that, and I don't understand why we need that. Isn't that the constraint that's being violated?</p>",
        "id": 153979882,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533072033
    },
    {
        "content": "<p>if you choose string type you can specify the search parameter type.  the other option is type uri.</p>",
        "id": 153979883,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533072034
    },
    {
        "content": "<p>Right, but we don't need to do that.</p>",
        "id": 153979885,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533072058
    },
    {
        "content": "<p>For reference, it's just understood to be a reference.</p>",
        "id": 153979886,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533072066
    },
    {
        "content": "<p>What is written in the spec is...</p>",
        "id": 153979887,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533072115
    },
    {
        "content": "<blockquote>\n<p>What http methods can be used for the operation depends on the .affectsState value and whether the input parameters are primitive or complex:</p>\n<p>Servers SHALL support POST method for all operations.</p>\n<p>Servers SHALL support GET method if all the parameters for the operation are primitive or there are no parameters and the operation has affectsState = false.</p>\n</blockquote>",
        "id": 153979888,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533072126
    },
    {
        "content": "<p>type Reference is  a complex data type  so technically can't use GET.</p>",
        "id": 153979889,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533072165
    },
    {
        "content": "<p>I don't see a variance saying you can and to your point, I don't see a place that say you can't support using GET with type  Reference,  but then we will need to make that part of the Conformance Rules for the IG  I guess.</p>",
        "id": 153979891,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533072270
    },
    {
        "content": "<p>I think my way is easier.BTW :-)</p>",
        "id": 153979893,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533072307
    },
    {
        "content": "<p>Uncle</p>",
        "id": 153979895,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533072445
    },
    {
        "content": "<p>So if we say it's a string, we can sets the search type?</p>",
        "id": 153979896,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533072498
    },
    {
        "content": "<p>I don't see where to do that in the build though.</p>",
        "id": 153979897,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533072507
    },
    {
        "content": "<p>Something is definitely wrong with opd-2.  The list of possible searchTypes is much too long to make sense if its only allowed for strings.  I <em>suspect</em> the intention was that we would only specify searchType for string because that's the only place it wasn't obvious.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>, can you confirm?</p>",
        "id": 153979904,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1533073151
    },
    {
        "content": "<p>I don't see it in the spreadsheets either.  I</p>",
        "id": 153979910,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533073666
    },
    {
        "content": "<p>used type uri instead,  but interested to what GG says.</p>",
        "id": 153979911,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533073692
    },
    {
        "content": "<p>also can create from XML but I don't think the build supports that.</p>",
        "id": 153979914,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533073740
    },
    {
        "content": "<p>data-requirements is Idempotent too.</p>",
        "id": 153979971,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533080305
    },
    {
        "content": "<p>I don't see what's wrong with opd-2?</p>",
        "id": 153979974,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533080432
    },
    {
        "content": "<p>The question I have is can you use GET to invoke an operation if it has reference parameters?</p>",
        "id": 153979975,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533080484
    },
    {
        "content": "<p>you can't</p>",
        "id": 153979976,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533080500
    },
    {
        "content": "<p>oh hang on. do you mean type = reference or searchType = reference?</p>",
        "id": 153979977,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533080527
    },
    {
        "content": "<p>The documentation at this point says no, but I thought that at one point it didn't say that, and I know at least HAPI server supports it, we've been doing that.</p>",
        "id": 153979978,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533080531
    },
    {
        "content": "<p>Type = reference</p>",
        "id": 153979979,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533080533
    },
    {
        "content": "<p>So I can say $evaluate-measure?measure=Measure/mrp</p>",
        "id": 153979980,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533080547
    },
    {
        "content": "<p>type = reference can't be done with get</p>",
        "id": 153979981,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533080552
    },
    {
        "content": "<p>And do that with a GET</p>",
        "id": 153979982,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533080553
    },
    {
        "content": "<p>then that's not type = reference, that's type = string + searchType = reference</p>",
        "id": 153979983,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533080569
    },
    {
        "content": "<p>Ah</p>",
        "id": 153979984,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533080653
    },
    {
        "content": "<p>So how do I specify that in the operation definition in the spreadsheet?</p>",
        "id": 153979985,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533080692
    },
    {
        "content": "<p>Because right now, all I have is that the parameters are of type Reference(...)</p>",
        "id": 153979986,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533080706
    },
    {
        "content": "<p>column \"Search Type\"</p>",
        "id": 153979987,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533080845
    },
    {
        "content": "<p>Okay, my spreadsheet's old enough that it doesn't have that column.</p>",
        "id": 153979988,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533080882
    },
    {
        "content": "<p>I'll add it.</p>",
        "id": 153979989,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533080884
    },
    {
        "content": "<p>And make those changes.</p>",
        "id": 153979990,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533080900
    },
    {
        "content": "<p>But I'll do it tomorrow, is that okay <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span>?</p>",
        "id": 153979991,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533080930
    },
    {
        "content": "<p>Yep  thanks for clearing that up.   Im out for the next week, will check in periodically but not much.</p>",
        "id": 153979992,
        "sender_full_name": "Eric Haas",
        "timestamp": 1533081564
    },
    {
        "content": "<p>So if you're going to have a reference as a parameter, you have to send it as \"string\" if you use Parameters?</p>",
        "id": 153979993,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1533081592
    },
    {
        "content": "<p>You have to send it as string if you want to not use Parameters (invoke with GET).</p>",
        "id": 153980044,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533098130
    },
    {
        "content": "<p>I thought using GET was optional?</p>",
        "id": 153980084,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1533103311
    },
    {
        "content": "<p>It is, but we want to make sure systems can use the GET. If we use reference parameters, they will only be able to POST.</p>",
        "id": 153980597,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533167179
    },
    {
        "content": "<p>So I applied these changes to the R4 operations.</p>",
        "id": 153980598,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1533167194
    }
]