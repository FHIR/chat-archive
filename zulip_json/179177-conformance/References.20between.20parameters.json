[
    {
        "content": "<p>I was wondering: Is there any convention of how resources in Parameters (in-  or output of an operation) can reference each other?<br>\nSince we don't have a mechanism like the fullUrl in a Bundle...</p>",
        "id": 276302358,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1648025169
    },
    {
        "content": "<p>I found the following in the description of the Parameters resource:</p>\n<blockquote>\n<p><strong>Internal References</strong> When internal references are resolved in a resource in a parameter.resource, the resolution stops at parameter.resource. This allows resources to appear more than once in a Parameters resource, and also means that resources cannot reference content in another resource using an internal reference (except for references inside contained resources)<br>\n<strong>References</strong>  When resolving references in resources, the applicable Operation Definition may specify how references may be resolved between parameters. If a reference cannot be resolved between the parameters, the application should fall back to it's general resource resolution methods</p>\n</blockquote>\n<p>Can anyone explain the difference between \"internal References\" and \"References\" in this context?</p>",
        "id": 276303328,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1648025760
    },
    {
        "content": "<p>Does internal mean contained references, like #&lt;id&gt;? But their resolution always stops at the root of the Resource, no?</p>",
        "id": 276303510,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1648025855
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 276341082,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1648045743
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 276341187,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1648045798
    },
    {
        "content": "<p><a href=\"https://build.fhir.org/references-definitions.html#Reference.reference\">https://build.fhir.org/references-definitions.html#Reference.reference</a> mentions internal fragment references, and the short description of this same element mentions \" internal references\". From <a href=\"https://build.fhir.org/references.html\">https://build.fhir.org/references.html</a> almost every mention of internal references seems to be dealing with reference that include <code>#</code> fragment suffixes.</p>",
        "id": 276342023,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1648046137
    },
    {
        "content": "<p>Under this interpretation, the phrase:</p>\n<blockquote>\n<p>This allows a resource to appear more than once in a parameters resource</p>\n</blockquote>\n<p>Is basically saying that redundant content (e.g. two resources each including the same id and meta.versionId) can be included at different places within a <code>Parameters.descendants().resource</code> tree.</p>",
        "id": 276342657,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1648046366
    },
    {
        "content": "<p>You have to work but none of this is really clear to me, and without examples the languages cited above Simone is unlikely to lead to consistent implantations.</p>\n<p>I think we ought to have a built-in default semantics for resolving references within Parameters -- or maybe a couple of different resolution methods that and operation definition can choose from .. but we should not force every mplementation guide to have define their own from scratch.</p>",
        "id": 276342977,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1648046466
    },
    {
        "content": "<p>That would indeed be very helpful!</p>",
        "id": 276348763,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1648048602
    },
    {
        "content": "<p>I asked for something formal and \"define it in your IG\" was the outcome of the discussion.</p>",
        "id": 276361208,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1648052929
    },
    {
        "content": "<p>I'd much rather have something formal that is considered \"best practice\" with the option to \"define it in your IG\" if you don't like it <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 277296062,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1648739483
    },
    {
        "content": "<p>I am currently trying to \"define it in my IG\" and I am quite uncertain about what \"best practice\" could be here.</p>\n<p>My idea would be to preferably use UUIDs with the referencing resource having <code>reference=\"urn:uuid:&lt;uuid&gt;</code> and the target resource having <code>id=\"&lt;uuid&gt;\"</code><br>\nNext best thing would be relative URLs with the referencing Resource having<code>reference=\"&lt;Resourcetype&gt;/&lt;id&gt;\"</code> and the target resource having <code>id=\"&lt;id&gt;\"</code><br>\nShould absolute URLs be allowed too?<br>\nWould it make sense to instead just generalize that \"the id part\" of the reference should match the id of the target and make no assumptions about the kind of URI thats used?<br>\nDo we have a common definition of what \"the id part\" of an URI is, considering the different shape and form of URLs and UUIDs?<br>\nWould it be simpler to allow <em>only</em> URLs since the id part could easily be populated with a UUID if the Client wants to assign temporary ids?</p>",
        "id": 277299323,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1648740770
    },
    {
        "content": "<p>What I've done is use relative references and indicated that the references are resolved within the context of the Parameters instance.  (Because I find UUIDs to be a pain.)</p>",
        "id": 277301315,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1648741581
    },
    {
        "content": "<p>I agree. The only argument I could make for UUIDs is that there is better alignment between Transaction and Operation.</p>",
        "id": 277422695,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1648821772
    }
]