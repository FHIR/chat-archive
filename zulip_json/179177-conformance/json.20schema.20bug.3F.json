[
    {
        "content": "<p>I believe there is a bug in the published JSON schema. <br>\nThe definitions of the <code>integer</code>,  <code>positiveInt</code>, and <code>unsignedInt</code> types all use the type of <code>number</code> from the json schema spec. I believe this should be <code>integer</code> instead. Here is the defnition of <code>integer</code> from the FHIR spec:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code>    <span class=\"s2\">\"integer\"</span><span class=\"err\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"pattern\"</span><span class=\"p\">:</span> <span class=\"s2\">\"^-?([0]|([1-9][0-9]*))$\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"number\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"A whole number\"</span>\n    <span class=\"p\">}</span><span class=\"err\">,</span>\n</code></pre></div>\n<p>Usage of the type <code>number</code> causes problems for tools that generate classes from the json schema in that the <code>number</code> type gets represented by floating point types.</p>\n<p>Any thoughts?</p>",
        "id": 219090153,
        "sender_full_name": "Jim Williams",
        "timestamp": 1607353344
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 219096470,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607356174
    },
    {
        "content": "<p>what's the defintion of an integer in JSON schema?</p>",
        "id": 219149625,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1607381320
    },
    {
        "content": "<p>6.25.  type</p>\n<p>The value of this keyword MUST be either a string or an array.  If it<br>\n   is an array, elements of the array MUST be strings and MUST be<br>\n   unique.</p>\n<p>String values MUST be one of the six primitive types (\"null\",<br>\n   \"boolean\", \"object\", \"array\", \"number\", or \"string\"), or \"integer\"<br>\n   which matches any number with a zero fractional part.</p>\n<p>An instance validates if and only if the instance is in any of the<br>\n   sets listed for this keyword.</p>\n<p>this is from <a href=\"https://tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.25\">https://tools.ietf.org/html/draft-wright-json-schema-validation-01#section-6.25</a>, which is the draft 6 version of the schema.</p>",
        "id": 219206673,
        "sender_full_name": "Jim Williams",
        "timestamp": 1607434565
    },
    {
        "content": "<p>Does it define what  the integer primitive type is somewhere?</p>",
        "id": 219210648,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1607436786
    },
    {
        "content": "<p>I cannot find any definition of an integer other than the description given above.</p>",
        "id": 219214965,
        "sender_full_name": "Jim Williams",
        "timestamp": 1607439041
    },
    {
        "content": "<p>I found <a href=\"http://json-schema.org/understanding-json-schema/reference/numeric.html\">this</a>, where it is stated (bolding is mine):</p>\n<blockquote>\n<p>The precise treatment of the “integer” type may depend on the implementation of your JSON Schema validator. <strong>JavaScript (and thus also JSON) does not have distinct types for integers and floating-point values. Therefore, JSON Schema can not use type alone to distinguish between integers and non-integers.</strong> The JSON Schema specification recommends, but does not require, that validators use the mathematical value to determine whether a number is an integer, and not the type alone. Therefore, there is some disagreement between validators on this point. For example, a JavaScript-based validator may accept 1.0 as an integer, whereas the Python-based jsonschema does not.</p>\n</blockquote>",
        "id": 219216695,
        "sender_full_name": "Vassil Peytchev",
        "timestamp": 1607439839
    },
    {
        "content": "<p>thanks. certain things about Json do not have a feel-good quality</p>",
        "id": 219262396,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1607461447
    }
]