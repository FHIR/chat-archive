[
    {
        "content": "<p>Michael and I spent some today at the Australian terminology connectathon working on ConceptMap</p>",
        "id": 153828421,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463555128
    },
    {
        "content": "<p>there's a very definite problem with ConceptMap related to size - we repeat system for both source and target codes every time. </p>",
        "id": 153828422,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463555190
    },
    {
        "content": "<p>if you have a map of 20000 elements.... this is pretty exorbitant. </p>",
        "id": 153828423,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463555206
    },
    {
        "content": "<p>we could sort this by grouping mappings into source/target system pairs</p>",
        "id": 153828424,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463555230
    },
    {
        "content": "<p>or we could define default source and target systems</p>",
        "id": 153828425,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463555239
    },
    {
        "content": "<p>either of these would make a large difference for large concept maps</p>",
        "id": 153828426,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463555251
    },
    {
        "content": "<p>or we could manifest the systems - give them codes, or even set up a prefix system for the codes </p>",
        "id": 153828427,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463555280
    },
    {
        "content": "<p>Further, I'd like to relax the rules for $translate and let the client just specify target system, not target value set. And no source valueset</p>",
        "id": 153828432,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463571000
    },
    {
        "content": "<p>That last point makes sense to me as much of the concept mapping we require in NZ is at the Code System, rather than Value Set, level.</p>",
        "id": 153828484,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1463606669
    },
    {
        "content": "<p>well, don't be so sure. You can map at the level of the code system by using the value set for the whole code system, but many maps are narrower in scope - we've mapped the codes we used, at our granularity. </p>",
        "id": 153828486,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463608512
    },
    {
        "content": "<p>what kind of maps do you have?</p>",
        "id": 153828487,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463608518
    },
    {
        "content": "<p>Read to SNOMED CT; NZMT to a SNOMED CT Extension (in design) and mapping between 3 versions/levels of Ethnicity coding. SNOMED CT to ICD-10-AM would be another if/when developed. There are plenty of others and Code System, rather than Value Set, is more commonly-used nomenclature in the NZ-specific terminologies.</p>",
        "id": 153828489,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1463609637
    },
    {
        "content": "<p>can you share any of these? </p>",
        "id": 153828496,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463611710
    },
    {
        "content": "<p>Alternatively, <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> proposes a csv format for concept map</p>",
        "id": 153828501,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463612355
    },
    {
        "content": "<p>any thoughts about that? </p>",
        "id": 153828502,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463612360
    },
    {
        "content": "<p>anyone interested in this can look at <a href=\"http://local.healthintersections.com.au:960/open/ConceptMap/3395ca80-a57d-4f2e-a158-4dbaad17fe\" target=\"_blank\" title=\"http://local.healthintersections.com.au:960/open/ConceptMap/3395ca80-a57d-4f2e-a158-4dbaad17fe\">http://local.healthintersections.com.au:960/open/ConceptMap/3395ca80-a57d-4f2e-a158-4dbaad17fe</a> to get a sense of the scale involved</p>",
        "id": 153828503,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463612411
    },
    {
        "content": "<p>The Read to SNOMED CT maps were developed in the UK by HSCIC (NHS Digital) and can be found at <a href=\"https://isd.hscic.gov.uk/trud3/user/guest/group/2/pack/9/subpack/9/releases\" target=\"_blank\" title=\"https://isd.hscic.gov.uk/trud3/user/guest/group/2/pack/9/subpack/9/releases\">https://isd.hscic.gov.uk/trud3/user/guest/group/2/pack/9/subpack/9/releases</a> (you need to register first). These are genuine SNOMED CT artifacts. The other stuff is under design/construction. That link appears to be broken, but much might depend on the size of the mapping exercise at hand - whether one is trying to do small numbers of translations in one exchange or passing the entire map to a client for local processing. In the later case, CSV might be preferable - but would there be a common structure within that format?</p>",
        "id": 153828507,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1463614169
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Anything further on the idea of default source/target systems or (my preference) grouping mappings into source/target pairs?</p>",
        "id": 153830446,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1464569873
    },
    {
        "content": "<p>no but let's push that along this week with the intent to provide a proposal for vocab call next week</p>",
        "id": 153830447,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464569971
    },
    {
        "content": "<p>we could:<br>\nA) group mappings into source/target system pairs<br>\nB) define default source and target systems<br>\nC) manifest the systems - give them codes<br>\nC.a) set up a prefix system for the codes and use a qname for the codes</p>",
        "id": 153830448,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464570117
    },
    {
        "content": "<p>The next Vocab call is a week from this Thursday (9th) - we had one this past Thursday</p>",
        "id": 153830450,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1464570208
    },
    {
        "content": "<p>which is best depends on whether we care to make product/dependsOn efficient as well</p>",
        "id": 153830451,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464570226
    },
    {
        "content": "<p>there's also my proposal: to change from ConceptMap.element.target.dependsOn.element : uri to ConceptMap.element.target.dependsOn.property : uri where property is a property defined in a code system resource (e.g. system#property)</p>",
        "id": 153830452,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464570356
    },
    {
        "content": "<p>A with a single group gives the \"same result\" as B (put another way, A is a generalisation of B) and A is also similar to the way ValueSet.compose.include works</p>",
        "id": 153830453,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1464570358
    },
    {
        "content": "<p>so A has an ordering implication that b doesn't have - under b, you can order the mappings anyway you like, but under A, you have to group them </p>",
        "id": 153830454,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464570412
    },
    {
        "content": "<p>So A is not a generalization of B, because it *defaults* (Unless you think A should involve defaults as well, which I didn't mean)</p>",
        "id": 153830455,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464570444
    },
    {
        "content": "<p>I assumed A meant each group has fixed source/target systems</p>",
        "id": 153830456,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1464570486
    },
    {
        "content": "<p>right. so it's different to B which involves defining *defaults* </p>",
        "id": 153830457,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464570508
    },
    {
        "content": "<p>A would be more efficient than B for mixed maps, but would impose order implications</p>",
        "id": 153830458,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464570535
    },
    {
        "content": "<p>C or D handle the dependsOn/product better</p>",
        "id": 153830459,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464570553
    },
    {
        "content": "<p>I don't understand where order comes in?  CM's don't have order AFAIK</p>",
        "id": 153830460,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1464570573
    },
    {
        "content": "<p>in the existing approach, you can order the mappings in any order you want. In (A) you have to firstly group by source/target, then you can map in any order you want </p>",
        "id": 153830461,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464570612
    },
    {
        "content": "<p>mm, then I would have A use defaults rather than fixed (so an individual element can override the system)</p>",
        "id": 153830462,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1464570710
    },
    {
        "content": "<p>that starts to sound pretty complicated to generate efficiently then. I can group stuff together by ther default, but then override...</p>",
        "id": 153830463,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464570764
    },
    {
        "content": "<p>So a single group can act exactly as the current approach does, but also with the addition of B-like defaulting</p>",
        "id": 153830464,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1464570777
    },
    {
        "content": "<p>The terminology server can re-org things (internally only) itself (make it all explicit, for example), if it needs efficiency / optimisation</p>",
        "id": 153830465,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1464570827
    },
    {
        "content": "<p>I still don't have a good handle on dependsOn to evaluate that, but I can see product also has potential verbosity</p>",
        "id": 153830466,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1464570948
    },
    {
        "content": "<p>well, they have very overlapping use cases. </p>",
        "id": 153830467,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464570983
    },
    {
        "content": "<p>How does C scale?  C.a (D) could probably be applied in many places, but I worry about it being like the XML namespace mess</p>",
        "id": 153830468,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1464571012
    },
    {
        "content": "<p>well, I think C.a is quite a bit more scoped that XML namespaces, so doesn't have the capacity to be quite as big a mess. But there's something to worry about, yes</p>",
        "id": 153830470,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464571080
    },
    {
        "content": "<p>as for how C scales - it's not so effective, because you still have to have system = [code] but code is much shorter than URL. but A and B are more efficient again for target and system</p>",
        "id": 153830471,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464571140
    },
    {
        "content": "<p>Not sure where we're landing with this?  B seems probably simplest, A is more flexible.  Not sure about C and C.a, but they would work.  Are you thinking of proposing all equally for discussion, or first state a preference?</p>",
        "id": 153830527,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1464613776
    },
    {
        "content": "<p>I'd like to take a single proposal to vocab</p>",
        "id": 153830528,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464613820
    },
    {
        "content": "<p>but we haven't landed anything.  I guess I should do some stats...</p>",
        "id": 153830529,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464613841
    },
    {
        "content": "<p>I agree it would be best to bring a single proposal</p>",
        "id": 153830532,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1464614124
    },
    {
        "content": "<p>to push this along a bit, I prepared a few examples, at <a href=\"http://www.healthintersections.com.au/conceptmap-alternatives.zip\" target=\"_blank\" title=\"http://www.healthintersections.com.au/conceptmap-alternatives.zip\">http://www.healthintersections.com.au/conceptmap-alternatives.zip</a></p>",
        "id": 153831340,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464904921
    },
    {
        "content": "<p>A) group mappings into source/target system pairs = 45% volume reduction<br>\nB) define default source and target systems = 45% volume reduction<br>\nC) manifest the systems - give them codes = 25% volume reduction<br>\nC.a) set up a prefix system for the codes and use a qname for the codes = 43% volume reduction</p>\n<p>defaulting the relationship to 'equivalent' - a further 14% volume reduction </p>",
        "id": 153831341,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464905222
    },
    {
        "content": "<p>that's in XML. JSON numbers would be similar</p>",
        "id": 153831342,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464905230
    },
    {
        "content": "<p>I prefer the prefix system, after seeing it in practice</p>",
        "id": 153831343,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464905254
    },
    {
        "content": "<p>so, I'd bring the following proposal to vocab:<br>\n- change ConceptMap.element.target.dependsOn.element to ConceptMap.element.target.dependsOn.property to remove the dependency that refers outside the terminology system<br>\n- introduce a prefix system to concept map to reduce the size of the final resource<br>\n- default the relationship to equivalent to reduce the size of the final resource</p>",
        "id": 153831344,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464905442
    },
    {
        "content": "<p>I think A and B work better for editing - that is, for my ConceptMap editor it would be much simpler to expose default source &amp; target systems in the UI than to clutter it with explicit ones for every code</p>",
        "id": 153831380,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1464914827
    },
    {
        "content": "<p>wouldn't all options be behind the UI? </p>",
        "id": 153831381,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464914871
    },
    {
        "content": "<p>With A, I can easily display a panel per group, with a source and target system field at the top, then a table of code-equiv-code mappings; much easier to read &amp; interpret &amp; is information-dense.<br>\nWith current and C, because ever row in the mapping table could have different source/target systems, I need to display/edit them there &amp; that consumes lots of screen realestate; information-sparse</p>",
        "id": 153831382,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1464915220
    },
    {
        "content": "<p>I think that you're saying that (A) is a useful constraint for authoring systems, and that it's better, from  a user pov, to group them, than to allow arbitrary order </p>",
        "id": 153831383,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464915303
    },
    {
        "content": "<p>so what would you do if you were importing a spreadsheet that contained mappings in arbitrary order with intermixed source/target?</p>",
        "id": 153831384,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464915335
    },
    {
        "content": "<p>Good question, and one we will natirally face.  I think we'd just auto-group them</p>",
        "id": 153831411,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1464925930
    },
    {
        "content": "<p>of course, you could just have a group for each. That would be as efficient as it is now </p>",
        "id": 153832086,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465423328
    },
    {
        "content": "<p>so the problem with grouping system/target is that it offers no efficiency for dependsOn/product maps. I guess we decide not to worry about that so much </p>",
        "id": 153832087,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465423381
    },
    {
        "content": "<p>One problem with the re-org of ConceptMap: you must nominate a system when you are saying 'unmatched' </p>",
        "id": 153832635,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465861141
    },
    {
        "content": "<p>That seems maybe okay - you're saying \"unmatched in this system\", but if there are multiple systems in play does that require you to make separate unmatched claims for each system?</p>",
        "id": 153832642,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1465862241
    },
    {
        "content": "<p>yes that's the problem</p>",
        "id": 153832644,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465862740
    },
    {
        "content": "<p>Regarding the vocab minutes - I would dispute that the common equivalence relationship is 'equivalent' -- in my experience with 'in the wild' maps, the much more common relationship is 'inexact'.</p>",
        "id": 153832647,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1465864943
    },
    {
        "content": "<p>re unmatched, what about a group with no default system?</p>",
        "id": 153832648,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1465864972
    },
    {
        "content": "<p>well, maybe. if you have no target system, can you have targets?</p>",
        "id": 153832661,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465870166
    },
    {
        "content": "<p>no, you can't, so all entries would be source-only.<br>\nhowever, I'm wondering about the use-case of recording that a target code is unmatched -- no source system (or code)</p>",
        "id": 153832675,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1465875908
    },
    {
        "content": "<p>I don't think we have that case</p>",
        "id": 153832678,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465876421
    },
    {
        "content": "<p>back to Concept Map - should we rename \"element\" to \"concept\" now that we scoped ConceptMap to terminologies?</p>",
        "id": 153832803,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465944551
    },
    {
        "content": "<p>So if I want to map Questionnaire's questions to a set of data elements, I'd need to use StructureMap?</p>",
        "id": 153832807,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1465945186
    },
    {
        "content": "<p>I'm not sure about that. I considered that when looking at this, and we've always said that the models  and data elements are a 'vocabulary'</p>",
        "id": 153832812,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465945498
    },
    {
        "content": "<p>further, we've said that if all you're doing is establishing equivalence, then you're mapping concepts, and so the faciliites that ConceptMap have are appropriate for that</p>",
        "id": 153832813,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465945530
    },
    {
        "content": "<p>but we could formalise that notion in the resource, or somewhere - that is, how to treat structure definitions and data elements as a code system</p>",
        "id": 153832814,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465945568
    },
    {
        "content": "<p>As we're mapping concepts, \"concept\" appears a better match, than \"element\", for a property that's described as the \"Mappings for a concept from the source set\".</p>",
        "id": 153832994,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1465977937
    },
    {
        "content": "<p>I'm not sure why you'd choose 'concept' - this is the actual mapping relationship which references the source and target concepts; I would be inclined to call it 'relationship'</p>",
        "id": 153833142,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1466040559
    },
    {
        "content": "<p>I'm also becoming concerned about the need to represent maps where the source / target is a (potentially large) set of concepts.  The use-case I see is one where the map represents some kind of aggregation. For example from a large ValueSet like all SNOMED Problem Diagnosis concepts to a small ValueSet that represents a dozen or so reporting categories.  e.g., I'd like to be able to say 'all members of ValueSet A' map to (narrower) 'Infectious Disease'</p>",
        "id": 153833149,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1466040953
    },
    {
        "content": "<p>how common is this? it sounds a little niche to me</p>",
        "id": 153833159,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466043541
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span>, maybe <code>mapping</code> would be preferable as the relationship is expressed in the <code>equivalence</code> property?</p>",
        "id": 153833277,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1466058513
    },
    {
        "content": "<p>The $closure operation cannot return specializes or generalizes, but only the less precise and potentially non-transitive equivalences: narrow and wider.<br>\nThis seems a pretty severe and less than helpful restriction.</p>",
        "id": 153833875,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1466484201
    },
    {
        "content": "<p>do you want to make a task to cahnge to the other 2 codes? That's how it's defined, so that would appear to be just an error</p>",
        "id": 153833964,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466550263
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> - I looked at this. I'm using specializes or generalizes, not narrow and wider. I can only think that this is an error in the spec - can you create a task for it? and use specializes or generalizes in our implementation</p>",
        "id": 153834614,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466722054
    },
    {
        "content": "<p>10232 and 10233 (regarding the extra doc in your blog post) created</p>",
        "id": 153834667,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1466727437
    },
    {
        "content": "<p>thx. I've upgraded my server to return a ConceptMap on creation. It should work - but maybe you were caught out by a rule on my public server - if you are not authorized via smart on fhir, the name must be a GUID</p>",
        "id": 153834759,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466738881
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> please test</p>",
        "id": 153834760,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466738892
    },
    {
        "content": "<p>/ConceptMap/$translate?source=http://snomed.info/sct?fhir_vs&amp;system=http://snomed.info/sct&amp;code=90260006&amp;target=http://hl7.org/fhir/ValueSet/substance-category<br>\nReturs a 500 - \"Unable to find concept map to use\" which should be a 4xx</p>",
        "id": 153835019,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1467003690
    },
    {
        "content": "<p>on my server?</p>",
        "id": 153835020,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467003726
    },
    {
        "content": "<p>yes<br>\nand a POST to /$closure gives me a \"Unknown operation /$closure\"</p>",
        "id": 153835021,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1467003778
    },
    {
        "content": "<p>post to /ConceptMap/$closure ?</p>",
        "id": 153835022,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467003797
    },
    {
        "content": "<p><a href=\"http://hl7-fhir.github.io/conceptmap-operations.html#closure\" target=\"_blank\" title=\"http://hl7-fhir.github.io/conceptmap-operations.html#closure\">http://hl7-fhir.github.io/conceptmap-operations.html#closure</a> says [base]/$closure</p>",
        "id": 153835023,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1467003835
    },
    {
        "content": "<p>If I POST to /ConceptMap/$closure I hit your business rule about naming</p>",
        "id": 153835024,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1467003891
    },
    {
        "content": "<p>well, so it does </p>",
        "id": 153835025,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467003894
    },
    {
        "content": "<p>ooh, I see you've added the grouping changes - will have to catch up to those now</p>",
        "id": 153835026,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1467004143
    },
    {
        "content": "<p>well I have in the current, yes, but that's not what we're using for the connectathon </p>",
        "id": 153835027,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467004333
    },
    {
        "content": "<p>?</p>",
        "id": 153835028,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467004338
    },
    {
        "content": "<p>that's right, but I'm hankering to improved the ConceptMap editing UI in Snapper and that's contingent on picking up these changes</p>",
        "id": 153835029,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1467004455
    },
    {
        "content": "<p>hah well, I'd rather go with the current version...</p>",
        "id": 153835030,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467004496
    },
    {
        "content": "<p>all right, I'll release and update shortly that moves the  $closure operation to the right place.</p>",
        "id": 153835031,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467004599
    },
    {
        "content": "<p>Which version are we using at the Connectathon?<br>\n(assuming you mean the NEHTA one on Monday)</p>",
        "id": 153835272,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1467073869
    },
    {
        "content": "<p>Tuesday - Ontoserver will be supporting the pre-grouping changes version of ConceptMap</p>",
        "id": 153835299,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1467075750
    },
    {
        "content": "<p>right 2016May version</p>",
        "id": 153835300,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467075762
    }
]