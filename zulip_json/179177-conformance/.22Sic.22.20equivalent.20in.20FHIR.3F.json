[
    {
        "content": "<p>Is there a more generic version of 'data absent reason' that can be used where values are present but cause a resource to fail validation?  Basically like <a href=\"https://en.wikipedia.org/wiki/Sic\">sic</a>, where an intermediary is given a resource that fails validation, and wants to signal that they didn't introduce the error and have no capacity to fix it.  I can imagine reasons why something like this could be a bad idea, or not useful in practice.  But I was wondering if it exists.</p>",
        "id": 210543151,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1600446155
    },
    {
        "content": "<p>There's no capability right now.  Technically, if you regurgitate an instance that's non-conformant, you're non-conformant, even if the cause is upstream.  Are you talking about profile validation issues or validation against the base resource?  For the former, you could just strip the profile declaration (if there is one).  For the latter, you might seriously consider not passing on the instance.</p>",
        "id": 210549507,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1600449439
    },
    {
        "content": "<p>I can see the reverse becoming a problem - say a patient is bringing in a record from outside the US, but the server wants to enforce US-Core... clinically, it is far better to have access to that information but it's not conformant with the profiles on the server.  What would be the correct/expected process?</p>",
        "id": 210551813,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1600450571
    },
    {
        "content": "<p>Well, if you have a client that depends on you only exposing US Core-conformant data, then it could well blow up if you share data that's non-conformant.  So it really comes down to your contract with your clients.  The options are \"I will comply with US Core for all data that I self-generate, but might not comply for data I relay from third parties\" (i.e. you can't count on U.S. core compliance on all my data, but there's a good chance of compliance for at least part of it), or \"I will only expose data that complies with US Core\" (i.e. I'll filter out anything I'm aware of from third parties or historical data that I can't find an automated way to make conformant).  Either of those behaviors could be appropriate, depending on the context.   To make matters more entertaining, some clients might want the first approach and some the second.  And Lord only knows what the regulators expect :)</p>",
        "id": 210552310,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1600450846
    },
    {
        "content": "<p>Lol, yep.  Probably just convert the JSON to a PDF and save a docref  ;-)</p>",
        "id": 210552481,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1600450933
    },
    {
        "content": "<p>The ideal solution might actually be two distinct endpoints - one that promises to only serve up US Core data and one that serves up \"what I've got\".  Clients can then hit one or the other.  The former could indeed choose to spit out PDFs for non-conformant content - presuming that there's a reasonable way to search for it.</p>",
        "id": 210552717,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1600451065
    },
    {
        "content": "<p>(And actually some clinical utility in having it)</p>",
        "id": 210552745,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1600451079
    },
    {
        "content": "<p>Could also be utility in including a warning with search response that non-conformant data exists that was filtered out or might not have been detected as part of the search when returning only conformant data.</p>",
        "id": 210552837,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1600451129
    },
    {
        "content": "<p>For some reason, that doesn't actually make me feel better.  <span aria-label=\"shrug\" class=\"emoji emoji-1f937\" role=\"img\" title=\"shrug\">:shrug:</span></p>",
        "id": 210552868,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1600451151
    },
    {
        "content": "<p>It'll be interesting to see if this becomes a (more than theoretical) problem.  I like your last note of warning about the existence non-conformant data.  Feels like it would be possible to add a param/header to return those records if they are wanted.</p>",
        "id": 210553195,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1600451286
    },
    {
        "content": "<p>I'd probably include it as an OperationOutcome with a warning</p>",
        "id": 210554343,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1600451867
    },
    {
        "content": "<p>Thanks, this is helpful.  So no 'sic' flag at an element level, but there are multiple reasonable ways to ensure your API is strictly conformant without completely burying technically non-conformant data.</p>",
        "id": 210560592,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1600454928
    }
]