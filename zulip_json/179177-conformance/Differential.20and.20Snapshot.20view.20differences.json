[
    {
        "content": "<p>I'm noticing in the DSTU2 line that when I build a profile that has constraints on meta that only meta shows up in the differential, they don't show up in the snapshot, and that my mappings don't show up in the Mapping table either.  It's like these constraints have disappeared, possibly because they don't appear directly within the resource, only in Resource or DomainResource.  Is it too much to hope for a fix in the build tools to correct this for building a profile from the DSTU2 line?</p>",
        "id": 153833266,
        "sender_full_name": "Keith Boone",
        "timestamp": 1466057931
    },
    {
        "content": "<p>If this is with forge, there is a menu option to include these too.<br>\nLook under the options menu in the FHIR Options, last 3 items (save ... and show ...)</p>",
        "id": 153833270,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1466058080
    },
    {
        "content": "<p>I'm sure Michel will correct me if I'm mistaken when the timezone moves to them.</p>",
        "id": 153833271,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1466058106
    },
    {
        "content": "<p>Not with Forge, but with FHIR build tools, unfortunately.  Also noted that detailed descriptions are missing in these cases as well in the Profile output.</p>",
        "id": 153833278,
        "sender_full_name": "Keith Boone",
        "timestamp": 1466058756
    },
    {
        "content": "<p>Can't help there unfortunately.</p>",
        "id": 153833279,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1466059114
    },
    {
        "content": "<p>is this anywhere I can run it?</p>",
        "id": 153833280,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466059154
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191387\">@Keith Boone</span> Grahame just gave me a patch for a similar issue I had on the May2016 release.  If you authored the profiles with Forge, they were spitting elements out in the wrong order - and the snapshot wasn't being generated correctly.</p>",
        "id": 153833411,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1466127541
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> does this bug still exist in Forge? I'm aware that snapshot generation needs some work. But I'm surprised and a bit worried about the apparently incorrect order of elements. Can you describe steps to reproduce?</p>",
        "id": 153833436,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1466158028
    },
    {
        "content": "<p>It was the dfferential that was out of order</p>",
        "id": 153833437,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466158069
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> do you know the specific element(s) that are out of order? Keith mentions constraints on meta.</p>",
        "id": 153833439,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1466160931
    },
    {
        "content": "<p>Keith didn't say it was out of order, and I don't know whether it is </p>",
        "id": 153833440,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466160966
    },
    {
        "content": "<p>but Keith is not using forge anyway</p>",
        "id": 153833441,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466160979
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> do you know how to reproduce this issue?</p>",
        "id": 153833442,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1466161066
    },
    {
        "content": "<p>I have noticed another difference between snapshot and differential list in (DSTU2) profile-resources. For backbone elements in core resource definitions, the element type is defined in the snapshot, but is missing from the differential. For example ValueSet.contact:</p>\n<p>Snapshot:</p>\n<div class=\"codehilite\"><pre>&lt;element&gt;\n  &lt;path value=&quot;ValueSet.contact&quot;/&gt;\n  &lt;short value=&quot;Contact details of the publisher&quot;/&gt;\n  &lt;definition value=&quot;Contacts to assist a user in finding and communicating with the publisher.&quot;/&gt;\n  &lt;comments value=&quot;May be a web site, an email address, a telephone number, etc.&quot;/&gt;\n  &lt;min value=&quot;0&quot;/&gt;\n  &lt;max value=&quot;*&quot;/&gt;\n  &lt;type&gt;\n    &lt;code value=&quot;BackboneElement&quot;/&gt;\n  &lt;/type&gt;\n  &lt;isSummary value=&quot;true&quot;/&gt;\n&lt;/element&gt;\n</pre></div>\n\n\n<p>Differential:</p>\n<div class=\"codehilite\"><pre>&lt;element&gt;\n  &lt;path value=&quot;ValueSet.contact&quot;/&gt;\n  &lt;short value=&quot;Contact details of the publisher&quot;/&gt;\n  &lt;definition value=&quot;Contacts to assist a user in finding and communicating with the publisher.&quot;/&gt;\n  &lt;comments value=&quot;May be a web site, an email address, a telephone number, etc.&quot;/&gt;\n  &lt;min value=&quot;0&quot;/&gt;\n  &lt;max value=&quot;*&quot;/&gt;\n  &lt;isSummary value=&quot;true&quot;/&gt;\n&lt;/element&gt;\n</pre></div>\n\n\n<p>In Forge, I handle this via a special preprocessing step that copies missing element types from snapshot to differential.</p>\n<p>Is this difference by design?</p>",
        "id": 153833444,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1466162072
    },
    {
        "content": "<p>It was one of the items I sent to you.  \"id\" was showing up after \"extension\".</p>",
        "id": 153833458,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1466167557
    },
    {
        "content": "<p>why do you copy types to the differentials? </p>",
        "id": 153833489,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466169679
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Forge needs the element type info in the differential, because of how the application logic is structured. So if the element type is missing from the differential, the application resolves it from the snapshot. This all works fine, but I was just wondering why element types are missing from the differential for Backbone elements in core resource definitions. Is this by design?</p>",
        "id": 153833490,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1466170381
    },
    {
        "content": "<p>I never populate the types in the differentials unless the user makes a change to the types</p>",
        "id": 153833491,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466170446
    },
    {
        "content": "<p>Naturally. But for core resource definitions, all the element definitions describe new elements (not constraints on base resource), so I would expect differential to be identical to snapshot (excluding elements inherited from Resource or DomainResource).</p>",
        "id": 153833492,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1466171111
    },
    {
        "content": "<p>Conceptually, the core resource definitions introduce new elements. So I would expect the element definitions to be fully expanded in the differential.</p>",
        "id": 153833493,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1466171173
    },
    {
        "content": "<p>oh yes. you're right</p>",
        "id": 153833495,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466172285
    },
    {
        "content": "<p>you're editing specializations in forge?</p>",
        "id": 153833496,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1466172320
    },
    {
        "content": "<p>Yes, in Forge you create specializations. But internally Forge resolves the associated (core) base resource from profiles-resources.xml.</p>",
        "id": 153833498,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1466172664
    },
    {
        "content": "<p>Anyway Forge doesn't strictly needs this, because it can resolve the missing type info from the snapshot. But it just seemed a bit strange/arbitrary to me that the differentials in profiles-resources.xml are missing element type info for backbone elements.</p>",
        "id": 153833500,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1466172858
    }
]