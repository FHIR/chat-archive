[
    {
        "content": "<p>question to the professors: If I have a profiled Observation and I slice the Observation.component to have eg. 2 slices what does it then mean to set cardinality to 1..1 on Observation.component. Does it mean that both slices should be present or does it mean that only one of the slices should be present. Bonus question nr. 1: What if cardinality on my slices is 0..0. Is it then a valid profile if it is close-ended?</p>",
        "id": 153922042,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1511961426
    },
    {
        "content": "<p>If you have multiple slices and the slicing Observation.component is 1..1 it means that exactly one of the slices must be satisfied.  A cardinality of 0..0 on a slice would be a way of enforcing \"can't have anything that looks like this one\".  I've never seen that done, but in theory it should work.  If you set things up where an element is mandatory and is sliced and closed and the slices defined don't allow the cardinality to be satisfied, then you've just created a profile that can't be satisfied.  (There's numerous creative ways of doing that, typically with invariants.)</p>",
        "id": 153922100,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1511973619
    },
    {
        "content": "<p>As expected (on the first part of the question) - however some of the implemented validators tend to have another interpretation</p>",
        "id": 153922688,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1512250886
    },
    {
        "content": "<p>Which validators?</p>",
        "id": 153922691,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1512265107
    },
    {
        "content": "<p>And what are they doing?</p>",
        "id": 153922692,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1512265115
    },
    {
        "content": "<p>Back to the first question - so for instance this profile: <a href=\"https://simplifier.net/eSundhed2017Hackatho/DAS28Observation\" target=\"_blank\" title=\"https://simplifier.net/eSundhed2017Hackatho/DAS28Observation\">https://simplifier.net/eSundhed2017Hackatho/DAS28Observation</a> - Observation.component is set to 4..4. This profile also has 4 slices. From what I can understand from you, that would mean that at least one of the slices should be satisfied - and that should be the case 4 times. It could mean that one of the slices would be represented four times or one slice once, and then another slice three times, Is that correct?</p>",
        "id": 153922727,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1512343224
    },
    {
        "content": "<p>If the slicing is closed, then there must be exactly 4 repetitions and each of those repetitions must satisfy one of the 4 slices - whether that's one for each slice, all satisfying a single slice, 2 of one and 1 each of two others or any other combination doesn't matter.</p>",
        "id": 153922729,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1512346403
    },
    {
        "content": "<p>In this particular case (<a href=\"https://simplifier.net/eSundhed2017Hackatho/DAS28Observation\" target=\"_blank\" title=\"https://simplifier.net/eSundhed2017Hackatho/DAS28Observation\">https://simplifier.net/eSundhed2017Hackatho/DAS28Observation</a>) - the slice is open-ended. What I actually would like to express is that a resource MUST express all four slices, more are welcome (hence, no need to be closed-ended) but all four should be present. So would a 4..* on Observation.component and 1..1 on each slice do the job?</p>",
        "id": 153922749,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1512376259
    },
    {
        "content": "<p>Note the specific profile is just mentioned as an example</p>",
        "id": 153922750,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1512377398
    },
    {
        "content": "<p>Setting minOccurs on each slice will trigger an error if you don't have at least one matching repetition for that slice.  No need to do the 4..*, though doing so can make things a bit clearer.</p>",
        "id": 153922776,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1512397325
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span>, for a resource instance to validate against a profile, the instance should conform to all constraints specified by the profile. For slices, this implies that the validator will verify constraints on the slice entry as well as on the individual slices. So e.g. if the slice entry is mandatory (1...1) and all slices are optional (0...1), then a conforming instance should specify exactly one valid option.<br>\nAnd yes, this also implies that you can author a (valid) profile with conflicting constraints to which no resource instance can ever match. Just like you can create a valid SQL statement that always returns 0 rows (SELECT ... WHERE 1=0). For example, slice entry 1...1 with two concrete mandatory slices (1...1).</p>",
        "id": 153922777,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1512397711
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> &amp; <span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> thx guys</p>",
        "id": 153922822,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1512413462
    }
]