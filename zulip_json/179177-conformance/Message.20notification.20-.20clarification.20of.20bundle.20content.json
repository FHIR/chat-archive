[
    {
        "content": "<p>I am looking to implement a notification message for \"the patient has arrived for his appointment\" which is determined as a value of the appointment.<br>\nOur server already implements a FHIR appointment endpoint but does not support version-reads (vreads).<br>\nThe receiving system is yet pretty unspecified so we have the possibility to state how we want it, and we want to do it in a FHIR-fashion.<br>\nDue to the lack of vread we also need to include actual appointment resource (and not just a version-specific reference to it).<br>\nWe also know that the receiving system would be interested in the business identifiers of the patient of the appointment.<br>\nThe message will be sent synchronously from our system but handled asynchronously from the user action (so process time is not that important).</p>\n<p>I am uncertain whether a REST-subscription or a notification message is the better choice:<br>\nUsing subscription:<br>\nWe could use the subscription pattern (<a href=\"https://www.hl7.org/fhir/subscription.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/subscription.html\">https://www.hl7.org/fhir/subscription.html</a>) with a REST Hook sending an update (PUT) appointment message for every patient-arrived event. The receiving system would subsequently need to read the patient to get the business identifiers (a step I would like to be without).<br>\nUsing messaging:<br>\nWe could POST a notification message using a synchronous $process-message. The message would contain a reference to the appointment as messageheader.data (Messageheader should be the first resource in the bundle). I am uncertain if it is within the standard to include the actual appointment-resource as the second resource, and its patient as the third.<br>\nI can only see this subject mention in the comment of the description of messageHeader.data (<a href=\"https://www.hl7.org/fhir/messageheader-definitions.html#MessageHeader.data\" target=\"_blank\" title=\"https://www.hl7.org/fhir/messageheader-definitions.html#MessageHeader.data\">https://www.hl7.org/fhir/messageheader-definitions.html#MessageHeader.data</a>).<br>\n\"<br>\nThe data is defined where the transaction type is defined. The transaction data is always included in the bundle that is the full message. Only the root resource is specified. The resources it references should be contained in the bundle but are not also listed here. Multiple repetitions are allowed to cater for merges and other situations with multiple focal targets.<br>\n\"<br>\nThe question for you (sorry for the long introduction):<br>\nConcerning \"The resources it references should be contained in the bundle but are not also listed here\": Is it really expected to include all referenced objects of the appointment?<br>\n(and any comments in respect to choosing between subscription-REST and messaging are also welcome)</p>",
        "id": 153845212,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1472194474
    },
    {
        "content": "<p>did just change include a \"not\" in part of the 2. sentence from  \"but does support\" to  \"but does not support\" :-)</p>",
        "id": 153845217,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1472200540
    },
    {
        "content": "<p>well ... subscription-REST puts the responsibility on the subscriber to what the subscriber is interested in... it is the most dynamic approach for both parts as the criteria may vary from time to time and be arbitrary complex</p>",
        "id": 153845218,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1472201022
    },
    {
        "content": "<p>notification message sounds a bit more static as the content would be spec'ed up front</p>",
        "id": 153845219,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1472201428
    },
    {
        "content": "<p>and entirely controlled by the sender</p>",
        "id": 153845220,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1472201546
    },
    {
        "content": "<p>true, the subscription-REST makes it possible for the reciever to specify a different appointment ressource than the one we have - the 2 appointments still have to be compatible though.<br>\nI didn't address the \"what should trigger the event\"-part. Subscription also has the message-channel which offer the same possiblity for the receiver to specify a criteria. Still nothing comes out of the box - the sender still has be able to support the criteria (maybe it does, maybe it doesn't)</p>",
        "id": 153845221,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1472202298
    },
    {
        "content": "<p>there's 2 different questions here - how do you decide to notify, and how do you notify?</p>",
        "id": 153845235,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472211224
    },
    {
        "content": "<p>you can use messaging with subscription - subscription specifies when to notify, and to use messaging. </p>",
        "id": 153845236,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472211244
    },
    {
        "content": "<p>or you can make some other (hard coded) way to trigger, and notify using either approach</p>",
        "id": 153845238,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472211269
    },
    {
        "content": "<p>my take was that this was a messaging use case - you should define a message code that descibes the event and package, and use the message framework </p>",
        "id": 153845239,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472211304
    },
    {
        "content": "<p>Yes, my request for comments was not in respect to \"what should trigger the event\" but merely  on how to notify.<br>\nGrahame, thx for the vote for \"messaging\". I would like to hear some thoughts on why subscription isn't the right choice, there is clearly an overlap in functionality. <br>\nAnd still there is my question: Is it really expected (mandatory) to include all referenced objects of the appointment?</p>",
        "id": 153845259,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1472216464
    },
    {
        "content": "<p>subscription is about the initiation of the contact. You can specify to use messaging, or not, when you use subscription. </p>",
        "id": 153845283,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472242606
    },
    {
        "content": "<p>as for aggregation, there's no fixed policy, because requirements will vary</p>",
        "id": 153845284,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472242624
    },
    {
        "content": "<p>sorry - my question was not precise. A better version of it: why wouldn't you consider notifaction via the REST-API (by doing a PUT appointment - <a href=\"https://www.hl7.org/fhir/subscription.html#6.14.6.1\" target=\"_blank\" title=\"https://www.hl7.org/fhir/subscription.html#6.14.6.1\">https://www.hl7.org/fhir/subscription.html#6.14.6.1</a>), the right choice?</p>",
        "id": 153845337,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1472420375
    },
    {
        "content": "<p>for me, a REST API notification implies a fairly tight binding between the systems, where as the questions around packaging and aggregation imply that the relationship is not that tight, and you need some workflow to manage the interaction.</p>",
        "id": 153845341,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472424319
    },
    {
        "content": "<p>this points me towards messaging, though it's not a strong feeling, and there would be other considerations,</p>",
        "id": 153845342,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1472424339
    },
    {
        "content": "<p>thank you (I am leaning towards messaging as well)</p>",
        "id": 153845376,
        "sender_full_name": "Allan Bro Hansen",
        "timestamp": 1472456979
    }
]