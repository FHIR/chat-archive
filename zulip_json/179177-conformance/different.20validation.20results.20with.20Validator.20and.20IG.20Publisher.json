[
    {
        "content": "<p>I don't recall this being an issue in the past (maybe a few weeks or months ago), but more recently I'm seeing significantly different validation behavior with the Validator compared to the IG Publisher.  I'm mostly doing this by validating against in IG (IPS in this case) or both an IG and a specific profile in the IG vs. building the IG itself.  It's particularly noticeable for StructureDefinition files, but I think also occurs for example resource instances.  Typically the validator will report \"Success...\", often with 0 errors, warnings or info, but when I build the IG the qa reports one or more errors, warnings or info messages for that item that weren't present in the validator output.  I'm not sure why that should be the case (and, as I said, my recollection is that it wasn't always the case) - and, most importantly, is there an explanation and a general way to understand the difference in the behavior and then ultimately a strategy to respond to it and reliably manage the issues?</p>",
        "id": 186577768,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1579967085
    },
    {
        "content": "<p>I can post specific example(s) if needed to help investigate this.</p>",
        "id": 186577787,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1579967144
    },
    {
        "content": "<p>There's 2 areas where there might be differences - structure definitions, where the validator just tries to make them work, where as the IG publisher is more aggressive at validating them, and resolving references, where the IG publisher is able to do a better job within the IG itself. I can't think of any other reason for a difference</p>",
        "id": 186585799,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1579981162
    },
    {
        "content": "<p>I think it's the former - \"where the validator just tries to make them work, where as the IG publisher is more aggressive at validating them\".  But I guess I'm not sure of of the rationale for making them different?  Effectively, that means that I can't really rely on the validator for anything (other than an initial quick spot check) - I have to build the IG for each and every change (if there is any reason to think that the change could be substantive at all) in order to know that it's correct.  I realize that there could be some differences that must exist between standalone validation of an instance vs. building an entire IG as a unit.  But, regardless of that, why not allow the validator to be as complete and \"aggressive\" as it could be - or at least make that a switchable option?</p>",
        "id": 186587287,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1579983917
    },
    {
        "content": "<p>there are plenty of released profiles that don't conform to the existing quality standards. So when people use the validator, they don't want the internal validation infrastructure to fail when they try to use the profiles. And most of the errors you are referring to don't arise when validating the profile, they arise when trying to use the profile to validate instances. I can't imagine these errors into existence, so they can't arise when validating a structure definition directly.</p>",
        "id": 186589207,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1579987387
    }
]