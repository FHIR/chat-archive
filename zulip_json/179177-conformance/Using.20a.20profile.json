[
    {
        "content": "<p>After defining a profile on composition, called \"catalog\", can i POST/PUT a [base]/catalog resource? What are the steps?</p>",
        "id": 153921403,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1511504004
    },
    {
        "content": "<p>No.  Profiling doesn't change what endpoints exist.  You could POST/PUT to Composition instances that happen to be valid against your profile, and you could query for Compositions that happen to be tagged as (theoretically) complying with the catalog profile, but that's all.</p>",
        "id": 153921481,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1511532240
    },
    {
        "content": "<p>technically ... you can. But as stated on <a href=\"https://www.hl7.org/fhir/basic.html#why\" target=\"_blank\" title=\"https://www.hl7.org/fhir/basic.html#why\">https://www.hl7.org/fhir/basic.html#why</a> - its not part of the standard</p>",
        "id": 153921483,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1511532571
    },
    {
        "content": "<p>You also have a risk of colliding with some future version of the standard.</p>",
        "id": 153921485,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1511532694
    },
    {
        "content": "<p>Ok , so next question: wouldn't it be nice to some mechanism like that ? an Alias that points to a profile, and is validated accordingly...?</p>",
        "id": 153922015,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1511951052
    },
    {
        "content": "<p>to address the risk of the forward compatibility (thanks), we could have [base]/profile/catalog<br>\nwhere profile is literal or has some naming convention to avoid the issue</p>",
        "id": 153922022,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1511951897
    },
    {
        "content": "<p>People generally have to write code if they're going to support a new endpoint.  The standard tells them what code to write for the resources.  If people can define whatever endpoints they like, we lose interoperability.  There's no need for profile-specific endpoints as the resource-specific endpoints should be able to handle whatever data you might need to throw at them and the query parameters let you filter when needed.</p>",
        "id": 153922078,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1511970588
    },
    {
        "content": "<p>i am assuming that in a given server we may have different profiles on a same resource.</p>",
        "id": 153922080,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1511970640
    },
    {
        "content": "<p>e.g. there may be 2 types of medicationRequest - one for prescriptions, one for instance orders</p>",
        "id": 153922081,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1511970663
    },
    {
        "content": "<p>Sure.  But those get handled with a single endpoint and differentiated by query filters if necessary.</p>",
        "id": 153922097,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1511973444
    }
]