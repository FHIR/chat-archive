[
    {
        "content": "<p>I have a package (<a href=\"https://registry.fhir.org/package/ca.infoway.io.psca|0.0.4\">https://registry.fhir.org/package/ca.infoway.io.psca|0.0.4</a>) that doesn't include a <code>.index.json</code> file (Simplifier doesn't appear to create it/include it in their packages). As a result, the Inferno Validator fails to let me load it under their \"advanced options\", upload a package.tgz.</p>\n<p>Is this a Simplifier issue or Inferno issue, or something I need to resolve? <span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span> <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> (?)</p>",
        "id": 271915089,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1644888961
    },
    {
        "content": "<p>it crertainly shouldn't matter - the .index.json file is supposed to be created on install if it doesn't already exist</p>",
        "id": 271916628,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1644890309
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><code>validator_service_1   |   Load /tmp/package7310020127249781383.tgz - 45 resources (00:42.0684)\nvalidator_service_1   | 2022-02-15 03:21:14 ERROR GeneralError:55 -\nvalidator_service_1   | java.io.IOException: Unable to find the file package/.index.json in the package ca.infoway.io.psca\nvalidator_service_1   |     at org.hl7.fhir.utilities.npm.NpmPackage.load(NpmPackage.java:668)\nvalidator_service_1   |     at org.hl7.fhir.utilities.npm.NpmPackage.load(NpmPackage.java:650)\nvalidator_service_1   |     at org.mitre.inferno.rest.IgResponse.fromPackage(IgResponse.java:42)\nvalidator_service_1   |     at org.mitre.inferno.Validator.loadPackage(Validator.java:227)\nvalidator_service_1   |     at org.mitre.inferno.rest.ValidatorEndpoint.lambda$createRoutes$6(ValidatorEndpoint.java:62)\nvalidator_service_1   |     at spark.ResponseTransformerRouteImpl$1.handle(ResponseTransformerRouteImpl.java:47)\nvalidator_service_1   |     at spark.http.matching.Routes.execute(Routes.java:61)\nvalidator_service_1   |     at spark.http.matching.MatcherFilter.doFilter(MatcherFilter.java:134)\nvalidator_service_1   |     at spark.embeddedserver.jetty.JettyHandler.doHandle(JettyHandler.java:50)\nvalidator_service_1   |     at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1671)\nvalidator_service_1   |     at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)\nvalidator_service_1   |     at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\nvalidator_service_1   |     at org.eclipse.jetty.server.Server.handle(Server.java:505)\nvalidator_service_1   |     at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:370)\nvalidator_service_1   |     at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:267)\nvalidator_service_1   |     at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)\nvalidator_service_1   |     at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)\nvalidator_service_1   |     at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)\nvalidator_service_1   |     at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)\nvalidator_service_1   |     at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)\nvalidator_service_1   |     at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)\nvalidator_service_1   |     at org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)\nvalidator_service_1   |     at org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)\nvalidator_service_1   |     at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:698)\nvalidator_service_1   |     at org.eclipse.jetty.util.thread.QueuedThreadPool$Runner.run(QueuedThreadPool.java:804)\nvalidator_service_1   |     at java.base/java.lang.Thread.run(Thread.java:829)\nvalidator_service_1   | 2022-02-15 03:21:14 INFO  App:28 - 172.18.0.1 - - [15/Feb/2022:03:20:49 +0000] &quot;POST /igs HTTP/1.1&quot; 500 60 &quot;http://localhost/validator/&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/15.2 Safari/605.1.15&quot;\n</code></pre></div>",
        "id": 271921690,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1644895391
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span> You might want to also post this on the inferno stream?</p>",
        "id": 271928744,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1644902535
    },
    {
        "content": "<p>Sure, I didn't know we had one.</p>",
        "id": 271928968,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1644902806
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191380\">Elliot Silver</span> <a href=\"#narrow/stream/179177-conformance/topic/Inferno.2FSimplifier.20issue/near/271915089\">said</a>:</p>\n<blockquote>\n<p>I have a package (<a href=\"https://registry.fhir.org/package/ca.infoway.io.psca|0.0.4\">https://registry.fhir.org/package/ca.infoway.io.psca|0.0.4</a>) that doesn't include a <code>.index.json</code> file (Simplifier doesn't appear to create it/include it in their packages). As a result, the Inferno Validator fails to let me load it under their \"advanced options\", upload a package.tgz.</p>\n<p>Is this a Simplifier issue or Inferno issue, or something I need to resolve? <span class=\"user-mention silent\" data-user-id=\"203235\">Ward Weistra</span> <span class=\"user-mention silent\" data-user-id=\"191405\">Rob Hausam</span> (?)</p>\n</blockquote>\n<p>I have the same issue -  .index.json file is missing from the Simplifier package, did you manage to figure out this <span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span> ?</p>",
        "id": 272331559,
        "sender_full_name": "Ramandeep Dhanoa",
        "timestamp": 1645135897
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"214174\">@Ramandeep Dhanoa</span>, No, I don't have a solution. I raised it on <a class=\"stream\" data-stream-id=\"179309\" href=\"/#narrow/stream/179309-inferno\">#inferno</a>, and it sounds like addressing it isn't a priority for the Inferno team. </p>\n<p>I'm hopeful that Firely can do something on the Simplifier side to add the file to new packages; but, unless Inferno fixes their issue, or Simplifier somehow patches existing packages (which I'm pretty sure they won't do), anyone who is trying to validate against an IG built in Simplifier will need to look for another product.</p>",
        "id": 272333152,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1645136616
    },
    {
        "content": "<p>I don't follow. what is it you can't do?</p>",
        "id": 272337563,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1645139307
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> , is that to me? If so: Upload my package to the Inferno validator. This appears to be because my package doesn't have .index.json files.</p>",
        "id": 272337746,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1645139449
    },
    {
        "content": "<p>and it's from simplifier?</p>",
        "id": 272339209,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1645140501
    },
    {
        "content": "<p>right now, you can use the validator to install the package, or point the validator to the package once it's installed. Then the install package will have a .index.json file. Then just repackage the directory out of the cache as a .tgz file, and upload that</p>",
        "id": 272339286,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1645140557
    },
    {
        "content": "<p>a bit messy, but it'll work</p>",
        "id": 272339300,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1645140563
    },
    {
        "content": "<p>Yes, it's from simplifier. </p>\n<p>I did try that. If I recall correctly, I then learned that Inferno rejects the package if it isn't called \"package.tgz.\"</p>",
        "id": 272339612,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1645140761
    },
    {
        "content": "<p>well, call it package.tgz then. That's a name you choose</p>",
        "id": 272341396,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1645142086
    },
    {
        "content": "<p>So that works, with only a little mangling. I think I stopped pursuing that approach once I figured no only do I need to go through the process, but everyone else who validates against the our IG might have to also. But it does appear to work.</p>",
        "id": 272343954,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1645143939
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179177-conformance/topic/Inferno.2FSimplifier.20issue/near/272339286\">said</a>:</p>\n<blockquote>\n<p>right now, you can use the validator to install the package, or point the validator to the package once it's installed. Then the install package will have a .index.json file. Then just repackage the directory out of the cache as a .tgz file, and upload that</p>\n</blockquote>\n<p>That works. Thanks <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> !</p>",
        "id": 272359318,
        "sender_full_name": "Ramandeep Dhanoa",
        "timestamp": 1645158376
    }
]