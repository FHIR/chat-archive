[
    {
        "content": "<p>We define <a href=\"https://fhir.ch/ig/ch-epr-term/ValueSet-DocumentEntry.typeCode.html\" target=\"_blank\" title=\"https://fhir.ch/ig/ch-epr-term/ValueSet-DocumentEntry.typeCode.html\">ValueSets</a> which contain a finite list of SNOMED CT codes and and additional codes from an other CodeSystem. We defined them via compose even though it is a list of fixed codes because we have designations for the different languages. We bind this ValueSet to a profiled DocumentReference (see <a href=\"https://github.com/hl7ch/ch-epr-term/blob/testing/examples/documentreference/Docu.xml\" target=\"_blank\" title=\"https://github.com/hl7ch/ch-epr-term/blob/testing/examples/documentreference/Docu.xml\">example</a>). </p>\n<p>The Java Validator/IG Publisher <a href=\"http://build.fhir.org/ig/hl7ch/ch-epr-term/branches/testing/qa.html\" target=\"_blank\" title=\"http://build.fhir.org/ig/hl7ch/ch-epr-term/branches/testing/qa.html\">fails</a> for this examples with the message:</p>\n<div class=\"codehilite\"><pre><span></span>None of the codes provided are in the value set http://fhir.ch/ig/ch-epr-term/ValueSet/DocumentEntry.typeCode (http://fhir.ch/ig/ch-epr-term/ValueSet/DocumentEntry.typeCode, and a code from this value set is required) (codes = http://snomed.info/sct#371532007)\n</pre></div>\n\n\n<p>A first analysis revealed that the Validator does not validate the code locally with the provided ValueSet because the code is from SNOMED CT which is not a complete CodeSystem. In the next step the Validator then sends the ValueSet together with the code to <a href=\"http://tx.fhir.org\" target=\"_blank\" title=\"http://tx.fhir.org\">tx.fhir.org</a>. This <a href=\"http://build.fhir.org/ig/hl7ch/ch-epr-term/branches/testing/qa-tx.html#l25\" target=\"_blank\" title=\"http://build.fhir.org/ig/hl7ch/ch-epr-term/branches/testing/qa-tx.html#l25\">fails</a> now because the <a href=\"https://fhir.ch/ig/ch-epr-term/CodeSystem-2.16.756.5.30.1.127.3.4.html\" target=\"_blank\" title=\"https://fhir.ch/ig/ch-epr-term/CodeSystem-2.16.756.5.30.1.127.3.4.html\">second code system</a> is not known to <a href=\"http://tx.fhir.org\" target=\"_blank\" title=\"http://tx.fhir.org\">tx.fhir.org</a> (it is defined currently only in our implementation guide).</p>\n<p>This leads to three questions I would happy to get some feedback:<br>\n- is our approach correct with defining ValueSets with compose or should we provide already expanded ValueSets in our Implementation Guide?<br>\n- could the validation logic be extend, that if  a code can be validated within a ValueSet event though it is not a complete CodeSystem so that the code does not need to be validated with <a href=\"http://tx.fhir.org\" target=\"_blank\" title=\"http://tx.fhir.org\">tx.fhir.org</a>? (This would not work in all cases would be more an optimization)? if yes, we would start to work on a pull request<br>\n- can also a local code system be supplied to <a href=\"http://tx.fhir.org\" target=\"_blank\" title=\"http://tx.fhir.org\">tx.fhir.org</a> (inlined in the ValueSet)?</p>",
        "id": 183139357,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1576056035
    },
    {
        "content": "<p>your approach is fine. can we turn this into a concise test case?</p>",
        "id": 183145205,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576061325
    },
    {
        "content": "<p>though when I look at your value sets.. that's not how snomed extensions work...</p>",
        "id": 183145309,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576061402
    },
    {
        "content": "<blockquote>\n<p>though when I look at your value sets.. that's not how snomed extensions work...</p>\n</blockquote>\n<p>thanks,  this needs to be addressed by our snomed national release center, they have just started the process, I will put it on the agenda, i see them this afternoon</p>",
        "id": 183145922,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1576061903
    },
    {
        "content": "<blockquote>\n<p>your approach is fine. can we turn this into a concise test case?</p>\n</blockquote>\n<p>leaving the snomed extension discussion aside, where would be the place to start with testcases for validator/terminology server? fhir-test-cases/validator?</p>",
        "id": 183146237,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1576062162
    },
    {
        "content": "<p>yes. but this time I've added it - your profiles etc were nice and small</p>",
        "id": 183146272,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576062220
    },
    {
        "content": "<p>I think that the right approach s that L349 and L72 of ValueSetCheckerSImple, instead of throwing an exception when the code system is not supported, that's when you consult the terminology server, for just that include. it happens elsewhere like that, so not sure why not here</p>",
        "id": 183149326,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576064917
    },
    {
        "content": "<p>ok this should be fixed now</p>",
        "id": 183216153,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576109341
    },
    {
        "content": "<p>confirmed, thanks a lot <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 183240302,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1576141751
    },
    {
        "content": "<p>glad I can fix something</p>",
        "id": 183240455,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576141854
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>though when I look at your value sets.. that's not how snomed extensions work...</p>\n</blockquote>\n<p>thanks,  this needs to be addressed by our snomed national release center, they have just started the process, I will put it on the agenda, i see them this afternoon</p>\n</blockquote>\n<p>they are aware of the situation, next spring a snomed ct swiss edition is planned where the codes are included.</p>",
        "id": 183241056,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1576142264
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>This leads to three questions I would happy to get some feedback:\n- is our approach correct with defining ValueSets with compose or should we provide already expanded ValueSets in our Implementation Guide?\n</pre></div>\n\n\n<p>I've gone with 'already expanded valueSets' to get around ecl issues. Wondering if this is correct?</p>",
        "id": 183241711,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1576142696
    },
    {
        "content": "<p>well, there's no fixed answer to this. In general, it's better to distribute the formal definition of the value set, rather than a particular expansion that's correct under your conditions at a given time. that way, people can generate a correct expansion locally given their own conditions. Does that matter...? depends how tightly you control the conditions. But my general observation is that the distributors always think they have better control than they do. </p>\n<p>OTOH, distributing the formal definition rather than the expansion assumes that everyone can correctly evaluate the definition. Which my server can't right now...</p>",
        "id": 183245761,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576145776
    }
]