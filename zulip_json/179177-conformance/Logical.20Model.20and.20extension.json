[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> / <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  The V3 datatype II (Instance Identifier) contains an attribute @extension. Hence the <a href=\"https://github.com/HL7/fhir-cda/blob/master/resources/II.xml\" target=\"_blank\" title=\"https://github.com/HL7/fhir-cda/blob/master/resources/II.xml\">logical model for II</a> has II.extension with representation xmlAttr as one of its supported paths.</p>\n<p>Forge STU3 will not show this element and will remove it from the logical model upon save. I believe Forge needs updating for this, but I understand the difficulty in finding howto.</p>",
        "id": 165800591,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1558006080
    },
    {
        "content": "<p>it's an interesting problem but I don't really know what to do about it</p>",
        "id": 165800787,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1558006240
    },
    {
        "content": "<p>While we're at it: something similar is going on for the id element available on  just about any V3 class.</p>",
        "id": 165879059,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1558078168
    },
    {
        "content": "<p>Message : Invalid element name: 'id'. The specified name is reserved and is not allowed for a user defined element of a logical model.<br>\nSeverity: Warning<br>\nSource  : Element Name<br>\nContext : [CDAR2.Act] element.id&lt;#6&gt;.elementName</p>",
        "id": 165879068,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1558078196
    },
    {
        "content": "<p>I'll add that to my list</p>",
        "id": 165941471,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1558131713
    },
    {
        "content": "<p>Logical models are still based on the core datatype <code>Element</code>, which introduces default child elements named \"id\" and \"extension\". So I think that in practice, these two element names are reserved and a logical model (or custom resource definition) cannot re-introduce such elements with a different meaning.</p>",
        "id": 166070863,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1558345466
    },
    {
        "content": "<p>(I don't want to even think about trying to implement some magic logic to determine if an element named \"extension\" has a custom definition...)</p>",
        "id": 166071148,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1558345754
    },
    {
        "content": "<p>Understood. But without a solution you're effectively saying: StructureDefinition cannot handle modeling V3. We have to find a way to distinguish between Logical Models and the rest. In FHIR instances, yes, id &amp; extension have a reserved meaning. For V2, V3, ebXML, ADL, XMI and what not, there is no such thing. </p>\n<p>So a logical model that aims to do more than FHIR - in fact doesn't even do that: it does arbitrary datasets with a few serialization pointers - cannot impose FHIR assumptions on those arbitrary datasets.</p>",
        "id": 166071260,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1558345897
    },
    {
        "content": "<p>yes that is the problem.</p>",
        "id": 166073746,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1558348379
    },
    {
        "content": "<p>I don't believe that we say that Logical models must be based on Element anywhere in the specification itself....</p>",
        "id": 166074119,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1558348743
    },
    {
        "content": "<p>AFAIK, within the FHIR infrastructure, all <code>ElementDefinitions</code> are (ultimately) derived from <code>Element</code>, including Logical Models. This provides support for element identifiers and extensions, which are crucial concepts within FHIR.</p>",
        "id": 166075893,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1558350636
    },
    {
        "content": "<p>right. but I don't think we explicitly stated this anywhere</p>",
        "id": 166075921,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1558350666
    },
    {
        "content": "<p>Yes, I think you're correct, AFAIK the FHIR spec doesn't strictly define this. Theoretically, we could allow for base classes other than <code>Element</code> (or <code>Resource</code>). However all current logic in the .NET API assumes the existence of element identifiers and extension collections. It is possible to make this conditional, however I'm not looking forward to such an exercise...</p>",
        "id": 166247082,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1558513723
    },
    {
        "content": "<blockquote>\n<p>I don't believe that we say that Logical models must be based on Element anywhere in the specification itself....</p>\n</blockquote>\n<p>For the cda fhir logical model  i created a base 'LogicalElement' which has no  baseDefinition and an empty snapshot/differential for the V3 datatypes and classes. As far as I can tell this approach works currently with the ig publisher, there are a few things which need to be improved (id not showing up in html, extension element with another icon) if that is a conformant way of doing it.</p>",
        "id": 173089126,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1565677499
    },
    {
        "content": "<p>if you want to have a look: <a href=\"http://build.fhir.org/ig/ahdis/cda-core-2.0/branches/ahdistemplate/index.html\" target=\"_blank\" title=\"http://build.fhir.org/ig/ahdis/cda-core-2.0/branches/ahdistemplate/index.html\">http://build.fhir.org/ig/ahdis/cda-core-2.0/branches/ahdistemplate/index.html</a>, <a href=\"http://build.fhir.org/ig/ahdis/cda-core-2.0/branches/ahdistemplate/qa.html\" target=\"_blank\" title=\"http://build.fhir.org/ig/ahdis/cda-core-2.0/branches/ahdistemplate/qa.html\">http://build.fhir.org/ig/ahdis/cda-core-2.0/branches/ahdistemplate/qa.html</a>  please note that the V3 Data Type snapshot generation is not yet correct.</p>",
        "id": 173090165,
        "sender_full_name": "Oliver Egger",
        "timestamp": 1565678988
    },
    {
        "content": "<p>Yeah, the FHIR spec uses \"Element\" and \"Resource\" abstract types at points (e.g. contained, but there must be more) where we allow \"any\" resource or datatype.  Since these were the bases for everything, this is hard-coded in quite some places in the .NET API (and I am sure in other too).  IF we decide to introduce a new base class (which is probably the cleanest solution), this might -for all practical purposes- be considered a breaking change I think.</p>",
        "id": 173100392,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1565690421
    },
    {
        "content": "<p>Introducing new base class(es) is definitely a breaking change</p>",
        "id": 173100497,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1565690529
    },
    {
        "content": "<p>I won't be accepting the pull request on the CDA model till we get to the bottom of this. However: I don't think that the spec itself is explicit about this. So I don't think it's a breaking change. And I don't think you'll be generating code based on logical models; t's the element-model that has to work with base models like this</p>",
        "id": 173261666,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1565838024
    }
]