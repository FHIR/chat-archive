[
    {
        "content": "<p>We currently have a need to add Narrative Templates to an IG which are supposed to be mandatory for all implementers .<br>\nThe customer is currently considering XSLT. But since we neet to generate narrative for a composition and the entries have multiple extensions, I'm afraid that navigating through the Bundle with XPath will be extremely cumbersome.<br>\nAre there any available alternatives? At least some sort of narrative templating that is supported by both the Java and the .NET libraries...?</p>",
        "id": 188929915,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1582554181
    },
    {
        "content": "<p>Can you give an example of what a narrative template would do?</p>",
        "id": 188953623,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582569983
    },
    {
        "content": "<p>Grahame has support or narrative templates that use Liquid.  Would that work for you?</p>",
        "id": 188953689,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582570030
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> there‘d be a fixed html representation for a FHIR document that all implementations need to adhere to.<br>\n<span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> we‘be been looking at liquid language and that’s the most interesting candidate so far. But we‘be been wondering how implementers using HAPI or the .Net libraries could leverage that...</p>",
        "id": 188964668,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1582577527
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>, <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span>, <span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span></p>",
        "id": 188964857,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582577675
    },
    {
        "content": "<p>the engine is built into HAPI. I don't know anything about dotnet in that regard</p>",
        "id": 188965179,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582577933
    },
    {
        "content": "<p>FWIW Liquid isn't too hard to manually code.. Not completely trivial but it's certainly conceivable that a basic implementation could be written in dotnet. Marten (from Firely) and I did a POC at one point, before Grahame did a better one :)</p>\n<p>I guess the big challenge is that we haven't actually documented this \"liquid+fhirpath\" format anywhere. I love the idea of using (especially compared to XSLT.. shudder :p ) but without some documentation there's no guarantee that Java / .NET / anything else would actually behave consistently</p>",
        "id": 188967778,
        "sender_full_name": "James Agnew",
        "timestamp": 1582579558
    },
    {
        "content": "<p>well, there is documentation - see <a href=\"https://confluence.hl7.org/display/FHIR/FHIR+Liquid+Profile\" target=\"_blank\" title=\"https://confluence.hl7.org/display/FHIR/FHIR+Liquid+Profile\">https://confluence.hl7.org/display/FHIR/FHIR+Liquid+Profile</a></p>\n<p>And test cases: <a href=\"https://github.com/FHIR/fhir-test-cases/blob/master/r4/liquid/liquid-tests.json\" target=\"_blank\" title=\"https://github.com/FHIR/fhir-test-cases/blob/master/r4/liquid/liquid-tests.json\">https://github.com/FHIR/fhir-test-cases/blob/master/r4/liquid/liquid-tests.json</a></p>",
        "id": 188968237,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582579859
    },
    {
        "content": "<p>and all that is already in HAPI</p>",
        "id": 188968261,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582579876
    },
    {
        "content": "<p>and Liquid is relatively trivial if you have a nice FHIRPath implementation sitting around, since that does all the heavy lifting. Otherwise... not so simple</p>",
        "id": 188968311,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582579911
    },
    {
        "content": "<p>I stand corrected, I was not aware of that confluence page. That's awesome.</p>",
        "id": 188968545,
        "sender_full_name": "James Agnew",
        "timestamp": 1582580062
    },
    {
        "content": "<p>I use Jinja2 and a little Python to suck up a package and spit it out with a custom CapabilityStatement Narrative.  ( Jinja has a lot more functionality that liquid like being able to use all the class methods and creating custom filters and it is Python.  But liquid could do the trick too. )</p>",
        "id": 188984871,
        "sender_full_name": "Eric Haas",
        "timestamp": 1582595493
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191319\">James Agnew</span> <a href=\"#narrow/stream/179177-conformance/topic/Adding.20Narrative.20Templates.20to.20IG/near/188967778\" title=\"#narrow/stream/179177-conformance/topic/Adding.20Narrative.20Templates.20to.20IG/near/188967778\">said</a>:</p>\n<blockquote>\n<p>FWIW Liquid isn't too hard to manually code.. Not completely trivial but it's certainly conceivable that a basic implementation could be written in dotnet. Marten (from Firely) and I did a POC at one point, before Grahame did a better one :)</p>\n<p>I guess the big challenge is that we haven't actually documented this \"liquid+fhirpath\" format anywhere. I love the idea of using (especially compared to XSLT.. shudder :p ) but without some documentation there's no guarantee that Java / .NET / anything else would actually behave consistently</p>\n</blockquote>\n<p>Yeah, we meant to call it liquifhir. Cool that there's documentation now for this. I'll go take a look at it as well</p>",
        "id": 189015891,
        "sender_full_name": "Marten Smits",
        "timestamp": 1582634543
    },
    {
        "content": "<p>Is there documentation somewhere about how to use this in HAPI?</p>",
        "id": 189203762,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1582801276
    },
    {
        "content": "<p>Our use case requires that we have interoperable narrative templates, so the minimum requirement would be that they are useable both for .NET as well as HAPI developers...<br>\nSo what I gather is that currently we have two competing implementations in HAPI (Liquid and Thymeleaf) but none in .NET, is that correct?</p>\n<p>Is it the consensus that Liquid is the way to move forward?</p>",
        "id": 189203982,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1582801500
    },
    {
        "content": "<p>I noticed that the documentation repeatedly uses examples with uneven braces, e.g. <code> {{ expression ]}</code><br>\nIs that on purpose?</p>",
        "id": 189204909,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1582802515
    },
    {
        "content": "<p>possibly a markdown limitation?</p>",
        "id": 189207625,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582805233
    },
    {
        "content": "<p>it was, with a comment, but it's not necessary on Confluence, so I fixed it up</p>",
        "id": 189207727,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582805375
    },
    {
        "content": "<p>My dotnet implementation is using Razor Templates. Though that very much isn't cross platform.</p>",
        "id": 190149677,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1583827897
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> did you implement a Liquid parser, or interfacing to the Ruby gem for this?</p>",
        "id": 190149751,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1583827982
    },
    {
        "content": "<p>sure it's fully implemented in the IG publisher, and part of HAPI core</p>",
        "id": 190152332,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583830671
    },
    {
        "content": "<p>Cool, I'll take a peek sometime.</p>",
        "id": 190164411,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1583841617
    },
    {
        "content": "<p>Is there a way to feed custom narrative templates to the publisher?<br>\n(or is it just compiled in)</p>",
        "id": 190164455,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1583841665
    },
    {
        "content": "<p>yes you can</p>",
        "id": 190205416,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583863592
    },
    {
        "content": "<p>you specify the liquid path (using <code>liquid</code> in the <code>path</code> object of the json config file, or the parameter <code>path-liquid </code> of the implementation guide resource). In that folder is a series of .liquid files, where the name of the file is [type].liquid, and that liquid template will be used for resources of [type]. Use this spec: <a href=\"https://confluence.hl7.org/display/FHIR/FHIR+Liquid+Profile\" target=\"_blank\" title=\"https://confluence.hl7.org/display/FHIR/FHIR+Liquid+Profile\">https://confluence.hl7.org/display/FHIR/FHIR+Liquid+Profile</a></p>",
        "id": 190206399,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583864109
    },
    {
        "content": "<p>Have we thought at all about the possibility of multiple templates per resource type - perhaps driven by profile?  E.g. different template for lab than vital signs?  (Not sure how critical that is as not sure how easy/hard it is to create a single liquid template that works well for both.)</p>",
        "id": 190207520,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1583864697
    },
    {
        "content": "<p>I thought about it, but I didn't do anything about it</p>",
        "id": 190210014,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583866062
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179177-conformance/topic/Adding.20Narrative.20Templates.20to.20IG/near/190207520\" title=\"#narrow/stream/179177-conformance/topic/Adding.20Narrative.20Templates.20to.20IG/near/190207520\">said</a>:</p>\n<blockquote>\n<p>Have we thought at all about the possibility of multiple templates per resource type - perhaps driven by profile?  </p>\n</blockquote>\n<p>you mean we could have different templates in the same ig? I'd like that.</p>",
        "id": 190228850,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1583876515
    },
    {
        "content": "<p>By resource type - could we have it in a way that StructureDefs for Profiles and for Logical Models would be different?</p>",
        "id": 190228938,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1583876552
    },
    {
        "content": "<p>or equivalently, a CarePlan instance for profile 1 would have a different template than for profile 2?</p>",
        "id": 190228986,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1583876599
    },
    {
        "content": "<p>This is different liquid templates - and you can do that by resource type already.  The question was whether we could do it by profile</p>",
        "id": 190234261,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1583880161
    },
    {
        "content": "<p>we can put it on the todo list but no one is really using them yet</p>",
        "id": 190234330,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583880221
    }
]