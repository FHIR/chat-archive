[
    {
        "content": "<p>code snip:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code>  <span class=\"s2\">\"differential\"</span><span class=\"err\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"element\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Patient.maritalStatus\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Patient.maritalStatus\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"min\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span>\n      <span class=\"p\">},</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Patient.maritalStatus.coding\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Patient.maritalStatus.coding\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"slicing\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"nt\">\"discriminator\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n              <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"value\"</span><span class=\"p\">,</span>\n              <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"coding.system\"</span>\n            <span class=\"p\">}</span>\n          <span class=\"p\">],</span>\n          <span class=\"nt\">\"rules\"</span><span class=\"p\">:</span> <span class=\"s2\">\"open\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"nt\">\"min\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span>\n      <span class=\"p\">},</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Patient.maritalStatus.coding:ValuesetSlice\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Patient.maritalStatus.coding\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"sliceName\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ValuesetSlice\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"min\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"max\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"binding\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"nt\">\"strength\"</span><span class=\"p\">:</span> <span class=\"s2\">\"required\"</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"valueSet\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://hl7.org/fhir/ValueSet/marital-status\"</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">},</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Patient.maritalStatus.coding:ValuesetSlice.system\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Patient.maritalStatus.coding.system\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"patternUri\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://terminology.hl7.org/CodeSystem/v3-MaritalStatus\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">}</span>\n</code></pre></div>\n<p>Would we expect a structure definition defined like this to slice-match on the binding and system's patternUri? just one and not the other? I would expect it to slice match on just the system value and then validate against the binding after it knows it matches this slice. But I recently learned that type:value slicing also has bindings in scope for discriminator. But still because the path in this case is defined as system I would expect the binding to be ignored for slice-matching.<br>\nfor example, I'm expecting 1 below to not match the slice and thus not be evaluated against the binding. I'm expecting 2 below to also not match the slice and not throw an error because of the binding (the original binding at the root element is extensible so it would instead throw a warning). I'm expecting 3 to match the slice on the system value and then be forced to comply with the binding. Are my expectations the intended functionality? or am I misguided?</p>\n<p>1</p>\n<div class=\"codehilite\" data-code-language=\"XML\"><pre><span></span><code>    <span class=\"nt\">&lt;maritalStatus&gt;</span>\n        <span class=\"nt\">&lt;coding&gt;</span>\n            <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">\"http://terminology.hl7.org/CodeSystem/v3-NullFlavor\"</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">\"UNK\"</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;display</span> <span class=\"na\">value=</span><span class=\"s\">\"unknown\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/coding&gt;</span>\n    <span class=\"nt\">&lt;/maritalStatus&gt;</span>\n</code></pre></div>\n<p>2</p>\n<div class=\"codehilite\" data-code-language=\"XML\"><pre><span></span><code>    <span class=\"nt\">&lt;maritalStatus&gt;</span>\n        <span class=\"nt\">&lt;coding&gt;</span>\n            <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">\"http://terminology.hl7.org/CodeSystem/v3-NullFlavor\"</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">\"UNK\"</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;display</span> <span class=\"na\">value=</span><span class=\"s\">\"invalid-code\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/coding&gt;</span>\n    <span class=\"nt\">&lt;/maritalStatus&gt;</span>\n</code></pre></div>\n<p>3</p>\n<div class=\"codehilite\" data-code-language=\"XML\"><pre><span></span><code>    <span class=\"nt\">&lt;maritalStatus&gt;</span>\n        <span class=\"nt\">&lt;coding&gt;</span>\n            <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">\"http://terminology.hl7.org/CodeSystem/v3-MaritalStatus\"</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">\"M\"</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;display</span> <span class=\"na\">value=</span><span class=\"s\">\"Married\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/coding&gt;</span>\n    <span class=\"nt\">&lt;/maritalStatus&gt;</span>\n</code></pre></div>",
        "id": 220387755,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1608306481
    },
    {
        "content": "<blockquote>\n<p>Are my expectations the intended functionality? or am I misguided?</p>\n</blockquote>\n<p>I hope it would behave that way.</p>",
        "id": 220649947,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1608599893
    },
    {
        "content": "<p>That should work.</p>",
        "id": 220656695,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1608609394
    },
    {
        "content": "<p>so validation should look at the discriminator path, evaluate that into a different StructureDefinition element than declares the slice name if needed, and only use the fixed[x]/pattern[x]/binding in that element to evaluate the slice matching. leaving all else as validation that is only required once a slice is matched? <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> (just want to make sure I know what you are agreeing with)</p>",
        "id": 220699734,
        "sender_full_name": "ryan moehrke",
        "timestamp": 1608650349
    },
    {
        "content": "<p>When the validator hits a sliced element, it iterates through each slice and checks the element to see if it matches the discriminator.  If it finds more than one match, that's an error.  If it finds zero matches, that's a warning (or an error if slicing is closed).  If it finds exactly one match, then it enforces all of the rules associated with that slice.</p>",
        "id": 220726968,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1608666328
    }
]