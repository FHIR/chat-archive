[
    {
        "content": "<p>We are using the usual-route extension in our medication ressources:<br>\n<a href=\"http://hl7.org/fhir/StructureDefinition/medication-usualRoute\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/medication-usualRoute\">http://hl7.org/fhir/StructureDefinition/medication-usualRoute</a><br>\nWe now want to constrain the Extension by slicing the coding to enforce the usage of a mandatory codeSystem for our Context.<br>\nI tried this with Forge, but the mechanism how to do it is unclear to me. Can i build derived Extension from another Extension, or create a profile for the coding inside the Extension?</p>",
        "id": 153929286,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1516210498
    },
    {
        "content": "<p>Apply the extension in the profile and then slice it :)</p>",
        "id": 153929399,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1516267288
    },
    {
        "content": "<p>Thanks Vadim. Unfortunately i can't slice it, as Forge is not displaying the Extension Contents in Forge. <br>\nI think it is a bug, as i always get the warning that the Extension can't be resolved tough it is in the same path and opened already in  Forge. Or am i doing it wrong? <span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> </p>\n<p>Steps to reproduce:<br>\nOpen <a href=\"http://hl7.org/fhir/StructureDefinition/medication-usualRoute\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/medication-usualRoute\">http://hl7.org/fhir/StructureDefinition/medication-usualRoute</a> profile in Forge, create a new Profile for Medication, add the Extension to the Medication. -&gt; no Elements from the Extension are shown.<br>\nIf you close the Medication Profile and reopen it you get the warning: unable to resolve profile</p>",
        "id": 153929417,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1516284481
    },
    {
        "content": "<p>Update: we deleted the SnapshotComponent of the Profile, now it is working again in Forge. The only left issue is that Forge adds the following Extensions by itself:</p>\n<div class=\"codehilite\"><pre><span></span>       <span class=\"nt\">&lt;issue&gt;</span>\n        <span class=\"nt\">&lt;severity</span> <span class=\"na\">value=</span><span class=\"s\">&quot;information&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;processing&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;diagnostics</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Unknown extension http://hl7.org/fhir/StructureDefinition/elementdefinition-maxValueSet&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;location</span> <span class=\"na\">value=</span><span class=\"s\">&quot;StructureDefinition.snapshot.element[5].binding.extension[1]&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/issue&gt;</span>\n    <span class=\"nt\">&lt;issue&gt;</span>\n        <span class=\"nt\">&lt;severity</span> <span class=\"na\">value=</span><span class=\"s\">&quot;information&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;processing&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;diagnostics</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Unknown extension http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;location</span> <span class=\"na\">value=</span><span class=\"s\">&quot;StructureDefinition.snapshot.element[5].binding.extension[2]&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/issue&gt;</span>\n    <span class=\"nt\">&lt;issue&gt;</span>\n        <span class=\"nt\">&lt;severity</span> <span class=\"na\">value=</span><span class=\"s\">&quot;information&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;processing&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;diagnostics</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Unknown extension http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;location</span> <span class=\"na\">value=</span><span class=\"s\">&quot;StructureDefinition.snapshot.element[5].binding.extension[3]&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/issue&gt;</span>\n</pre></div>",
        "id": 153929430,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1516288302
    },
    {
        "content": "<p>Steps to reproduce:<br>\nCreate Medication Profile, change something (i set the min card. of Ingridient to 1), save.</p>\n<p>Forge adds the following Extensions in the Snapshot:<br>\nelementdefinition-maxValueSet<br>\nelementdefinition-bindingName<br>\nelementdefinition-isCommonBinding<br>\nelementdefinition-translatable</p>",
        "id": 153929432,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1516290469
    },
    {
        "content": "<p>It should be possible to profile an extension to further refine it and reference that profiled extension in other profiles.</p>",
        "id": 153929449,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1516297312
    },
    {
        "content": "<p>If Forge doesn't support this yet, it should certainly be on the list because there are lots of cases where this will be needed.</p>",
        "id": 153929450,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1516297337
    },
    {
        "content": "<p>It is possible, it was only a bug related to the Snapshot Creation of Forge.</p>",
        "id": 153929463,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1516300904
    },
    {
        "content": "<p>I am pretty sure Forge supports profiling extensions, but Michel knows for sure ;-)   We won't be online today I think, so we'll know after the weekend...</p>",
        "id": 153929609,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1516367251
    },
    {
        "content": "<p>i got it to work. But i had to manually delete the snapshot of the profile in which i was using the extension. I've seen this behaviour several times in Forge. The Snapshot get's \"corrupted\". If i delete it and load only the cleaned profile, containig only the differential part, it works again.</p>",
        "id": 153929932,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1516630301
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span>, thank you for the feedback!<br>\nForge completely disregards existing snapshot components and always re-generates all snapshots from the ground up. However you report that sometimes an existing snapshot apparently has some effect. This is a bit unexpected? I'll try to investigate your profile and determine what's causing this when I have some time.<br>\nBTW Are you visiting the New Orleans WGM?</p>",
        "id": 153930326,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1516724326
    },
    {
        "content": "<p>Any news on that one?<br>\nI'm facing the same problem right now, using Forge 19.1</p>",
        "id": 153981613,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1533289796
    },
    {
        "content": "<p>Patrick's workaround doesn't work for me</p>",
        "id": 153981614,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1533289825
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span>, as far as I am aware, Forge supports further constraining referenced extensions. Can you describe the issue and steps to reproduce?</p>",
        "id": 153981615,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1533289989
    },
    {
        "content": "<p>Sure.</p>\n<p>The issue is: extensions added to an element don't show up in the slices after slicing that element.</p>\n<p>Steps to reproduce:<br>\n1. create an extension for the context Whateverresource.some.element<br>\n2. create a profile of Whateverresource<br>\n3. extend Whateverresource.some.element with the above created extension<br>\n4. Click \"Slice\" for Whateverresource.some.element<br>\n5. Click \"Add Slice\" for Whateverresource.some.element<br>\n6. no extensions show up in the slice just created</p>",
        "id": 153981617,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1533290338
    },
    {
        "content": "<p>Same problem here... the workaround is not working for me...using Forge 19.1 too.</p>",
        "id": 153981621,
        "sender_full_name": "Maximilian Reith",
        "timestamp": 1533291366
    },
    {
        "content": "<p>Example files (extension on Patient.generalPractitioner.identifier):<br>\n<a href=\"/user_uploads/10155/zbCSQ4KeV0zwUTE4JV0Av4hb/DummyExtension.StructureDefinition.xml\" target=\"_blank\" title=\"DummyExtension.StructureDefinition.xml\">DummyExtension.StructureDefinition.xml</a> <a href=\"/user_uploads/10155/pBqp_cSYsoaxkBxKdLjCye9L/DummyPatient.StructureDefinition.xml\" target=\"_blank\" title=\"DummyPatient.StructureDefinition.xml\">DummyPatient.StructureDefinition.xml</a></p>",
        "id": 153981628,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1533291920
    },
    {
        "content": "<p>Ah, now I see. This is a known limitation of slicing support in Forge.<br>\nWhen an element is sliced, Forge hides the regular child elements of the sliced element and instead displays the associated named slices as child elements. As a result, you cannot edit constraints on regular child elements of a sliced element in Forge. This includes extensions on the sliced element.<br>\nNote that Forge will not corrupt/remove any existing constraints on regular child elements of a sliced element. The elements are not visible in the user interface and you cannot edit them. However any hidden constraints will still be included in the output when saving the resource.<br>\nTo properly support this scenario, I need to completely re-design the slicing UI. This has been on the backlog for a while now. I'd definitely like to improve slicing support. But that won't be any time soon, as we are first going to improve other parts of the application.</p>",
        "id": 153981678,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1533294325
    },
    {
        "content": "<p>So for now, it is either manually edit the SD XML or, if one is stuck to Forge, find a different way to represent the requirements without that kind of slices.</p>",
        "id": 153981738,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1533298090
    },
    {
        "content": "<p>Alternatively, you could use Forge to create the profile with slicing, then manually hack in the extension. If you then open the profile again in Forge, you won't see the extension, but the application will not remove it.<br>\nI'll see if I can implement an (advanced) application option that will allow you to toggle element visibility.</p>",
        "id": 153981759,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1533299572
    },
    {
        "content": "<p>Yes, that's what I meant. Definitely not starting the SD manually ;)</p>",
        "id": 153981781,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1533301464
    },
    {
        "content": "<p>The visibility option would be great</p>",
        "id": 153981783,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1533301522
    }
]