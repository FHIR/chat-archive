[
    {
        "content": "<p>In the conformance resource here <a href=\"http://hl7-fhir.github.io/conformance-definitions.html#Conformance.rest.resource\" target=\"_blank\" title=\"http://hl7-fhir.github.io/conformance-definitions.html#Conformance.rest.resource\">http://hl7-fhir.github.io/conformance-definitions.html#Conformance.rest.resource</a> it states that you can only have one entry per \"resource type\" (Max of one repetition per resource type.)</p>\n<p>If I have multiple profiles for a resource type , how do I cater for that? </p>",
        "id": 153816501,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1458291034
    },
    {
        "content": "<p>the current intent is that the profile you list in the .rest.resource.profile is the super set profile - the basic statement of what your system can do </p>",
        "id": 153816502,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458291102
    },
    {
        "content": "<p>in Conformance.profile, that's where you list your multiple profiles for different use cases</p>",
        "id": 153816503,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458291118
    },
    {
        "content": "<p>So if I have two profiles of \"Organsation\" - profile01 and profile02 - then I would put both of those in 'Conformance.profile' - that's not a problem<br>\nBut are you saying that I then need to create a new \"super set\" profile which then goes in '.rest.resource.profile' ?</p>",
        "id": 153816504,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1458291360
    },
    {
        "content": "<p>that's the idea, yes </p>",
        "id": 153816505,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458291442
    },
    {
        "content": "<p>Ahh ok - that's interesting, will need to change our thinking on a few things then</p>",
        "id": 153816506,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1458291506
    },
    {
        "content": "<p>I have code that can produce the super set from a set of profiles </p>",
        "id": 153816507,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458291537
    },
    {
        "content": "<p>though it's not packaged</p>",
        "id": 153816508,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458291544
    },
    {
        "content": "<p>That may be useful - the issue is that then the properties in '.rest.resource.profile' are then shared for each \"type\" of Organisation (in this case). Which is not necessarily what we want. We may need to expose different FHIR endpoints which then makes referencing an issue. Need to ponder on this one.</p>",
        "id": 153816515,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1458294878
    },
    {
        "content": "<p>How many </p>",
        "id": 153816519,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458297483
    },
    {
        "content": "<p>sorty. </p>",
        "id": 153816520,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458297488
    },
    {
        "content": "<p>sorry. How do the types differ?</p>",
        "id": 153816521,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458297499
    },
    {
        "content": "<p>Also, Richard, the Conformance.rest.resource.profile, I've always regard this as a kind of \"hard limit\", it expresses the shape of the resource the underlying system (database) could maximally support. So, even though the number and shape of profiles in Conformance.profile can vary rapidly, rest.resource.profile would be way more static. And thus I'd rather say Conformance.profile (combined) must be a subset of rest.resource.profile, rather than rest.resource.profile being a superset of Conformance.profile.  </p>\n<p>Then again, how important this difference is is dependent on whether the Conformance is expressing a logical interface description, or an interface of an actual production system.</p>",
        "id": 153816537,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1458307075
    },
    {
        "content": "<p>I continue to think that requiring custom generated arbitrary supersets is going to be an incredible barrier. Developers will just not populate this field (or will populate it meaninglessly). </p>",
        "id": 153816545,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458309798
    },
    {
        "content": "<p>there's no reason it sholud be a barrier since it can be auto-generated from a series of more specific profiles. The barrier is likely to be profiling at all </p>",
        "id": 153816573,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458324865
    },
    {
        "content": "<p>Well, the simple \"combination profile\" is to create a profile that only constraints the \"profile\" element and says that all inbound instances must declare one of x profiles.  No need to define constraints on anything else as any instance that declares it conforms to a profile must in fact conform to that profile.  Simple and easy :)</p>",
        "id": 153816740,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1458420618
    },
    {
        "content": "<p>lol. a  very short term definition of 'simple and easy'</p>",
        "id": 153816741,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458420668
    },
    {
        "content": "<p>Well, if you do that, you're saying \"you can't talk to me unless you declare these profiles\".  I'm not advocating that as a good solution in general, but for places that do want to enforce such a requirement (and it won't be uncommon), I'm not sure a more descriptive profile adds much value.</p>",
        "id": 153816742,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1458421400
    }
]