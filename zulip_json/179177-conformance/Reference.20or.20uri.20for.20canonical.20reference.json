[
    {
        "content": "<p>During the FHIR-I call yesterday evening we discussed gforge issue <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12902\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12902\">GF#12902</a>, which led us to notice that the specification is not consistent about how to reference from one conformance resource from another.  In many places, we use the \"uri\" datatype, but in others Reference([your conformance resource here]) is used. </p>\n<p>I expect this comes from our shift in thinking, slowly evolving from a world where all canonical references were a RESTful url, to the situation were they are rather more a symbolic identity. </p>\n<p>We concluded that we needed to consult the broader community to move ahead, so please take a look at these examples and share your opinions!</p>\n<ul>\n<li>Capabilitystatement.profile (which is a reference)</li>\n<li>StructureDefinition.base (uri), OperationDefinition.base (reference)</li>\n<li>ElementDefinition.binding.valueSet[x] (both - with different interpretation)</li>\n<li>ElementDefinition.type.profile (uri)</li>\n<li>ElementDefinition.type.code (uri constrained by a valueset)</li>\n</ul>",
        "id": 153921826,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1511871452
    },
    {
        "content": "<p>\"I expect this comes from our shift in thinking, slowly evolving from a world where all canonical references were a RESTful url, to the situation were they are rather more a symbolic identity.\"   can you elaborate on what you mean by a 'symbolic identity'?</p>",
        "id": 153921873,
        "sender_full_name": "Eric Haas",
        "timestamp": 1511886866
    },
    {
        "content": "<p>I mean the canonical starts to be more of an opaque reference for which the context (say a validator in a registry) knows how to resolve it to an actual structuredefinition than that it is a RESTful url where the structuredefinition can be found. Does that clarify?</p>",
        "id": 153921884,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1511888388
    },
    {
        "content": "<p>Reference allows the use of canonical URLs (including versions) and has the benefit of making clear what resource you're pointing to and allowing the validator to resolve the reference as part of the validation process.  So my preference would be to standardize on using Reference rather than uri.</p>",
        "id": 153921900,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1511891708
    },
    {
        "content": "<p>yes ty</p>",
        "id": 153921909,
        "sender_full_name": "Eric Haas",
        "timestamp": 1511897405
    },
    {
        "content": "<p>If we wish to focus on the idea that <code>Reference</code> follows \"References SHALL be a reference to an actual FHIR resource, and SHALL be resolvable\" (a comment in the <code>Reference</code> resource definition), this proposal makes good sense to me. </p>\n<p>It seems that <code>ElementDefinition.binding.valueSet[x]</code>will stay  as a choice of data types. Ugly.</p>",
        "id": 153921972,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1511916089
    },
    {
        "content": "<blockquote>\n<p>and allowing the validator to resolve the reference as part of the validation process.</p>\n</blockquote>\n<p>That is true for both uri and Reference(). The only slight difference is that References suggest the validator may go out on the web to fetch the referenced StructureDefinition, which is less so with uri.  But in practice, a validator will not go out on the web, but instead search for the given uri in a database of known structuredefinitions, on a filesystem etc, so all it needs is a uri to match the reference to one of the conformance resources in its \"storage\".</p>",
        "id": 153922009,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1511945822
    },
    {
        "content": "<p>Well, with a Reference, there's an expectation for resolvability to a resource.  With a URI, there's no such expectation (a ValueSet uri could be an arbitrary website somewhere.</p>",
        "id": 153922077,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1511970467
    }
]