[
    {
        "content": "<p>I am using the (4.2.20-SNAPSHOT) Java validator to validate QuestionnaireResponses against a Questionnaire. One of the questions (call it N2) should only be shown if at least one of two previous questions (N0 &amp; N1) have been answered with a specific answer. On the other hand, <em>if</em> N2 is enabled, it must be answered. <a href=\"http://hl7.org/fhir/R4/questionnaire-definitions.html#Questionnaire.item.enableWhen\" title=\"http://hl7.org/fhir/R4/questionnaire-definitions.html#Questionnaire.item.enableWhen\">The R4 enableWhen documentation</a> says</p>\n<blockquote>\n<p>(...) treat \"enableWhen\"s as being joined by an \"or\" clause. This element is a modifier because if enableWhen is present for an item, \"required\" is ignored unless one of the enableWhen conditions is met.</p>\n</blockquote>\n<p>So I did the following</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"nt\">&quot;resourceType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Questionnaire&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://example.com/qexampel&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;status&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;draft&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;item&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n            <span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;integer&quot;</span><span class=\"p\">,</span>\n            <span class=\"nt\">&quot;linkId&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;N0&quot;</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;integer&quot;</span><span class=\"p\">,</span>\n            <span class=\"nt\">&quot;linkId&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;N1&quot;</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;integer&quot;</span><span class=\"p\">,</span>\n            <span class=\"nt\">&quot;required&quot;</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n            <span class=\"nt\">&quot;linkId&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;N2&quot;</span><span class=\"p\">,</span>\n            <span class=\"nt\">&quot;enableWhen&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n                    <span class=\"nt\">&quot;question&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;N0&quot;</span><span class=\"p\">,</span>\n                    <span class=\"nt\">&quot;operator&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"nt\">&quot;answerInteger&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span>\n                <span class=\"p\">},</span>\n                <span class=\"p\">{</span>\n                    <span class=\"nt\">&quot;question&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;N1&quot;</span><span class=\"p\">,</span>\n                    <span class=\"nt\">&quot;operator&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;=&quot;</span><span class=\"p\">,</span>\n                    <span class=\"nt\">&quot;answerInteger&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n\n<p>The following should now be a valid answer because N2 should not be enabled:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n    <span class=\"nt\">&quot;resourceType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;QuestionnaireResponse&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;questionnaire&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://example.com/qexampel&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;status&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;completed&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;item&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n            <span class=\"nt\">&quot;linkId&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;N0&quot;</span><span class=\"p\">,</span>\n            <span class=\"nt\">&quot;answer&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n                <span class=\"nt\">&quot;valueInteger&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span>\n            <span class=\"p\">}]</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n            <span class=\"nt\">&quot;linkId&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;N1&quot;</span><span class=\"p\">,</span>\n            <span class=\"nt\">&quot;answer&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n                <span class=\"nt\">&quot;valueInteger&quot;</span><span class=\"p\">:</span> <span class=\"mi\">0</span>\n            <span class=\"p\">}]</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n\n<p>However, the validator says</p>\n<div class=\"codehilite\"><pre><span></span><code>*FAILURE* validating qtest/test.questionnaireresponse.json:  error:1 warn:0 info:0\n  Error @ QuestionnaireResponse (line 1, col2) : No response answer found for required item &quot;N2&quot;\n</code></pre></div>\n\n\n<p>If I remove one of the conditions in the enableWHen, the error disappears. Is there an issue with how the validator handles multiple enableWhen conditions or did I read the specs wrong?</p>",
        "id": 195502292,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1588051657
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> - do we still have an issue with evaluating 'required' elements in the presence of enableWhen?</p>",
        "id": 195565629,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1588081411
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194703\">@Morten Ernebjerg</span> have a look at Questionnaire.item.enableBehavior. This defines this behaviour.</p>",
        "id": 195575197,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1588085478
    },
    {
        "content": "<p>The \"or\" statement in description is only valid if you are evaluating repeating elements. Then only one repetition has to be true</p>",
        "id": 195575360,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1588085543
    },
    {
        "content": "<p>The description text here should be improved. Do you mind opening a JIRA Ticket for this <span class=\"user-mention\" data-user-id=\"194703\">@Morten Ernebjerg</span> ?</p>",
        "id": 195575480,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1588085581
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> ah, thanks!  I did indeed not spot this because I thought the formulation in <a href=\"http://hl7.org/fhir/R4/questionnaire-definitions.html#Questionnaire.item.enableWhen\" title=\"http://hl7.org/fhir/R4/questionnaire-definitions.html#Questionnaire.item.enableWhen\">the documentation of Questionnaire.item.enableWhen</a> clearly specified that it was always an OR:</p>\n<blockquote>\n<p>If multiple repetitions of this extension are present, the item should be enabled when the condition for any of the repetitions is true. I.e. treat \"enableWhen\"s as being joined by an \"or\" clause. </p>\n</blockquote>\n<p>I will put in a tickets (might take a few hours though, busy days...)(</p>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> When I validate the <code>Questionnaire</code> given above against the base spec, I get no errors so it seems constraint <em>que-12</em> (<code>enableWhen.count() &gt; 2 implies enableBehavior.exists()</code>) is not enforced.</p>",
        "id": 195579403,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1588087115
    },
    {
        "content": "<p>And actually, my initial question still lingers. Whether or not one takes AND or OR for the enableWhen, the condition is not met in the above example --&gt; <code>required: true</code> on conditional question should be ignored --&gt; response should be valid. Or...?</p>",
        "id": 195579813,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1588087296
    },
    {
        "content": "<p>But adding  <code>\"enableBehavior\": \"any\"</code> does it indeed make the above come out without errors <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 195580367,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1588087525
    },
    {
        "content": "<p>You are mixing two<code>OR</code>: the one you are refering to only applies to repeating items. Imagine asking for all medication of a patient in a repeatable item. Adding a enable when if the patient takes a certain medication will look in every reported repetition/medication. If one of these matches (OR) then the enableWhen is triggered.</p>",
        "id": 195589125,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1588091011
    },
    {
        "content": "<p>enableBehavior changes the behavior in the case you have multiple enableWhens attached to an item.</p>",
        "id": 195589234,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1588091054
    },
    {
        "content": "<p>But yes guidance, especially on the enableWhen element would be nice (made the same mis-assumption in the past).</p>",
        "id": 195589293,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1588091091
    },
    {
        "content": "<p>So the tracker would be for having better guidance</p>",
        "id": 195589323,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1588091105
    },
    {
        "content": "<p>que-12 has an error. It should be :</p>\n<p><code>(enableWhen.count() &gt;= 2 implies enableBehavior.exists()) </code></p>",
        "id": 195657030,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1588132196
    },
    {
        "content": "<p>so it shouldn't make any difference whether it's all or any</p>",
        "id": 195657624,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1588132704
    },
    {
        "content": "<p>I hacked the validator to make that work</p>",
        "id": 195658898,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1588134227
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span>  Ah OK, now I see what was meant by \"multiple repetitions\".... I created ticket  <a href=\"https://jira.hl7.org/browse/FHIR-26993\" title=\"https://jira.hl7.org/browse/FHIR-26993\">#FHIR-26993</a> for this.</p>",
        "id": 195717105,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1588170297
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> Back again <span aria-label=\"slight smile\" class=\"emoji emoji-1f642\" role=\"img\" title=\"slight smile\">:slight_smile:</span>  I was wondering what the behaviour was for STU3 for the case that I specify 2 conditions in <code>enableWhen</code> that refer to different (non-repeatable questions). Does it behave like <code>enableBehaviour:  \"any\"</code> or <code>enableBehaviour: \"all\"</code>? I tried to surmise it from the R3 --&gt; R4 maps, but as far as I can tell, there <code>enableBehaviour</code> is not included anywhere, despite the fact that it is required if there are multiple <code>enableWhen</code> conditions.</p>",
        "id": 197525534,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1589446282
    },
    {
        "content": "<p>this appears to be the relevant behavior: </p>\n<div class=\"codehilite\"><pre><span></span><code>  <span class=\"kd\">public</span> <span class=\"kt\">boolean</span> <span class=\"nf\">checkConditionResults</span><span class=\"p\">(</span><span class=\"n\">List</span><span class=\"o\">&lt;</span><span class=\"n\">EnableWhenResult</span><span class=\"o\">&gt;</span> <span class=\"n\">evaluationResults</span><span class=\"p\">,</span> <span class=\"n\">QuestionnaireItemComponent</span> <span class=\"n\">questionnaireItem</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"k\">if</span> <span class=\"p\">((</span><span class=\"n\">questionnaireItem</span><span class=\"p\">.</span><span class=\"na\">hasEnableBehavior</span><span class=\"p\">()</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">questionnaireItem</span><span class=\"p\">.</span><span class=\"na\">getEnableBehavior</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">EnableWhenBehavior</span><span class=\"p\">.</span><span class=\"na\">ANY</span><span class=\"p\">)</span> <span class=\"o\">||</span> <span class=\"n\">evaluationResults</span><span class=\"p\">.</span><span class=\"na\">size</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">return</span> <span class=\"n\">evaluationResults</span><span class=\"p\">.</span><span class=\"na\">stream</span><span class=\"p\">().</span><span class=\"na\">anyMatch</span><span class=\"p\">(</span><span class=\"n\">EnableWhenResult</span><span class=\"p\">::</span><span class=\"n\">isEnabled</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">questionnaireItem</span><span class=\"p\">.</span><span class=\"na\">hasEnableBehavior</span><span class=\"p\">()</span> <span class=\"o\">&amp;&amp;</span> <span class=\"n\">questionnaireItem</span><span class=\"p\">.</span><span class=\"na\">getEnableBehavior</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"n\">EnableWhenBehavior</span><span class=\"p\">.</span><span class=\"na\">ALL</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n      <span class=\"k\">return</span> <span class=\"n\">evaluationResults</span><span class=\"p\">.</span><span class=\"na\">stream</span><span class=\"p\">().</span><span class=\"na\">allMatch</span><span class=\"p\">(</span><span class=\"n\">EnableWhenResult</span><span class=\"p\">::</span><span class=\"n\">isEnabled</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"c1\">//TODO: Throw exception? enableBehavior is mandatory when there are multiple conditions</span>\n    <span class=\"k\">return</span> <span class=\"kc\">true</span><span class=\"p\">;</span>\n  <span class=\"p\">}</span>\n</code></pre></div>",
        "id": 197537934,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589454494
    },
    {
        "content": "<p>in otherwords: an exception. Do you want to make a test case (Q/QR combination) that I can add to the unit tests ?</p>",
        "id": 197537956,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589454522
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> If I read this correctly, it is code from the R4 validation, right? (<a href=\"https://github.com/eevaturkka/hapi-fhir/blob/master/hapi-fhir-validation/src/main/java/org/hl7/fhir/r4/validation/DefaultEnableWhenEvaluator.java#L37\">here</a>). So is the point that when validating an STU3 Q/QR pair, it comes through here as well and always returns <code>true</code> because there is never any <code>enableBehaviour</code>?</p>\n<p>I'd be happy to add an STU3 test case for this - where do I submit it?</p>",
        "id": 197554093,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1589463198
    },
    {
        "content": "<p>that's actually the R5 code. But submit me an R3 test case. You can just send them to me, or make an issue or a PR against <a href=\"https://github.com/FHIR/fhir-test-cases\">https://github.com/FHIR/fhir-test-cases</a></p>",
        "id": 197597980,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589480943
    },
    {
        "content": "<p>OK, will go via the repo.</p>\n<p>BTW I see that when you convert an STU3 questionnaire to an R4 one with the validator, it seems to insert <code>enableBehaviour: \"any\"</code> for all questions. Yet I cannot see that  in the <a href=\"http://hl7.org/fhir/R4/questionnaire-version-maps.html#2.37.11.1\">STU3 --&gt; R4 map in the Questionnaire documentation</a> - am I missing smt. or is the validator using a different map?</p>",
        "id": 197691295,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1589549809
    },
    {
        "content": "<p>This is conversion the <code>-native</code> option which, I suppose, might just about answer my question for me... Without this option, I get an error (for a minimal 3-question example)</p>\n<div class=\"codehilite\"><pre><span></span><code>Exception in thread &quot;main&quot; java.lang.Error: Cannot set property operator on enableWhen\n    at org.hl7.fhir.r5.elementmodel.Element.setProperty(Element.java:378)\n    at org.hl7.fhir.r5.utils.StructureMapUtilities.processTarget(StructureMapUtilities.java:1827)\n    at org.hl7.fhir.r5.utils.StructureMapUtilities.executeRule(StructureMapUtilities.java:1412)\n    at org.hl7.fhir.r5.utils.StructureMapUtilities.executeGroup(StructureMapUtilities.java:1399)\n    at org.hl7.fhir.r5.utils.StructureMapUtilities.executeDependency(StructureMapUtilities.java:1458)\n    at org.hl7.fhir.r5.utils.StructureMapUtilities.executeRule(StructureMapUtilities.java:1420)\n    at org.hl7.fhir.r5.utils.StructureMapUtilities.executeGroup(StructureMapUtilities.java:1399)\n    at org.hl7.fhir.r5.utils.StructureMapUtilities.executeDependency(StructureMapUtilities.java:1458)\n    at org.hl7.fhir.r5.utils.StructureMapUtilities.executeRule(StructureMapUtilities.java:1420)\n    at org.hl7.fhir.r5.utils.StructureMapUtilities.executeGroup(StructureMapUtilities.java:1399)\n    at org.hl7.fhir.r5.utils.StructureMapUtilities.transform(StructureMapUtilities.java:1361)\n    at org.hl7.fhir.validation.ValidationEngine.transformVersion(ValidationEngine.java:1754)\n    at org.hl7.fhir.validation.cli.services.ValidationService.transformVersion(ValidationService.java:157)\n    at org.hl7.fhir.validation.Validator.main(Validator.java:168)\n</code></pre></div>",
        "id": 197695632,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1589551483
    },
    {
        "content": "<p>yes it does use the native conversion internally, but that's still not using the internal conversion, which is <a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/master/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/conv30_50/Questionnaire30_50.java\">https://github.com/hapifhir/org.hl7.fhir.core/blob/master/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/conv30_50/Questionnaire30_50.java</a></p>",
        "id": 197725720,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1589564025
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> PR is in, just let me know if adjustments are needed.</p>",
        "id": 197924760,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1589804079
    }
]