[
    {
        "content": "<p>My question is about the _id search parameter and any other search parameters that are related to all.  the documentation says \"Parameters for each resource <br>\nIn addition to the _id parameter which exists for all resources, each FHIR resource type defines its own set of search parameters with their names, types, and meanings\".  My question is, do we need to add _id as a search parameter to every resource?  Is that a best practice or normal behavior for a FHIR server?</p>",
        "id": 234779521,
        "sender_full_name": "Ruth berge",
        "timestamp": 1618535518
    },
    {
        "content": "<p>Are you asking if the impact of the spec spec is that the _id parameter needs to be added? Or are you asking if the spec is correct in asking that?</p>",
        "id": 234793822,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1618548362
    },
    {
        "content": "<p>my reading of the spec is that every server must implement the _id search parameter for all resources (the same way they must support the id element)</p>",
        "id": 234793937,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1618548476
    },
    {
        "content": "<p>The fact that it 'exists' doesn't mean a server must support it.</p>",
        "id": 234860162,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1618582453
    },
    {
        "content": "<p>My question isn't whether a server should implement the _id parameter.  I tested it and it works.  My question is whether, in the Capability Statement, for each and every resource type , do we need to add a statement like                     \"searchParam\": [<br>\n                        {<br>\n                            \"name\": \"_id\",<br>\n                            \"type\": \"token\",<br>\n                            \"documentation\": \"The ID of the resource\"<br>\n                        }, <br>\nOR is it assumed that every resource will support that and it doesn't have to be called out in the Capability Statement.  It isn't a question of whether it is supported, but whether the Capability Statement should list it.  And really, it is understanding the crowd usage or best practice.</p>",
        "id": 234886590,
        "sender_full_name": "Ruth berge",
        "timestamp": 1618591710
    },
    {
        "content": "<p>You <em>should</em> explicitly be stating it.  It can't be safely inferred.  (Agree that it's a pain, so if you want to submit a change request for us to define an easier way to say \"I support these search criteria for all supported resources\", that wouldn't be a bad idea.)</p>",
        "id": 234891008,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1618593648
    },
    {
        "content": "<p>US Core did it here: <a href=\"http://build.fhir.org/ig/HL7/US-Core/CapabilityStatement-us-core-server.html#patient\">http://build.fhir.org/ig/HL7/US-Core/CapabilityStatement-us-core-server.html#patient</a>  for example.</p>",
        "id": 234929632,
        "sender_full_name": "Eric Haas",
        "timestamp": 1618611538
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179177-conformance/topic/Capability.20Search.20Parameter/near/234860162\">said</a>:</p>\n<blockquote>\n<p>The fact that it 'exists' doesn't mean a server must support it.</p>\n</blockquote>\n<p>If the SearchParameter _id is not required then I believe the following statement in the spec is confusing <br>\n\"Servers are not required to implement any of the standard search parameters (except for the _id parameter described above). \" <br>\n<a href=\"https://www.hl7.org/fhir/search.html#parameters\">https://www.hl7.org/fhir/search.html#parameters</a> </p>\n<p>Prior to reading the feedback from <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  , I had the same opinion as <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> .  What was the sentence meant to convey in this context if not that _id was the exception to the rule?</p>",
        "id": 236698995,
        "sender_full_name": "Rick Lisseveld",
        "timestamp": 1619711730
    },
    {
        "content": "<p>To be honest, I'm really not sure.  Can you submit a change request for us to clarify?</p>",
        "id": 236700046,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1619712118
    },
    {
        "content": "<p>Thanks Lloyd. The change request has been created <a href=\"https://jira.hl7.org/browse/FHIR-32018\">https://jira.hl7.org/browse/FHIR-32018</a></p>",
        "id": 236714400,
        "sender_full_name": "Rick Lisseveld",
        "timestamp": 1619717756
    },
    {
        "content": "<p>When I wrote that it was certainly intended that _id must be supported; it's synonymous with a read but allows for _include. But technically, it must be supported if read is supported, I guess</p>",
        "id": 236738679,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1619727646
    },
    {
        "content": "<p>It's not totally clear to me why that's a \"must\".  If a system doesn't choose to support any _includes, forcing them to support multiple search syntaxes doesn't seem reasonable.  We allow you to say \"I support 'read', but not 'search'\", and this would essentially make that impossible.</p>",
        "id": 236741088,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1619728616
    },
    {
        "content": "<p>I'm just saying what we meant at the time</p>",
        "id": 236742454,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1619729257
    }
]