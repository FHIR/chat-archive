[
    {
        "content": "<p>Hi, we are using the Validate function in the DSTU2 library to validate all data against our custom profiles, and one of the profile settings for a  given element is the \"Pattern\" property. We (wrongly?) assume this is a regex pattern, but I cannot find any documentation on the usage of this property, and the validator fails when using a regex as the value (the code seems to do string compare).<br>\nWhat is the inteted usage of \"Pattern\"?</p>",
        "id": 153873227,
        "sender_full_name": "Odd A. S. Dahl",
        "timestamp": 1487929046
    },
    {
        "content": "<p><a href=\"http://build.fhir.org/elementdefinition-definitions.html#ElementDefinition.pattern_x_\" target=\"_blank\" title=\"http://build.fhir.org/elementdefinition-definitions.html#ElementDefinition.pattern_x_\">http://build.fhir.org/elementdefinition-definitions.html#ElementDefinition.pattern_x_</a></p>",
        "id": 153873228,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1487930126
    },
    {
        "content": "<p>Thanks. I'm assuming we should use Constraints instead to make sure element values are according to expected format (like min.length).</p>",
        "id": 153873229,
        "sender_full_name": "Odd A. S. Dahl",
        "timestamp": 1487931400
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192254\">@Odd A. S. Dahl</span> a FHIR validator should verify that actual values conform to constraints such as the maxLength property. You should only have to write an explicit constraint to validate rules that you cannot express using the standard properties of ElementDefinition.</p>",
        "id": 153873232,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1487937416
    },
    {
        "content": "<p>As the spec mentions, pattern is \"Mostly used for fixing values of CodeableConcept.\"<br>\nHere's an example:</p>\n<div class=\"codehilite\"><pre>        &lt;patternCodeableConcept&gt;\n          &lt;coding&gt;\n            &lt;system value=&quot;http://loinc.org&quot;/&gt;\n            &lt;code value=&quot;72166-2&quot;/&gt;\n          &lt;/coding&gt;\n        &lt;/patternCodeableConcept&gt;\n</pre></div>",
        "id": 153873233,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1487937693
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span>, we're planning to use it for validating min length of elements that are defined as strings. I checked now with a CommunicationRequest payload.contenString (which we have defined as string), &lt;contentString value=\"\"/&gt; does not give error or warning.</p>",
        "id": 153873234,
        "sender_full_name": "Odd A. S. Dahl",
        "timestamp": 1487938973
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192254\">@Odd A. S. Dahl</span> Note that FHIR defines an official extension for minimum length:<br>\n<a href=\"https://hl7.org/fhir/2017Jan/extension-minlength.html\" target=\"_blank\" title=\"https://hl7.org/fhir/2017Jan/extension-minlength.html\">https://hl7.org/fhir/2017Jan/extension-minlength.html</a><br>\nBut I'm not sure if/which validators currently support this extension.</p>",
        "id": 153873235,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1487939184
    },
    {
        "content": "<p>Actually, &lt;conmtentString value=\"\" /&gt;  violates one of the core element constraints, so should be picked up earlier.</p>",
        "id": 153873468,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1488069818
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span>  that is good to hear, I was reluctant to use the regex in the profile. From what I can see the validator only perform a type check on base types  (ProfileAssertion.cs:Validate()), but we'll add some custom code into our local build and wait for a future update.</p>",
        "id": 153873796,
        "sender_full_name": "Odd A. S. Dahl",
        "timestamp": 1488200588
    }
]