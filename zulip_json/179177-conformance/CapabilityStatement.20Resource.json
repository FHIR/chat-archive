[
    {
        "content": "<p>Has there been any active discussion around this change... <a href=\"https://fhirblog.com/2016/10/19/renaming-the-fhir-conformance-resource/\" target=\"_blank\" title=\"https://fhirblog.com/2016/10/19/renaming-the-fhir-conformance-resource/\">https://fhirblog.com/2016/10/19/renaming-the-fhir-conformance-resource/</a></p>",
        "id": 153853108,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1476826003
    },
    {
        "content": "<p>there was quite a lot of discussion, why?</p>",
        "id": 153853109,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476827657
    },
    {
        "content": "<p>I should have added, \"on this media\"...it would be interesting to read the Capability v Conformance debate. I can understand the movement away from conformance (which needs to be tested), but I'm not sure about 'capability' - I would have voted for 'implementation', but accept that I've probably missed my chance to vote.</p>",
        "id": 153853110,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1476831074
    },
    {
        "content": "<p>can't find anything here </p>",
        "id": 153853111,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476831156
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span> Note that CapabilityStatement represents both the capabilities of specific implementations as well as statements of desired capabilities (e.g. in a spec or RFP) and general capabilities of a shrink-wrapped application that isn't implemented in a specific endpoint.  That's one of the reasons we went with Capability.</p>",
        "id": 153853128,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1476842023
    },
    {
        "content": "<p>...but if a client wants to know what parts of the FHIR specification the Server implements at the point in time of the request?</p>",
        "id": 153853137,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1476842626
    },
    {
        "content": "<p>we haven't changed what the resource does </p>",
        "id": 153853166,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476878981
    },
    {
        "content": "<p>Is there a way to state the operations can only be invoked via a POST as opposed to a GET.</p>",
        "id": 153853172,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1476880703
    },
    {
        "content": "<p>idempotent = false</p>",
        "id": 153853174,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476880796
    },
    {
        "content": "<p>That seems strange - isn't idempotent a statement about behaviour?  For example I would expect $expand to be idempotent regardless of whether it's invoked with GET or POST</p>",
        "id": 153858029,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1479763168
    },
    {
        "content": "<p><a href=\"http://www.restapitutorial.com/lessons/idempotency.html\" target=\"_blank\" title=\"http://www.restapitutorial.com/lessons/idempotency.html\">http://www.restapitutorial.com/lessons/idempotency.html</a></p>",
        "id": 153858039,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1479768403
    },
    {
        "content": "<p>well, you're thinking about it backwrads, or alternatively, my answer was backward</p>",
        "id": 153858076,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1479787711
    },
    {
        "content": "<p>in FHIR, servers are expected to offer the GET approach as an option unless the operation is not idempotent</p>",
        "id": 153858077,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1479787749
    }
]