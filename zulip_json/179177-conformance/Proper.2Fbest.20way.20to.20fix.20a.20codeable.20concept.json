[
    {
        "content": "<p>I've been having some discussions on how this is best done in a profile attribute that you want to fix to a single concept. There don't appear to be a ton of examples but I've seen or heard of a few ways. Does anyone have guidance or can point me to more information?</p>\n<p>1. Should you fix the codeableconcept, the coding field or the system/code/display elements of the coding element?<br>\n2. Is it necessary to slice coding?<br>\n3. pattern[x] seems to be mentioned in the  description as a preferred way to fix a concept. Is this accurate? What are the differences between and consequences of fix[x] vs pattern[x]?<br>\n4. If you fix a display, will conformance checks fail if a different synonym is used?</p>",
        "id": 153934982,
        "sender_full_name": "Travis Stenerson",
        "timestamp": 1517583720
    },
    {
        "content": "<p>that raises many questions. Can you be clear on what 'fix to a single concept' means?</p>",
        "id": 153934984,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517583828
    },
    {
        "content": "<p>I have an observation profile that I would like to represent a single concept. For example 'Estrogen receptor status'. So I want the code field of this observation to always be that concept. I'm not sure how else to describe that, what clarifications do you need?</p>\n<p>Also, I am using one terminology, but others ER status profiles are using a different terminology, and I think interoperability can work there if we just have different coding elements in the codeable concept (correct me if I'm wrong). I'm also wondering if this will work when fixing a field.</p>",
        "id": 153934985,
        "sender_full_name": "Travis Stenerson",
        "timestamp": 1517584050
    },
    {
        "content": "<p>so you want to fix to a single fixed value - ok. (thought you might mean just any one single code).</p>",
        "id": 153934986,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517584213
    },
    {
        "content": "<p>so for Observation.code, you should just fix to a simple CodeableConcept:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;coding&quot;</span> <span class=\"p\">:</span> <span class=\"p\">[{</span>\n    <span class=\"nt\">&quot;system&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;(yours)&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;code&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;(yours}&quot;</span>\n  <span class=\"p\">}]</span>\n<span class=\"p\">}</span>\n</pre></div>",
        "id": 153934988,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517584275
    },
    {
        "content": "<p>And if I include a display there, will synonyms work? If a resource has a coding with multiple entries from different systems, will it conform to the profile if it has that coding? ie is it intersection != null or is it codeableConcept == the fixed value.</p>\n<p>Also, this is nitpicky, but the IG publisher looks a lot nicer when you fix code, system and display separately, otherwise it puts a little json object in there if you fix the CodeableConcept, is there a way to change that?</p>",
        "id": 153934998,
        "sender_full_name": "Travis Stenerson",
        "timestamp": 1517585128
    },
    {
        "content": "<p>if you put that in the fixed value, then it must be exactly that. if you put it in pattern, then it must contain at least those elements, but any other elements are also possible</p>",
        "id": 153934999,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517585230
    },
    {
        "content": "<p>as for the nitpick.. there's no way to change that, though we can talk about it... but I for one don't think it would be better</p>",
        "id": 153935003,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517585548
    },
    {
        "content": "<p>Ok, so just to make sure I'm understanding:<br>\nFixing the display field will require that synonym exactly for conformance? And if a resource has a CodeableConcept with 2 codings from different systems, it will fail conformance if you have fixedCodeableConcept with a single coding, even if one of the two codings is equivalent to the the fixed one.</p>",
        "id": 153935022,
        "sender_full_name": "Travis Stenerson",
        "timestamp": 1517588122
    },
    {
        "content": "<p>yes. unless you use pattern, instead of fixed</p>",
        "id": 153935030,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517590099
    },
    {
        "content": "<p>One more quick question Grahame, for the FHIR profiles, like the Observation profiles like HeartRate, I see on the main site, many of the fixed items have coding sliced which is then followed by a fixed system and code. Is the slicing necessary?</p>",
        "id": 153935034,
        "sender_full_name": "Travis Stenerson",
        "timestamp": 1517591866
    },
    {
        "content": "<p>in that case yes, because of the purpose of those profiles. Those profiles say 'you must use this coding, whatever other codes you are going to use'. And we want to fix the display too while we are at it</p>",
        "id": 153935043,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517593917
    },
    {
        "content": "<p>So this is how one would say 'you can use other codings too, but this one has to be there'?</p>",
        "id": 153935053,
        "sender_full_name": "Travis Stenerson",
        "timestamp": 1517595006
    },
    {
        "content": "<p>it's one way to do this. It's done this way to make it easier for further profiling to happen</p>",
        "id": 153935054,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517595052
    },
    {
        "content": "<p>Great, thank you, that is what I am trying to do, I will imitate this for fixing codes.</p>",
        "id": 153935055,
        "sender_full_name": "Travis Stenerson",
        "timestamp": 1517595101
    },
    {
        "content": "<p>Just to be clear.   What I am hearing is....</p>\n<p>having the pattern:</p>\n<p>{<br>\n  \"coding\" : [{<br>\n    \"system\" : \"(yours)\",<br>\n    \"code\" : \"(yours}\",<br>\n\"display\":\"(yours)\"<br>\n  }]<br>\n}</p>\n<p>is equivalent to slicing (open)  on  code and system?    I was never 100% clear about that and that is one reason why those profiles are explicitly fixed in a slice.  Also the rendered display is clearer to me at least.</p>",
        "id": 153935146,
        "sender_full_name": "Eric Haas",
        "timestamp": 1517676204
    },
    {
        "content": "<p>What GG meant by \" It's done this way to make it easier for further profiling to happen\"    is that you can explictily add your own slices in a downstream profile that is built upon it.</p>",
        "id": 153935147,
        "sender_full_name": "Eric Haas",
        "timestamp": 1517676383
    },
    {
        "content": "<p>Thats what I interpreted from what Grahame said, Eric. That patternCodeableConcept would be the same as slicing the coding element and fixing a code/system on that slice, but the slicing/fixing would allow for other coding elements. Hopefully this interpretation is correct.</p>\n<p>And yes I agree that the rendered display is better how it was done in those observation profiles on <a href=\"http://hl7.org/fhir\" target=\"_blank\" title=\"http://hl7.org/fhir\">hl7.org/fhir</a>.</p>",
        "id": 153935170,
        "sender_full_name": "Travis Stenerson",
        "timestamp": 1517690891
    }
]