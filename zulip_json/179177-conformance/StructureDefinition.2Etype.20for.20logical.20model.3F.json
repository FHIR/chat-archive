[
    {
        "content": "<p>I'm trying to determine how Forge should initialize the StructureDefinition.type field for logical models. R4 introduces some additional rules for logical models and StructureDefinition.type, however I don't quite understand:<br>\n<a href=\"http://build.fhir.org/structuredefinition-definitions.html#StructureDefinition.type\" target=\"_blank\" title=\"http://build.fhir.org/structuredefinition-definitions.html#StructureDefinition.type\">http://build.fhir.org/structuredefinition-definitions.html#StructureDefinition.type</a><br>\n\"Absolute URLs are only allowed in logical models.\"<br>\n- Do logical models <em>have to</em> specify an absolute url? Or are there other options?<br>\n- Is this an author-defined url?<br>\n- Or should this value be equal to the canonical url?<br>\n\"For logical models, where the type is a URL, the type name SHOULD start with the tail of the type URL where required.\"<br>\nWhat does this mean? What \"type name\" does this refer to?</p>",
        "id": 154015615,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1541424496
    },
    {
        "content": "<ul>\n<li>author defined URL. </li>\n<li>Would typically be the same as the canonical URL (has been in all the ones I've done).</li>\n<li>all the path names e.g. <a href=\"http://hl7.org.au/fhir/StructureDefinition/Colorectal\" target=\"_blank\" title=\"http://hl7.org.au/fhir/StructureDefinition/Colorectal\">http://hl7.org.au/fhir/StructureDefinition/Colorectal</a> (for both canonical and type), all the Paths are Colorectal.xxxx</li>\n</ul>",
        "id": 154015843,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1541487616
    },
    {
        "content": "<p>Excellent, thanks for clarification!</p>",
        "id": 154017095,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1541756856
    },
    {
        "content": "<p>Thanks to Michel, Forge is now implementing these rules. Follow-up problem: When trying to validate one of these new logical models I am running into the issue that that the sdf-8 constraint is failing. If we define the type as a URL, \"element.first().path = %resource.type\" seems to fail. Do we need to exclude logical models in this rule, just like in e.g. sdf-11?</p>",
        "id": 154023034,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1543996164
    },
    {
        "content": "<p>Concerning sdf-8, the description of StructureDefinition.type provides some guidance:<br>\n<a href=\"http://build.fhir.org/structuredefinition-definitions.html#StructureDefinition.type\" target=\"_blank\" title=\"http://build.fhir.org/structuredefinition-definitions.html#StructureDefinition.type\">http://build.fhir.org/structuredefinition-definitions.html#StructureDefinition.type</a></p>\n<blockquote>\n<p>\"For logical models, where the type is a URL, the type name SHOULD start with the tail of the type URL where required.\"</p>\n</blockquote>\n<p>I propose we update the sdf-8 invariant expression accordingly.</p>",
        "id": 154024037,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1544438902
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Can we make this fix for R4?</p>",
        "id": 154024246,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544480054
    },
    {
        "content": "<p>looks like we need to</p>",
        "id": 154024632,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1544565429
    },
    {
        "content": "<p>propose a change on FHIR-I. but wouldn't committee need to vote on this one?</p>",
        "id": 154024633,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1544565452
    },
    {
        "content": "<p>We can un-cancel our Monday call if we need to vote on it, but we'd need to pre-apply it.  I think it's a no-brainer - shouldn't be controversial</p>",
        "id": 154024643,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544566368
    },
    {
        "content": "<p>that would be too late to apply it.</p>",
        "id": 154024654,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1544572876
    },
    {
        "content": "<p>it's normative content, and I believe it's the primary expression we are talking about here</p>",
        "id": 154024655,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1544572900
    },
    {
        "content": "<p>That's why I said we'd need to pre-apply.  The Monday vote would be a formality</p>",
        "id": 154024671,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544585801
    },
    {
        "content": "<p>If it's a situation where it's clearly broken, I think it's a non-substantive technical correction</p>",
        "id": 154024672,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544585854
    },
    {
        "content": "<p>I feel as though FMG should ok</p>",
        "id": 154024687,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1544588795
    },
    {
        "content": "<p>Do you want me to put together the pull request?  We can then discuss on the call.</p>",
        "id": 154024694,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544589384
    },
    {
        "content": "<p>ok</p>",
        "id": 154024696,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1544589542
    },
    {
        "content": "<p>Added <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19762\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=19762\">GF#19762</a></p>",
        "id": 154024699,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544590375
    },
    {
        "content": "<p>The current invariant is this:<br>\n<code>element.first().path = %resource.type and element.tail().all(path.startsWith(%resource.type&amp;'.'))</code><br>\nMy proposed change is this:<br>\n<code>(kind = 'logical' or element.first().path = %resource.type) and element.tail().all(path.startsWith(%resource.snapshot.element.first().path&amp;'.'))</code></p>",
        "id": 154024701,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544591097
    },
    {
        "content": "<p>However, there's a problem with 8a too:</p>",
        "id": 154024702,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544591134
    },
    {
        "content": "<p><code>element.first().path.startsWith(%resource.type) and (element.tail().not() or element.tail().all(path.startsWith(%resource.type&amp;'.')))</code></p>",
        "id": 154024703,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544591138
    },
    {
        "content": "<p>I can make the first part conditional on whether it's not a logical model.  However, for the second part, I can't just grab the first differential element.  I need to grab the first differential element, split it by \".\" and grab the first node.</p>",
        "id": 154024705,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544591242
    },
    {
        "content": "<p>I have no idea if that's possible, or if so, how to do it.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> ?</p>",
        "id": 154024706,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544591262
    },
    {
        "content": "<p>FHIRPath doesn't define a split operator, no.</p>",
        "id": 154024712,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1544591674
    },
    {
        "content": "<p>I've tried to come up with a way to do it with repeat or aggregate, but so far, no luck.</p>",
        "id": 154024713,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1544591700
    },
    {
        "content": "<p>If you always only need the first element in the result of the split, you can just grab that pretty easily with a substring, right?</p>",
        "id": 154024714,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1544591813
    },
    {
        "content": "<p>The first path might be \"Foo\" or \"Foo.bar\" or \"Foo.bar.whatever\".  In all cases, I want to grab just the string \"Foo\".  Not sure how to do that with substring</p>",
        "id": 154024715,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544592238
    },
    {
        "content": "<p>I think you should just revoke the entire rules for logical models</p>",
        "id": 154024716,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1544592378
    },
    {
        "content": "<p>You still want logical models to have a common name as the root of all the paths</p>",
        "id": 154024717,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544592488
    },
    {
        "content": "<p>I think I can use replaceMatches to turn everything following \".\" into nothing</p>",
        "id": 154024718,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544592526
    },
    {
        "content": "<p><code>(kind = 'logical' or element.first().path.startsWith(%resource.type)) and (element.tail().not() or  element.tail().all(path.startsWith(%resource.differential.element.first().path.replaceMatches('\\..*','')&amp;'.')))</code></p>",
        "id": 154024719,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544592691
    },
    {
        "content": "<p>Does that look ok?</p>",
        "id": 154024720,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544592720
    },
    {
        "content": "<p>I'm getting this error: .path.replaceMatches('\\\\..*','')&amp;'.')))' has illegal path (The parameter type '<a href=\"http://hl7.org/fhirpath/String\" target=\"_blank\" title=\"http://hl7.org/fhirpath/String\">http://hl7.org/fhirpath/String</a>' is not legal for replaceMatches parameter 1. expecting SINGLETON[http://hl7.org/fhir/StructureDefinition/string]) (src = Publisher)</p>",
        "id": 154024721,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544593338
    },
    {
        "content": "<p>That seems like a build tool error to me?  (As the example in the spec is definitely passing a fhirpathString, not a FHIR string)</p>",
        "id": 154024722,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544593385
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ?</p>",
        "id": 154024723,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544593392
    },
    {
        "content": "<p>it does look like an error in the code to me</p>",
        "id": 154024725,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1544593500
    },
    {
        "content": "<p>Is that something fixable at this point?</p>",
        "id": 154024726,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544593593
    },
    {
        "content": "<p>it should be. It'll be a few hours though - I'm deep inside generating the extension packages</p>",
        "id": 154024727,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1544593673
    },
    {
        "content": "<p>I'll take a stab and see how I go</p>",
        "id": 154024728,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1544593983
    }
]