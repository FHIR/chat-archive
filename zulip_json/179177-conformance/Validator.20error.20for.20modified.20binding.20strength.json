[
    {
        "content": "<p>Hello,<br>\nwe created a profile on Specimen and changed the binding strength of  <code>collection.fastingStatus</code> to required. Now, we get the following Validator Error:</p>\n<div class=\"codehilite\"><pre><span></span> Information @ Bundle.entry[6].resource.collection.fastingStatus.ofType(CodeableConcept) (line 240, col24) : Binding for path Bundle.entry[6].resource.collection.fastingStatus.ofType(CodeableConcept) has no source, so can&#39;t be checked\n</pre></div>\n\n\n<p>it is working when we change the  profile differential so the <code>binding</code> element includes the ValueSet as well as the strength attribute:</p>\n<div class=\"codehilite\"><pre><span></span>{\n  &quot;id&quot;: &quot;Specimen.collection.fastingStatus[x]&quot;,\n  &quot;path&quot;: &quot;Specimen.collection.fastingStatus[x]&quot;,\n  &quot;type&quot;: [\n    {\n      &quot;code&quot;: &quot;CodeableConcept&quot;\n    }\n  ],\n  &quot;mustSupport&quot;: true,\n  &quot;binding&quot;: {\n    &quot;strength&quot;: &quot;required&quot;,\n    &quot;valueSet&quot;: &quot;http://terminology.hl7.org/ValueSet/v2-0916&quot;\n  }\n}\n</pre></div>\n\n\n<p>Is this a Validator Error?</p>",
        "id": 173357121,
        "sender_full_name": "Noemi Deppenwiese",
        "timestamp": 1565944877
    },
    {
        "content": "<p>the validator says that there is no binding.valueSet. So something has gone wrong between what you've pasted above and the validator code. How are you running the validator?</p>",
        "id": 173372580,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1565961873
    },
    {
        "content": "<p>The pasted JSON above works, it is our original profile generating the error (differential):</p>\n<div class=\"codehilite\"><pre><span></span> {\n        &quot;id&quot;: &quot;Specimen.collection.fastingStatus[x]&quot;,\n        &quot;path&quot;: &quot;Specimen.collection.fastingStatus[x]&quot;,\n        &quot;type&quot;: [\n          {\n            &quot;code&quot;: &quot;CodeableConcept&quot;\n          }\n        ],\n        &quot;mustSupport&quot;: true,\n        &quot;binding&quot;: {\n          &quot;strength&quot;: &quot;required&quot;\n        }\n      },\n</pre></div>\n\n\n<p>But it should (?)  work because the differential only lists differences to the original resource.<br>\nIm running the .jar and providing the files locally.</p>",
        "id": 173372845,
        "sender_full_name": "Noemi Deppenwiese",
        "timestamp": 1565962111
    },
    {
        "content": "<p>oh. hmm</p>",
        "id": 173372968,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1565962212
    },
    {
        "content": "<p>We are running the Validator exactly this way: <a href=\"https://github.com/samply/bbmri-fhir-ig/blob/master/.travis.yml\" target=\"_blank\" title=\"https://github.com/samply/bbmri-fhir-ig/blob/master/.travis.yml\">https://github.com/samply/bbmri-fhir-ig/blob/master/.travis.yml</a></p>",
        "id": 173375923,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1565964362
    },
    {
        "content": "<p>yes this is an issue in the current code for the snapshot generator. I haven't looked at that code for a while. I see it doesn't let you change a required binding, but it should. And if you're going from something other than a required binding to a required binding, then this will get ignored if you don't specify a value set&gt;</p>\n<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> what does your snapshot generator do in this regard?</p>",
        "id": 173404901,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1565987155
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Thanks for investigating!</p>",
        "id": 173431381,
        "sender_full_name": "Alexander Kiel",
        "timestamp": 1566027616
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> the .NET <code>SnapshotGenerator</code> allows and handles such a binding constraint. The resulting snapshot will inherit the <code>binding.valueSet</code> property value from the base/core <code>Specimen</code> definition, merged with the required <code>binding.strength</code> constraint as specified by the <code>Specimen</code> profile diff.</p>",
        "id": 173540533,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1566218577
    },
    {
        "content": "<p>thx. what do you do if the base has a required binding and it's being overridden?</p>",
        "id": 173540690,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566218705
    },
    {
        "content": "<p>We decided to keep a clean separation between the responsibilities of the .NET <code>SnapshotGenerator</code> and the <code>Validator</code> classes. The SnapGen always tries to produce an output. Specified diff constraints always override matching constraints in the base resource. The SnapGen does not try to validate, however it will emit <code>OperationOutcome</code> issues for \"suspicious\" diff constraints. This approach allows Forge to always open a profile and generate a full tree representation, even if it is invalid, so the author can correct any mistakes.<br>\nIt is up to the validator (and/or Forge) to actually verify the contents of a generated snapshot, i.e. verify if the specified constraints are actually valid with respect to the referenced base profile.</p>",
        "id": 173541671,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1566219632
    },
    {
        "content": "<p>This also keeps the complexity of the <code>SnapshotGenerator</code> logic down to a reasonable/feasible level, and allows us to develop and test .NET SnapGen and Validator components separately.</p>",
        "id": 173541917,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1566219861
    }
]