[
    {
        "content": "<p>How does one slice a value[x] by data type?  What discriminator would you use?</p>",
        "id": 153828112,
        "sender_full_name": "Keith Boone",
        "timestamp": 1463465770
    },
    {
        "content": "<p>I'm trying to slice something by type, but cannot seem to get it to work on observation. Anyone here have any words of wisdom. The error I'm getting is: Attempt to a slice an element that does not repeat: Observation.value[x]/null from <a href=\"http://hl7.org/fhir/StructureDefinition/CodeableConcept\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/CodeableConcept\">http://hl7.org/fhir/StructureDefinition/CodeableConcept</a> but my use of value[x] only includes Quantity | string.</p>",
        "id": 153828118,
        "sender_full_name": "Keith Boone",
        "timestamp": 1463473342
    },
    {
        "content": "<p>discriminator should be @type per the profiling page in the spec</p>",
        "id": 153828125,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463479066
    },
    {
        "content": "<p>Yep, set that, still getting the above error.  </p>",
        "id": 153828137,
        "sender_full_name": "Keith Boone",
        "timestamp": 1463492724
    },
    {
        "content": "<div class=\"codehilite\"><pre> [java] Caused by: org.hl7.fhir.dstu3.exceptions.DefinitionException: Attempt to a slice an element that does not repeat: Observation.value[x]/null from http://hl7.org/fhir/StructureDefinition/CodeableConcept\n [java]     at org.hl7.fhir.dstu3.utils.ProfileUtilities.processPaths(ProfileUtilities.java:402)\n [java]     at org.hl7.fhir.dstu3.utils.ProfileUtilities.generateSnapshot(ProfileUtilities.java:309)\n [java]     at org.hl7.fhir.definitions.generators.specification.ProfileGenerator.generate(ProfileGenerator.java:793)\n [java]     at org.hl7.fhir.definitions.generators.specification.ProfileGenerator.generate(ProfileGenerator.java:714)\n</pre></div>",
        "id": 153828138,
        "sender_full_name": "Keith Boone",
        "timestamp": 1463492747
    },
    {
        "content": "<p>What is confusing is that CodeableConcept ISN'T one of the data types I've profiled Observation.value[x] to.</p>",
        "id": 153828139,
        "sender_full_name": "Keith Boone",
        "timestamp": 1463492790
    },
    {
        "content": "<p>I'll try and look it tomorrow</p>",
        "id": 153828184,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463513427
    },
    {
        "content": "<p>Cannot slice by type when base cardinality is 0..1, although I can see where it might be useful to look at those as slices.  I worked around it elsewhere.</p>",
        "id": 153828261,
        "sender_full_name": "Keith Boone",
        "timestamp": 1463527622
    },
    {
        "content": "<p>I've done it elsewhere - sliced by type</p>",
        "id": 153828278,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463528544
    },
    {
        "content": "<p>have alook at the DAF profile on condition</p>",
        "id": 153828280,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1463528590
    },
    {
        "content": "<p>[apologies if this is the wrong stream; happy to re-post elsewhere]<br>\nIn the BP slicing example <a href=\"http://build.fhir.org/profiling-examples.html#blood-pressure\" target=\"_blank\" title=\"http://build.fhir.org/profiling-examples.html#blood-pressure\">http://build.fhir.org/profiling-examples.html#blood-pressure</a> , could i then extend it with a PosturedBP a la:?</p>\n<div class=\"codehilite\"><pre><span></span>  &lt;element&gt; &lt;!-- 8 --&gt;\n    &lt;path value=&quot;Observation.component&quot;/&gt;\n    &lt;name value=&quot;diastolic&quot;/&gt; &lt;!-- mandatory - gives the slice a name --&gt;\n    &lt;min value=&quot;1&quot;/&gt;\n    &lt;max value=&quot;1&quot;/&gt;\n  &lt;/element&gt;\n  &lt;element&gt; &lt;!-- 9 --&gt;\n    &lt;path value=&quot;Observation.component.code&quot;/&gt;\n    &lt;min value=&quot;1&quot;/&gt;\n    &lt;fixedCodeableConcept&gt;\n      &lt;coding&gt;\n        &lt;system value=&quot;http://snomed.info/sct&quot; /&gt;\n        &lt;code value=&quot;9851009&quot; /&gt;\n        &lt;display value=&quot;Body position&quot; /&gt;\n      &lt;/coding&gt;\n    &lt;/fixedCodeableConcept&gt;\n  &lt;/element&gt;\n  &lt;element&gt; &lt;!-- 10 --&gt;\n    &lt;path value=&quot;Observation.component.valueQuantity&quot;/&gt;\n    &lt;min value=&quot;1&quot;/&gt;\n  &lt;/element&gt;\n</pre></div>",
        "id": 153920551,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1511254976
    },
    {
        "content": "<p>yes, because the slicing rules do not say that the slices are closed</p>",
        "id": 153920553,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1511255347
    },
    {
        "content": "<p>Also in the BP slicing example <a href=\"http://build.fhir.org/profiling-examples.html#blood-pressure\" target=\"_blank\" title=\"http://build.fhir.org/profiling-examples.html#blood-pressure\">http://build.fhir.org/profiling-examples.html#blood-pressure</a> , there are seven <code>&lt;element/&gt;</code> decls (using regex {} notation for cardinalities):<br>\n1. discriminator=\"code\" {2,}<br>\n2. name=\"systolic\" {1,1}<br>\n3. fixedCodeableConcept/coding/code=\"8480-6\" {1,}<br>\n4. valueQuantity {1,}<br>\n5. name=\"diastolic\" {1,1}<br>\n6. fixedCodeableConcept/coding/code=\"8462-4\" {1,}<br>\n7. valueQuantity {1,}<br>\n(I assume 1. is in the FHIR Observation core resource and 2-7 are in a profile that extends it)<br>\nWhat associates e.g. 3 and 4 with 2? Is is just that they come in threes?</p>",
        "id": 153920554,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1511255541
    },
    {
        "content": "<p>is there a better stream for validation stuff?</p>",
        "id": 153920559,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1511256495
    },
    {
        "content": "<p>no this is the place-  I just haven't had time to think about that one yet</p>",
        "id": 153920561,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1511256740
    },
    {
        "content": "<p>I'm examining this 'cause I'm working on the inheritance model for ShEx. I'm modeling it on XML Schema's separation of extension vs. restriction.</p>",
        "id": 153920562,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1511256832
    },
    {
        "content": "<p>1 seems like a base constraint. (2-4) and (5-7) seem like restrictions on that and my proposed PosturedBP seems like an extension of BP.</p>",
        "id": 153920564,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1511256935
    },
    {
        "content": "<p>we don't have that in FHIR - everything is additional.</p>",
        "id": 153920565,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1511256949
    },
    {
        "content": "<p>does that mean that (2-4) and (5-7) don't have to comply with (1), i.e. they needn't have a code if they didn't happen to mention one?</p>",
        "id": 153920566,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1511257031
    },
    {
        "content": "<p>or maybe discriminator= is sort of a special case that infects everything with the same path (but that smells a lot like restriction)</p>",
        "id": 153920567,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1511257157
    },
    {
        "content": "<p>discriminator is special. It's orthogonal to the constraint model - an extra layer of rules. What that says is that each of the slices must be distinguished by the fixed value(s) for code</p>",
        "id": 153920569,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1511257171
    },
    {
        "content": "<p>so yes, a special case, and yes, a restriction of sorts, but actually a meta-restriction, if you want to be precise - a constraint on the model, not the instances</p>",
        "id": 153920570,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1511257207
    },
    {
        "content": "<p>and that can be applied by a core resource or any in a chain of derivative profiles?</p>",
        "id": 153920572,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1511257399
    },
    {
        "content": "<p>it could, though the only discriminator we would ever apply in the base resource is on extension, which are always at least discriminated by url</p>",
        "id": 153920573,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1511257505
    },
    {
        "content": "<p>derivative profiles must also observe the rules of anything they derive from</p>",
        "id": 153920574,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1511257519
    },
    {
        "content": "<p>the prob i'm having with the \"all are extensions\" notion is that (1) seems like it's saying that anything derived must have two or more components and (2-4), (5-7) must be talking about those same components or we'd have have to create BP instances with a systolic, a diastolic and two more components.</p>",
        "id": 153920579,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1511257773
    },
    {
        "content": "<p>so it seems like the (8-10) i uttered first (PostureBP) are extending the package of (2-4),(5-7) while they in turn are constraining (1) (and probably (0) if we assume a fhir:Observation provides a minimalistic constraint on component {0,})</p>",
        "id": 153920583,
        "sender_full_name": "Eric Prud'hommeaux",
        "timestamp": 1511258276
    },
    {
        "content": "<p>you can add slices in derived profiles. Whether they extend 2-4 or 5-7 or are new depends on the slice names</p>",
        "id": 153920584,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1511258402
    },
    {
        "content": "<p>Is it that 3 and 4 are associated with 2 because of the values of <code>path</code>identify a hierarchy?<br>\n1 - &lt;path value=\"Observation.component\"/&gt;<br>\n2 - &lt;path value=\"Observation.component\"/&gt;<br>\n3 - &lt;path value=\"Observation.component.code\"/&gt;<br>\n4 - &lt;path value=\"Observation.component.valueQuantity\"/&gt;<br>\n5 - &lt;path value=\"Observation.component\"/&gt;<br>\n6 - &lt;path value=\"Observation.component.code\"/&gt;<br>\n7 - &lt;path value=\"Observation.component.valueQuantity\"/&gt;</p>",
        "id": 153921368,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1511487291
    },
    {
        "content": "<p>Yes, indeed. The hierarchy get a bit hidden by the flat representation, but mentally I consider 2-4 children of 1 and 3-4 children of 2.</p>",
        "id": 153921790,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1511863074
    }
]