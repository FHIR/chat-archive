[
    {
        "content": "<p>Situation: We have a german extension for Patient.gender, to differentiate between two different kinds of \"other\", adding the codes \"undetermined\" and \"divers\", somewhat like this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;gender</span> <span class=\"na\">value=</span><span class=\"s\">&quot;other&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://fhir.de/StructureDefinition/gender-amtlich-de&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;divers&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span>\n<span class=\"nt\">&lt;/gender&gt;</span>\n</pre></div>\n\n\n<p>If we want to be able to search for Patients of gender \"divers\", do we need to add a new SearchParameter, or is there a way to \"extend the reach\" of the existing <code>gender</code>Parameter (by adding another FHIRPath expression) to also include the values from the extension, to allow queries like <code>/Patient?gender=divers</code>? Can an IG extend the definition of SearchParameters?</p>",
        "id": 169849884,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1562574344
    },
    {
        "content": "<p>Th IG would need to have another search parameter, or filter to other server side, and divers on client side.</p>",
        "id": 169851046,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1562575551
    },
    {
        "content": "<p>I thought so. But it felt worth asking :)</p>",
        "id": 169851100,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1562575604
    },
    {
        "content": "<p>Hold on,  what if  <code>SP.derivedFrom</code> =  <code>gender</code> SP  and then you value <code>SP.expression</code>.   What does that mean?  Is that expression in addition to the <code>gender</code> SP or instead of the <code>gender1</code> SP ?</p>",
        "id": 169877691,
        "sender_full_name": "Eric Haas",
        "timestamp": 1562598654
    },
    {
        "content": "<p>I would think that an SP that is <code>derivedFrom</code> a core SP sort of \"overwrites\" the original SP definition.<br>\nSo in my case, the derived SP would have to specify both the path to Patient.gender as well as Patient.gender.extension</p>\n<p>The spec says</p>\n<blockquote>\n<p>If a derivedFrom is provided, then the details in the search parameter must be consistent with the definition from which it is defined. i.e. the parameter should have the same meaning, and (usually) the functionality should be a proper subset of the underlying search parameter.</p>\n</blockquote>\n<p>So technically what I was proposing doesn't fit the bill for \"proper subset\". But then again, this sounds like a very soft SHOULD... <span aria-label=\"smiling devil\" class=\"emoji emoji-1f608\" role=\"img\" title=\"smiling devil\">:smiling_devil:</span></p>",
        "id": 170433570,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1562660930
    },
    {
        "content": "<p>Subset, not superset.</p>",
        "id": 170497944,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1562713671
    }
]