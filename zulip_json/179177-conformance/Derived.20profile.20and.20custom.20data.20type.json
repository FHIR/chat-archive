[
    {
        "content": "<p>I'm currently creating a derived profile and am a bit stuck at the point of further constraining elements of a contained custom data type.<br>\nTo be precise: the profile I'm deriving from is <a href=\"https://simplifier.net/BasisprofilDE/patient-de-basis\" target=\"_blank\" title=\"https://simplifier.net/BasisprofilDE/patient-de-basis\">https://simplifier.net/BasisprofilDE/patient-de-basis</a> which uses <a href=\"https://simplifier.net/BasisprofilDE/address-de-basis\" target=\"_blank\" title=\"https://simplifier.net/BasisprofilDE/address-de-basis\">https://simplifier.net/BasisprofilDE/address-de-basis</a> as it's sole type for address.<br>\nIn my derived profile, I want to add some additional constraints, like must-support, cardinality etc., to certain elements of the address.<br>\nAt least in Forge, I can't find a possibility to do so, since Forge shows the structure of the FHIR base Address datatype instead of address-de-basis within my derived profile.<br>\nSo, my question is: how can I achieve this in Forge, or if not possible, how should that be defined in the profile's XML?<br>\nOr, third option, is it even possible to constrain custom data types within a derived profile?</p>",
        "id": 153897104,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1500311892
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span> Do you have all the relevant StructureDefinitions in one folder? Forge will try to find referenced profiles in the same folder, or subfolders. If they're found,  Forge is able to load the changes you made to the data type and show them. If Forge cannot load the referenced profile, it will default to showing the standard data type fields.</p>",
        "id": 153897178,
        "sender_full_name": "Mirjam Baltus",
        "timestamp": 1500365410
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span>, when you open a profile, Forge will try to resolve all referenced external (element type) profiles from the containing file folder (and subfolders). So try to place all the referenced datatype &amp; extension profiles in the same folder.<br>\nFor now, you have to manually download/import all dependencies. In a future release, we're planning to implement resolving external profiles from Simplifier.</p>",
        "id": 153897182,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1500366393
    },
    {
        "content": "<p>Thanks Mirjam and Michel. I have the profiles and all required extensions in the same folder.<br>\nI just subsequently created a new derived profile on patient-de-basis to double check.<br>\nStrange enough, on the first try address showed the elements of the base Address type, while on the second try I actually see it as profiled in address-de-basis ...</p>",
        "id": 153897184,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1500366797
    },
    {
        "content": "<p>This is really weird, it seems to work at the moment ...</p>",
        "id": 153897185,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1500366906
    },
    {
        "content": "<p>I also noticed that on the last try, Forge needed much longer to open the new derived profile. So I suspect that for whatever reason it failed to successfully scan the folder at the earlier tries.</p>",
        "id": 153897186,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1500367620
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span>, note that Forge caches the contents of profile working folders on the first access. Currently this is not always clear in the UI (TODO). Restarting the application (and also closing all open files) will clear all caches and re-scan the actual file folder contents.</p>",
        "id": 153897187,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1500367714
    },
    {
        "content": "<p>Ok, that might be the explanation for the longer time to open.<br>\nWell, atm I can't reproduce the problem. Should have done a screenshot to convince myself that it was not me who failed :D</p>",
        "id": 153897190,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1500368282
    },
    {
        "content": "<p>I'm aware that the internal file management currently isn't very clear to the end user. We have plans to completely rewrite the session explorer, in order to improve this. However I haven't had time to work on this yet.</p>",
        "id": 153897191,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1500368414
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191347\">@Mirjam Baltus</span> <span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> Just got the Forge issue once again.<br>\nThis is the base profile in Forge:<br>\n<a href=\"/user_uploads/10155/I9dMMJuGmUAmlfUa_k1JRqyM/patient-de-basis-name.png\" target=\"_blank\" title=\"patient-de-basis-name.png\">patient-de-basis-name.png</a> <br>\nAnd this is the derived profile:<br>\n<a href=\"/user_uploads/10155/1_QCH8HvXwsbjxP_rsQBFT-S/patient-de-vsdm-name.png\" target=\"_blank\" title=\"patient-de-vsdm-name.png\">patient-de-vsdm-name.png</a> <br>\nNote that e.g. the extensions to family are missing in the derived profile.</p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/I9dMMJuGmUAmlfUa_k1JRqyM/patient-de-basis-name.png\" target=\"_blank\" title=\"patient-de-basis-name.png\"><img src=\"/user_uploads/10155/I9dMMJuGmUAmlfUa_k1JRqyM/patient-de-basis-name.png\"></a></div><div class=\"message_inline_image\"><a href=\"/user_uploads/10155/1_QCH8HvXwsbjxP_rsQBFT-S/patient-de-vsdm-name.png\" target=\"_blank\" title=\"patient-de-vsdm-name.png\"><img src=\"/user_uploads/10155/1_QCH8HvXwsbjxP_rsQBFT-S/patient-de-vsdm-name.png\"></a></div>",
        "id": 153897317,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1500477551
    },
    {
        "content": "<p>Same for address, i.e. both custom data types (humanname-de-basis and address-de-basis) are there as the type, but not in the representation.</p>",
        "id": 153897321,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1500477890
    },
    {
        "content": "<p>Stefan, do you have specific steps that can reproduce the issue? My tests all seem to work correctly. If so, please send the steps to <a href=\"mailto:forge@furore.com\" title=\"mailto:forge@furore.com\">forge@furore.com</a> so we can investigate and resolve it.</p>",
        "id": 153897323,
        "sender_full_name": "Mirjam Baltus",
        "timestamp": 1500478141
    },
    {
        "content": "<p>We store all profiles with snapshots from Forge for better representation in Simplifier. Manually removing the snapshot part from the XML solved it.<br>\nI'll send you the steps I took by e-mail.</p>",
        "id": 153897324,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1500478296
    },
    {
        "content": "<p>We have stopped generating snapshots in Forge and generate them using the IGPublisher.</p>",
        "id": 153897396,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1500516366
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span>, thank you for the report. Are all referenced profiles available in the working folder? Because missing references may prevent Forge from building a full tree.<br>\nFYI I'm currently working on a new release with a number of bug fixes. I'll try to also fix this issue.</p>",
        "id": 153897422,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1500541023
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> the working folder is basically a clone of <a href=\"https://github.com/hl7germany/basisprofil-de\" target=\"_blank\" title=\"https://github.com/hl7germany/basisprofil-de\">https://github.com/hl7germany/basisprofil-de</a> plus the core extensions we use.<br>\nI'd be very happy to see the fix in the next release. It really slows down profiling</p>",
        "id": 153897425,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1500542264
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span>, Last week I've managed to fix a nasty bug in the development branch regarding faulty element matching. I've tried your example in the latest internal build and it now seems to work correctly.<br>\nHere's a screenshot of patient-de-vsdm:<br>\n<a href=\"/user_uploads/10155/UK00txsBIMLiWTqZdsj_wtMR/Forge-Develop.PNG\" target=\"_blank\" title=\"Forge-Develop.PNG\">Forge-Develop.PNG</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/UK00txsBIMLiWTqZdsj_wtMR/Forge-Develop.PNG\" target=\"_blank\" title=\"Forge-Develop.PNG\"><img src=\"/user_uploads/10155/UK00txsBIMLiWTqZdsj_wtMR/Forge-Develop.PNG\"></a></div>",
        "id": 153897426,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1500542666
    },
    {
        "content": "<p>Thanks Michel, I'll give it a try</p>",
        "id": 153897455,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1500558762
    }
]