[
    {
        "content": "<p>Due to the changes implemented in <a href=\"https://github.com/hapifhir/org.hl7.fhir.core/issues/466\">https://github.com/hapifhir/org.hl7.fhir.core/issues/466</a>, the Java validator now throws an exception when validating <strong>any</strong> logical model generated by the .NET tooling. The .NET tooling adds \"Element\" as the type of the first element by default. Having discussed before that the type on the first element doesn't have much use (<a href=\"#narrow/stream/179177-conformance/topic/sdf-15.20and.20Logical.20Models\">https://chat.fhir.org/#narrow/stream/179177-conformance/topic/sdf-15.20and.20Logical.20Models</a>), I generally agree with the change. However, it currently breaks a lot of logical model tooling. Would it be possible to not throw an hard error here? It is still allowed by sdf-15a (if I read this correctly) and is an unexpected change in a minor version update.</p>",
        "id": 239078791,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1621254402
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"248736\">@Mark Iantorno</span> Would you say that there should be an exception in the Java validator for Logical Models? Otherwise I would move this issue to the .NET SDK Team. I'm unsure what we would break if the .NET snapshot generator would leave out the type on the first element. I'm a bit afraid that this would break more than expected.</p>",
        "id": 239405666,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1621423453
    },
    {
        "content": "<p>it's on my to think about tlist</p>",
        "id": 239408597,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1621424968
    },
    {
        "content": "<p>Alright, thanks!</p>",
        "id": 239410090,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1621425672
    },
    {
        "content": "<p>we also stumbled upon a kind of related issue with sdf-15a:<br>\nWe wanted to add a pattern to the root of a dataType profile, which isn't possible as the first differential element doesn't include a<code>.</code>in the path but needs a type for the pattern.</p>",
        "id": 240226160,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1621965395
    },
    {
        "content": "<p>...which is a bummer because adding patterns to DataType profiles which are ususally used in pattern type slicings (e.g. Identifier, Coding) would be very useful feature...</p>",
        "id": 240290811,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1622016263
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193430\">@Alexander Zautke</span> what's an example of a logical model that this affects?</p>",
        "id": 242631197,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623691222
    },
    {
        "content": "<p>the spec says that this rule doesn't apply to logical models, so I don't know why there's a problem</p>",
        "id": 242631321,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623691279
    },
    {
        "content": "<blockquote>\n<p>We wanted to add a pattern to the root of a dataType profile, which isn't possible as the first differential element doesn't include <a href=\"http://a.in\">a.in</a> the path but needs a type for the pattern.</p>\n</blockquote>\n<p>Why does it need a type for the pattern?</p>",
        "id": 242631578,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623691398
    },
    {
        "content": "<p>I suspect the issue is what do you put in place of the <code>[x]</code> in <code>pattern[x]</code>?  Is it just the<code>type</code> of the logical model itself?</p>\n<p>That aside, however, according to the spec, <code>pattern[x]</code> is <em>prohibited</em> from type definitions anyway.  So technically speaking, it is illegal to use <code>pattern[x]</code> in a logical model definition at all. See: <a href=\"http://hl7.org/fhir/R4/elementdefinition.html#interpretation\">http://hl7.org/fhir/R4/elementdefinition.html#interpretation</a></p>",
        "id": 242646998,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1623698609
    },
    {
        "content": "<p>well, the type issue was raised on data type profiles.</p>",
        "id": 242651460,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623700709
    },
    {
        "content": "<p>patterns and fixed values on logical models is an outstanding issue that's a todo for me</p>",
        "id": 242651499,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1623700727
    },
    {
        "content": "<p>Ah sorry.  Too many topics mixed into this one thread.  I got confused.</p>",
        "id": 242651679,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1623700811
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179177-conformance/topic/Type.20on.20First.20Element.20in.20Differential.20for.20Logical.20Models/near/242631197\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"193430\">Alexander Zautke</span> what's an example of a logical model that this affects?</p>\n</blockquote>\n<p>I tried to debug the problem a bit more in detail. This issue does not occur when you try to validate a logical model with a type on the first element directly. It only happens if the Java validator tries to generate a snapshot for such logical model, e.g. when it's loaded as part of a package dependency or a folder.</p>\n<p>Here's the stack trace:</p>\n<div class=\"codehilite\"><pre><span></span><code>FHIR Validation tool Version 5.3.15-SNAPSHOT (Git# f082ed15ee4d). Built 2021-05-19T09:48:44.426+02:00 (36 days old)\n  Java:   1.8.0_292 from /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home/jre on x86_64 (64bit). 7282MB available\n  Paths:  Current = /Users/alex/Dev/FHIR/org.hl7.fhir.core, Package Cache = /Users/alex/.fhir/packages\n  Params: -version 4.0 -ig /Users/alex/Desktop/LM/ /Users/alex/Desktop/Patient.json\nLoading\n  Load FHIR v4.0 from hl7.fhir.r4.core#4.0.1 - 4575 resources (00:04.0631)\n  Load hl7.terminology#2.1.0 - 3767 resources (00:00.0752)\n  Terminology server http://tx.fhir.org - Version 1.9.378 (00:01.0810)\n  Load /Users/alex/Desktop/LM/ - 1 resources (00:00.0004)\n  Get set... Exception in thread &quot;main&quot; java.lang.Error: type on first differential element!\n    at org.hl7.fhir.r5.conformance.ProfileUtilities.checkDifferentialBaseType(ProfileUtilities.java:789)\n    at org.hl7.fhir.r5.conformance.ProfileUtilities.generateSnapshot(ProfileUtilities.java:624)\n    at org.hl7.fhir.validation.ValidationEngine.makeSnapshot(ValidationEngine.java:520)\n    at org.hl7.fhir.validation.ValidationEngine.prepare(ValidationEngine.java:504)\n    at org.hl7.fhir.validation.cli.services.ValidationService.initializeValidator(ValidationService.java:257)\n    at org.hl7.fhir.validation.cli.services.ValidationService.initializeValidator(ValidationService.java:212)\n    at org.hl7.fhir.validation.ValidatorCli.doValidation(ValidatorCli.java:203)\n    at org.hl7.fhir.validation.ValidatorCli.main(ValidatorCli.java:159)\n</code></pre></div>",
        "id": 243778237,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1624538247
    },
    {
        "content": "<p>In my case \"/Users/alex/Desktop/LM/\" contains the following logical model <a href=\"/user_uploads/10155/Wtu3n9jE_WB-L126ZBUyOFoL/TestWithTypeOnFirstElement.json\">TestWithTypeOnFirstElement.json</a></p>",
        "id": 243778397,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1624538311
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191469\">Chris Moesel</span> <a href=\"#narrow/stream/179177-conformance/topic/Type.20on.20First.20Element.20in.20Differential.20for.20Logical.20Models/near/242646998\">said</a>:</p>\n<blockquote>\n<p>I suspect the issue is what do you put in place of the <code>[x]</code> in <code>pattern[x]</code>?  Is it just the<code>type</code> of the logical model itself?</p>\n<p>That aside, however, according to the spec, <code>pattern[x]</code> is <em>prohibited</em> from type definitions anyway.  So technically speaking, it is illegal to use <code>pattern[x]</code> in a logical model definition at all. See: <a href=\"http://hl7.org/fhir/R4/elementdefinition.html#interpretation\">http://hl7.org/fhir/R4/elementdefinition.html#interpretation</a></p>\n</blockquote>\n<p>Yes, exactly. What we wanted to do is to define a data type profile on Coding. On the first element of such profile we wanted to add a pattern, so that all other profiles using the data type profile would get this pattern automatically. Issue is that if you place a patternCoding on the first element of the diff, you'll get the following error: </p>\n<div class=\"codehilite\"><pre><span></span><code>Unable to generate snapshot for CodingAlphaID from Coding because Profile CodingAlphaID (http://fhir.de/StructureDefinition/CodingAlphaID), element Coding. Error generating snapshot: The fixed value has type &#39;Coding&#39; which is not valid (valid types: [])\norg.hl7.fhir.exceptions.DefinitionException: Profile CodingAlphaID (http://fhir.de/StructureDefinition/CodingAlphaID), element Coding. Error generating snapshot: The fixed value has type &#39;Coding&#39; which is not valid (valid types: [])\n    at org.hl7.fhir.r5.context.SimpleWorkerContext.generateSnapshot(SimpleWorkerContext.java:785)\n    at org.hl7.fhir.r5.context.SimpleWorkerContext.generateSnapshot(SimpleWorkerContext.java:752)\n    at org.hl7.fhir.r5.context.SimpleWorkerContext.allStructures(SimpleWorkerContext.java:635)\n    at org.hl7.fhir.validation.ValidationEngine.prepare(ValidationEngine.java:500)\n    at org.hl7.fhir.validation.cli.services.ValidationService.initializeValidator(ValidationService.java:256)\n    at org.hl7.fhir.validation.cli.services.ValidationService.initializeValidator(ValidationService.java:212)\n    at org.hl7.fhir.validation.ValidatorCli.doValidation(ValidatorCli.java:203)\n    at org.hl7.fhir.validation.ValidatorCli.main(ValidatorCli.java:159)\n</code></pre></div>",
        "id": 243780131,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1624538935
    },
    {
        "content": "<p>This issue is totally unrelated to logical models, we can discuss this in a different thread, although I suspect there is nothing much we can do about it.</p>",
        "id": 243780464,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1624539096
    },
    {
        "content": "<p>ok I think <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span>'s error will be fixed next release</p>",
        "id": 243875981,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1624597400
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193430\">@Alexander Zautke</span> do you have a logical model I can try that with?</p>",
        "id": 243875986,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1624597418
    },
    {
        "content": "<p>found it. Fixed next release</p>",
        "id": 243876896,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1624598584
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> -- I'm not sure what error you're referring to.  As far as I know I didn't report an error in <em>this</em> thread... I mentioned that the spec prohibits <code>fixed[x]</code> and <code>pattern[x]</code> on logicals/resources, but that's not an error; that's the spec doing what specs do.</p>",
        "id": 243912906,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1624626547
    },
    {
        "content": "<p>where does the spec do that?</p>",
        "id": 243969645,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1624654446
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> here: <a href=\"http://hl7.org/fhir/R4/elementdefinition.html#interpretation\">http://hl7.org/fhir/R4/elementdefinition.html#interpretation</a></p>\n<p><a href=\"/user_uploads/10155/XPpYaWTMHrTeqdZcnYrVQ3s1/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/XPpYaWTMHrTeqdZcnYrVQ3s1/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/XPpYaWTMHrTeqdZcnYrVQ3s1/image.png\"></a></div>",
        "id": 243971704,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1624655751
    },
    {
        "content": "<p>logical != specialization</p>",
        "id": 243971834,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1624655800
    },
    {
        "content": "<p>OK. I am confused.  Logicals can introduce new elements.  You can't introduce new elements in <code>derivation: constraint</code>, so the only other option is <code>derivation: specialization</code>.  What am I missing?</p>",
        "id": 243972025,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1624655867
    },
    {
        "content": "<p>you can have a constraint on a logical model, and that's what we're talking about</p>",
        "id": 243972570,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1624656149
    },
    {
        "content": "<p>I don't think that's clear, because the logical model that <span class=\"user-mention\" data-user-id=\"193430\">@Alexander Zautke</span> linked to above has <code>\"derivation\": \"specialization\"</code>.  Wouldn't constraining a logical model require <code>\"derivation\": \"constraint\"</code> (and then prohibit adding further elements)?</p>",
        "id": 243973098,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1624656479
    },
    {
        "content": "<p>umm. I'm confused. Alexander's issue was the Java snapshot generator didn't allow 'type' on the base element. Logical models (not specializations) are not subject to that rule. The fixed value thing is a different issue</p>",
        "id": 243973757,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1624656869
    },
    {
        "content": "<p>OK.  I think we're just talking in circles then.  Although I still don't know what error of mine you said is fixed in the next release. ;-)</p>",
        "id": 243974391,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1624657308
    },
    {
        "content": "<p>you'll get a validation error not an exception if you put a fixed value or a pattern at the root of a profile</p>",
        "id": 243974521,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1624657398
    },
    {
        "content": "<p>OK.  That wasn't my bug, but I'm glad it's fixed!</p>",
        "id": 243974747,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1624657549
    }
]