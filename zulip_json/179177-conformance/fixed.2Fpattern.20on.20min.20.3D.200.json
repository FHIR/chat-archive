[
    {
        "content": "<p>So an issue arises here: <a href=\"#narrow/stream/179166-implementers/topic/Slicing.20on.20pattern.2Ffixed\">https://chat.fhir.org/#narrow/stream/179166-implementers/topic/Slicing.20on.20pattern.2Ffixed</a> :</p>\n<p>What does a profile mean when it assigns a fixed value or a pattern but leaves min = 0?</p>\n<p>As far as I can tell , there's 3 options:</p>\n<ol>\n<li>if min=0, it doesn't matter what the fixed/pattern is </li>\n<li>if there's  a fixed or a pattern, it doesn't matter what the min is</li>\n<li>if there's a fixed/pattern, and min=0, that's an error in the profile</li>\n</ol>\n<p>The specification is silent on this. The relevant definitions are, so far as I can find:</p>\n<ul>\n<li><strong>fixed[x]</strong>: Specifies a value that SHALL be exactly the value for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.</li>\n<li>\n<p><strong>pattern[x]</strong>:   <br>\nSpecifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example</p>\n</li>\n<li>\n<p><strong>min</strong>: The minimum number of times this element SHALL appear in the instance</p>\n</li>\n</ul>\n<p>I think that the spec leans to #2 above.</p>\n<p><span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span></p>",
        "id": 204613192,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1595372718
    },
    {
        "content": "<p>presently the validator follows #1 for both fixed and pattern</p>",
        "id": 204613492,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1595372930
    },
    {
        "content": "<p>My preference is 3.  Having a min that's ignored is going to be confusing to implementers and I can't see any reason to allow min of 0 when there's a fixed value or pattern</p>",
        "id": 204629885,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1595392915
    },
    {
        "content": "<p>I like option 3 as it naturally fits with this case:<br>\nI want to specify a min of 2 with a pattern that describes only one use. <br>\nSo the min has to be &gt;= the number of instances in the pattern.</p>",
        "id": 204630757,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1595394314
    },
    {
        "content": "<p>The .NET validator is doing 1 - if an element is not there, none of the validations are run on it (except, of course, the cardinality validation)</p>",
        "id": 204637149,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1595402932
    },
    {
        "content": "<p>This is true for both 'fixed' and 'pattern'.</p>",
        "id": 204637166,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1595402956
    },
    {
        "content": "<p>I don't see (yet) why a fixed/pattern would require the element to be present.  A required binding (which feels similar to me), does not require a min cardinality of 1 either?</p>",
        "id": 204637304,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1595403094
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 204644029,
        "sender_full_name": "Frank Oemig",
        "timestamp": 1595408668
    },
    {
        "content": "<p>I always interpreted fixed/pattern with min 0 to mean that the element is not required, but if it <em>is</em> there, it must be this fixed value (or follow this pattern).  I think this aligns with <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span>'s thoughts above.</p>",
        "id": 204668694,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1595426268
    },
    {
        "content": "<p>Trying to think of a use case...</p>",
        "id": 204668931,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1595426391
    },
    {
        "content": "<p>If a Patient profile has <code>active</code> <code>0..1</code> and <code>fixedBoolean: true</code>, then it's effectively saying \"don't give me explicitly inactive patients\" -- I only want patients that are explicitly active or don't have active set (which <em>generally</em> implies active).</p>",
        "id": 204669191,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1595426516
    },
    {
        "content": "<p>Otherwise I guess you'd need to use an invariant to say that.</p>",
        "id": 204669353,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1595426566
    },
    {
        "content": "<p>That can work only if the \"meaningIfMissing\" exactly corresponds to the fixed value.</p>",
        "id": 204672448,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1595427956
    },
    {
        "content": "<p>I guess another use case would be for <code>Quantity</code>.  If you leave <code>system</code> as <code>0..1</code> but also have <code>fixedSystem: \"http://unitsofmeasure.org\"</code>, you're saying you allow unit-less quantities (e.g., <code>5</code>) but if your quantity has a unit code, it better be UCUM.</p>",
        "id": 204673927,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1595428552
    },
    {
        "content": "<p>If we don't interpret it as #1 then it doesn't seem like there's a way to express the use case of \"it can be missing, but if it's here it has to look like this\". I have no idea how realistic that use case is though</p>",
        "id": 204678367,
        "sender_full_name": "Nik Klassen",
        "timestamp": 1595430469
    },
    {
        "content": "<p>Like Ewout said, it's the most consistent (and easiest to implement) to just ignore all other validations when the item is missing.</p>",
        "id": 204678659,
        "sender_full_name": "Nik Klassen",
        "timestamp": 1595430592
    },
    {
        "content": "<p>ok we line up with #1. So task to clarify: <a href=\"http://jira.hl7.org/browse/FHIR-28126\">J#28126</a></p>",
        "id": 204717325,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1595449071
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179177-conformance/topic/fixed.2Fpattern.20on.20min.20.3D.200/near/204672448\">said</a>:</p>\n<blockquote>\n<p>That can work only if the \"meaningIfMissing\" exactly corresponds to the fixed value.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> are you saying that when doing what <span class=\"user-mention\" data-user-id=\"191469\">@Chris Moesel</span> describes  we need to use also ElementDefinition.meaningWhenMissing ?</p>",
        "id": 204866708,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1595548615
    },
    {
        "content": "<p>I'm saying that if you're going to presume that an absent element corresponds to equivalent to having a fixed value, the meaningIfMissing for that element better be equivalent.  Otherwise I could just as easily have had a fixedBoolean=false for Patient.active - and omitting the 0..1 element would have been a huge issue.</p>",
        "id": 204867435,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1595549386
    }
]