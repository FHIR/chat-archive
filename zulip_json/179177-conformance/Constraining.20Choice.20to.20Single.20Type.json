[
    {
        "content": "<p>If we constrain a choice to a single type (e.g., <code>value[x]</code> to be only <code>Quantity</code>), I don't believe we need to slice; we just remove all but the <code>Quantity</code> type from the <code>value[x]</code> element's <code>type</code> array (please correct me if I'm wrong).  Assuming that to be true, does the differential renaming approach (explained in <a href=\"https://blog.fire.ly/2019/09/13/type-slicing-in-fhir-r4/\" target=\"_blank\" title=\"https://blog.fire.ly/2019/09/13/type-slicing-in-fhir-r4/\">this Firely blog</a>) still apply?  Should the snapshot path/id remain <code>value[x]</code> but the differential be renamed to <code>valueQuantity</code>?  Or do they both remain <code>value[x]</code> only?</p>",
        "id": 182503469,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1575411896
    },
    {
        "content": "<p>the differential can be either</p>",
        "id": 182511815,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1575417871
    },
    {
        "content": "<p>Building on this question, would this be the right way to express this:</p>\n<div class=\"codehilite\"><pre><span></span><code>    <span class=\"s2\">&quot;differential&quot;</span><span class=\"err\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">&quot;element&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"nt\">&quot;binding&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"nt\">&quot;strength&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;required&quot;</span><span class=\"p\">,</span>\n                    <span class=\"nt\">&quot;valueSet&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://bb/ValueSet/BBDemographicAgeUnit&quot;</span>\n                <span class=\"p\">},</span>\n                <span class=\"nt\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Observation.value[x]&quot;</span><span class=\"p\">,</span>\n                <span class=\"nt\">&quot;min&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                <span class=\"nt\">&quot;path&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Observation.value[x]&quot;</span><span class=\"p\">,</span>\n                <span class=\"nt\">&quot;type&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Quantity&quot;</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">}</span><span class=\"err\">,</span>\n</code></pre></div>\n\n\n<p>I think it is, but the Java validator doesn't flag it as an error if I use a type other than Quantity.</p>\n<p>Just want to make sure my logic is correct before I add a test case..</p>",
        "id": 201958428,
        "sender_full_name": "James Agnew",
        "timestamp": 1593085638
    },
    {
        "content": "<p>(The above is in a SD that has a baseDefinition of <code>http://hl7.org/fhir/StructureDefinition/Observation</code> )</p>",
        "id": 201958459,
        "sender_full_name": "James Agnew",
        "timestamp": 1593085674
    },
    {
        "content": "<p>Based on my understanding, given that the element is <em>not</em> a slice, it defines the root <code>value[x]</code> element.  So it indicates that _only_ <code>Quantity</code> is allowed as a value in this Observation -- and any other value type is a violation.  But I won't be offended if you wait for <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> to confirm.</p>",
        "id": 201963014,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1593088840
    },
    {
        "content": "<p>I agree. A test case would be good</p>",
        "id": 201963852,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1593089332
    },
    {
        "content": "<p>Thanks! Will do.</p>",
        "id": 201970043,
        "sender_full_name": "James Agnew",
        "timestamp": 1593092496
    },
    {
        "content": "<p>ok. can you approve the changes at <a href=\"https://github.com/hapifhir/org.hl7.fhir.core/pull/261\">https://github.com/hapifhir/org.hl7.fhir.core/pull/261</a></p>",
        "id": 202041498,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1593131323
    },
    {
        "content": "<p>this bug is fixed in the next version being released soon</p>",
        "id": 202042860,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1593133054
    }
]