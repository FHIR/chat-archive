[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194909\">@Kevin Mayfield</span> </p>\n<blockquote>\n<p>this is where push back starts, the profile is obscuring the requirement.</p>\n</blockquote>\n<p>I'm always interested in improving the way we present profiles, and this actually seems like a presentation issue.</p>",
        "id": 181300620,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574340415
    },
    {
        "content": "<p>but the IG editors have generally felt that this is part of their responsibility, manually writing a clear summary of the intent of the profile</p>",
        "id": 181300717,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574340461
    },
    {
        "content": "<p>I agree, I'm looking at it from that perspective at the moment.</p>",
        "id": 181300727,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1574340474
    },
    {
        "content": "<p>How a developer and modeler approaches the problem is different, one will use start with example resources and the other profiles.  The developer may not use profiles directly but indirectly via validation.</p>",
        "id": 181301621,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1574341173
    },
    {
        "content": "<p>The challenge is that there's a need to present information to two stakeholders - the human developer and the software code generator/validator/whatever.  The ideal is to have a single source of truth that drives both because then you have minimal likelihood of inconsistencies (which are inevitable if the two versions are maintained separately) or differences in the degree of precision.  The challenge is that taking something that is fully specified enough to be computable isn't necessarily easy to render in a way that communicates easily to humans.  And this is the first time HL7 has tried to do this with a single source of truth.  (CDA had computable rules, but the human representation and the computable representation were still distinct data structures and could - and sometimes did - either become inconsistent or expressed things with different levels of precision.)</p>\n<p>Kevin's use-case seems to be principally about \"what's changed\", which is what the differential view is supposed to do.  But perhaps we could come up with a more textified version of that:  E.g. <br>\n\"Telecom: Overall cardinality 0..* -&gt; 0..5.<br>\n    At least one repetition must be of type phone and include value and type.\"</p>\n<p>In theory we could come up with an algorithm that expresses that meaningfully.  Though we run into challenges even here.  To someone who's experienced \"cardinality 0..* -&gt; 0..5\" is redundant as the \"cardinality\" bit is a given.  Repeating it all over is noise.  On the other hand, for someone new, it's essential.  Do we create different views for the newbie vs. the expert?  If we create a single view, what's the right balance of verbosity/conciseness?</p>\n<p>I don't think GraphDefinition is going to help for individual resource constraints, but it's almost certainly going to be useful for resource collections.</p>",
        "id": 181312118,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1574348441
    },
    {
        "content": "<p>I'm in two minds here, I'm not in favour  of doing anything different for FHIR RESTful or Documents. </p>\n<ol>\n<li>\n<p>On FHIR Documents and RESTful, comments seemed to be around profiles limiting reuse. That could be the end user seeing the need to <strong>produce</strong> a resource of type Condition-ABC-1 and Condition-ABC-2 rather than <strong>conform</strong> to them (so rule rather than OTW format). </p>\n</li>\n<li>\n<p>Other interactions such as messaging, RPC (Hl7v3) style operations and complex models operations maybe where the 'push back' mostly is. I've seen several specifications where a list of profiles has been presented, that doesn't say what should be included (what is in the Bundle response or how it is constructed). <br>\nThis is response requirement for an RPC Operation I've recently worked with <a href=\"https://project-wildfyre.github.io/conformance/graph/3\" target=\"_blank\" title=\"https://project-wildfyre.github.io/conformance/graph/3\">https://project-wildfyre.github.io/conformance/graph/3</a><br>\nThe other issue is how would you validate this response, suspect the answer is GraphDefinition. <br>\nWe should focus on GraphDefinition to document these and then profiles? (plus the GraphDefinition can contain useful summaries of what is being profiled e.g. heart rate SNOMED Concept 364075005 and units /min.)<br>\n (am I correct in believing this is how GraphDefinition can be used in R4?)</p>\n</li>\n</ol>",
        "id": 181322738,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1574354502
    },
    {
        "content": "<p>I do think that the best approach is </p>\n<ul>\n<li>clearly expressed requirements</li>\n<li>a good balance of use StructureDefinition and GraphDefinition to express requirements</li>\n<li>not using Resource.meta.profile anywhere you can avoid it</li>\n</ul>\n<p>The first is the hardest n princple, but the second is impossible right now because the tooling doesn't support GraphDefinition yet. And it looks like GraphDefinition is heading for a big redesign based on today's talk at DevDays</p>",
        "id": 181611429,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574400873
    },
    {
        "content": "<p>From a UK perspective we have primarily focused on profiles and used them to document solutions which is skewing opinions of profiles. Plus many of our projects have been driven by other models, e.g.</p>\n<ul>\n<li>Digital Child Health (FHIR Messaging) - influenced by HL7v2 </li>\n<li>GP Connect (FHIR Operation ) - influenced by HL7v3</li>\n<li>NEWS2 (none) - openEHR </li>\n<li>End Of Life Care (FHIR Restful - Structured Data Capture) - national dataset</li>\n<li>Transfer Of Care (FHIR Documents) - CDA</li>\n</ul>\n<p>I think the use of GraphDefinition would be split into two: illustrative and rules (inc illustrative). Rules would focus around the structure of the response, e.g.</p>\n<p>Response (Bundle) should contain</p>\n<ul>\n<li>1 Patient (of profile A)</li>\n<li>1 Encounter (of profile ..)</li>\n<li>0..3 Observation (of profile ..)</li>\n</ul>\n<p>May also rules on references.</p>\n<p>For FHIR Documents, these rules would probably be expressed in the Compositions profile, so use of GraphDefinition is illustrative (and optional).</p>\n<p>n.b. a couple of our developers suggested they wanted two approaches for validation. </p>\n<ul>\n<li>Operational - Check the Bundle contained the correct resources and light checks on resources</li>\n<li>Testing -  As above but thoroughly validate each resource </li>\n</ul>\n<p>Lastly should GraphDefinition be renamed? ModelDefinition, ResponseDefinition, BundleDefinition...<br>\nGraph implies it's for illustration only.</p>",
        "id": 181616398,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1574408870
    },
    {
        "content": "<p>really? how?</p>",
        "id": 181617104,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574409840
    },
    {
        "content": "<p>All the developer is seeing is profiles (which goes back to your expressing requirements comments).</p>",
        "id": 181617264,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1574410073
    },
    {
        "content": "<blockquote>\n<p>All the developer is seeing is profiles</p>\n</blockquote>\n<p>I think you are saying that GraphDefinition is supported by the tools yet, so it's not real</p>",
        "id": 181617485,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574410373
    },
    {
        "content": "<p>and then being asked to return a 'model' response. (With the exception of FHIR Documents - Transfer Of Care) On most of these 'models', testing has focused around Bundle content and NOT used Validation.<br>\n[This is skewing opinion]</p>",
        "id": 181617886,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1574410948
    },
    {
        "content": "<p>I think we should stick to GraphDefinition as the best name since graph theory is about defining the relationships and not just the pretty pictures.</p>",
        "id": 181849254,
        "sender_full_name": "Eric Haas",
        "timestamp": 1574706503
    }
]