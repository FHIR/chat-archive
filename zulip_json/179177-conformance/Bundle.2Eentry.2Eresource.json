[
    {
        "content": "<p>Bundle.entry.resource has type Resource which has children of id, meta, uri, etc.  By this definition, the bundle should look like this:</p>\n<div class=\"codehilite\"><pre><span class=\"nt\">&lt;Bundle&gt;</span>\n...snip...\n  <span class=\"nt\">&lt;entry&gt;</span>\n    <span class=\"nt\">&lt;resource&gt;</span>\n      <span class=\"nt\">&lt;id</span> <span class=\"na\">value=</span><span class=\"s\">&quot;12345&quot;</span> <span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;identifier&gt;</span>\n       ...etc...\n</pre></div>\n\n\n<p>rather than</p>\n<div class=\"codehilite\"><pre><span class=\"nt\">&lt;Bundle&gt;</span>\n...snip...\n  <span class=\"nt\">&lt;entry&gt;</span>\n    <span class=\"nt\">&lt;resource&gt;</span>\n      <span class=\"nt\">&lt;Patient&gt;</span>\n        <span class=\"nt\">&lt;id</span> <span class=\"na\">value=</span><span class=\"s\">&quot;12345&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;identifier&gt;</span>\n       ...etc...\n</pre></div>",
        "id": 153840012,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1469030123
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> Can you provide one of your example Bundle profiles?</p>",
        "id": 153840013,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1469030206
    },
    {
        "content": "<p>The instance looks like \"resource/Patient\", but in the profile, \"resource\" and \"Patient\" are the same node.  Unfortunately I'm under NDA on my current work, so I can't share example profiles.</p>",
        "id": 153840014,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1469030274
    },
    {
        "content": "<p>There's some special case magic there?</p>",
        "id": 153840015,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1469030309
    },
    {
        "content": "<p>It's more special serialization magic</p>",
        "id": 153840016,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1469030339
    },
    {
        "content": "<p>resource is actually a BackboneElement with a child of type Resource</p>",
        "id": 153840017,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1469030340
    },
    {
        "content": "<p>but not really since it can't have the id attribute or extensions...</p>",
        "id": 153840018,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1469030393
    },
    {
        "content": "<p>So when you profile bundle, you put the type constraints on the resource node?</p>",
        "id": 153840019,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1469030415
    },
    {
        "content": "<p>(slice entry by <code>resource.@type</code>)</p>",
        "id": 153840020,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1469030436
    },
    {
        "content": "<p>or <code>resource.@profile</code>?</p>",
        "id": 153840021,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1469030443
    },
    {
        "content": "<p>At the moment, slicing by resource.@type isn't supported.  We approved a change request last week to fix that, but I don't anticipate it'll be fixed before the ballot opens.</p>",
        "id": 153840027,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1469037218
    },
    {
        "content": "<p>For now, I just assert a bunch of invariants, which is harder and not as powerful, but at least it works . . .</p>",
        "id": 153840028,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1469037252
    },
    {
        "content": "<p>Can you link the GF for that change?</p>",
        "id": 153840029,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1469037596
    },
    {
        "content": "<p>It's a FHIR Infrastructure change but I don't remember the number and don't have time to chase it down at the moment.  Look for ones submitted by me in the last month.</p>",
        "id": 153840030,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1469037795
    },
    {
        "content": "<p>slicing by resource..@type is supported in the spec, but not implemented in the instance validator </p>",
        "id": 153840094,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1469053203
    },
    {
        "content": "<p>\"resource is actually a BackboneElement with a child of type Resource\" - no. resource is a wrapper around the \"Patient\" element for the pleasure of the schemas. </p>",
        "id": 153840095,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1469053239
    },
    {
        "content": "<p>in JSON, there is no such element. </p>",
        "id": 153840096,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1469053245
    },
    {
        "content": "<p>JSON schemas are cleverer....</p>",
        "id": 153840097,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1469053255
    },
    {
        "content": "<p>at the logical level (structure definition) the resource element does not exist. It's a purely XML thing, as Lloyd said</p>",
        "id": 153840098,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1469053297
    }
]