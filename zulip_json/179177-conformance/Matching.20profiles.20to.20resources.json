[
    {
        "content": "<p>Today we had discussions at Finnish PH SIG meeting about confomance, profiles and validation of resources and <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  mentioned \"don't declare profile on resources\" (as in put it in the meta tag of the resource).</p>\n<p>There are multiple ways of matching a profile to a resource, but really no way to describe this in a profile.  Obvious solution would be to create a mapping table in the software receiving there resouce with rules: \"if there's this code, then use these profiles\", but that mapping  information still would need to be stored somewhere - code or properties etc.</p>\n<p>Could there be a place to describe this in a StructureDefinition in a future version of FHIR? An extension would be a way to do this right away, but matching a resource to a profile seems for general cases to be quite a complex problem.</p>",
        "id": 181920509,
        "sender_full_name": "Eeva Turkka",
        "timestamp": 1574774894
    },
    {
        "content": "<p>I'm seeing this from a different angle, maybe this is from v2 experience but I would have routed on resource data (not profile). <br>\nAs a receiving system I may expect and mandate the resources follow XYZ profile and validate them accordingly.</p>",
        "id": 181924143,
        "sender_full_name": "Kevin Mayfield",
        "timestamp": 1574777386
    },
    {
        "content": "<p>I believe this is close to the viewpoint we discussed, but the case is that there are many profiles for each resource type so there needs to be a set way to match between resources and profiles.</p>",
        "id": 181924702,
        "sender_full_name": "Eeva Turkka",
        "timestamp": 1574777749
    },
    {
        "content": "<p>I think that this would be a good thing to resolve. I suspect it needs to be expressed a search criteria - if the resource meets this search criteria, then this profile is applicable. But I wonder whether it belongs in the capability statement rather than the structure definition - is it a property of the profile itself, or of the system?</p>",
        "id": 181928609,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574780193
    },
    {
        "content": "<p>You are entering a hornets nest here. Whether or not profiles should be stated or not and by whom has not been discussed in detail. At least I haven't heard about the resulting silver bullet</p>",
        "id": 181944934,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1574789885
    },
    {
        "content": "<p>I consider profile statements in ressources as the same as interface declarations in object oriented languages</p>",
        "id": 181945365,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1574790110
    },
    {
        "content": "<p>The difference is that the number of relevant interface declarations is pretty small and will generally be by intention by whoever creates the class.  On the other hand, the number of potentially relevant profiles when you consider all possible consumers is extremely large - and is unknowable at the time the instance is created.  You can't count on instances declaring the profiles you care about.</p>",
        "id": 181945623,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1574790264
    },
    {
        "content": "<p>The keyword here is: \"potentially relevant profiles\" - and the conformant profiles can be changed in meta without affecting the version of the resource. It entirely depends on the intention of what you are trying to communicate. While a Patient resource instance can be conformant to e.g. an IPS Patient profile at some point, it is probably plausible that the same resource may be conformant to a US core patient profile at some point. You don't necessarily have to state that information if that is not of importance/relevant to you.</p>",
        "id": 181951633,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1574794255
    },
    {
        "content": "<p>we don't need to buy into this argument to see that it may be useful to be able to declare: 'for resources that meet this criteria the server will enforce this profile'</p>",
        "id": 181952331,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574794654
    },
    {
        "content": "<p>Ain't that very close to just stating a profile in meta of the resource? I get that there's a difference but what happens afterwards that criteria? Is the profile then added to the resource meta?</p>",
        "id": 181952631,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1574794821
    },
    {
        "content": "<p>it might be. I would recommend against that, but would also recommend against recommending for or against it in the spec</p>",
        "id": 181952833,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574794961
    },
    {
        "content": "<blockquote>\n<p>recommend against recommending for or against it in the spec</p>\n</blockquote>\n<p>In general?</p>",
        "id": 181952955,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1574795043
    },
    {
        "content": "<p>in this case, if we add something like this as an element or an extension</p>",
        "id": 181952985,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574795070
    },
    {
        "content": "<p>I really can't see the problem here - maybe my scope or perspective on this subject is too narrow? I can't see why and how this is a problem in general to state the profile that a resource conforms to.</p>",
        "id": 181953175,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1574795203
    },
    {
        "content": "<p>I will write a blog post about it</p>",
        "id": 181953245,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574795266
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> let me know when it's done</p>",
        "id": 181957292,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1574798027
    },
    {
        "content": "<p>back to the question. I think it makes sense to define an extension (for now, at least) to CapabilityStatement.rest.resource like this:</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"s2\">&quot;extension&quot;</span> <span class=\"err\">:</span> <span class=\"p\">[{</span>\n   <span class=\"nt\">&quot;url&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;http://hl7.org/fhir/StructureDefinition/capabilitystatement-applied-profile&quot;</span><span class=\"p\">,</span>\n   <span class=\"nt\">&quot;extension&quot;</span> <span class=\"p\">:</span> <span class=\"p\">[{</span>\n      <span class=\"nt\">&quot;url&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;criteria&quot;</span><span class=\"p\">,</span>\n     <span class=\"nt\">&quot;valueString&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;?code=1234-5&quot;</span>\n   <span class=\"p\">},{</span>\n      <span class=\"nt\">&quot;url&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;profile&quot;</span><span class=\"p\">,</span>\n     <span class=\"nt\">&quot;valueCanonical&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;http://myuri/something&quot;</span>\n   <span class=\"p\">}]</span>\n  <span class=\"p\">}]</span>\n</pre></div>",
        "id": 182015629,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574859347
    },
    {
        "content": "<p>I propose it here because I think that it's a system thing, to decide when to apply the profile. And because I think it's actually more useful to do this than <code>CapabilityStatement.supportedProfile</code> which we use but I don't think people conform to the full details. This is a lesser statement. </p>\n<p>On the other hand, <span class=\"user-mention\" data-user-id=\"192813\">@Eeva Turkka</span> proposed this as a feature of StructureDefinition, and I can see it being useful there also - this StructureDefinition is intended to apply to resources that meet the following criteria:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"s2\">&quot;extension&quot;</span> <span class=\"err\">:</span> <span class=\"p\">[{</span>\n   <span class=\"nt\">&quot;url&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;http://hl7.org/fhir/StructureDefinition/structuredefinition-appliesTo&quot;</span><span class=\"p\">,</span>\n   <span class=\"nt\">&quot;valueString&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;?code=1234-5&quot;</span>\n  <span class=\"p\">}]</span>\n</pre></div>",
        "id": 182015873,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574859532
    },
    {
        "content": "<p>I guess my feeling about putting it to the profile is based on having criteria and profile existing in sync with each other and existing as an removable or addable item as is (\"just add a profile and it's matching criteria and then resources matching that will pass validation\").  Is there a difference between using searchparameters or a fhirpath expression for the match?</p>",
        "id": 182019499,
        "sender_full_name": "Eeva Turkka",
        "timestamp": 1574862121
    },
    {
        "content": "<p>search parameters are a call out to scalable criteria based on indexing, where as FHIRPath implies that you (a) have FHIRPath and (b) can apply it to one resource at a time. </p>\n<p>I don't want to have to iterate all profiles running FHIRPath for each - I want some indexed list of profiles I have to test against</p>",
        "id": 182019626,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574862224
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I'm sure you haven't had time to get to it yet, but any update on the blog post?</p>",
        "id": 183189830,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1576091345
    }
]