[
    {
        "content": "<p>In a discussion with my profiling colleagues yesterday the following issue came up:</p>\n<p>Say, you have a profile on Patient, and your national SDO has provided you with a profiled version of <code>HumanName</code>, called <code>HumanNameNL</code>. You'd like that use that profiled version of <code>HumanName</code> but wish to express some additional constraints on it.</p>\n<p>Would it be useful to be able to constrain <code>Patient.name</code> in your new profile to <code>HumanNameNL</code> <em>and</em> add additional constraints to it \"in place\" in your profile (instead of you first defining <code>MyHumanNameNL</code> with those additional constraints and then pointing to that)?</p>\n<p>If yes - my question to myself and other StructureDefinition-veterans: This can obviously be expressed in a StructureDefinition by having a TypeRef with a <code>profile</code> plus child constraints, but did we ever consider this? Do our tools support it?</p>",
        "id": 153900320,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1501746879
    },
    {
        "content": "<p>In my understanding, yes, this is allowed. <span class=\"user-mention\" data-user-id=\"191351\">@Chris Grenz</span> has done a great job working out the details and Forge has been supporting this since DSTU2 release.  Note that Forge users are actually creating (production) profiles that rely on this technique.</p>",
        "id": 153900329,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1501750705
    },
    {
        "content": "<p>See here: <a href=\"https://github.com/chrisgrenz/FHIR-Primer/wiki/Snapshots-Determining-Refines\" target=\"_blank\" title=\"https://github.com/chrisgrenz/FHIR-Primer/wiki/Snapshots-Determining-Refines\">https://github.com/chrisgrenz/FHIR-Primer/wiki/Snapshots-Determining-Refines</a></p>",
        "id": 153900330,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1501750754
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> I do it all the time :)  So definitely supported by the IGPublisher and Validator</p>",
        "id": 153900384,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1501773399
    },
    {
        "content": "<p>this is already supported by the validator?</p>",
        "id": 153900428,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501795126
    },
    {
        "content": "<p>do have a test case in the tests for it?</p>",
        "id": 153900429,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501795135
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> I do it all the time :)  So definitely supported by the IGPublisher and Validator</p>\n</blockquote>\n<p>As evident as this is for the end-user (;-)) it's actually pretty hard to support (at least for the snapshot generator and the validator): when I built this part in the .NET validator last year I discussed this with Grahame and concluded this was not a supported scenario.  So, I double checked with Grahame last week - and he was not too sure he supported it.  And as far as I can see, this is not something that you'd support accidentally...</p>",
        "id": 153900457,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1501832440
    },
    {
        "content": "<p>Well, to be perfectly honest, it's easy to support in a non-performant or user-unfriendly way (mostly resulting in duplication of errors and unnecessary running the same validations twice), to do it well requires work.</p>",
        "id": 153900458,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1501832639
    },
    {
        "content": "<p>I don't know if there are test cases, but this happens all the time when you constrain child elements of extensions - which I do all the time.  Pointing to an extension is done by declaring the type.  Then I list the value[whatever] element and sometimes assert child extensions for that.  I've done it with other data type profiles too.</p>",
        "id": 153900518,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1501860247
    },
    {
        "content": "<p>I'd feel good if we had a test case checking that this is is handled ok</p>",
        "id": 153900542,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501878329
    }
]