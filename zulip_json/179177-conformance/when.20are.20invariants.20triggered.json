[
    {
        "content": "<p>I have an odd validation issue with an invariant on an Extension: i get an error in Java, but not in .net.</p>",
        "id": 246979958,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627048346
    },
    {
        "content": "<p>Specifics?</p>",
        "id": 246980030,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1627048381
    },
    {
        "content": "<p>It is an extension from the german base profiles: <a href=\"https://simplifier.net/basisprofil-de-r4/genderamtlichde\">https://simplifier.net/basisprofil-de-r4/genderamtlichde</a> which contains an invariant:<br>\n<code>%resource.where(gender='other').exists()</code></p>",
        "id": 246980078,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627048404
    },
    {
        "content": "<p>If i dont have the Extension in an Instance and gender is NOT other: Java validator throws the error, .Net accepts it.</p>",
        "id": 246980189,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627048446
    },
    {
        "content": "<p>To me it seems, that .Net evaluates the expression only if in the instance the field is populated. The Java Validater evaluates the invariant independent from wheter the instance uses the extension?</p>",
        "id": 246980301,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627048508
    },
    {
        "content": "<p>I tried to get the correct behaviour from the FHIR spec, but wasn't succesfull.</p>",
        "id": 246980474,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627048572
    },
    {
        "content": "<p>To reproduce:</p>\n<p><strong>java</strong><br>\n<code>java -jar ~/Downloads/validator_cli.jar 'https://simplifier.net/isik/relatedperson-example/$download?format=json'  -version 4.0 -ig de.gematik.isik-basismodul#1.0.0</code><br>\nwill show an error</p>\n<p><strong>.net</strong><br>\n<a href=\"https://simplifier.net/isik/relatedperson-example/$validate\">https://simplifier.net/isik/relatedperson-example/$validate</a><br>\nwon't complain about the invariant contained in an extension</p>\n<p>used invariant inside an gender extension: <code>%resource.where(gender='other').exists()</code></p>",
        "id": 246991798,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627054029
    },
    {
        "content": "<p>Is the error one you would expect?  I.e. is it the Java or .NET implementation that need fixing (or both)?</p>",
        "id": 246991986,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1627054098
    },
    {
        "content": "<p>any ideas why? <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> <br>\nThe only thing in the spec about the correct behaviour was </p>\n<blockquote>\n<p>\"Expression   : A FHIRPath expression that must evaluate to true when run on the element\"</p>\n</blockquote>",
        "id": 246992051,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627054128
    },
    {
        "content": "<p>Which is ambigous to me</p>",
        "id": 246992074,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627054135
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179177-conformance/topic/when.20are.20invariants.20triggered/near/246991986\">said</a>:</p>\n<blockquote>\n<p>Is the error one you would expect?  I.e. is it the Java or .NET implementation that need fixing (or both)?</p>\n</blockquote>\n<p>so i would say: i don't know?</p>",
        "id": 246992119,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627054152
    },
    {
        "content": "<p>i was thinking, that .Net is right here, and invariants are only invoked if the element on which the invariant is placed is present in an instance.</p>",
        "id": 246992472,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627054277
    },
    {
        "content": "<p>but now i'm not so sure anymore.</p>",
        "id": 246992506,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627054292
    },
    {
        "content": "<p>i tried to recreate a very simple example, placing an invariant on Patient.name.given, works in .net:<br>\n<a href=\"https://simplifier.net/patrickssandbox/testinstance/$validate\">https://simplifier.net/patrickssandbox/testinstance/$validate</a></p>",
        "id": 246992751,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627054406
    },
    {
        "content": "<p>and no error in java.</p>",
        "id": 246993133,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627054574
    },
    {
        "content": "<p>To me these are 2 issues:</p>\n<ul>\n<li>when does an invariant  hast to be run on an element? Always or only if present? I think the latter.</li>\n<li>the java validator evaluates invariants differently if they are part of an extension or part of the profile itself</li>\n</ul>",
        "id": 246993330,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627054673
    },
    {
        "content": "<p>As I read it again, this does seem like a Java error.  Invariants defined in an extension should only fire if the extension profile (based on URL slicing) is determined to apply.  Can you submit a tracker issue against the validator?</p>",
        "id": 246994557,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1627055228
    },
    {
        "content": "<p>sure: <a href=\"https://github.com/hapifhir/org.hl7.fhir.core/issues/563\">https://github.com/hapifhir/org.hl7.fhir.core/issues/563</a></p>",
        "id": 247010682,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627062757
    },
    {
        "content": "<p>Update: I mixed up the invariant yesterday.<br>\nThe reason for the error was that the java validator imho does a correct fhirpath interpretation:<br>\ninvariant: <code>gender='other' implies gender.extension('http://fhir.de/StructureDefinition/gender-amtlich-de').exists()</code></p>",
        "id": 247073835,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627131887
    },
    {
        "content": "<p>if gender is missing -&gt; gender = 'other' evaluates to []</p>",
        "id": 247073851,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627131924
    },
    {
        "content": "<p>[] implies ender.extension('http://fhir.de/StructureDefinition/gender-amtlich-de').exists() only evaluates to true if the right argument evaluates to true.</p>",
        "id": 247073862,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627131955
    },
    {
        "content": "<p>Will close the issue and start a new thread about the different behaviour of equals in different fhirpath implementations.</p>",
        "id": 247073941,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627132059
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> I think we need to switch back and forth a bit between the issues. The latest version of the .NET SDK correctly returns an empty collection of the comparison part. However, it will return true for the following statement: <code>{} implies true</code>. If I understand the differences in the FHIRPath engines correctly, the java engine will return an empty collection in this case.</p>",
        "id": 247082282,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1627143142
    },
    {
        "content": "<p>Thanks for the clarification. Will continue in the other thread: <a href=\"#narrow/stream/179177-conformance/topic/different.20implementations.3A.20fhirpath.3A.20.5B.5D.20.3D.20'string\">https://chat.fhir.org/#narrow/stream/179177-conformance/topic/different.20implementations.3A.20fhirpath.3A.20.5B.5D.20.3D.20'string</a>'</p>",
        "id": 247083320,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627144969
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> and I continued to debug the issue. All engines, in their latest versions, handle the implies statements with an empty input collection equally</p>",
        "id": 247083568,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1627145317
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"193430\">Alexander Zautke</span> <a href=\"#narrow/stream/179177-conformance/topic/when.20are.20invariants.20triggered/near/247082282\">said</a>:</p>\n<blockquote>\n<p>{} implies true```. If I understand the differences in the FHIRPath engines correctly, the java engine will return an empty collection in this case.</p>\n</blockquote>\n<p>The java engines returns true and is compliant to the spec as well</p>",
        "id": 247083573,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627145336
    },
    {
        "content": "<p>The potentially unexpected issue might be the case where gender is optional, than the result of the statement above  depends on the existence of the extension</p>",
        "id": 247083645,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1627145416
    },
    {
        "content": "<p>exactly</p>",
        "id": 247083798,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627145657
    },
    {
        "content": "<p>As <code>{} and false</code> results in false, adding <code>gender.exists()</code> to the expression, should fix this</p>",
        "id": 247084506,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1627146833
    },
    {
        "content": "<p>For reference: <a href=\"http://hl7.org/fhirpath/#implies\">http://hl7.org/fhirpath/#implies</a></p>",
        "id": 247319759,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1627384489
    },
    {
        "content": "<p>So, yes, <code>{} implies true</code> == <code>true</code>.</p>",
        "id": 247319780,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1627384512
    },
    {
        "content": "<p>If my memory serves me correctly, we added explicit unit tests to the FhirPath test suites at the beginning of 2020, so it seems these resulted in the latest versions of the engines aligning on this (if I understand Alex and Patrick correctly).</p>",
        "id": 247319826,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1627384559
    },
    {
        "content": "<p>Correct. Only issue was Simplifier using an older/different .net version.</p>",
        "id": 247803313,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627736577
    }
]