[
    {
        "content": "<p>I've just found an issue in the FHIR test cases</p>",
        "id": 274604083,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646772344
    },
    {
        "content": "<div class=\"codehilite\" data-code-language=\"XML\"><pre><span></span><code>  <span class=\"nt\">&lt;element</span> <span class=\"na\">id=</span><span class=\"s\">\"Patient.extension:animal\"</span><span class=\"nt\">&gt;</span>\n     <span class=\"nt\">&lt;path</span> <span class=\"na\">value=</span><span class=\"s\">\"Patient.extension\"</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;sliceName</span> <span class=\"na\">value=</span><span class=\"s\">\"animal\"</span> <span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;short</span> <span class=\"na\">value=</span><span class=\"s\">\"Test Extension\"</span> <span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;min</span> <span class=\"na\">value=</span><span class=\"s\">\"0\"</span> <span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;max</span> <span class=\"na\">value=</span><span class=\"s\">\"1\"</span> <span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;type&gt;</span>\n        <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">\"Extension\"</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;profile</span> <span class=\"na\">value=</span><span class=\"s\">\"http://hl7.org/fhir/3.0/StructureDefinition/extension-Patient.animal\"</span> <span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/type&gt;</span>\n  <span class=\"nt\">&lt;/element&gt;</span>\n</code></pre></div>",
        "id": 274604184,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646772378
    },
    {
        "content": "<p>only, that's a modifier</p>",
        "id": 274604197,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646772388
    },
    {
        "content": "<p>should the snapshot generator process that, and leave it to the validator to complain, or should it fail with an error? Any opinions?</p>",
        "id": 274604272,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646772430
    },
    {
        "content": "<p>I think I'd prefer to let the Validator catch that one.</p>",
        "id": 274604372,
        "sender_full_name": "David Pyke",
        "timestamp": 1646772478
    },
    {
        "content": "<p>I think the snapshot generator should bail. Assuming the actual path is <code>Patient.modifierExtension</code>, talking about an <code>Element.path</code> of <code>Patient.extension</code> is wrong and also confusing. (Or if I'm not understanding the story here, I'm confused anyway ;-))</p>",
        "id": 274604476,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1646772526
    },
    {
        "content": "<p>it is wrong and confusing. The only question I'm asking is where in the tooling stack it should emerge as an issue</p>",
        "id": 274604681,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646772603
    },
    {
        "content": "<p>Since the input to the snapshot generator is wrong, my perspective is that the snapshot generator should fail (early and loud is good here, and the snapshot generation is upsteam of the validation IIUC).</p>",
        "id": 274604740,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1646772631
    },
    {
        "content": "<p>Otherwise put: snapshots shouldn't define elements that can't exist.</p>",
        "id": 274604854,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1646772700
    },
    {
        "content": "<p>there's lots of other things that the snapshot generator does not catch because it's task is to generate the snapshot, not validate the profile</p>",
        "id": 274604861,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646772708
    },
    {
        "content": "<p>As long as it's valid path, etc., the snapshot generator should accept it and the validator should scream bloody murder</p>",
        "id": 274604985,
        "sender_full_name": "David Pyke",
        "timestamp": 1646772748
    },
    {
        "content": "<p>I think I understand better now -- OK, I buy David's position.</p>\n<p>Related to the test case: <code>http://hl7.org/fhir/StructureDefinition/patient-animal</code> is defined <a href=\"http://build.fhir.org/extension-patient-animal.html\">here</a> and probably shouldn't be (anymore)?</p>",
        "id": 274605851,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1646773133
    },
    {
        "content": "<p>why not?</p>",
        "id": 274605938,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646773182
    },
    {
        "content": "<p>Because the backport extension <code>http://hl7.org/fhir/3.0/StructureDefinition/extension-Patient.animal</code> does the same job in a standard way</p>",
        "id": 274606172,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1646773238
    },
    {
        "content": "<p>(Or, again, I'm confused -- increasingly likely ;-))</p>",
        "id": 274606224,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1646773259
    },
    {
        "content": "<p>well, it might. but the committee decided they wanted to update the definitions and be explicit about some things, and also to mark it not as a modifier</p>",
        "id": 274606492,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646773366
    },
    {
        "content": "<p>I would put it the other way around: it's invalid to use that versioned extension ,but the tests cases often involve weird edge cases like that</p>",
        "id": 274606605,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646773408
    },
    {
        "content": "<p>Wait, it's invalid to use <code>http://hl7.org/fhir/3.0/StructureDefinition/extension-Patient.animal</code> as <code>extension</code>, but OK to use it as <code>modifierExtension</code>, yes? <del>And we're saying that PA explicitly decided to also provide a non-modifer way to talk about animal extensions? The resolution to <a href=\"http://jira.hl7.org/browse/FHIR-14880\">FHIR-14880</a> does not make me think that's what happend.</del></p>",
        "id": 274606917,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1646773532
    },
    {
        "content": "<p><del>Instead of:</del></p>\n<p><del>* We know about backport but want a dedicated way to express this</del><br>\n<del>* We want to surface this extension specifically as a non-modifier</del></p>\n<p><del>... the resolution from <a href=\"http://jira.hl7.org/browse/FHIR-14880\">FHIR-14880</a> makes me think the decision really just was designed to say \"let's move .animal out of Patient and still have a way to express animal details outside of the core elements\". And the standard backport <code>modifierExtension</code> manages that just fine.</del></p>",
        "id": 274607099,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1646773622
    },
    {
        "content": "<p>OK, the resolution was succinct but the comments were clear:</p>\n<blockquote>\n<p>Futher discussion was held on this topic, and the standard extension suggested should not be a modifier. And also verified with someone from veterinary who is ok with this.</p>\n</blockquote>\n<p>Never mind me. If standard backport extensions were considered at the time though, the decision might have gone differently.</p>",
        "id": 274607320,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1646773718
    },
    {
        "content": "<p>Does the snapshot process even always have access to the definition of the extension?  It shouldn't need to if the differential doesn't drill down inside the extension.  And if it can't access the definition, it'd have no basis on which to yell.</p>",
        "id": 274607741,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646773932
    },
    {
        "content": "<p>it does drill into in this case, but yes, if it doesn't, the snapshot generator doesn't need the target</p>",
        "id": 274609612,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646774855
    },
    {
        "content": "<p>ok well, the next version of the validator will validate this.</p>",
        "id": 274648462,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646807527
    },
    {
        "content": "<p>it didn't. though you could never build an instance that would validate against the profile.</p>",
        "id": 274648484,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646807552
    },
    {
        "content": "<blockquote>\n<p>it didn't. though you could never build an instance that would validate against the profile.</p>\n</blockquote>\n<p>You mean the validator didn't detect this problem but would fail validation for a different reason?</p>",
        "id": 274692288,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1646834932
    },
    {
        "content": "<p>The validator would catch it when validating an instance against a profile, but not when validating the profile itself</p>",
        "id": 274709595,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646842002
    },
    {
        "content": "<p>Ahh! Little by little I'm understanding what this thread is about ;-)</p>",
        "id": 274714960,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1646844183
    },
    {
        "content": "<p>So now if somebody tried to put a profile like this into an implementation guide, the publishing tool chain would reject it even if they didn't have any examples at all.</p>",
        "id": 274715047,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1646844219
    },
    {
        "content": "<p>( in addition to throwing a warning that no examples were provided...)</p>",
        "id": 274715114,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1646844240
    },
    {
        "content": "<p>Right.  Even before, the publishing tool chain would have complained about the lack of examples - but there are times when suppressing that warning is reasonable and so this issue could have slipped in.</p>",
        "id": 274716469,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1646844753
    },
    {
        "content": "<blockquote>\n<p>the publishing tool chain would reject it even</p>\n</blockquote>\n<p>well, yes, where 'reject' means noting the issue in the qa page</p>",
        "id": 274757163,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1646862541
    }
]