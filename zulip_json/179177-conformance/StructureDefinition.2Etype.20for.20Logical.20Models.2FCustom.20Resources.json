[
    {
        "content": "<p>I'm trying to determine rules for <code>StructureDefinition.type</code> as it pertains to specializations.  The definition of <code>StructureDefinition.type</code> includes the following:</p>\n<blockquote>\n<p>References are URLs that are relative to <a href=\"http://hl7.org/fhir/StructureDefinition\">http://hl7.org/fhir/StructureDefinition</a> e.g. \"string\" is a reference to <a href=\"http://hl7.org/fhir/StructureDefinition/string\">http://hl7.org/fhir/StructureDefinition/string</a>. Absolute URLs are only allowed in logical models.</p>\n</blockquote>\n<ol>\n<li>\n<p>This says that when <code>type</code> is relative, it is relative to <code>http://hl7.org/fhir/StructureDefinition</code>, and since (I <em>think</em>) the tail end of the canonical URL is supposed to be the SD's <code>id</code>, that seems to imply that <code>type</code> == <code>id</code>.  Is that implication correct or am I reading too much into it?</p>\n</li>\n<li>\n<p>I've seen some logical models where the <code>type</code> does not match the <code>id</code>, but it does match the <code>name</code>.  Is this expected? Is that even a sensible question?  Am I just wrong in thinking that <code>type</code> somehow relates to <code>id</code> or <code>name</code> for specializations?</p>\n</li>\n<li>\n<p>Since custom resources are not logical models, and logical models are the only ones allowed to use absolute URLs for <code>type</code>, does that imply that custom resources should have a <code>url</code> starting with <code>http://hl7.org/fhir/StructureDefinition/</code>?  Or does the implied URL of the <code>type</code> and the canonical URL of the custom resource not have to be the same?</p>\n</li>\n<li>\n<p>Similarly, my experience has been that many logical model definitions do <em>not</em> use absolute URLs for their <code>type</code> value.  Does this also imply that their URLs should start with <code>http://hl7.org/fhir/StructureDefinition/</code> and should be unique in that namespace (which seems not to be feasible to me)?  Or are those logical models just wrong to specify a type that is not an absolute URL?</p>\n</li>\n<li>\n<p>Do these questions even make sense? ;-)</p>\n</li>\n</ol>",
        "id": 240121960,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1621895930
    },
    {
        "content": "<p>#1 type = id for HL7 defined StructureDefinitions when published by HL7. But that may not be true as soon as they are hosted on any other server, since id is under local control</p>\n<p>#2 technically, name is the name of the definition of the type, and type is the name of the type. But those are hardly ever different</p>\n<p>#3 I'm not sure I understand this question. There is no implied URL of the type except for <a href=\"http://hl7.org/fhir/StructureDefinition\">hl7.org/fhir/StructureDefinition</a>, and we're the only ones allowed to publish in that space </p>\n<p>#4 \"many logical model definitions do not use absolute URLs for their type value\" - should be corrected</p>",
        "id": 240123702,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1621897129
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> -- just to ensure we're on the same page...  Re: #4, are you saying that logical models should always use an absolute URL as their <code>StructureDefinition.type</code>?  In other words, for logical models, is using an absolute URL as the <code>StructureDefinition.type</code> (a) required, (b) best practice, or (c) totally optional?</p>",
        "id": 240488388,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1622130503
    },
    {
        "content": "<p>(a) required.</p>",
        "id": 240491154,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1622131569
    },
    {
        "content": "<p>unless HL7 publishes them.</p>",
        "id": 240491204,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1622131589
    },
    {
        "content": "<p>Did you recently fix something related to this in the IG Publisher?  We are implementing this and it seems that some people running an older version of the publisher (1.1.64) ran into issues, but it seemed to work fine for me (using 1.1.72).</p>",
        "id": 240492757,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1622132096
    },
    {
        "content": "<p>Not positive we can attribute the differences to the publisher (needs more investigation), but if you confirm there was a recent fix, then that would solve the mystery.</p>",
        "id": 240492873,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1622132150
    },
    {
        "content": "<p>Having discussed this <a href=\"#narrow/stream/179177-conformance/topic/StructureDefinition.2Etype.20for.20logical.20model.3F\">before</a>, I think that we should clarify in a tracker item if \"For logical models, where the type is a URL, the type name SHOULD start with the tail of the type URL where required.\" implies a SHALL requirement for StructureDefinition.type to be an absolute url. See description for <a href=\"https://www.hl7.org/fhir/structuredefinition-definitions.html#StructureDefinition.type\">StructureDefiniton.type</a>.</p>",
        "id": 240493129,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1622132272
    },
    {
        "content": "<p>Forge for example does not enforce an absolute url here, it will just give the user a warning</p>",
        "id": 240493401,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1622132388
    },
    {
        "content": "<p>yes i changed something recently</p>",
        "id": 240493518,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1622132421
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193430\">@Alexander Zautke</span> is there a task for this?</p>",
        "id": 240493555,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1622132437
    },
    {
        "content": "<p>Right, we have seen some confusion where people interpreted \"absolute URLs are only allowed in logical models\" as being optional (\"allowed\" vs \"required\").  If you consider the preceding statements (that relative URLs are relative to \"<a href=\"http://hl7.org/fhir/StructureDefinition/\">http://hl7.org/fhir/StructureDefinition/</a>\") it kind of makes sense, but I think we could be more explicit to reduce confusion.</p>",
        "id": 240493570,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1622132444
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179177-conformance/topic/StructureDefinition.2Etype.20for.20Logical.20Models.2FCustom.20Resources/near/240493555\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"193430\">Alexander Zautke</span> is there a task for this?</p>\n</blockquote>\n<p>No, just a proposal from my side. The only exception that Forge relies on is the ones specified in sdf-15 and sdf-8, it'll use only the tail of the canonical as the type in the diff or snapshot, not the full url.</p>",
        "id": 240494207,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1622132717
    },
    {
        "content": "<p>Also, just to clarify.  If I have a logical model w/ <code>\"type\": \"http://foo.org/StructureDefinition/Bar\"</code> and another logical model defines an element that has that model as its element type, then the element that is defined to be that type should have:</p>\n<div class=\"codehilite\"><pre><span></span><code>&quot;type&quot;: [{\n  &quot;code&quot;: &quot;http://foo.org/StructureDefinition/Bar&quot;\n}]\n</code></pre></div>\n<p>right?</p>",
        "id": 240495825,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1622133415
    },
    {
        "content": "<p>yes</p>",
        "id": 240496584,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1622133743
    },
    {
        "content": "<p>the tools haven't been good at getting that right until recently</p>",
        "id": 240496611,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1622133758
    },
    {
        "content": "<p>Is this something that needs updating in the CDA R2.0 LoMo then? <a href=\"https://github.com/HL7/cda-core-2.0/blob/master/input/resources/ClinicalDocument.xml\">https://github.com/HL7/cda-core-2.0/blob/master/input/resources/ClinicalDocument.xml</a></p>",
        "id": 249827465,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1629280186
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span> As discussed in todays FHIR-I call, those logical models need to be updated. See resolution of <a href=\"https://jira.hl7.org/browse/FHIR-33065\">FHIR-33065</a>.</p>",
        "id": 251286716,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1630353883
    }
]