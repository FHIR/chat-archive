[
    {
        "content": "<p>When I look at <a href=\"http://hl7.org/fhir/us/core/StructureDefinition-us-core-direct.json.html\" target=\"_blank\" title=\"http://hl7.org/fhir/us/core/StructureDefinition-us-core-direct.json.html\">http://hl7.org/fhir/us/core/StructureDefinition-us-core-direct.json.html</a> (an IG-based example of a \"simple\" boolean extension), there are differences in comparison with <a href=\"http://hl7.org/fhir/extension-auditevent-anonymized.json.html\" target=\"_blank\" title=\"http://hl7.org/fhir/extension-auditevent-anonymized.json.html\">http://hl7.org/fhir/extension-auditevent-anonymized.json.html</a> (a core spec-based example of a \"simple\" boolean extension).</p>\n<p>The IG example includes things like</p>\n<div class=\"codehilite\"><pre><span></span>     &quot;id&quot; : &quot;Extension.value[x]:valueBoolean&quot;,\n</pre></div>\n\n\n<p>... whereas the core spec example doesn't traverse that deep.</p>\n<p>Are both correct? Is one preferred?</p>",
        "id": 189709738,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1583340246
    },
    {
        "content": "<p>Extension.value[x] is sliced by type. Both of them constrain it to boolean</p>",
        "id": 189726354,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583350394
    },
    {
        "content": "<p>the us-core version also includes the slice details for the boolean slice, but since that's the only one that can appear anyway, and the slice details don't actually say anything, the slice is superfluous.</p>",
        "id": 189726457,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583350446
    },
    {
        "content": "<p>but it's not wrong</p>",
        "id": 189726464,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583350449
    },
    {
        "content": "<p>the one that doesn't contain the superfluous details would be preferred, I suppose. I'm not going to look through the tooling to check why it is produced.</p>",
        "id": 189726539,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583350506
    },
    {
        "content": "<p>more weird is that the value.min isn't fixed to 1 in us-core</p>",
        "id": 189726557,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583350519
    },
    {
        "content": "<p>Huh, okay -- and that is a tooling bug?</p>",
        "id": 189756526,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1583376697
    },
    {
        "content": "<p>I think so</p>",
        "id": 189756820,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583377210
    },
    {
        "content": "<p>Not sure where.</p>",
        "id": 189756825,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583377219
    },
    {
        "content": "<p>Or maybe it’s just a deficiency - I don’t try to figure out whether the slice actually says anything</p>",
        "id": 189756833,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583377248
    },
    {
        "content": "<p>is min = 0 in source.  IRL if you go to the trouble of adding an extension unlikely is going to be empty?  but I will make a tracker to make min=1</p>",
        "id": 189814964,
        "sender_full_name": "Eric Haas",
        "timestamp": 1583428690
    },
    {
        "content": "<p>I think min=0 is a tooling bug.</p>",
        "id": 189831556,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583439286
    },
    {
        "content": "<p>The source is min=0</p>",
        "id": 189842948,
        "sender_full_name": "Eric Haas",
        "timestamp": 1583446503
    },
    {
        "content": "<p>for extensions, either Extension.extension is 0..0 and value is 1..1, or vice versa</p>",
        "id": 189843094,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583446607
    },
    {
        "content": "<p>I looked for an invariant. but all I see is this:  <a href=\"http://build.fhir.org/extensibility.html\" target=\"_blank\" title=\"http://build.fhir.org/extensibility.html\">http://build.fhir.org/extensibility.html</a><br>\n\"An extension SHALL have either a value (i.e. a value[x] element) or sub-extensions, but not both. If present, the value[x] element SHALL have content (value attribute or other elements)\"</p>\n<p>so is that evaluated at the instance level or the profile level.</p>",
        "id": 189856761,
        "sender_full_name": "Eric Haas",
        "timestamp": 1583460564
    },
    {
        "content": "<blockquote>\n<p>for extensions, either Extension.extension is 0..0 and value is 1..1, or vice versa</p>\n</blockquote>\n<p>I don't think that's exactly what you mean, right?  For sure you could have value 0..0 and extension 1..* (otherwise complex extensions wouldn't be very complex).  But couldn't you also have extension 0..0 and value[x] 1..* (or really any min &gt;= 1 and any max &gt;= min)?</p>",
        "id": 189857703,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1583461926
    },
    {
        "content": "<p>oh yes, extension could be 1..*.</p>",
        "id": 189857869,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1583462258
    },
    {
        "content": "<p>It's evaluated at the instance level, but it's much clearer to readers when you make it explicit at the profile level.</p>",
        "id": 189858521,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1583463407
    }
]