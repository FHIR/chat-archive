[
    {
        "content": "<p>I spent an hour yesterday trying to get <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=8723\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=8723\">GF#8723</a> working, and ended up backing out. It would be a forward reference to another element, and we haven't had one of them before. So it's going to miss the boat. </p>",
        "id": 153872144,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487281883
    },
    {
        "content": "<p>but while I was doing this, I was also trying to make sense of \"the usecase where extensible bindings need information about bindings in the parent to correctly decide whether a concept is already present in the ancestry of bindings\"</p>",
        "id": 153872145,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487281918
    },
    {
        "content": "<p>I think that I understand the vocab validation space pretty well, but I have no idea what that means. </p>",
        "id": 153872146,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487281936
    },
    {
        "content": "<p>which really makes it quite the extension kind of thing, in my experience. </p>",
        "id": 153872147,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487281955
    },
    {
        "content": "<p>and made me wonder: a much more achievable technical solution to this, which seems to have the same outcome, is to add another extension like maxValueSet and minValueSet - extensibleValueSet - that goes on a binding, so you can list and track all the inherited extensible value set bindings if you really want. I'm pretty sure that you only have a need (for that whaterver-that-is- above) for extensible value sets if the binding is extensible, and the inherited bindings are extensible. </p>",
        "id": 153872148,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487282072
    },
    {
        "content": "<p>Parent says Red, Green, Blue, Yellow; extensible<br>\nChild says Red, Blue; extensible<br>\nGrandchild tries to say Red, Blue, Emerald Green</p>",
        "id": 153872215,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487299299
    },
    {
        "content": "<p>If all you have is the child, not the parent, you can't see that Emerald Green is invalid</p>",
        "id": 153872216,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487299317
    },
    {
        "content": "<p>i'm confused here - which is profile, and what is the instance?</p>",
        "id": 153872217,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487300289
    },
    {
        "content": "<p>This is all profiles</p>",
        "id": 153872228,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487303799
    },
    {
        "content": "<p>Though we could also have the grandchild be an instance</p>",
        "id": 153872229,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487303820
    },
    {
        "content": "<p>I feel as though the Child is wrong here </p>",
        "id": 153872231,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487304203
    },
    {
        "content": "<p>We can imagine these scenarios (using colors as examples).  But do we actually need them in real implementations?  And if we do, are there any simpler approaches to accomplishing the needed result?  I'm perfectly willing to be convinced, but I think I would like to see (or come up with) some more realistic examples of where it is actually going to help.</p>",
        "id": 153872236,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1487304638
    },
    {
        "content": "<p>It's legitimate to constrain out certain concepts.  Imagine something more realistic.  Base value set is \"all SNOMED disease codes, extensible\".  Child value set is \"all SNOMED disease codes relating to lungs, extensible\".  Definitely use-cases for doing that sort of thing.  And sending a custom code for \"broken arm\" would clearly be prohibited.</p>",
        "id": 153872241,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487304816
    },
    {
        "content": "<p>I don't understand the child value set in this case. what is it trying to achieve?</p>",
        "id": 153872245,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487305658
    },
    {
        "content": "<p>It's saying that in this profile, we should only have drug diseases - but it's possible some of them might not be in SNOMED, so it's extensible</p>",
        "id": 153872257,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487307670
    },
    {
        "content": "<p>It's consciously constraining out all of the SNOMED codes that are for non-lung-related conditions</p>",
        "id": 153872258,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487307705
    },
    {
        "content": "<p>and discarding conformance information. I feel as though this is problematic</p>",
        "id": 153872262,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487308206
    },
    {
        "content": "<p>anyway, so far I as I can figure, this only applies when focus definition is extensible, and when parent is extensible. if focus is required, or parent is example/preferred, then this is not a ting </p>",
        "id": 153872263,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487308298
    },
    {
        "content": "<p>so we can define inherited-extensible-valueset extension, and migrate that across the profiles, and that does what is needed</p>",
        "id": 153872264,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487308325
    },
    {
        "content": "<p>That should work</p>",
        "id": 153872284,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1487310201
    },
    {
        "content": "<p>great. I</p>",
        "id": 153872287,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487310641
    },
    {
        "content": "<p>'ll do that </p>",
        "id": 153872288,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1487310642
    }
]