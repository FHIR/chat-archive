[
    {
        "content": "<p>With the new implementation of the mapping language from <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> coming up soon I recently started develop a series of logical models to describe some custom input formats. One invariant on StructureDefinition regarding logical models always got me wondering, though. sdf-15 defines that the first element in a snapshot has no type unless it's a logical model. What was the reason for including logical models as an exception in  that rule in R4? Why would the type be of relevance on the first element for a logical model?</p>",
        "id": 171987105,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1564437242
    },
    {
        "content": "<p>I can on find the proposed backport to R3 in Gforge #20335, but not the original tracker item. Any pointers?</p>",
        "id": 172028883,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1564486688
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13701\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13701\">GF#13701</a>?</p>",
        "id": 172028936,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564486768
    },
    {
        "content": "<p>How are these related? That tracker item talks about sdf-12 which is supposed to be dropped in <a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20336\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20336\">#20336</a></p>",
        "id": 172029287,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1564487095
    },
    {
        "content": "<p>there was a note that they were related somewhere? I'm not sure</p>",
        "id": 172029429,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564487250
    },
    {
        "content": "<p>It just seems random that the type does not matter for resources but is important for logical models. In the end it does not hurt anyone to have the element in the logical model, but why not leave out?</p>",
        "id": 172030139,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1564487862
    },
    {
        "content": "<p>I think it's a bit different. Resources, they don't have a type. But I don't know that we can say, logical models will never have a type</p>",
        "id": 172030228,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564487928
    },
    {
        "content": "<p>But thanks for checking :)</p>",
        "id": 172030254,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1564487947
    },
    {
        "content": "<p>Wouldn't the type be implicitly defined by the baseDefinition, meaning that it's always of tye \"Element\"? Does the invariant imply that you could also leave it out?</p>",
        "id": 172030637,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1564488227
    },
    {
        "content": "<p>... I'm not sure. I wonder if we were just hedging our bets?</p>",
        "id": 172030729,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564488269
    },
    {
        "content": "<p>Mhm, I see. The real question would be what is the type if you would have DomainResource as the base definition? Still Element? Not that this would be supported by current tooling, but it would be possible, right?</p>",
        "id": 172031067,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1564488517
    },
    {
        "content": "<p>no at the moment you couldn't do that. but logical models are used for things much different to that - v2, openEHR, XDS....</p>",
        "id": 172031104,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564488572
    },
    {
        "content": "<p>those things may not be class models in the classic sense</p>",
        "id": 172031113,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1564488580
    },
    {
        "content": "<p>Ok, so the safe way would be to leave it open for logical models, though we don't know what else could be used as the type instead of 'Element'. Or if it could be left out optionally.</p>",
        "id": 172031844,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1564489172
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 172031913,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1564489206
    }
]