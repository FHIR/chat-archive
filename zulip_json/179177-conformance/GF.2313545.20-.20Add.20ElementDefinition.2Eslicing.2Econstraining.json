[
    {
        "content": "<p>I have an issue with the disposition of <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13545\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13545\">GF#13545</a> - the disposition says to add an element to ElementDefinition.slicing. but it would actually be used on a slice, not when setting the slice up. And slices are characterised by not having a slicing element. So this would completely wreck all our snapshot logic. Which I really don't want to do, and which was not the intent of the disposition</p>",
        "id": 153978532,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532647291
    },
    {
        "content": "<p>so I propose to add it to ElementDefinition directly, calling it 'sliceConstrains' with type string so you can identify what it constrains</p>",
        "id": 153978533,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532647354
    },
    {
        "content": "<blockquote>\n<p>And slices are characterised by not having a slicing element</p>\n</blockquote>\n<p>What about a derived profile that introduces a reslice on an existing named slice inherited from the base profile?</p>\n<p><strong>Base profile</strong></p>\n<ul>\n<li>elem (slicing intro)</li>\n<li>elem:sliceA</li>\n<li>elem:sliceB</li>\n</ul>\n<p><strong>Derived profile</strong></p>\n<ul>\n<li>elem (slicing intro)</li>\n<li>elem:sliceA</li>\n<li>elem:sliceB (slicing intro)</li>\n<li>elem:sliceB/reslice1</li>\n<li>elem:sliceB/reslice2</li>\n</ul>",
        "id": 153978647,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1532689957
    },
    {
        "content": "<p>As for the proposal of a new property, wouldn't a boolean value be sufficient? If a slice in a derived profile is intended to constrain an existing slice in the base profile, then the base profile _must_ contain a slice with the same name. If the base element is removed/renamed, this invariant is violated on the derived profile and logic can detect that. So repeating the slice name seems redundant....?</p>",
        "id": 153978648,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1532690506
    },
    {
        "content": "<p>well, so you're right, it's even more important that we don't add more slicings into that mix</p>",
        "id": 153978828,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532724079
    },
    {
        "content": "<p>if we nominated what slice we were deriving from, then we could have less complex naming rules. But you're right, we've worked around that now and it's probably not a good thing to rock that boat</p>",
        "id": 153978829,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1532724158
    },
    {
        "content": "<blockquote>\n<p>if we nominated what slice we were deriving from, then we could have less complex naming rules.</p>\n</blockquote>\n<p>You mean for re-slicing? Yes, if an extension would specify the associated base element name, then reslice would no longer need to include the base slice name as as prefix (redundant). We could change this, but I'm not sure if the benefits are sufficient.</p>",
        "id": 153979327,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1532944935
    }
]