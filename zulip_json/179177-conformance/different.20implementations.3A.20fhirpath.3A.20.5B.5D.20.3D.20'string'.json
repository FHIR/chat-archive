[
    {
        "content": "<p>I learned yesterday, that fhirpath equals (=) is implemented differently in different \"engines\".</p>\n<p>[] = 'string' evaluates:</p>\n<ul>\n<li>java -&gt; []</li>\n<li>.NET -&gt; true</li>\n<li><a href=\"https://hl7.github.io/fhirpath.js/\">https://hl7.github.io/fhirpath.js/</a> -&gt; []</li>\n<li><a href=\"https://niquola.github.io/fhirpath-demo/#/\">https://niquola.github.io/fhirpath-demo/#/</a> -&gt; false</li>\n</ul>",
        "id": 247073825,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627131854
    },
    {
        "content": "<p>According to the fhirpath spec the correct evaluation should be: [] </p>\n<blockquote>\n<p>Returns true if the left collection is equal to the right collection:</p>\n</blockquote>\n<p>As noted above, if either operand is an empty collection, the result is an empty collection.Returns true if the left collection is equal to the right collection:</p>\n<p><strong>As noted above, if either operand is an empty collection, the result is an empty collection.</strong></p>",
        "id": 247074142,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627132419
    },
    {
        "content": "<p>so .net and fhirpath-demo appearing to misinterpret fhirpath.</p>",
        "id": 247074197,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627132471
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> <span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span> <span class=\"user-mention\" data-user-id=\"191318\">@nicola (RIO/SS)</span></p>",
        "id": 247074208,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627132499
    },
    {
        "content": "<p>The issue is slightly hard to debug from the outside for the .NET part. If you're running FHIRPath on Simplifier, it will currently still be executed using an older version of the Firely SDK (See <a href=\"https://docs.fire.ly\">https://docs.fire.ly</a> for version details). The latest version of the SDK implements the correct behaviour.</p>",
        "id": 247082076,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1627142833
    },
    {
        "content": "<p>thanks for the debugging.</p>",
        "id": 247083330,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627144987
    },
    {
        "content": "<p>So it is only a Simplifier issue like the one with resolve(), caused by an older version of the fhirpath engine inside Simplifier.</p>",
        "id": 247083511,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627145259
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> Do you mean this query <code>{} = 'string'</code>, with <code>{}</code> for an empty collection? I don't see <code>[]</code> being accepted by any of them (didn't test Java). And differences in .NET implementation won't explain differences in outcome between the two JS implementations <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>\n<p>(Trying to see if I can evaluate it in Firely Terminal with a more recent SDK.)</p>",
        "id": 247193628,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1627301437
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"203235\">@Ward Weistra</span> i already debbuged this in depth together with <span class=\"user-mention\" data-user-id=\"193430\">@Alexander Zautke</span></p>",
        "id": 247193936,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627301677
    },
    {
        "content": "<p>It is a simplifier onyl issue, due to the older .net sdk used</p>",
        "id": 247194001,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627301742
    },
    {
        "content": "<p><a href=\"#narrow/stream/179177-conformance/topic/when.20are.20invariants.20triggered/near/247082282\">https://chat.fhir.org/#narrow/stream/179177-conformance/topic/when.20are.20invariants.20triggered/near/247082282</a></p>",
        "id": 247194004,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1627301743
    },
    {
        "content": "<p>Cool, was able to it in Firely Terminal though: <a href=\"/user_uploads/10155/dY8ncNzgv4J1de6GSG3U9yta/image.png\">image.png</a><br>\ncc <span class=\"user-mention\" data-user-id=\"193430\">@Alexander Zautke</span></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/dY8ncNzgv4J1de6GSG3U9yta/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/dY8ncNzgv4J1de6GSG3U9yta/image.png\"></a></div>",
        "id": 247194064,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1627301770
    },
    {
        "content": "<p>I think that means it evaluates to an empty collection <span aria-label=\"wink\" class=\"emoji emoji-1f609\" role=\"img\" title=\"wink\">:wink:</span></p>",
        "id": 247194084,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1627301787
    },
    {
        "content": "<p>This Martian logic XML poisons everything :( We implemented this by spec. I personally like more json centric interpretation [] = 'string' =&gt; \"Exception: could not compare array with string\" :)</p>",
        "id": 247767101,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1627682182
    }
]