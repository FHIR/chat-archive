[
    {
        "content": "<p>Recalling some discussions in Atlanta:<br>\nWould it make sense to have ElementDefinition.MustSupport as a coding instead of boolean?</p>",
        "id": 189344986,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582919818
    },
    {
        "content": "<p>Currently we can only define the meaning of MustSupport at the level of an IG, and it's a boolean.<br>\nAny description or nuances about the meaning of MS are outside the StructDef,</p>",
        "id": 189345280,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582919999
    },
    {
        "content": "<p>(How, where) are others defining MustSupport?</p>",
        "id": 189345422,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582920081
    },
    {
        "content": "<p>It can be defined at the IG or profile level and you can also provide usage notes on a per element level.<br>\nThere's been some discussion about making it coded, though doing that creates some complexity and it's not sure it buys much:</p>\n<ul>\n<li>there's no way we could define codes that would cover all the possible meanings/nuances of mustSupport</li>\n<li>it would mean that applications would have to define custom codes to declare the meaning of must support rather than just providing text in their IG</li>\n<li>we can't change mustSupport from a boolean to a Coding at this point - ElementDefinition is normative, so this would have to supplement, not replace the existing flag</li>\n</ul>\n<p>No one's yet indicated what they would computably do with a mustSupport code.</p>\n<p>FHIR-I <em>has</em> agreed to define a number of common mustSupport statements that IG authors could look at and consider copying/using as a starting point when creating IGs.</p>",
        "id": 189346594,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582920827
    },
    {
        "content": "<p>this is not true. I have provided some definitions of sub-definition of must-support. One that has been used for many years in DICOM, HL7, and IHE is \"R2\" (aka RE) -- Required to be populated if known, with no expectation on the recipient.</p>",
        "id": 189346937,
        "sender_full_name": "John Moehrke",
        "timestamp": 1582921079
    },
    {
        "content": "<p>is that an indication of what you'd do computably?</p>",
        "id": 189347234,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1582921320
    },
    {
        "content": "<p>Which of my statements is not true?  I don't think your assertion disproves any of them...</p>",
        "id": 189347293,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582921347
    },
    {
        "content": "<p>I assert that the \"No one has yet...\" You are just not agreeing with my proposal</p>",
        "id": 189352907,
        "sender_full_name": "John Moehrke",
        "timestamp": 1582925268
    },
    {
        "content": "<p>You haven't defined what you would computably do with a mustSupport code.  You've just asserted that you have one.  How do systems consume/compute on that code?</p>",
        "id": 189354016,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582926020
    },
    {
        "content": "<p>And how would that scale if the set of codes were opened up to the 100+ codes that would likely be needed to represent the different combinations and permutations of behavior we might reasonably see across the set of possible IGs?</p>",
        "id": 189354078,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582926090
    },
    {
        "content": "<p>Perhaps we could enrich it with a coding, instead of replacing it.</p>",
        "id": 189376479,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582953392
    },
    {
        "content": "<p>How do we handle \"shall be populated if known and if allowed for privacy etc reasons\"?</p>",
        "id": 189376551,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582953548
    },
    {
        "content": "<blockquote>\n<p>it would mean that applications would have to define custom codes to declare the meaning of must support rather than just providing text in their IG</p>\n</blockquote>\n<p>Is that a bad thing?<br>\nCurrently we have to write some text in the IG (in an intro section.. while other IGs will possibly use another section, leading to inconsistency of how to use and read specs).<br>\nBesides, where to provide that text ? Not in .short - and if it is on .definition or .comment, then it will not be rendered in the structure diagram, only in the  detailed descriptions page.</p>",
        "id": 189376672,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582953819
    },
    {
        "content": "<p>There is a proposal under way to define an extension. I need to find the other thread...</p>",
        "id": 189384032,
        "sender_full_name": "Frank Oemig",
        "timestamp": 1582969296
    },
    {
        "content": "<p>My question is what's the point of defining a code?  What is the difference in impact between a text in the IG narrative and text in the definition of a custom code?  Are we expecting software to actually consume the code, given that anyone who wants to will be making up their own?</p>",
        "id": 189393266,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1582988466
    },
    {
        "content": "<p>More than the code, it is about specifying the meaning of must support. Not buried in the text (which field? there is no guidance there, so I expect IGs to differ). So it's about making a different attribute or not make it boolean (from this discussion so far I think it is best to add a field - does this avoid breaking rules about normative resources?)</p>",
        "id": 189395757,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582993122
    },
    {
        "content": "<p>We could introduce an optional element.  Plan for now is an optional extension - because we don't have enough experience to demonstrate that it has value/will be widely used</p>",
        "id": 189401933,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1583004004
    },
    {
        "content": "<p>sounds good. I will use an extension for now</p>",
        "id": 189402011,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1583004127
    },
    {
        "content": "<p>please see <a href=\"#narrow/stream/179177-conformance/topic/ElementDefinition.2EsupportType\" title=\"#narrow/stream/179177-conformance/topic/ElementDefinition.2EsupportType\">https://chat.fhir.org/#narrow/stream/179177-conformance/topic/ElementDefinition.2EsupportType</a> as well. (<span class=\"user-mention\" data-user-id=\"191968\">@Ioana Singureanu</span> )<br>\nIn IGs the use of mustSupport is highly varying. It would be good to start formalizing its use.</p>",
        "id": 189472591,
        "sender_full_name": "Frank Oemig",
        "timestamp": 1583139132
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191320\">Lloyd McKenzie</span> <a href=\"#narrow/stream/179177-conformance/topic/ElementDefinition.2EMustSupport/near/189393266\" title=\"#narrow/stream/179177-conformance/topic/ElementDefinition.2EMustSupport/near/189393266\">said</a>:</p>\n<blockquote>\n<p>My question is what's the point of defining a code?  What is the difference in impact between a text in the IG narrative and text in the definition of a custom code?  Are we expecting software to actually consume the code, given that anyone who wants to will be making up their own?</p>\n</blockquote>\n<p>The R2 has been used for a long time in healthcare. How can it be used programatically? It can be used very much like 1..* except there is a way to handle when there is no data to be sent. This rule seems very computable.  It can, and is in IHE, further stressed by pre-condiditions that set the value so that the test tooling can see that it is indeed R2 being sent. These pre-condiditions often are part of the test procedure, but there are cases where the pre-conditions are part of a larger workflow.</p>",
        "id": 189490617,
        "sender_full_name": "John Moehrke",
        "timestamp": 1583155826
    }
]