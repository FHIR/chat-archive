[
    {
        "content": "<p>JSON itself does not forbid duplicate properties, although the spec does observe that they hurt interoperability since various libraries behave differently.<br>\nThe FHIR spec for application/fhir+json describes how to generate \"valid JSON\" and the process will not produce duplicate properties.</p>\n<p>Are duplicate properties explicitly invalid and thus should a server always report an error when one is encountered?</p>",
        "id": 153935897,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1518046067
    },
    {
        "content": "<p>I would say they're always invalid.  If it's a repeating property, all repetitions should appear in the array of a single property.  If you'd like to submit a change request for us to make this super explicit, that's not a bad idea.</p>",
        "id": 153935902,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1518047195
    },
    {
        "content": "<p>Done - <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=15290\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=15290\">GF#15290</a></p>",
        "id": 153936056,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1518057881
    },
    {
        "content": "<p>yes always invalid.</p>",
        "id": 153936073,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518058310
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> Looks like HAPI's use of GSON means it silently ignores this - I've filed a bug :)</p>",
        "id": 153936133,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1518066895
    },
    {
        "content": "<p>Technically, servers don't have to reject invalid instances, but agree that this would be a good thing for HAPI to catch.</p>",
        "id": 153936154,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1518067316
    },
    {
        "content": "<p>or to be able to catch, at least</p>",
        "id": 153936167,
        "sender_full_name": "Jim Steel",
        "timestamp": 1518068938
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> Looks like HAPI's use of GSON means it silently ignores this - I've filed a bug :)</p>\n</blockquote>\n<p>This is exactly what .NET's json parser (Newtonsoft) does - and there's no way to detect it.  People have tried to file that as a bug, but the author is pretty stubborn about it. So -at least in .NET- I would not be able to enforce it :-(</p>",
        "id": 153937694,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1518700243
    },
    {
        "content": "<p>I've seen similar threads discussing the issue wrt other JSON parsers too.  This doesn't seem like a good situation.  I'm wondering how this might interact with digital signatures and Canonical JSON</p>",
        "id": 153938329,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1518859181
    },
    {
        "content": "<p>it's just a generally bad part of json. Did you see Tim Bray's blog about his revised version of json?</p>",
        "id": 153938332,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518862411
    },
    {
        "content": "<p>This? <a href=\"https://www.tbray.org/ongoing/When/201x/2016/08/20/Fixing-JSON\" target=\"_blank\" title=\"https://www.tbray.org/ongoing/When/201x/2016/08/20/Fixing-JSON\">https://www.tbray.org/ongoing/When/201x/2016/08/20/Fixing-JSON</a></p>",
        "id": 153938589,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1519052622
    },
    {
        "content": "<p>yes and the rfc he talks about</p>",
        "id": 153938657,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519069064
    }
]