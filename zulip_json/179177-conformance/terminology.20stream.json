[
    {
        "content": "<p>I have created a new terminology stream for discussions about CodeSystem, ValueSet, ConceptMap, and the terminology service</p>",
        "id": 153837137,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468184272
    },
    {
        "content": "<p>this stream remains for discussions about the other terminology resources and conformance testing</p>",
        "id": 153837138,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468184315
    },
    {
        "content": "<p>This is probably relevant here:<br>\n<a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=10345\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=10345\">GF#10345</a>: Change ALL Required ValueSet bindings in ALL non-conformance and non-infrastructural resources to Extensible</p>",
        "id": 153838212,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468495599
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=10345\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=10345\">GF#10345</a> seems a great suggestion. I often get questions about this during my HL7 profiling tutorials. Seems peculiar that most resource elements are defined as optional by default, while many bindings are defined as Required by default.</p>",
        "id": 153838213,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1468496035
    },
    {
        "content": "<p>I would never support that. Not at all</p>",
        "id": 153838215,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468496546
    },
    {
        "content": "<p>Not even if 80% of the use cases would say otherwise? :-)</p>",
        "id": 153838216,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468496578
    },
    {
        "content": "<p>not globally, not generally, never </p>",
        "id": 153838217,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468496603
    },
    {
        "content": "<p>and not for status no</p>",
        "id": 153838218,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468496615
    },
    {
        "content": "<p>The current situation basically says to our analists that FHIR decided that their analysis is wrong</p>",
        "id": 153838219,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468496621
    },
    {
        "content": "<p>then we need to talk about it</p>",
        "id": 153838220,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468496650
    },
    {
        "content": "<p>your analysts should remember DSTU</p>",
        "id": 153838221,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468496675
    },
    {
        "content": "<p>Yes we should. We started by filing our problems on a per binding basis, but it is just too much to ask in the timeframe we have.</p>\n<p>Our analysts do not live under a FHIR regime I'm afraid. They have their own dynamics.</p>",
        "id": 153838223,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468496720
    },
    {
        "content": "<p>By the time they hand work to us for profiling, that's when we are faced with the rigidity of those bindings</p>",
        "id": 153838226,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468496774
    },
    {
        "content": "<p>sounds like you have a process problem. </p>",
        "id": 153838227,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468496805
    },
    {
        "content": "<p>there would be 2 things - you want a finer granularity - there is a right status, but you want more status codes</p>",
        "id": 153838228,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468496826
    },
    {
        "content": "<p>that's an extension </p>",
        "id": 153838229,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468496832
    },
    {
        "content": "<p>Only from the perspective of FHIR. We have a very regular process</p>",
        "id": 153838230,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468496834
    },
    {
        "content": "<p>of there's no status code - that's a dsicussion with the committee</p>",
        "id": 153838231,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468496849
    },
    {
        "content": "<p>It is not just status. It just one of the multiple examples we found.</p>",
        "id": 153838232,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468496868
    },
    {
        "content": "<p>you can't have a process that is independent of the community, and then say, the way to sovle this is to impose extensibility on everything everywhere on everyone in the community</p>",
        "id": 153838233,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468496889
    },
    {
        "content": "<p>no, not going to happen</p>",
        "id": 153838234,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468496894
    },
    {
        "content": "<p>OK then we have a deadlock. We cannot use FHIR as-is in these cases. So either we ignore the bindings and go with our own valuesets regardless or we need special instructions for implementers along the lines of \"ignore these these and these elements and read extensions instead\"</p>",
        "id": 153838235,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468497060
    },
    {
        "content": "<p>perhaps you could illustrate with an example</p>",
        "id": 153838236,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468497125
    },
    {
        "content": "<p>Sure. Observation.status has a value Corrected according to our analysts. V2 agrees with us. FHIR does not</p>",
        "id": 153838237,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468497170
    },
    {
        "content": "<p>Allergy.reaction.certainty has values Low/Medium/High/Fatal according to our analysts and according to FHIR Low/High/Unable to determine</p>",
        "id": 153838238,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468497220
    },
    {
        "content": "<p>amended = corrected</p>",
        "id": 153838239,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468497255
    },
    {
        "content": "<p>Allergy reacton.certainy - a very long argument. you can use the 3 codes, and add your own additional extension with your 4 codes as well</p>",
        "id": 153838240,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468497288
    },
    {
        "content": "<p>Amended maps to our Appended already. Cannot be both</p>",
        "id": 153838241,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468497290
    },
    {
        "content": "<p>what's the difference? </p>",
        "id": 153838242,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468497312
    },
    {
        "content": "<p>AllergyIntolerance.status: FHIR Required VS binding: active / unconfirmed / confirmed / inactive / resolved / refuted / entered-in-error. Our analysts insist on: active/completed/obsolete/nullified</p>",
        "id": 153838243,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468497322
    },
    {
        "content": "<p>stupid v3 codes. I don't think that you're going to have any luck with them till they give you good definitions </p>",
        "id": 153838244,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468497356
    },
    {
        "content": "<p>Corrected says I changed what I previously sent. Appended says I added info but left existing as-is</p>",
        "id": 153838245,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468497357
    },
    {
        "content": "<p>in an *observation*?</p>",
        "id": 153838246,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468497371
    },
    {
        "content": "<p>both are amended. </p>",
        "id": 153838247,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468497378
    },
    {
        "content": "<p>if you want to differentiate between the two - if you really think that makes sense - you can have an extension</p>",
        "id": 153838248,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468497411
    },
    {
        "content": "<p>Yes in an observation. You could probably argue that they logically come down to the same thing in Observation, but in DiagnosticReport they made a distinction so I guess the modelling was not consistent there then</p>",
        "id": 153838249,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468497443
    },
    {
        "content": "<p>no they are different beasts</p>",
        "id": 153838250,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468497464
    },
    {
        "content": "<p>How so?</p>",
        "id": 153838252,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468497495
    },
    {
        "content": "<p>I'm used to differentiating between amended and corrected with diagnostic reports. I've implemented the editing restrictions. </p>",
        "id": 153838253,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468497540
    },
    {
        "content": "<p>but I don't know what that would mean for an observation. </p>",
        "id": 153838254,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468497554
    },
    {
        "content": "<p>Suppose I send Length 1.92m without interpretation. Correction means I update 1.92m to e.g. 1.90m. Amending would mean that I add an interpretation code</p>",
        "id": 153838255,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468497587
    },
    {
        "content": "<p>really? I've never heard of that</p>",
        "id": 153838256,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468497615
    },
    {
        "content": "<p>but, well, this is something I've seen elsewhere - experienced doing v2 and CDA work - you have analysts that sit in their own circle, decide how things are for themselves, freeze their requriements, and then look all shocked when they're out of step with the rest of the world. </p>",
        "id": 153838257,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468497684
    },
    {
        "content": "<p>Actually in my day to day speak I would use the term Appending instead of Amending. Amending makes me think of politics</p>",
        "id": 153838258,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468497696
    },
    {
        "content": "<p>we'll be sympathetid to the problems that causes, but we won't simply give up. </p>",
        "id": 153838259,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468497707
    },
    {
        "content": "<p>I don't hand down any disjunct between what they think and what I can do in FHIR. Just the things where I feel FHIR is being too rigid or limited. In other cases I push back. So it is not as simple as you put it</p>",
        "id": 153838261,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468497770
    },
    {
        "content": "<p>we can always talk about the places where you think we don't have the codes you need. And it might be that the allergyintolerance one shouldn't be a required binding. I agree it's not simple. But neither is it as simple s 'no required bindings anywhere'</p>",
        "id": 153838264,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468497917
    },
    {
        "content": "<p>If a valid use case comes along where FHIR doesn't let me, I file a tracker item. But here the problem is that by design the FHIR Resources give me Required bindings in certain places. That means that I can only go through committee level agreeing before I can move on. I can shall and will do that, but the time and effort involved with that process may or may not fly well with day-to-day deadlines on the project I'm payed to do.</p>\n<p>What we ask is to lower the bar to make our use cases possible. Obviously we still need that sit down.</p>",
        "id": 153838265,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468497946
    },
    {
        "content": "<p>well, I could well believe that committees are being too restrictive without necessarily counting the cost of that for implementers. Perhaps I've been guilty of that myself - this is DSTU, so lets try and see if it's a problem..</p>",
        "id": 153838266,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468498047
    },
    {
        "content": "<p>I just posed this thing as a problem. To give you an idea: beginning of September we need to have implementable stuff as first draft ready.</p>",
        "id": 153838268,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468498089
    },
    {
        "content": "<p>I know we said 'fast', but that's.... faster</p>",
        "id": 153838269,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468498134
    },
    {
        "content": "<p>I cannot currently create a profile that conforms to both the analysts and FHIR. It currently is either/or</p>",
        "id": 153838270,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468498156
    },
    {
        "content": "<p>You know Nictiz had a long run to get here but hey: here we are :-)</p>",
        "id": 153838271,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468498194
    },
    {
        "content": "<p>you haven't nominated cases where you can't - just where it isn't 'nice'</p>",
        "id": 153838272,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468498199
    },
    {
        "content": "<p>but it's good you're here. even if maybe I don't since like it right now</p>",
        "id": 153838273,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468498262
    },
    {
        "content": "<p>? Observation.status, Allergy.reaction.certainty, AllergyIntolerance.criticality, AllergyIntolerance.status all qualify as troublemakers to us.</p>",
        "id": 153838274,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468498289
    },
    {
        "content": "<p>And we have 4/5 more profiles to go</p>",
        "id": 153838275,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468498307
    },
    {
        "content": "<p>I'm glad you appreciate our presence :-) :-)</p>",
        "id": 153838276,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468498352
    },
    {
        "content": "<p>What's the stance on using additional codings when the granularity of a code isn't sufficient?  In other words, use the FHIR defined coding and add a second, userSelected, more granular code from another system?</p>",
        "id": 153838329,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1468521490
    },
    {
        "content": "<p>Seems to me that if the meaning is wider/narrower this is OK - it's only the disjoint that would require an extension.  Or is that not good practice?</p>",
        "id": 153838330,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1468521525
    },
    {
        "content": "<p>If you mean translations for codings and codeableconcepts- that is appropriate.  It would be nice to have a ConceptMap  too.  For example Observation.code = LOINC for 'height'  with  a translation  local code = 'height while hanging by ankles'.   </p>",
        "id": 153838332,
        "sender_full_name": "Eric Haas",
        "timestamp": 1468522184
    },
    {
        "content": "<p>So is using a more granular local code and translating to the (less granular) standard code in an alternate coding expected?</p>",
        "id": 153838337,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1468524643
    },
    {
        "content": "<p>we expect that if you have a more granular code, that you'll use the more granular code in an extension. There's an example somewhere. hang on...</p>",
        "id": 153838361,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468526086
    },
    {
        "content": "<p><a href=\"http://hl7-fhir.github.io/message-request-link.xml.html\" target=\"_blank\" title=\"http://hl7-fhir.github.io/message-request-link.xml.html\">http://hl7-fhir.github.io/message-request-link.xml.html</a> - gender on the second patient</p>",
        "id": 153838362,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468526289
    },
    {
        "content": "<p>Makes sense for code or Coding.  For CodeableConcept could these be alternate codings?</p>",
        "id": 153838369,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1468526409
    },
    {
        "content": "<p>Or maybe that's all you're talking about...sorry if I missed that!</p>",
        "id": 153838373,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1468526469
    },
    {
        "content": "<p>yes it would be</p>",
        "id": 153838374,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468526495
    },
    {
        "content": "<p>Your question is mine. When the datatype is code and the binding is Required, you cannot but choose from the given set. If your use case mismatches with that given set you are now stuck. You can:</p>\n<p>1. File a change request on the valueset<br>\n2. Add an isModifier extension with the code you really wanted<br>\n3. Go for foul play and just override the valueset with your own</p>\n<p>Note that the code datatype does not have a system so it is as vulnerable as ID and IS in HL7 version 2 for overlapping codes from other parties with foul play.</p>\n<p>We think that filing a change request is the preferred way, but also time consuming which may or not fly well with the project timeline. We also think that adding an isModifier extension puts a much bigger strain on patient safety and implementers than converting the datatype to Coding and the binding to extensible.</p>",
        "id": 153839346,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468845101
    },
    {
        "content": "<p>the correct course of action depends on whether the code you wanted is for a finer grained status or for a status that doesn't exist. </p>",
        "id": 153839354,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468846518
    },
    {
        "content": "<p>if you can populate the correct status, then you don't need a modifier extension, you can use a normal extension </p>",
        "id": 153839355,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468846549
    },
    {
        "content": "<p>the idea of using code is that it makes sense to haev an enumerated set of values</p>",
        "id": 153839356,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468846583
    },
    {
        "content": "<p>Where we have \"code\" it's because we believe it's reasonable to have a base degree of interoperability across all systems.  Further nuance, if needed, can be conveyed by extensions.  However, it is important that if we use \"code\" as the data type that the bound value set does provide complete coverage for all possible use-cases - even if only at a large-grained level.  (And that we expect pretty much all systems to be able to map to that granularity.)</p>",
        "id": 153839376,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1468857171
    },
    {
        "content": "<p>Gotcha. In addition to tracker item we filed for changing all code/Required to Coding/Extensible we have also filed tracker items for the individual ValueSets that fail to meet that complete coverage criterium according to what our analysts deemed necessary and what we feel are reasonable use cases. Either way we will get where we need to be.</p>",
        "id": 153839409,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468870619
    },
    {
        "content": "<p>note that you need to take the terminology stuff seriously. You can't simply propose new codes without dealing with terminology qa rules, and providing good solid definitions that the committee can use. </p>",
        "id": 153839430,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468875746
    },
    {
        "content": "<p>proposing 'add medium' to AllergyIntolerance.criticality doesn't give the committee anything to work from, and they'll almost inevitably have to fail the proposal because they can't come up with a definition that is obviously different</p>",
        "id": 153839431,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468875802
    },
    {
        "content": "<p>that'll be a problem for you, from listening to the clinicians argue about what they think each other means on this subject </p>",
        "id": 153839433,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468875829
    },
    {
        "content": "<p>We have filed that exact question with them too. We do take our stuff seriously. You might be right that we should have filed that tracker item after they came back to us with answers.</p>",
        "id": 153839628,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468916893
    },
    {
        "content": "<p>so they have come back with answers?</p>",
        "id": 153839630,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1468924608
    },
    {
        "content": "<p>I'm afraid your track record in response times is much better than theirs. Bear/bare(?) in mind that the logical definitions were finished last year too so parts of the responsible groups have gone on to other things or on holiday this part of the year. :-) But rest assured I'm rattling cages.</p>",
        "id": 153839674,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1468944461
    }
]