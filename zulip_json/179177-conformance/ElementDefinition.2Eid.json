[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191351\">@Chris Grenz</span>: I'm going to commit some changes in for <a href=\"http://elementdefinition.id\" target=\"_blank\" title=\"http://elementdefinition.id\">elementdefinition.id</a> for consideration</p>",
        "id": 153831822,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465220969
    },
    {
        "content": "<p>instead of what we talked about, I've done something slightly different: I'm leaving the root on the id, and appending the slice name with a : instead of a .</p>",
        "id": 153831823,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465221011
    },
    {
        "content": "<p>root:name.element.element:slice.element</p>",
        "id": 153831824,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465221023
    },
    {
        "content": "<p>I think it delivers what you need, but is easier to generate and manage, and ensures wider uniqueness to </p>",
        "id": 153831825,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465221049
    },
    {
        "content": "<p>but I've run of time to commit it before the call</p>",
        "id": 153831826,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465221060
    },
    {
        "content": "<p>don't like the inconsistency of root:firstelement vs. element:slice, but overall I'm OK with that approach.  So we could also have element:slice/reslice ?</p>",
        "id": 153831829,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1465223472
    },
    {
        "content": "<p>yes. and I don't think it's inconsistent, actually. root:name is still element:slice. </p>",
        "id": 153831928,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465339768
    },
    {
        "content": "<p>I could've described it more consistently </p>",
        "id": 153831929,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465339780
    },
    {
        "content": "<p>I've committed my changes, minus the constraint that element id values must be unique in a snapshot and differential. When I build with that, I get a series of failures that surface bugs in snapshot generation. I'm working through them slowly</p>",
        "id": 153831930,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1465339829
    },
    {
        "content": "<p>Follow up for <span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span> referred here from elsewhere. See task 10256</p>",
        "id": 153835774,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467239210
    },
    {
        "content": "<p>task 10256 is resolved by the resolution on task 9843. </p>",
        "id": 153835775,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467239222
    },
    {
        "content": "<p>I don't understand the releveance of concept map and structure map</p>",
        "id": 153835776,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467239235
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=9843\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=9843\">http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=9843</a></p>\n<p>Yes that indeed is everything we wanted, so is making it required a business rules enforced by the build tool or something? I know Forge doesn't currently create them (I'll point <span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> to this tracker item) and I also found several profiles that do not adhere to the rule.</p>\n<p>As for ConceptMap and StructureMap (and ElementDefinition.mapping): we have been examining various ways to do what we wanted. ConceptMap contains very confusing wording on what its intended purpose is. Especially on ConceptMap.SourceElement.code you would get the impression that it is suitable for our purposes and that ConceptMap is not meant just for code equivalence.<br>\nStructureMap is what you pointed us to when we first came forward with our requirements, but we found that the solution was lacking examples to determine suitability, but even without examples it felt like something we could not apply in our context given the toolset and nature of artifacts. Lastly from what we could tell it seemed to be overly complicated.<br>\nFinally ElementDefinition.mapping looked appealing, but those would require us to update third party profiles if we want to leverage work others have done.</p>\n<p>In short: the <a href=\"http://Element.id\" target=\"_blank\" title=\"http://Element.id\">Element.id</a> request was on a detail of making mapping possible. The ConceptMap/StructureMap remarks were part of our venture into various ways of defining the mapping with those Element.ids</p>",
        "id": 153835835,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1467266247
    },
    {
        "content": "<p>well, we only made the changes around <a href=\"http://ElementDefinition.id\" target=\"_blank\" title=\"http://ElementDefinition.id\">ElementDefinition.id</a> last week, so of course Forge hasn't done that yet. </p>",
        "id": 153835928,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467320661
    },
    {
        "content": "<p>ConceptMap was originally intended to handle mapping between models, but when we started investigating that, it became clear that it fell short of requirements by an order of magnitude. </p>",
        "id": 153835933,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467320761
    },
    {
        "content": "<p>if you're just mapping concepts between models, then you can still do that with ConceptMap, but it won't enable conversion of data. If you think that StructureMap is too complicated, then you haven't tried to convert data driven by ConceptMap. </p>",
        "id": 153835934,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467320828
    },
    {
        "content": "<p>Since we narrowed the intent of ConceptMap, we haven't fully updated the narrrative, nor have we made it clear how you would map between concepts in models, though mostly we can't, since we only control one end...</p>",
        "id": 153835937,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467320902
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Looking at how you've implemented element id...appears that each token is path:slicename.  Assume slicename for reslices is the / separated form?  Is the pattern documented anywhere?</p>",
        "id": 153836663,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1467836209
    },
    {
        "content": "<p>Also, I expected the ElementDefinition profile to be updated with id required?</p>",
        "id": 153836664,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1467836229
    },
    {
        "content": "<p>Found this...  <a href=\"http://hl7-fhir.github.io/extension-patient-birthtime.xml.html\" target=\"_blank\" title=\"http://hl7-fhir.github.io/extension-patient-birthtime.xml.html\">http://hl7-fhir.github.io/extension-patient-birthtime.xml.html</a></p>\n<div class=\"codehilite\"><pre>&lt;element id=&quot;Extension.value[x]&quot;&gt;\n      &lt;path value=&quot;Extension.valueDateTime&quot;/&gt;\n</pre></div>\n\n\n<p>is this intended?</p>",
        "id": 153836666,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1467836279
    },
    {
        "content": "<p>Id should be either <code>Extension.valueDateTime</code> OR <code>Extension.value[x]:valueDateTime</code> if we want to consider variable types \"slices\" in this case.</p>",
        "id": 153836668,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1467836364
    },
    {
        "content": "<p>And another ???  <a href=\"http://hl7-fhir.github.io/daf/daf-patient.profile.xml.html\" target=\"_blank\" title=\"http://hl7-fhir.github.io/daf/daf-patient.profile.xml.html\">http://hl7-fhir.github.io/daf/daf-patient.profile.xml.html</a></p>\n<div class=\"codehilite\"><pre>&lt;element id=&quot;Patient:DAF-Patient&quot;&gt;\n  &lt;path value=&quot;Patient&quot;/&gt;\n  &lt;name value=&quot;DAF-Patient&quot;/&gt;\n</pre></div>\n\n\n<p>Not a slice...are we continuing to allow <code>name</code> on non-sliced elements?  I thought we agreed that name was ONLY allowed at the slice root...</p>",
        "id": 153836671,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1467836530
    },
    {
        "content": "<p>Understand that this may all just be lag in the tooling being updated...just wondering what the end state intent is so I can update my tooling for my work with Ewout.</p>",
        "id": 153836673,
        "sender_full_name": "Chris Grenz",
        "timestamp": 1467836562
    },
    {
        "content": "<p>mostly this is lag in the implementation. I'm not sure about the name on the root - I'll have to investigate that</p>",
        "id": 153836708,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1467841950
    }
]