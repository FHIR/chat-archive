[
    {
        "content": "<p>This topic may have been covered before so hope is an easy answer.   I am generating a pretty summary of a differential from  the structure definition</p>",
        "id": 163445024,
        "sender_full_name": "Eric Haas",
        "timestamp": 1555397019
    },
    {
        "content": "<p>And “backfilling” data form using the generated snapshot  from ig publisher.  The  summary text for discriminator element was generated  which I did not anticipate</p>",
        "id": 163445157,
        "sender_full_name": "Eric Haas",
        "timestamp": 1555397200
    },
    {
        "content": "<p>But it alerted me to the fact that I had defined the min to 0.   The first slice’s min is 1.  So my question is twofold.  Should I be assigning a min max on the discriminator element</p>",
        "id": 163445255,
        "sender_full_name": "Eric Haas",
        "timestamp": 1555397354
    },
    {
        "content": "<p>because it does not render in the ig pub possibly   Intentionally.</p>",
        "id": 163445362,
        "sender_full_name": "Eric Haas",
        "timestamp": 1555397472
    },
    {
        "content": "<p>Secondly which min takes precedence the slice or the discriminatir’s</p>",
        "id": 163445447,
        "sender_full_name": "Eric Haas",
        "timestamp": 1555397548
    },
    {
        "content": "<p>The validator verifies all specified cardinality constraints, both on the sliced elements as well as on the individual named slices. If some constraints are in conflict (e.g. sliced element specifies max &lt; 1 and named slice specifies min &gt; 2), than no instance will ever match (solution space is the empty set).</p>",
        "id": 163452942,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1555406074
    },
    {
        "content": "<p>So if the discriminator slice is 0..* and slice 1 is 1..1 then is slice 1 “required”.   Will a validation error occur  if slice1 is absent.?</p>",
        "id": 163463216,
        "sender_full_name": "Eric Haas",
        "timestamp": 1555416767
    },
    {
        "content": "<p>I mean discriminator element</p>",
        "id": 163463243,
        "sender_full_name": "Eric Haas",
        "timestamp": 1555416804
    },
    {
        "content": "<p>To me thAt says if you  have a slice you at least have to slice1.</p>",
        "id": 163463315,
        "sender_full_name": "Eric Haas",
        "timestamp": 1555416876
    },
    {
        "content": "<p>Vs 1..* for discriminator and 1..1 for slice1.</p>",
        "id": 163463361,
        "sender_full_name": "Eric Haas",
        "timestamp": 1555416943
    },
    {
        "content": "<p>Yes, instances must conform to both constraints.<br>\nExample:</p>\n<ul>\n<li>discriminator slice : 0...1</li>\n<li>named slice  A: 2...3</li>\n</ul>\n<p>Here, the profile requires at least 2 occurrences of slice A, but the slice group may contain at most 1 element =&gt; no solution is possible.</p>\n<p>Example 2:</p>\n<ul>\n<li>discriminator slice: 1...2</li>\n<li>named slice A: 0...1</li>\n</ul>\n<p>Here named slice A is optional, but the slice group requires at least a single element.</p>",
        "id": 163463551,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1555417108
    },
    {
        "content": "<p>thanks for your Patience Michel.   so are these two equivalent?</p>\n<p>Example 1:</p>\n<ul>\n<li>discriminator slice : 0...*</li>\n<li>named slice  A: 1..1</li>\n</ul>\n<p>Example 2:</p>\n<ul>\n<li>discriminator slice : 1...*</li>\n<li>named slice  A: 1..1</li>\n</ul>",
        "id": 163474925,
        "sender_full_name": "Eric Haas",
        "timestamp": 1555425534
    },
    {
        "content": "<p>Both require at least slice A?</p>",
        "id": 163474996,
        "sender_full_name": "Eric Haas",
        "timestamp": 1555425588
    },
    {
        "content": "<p>Correct.  Form #2 is preferred as it's less likely to confuse implementers.</p>",
        "id": 163475959,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1555426133
    },
    {
        "content": "<p>So how to  say....\"if you have  sliced element \"Foo\" you need to at least have slice A\"</p>",
        "id": 163477779,
        "sender_full_name": "Eric Haas",
        "timestamp": 1555427218
    },
    {
        "content": "<p>...not my use case but am curious...</p>",
        "id": 163477805,
        "sender_full_name": "Eric Haas",
        "timestamp": 1555427238
    },
    {
        "content": "<p>Invariant, I guess.</p>",
        "id": 163478514,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1555427723
    },
    {
        "content": "<p>Interesting example... do you think this is a frequent use case?</p>",
        "id": 163628584,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1555571794
    },
    {
        "content": "<p>I don't have one in mind but that is what I originally thought example one meant.</p>",
        "id": 163667030,
        "sender_full_name": "Eric Haas",
        "timestamp": 1555605064
    }
]