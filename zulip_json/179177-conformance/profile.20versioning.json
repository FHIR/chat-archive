[
    {
        "content": "<p>There where some talk about profile versioning on the FHIR dev days 2017, specifically a BoF session that I missed, that where organized by <span class=\"user-mention\" data-user-id=\"191334\">@Marten Smits</span> . Is there any summary from this discussion?</p>",
        "id": 153920588,
        "sender_full_name": "Thomas Tveit Rosenlund",
        "timestamp": 1511259383
    },
    {
        "content": "<p>yes we clearly concluded that profile versioning is hard ;-)</p>",
        "id": 153920590,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1511259457
    },
    {
        "content": "<p>we also agreed to add some new facility to the IG publisher to give more control over versioning</p>",
        "id": 153920591,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1511259504
    },
    {
        "content": "<p>It's hard. Hope to see some added functionality for this soon as it will bite us all sooner or later.</p>",
        "id": 153920960,
        "sender_full_name": "Thomas Tveit Rosenlund",
        "timestamp": 1511339319
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"192856\">@Thomas Tveit Rosenlund</span> , we talked about always adding the major version to the URL, but that doesn't solve the problem that all the profiles that reference the updated one, have to change their URL as well. We have discussed solutions and for example to put version control outside of the StructureDefinition like for example Microsoft does with Nuget and most other package managers do as well, but we haven't worked that out yet.  I think that it is actually pretty urgent topic, and needs to be discussed further soon.</p>",
        "id": 153920982,
        "sender_full_name": "Marten Smits",
        "timestamp": 1511344227
    },
    {
        "content": "<p>There is an infinite number of URI, so if you revise your profile in a breaking way, give it a new URI... It is either the same profile as it always has been, or it is a new one. Why is this hard? Meaning, why is it hard to not use the mechanism we have today. Why must two vectors be needed (URI + Version)? This might have been verbally described at your meeting, but could someone express it so that we can attack the problem head on?</p>",
        "id": 153921022,
        "sender_full_name": "John Moehrke",
        "timestamp": 1511358492
    },
    {
        "content": "<p>It's hard for two reasons: When you're editing, it's common to make changes, change things, back, tweak other things, etc. and when you're doing so, it's pretty unusal to be thinking consciously as you make each change \"is this substantive?\".  And if you did, it would be a major disruption to the editing process to go through and make a URI change as soon as you've made a substantive change (and un-change the URL if you reverse the change).  Second, if your profile is referenced by 40+ other profiles and those profiles are themselves referenced by other profiles, which in turn are referenced by other profiles (a situation I'm often in) a substantive change to one artifact can result in changing the URL of 100+ artifacts - with the corresponding impact on the implementer community of having to change all of those profile URLs in their systems.</p>",
        "id": 153921065,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1511374198
    },
    {
        "content": "<p>Having versioning driven by IG version seems to be a much cleaner mechanism to me.  The IG \"fixes\" the meaning of all of the profile URLs within the context of that IG.</p>",
        "id": 153921066,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1511374240
    },
    {
        "content": "<p>That is a straw argument as you have just said, changing the URI is a disruption, yet changing the version is not a disruption. BOTH take the same cogitative effort.. Is this a major version change, a minor version change, or a sub-minor version change??? I might argue version changes are HARDER to think about.    I don't disagree that it is 'nice' to show the historic flow from one to the other, but that can be done with URI too... again, there is no shortage of URI space</p>",
        "id": 153921072,
        "sender_full_name": "John Moehrke",
        "timestamp": 1511375662
    },
    {
        "content": "<p>I can change the version of everything in the IG with a flag on the publisher.</p>",
        "id": 153921095,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1511382542
    },
    {
        "content": "<p>Changing the URI of everything isn't possible with a simple flag because the URIs of different profiles will change in different ways.</p>",
        "id": 153921096,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1511382626
    },
    {
        "content": "<p>whether you change the version or the URI you need to notify external parties about the change when it regards anything but a maintenance (major + minor). I don't see why one of those attributes can be seen as superior to the other.</p>",
        "id": 153921128,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1511390216
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> a flag on the publisher?</p>",
        "id": 153921129,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1511390302
    },
    {
        "content": "<p><a href=\"http://wiki.hl7.org/index.php?title=IG_Publisher_Documentation#Business_Version\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=IG_Publisher_Documentation#Business_Version\">http://wiki.hl7.org/index.php?title=IG_Publisher_Documentation#Business_Version</a></p>",
        "id": 153921136,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1511392560
    },
    {
        "content": "<p>Yes, we've had some intense discussion on this here at Furore internally - and this has clear parrallels with how runtime resolution of symbols in things like the JVM or the .NET VM is done.  We also realized this is yet another thing as references (\"imports\") between packages/IGs, which is not a runtime/resolution thing (what does this canonical actually resolve to?) but a distribution (design time) thing - which packages/IGs are used by my software (and which packages do these packages depend on, and so on).</p>",
        "id": 153921450,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1511521234
    },
    {
        "content": "<p>We should be looking at using an existing mechanism (e.g. maven, npm) for packaging up sets of conformance resources that need to be distributed together as a unit - and using IG as a runtime resolution mechanism to bind symbols (\"canonicals\") to actual structuredefinitions.</p>",
        "id": 153921451,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1511521338
    },
    {
        "content": "<p>I wrote a blog about this, hopefully summarizing our DevDays birds-of-a-feather and providing new insights &amp; next steps!<br>\n<a href=\"https://thefhirplace.com/2017/11/28/versioning-and-canonical-urls/\" target=\"_blank\" title=\"https://thefhirplace.com/2017/11/28/versioning-and-canonical-urls/\">https://thefhirplace.com/2017/11/28/versioning-and-canonical-urls/</a></p>",
        "id": 153921824,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1511870343
    },
    {
        "content": "<p>Good summary <span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> . The only point I can think of to have some other form of the profile versioning method, other than packagring that is. Is that the definition of the information architecture, including the information models/structure tends to change at a slower pace than the code implementing the handling of that model. However, beeing able to update packages of StructureDefinitions seems like an elegant and solid solution to the versioning problem.</p>",
        "id": 153925183,
        "sender_full_name": "Thomas Tveit Rosenlund",
        "timestamp": 1513256249
    }
]