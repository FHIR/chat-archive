[
    {
        "content": "<p>While updating the code generation for R4 .net I've noticed that the multi cardinality for profile and target profile is back again.<br>\n(was 0..* in dstu2, then 0..1 in stu3, now 0..* again)</p>",
        "id": 153950805,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1522886378
    },
    {
        "content": "<p>yes ;-(</p>",
        "id": 153950806,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522886392
    },
    {
        "content": "<p>source of many bugs during the publication process</p>",
        "id": 153950807,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522886401
    },
    {
        "content": "<p>:-(</p>",
        "id": 153950808,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522886403
    },
    {
        "content": "<p>Great, thanks.</p>",
        "id": 153950809,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1522886740
    },
    {
        "content": "<p>(And its the last compile issue with the .net fhir client for the update - till I do the full generated code review)</p>",
        "id": 153950810,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1522886800
    },
    {
        "content": "<p>And I assume that we just missed updating <code>StructureDefinition.Url</code> from <code>uri</code> to <code>canonical</code>?</p>",
        "id": 153950811,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1522887348
    },
    {
        "content": "<p>no that was deliberate</p>",
        "id": 153950812,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522887360
    },
    {
        "content": "<p>They can be compared though right?</p>",
        "id": 153950813,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1522887402
    },
    {
        "content": "<p>yes</p>",
        "id": 153950814,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522887409
    },
    {
        "content": "<p>canonical is allowed to contain values with the syntax \"http://someurl.com|version\".  StructureDefinition.url is restricted to \"<a href=\"http://someurl.com\" target=\"_blank\" title=\"http://someurl.com\">http://someurl.com</a>\"</p>",
        "id": 153950842,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1522903313
    },
    {
        "content": "<p>So the comparison process needs to check for the presence of a business version in the canonical string</p>",
        "id": 153950843,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1522903333
    },
    {
        "content": "<p>Not looking forward to refactoring the snapshot generator to deal with multiple type profiles... <span class=\"emoji emoji-1f61f\" title=\"worried\">:worried:</span></p>",
        "id": 153951425,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1523264280
    },
    {
        "content": "<blockquote>\n<p>Not looking forward to refactoring the snapshot generator to deal with multiple type profiles... <span class=\"emoji emoji-1f61f\" title=\"worried\">:worried:</span></p>\n</blockquote>\n<p>Don't worry too much, it's rather an OR (now done with multiple typeRefs) than an AND (as it was in DSTU2)</p>",
        "id": 153951429,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1523268320
    },
    {
        "content": "<p>it's still a lot of work</p>",
        "id": 153951430,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1523268341
    },
    {
        "content": "<p>What was the reason for the change?</p>",
        "id": 153951571,
        "sender_full_name": "David Hay",
        "timestamp": 1523314477
    },
    {
        "content": "<p>So if <code>type.profile</code> and <code>type.targetProfile</code> are both <code>0..*</code>, and it is an OR instead of an AND. Does that mean if I have a <code>Reference-NL</code> type and a <code>Reference-DE</code> type, and a TargetProfile <code>nl-core-patient</code> OR <code>de-core-patient</code>. That I get the following options:</p>\n<div class=\"codehilite\"><pre><span></span>Reference-NL(nl-core-patient)\nOR\nReference-NL(de-core-patient)\nOR\nReference-DE(nl-core-patient)\nOR\nReference-DE(de-core-patient)\n</pre></div>\n\n\n<p>??</p>",
        "id": 153951802,
        "sender_full_name": "Marten Smits",
        "timestamp": 1523449347
    },
    {
        "content": "<p>yes pretty much but the profile and targetProfile are pretty orthogonal, so I haven't been bothered by that</p>",
        "id": 153951803,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1523449761
    },
    {
        "content": "<p>And is repeating targetProfile specifying one can reference a nl-core-patient OR nl-core-practitioner encouraged above repeating the type backbone element?</p>",
        "id": 153951811,
        "sender_full_name": "Marten Smits",
        "timestamp": 1523452452
    },
    {
        "content": "<p>type codes must be unique now - so more than just encouraged</p>",
        "id": 153951817,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1523452906
    },
    {
        "content": "<p>haha fair enough, makes sense. thanks!</p>",
        "id": 153951820,
        "sender_full_name": "Marten Smits",
        "timestamp": 1523452943
    }
]