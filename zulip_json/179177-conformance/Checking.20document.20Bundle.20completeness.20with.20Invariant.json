[
    {
        "content": "<p>I want to check a document type Bundle for completeness (as in: all Resources referenced by the Composition shall be contained in the Bundle).</p>\n<p>The Invariant I came up with does exactly that when I run it through the FHIRPath.js demo tool:<br>\n<code>Bundle.entry.descendants().reference.distinct().subsetOf(Bundle.entry.fullUrl)</code><br>\nIt picks up missing Ressources but allows for additional content in the Bundle.</p>\n<p>However it doesn not work in Simplifier. I picked this up with support and  they said (if I understand it correctly) that the evaluation failes because the datatypes of reference (string) and fullUrl (uri) don't match.</p>\n<p>I tried a couple more variants, e.g. <code>Bundle.entry.descendants().reference.distinct().all(Bundle.entry.fullUrl.contains($this))</code> but I keep running into the same error.</p>\n<p>I can't figure out a way to work around this, but I assume that checking the completeness of Bundles is a universal use case. It shouldn't be that hard...<br>\nHow can I make this work?</p>",
        "id": 199506303,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1591110500
    },
    {
        "content": "<p>I don't know that 'reference' is unique only to Reference.reference.  Also, the reference can be a local reference, which wouldn't match the fullUrl.  I don't think there's a good way to express this in FHIRPath.</p>",
        "id": 199509027,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1591111482
    },
    {
        "content": "<p>Oh, you mean a contained reference? I think that could be easily caught by adding<br>\nBundle.entry.descendants().reference.distinct()<em>.where($this.contains('#').not())</em>...<br>\n(or something similar)...</p>",
        "id": 199585519,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1591167898
    },
    {
        "content": "<p>The way I tested this is that the first part \"Bundle.entry.descendants().reference.distinct()\" returns \"string value\" and the second part \"entry.fullUrl()\" returns a \"uri value\". <br>\nThe use of \"subsetOf\" seems pretty straightforward in the spec, however it does not allow the comparison of string and uri values (it seems). And I couldn't figure out how to use a cast to transform the uri into a string or vice versa, to see if the \"subsetOf\" would work.</p>",
        "id": 199589489,
        "sender_full_name": "Matthijs van der Wielen",
        "timestamp": 1591171176
    },
    {
        "content": "<p>The funny thing is however, that the JavaScript implementation doesn't seem to run into that issue. So I wonder which one is the expected behavior and which one isn't...</p>",
        "id": 199592598,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1591173230
    },
    {
        "content": "<p>Hm, I guess the Specification doesn't take sides here: </p>\n<blockquote>\n<p>Because FHIRPath may be used in different situations and environments requiring different levels of type safety, implementations may make different choices about how much type checking should be done at compile-time versus run-time, and in what situations. Some implementations requiring a high degree of type-safety may choose to perform strict type-checking at compile-time for all invocations. On the other hand, some implementations may be unconcerned with compile-time versus run-time checking and may choose to defer all correctness checks to run-time.</p>\n</blockquote>\n<p>Source: <a href=\"http://hl7.org/fhirpath/N1/#type-safety-and-strict-evaluation\">http://hl7.org/fhirpath/N1/#type-safety-and-strict-evaluation</a></p>",
        "id": 199592802,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1591173359
    },
    {
        "content": "<p>The Conversion Table doesn't even mention the URI Type: <a href=\"http://hl7.org/fhirpath/N1/#conversion\">http://hl7.org/fhirpath/N1/#conversion</a></p>",
        "id": 199593112,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1591173572
    },
    {
        "content": "<p>Although, the more I read about types and conversion, the more I think that URI types shouldn't even exist in FHIRPath and just simply be treated as strings... There is no mention whatsoever of URI types in the FHIRPath spec...</p>",
        "id": 199593535,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1591173848
    },
    {
        "content": "<p>Ah. There it is!<br>\n<a href=\"http://hl7.org/fhir/fhirpath.html#types\">http://hl7.org/fhir/fhirpath.html#types</a></p>",
        "id": 199593556,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1591173870
    },
    {
        "content": "<p><a href=\"/user_uploads/10155/qct7ZaSrKThnCgvu_3EVehxR/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/qct7ZaSrKThnCgvu_3EVehxR/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/qct7ZaSrKThnCgvu_3EVehxR/image.png\"></a></div>",
        "id": 199593619,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1591173935
    },
    {
        "content": "<p>So, the FHIR types string and uri should be the same in FHIRPath...</p>",
        "id": 199593733,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1591174009
    },
    {
        "content": "<p>Interesting! So why won't the subsetOf not work in the fhirpath tester?</p>",
        "id": 199594050,
        "sender_full_name": "Matthijs van der Wielen",
        "timestamp": 1591174229
    },
    {
        "content": "<p>...because there's a bug in the .NET implementation ...?</p>",
        "id": 199596848,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1591176140
    },
    {
        "content": "<p>Bundle.entry.fullUrl should return a collection of strings instead of a collection of uris, IMO</p>",
        "id": 199598327,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1591177004
    },
    {
        "content": "<p>I've created a ticket for the .NET team. They will look into it. <a href=\"https://github.com/FirelyTeam/fhir-net-api/issues/1389\">https://github.com/FirelyTeam/fhir-net-api/issues/1389</a></p>",
        "id": 199602044,
        "sender_full_name": "Matthijs van der Wielen",
        "timestamp": 1591179687
    },
    {
        "content": "<p>Excellent, thanks!</p>",
        "id": 199611490,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1591186599
    },
    {
        "content": "<p>I don't mean a contained reference.  I mean that the references in your instance might say \"Patient/5\", but the fullUrls you're comparing them against would say \"<a href=\"http://somewhere.org/Patient/5\">http://somewhere.org/Patient/5</a>\" - and thus won't match.</p>",
        "id": 199647744,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1591204159
    }
]