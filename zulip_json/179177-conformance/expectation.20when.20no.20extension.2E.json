[
    {
        "content": "<p>What is the expectation if <em>no</em> <a href=\"http://build.fhir.org/extension-capabilitystatement-expectation.html\" target=\"_blank\" title=\"http://build.fhir.org/extension-capabilitystatement-expectation.html\">expectation-extension</a> is used in CapStatement when defining the capabilities of a desired system specification such as for an IG?</p>",
        "id": 153954651,
        "sender_full_name": "Eric Haas",
        "timestamp": 1524777269
    },
    {
        "content": "<p>I presume it's \"shall\"</p>",
        "id": 153954707,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1524788035
    },
    {
        "content": "<p>Presume is like assume :-) .  Suspect we need a GForge for this</p>",
        "id": 153954710,
        "sender_full_name": "Eric Haas",
        "timestamp": 1524788549
    },
    {
        "content": "<p>Though if it's a \"SHALL\" by default, I guess that makes expectation-extension a modifier?</p>",
        "id": 153954711,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1524789547
    },
    {
        "content": "<p>I would rather keep ismod out of it.  I think it should be undefined.</p>",
        "id": 153954712,
        "sender_full_name": "Eric Haas",
        "timestamp": 1524789608
    },
    {
        "content": "<p>Which means you need to use the extension if you want to define it/</p>",
        "id": 153954713,
        "sender_full_name": "Eric Haas",
        "timestamp": 1524789629
    },
    {
        "content": "<p>Well, when a system declares it, it's pretty much an \"I do support\" - or the declaration is useless for clients</p>",
        "id": 153954714,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1524789665
    },
    {
        "content": "<p>An alternative is we promote it to core</p>",
        "id": 153954715,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1524789680
    },
    {
        "content": "<p>I watched the other WGs struggle with IsMod btw nobody knows how to apply it</p>",
        "id": 153954716,
        "sender_full_name": "Eric Haas",
        "timestamp": 1524789718
    },
    {
        "content": "<p>Does inclusion of the element with any of its allowed values cause the interpretation of the resource ignoring the resource to not be true</p>",
        "id": 153954717,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1524789810
    },
    {
        "content": "<p>We are not talking about what system support here,  we are talking about expectations</p>",
        "id": 153954718,
        "sender_full_name": "Eric Haas",
        "timestamp": 1524789820
    },
    {
        "content": "<p>you need to define all the expectations</p>",
        "id": 153954719,
        "sender_full_name": "Eric Haas",
        "timestamp": 1524789913
    },
    {
        "content": "<p>The resource is used for both purposes.  You're proposing that it's precise when defining system capabilities, but fuzzy when defining desired capabilities?</p>",
        "id": 153954720,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1524789931
    },
    {
        "content": "<p>I think the extension only makes sense for defining expectations.</p>",
        "id": 153954721,
        "sender_full_name": "Eric Haas",
        "timestamp": 1524789998
    },
    {
        "content": "<p>So Yes.<br>\nYou are proposing everything is a Shall and mark the exceptions.</p>",
        "id": 153954722,
        "sender_full_name": "Eric Haas",
        "timestamp": 1524790098
    },
    {
        "content": "<p>Which means the extensions should be \"reducedExpectations\"  or rather two extensions May and Should</p>",
        "id": 153954723,
        "sender_full_name": "Eric Haas",
        "timestamp": 1524790210
    },
    {
        "content": "<p>I really don't care which approach ( except for the ismod part which is not needed for an expectation) but need to be clear and allow the extension everywhere</p>",
        "id": 153954724,
        "sender_full_name": "Eric Haas",
        "timestamp": 1524790369
    },
    {
        "content": "<p>promoting it to core is unwise since you would need an element for each element - more economical to keep as an extension forever.</p>",
        "id": 153954725,
        "sender_full_name": "Eric Haas",
        "timestamp": 1524790454
    },
    {
        "content": "<p>But the point is that those extensions change the interpretation from what would be true if they were ignored - that makes them modifier extensions</p>",
        "id": 153954742,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1524807191
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=16115\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=16115\">GF#16115</a></p>\n<p>And definately no on IsMods for something that is an expectation for behavior  - its is defining proposed behavior an not actual behavior.</p>",
        "id": 153955253,
        "sender_full_name": "Eric Haas",
        "timestamp": 1525187746
    }
]