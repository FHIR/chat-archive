[
    {
        "content": "<p>Now I'm pretty sure to have found a bug.<br>\nIn the JSON Schema for <a href=\"https://www.hl7.org/fhir/observation.schema.json.html\">R4 Observations</a> the status field is not in the <code>required</code> array.<br>\nTherefore our validation does not fail when the status field is missing.</p>",
        "id": 215482492,
        "sender_full_name": "Julius Severin",
        "timestamp": 1604423197
    },
    {
        "content": "<p>That's not a bug - because you could have <code>status</code> or <code>_status</code>.  The requirement is for one or the other (or both), but it's legal to omit <code>status</code> if there's an extension.</p>",
        "id": 215499859,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1604431763
    },
    {
        "content": "<p>json schema has no way to say \"you must have at least one of status or _status\"</p>",
        "id": 215504659,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1604434455
    },
    {
        "content": "<p>Maybe I'm getting this wrong, but I thought the JSON schema <a href=\"http://json-schema.org/understanding-json-schema/reference/combining.html#oneof\"><code>oneOf</code> keyword</a> would allow this. I.e. it seems one could specify one subschema with <code>status</code> required and one with <code>_status</code> required, and then combine the two in a schema that says the instance must fit exactly one of them (which , for several required fields, would of course mean having to multiply out all possible combinations...). Did I misunderstand that or are there obstacles to using that?</p>",
        "id": 215549812,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1604476374
    },
    {
        "content": "<p>The problem is that you'd need to do that for <em>every</em> simple type that was mandatory, so it becomes unreasonable pretty quickly</p>",
        "id": 215602408,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1604505985
    },
    {
        "content": "<p>maybe that would work. I think that I didn't do that because.... some reason. I can't remember.</p>",
        "id": 215655159,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1604533171
    },
    {
        "content": "<p>I</p>",
        "id": 215655169,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1604533177
    },
    {
        "content": "<p>I'll add it to my todo list</p>",
        "id": 215655174,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1604533184
    },
    {
        "content": "<p>Thanks, <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> this would definitely help catch some nasty errors! Just let us know if we can support in some way.</p>",
        "id": 215682845,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1604565580
    }
]