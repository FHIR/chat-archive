[
    {
        "content": "<p>I'm looking for guide lines or best practices towards when to create a new profile or when to just create a slice. This is specifically relevant for observations</p>",
        "id": 153921831,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1511879771
    },
    {
        "content": "<p>it relates to the use of Observation.component. I can choose to add a lot of slices within the component or I can define multiple profiles.</p>",
        "id": 153921834,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1511880519
    },
    {
        "content": "<p>each having a smaller amount of slices</p>",
        "id": 153921835,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1511880540
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 153921836,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1511880580
    },
    {
        "content": "<p>As stated in the doc \"Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations.\"</p>",
        "id": 153921837,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1511880625
    },
    {
        "content": "<p>That is a good question.  I've seen both approaches. \" All quantitative lab measure follow profile A\"  or \"for lab test X use profile Y\"   I'd like to know what works best in the wild too ...</p>",
        "id": 153921872,
        "sender_full_name": "Eric Haas",
        "timestamp": 1511886704
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193983\">@Lilian Minne</span> <span class=\"user-mention\" data-user-id=\"192301\">@Ardon Toonstra</span>  <span class=\"user-mention\" data-user-id=\"191334\">@Marten Smits</span> ?</p>",
        "id": 153921885,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1511888446
    },
    {
        "content": "<p>Because slicing is so powerful, it can almost be considered a profile <strong>within</strong> the structuredef when looking at Observation.component - that at least goes for my scenario where observations would be recording of ECG, BPM, heartrate, temperature and so on (whatever is measured/observed in an ambulance ). I can choose to use only one profile with a set of optional sliced components ... or I can choose to use multiple profiles (and in that case I'll probably have to make one master profile and a set of derived profiles). Both kinds of use will have the same structural/computational strengths</p>",
        "id": 153922002,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1511942030
    },
    {
        "content": "<p>In the same sense that any set of constraints on an element can be turned into a named structuredef for that node, yes.  And you could turn the inlined constraints in a slice into a profile, and just make the slice reference the profile as well. Is that what you mean?  Doing that is especially useful when the constraints on the slices share common properties, so you could push those out to a shared parent profile on the slice.  Are we talking about the same thing?</p>",
        "id": 153922010,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1511946203
    },
    {
        "content": "<p>the question is this: My observations could be modelled as mulitple profiles, eg. a bpm structure-def of an observation stating a required Observation.component containing sys, dia and pulse, and a temperature structure-def of an observation containing a required Observation.component containing the temperature</p>",
        "id": 153922016,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1511951274
    },
    {
        "content": "<p>I could also just make one structure-def of an observation stating optional use of all the Observation.components stated before</p>",
        "id": 153922017,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1511951337
    },
    {
        "content": "<p>maybe with a Fhirpath.expr stating that at least one of the components should be present</p>",
        "id": 153922018,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1511951411
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> I can't say if we are talking about the same thing. I think <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> understands where I'm heading</p>",
        "id": 153922019,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1511951633
    },
    {
        "content": "<p>Ah, I see, no my statement was more generic (but enabled your usecase)</p>",
        "id": 153922033,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1511956845
    },
    {
        "content": "<p>Yes, I sounds like you were heading into making slices as profiles ... a more generic (and complex .... :<span class=\"emoji emoji-1f914\" title=\"thinking face\">:thinking_face:</span> ) approach - but yes, my question does not go that deep. I would however still like to get input and hear about best practices</p>",
        "id": 153922039,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1511960612
    },
    {
        "content": "<p>I would prefer multiple nested StructureDefinitinos to complex fhirpath.expr embedded. It may look to a human as more messy, but it seems it is overall more provable-correct. I just have a tendency to avoid script language whenever possible.</p>",
        "id": 153922046,
        "sender_full_name": "John Moehrke",
        "timestamp": 1511964082
    },
    {
        "content": "<p>as long as the nesting don't imply inheritance with more than one (MAX 2) level(s), I'll probably agree with you <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> . <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span>, whats your experience?</p>",
        "id": 153922048,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1511964563
    },
    {
        "content": "<p>Splitting constraints out into a separate profile makes sense if you expect those constraints to be re-used and if you're comfortable with the separate profile having its own lifecycle and being maintained separately from the referencing profile.  Otherwise, it makes more sense to constrain inline.</p>",
        "id": 153922076,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1511970399
    },
    {
        "content": "<p>As an author is easier to create separate profiles but harder to maintain.   Would like to know what is easier for implementers using the profiles.</p>",
        "id": 153922079,
        "sender_full_name": "Eric Haas",
        "timestamp": 1511970605
    }
]