[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"196276\">@Rich Boyce</span> , <span class=\"user-mention\" data-user-id=\"196481\">@Thomas Reese</span> - <span class=\"user-mention\" data-user-id=\"191358\">@Dennis Patterson</span> and I were chatting at the WGM this week about <a href=\"https://github.com/cds-hooks/docs/issues/477\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/477\">#477</a>. I'm struggling to mesh together the DetectedIssue resource with a CDS Hooks card. It seems like an instance of DetectedIssue is simply a formal auditing of the rationale for showing a card to a clinician. Within your <a href=\"http://build.fhir.org/ig/HL7/PDDI-CDS/start.html#-500--level-2-implementation\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/PDDI-CDS/start.html#-500--level-2-implementation\">PDDI flow</a> can we keep the use of storage of the DetectedIssue resource within the \"PDDI CDS Medication Select Service\" perhaps with the use of the proposed CDS Hooks /analytics endpoint for the EHR to inform the service of the action taken by the clinician?</p>",
        "id": 165081145,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1557242603
    },
    {
        "content": "<p>This is something I have not thought of and I think it might be a great option to resolve several barriers (thank you!). My one concern is that we use the clinician actions from the order-select response to populate the DetectedIssue. The goal is to provide the order-sign service with enough information, either through the DetectedIssue or another mechanism, to filter a subsequent alert (hopefully). So, the order-select and order-sign services need to communicate, if they are separate. Also, I think we can track the original MedicationRequest with the identifier/id to confirm clinician actions.</p>",
        "id": 165084040,
        "sender_full_name": "Thomas Reese",
        "timestamp": 1557244326
    },
    {
        "content": "<p>Hey Thomas, it's really just the DetectedIssue's mitigation.action that the order-sign service that you need, right? (The override reason supplied by the clinician to the order-select service should be used to inform the order-sign service when to suppress alerts). Is this right?</p>",
        "id": 165084982,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1557244989
    },
    {
        "content": "<p>Yes, that is the primary reason.</p>",
        "id": 165096474,
        "sender_full_name": "Thomas Reese",
        "timestamp": 1557252884
    },
    {
        "content": "<p>I think that It would be cleaner and more \"CDS Hooks-like\" and broadly reuseable to enable override reasons natively within the cards.</p>",
        "id": 165109890,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1557262232
    },
    {
        "content": "<p>What do you think?</p>",
        "id": 165110128,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1557262394
    },
    {
        "content": "<p>Override reason makes sense, we would use something like that (and have had to use EHR-specific functionality to configure that aspect because CDS Hooks doesn't have it). But I wonder how it would work in the case of passing the override from an order-select to an order-sign? Would the EHR keep that as some sort of context and make it available on the order-sign call?</p>",
        "id": 165113661,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1557265036
    },
    {
        "content": "<p>If it was actually a resource, it would point to the order and be available</p>",
        "id": 165119026,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1557269975
    },
    {
        "content": "<blockquote>\n<p>But I wonder how it would work in the case of passing the override from an order-select to an order-sign? Would the EHR keep that as some sort of context and make it available on the order-sign call?</p>\n</blockquote>",
        "id": 165130635,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1557285599
    },
    {
        "content": "<p>Admittedly, we created <code>appContext</code> to enable this type of relaying of information from the CDS Service to a SMART app, but a SMART app launches in the client directly from a card. A <code>order-sign</code> hook doesn't launch directly from an <code>order-select</code>in the client. Further, this enables a pretty slippery slope.</p>",
        "id": 165130680,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1557285604
    },
    {
        "content": "<p>It's much more likely that the two services have a relationship and should communicate directly with one another.</p>",
        "id": 165130684,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1557285609
    },
    {
        "content": "<p>In fact, if there's the same Clinical Reasoning engine, it seems important that the engine be able to maintain state. <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> - is this the case?</p>",
        "id": 165130688,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1557285618
    },
    {
        "content": "<blockquote>\n<p>Lloyd McKenzie: If it was actually a resource, it would point to the order and be available</p>\n</blockquote>",
        "id": 165130691,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1557285625
    },
    {
        "content": "<p>Hey Lloyd, the specific need here is to enable a clinician to identify why generated clinical guidance isn't relevant. Sure, FHIR resources all the way down has many benefits, but our approach may also allow CDS Hooks to be specific about what's needed -- overrideReason, instead of a full DetectedIssue resource to communicate this information.</p>",
        "id": 165130693,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1557285630
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"196481\">@Thomas Reese</span> - what do you think about exploring an extension that communicated the list (or ValueSet?) of override reasons in the card. The /analytics endpoint to actually receive this info is trickier.</p>",
        "id": 165130694,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1557285632
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> , that's true, once the clinician overrode, the service would track it, and could apply the override to the order-sign hook if it was appropriate for that user.</p>",
        "id": 165130976,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1557286117
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> My point is that if an override is determined once, that override presumably applies for all subsequent invocations of the hook for that patient/order/context - including those that may happen in other sessions and possibly even for other users.  The only way to manage that is if the override is persisted, and that probably means a resource.</p>",
        "id": 165163768,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1557322895
    },
    {
        "content": "<p>This is what I envisioned and think it may be in use with the Opioids IG. For example, an overriding reason could be that the \"patient was instructed to discontinue the first conflicting medication.\" This would be one in a ValueSet.</p>",
        "id": 165172605,
        "sender_full_name": "Thomas Reese",
        "timestamp": 1557329019
    },
    {
        "content": "<p>For the Opioid IG, we actually leave that up to local configuration, since different EHRs will likely do that differently and CDS Hooks didn't have a mechanism to communicate the override generically. That's why we'd be interested in working through the use case, we would definitely use that feature.</p>",
        "id": 165203453,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1557351344
    },
    {
        "content": "<p>Hey Guys, I updated our <a href=\"https://github.com/cds-hooks/docs/wiki/CDS-Hooks-1.1-Ideas\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/wiki/CDS-Hooks-1.1-Ideas\">CDS Hooks 1.1 ideas wiki page</a> to include override reasons and analytics.</p>",
        "id": 165729373,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1557937552
    },
    {
        "content": "<p>If we strip it down to the bare minimum, what do we need from an override reason? It's really just an array of human readable terms and maybe machine-readable ids ? Maybe a freetext comment? Would the CDS service dictate when a reason is required?</p>",
        "id": 165729375,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1557937553
    },
    {
        "content": "<p>In the PDDI use case, the CDS service needs to relate order-select and order-sign hooks to avoid alerting, in the response to order-sign, something that was overriden in order-select. I am note sure if that implies that the override object would need to provide an additional field useful for such tracking (e.g., the HookInstance ID of the orderselect or the MedicationRequest id containing the trigger medication from the order-select). The Also, its not clear to me how the job  the CDS Analytics endpoint would interact with the CDS Service.  Is there a document I can read on that?</p>",
        "id": 165738616,
        "sender_full_name": "Rich Boyce",
        "timestamp": 1557943797
    },
    {
        "content": "<p>Cool! I added \"actions\" to the list.</p>",
        "id": 165752534,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1557952786
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"196276\">@Rich Boyce</span>,</p>",
        "id": 166115524,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1558382763
    },
    {
        "content": "<blockquote>\n<p>the CDS service needs to relate order-select and order-sign hooks to avoid alerting, in the response to order-sign, something that was overridden in order-select</p>\n</blockquote>",
        "id": 166115568,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1558382767
    },
    {
        "content": "<p>Totally makes sense. Further, it seems likely that many use-cases, in addition to PDDI would also benefit from knowing when to not alert the clinician during <code>order-sign</code>.</p>",
        "id": 166115571,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1558382772
    },
    {
        "content": "<p>The balloted version of the CDS Hooks specification included this (small) section on <a href=\"https://cds-hooks.hl7.org/ballots/2018May/specification/1.0/#suggestion-tracking-analytics\" target=\"_blank\" title=\"https://cds-hooks.hl7.org/ballots/2018May/specification/1.0/#suggestion-tracking-analytics\">Suggestion Tracking Analytics</a>. During HL7 ballot comment resolution it was removed due to a lack of maturity/implementations.</p>",
        "id": 166115582,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1558382778
    },
    {
        "content": "<p>This simplistic \"analytics\" proposal uses the <code>card.suggestion.uuid</code> as the unique id, (which I think makes sense instead of the MedRequest FHIR id or something else) and only informs the CDS service when a suggestion is accepted. To enhance this part of the spec, we'd need to define the structure of an override and also specify how an instance of an override is communicated back to the service.</p>",
        "id": 166115588,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1558382782
    }
]