[
    {
        "content": "<p>is anyone else interested in defining a hook to use to indicate that the patient has answered a question while filling out a Questionniare to create a QuestionnaireResponse? This would allow some knowledge source to vary the next question(s) based on existing answers.</p>",
        "id": 153937896,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518726011
    },
    {
        "content": "<p>I think the varying needs to be expressed in the Questionnaire design.  Having the Questionnaire design change on the fly would be quite problematic.</p>",
        "id": 153937922,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1518726906
    },
    {
        "content": "<p>of course, it's easier if you can do that. but there's all sorts of sophisticated algorithms for doing this that it makes no sense to try and figre out a general purpose computing langauge/infrastructure for. There's lots of work in production based on AI/big data analysis where you figure what the next question is based on the answer to the existing questions</p>",
        "id": 153937924,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518727042
    },
    {
        "content": "<p>This sounds like custom transitions between sections, which I agree we don't really cover</p>",
        "id": 153937931,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1518728409
    },
    {
        "content": "<p>And I don't know that cds hooks is the right way to do it, but I don't have a better suggestion either.</p>",
        "id": 153937932,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1518728449
    },
    {
        "content": "<p>We do fairly complex questionnaires for Providers, but the way we do it is to use a cds-hook to identify when it's appropriate to start the questionnaire and return a card with a smart-app link to the actual form.  Then we return the results of that interaction back to the EHR</p>",
        "id": 153937934,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1518728709
    },
    {
        "content": "<p>right. you can outsource the entire interaction to a different app. But this means that you can't integrate with the data source either</p>",
        "id": 153937939,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518730603
    },
    {
        "content": "<p>I'd tend to treat this as component questionnaires.  At least then you have an immutable object to reference that defines the questions.</p>",
        "id": 153937945,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1518730809
    },
    {
        "content": "<p>What do you mean by 'integrate with the data source'? We can still make FHIR calls to the EHR as needed.</p>",
        "id": 153937947,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1518730838
    },
    {
        "content": "<p>Lloyd, don't understand your point. Kevin, yes, you can. Right now, with such limited access to EHR logic as is implemented, that's not enough for many people</p>",
        "id": 153937950,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518731145
    },
    {
        "content": "<p>I'm interested to see how cds-hooks may work for this, particularly issues around the granularity of the hook. Rather than a general event we trigger business logic based on the specific questionnaire items that are involved in the expressions so the business logic is not triggered every time any item is modified. We limit the output of the business logic to hiding/showing question groups and setting calculated items such as a BMI, not dynamically creating new questions.<br>\nWe found that providing a general \"hook\" any time a user changed anything on the questionnaire slowed performance on larger questionnaires, but that may be implementation specific, we just starting with React/Redux at the time.</p>",
        "id": 153937973,
        "sender_full_name": "Malcolm Pradhan",
        "timestamp": 1518733959
    },
    {
        "content": "<p>Rather than having a hook indicate what questions are to be answered in a single large questionnaire, I'd rather have it indicate what questionnaires are to be answered in a set of small interrelated questionnaires.  Otherwise it becomes too hard to validate that the questionnaire response is complete.</p>",
        "id": 153937974,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1518734245
    },
    {
        "content": "<p>you're making a lot of assumptions about who does what.</p>",
        "id": 153937979,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518734988
    },
    {
        "content": "<p>what i imagined was that each time the user answered a question, the cds-hook would be invoked, which would return the next question, or an indication that the questionnaire was now complete, and a set of recommended actions. </p>\n<p>The output would be both the questions and the answers</p>",
        "id": 153937981,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518735198
    },
    {
        "content": "<p>Yeah, I can see how that workflow and hook might be useful.</p>",
        "id": 153937983,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1518735433
    },
    {
        "content": "<p>So there'd be a new Questionnaire instance and a QuestionnaireResponse every time you answered a Question - and there'd be no \"authoritative\" Questionnaire - just a custom one the CDS system made up on the fly?</p>",
        "id": 153938003,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1518738847
    },
    {
        "content": "<p>don't know what you think that 'authoritative' means. I was thinking of adding questions on the fly, not making up new questionnaires all the time</p>",
        "id": 153938008,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518739806
    },
    {
        "content": "<p>If there's a new question in the instance, that's a new Questionnaire.  In order to validate the QuestionnaireResponse (or have any idea how to render it to allow adjustment), you need to point to the Questionnaire it was created against.  If the Questionnaire is created on the fly, then you have a different Questionnaire instance for each QuestionnaireResponse.</p>",
        "id": 153938034,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1518742899
    },
    {
        "content": "<p>This sounds like Questionnaire is being used to implement a chatbot. I'm not sure how dialog-based systems are regarded wrt medical record. I guess the current model comes from the traditional hospital form that went through an approval process to be included as part of the medical record, so there is a governance process around the questionnaire and its use.</p>",
        "id": 153938036,
        "sender_full_name": "Malcolm Pradhan",
        "timestamp": 1518743834
    },
    {
        "content": "<p>\"If there's a new question in the instance, that's a new Questionnaire\".. because....?</p>",
        "id": 153938039,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518744170
    },
    {
        "content": "<p>\"you have a different Questionnaire instance for each QuestionnaireResponse\" - yes</p>",
        "id": 153938040,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518744187
    },
    {
        "content": "<p>At minimum it's a new Questionnaire version - and the QuestionnaireResponse would have to point to the specific version</p>",
        "id": 153938058,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1518748567
    },
    {
        "content": "<p>If you have a different Questionnaire instances for each QuestionnaireResponse, how can you know that the data from multiple QuestionnaireResponses are comparable?</p>",
        "id": 153938059,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1518748597
    },
    {
        "content": "<p>by the item.definition, if at all</p>",
        "id": 153938063,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518750473
    },
    {
        "content": "<p>That sort of defeats the purpose of using a Questionnaire, I think?</p>",
        "id": 153938065,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1518750749
    },
    {
        "content": "<p>depends what your purpose is</p>",
        "id": 153938066,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518750884
    },
    {
        "content": "<p>What would you do with the answers to a completely custom questionnaire?</p>",
        "id": 153938074,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1518753568
    },
    {
        "content": "<p>store them, display them, use item.definition</p>",
        "id": 153938076,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518754329
    },
    {
        "content": "<p>I'm a little late to the party, and probably saying something everyone already knows, but I will call out that the cqif-Questionnaire defined in Clinical Reasoning allows for callouts to CQL logic to determine if a question should be asked or not.  This already provides a lot more flexibility than core Questionnaire since CQL can support arbitrary algorithms (w/ some limitations, of course -- it's not C).  That said, it doesn't really support a potential <em>meandering path</em> of questions in a dynamically defined order.</p>",
        "id": 153938213,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1518789602
    },
    {
        "content": "<p><a href=\"http://hl7.org/fhir/STU3/cqif/cqif-questionnaire-definitions.html#cqif-questionnaire.Questionnaire.item.extension:condition\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/cqif/cqif-questionnaire-definitions.html#cqif-questionnaire.Questionnaire.item.extension:condition\">http://hl7.org/fhir/STU3/cqif/cqif-questionnaire-definitions.html#cqif-questionnaire.Questionnaire.item.extension:condition</a></p>",
        "id": 153938214,
        "sender_full_name": "Chris Moesel",
        "timestamp": 1518789617
    },
    {
        "content": "<p>yes, for those doing CQL, this is useful, and a little step along the path, but it's not a workable replacement for a cds-hook for several reasons</p>",
        "id": 153938268,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1518810947
    }
]