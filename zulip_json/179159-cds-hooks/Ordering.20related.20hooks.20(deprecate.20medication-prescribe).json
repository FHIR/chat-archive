[
    {
        "content": "<p>Hey folks, for those who don't know me, I'm Matt Varghese from Epic, the developer who built Epic's CDA based decision support web service capabilities, and is in charge of implementation of CDS Hooks at Epic. </p>\n<p>We have a released beta implementation that supports the patient-view hook currently. And I have been investigating adding support for the order-review hook and the medication-prescribe hook, which led me to ask this question.</p>\n<p>To me, from the EHR perspective <em>medication-prescribe hook is a perfect subset of the order-review hook</em>. Additionally, in most EHRs (at least according to my understanding) medication orders and procedure orders are entered and signed in the same place / same way. So order-review hook seems to be the right way to go, and medication-prescribe seems a wrong hook, one that <strong>we are disinclined to implement</strong>. </p>\n<p>Yes, one can argue that medication-prescribe should only send medications. However, this also led me into thinking more on the context of these hooks. Right now, all meds are in the context of the medication-prescribe hook, and all orders including meds are in the context of the order-review hook. I think this is the wrong approach. For example, <em>a radiology decision support system may not necessarily care about all orders. It may only care about the radiology/imaging orders being signed</em>. Or <em>lab prior-authorization may not care about non lab orders, or lab orders that are not going to that particular lab</em>. That means, putting all orders into the context feels like a wrong direction. I would advocate rather that <strong>orders go in the prefetch of these hooks</strong>, so there is configurability on what orders to send for these hooks. </p>\n<p>And if we have configurability on what orders to send for these hooks, suddenly, these two hooks actually become <strong>completely redundant</strong>. </p>\n<p>So I propose that we <strong>deprecate the medication-prescribe hook</strong> and move the orders from the context to the prefetch of the order-review hook (or provide configurability some other way in the context). </p>\n<p>I would also recommend <strong>renaming the order-review hook to order-sign hook or order-prescribe hook</strong>. \"Order review\" means something else, at least in Epic, and afaik also clinically. It is the act of reviewing the patient's order history. Not the act of prescribing orders. </p>\n<p>I also hear talk of an <strong>order-entry hook</strong> (<em>sorry, not super active on zulip, so not sure where this is exactly at</em>), which happens at the point when the order is pulled in as opposed to order sign/prescribe which happens at the point of actually signing/finalizing the order. Welcome this hook - can't wait to have it :)</p>\n<p>Welcome discussion around this both on this thread, and at the connectathon.</p>",
        "id": 153996417,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1536798043
    },
    {
        "content": "<p>I think there's a valuable use for the MedicationPrescribe hook, but ideally it would shift a bit from the Order-review hook.  I think the ideal for Medication-Prescribe would be at the time of selection of Patient + medication - <em>before</em> the full order is entered.  Because at that point, there are a whole lot of decisions and guidance that can be invoked: information about drug cost, information about what drugs are on formulary, recommended doses, duplicate therapy, drug-drug interactions, etc.  If you can expose that information sooner in the process, it saves the clinician the time of filling out the full order.  The order-review hook is useful when you need to evaluate the entire therapy and also evaluate a whole set of orders - to make sure the combination doesn't conflict or violate guidelines, to make sure nothing important's been missed, etc.</p>\n<p>If we were to make the shift, medication-prescribe (or even a renamed patient-medication) would just need a Patient and either a CodeableConcept or a Medication instance.</p>",
        "id": 153996456,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536806948
    },
    {
        "content": "<p>I do agree that if you're firing the medication-prescribe at the same point in the workflow as the order-review, there's no need for the hook.</p>",
        "id": 153996457,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536806991
    },
    {
        "content": "<p>Why would that be different from order-entry / order-selection though?</p>",
        "id": 153996458,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1536806999
    },
    {
        "content": "<p>I'd expect order-entry to occur after all orders have been fully entered - as decribed \"when ready to sign\".  That can be several minutes - or rarely even hours - from the time the system knows \"patient + medication\"</p>",
        "id": 153996461,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536807229
    },
    {
        "content": "<p>But then, the same considerations of wanting to pull up cost of the order etc before the full order is written up also applies for procedures, not just medications. So we need a generic \"order-prescribe\" rather than a \"medication-prescribe\" (which is what I meant by \"order-entry\" / \"order-selection\")</p>",
        "id": 153996462,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1536807336
    },
    {
        "content": "<p>It's possible that some degree of decision support could be provided with <em>just</em> a test code.  But it's not as significant as found with a medication.  If we wanted to generify it to \"pre-order\" which was just a service/product code or a Medication, that could work too.</p>",
        "id": 153996465,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536807821
    },
    {
        "content": "<p>I'm not particular about the name :D But I would prefer that the pre-order hook supports all kinds of orders, and not just meds.</p>",
        "id": 153996468,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1536807888
    },
    {
        "content": "<p>My gut says that the value will be higher on the pharmacy side than for lots of other areas, but agree that more generic = better in principle.</p>",
        "id": 153996472,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536807994
    },
    {
        "content": "<p>Cool. Thoughts on configurability over orders being included?</p>",
        "id": 153996476,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1536808067
    },
    {
        "content": "<p>The CRD spec is trialing some configurability stuff through the CDS-Hook extension mechanism.  Feedback on it is welcome.  I think the plan is to see how it gets used in practice and then, if appropriate, propose adding it into the core spec once we have some implementation experience.</p>",
        "id": 153996477,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536808305
    },
    {
        "content": "<p>and it's important to note that the configurability piece is completely new; whereas, additional hooks is an anticipated, planned for and natural extension of the spec.</p>",
        "id": 153996478,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1536808370
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span>  How would the spec deprecate an existing hook when a new hook supersedes it?</p>",
        "id": 153996496,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1536811711
    },
    {
        "content": "<p>Matt - want to talk about this more at work this week? Here's the <a href=\"https://github.com/cds-hooks/docs/pull/402\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/pull/402\">proposed methodology</a> for the creation of new hooks. We really haven't tackled deprecation. Ultimately, it'd be better to not have to do this. </p>\n<p>While one CDS client (EHR or other clinical workflow system) might not find value in a mature hook; other CDS clients might. The important questions to ask, regarding medication-prescribe, are: <br>\n1) is this hook valuable to implementors? Both CDS client and servers and<br>\n2) is is important/possible for a CDS server to check a CDS client's capabilities for a specific hook?</p>",
        "id": 153996498,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1536812134
    },
    {
        "content": "<p>I will rephrase your question #1 as, if there is an order-prescribe hook, is the medication-prescribe hook valuable to implementers. </p>\n<p>I agree, we should avoid deprecation of a mature hook, which is the whole reason I am asking this question.</p>\n<p>So far our EMR Web Service decision support capabilities have been centered around procedures, with little use for meds. Yet we have had the request for calling the web service at the time of entering the order rather than signing many times.</p>",
        "id": 153996505,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1536813034
    },
    {
        "content": "<p>From the initial design perspective FWIW (though I think this is pretty well covered in the discussion above): \"prescribe\" was about prescriptions as they're being written, for updates to dosage, drug, etc; and \"review\" was about looking at a set of orders together before signing off. It was my rough guess about how to break up the world, and we got a fair bit of mileage out of it!</p>\n<p>Now, the in-the-middle-of-entry hook be generalized from prescriptions to many kinds of orders, though it's worth saying that EHRs tend to have medication-specific entry screens and workflows (no?).</p>",
        "id": 153996764,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1536859880
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>  At least in our EHR, ordering places allow both med and procedure orders.<br>\nThey can be pulled into a \"cart\" as a mix of meds and procedures; and the cart containing that mix can be signed in one go.</p>",
        "id": 153996767,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1536859990
    },
    {
        "content": "<p>So the screen that adjusts medication doses also has the ability to enter procedures? The kind of thing in depicted in <a href=\"https://www.google.com/search?q=hyperspace++order+medication&amp;tbm=isch\" target=\"_blank\" title=\"https://www.google.com/search?q=hyperspace++order+medication&amp;tbm=isch\">https://www.google.com/search?q=hyperspace++order+medication&amp;tbm=isch</a>? This is good to know.</p>\n<p>(edit: replaced screenshot per Matt's request)</p>",
        "id": 153996770,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1536860330
    },
    {
        "content": "<p>Do other system also make this kind of generalization? (<span class=\"user-mention\" data-user-id=\"191355\">@Kevin Shekleton</span> for instance)</p>",
        "id": 153996772,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1536860350
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> Correct - we have flexible controls which adapt the UI based on the type of order being placed. I too am curious what other EMRs takes are. At the same time, if there is an order-prescribe hook, the medication-prescribe hook is a perfect subset. You can still use the order prescribe hook even if there are only medications, but the vice versa is not true.</p>",
        "id": 153996777,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1536860716
    },
    {
        "content": "<p>It'd be good experience to try re-writing examples in the sandbox to use this generalized hook. I think there are two questions here:</p>\n<p>1. Should we subsume <code>medication-*</code> under <code>order-*</code>?<br>\n2. Should we have distinct hooks for \"I'm writing orders, guide me!\" vs. \"I'm reviewing orders, guide me!\"</p>",
        "id": 153996778,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1536860784
    },
    {
        "content": "<p>On #1, I'm inclined to think that combining these is a good idea, as long as we don't hit any unexpected issues.</p>",
        "id": 153996779,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1536860823
    },
    {
        "content": "<p>On #2 my perspective is that these really feel different to me -- but if that's not born out in the actual UX from most systems, I'd revise this perspective :-)</p>",
        "id": 153996780,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1536860867
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> Just to clarify - what do you mean by review? Currently, the order-review hook is called that, but the hook definition makes it the act of signing orders. I too agree that pulling an order into the cart with the intention to order it must be a different hook from finalizing and signing the order.</p>",
        "id": 153996782,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1536861049
    },
    {
        "content": "<p>The intention for <code>review</code> hooks (like, my intention in 2015 -- unsure if this was well communicated) was: here's a set of orders in my cart that I'm planning to sign. Anything I should change? Any redundancies or missing dependencies, etc?</p>",
        "id": 153996783,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1536861103
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> - ok, then we both agree. (Just that review means something else in clinical workflows as I understand, but I am fine with calling it order-review as nobody but tech people see it)</p>",
        "id": 153996784,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1536861159
    },
    {
        "content": "<p>Can you clarify the clinical workflow distinction you're referring to, for the meaning of \"review\"? I'm not sure it's black and white, so we want to document any possible misinterpretation so we can proactively set people straight.</p>",
        "id": 153996785,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1536861217
    },
    {
        "content": "<p>Once an order is signed/finalized - it becomes an active order on the patient. Then there are other lifecycle stages for the order, such as discontinue - if the physician feels the order (for example a med or recurring procedure) has outlived its usefulness. There are cancelled orders; there are resulted orders etc. </p>\n<p>Order review is the act of reviewing the orders already signed on the patient - what is active, what results have come back, etc. </p>\n<p>I would definitely say though, that if we can get clinicians to look this over, it would be better than my viewpoint.</p>",
        "id": 153996786,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1536861395
    },
    {
        "content": "<p>Thanks -- that helps give me a quick sense of what you mean. If we were deprecating and generalizing stuff, then <code>order-prepare</code> and <code>order-sign</code> or something might be better names.</p>",
        "id": 153996787,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1536861462
    },
    {
        "content": "<p>Sure - I am open to suggestions/ideas. I am already happy that we crossed the first item - the biggest concern on my list (procedure orders not being in medication-prescribe). Name would be nice to be clear :)</p>",
        "id": 153996788,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1536861543
    },
    {
        "content": "<p>Are these not just a variation on Subscription for Pre-Create, Post-Create, Pre-Update, and Post-Update on a resource targeted by Subscription? In theory Pre- and Post- could be on any CRUD operation?</p>",
        "id": 153996789,
        "sender_full_name": "John Moehrke",
        "timestamp": 1536861560
    },
    {
        "content": "<p>Thus it is just REST orchestration?</p>",
        "id": 153996790,
        "sender_full_name": "John Moehrke",
        "timestamp": 1536861583
    },
    {
        "content": "<p>In the ordering flow - there is more than just a pre/vs post consideration. In fact both <code>order-prepare</code> and <code>order-review</code> are pre-hooks in that sense. </p>\n<p>In the <code>order-prepare</code> case, the order is not filled out yet. So only basic information like code etc will be available. Advanced things, like exact dose, or laterality of a procedure etc will not yet be filled out. It is an early point where we can intervene so that the clinician is not upset \"I just filled out this order, and now you tell me this is not the right order? Why didn't you say earlier?\"</p>\n<p><code>order-sign</code> is when physician has filled out everything. Ideally there should only be serious stuff on this hook, since the clinician will be upset if you didn't do what you could on <code>order-prepare</code>.</p>",
        "id": 153996791,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1536861766
    },
    {
        "content": "<p>yup. sorry I need more REST</p>",
        "id": 153996792,
        "sender_full_name": "John Moehrke",
        "timestamp": 1536861904
    },
    {
        "content": "<p>The problem with sending full resources in a \"pre-order\" hook (i.e. one fired early in the authoring process) is that instances are expected to comply with the DAF profiles.  If the DAF profiles make any discrete elements mandatory (e.g. specimen, dose, etc.), then suddenly you can't send the resource instances until at least that much has been entered.</p>",
        "id": 153996794,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536862255
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> how is that consideration any different if the hook is called <code>pre-order</code> or <code>medication-prescribe</code>?<br>\nIf you want details of the order, then <code>order-sign</code> would be the hook to use.</p>",
        "id": 153996795,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1536862357
    },
    {
        "content": "<p>Right.  Which is why I'm suggesting that pre-order or medication-prescribe might be better just specifying code or Medication rather than full MedicationPrescription or ServiceRequest resources</p>",
        "id": 153996800,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536862761
    },
    {
        "content": "<p>Ah ok I see what you are saying. Immediately, that feels perfectly reasonable; will think more over just hardcoding that.<br>\nThat also segues into the configurability aspect I mentioned. Even on an <code>order-prepare</code> or <code>order-sign</code> hook, not all CDS services may need all the orders being signed etc, and as you point out, not in full either.. Should we / can we / must we, make this configurable?<br>\n(PS: <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  - I hadn't seen your update to the earlier post. Now I get fully what you are saying)</p>",
        "id": 153996802,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1536862958
    },
    {
        "content": "<p>Can we?  Sure.  Must we?  No.  Should we?  TBD.  Services are free to ignore orders they don't care about.  And we're looking at putting guard statements on hook service declarations that allow the client to not bother calling services if the data isn't relevant to them.  EHRs can also choose to disable calls to certain services for certain users or in certain contexts.  The real need for service configurability is if you want back certain types of cards from a service but not others.</p>",
        "id": 153996807,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536863564
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  You mention guard statements. What would this be like? \"Don't call me if it is not an imaging order?\" Then if the user is signing a Chest X-Ray order, and a medication for headache, should the <code>order-sign</code> hook send both to you, or just the Chest X-Ray? <br>\nOr am I understanding you wrong?</p>",
        "id": 153996812,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1536863906
    },
    {
        "content": "<p>Just a reference to Postel's law</p>",
        "id": 153996813,
        "sender_full_name": "John Moehrke",
        "timestamp": 1536863941
    },
    {
        "content": "<p>In terms of guard statements, no clue.  I just remember a presentation where <span class=\"user-mention\" data-user-id=\"191355\">@Kevin Shekleton</span> mentioned they were something to be evaluated in \"future versions\" :)  The specific example given was for a hook that would fire off the bilirubin SMART app if relevant wouldn't be triggered if the patient wasn't a newborn.</p>",
        "id": 153996814,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1536864099
    },
    {
        "content": "<p>Our system has a generic ordering screen/module as well. It can handle any type of order (medication, radiology, lab, etc).</p>",
        "id": 153999077,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1537553432
    },
    {
        "content": "<p>I think this is great discussion and will benefit most from broader implementation feedback. Right now, there has just been a couple of people experimenting with the (current) <code>medication-prescribe</code> hook. I'm not aware of anyone who has implemented the <code>order-review</code> hook.</p>\n<p>One of the things that will be interesting is if it is easier on implementers (CDS clients + CDS services) to lump all ordering under a generic hook.</p>\n<p>Thanks for logging <a href=\"https://github.com/cds-hooks/docs/issues/411\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/issues/411\">docs/issues/411</a> Matt! I'll continue my thoughts there</p>",
        "id": 153999080,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1537553852
    },
    {
        "content": "<p>If the intention is that <code>medication-prescribe</code> is just a specialized version of <code>order-review</code>, that should be made clear.  I think it's useful for us to have hooks at two separate points in the workflow - one for initial  ordered item selection and one for completed set of orders for review.</p>",
        "id": 153999114,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1537559031
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> I am not proposing that one is a specialized case of the other. The hook that happens at initial order selection, and the one that happens when the order is filled out and about to be made active, must be two separate hooks - as they are two points in the workflow. </p>\n<p>I am just saying that both should be generic to account for all orders; right now one accounts only for meds while the other accounts for both meds and all other types of orders, which is a deficiency.</p>",
        "id": 153999309,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1537671711
    },
    {
        "content": "<p>I think a key issue right now is the mismatch between what EHRs have (generic ordering screens) and the quick demo our sandbox offers (med order entry only). I think it's important for the sophistication of our sandbox UX to at least parallel the sophistication of a real EHR -- i.e., it needs to cover the same use cases before we can expect to see anyone experimenting.</p>",
        "id": 153999520,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1537814076
    },
    {
        "content": "<p>Sorry for the late entry here, but I agree with <span class=\"user-mention\" data-user-id=\"193265\">@Matt Varghese</span>. <code>medication-prescribe</code> is a special case of an ordering hook based on my experience with major EMRs. As far as order events, <code>order-sign</code> and <code>order-add</code> make sense too because they're unambiguous. <code>order-review</code>, even though it was meant to represent a signing event is definitely not consistently implemented that way. In at least one case, it is implemented as continuous ping during the entire ordering process.</p>",
        "id": 154001543,
        "sender_full_name": "Alex Tatiyants",
        "timestamp": 1538231187
    },
    {
        "content": "<p>I think we should discuss this also during the CDS Hooks focused sessions at the CDS WG this week.  In the context of -- we have patient-view, what are the next hooks to prioritize and define in more detail?  For scope of orders, I think all vs. med vs. procedures are all reasonable.  For data to put in context, I think either pulling all (or almost all, e.g., all minus referenced secondary resources like Provider) or prefetching are both reasonable.  One issue to consider here is how often the non-med orders use standard codes to enable prefetching based on code.  For workflow step, I agree with order-select (when the user just selected the order, and code is available), and order-sign (when the user is about to sign the orders).  For order-review, I think we should discuss this further.  Is it reviewing unsigned orders only?  In which case should we call this unsigned-order-review?  Or does it include signed orders, like when you review all the orders that are active for a patient?</p>",
        "id": 154003146,
        "sender_full_name": "Kensaku Kawamoto",
        "timestamp": 1538324442
    }
]