[
    {
        "content": "<p><a href=\"#narrow/stream/74-cds-hooks.2Fgithub/subject/notifying.20the.20EHR.20when.20a.20SMART.20link.20app.20is.20done/near/157103\" title=\"#narrow/stream/74-cds-hooks.2Fgithub/subject/notifying.20the.20EHR.20when.20a.20SMART.20link.20app.20is.20done/near/157103\">https://chat.fhir.org/#narrow/stream/74-cds-hooks.2Fgithub/subject/notifying.20the.20EHR.20when.20a.20SMART.20link.20app.20is.20done/near/157103</a></p>",
        "id": 153967666,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1528344761
    },
    {
        "content": "<p>Didn't mean to start that one in the github channel... oops.</p>",
        "id": 153967667,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1528344780
    },
    {
        "content": "<p><a href=\"#narrow/stream/74-cds-hooks.2Fgithub/subject/notifying.20the.20EHR.20when.20a.20SMART.20link.20app.20is.20done/near/157109\" title=\"#narrow/stream/74-cds-hooks.2Fgithub/subject/notifying.20the.20EHR.20when.20a.20SMART.20link.20app.20is.20done/near/157109\">https://chat.fhir.org/#narrow/stream/74-cds-hooks.2Fgithub/subject/notifying.20the.20EHR.20when.20a.20SMART.20link.20app.20is.20done/near/157109</a></p>",
        "id": 153967680,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1528345034
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span>  Yeah, that's pretty much what I need.</p>",
        "id": 153967688,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1528345107
    },
    {
        "content": "<p>Reposting here:</p>\n<blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191355\">@Kevin Shekleton</span> <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> Here's a scenario I'm trying to work through.  A user clicks on a link in a cds-hooks card that launches a SMART app in a separate window.  Once the user completes the workflow in the new window I would want to 1) close the window, and 2) cause the original page that launched the workflow to update so that if there are new cards to display, they will be visible.  Is that the kind of workflow you would expect to occur in your respective EHRs, and if so, how can we implement something like that in the sandbox?</p>\n</blockquote>\n<hr>\n<blockquote>\n<p>Hey <span class=\"user-mention\" data-user-id=\"193229\">@Kevin Olbrich</span> !</p>\n<p>If you can, it would make sense to move this conversation from cds hook/github, to the cds hooks stream. </p>\n<p>Except for the need for the app to be in an external window, you have described the \"decisions\" workflow. Check out this <a href=\"https://github.com/cds-hooks/docs/commit/447cd8778f065b855f19fd3a1b02a27db895af62?short_path=1a523bd#diff-1a523bd9fa0dbf998008b37579210e12\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/commit/447cd8778f065b855f19fd3a1b02a27db895af62?short_path=1a523bd#diff-1a523bd9fa0dbf998008b37579210e12\">older version of the spec</a>. We took out this pretty awesome feature because very few people had implemented it and it wasn't obvious that the all the technical bits were right.</p>\n<p>Note that SMART really tends to assume that the app is running in an embedded window/iframe. How would you expect the EHR to know that the workflow in the external window is complete?</p>\n</blockquote>",
        "id": 153967690,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1528345937
    },
    {
        "content": "<p>What I need doesn't necessarily need to be a completely different window, it could be a popup or something similar.  Perhaps the SMART window could use the <code>postMessage</code> API to tell the EHR that it was done and give it the details of the completed workflow.</p>",
        "id": 153967691,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1528345942
    },
    {
        "content": "<p>Kevin, yeah, postMessage is exactly what we've talked about. Should enabling this communication in a standards-based way be part of CDS Hooks or SMART?</p>",
        "id": 153967692,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1528346074
    },
    {
        "content": "<p>yes</p>",
        "id": 153967693,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1528346092
    },
    {
        "content": "<p>I guess you could make the argument that once you have started a SMART app, then the rest of the behavior is up to SMART.  It may not really be specific to cds-hooks at that point.</p>",
        "id": 153967694,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1528346171
    },
    {
        "content": "<p>So, what would we want SMART to enable?</p>\n<ul>\n<li>window-close</li>\n<li>ehr-navigate?</li>\n<li>fhir query?</li>\n</ul>\n<p>Those are the outstanding questions in my mind.</p>",
        "id": 153967695,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1528346285
    },
    {
        "content": "<p>The things I know I would need would be</p>\n<ul>\n<li>window close</li>\n<li>place an order for the drugs the CDS service suggested</li>\n<li>refresh the patient-view</li>\n</ul>",
        "id": 153967696,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1528346435
    },
    {
        "content": "<p>and \"place an order\" puts an unsigned order in the clinician's list of orders to sign?<br>\nand \"refresh the patient-view\" is a re-query for CDS Hooks cards?</p>",
        "id": 153967697,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1528346565
    },
    {
        "content": "<p>In my system, \"place an order\" definitely makes sense. It seems like \"refresh the patient-view\" does as well, but we haven't started looking at that yet.</p>",
        "id": 153967698,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1528346668
    },
    {
        "content": "<p>I could probably get away with just the 'window close' and 'refresh' for now.  The workflow would look more like <br>\n1. show a card inviting the user to launch a SMART app<br>\n2. user interacts with the app and makes a decision, the app saves some state about the decisision<br>\n3. the window closes<br>\n4. the patient-view refreshes and the cds-hook app now shows a suggestion card that might include something like 'order drug xyz' based on the patient and saved state.</p>",
        "id": 153967699,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1528346669
    },
    {
        "content": "<p>doesn't this overlap with FHIRCast? I'm really suspicious of something described in such EHR centric terms here</p>",
        "id": 153967701,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528347195
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  FHIRcast did cross my mind too.  I just haven't dug into it enough to know if it would solve the problems we have.</p>",
        "id": 153967703,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1528347395
    },
    {
        "content": "<p>FHIRcast is context synchronization. Suggesting an order is such a critical piece of CDS Hooks that it seems that it should be native. </p>\n<p>The whole \"external browser\" thing really does suggest FHIRcast to me, too.</p>",
        "id": 153967705,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1528347951
    },
    {
        "content": "<p>what's the difference between 'suggesting an order' (a medication order?) and 'suggesting a system action'?</p>",
        "id": 153967706,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528348014
    },
    {
        "content": "<p>that's a great question. Currently, I know how to represent an order in FHIR, I don't know how to represent a \"system action\" in FHIR.</p>",
        "id": 153967707,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1528348073
    },
    {
        "content": "<p>what kind of order? a medication request? a service request? a task?</p>",
        "id": 153967708,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528348126
    },
    {
        "content": "<p>also, the nature of \"suggest\" means that in CDS Hooks, a user click is required to activate the order; whereas in FHIRcast, the \"system action\" should be taken automatically</p>",
        "id": 153967709,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1528348133
    },
    {
        "content": "<p>umm are these different? the FHIRcast system action would be 'propose an action'</p>",
        "id": 153967711,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1528348294
    },
    {
        "content": "<p>My preference would be for the end user to push a button in our SMART app and then get dropped into the order entry system with the proper order pre-populated.  That seems more in line with the FHIRcast approach.  I would rather not have the user 'select' some course of treatment and then have to take a second step to actually make it happen.  Especially when that second step probably has a third and fourth step embedded in it.</p>",
        "id": 153967712,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1528348386
    },
    {
        "content": "<p>It's not hugely different at this point and even just getting the page to refresh and show a suggestion card that would place the order would be sufficient and pretty useful.</p>",
        "id": 153967713,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1528348438
    },
    {
        "content": "<p>Certainly, cds is a subset of context synchronization. CDS Hooks has been successful by cranking down the scope neccessary to implement. Grahame, definitely you're right that we could represent an activity change request in FHIR with something like task. </p>\n<p>There are important distinctions in the primary use-cases. For these fancier (but obviously desirable workflows), the similarities start to reveal our lack of foresight. </p>\n<p>Using something like postMessage for a communication channel would limit the app to being on the same machine as the clinical system it was communicating with.</p>",
        "id": 153967714,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1528348816
    },
    {
        "content": "<p>System action might be representable with Task</p>",
        "id": 153967715,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1528348865
    },
    {
        "content": "<p>FHIRcast seems like it would avoid a whole bunch of browser bugs and CORS issues.</p>",
        "id": 153967716,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1528348896
    },
    {
        "content": "<p>Kevin, any feedback on websockets ? We really need some implementer feedback on this.</p>",
        "id": 153967717,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1528348940
    },
    {
        "content": "<p><a href=\"https://github.com/fhircast/docs/issues/33\" target=\"_blank\" title=\"https://github.com/fhircast/docs/issues/33\">https://github.com/fhircast/docs/issues/33</a></p>",
        "id": 153967718,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1528348970
    },
    {
        "content": "<p>Interesting.</p>",
        "id": 153967719,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1528349225
    },
    {
        "content": "<p>web sockets do seem interesting</p>",
        "id": 153967720,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1528349236
    },
    {
        "content": "<p>BTW,  who would host the `hub? The EHR or the CDS service?</p>",
        "id": 153967721,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1528349238
    },
    {
        "content": "<p>The system driving the workflow hosts the hub, so, perhaps the EHR.</p>",
        "id": 153967722,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1528349383
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191355\">@Kevin Shekleton</span> did you have any thoughts on how to tell the EHR that a SMART app launched from a cds-hooks card had completed it's interaction, and what should happen when it does?</p>",
        "id": 153968753,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1528831099
    },
    {
        "content": "<p>We need to revisit Decisions in CDS Hooks ;-)</p>",
        "id": 153968758,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1528832087
    },
    {
        "content": "<p>You may be interested in <a href=\"https://github.com/cds-hooks/docs/wiki/Decision-Proposal\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/wiki/Decision-Proposal\">taking a look this</a>. @<strong>Alexander Tatiyants</strong>, myself, and a few others noodled on this a couple of months ago while brainstorming some use case. Alex did a great write-up of our conversations.</p>",
        "id": 153968761,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1528832582
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191355\">@Kevin Shekleton</span> thanks!  That's a pretty thorough write-up.  Frankly, I'd be happy for now if the EHR just refreshed the current screen when a SMART app closed.  I can render a card with suggestions for the next step in the workflow that way at least.  It's not ideal, but sounds like it might be something the various EHR vendors could implement sooner rather than later.</p>",
        "id": 153968772,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1528835290
    },
    {
        "content": "<p>I would love to see some work around this at the next connectathon.   I thin <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> had an example that could be used for this.</p>",
        "id": 153974925,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1531404307
    },
    {
        "content": "<p>Hey <span class=\"user-mention\" data-user-id=\"193229\">@Kevin Olbrich</span> , our current scenario(s) for the Sept connectathon is just implementing the 1.0 spec. I do think that we should be pushing towards new features (ex: Radiology GAO, decisions, analytics?). Do you agree that the (redacted from spec) decisions is a reasonable way to implement what you need?</p>",
        "id": 153975358,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1531711688
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span>  if this... <a href=\"https://github.com/cds-hooks/docs/wiki/Decision-Proposal#1-user-decision-fulfillment\" target=\"_blank\" title=\"https://github.com/cds-hooks/docs/wiki/Decision-Proposal#1-user-decision-fulfillment\">https://github.com/cds-hooks/docs/wiki/Decision-Proposal#1-user-decision-fulfillment</a> is what you were thinking of, then yes.  That seems like a reasonable way to implement.  I am a bit concerned about the reliance on javascript to implement this, but the general workflow seems appropriate.</p>",
        "id": 153975601,
        "sender_full_name": "Kevin Olbrich",
        "timestamp": 1531780890
    }
]