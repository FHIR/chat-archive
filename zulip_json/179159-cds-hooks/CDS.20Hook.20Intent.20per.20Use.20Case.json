[
    {
        "content": "<p>Hi all,</p>\n<p>We are an EHR looking to expand our CDS Hook functionality. We have a question on the intent of CDS Hooks. The question is <strong>should we be making our CDS Hooks to support any use case a CDS service may have or should we build CDS Hooks functionality to be custom to each use case?</strong></p>\n<p>To add some context, we are looking to implement order-select for vendors implementing a core CDS use case. For this use case it has been requested to populate all the draft orders in each CDS request. The reason for this is the service needs to know all the orders the provider is making decisions on so they can customize the CDS provided. For example, the CDS service may want to inform the provider to not place order X but place order Y. However, if the provider already selected order Y, then the CDS service would want to inform the provider to delete order X rather than replace it.</p>\n<p>More recently we have been working with a CDS service interested in implementing prior auth using the <a href=\"http://hl7.org/fhir/us/davinci-crd/\">DaVinci CRD specifications</a> as guidance. With this we are planning on using order-select for part of this implementation. The issue here is that the intent of the prior auth use case is to have only a single order per CDS Hook request since prior auth is determined on one order at a time.</p>\n<p>Therefore, we would have order-select support 2 CDS use cases (core CDS and Prior Auth) which would want 2 different implementations. While originally, we had the opinion that the EHR, the CDS Client, would support a CDS Hook, such as order-select, with the features to support any use case a CDS Service dictated. However, we are wondering if it is the intent of CDS Hooks to build per use case. Therefore, we would have order-select for the core CDS use case then order-select for the prior auth use case.</p>\n<p>Thank you.</p>",
        "id": 252350164,
        "sender_full_name": "Joseph Sadlon",
        "timestamp": 1631039367
    },
    {
        "content": "<p>The <em>aim</em> is that a single implementation will allow you to connect with and benefit from many downstream CDS Services. To the extent that different services have different and incompatible \"requirements\" for the same hook, you might look at this as an interop failure, especially if both services are offering decision support for overlapping use cases. (Sometimes in real life, we have to compromise on these aims -- but this should be a deliberate decision, and we should make sure this kind of decision is communicated back to CDS Hooks community so we can try to raise the level of interop  over time.)</p>",
        "id": 252485872,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1631116656
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"196187\">@Joseph Sadlon</span> - have you determined that it's impossible to support both of these use-cases for <code>order-select</code>?</p>",
        "id": 254402555,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1632330466
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> we ended up not supporting CDS Hooks on a use case level but are supporting them on a hook level, meaning we support a single implementation or order-select.</p>",
        "id": 254465595,
        "sender_full_name": "Joseph Sadlon",
        "timestamp": 1632360278
    }
]