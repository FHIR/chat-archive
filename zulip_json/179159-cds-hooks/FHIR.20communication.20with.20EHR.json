[
    {
        "content": "<p>Hi guys,</p>\n<p>A few more questions for you.</p>\n<p>Would CDS-Hooks evolve to cover the evaluation CDS use case currently supported by Clinical Reasoning, such that an EHR can receive structured data (FHIR resources, such as GuidanceResponse or RequestGroup, or DataRequirement) through a CDS card, render the information with its own UI components, potentially obtain more information through user entry and submit it back to the CDS Service to receive follow-up CDS cards, again with structured data? This use case is currently supported through app link cards but they may not integrate nicely with an EHR system’s UI. We’re hoping to standardize the DSS response between the use cases where we are in control of the UI in a SMART app launch, or the EMR is in control of the UI with suggestion cards.</p>",
        "id": 153884665,
        "sender_full_name": "Travis Stenerson",
        "timestamp": 1492093188
    },
    {
        "content": "<p>Hi Travis and thanks for the question! As a community, we haven't discussed moving in this direction. Though, to be fair, we've been focused on our initial use cases with a very tight scope so this question hasn't come up before.</p>\n<p>Speaking for myself, I'd like to see how far we can get by just using SMART apps for this. While some EHR's may not have ideal integration with SMART apps today, perhaps that landscape will change in our favor over time.</p>",
        "id": 153884774,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1492167843
    },
    {
        "content": "<p>Thanks for the reply Kevin. Quick follow up - what is the intended resource for returning 'decision' cards after interaction with a SMART app?  A GuidanceResponse, or just the actual Event resources that resulted from the interaction? Has there been much discussion on that? I know it's still early and I'll be watching for announcements or info coming out of the May meeting.</p>",
        "id": 153885122,
        "sender_full_name": "Travis Stenerson",
        "timestamp": 1492613629
    }
]