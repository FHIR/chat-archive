[
    {
        "content": "<p>kpshek <a href=\"https://github.com/cds-hooks/cds-hooks/issues/10#issuecomment-199493267\" target=\"_blank\" title=\"https://github.com/cds-hooks/cds-hooks/issues/10#issuecomment-199493267\">commented</a> on <a href=\"https://github.com/cds-hooks/cds-hooks/issues/10\" target=\"_blank\" title=\"https://github.com/cds-hooks/cds-hooks/issues/10\">issue 10</a></p>\n<blockquote>\n<p><span class=\"user-mention\" data-user-email=\"jmandel@gmail.com\">@Josh Mandel</span> - I certainly am not a fan of trying to use the existing FHIR Conformance resource for this information so option 2 is my least preferred.</p>\n<p>That leaves me with option 1. However, in your example above, it looks like a CDS Service is only able to communicate metadata on a particular activity (eg, medication-prescribe). I would think it would be preferable to communicate metadata about all activities offered up by the CDS Service.</p>\n<p>So, I'll present another option, modified from my big <a href=\"https://groups.google.com/d/msg/cds-hooks/frHmx2VCvIE/TEWxUXLzEwAJ\" target=\"_blank\" title=\"https://groups.google.com/d/msg/cds-hooks/frHmx2VCvIE/TEWxUXLzEwAJ\">*Thoughts on CDS Hooks* mailing list thread</a>) and to take into account the decision that we will use the <a href=\"https://www.hl7.org/fhir/parameters.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/parameters.html\">FHIR Parameters resource</a> (see #11):</p>\n<p>#### 3. Via $cds-hooks-metadata operation for all hooks</p>\n<p>Simplified view:<br>\nRequest: GET /$cds-hooks-metadata</p>\n<div class=\"codehilite\"><pre>{\n  hooks:              1..* {\n    hook:             1..1 valueCoding,\n    url:              1..1 valueUri,\n    name:             1..1 valueString,\n    description:      1..1 valueString,\n    preFetchTemplate: 0..* valueString\n  }\n}\n</pre></div>\n\n\n<p>I'm lazy so I'm omitting the full response using Parameters (which would be the actual response).</p>\n<p>Changes from option 1:<br>\n- Support a list of hooks rather than just one<br>\n- Pluralize the operations name ($cds-hook-metadata to $cds-hook<strong>s</strong>-metadata<br>\n- Specify the URL for each hook<br>\n- Rename activity to hook (pending #13)</p>\n</blockquote>",
        "id": 153817102,
        "sender_full_name": "CDS Hooks Bot",
        "timestamp": 1458595605
    },
    {
        "content": "<p>jmandel <a href=\"https://github.com/cds-hooks/cds-hooks/issues/10#issuecomment-199497299\" target=\"_blank\" title=\"https://github.com/cds-hooks/cds-hooks/issues/10#issuecomment-199497299\">commented</a> on <a href=\"https://github.com/cds-hooks/cds-hooks/issues/10\" target=\"_blank\" title=\"https://github.com/cds-hooks/cds-hooks/issues/10\">issue 10</a></p>\n<blockquote>\n<p>Thank @kpshek. In the case where a single <code>$cds-hook</code> endpoint serves multiple different activities (medication-prescribe and patient-view, for example -- btw, see how using the word \"hooks\" there would have been akward?), I see the value in having a list of hooks.</p>\n<p>But I'm not sure I understand the use case for giving each hook a separate URL. If these are independent services hosted by different parties, it would be strange to have a third-party publish one the \"metadata\" for them all, and potentially given them different/misleading names, or incompatible <code>preFetchData</code> from what the hook publisher intended.</p>\n<p>I like the idea of 1:1 correspondence between the publisher of a hook and the publisher if its metadata, which option (1) above achieves. We could tweak your proposal by dropping the <code>url</code>, and then the concern would resolve.</p>\n<p>Now, maybe we do want to describe a role for meta-aggregation here (e.g. here's the \"list of hooks I like to use\", which points to external services). But that would be a different structure, I think -- just a simple list of metadata endpoints, rather than repeating all the details.</p>\n</blockquote>",
        "id": 153817108,
        "sender_full_name": "CDS Hooks Bot",
        "timestamp": 1458596162
    },
    {
        "content": "<p>Would it make sense to have different preFetch templates for different hooks. <br>\nFor patient-view hook I may not need any preFetch data, but for medication-prescribe hook I might also need some Observation resources as my preFetch data.</p>",
        "id": 153817130,
        "sender_full_name": "Kalyani Yerra",
        "timestamp": 1458598895
    },
    {
        "content": "<p>Of course. That's part of Kevin's proposal. </p>",
        "id": 153817131,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458599010
    },
    {
        "content": "<p>Sorry missed that piece. </p>",
        "id": 153817132,
        "sender_full_name": "Kalyani Yerra",
        "timestamp": 1458599101
    },
    {
        "content": "<p>kpshek <a href=\"https://github.com/cds-hooks/cds-hooks/issues/10#issuecomment-199593145\" target=\"_blank\" title=\"https://github.com/cds-hooks/cds-hooks/issues/10#issuecomment-199593145\">commented</a> on <a href=\"https://github.com/cds-hooks/cds-hooks/issues/10\" target=\"_blank\" title=\"https://github.com/cds-hooks/cds-hooks/issues/10\">issue 10</a></p>\n<blockquote>\n<blockquote>\n<p>But I'm not sure I understand the use case for giving each hook a separate URL.</p>\n</blockquote>\n<p>My thinking here is that I wouldn't want to implement some super endpoint whose first order of business is to do a switch statement on the activity/name (eg, patient-view, medication-prescribe) and delegate to the appropriate logic. If by some chance your patient-view and medication-prescribe services were nearly identical, you could simply give them the same URL if you really wanted. However, even in this case I'd still prefer them to have different URLs so that I can track metrics on each without examining the request.</p>\n<blockquote>\n<p>If these are independent services hosted by different parties, it would be strange to have a third-party publish the \"metadata\" for them all, and potentially give them different/misleading names, or incompatible preFetchData from what the hook publisher intended.<br>\nI like the idea of 1:1 correspondence between the publisher of a hook and the publisher of its metadata, which option (1) above achieves. We could tweak your proposal by dropping the url, and then the concern would resolve.</p>\n</blockquote>\n<p>You lost me here. I was assuming that the creator and company hosting a CDS Service would also host their metadata endpoint for their service so I agree with you on the 1:1 correspondence. Where did this idea of a third-party CDS Service aggregator come from?</p>\n</blockquote>",
        "id": 153817158,
        "sender_full_name": "CDS Hooks Bot",
        "timestamp": 1458613858
    },
    {
        "content": "<p>jmandel <a href=\"https://github.com/cds-hooks/cds-hooks/issues/10#issuecomment-199603420\" target=\"_blank\" title=\"https://github.com/cds-hooks/cds-hooks/issues/10#issuecomment-199603420\">commented</a> on <a href=\"https://github.com/cds-hooks/cds-hooks/issues/10\" target=\"_blank\" title=\"https://github.com/cds-hooks/cds-hooks/issues/10\">issue 10</a></p>\n<blockquote>\n<p>Top level question: If you agree that it's a good practice to keep the services separate, why not keep the Metadata separate top?</p>\n<p>As for the aggregation issue: it's more a fear than an idea. Since there's no constraint, and \"url\" can be anything, an EHR consuming Metadata can get tricked/confused by a third party that badly tries to point to other service. Whereas if we adopted a stronger convention, this would be impossible.</p>\n</blockquote>",
        "id": 153817160,
        "sender_full_name": "CDS Hooks Bot",
        "timestamp": 1458615268
    },
    {
        "content": "<p>jmandel <a href=\"https://github.com/cds-hooks/cds-hooks/issues/10#issuecomment-199604179\" target=\"_blank\" title=\"https://github.com/cds-hooks/cds-hooks/issues/10#issuecomment-199604179\">commented</a> on <a href=\"https://github.com/cds-hooks/cds-hooks/issues/10\" target=\"_blank\" title=\"https://github.com/cds-hooks/cds-hooks/issues/10\">issue 10</a></p>\n<blockquote>\n<p>And never mind my \"aggregation\" use case: I was just trying to anticipate one (apparently non-)reason why you might have wanted to define multiple Hooks in the same Metadata file. </p>\n</blockquote>",
        "id": 153817161,
        "sender_full_name": "CDS Hooks Bot",
        "timestamp": 1458615651
    },
    {
        "content": "<p>kpshek <a href=\"https://github.com/cds-hooks/cds-hooks/issues/10#issuecomment-199609961\" target=\"_blank\" title=\"https://github.com/cds-hooks/cds-hooks/issues/10#issuecomment-199609961\">commented</a> on <a href=\"https://github.com/cds-hooks/cds-hooks/issues/10\" target=\"_blank\" title=\"https://github.com/cds-hooks/cds-hooks/issues/10\">issue 10</a></p>\n<blockquote>\n<blockquote>\n<p>Top level question: If you agree that it's a good practice to keep the services separate, why not keep the Metadata separate too?</p>\n</blockquote>\n<p>By separate, do you mean have a metadata endpoint for each service? If so, what I'd really love (<a href=\"https://groups.google.com/forum/m/#!topic/cds-hooks/frHmx2VCvIE\" target=\"_blank\" title=\"https://groups.google.com/forum/m/#!topic/cds-hooks/frHmx2VCvIE\">more discussion here</a>) is:</p>\n<p>- metadata: GET /:hook<br>\n- service: POST /:hook/:id</p>\n<p>Eg:<br>\n- GET <a href=\"https://cds-provider/patient-view\" target=\"_blank\" title=\"https://cds-provider/patient-view\">https://cds-provider/patient-view</a> to read the metadata resource for this service<br>\n- POST <a href=\"https://cds-provider/patient-view/0aaafead-3788-4733-a0e8-6221b76cb477\" target=\"_blank\" title=\"https://cds-provider/patient-view/0aaafead-3788-4733-a0e8-6221b76cb477\">https://cds-provider/patient-view/0aaafead-3788-4733-a0e8-6221b76cb477</a> to invoke an instance of this service</p>\n<p><strong>But</strong>, we're going with FHIR API conventions (Parameters, operations, etc) so I took that off the table mentally and am going with the <code>$</code> operation syntax. And, given that this doesn't resembles a RESTful API in this model, I don't know how to model what I want above in these constraints.</p>\n<p>You have a lot more experience with FHIR modeling conventions than myself so if there is a way so if there is a better way, I'd love to know.</p>\n<blockquote>\n<p>Since there's no constraint, and \"url\" can be anything, an EHR consuming Metadata can get tricked/confused by a third party that badly tries to point to other services. Whereas if we adopted a stronger convention, this would be impossible.</p>\n</blockquote>\n<p>I'm all for establishing stronger conventions; I want this too and would prefer if CDS Providers weren't allowed to specify arbitrary URLs. This is another thing I like above the URI design that I would love -- CDS Providers just need to register their base URL with the EHR / registry.</p>\n<p>I get why you've got the service defined at that master endpoint. Using the <a href=\"https://www.hl7.org/fhir/operations.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/operations.html\">FHIR operations framework</a> doesn't provide much flexibility (in the current FHIR spec). You'd have to define something like $cds-service-patient-view, $cds-service-medication-prescribe, etc. I'll reiterate that I think it's important that these services are offered at distinct URIs -- not just for the maintainability/clarity of the service code but also for monitoring, metrics, and independent scalability that distinct URIs would offer.</p>\n</blockquote>",
        "id": 153817162,
        "sender_full_name": "CDS Hooks Bot",
        "timestamp": 1458616729
    },
    {
        "content": "<p>Kevin, I think we're talking past one another here. You say you want services offered at \"distinct URLs\" and I agree. I think the way to accomplish this \"in FHIR\"  is by having CDS providers host different base URLs, like:</p>",
        "id": 153817197,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458643986
    },
    {
        "content": "<p>After my last comment last night, I figured that's what you were thinking</p>",
        "id": 153817198,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458644024
    },
    {
        "content": "<p>And yes, hosting services at different base URLs would work</p>",
        "id": 153817199,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458644052
    },
    {
        "content": "<div class=\"codehilite\"><pre>https://cds-provider/my-med-service/$cds-hook\nhttps://cds-provider/my-patient-service/$cds-hook\nhttps://cds-provider/other-med-service/$cds-hook\n</pre></div>",
        "id": 153817200,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458644072
    },
    {
        "content": "<p>yep</p>",
        "id": 153817201,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458644077
    },
    {
        "content": "<p>The downside to this is that the EHR has to register each of these separately</p>",
        "id": 153817202,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458644090
    },
    {
        "content": "<p>But that's my current (1)</p>",
        "id": 153817203,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458644095
    },
    {
        "content": "<p>From my perspective (the EHR), I'd rather register a single base URL and then enable hooks on that base URL</p>",
        "id": 153817204,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458644142
    },
    {
        "content": "<p>and when I said \"then enable hooks on that base URL\" I mean after registering the single base URL in the EHR, then my admin/config UI shows the individual services offered by each hook and I can just tick a box enabling the ones I want the EHR to call</p>",
        "id": 153817205,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458644232
    },
    {
        "content": "<p>So what if we took my (1) and added one more kind of document: a \"hook manifested\" that could live anywhere, and just contained a list of URLs (each a $cds-hook endpoint) </p>",
        "id": 153817206,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458644254
    },
    {
        "content": "<p>yes that's what I do in my application  (ah, what Kevin said)</p>",
        "id": 153817207,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458644263
    },
    {
        "content": "<p>I think that there needs to be a single URL to point out that leads to the all the cds-hook types that the system supports. </p>",
        "id": 153817208,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458644285
    },
    {
        "content": "<p>I think that it should be possible that that would be a FHIR conformance statement, even if the extent of that support is a reference to some other native expression of the cds hooks capabilities</p>",
        "id": 153817209,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458644322
    },
    {
        "content": "<p>I'm just wary about what is \"the system\" since it seems to limit to a single base url. The \"manifest\" would get around this. </p>",
        "id": 153817210,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458644375
    },
    {
        "content": "<p>well, you should be able to have multiple hooks on single base url, yes?</p>",
        "id": 153817211,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458644431
    },
    {
        "content": "<p>Josh: Well, I was thinking that if you wanted a separate base URL (for whatever reason), you could certainly do that (nothing precludes you from this today).</p>",
        "id": 153817212,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458644447
    },
    {
        "content": "<p>Today there's no way to register a bunch of Hooks all at once though. </p>",
        "id": 153817213,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458644481
    },
    {
        "content": "<p>Right</p>",
        "id": 153817214,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458644489
    },
    {
        "content": "<p>And that's the problem you're aiming to solve. </p>",
        "id": 153817215,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458644511
    },
    {
        "content": "<p>Yes</p>",
        "id": 153817216,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458644516
    },
    {
        "content": "<p>And I agree with you that it would be good to have the URLs (other than base URL) be predictable.</p>",
        "id": 153817217,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458644538
    },
    {
        "content": "<p>And I think we said that multiplex base URLs was the best way we knew to  solve it</p>",
        "id": 153817218,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458644544
    },
    {
        "content": "<p>As in:<br>\n<a href=\"https://cds-provider/my-med-service/$cds-hook\" target=\"_blank\" title=\"https://cds-provider/my-med-service/$cds-hook\">https://cds-provider/my-med-service/$cds-hook</a><br>\n<a href=\"https://cds-provider/my-patient-service/$cds-hook\" target=\"_blank\" title=\"https://cds-provider/my-patient-service/$cds-hook\">https://cds-provider/my-patient-service/$cds-hook</a><br>\n<a href=\"https://cds-provider/other-med-service/$cds-\" target=\"_blank\" title=\"https://cds-provider/other-med-service/$cds-\">https://cds-provider/other-med-service/$cds-</a></p>",
        "id": 153817219,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458644591
    },
    {
        "content": "<p>I said that I agreed that is one way to solve it</p>",
        "id": 153817220,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458644606
    },
    {
        "content": "<p>Ah, ok. </p>",
        "id": 153817221,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458644619
    },
    {
        "content": "<p>Do you have something you prefer? </p>",
        "id": 153817222,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458644637
    },
    {
        "content": "<p>Yes, this: <a href=\"https://cds-provider/someBase/:hook/:id\" target=\"_blank\" title=\"https://cds-provider/someBase/:hook/:id\">https://cds-provider/someBase/:hook/:id</a></p>",
        "id": 153817223,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458644739
    },
    {
        "content": "<p>And I'd be fine using FHIR operations for this instead so:<br>\n<a href=\"https://cds-provider/someBase/:hook/$cds-hook\" target=\"_blank\" title=\"https://cds-provider/someBase/:hook/$cds-hook\">https://cds-provider/someBase/:hook/$cds-hook</a></p>",
        "id": 153817224,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458644779
    },
    {
        "content": "<p>what do you mean by :hook there?</p>",
        "id": 153817225,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458644799
    },
    {
        "content": "<p><code>patient-view</code>, <code>medication-prescribe</code>, etc</p>",
        "id": 153817226,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458644813
    },
    {
        "content": "<p>ok, so isn't that naturally backwards? wouldn't $cds-hook/:hook be more natural? </p>",
        "id": 153817227,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458644842
    },
    {
        "content": "<p>It depends</p>",
        "id": 153817228,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458644866
    },
    {
        "content": "<p>what on?</p>",
        "id": 153817229,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458644885
    },
    {
        "content": "<p>Do you want the metadata resource available on each hook invidually? If so, this makes more sense:<br>\nGET /:hook to retrieve the metadata<br>\nPOST /:hook/$cds-hook to call the service</p>",
        "id": 153817230,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458644933
    },
    {
        "content": "<p>heh I was about to write that</p>",
        "id": 153817231,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458644947
    },
    {
        "content": "<p>If you want the metadata for all hooks on that base URL, this makes sense:<br>\nGET /$cds-hook to retrieve the metadata for all hooks<br>\nPOST /$cds-hook/:hook to call the service</p>",
        "id": 153817232,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458644951
    },
    {
        "content": "<p>if this was all FHIR directly, you would say that you had a resource that described the hook operation at [base]/CDSHook/:id, and you would invoke it at [base]/CDSHook/:id/$invoke of something. so a similar pattern. perhaps enough to be the same pattern</p>",
        "id": 153817233,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458645060
    },
    {
        "content": "<p>Perhaps it would help if we listed out the goals we all agree upon here and then determine which options/designs achieve those goals</p>",
        "id": 153817234,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458645083
    },
    {
        "content": "<p>GET [base]/CDSHook lists all the hooks...</p>",
        "id": 153817235,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458645086
    },
    {
        "content": "<p>Do the only difference between what you wrote,  Kevin, and what I wrote, is which piece of the URL in considered \"the base\". </p>",
        "id": 153817236,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458645093
    },
    {
        "content": "<p>Agreed let's write goals. </p>",
        "id": 153817237,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458645100
    },
    {
        "content": "<p>Goal *fhir\": make sure that Hooks can be involved as fhir operations. </p>",
        "id": 153817238,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458645157
    },
    {
        "content": "<p>Goal \"bulk\": make sure an EHR can register multiple Hooks with a  single discovery point </p>",
        "id": 153817239,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458645196
    },
    {
        "content": "<p>Yeah, I thought of that last night Grahame. If we created a new FHIR resource then a lot of this gets a bit easier</p>",
        "id": 153817240,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458645198
    },
    {
        "content": "<p>I'm always game ;-)</p>",
        "id": 153817241,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458645223
    },
    {
        "content": "<p>(But it wouldn't represent a resource, in anyone's sense. More like a reserved url path) </p>",
        "id": 153817242,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458645245
    },
    {
        "content": "<p>Goal \"distinct\": make sure each hook is a distinct URL so that invocation can be metered, monitored, and scaled independently.</p>",
        "id": 153817243,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458645276
    },
    {
        "content": "<p>the definition of what it does would be the resource</p>",
        "id": 153817244,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458645297
    },
    {
        "content": "<p>Goal \"predictable\": make it easy to go from the url of a hook to the Metadata for it, without maintaining a bunch of state. Improved ease of use and security. </p>",
        "id": 153817245,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458645340
    },
    {
        "content": "<p>Goal \"introspection\": there must be some way to discover what is avialable, what they do and how they work</p>",
        "id": 153817246,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458645343
    },
    {
        "content": "<p>Anything else? </p>",
        "id": 153817247,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458645395
    },
    {
        "content": "<p>well, how far do you want to go? do you want to talk about how it integrates into a wider context? </p>",
        "id": 153817248,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458645437
    },
    {
        "content": "<p>Is the 'limit state' goal the same as predictable URLs (both to make it easy/uniform and for security)? If not, I’ll add that as another goal</p>",
        "id": 153817249,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458645438
    },
    {
        "content": "<p>I'll change it to \"predictable\" and then yes. </p>",
        "id": 153817250,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458645486
    },
    {
        "content": "<p>Cool</p>",
        "id": 153817251,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458645497
    },
    {
        "content": "<p>Integration into a wider context: is this the \"fhir\"  Goal or is  it something more? </p>",
        "id": 153817252,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458645558
    },
    {
        "content": "<p>I don't know whether you want this: I want to be able to host cds-hook calls under the fhir base for mgmt/security/provisioning reasons </p>",
        "id": 153817253,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458645563
    },
    {
        "content": "<p>That's how I took the fhir goal above -- it should allow you to do that</p>",
        "id": 153817254,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458645594
    },
    {
        "content": "<p>Agreed,Kevin. </p>",
        "id": 153817255,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458645607
    },
    {
        "content": "<p>well, I was thinking about security - about the ability to have the cds-hook service be part of a wider service and share it's security</p>",
        "id": 153817256,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458645609
    },
    {
        "content": "<p>I guess maybe. I'm thinking aloud</p>",
        "id": 153817257,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458645619
    },
    {
        "content": "<p>Well, hopefully that's possible when we figure out the security bits :-)</p>",
        "id": 153817258,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458645652
    },
    {
        "content": "<p>Clearly the \"fhir\" goal is these toughest constraint here. If we eliminated it, the others become easy. </p>",
        "id": 153817259,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458645685
    },
    {
        "content": "<p>But leaving everything in place... </p>",
        "id": 153817260,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458645729
    },
    {
        "content": "<p>Yes. Well, it's tough IMHO by keeping fhir as-is. If we were to make some changes to FHIR we can make this work</p>",
        "id": 153817261,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458645746
    },
    {
        "content": "<p>One thing we could do is go *not* have consistently named operations </p>",
        "id": 153817262,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458645751
    },
    {
        "content": "<p><a href=\"https://cds-provider/$my-med-service/$cds-hook\" target=\"_blank\" title=\"https://cds-provider/$my-med-service/$cds-hook\">https://cds-provider/$my-med-service/$cds-hook</a><br>\n<a href=\"https://cds-provider/$my-patient-service\" target=\"_blank\" title=\"https://cds-provider/$my-patient-service\">https://cds-provider/$my-patient-service</a><br>\n<a href=\"https://cds-provider/$other-med-service\" target=\"_blank\" title=\"https://cds-provider/$other-med-service\">https://cds-provider/$other-med-service</a></p>",
        "id": 153817263,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458645781
    },
    {
        "content": "<p>we can consider changes</p>",
        "id": 153817264,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458645793
    },
    {
        "content": "<p>And only standardize the name of the Metadata operation </p>",
        "id": 153817265,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458645797
    },
    {
        "content": "<p>I'm not sure what you mean there</p>",
        "id": 153817266,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458645799
    },
    {
        "content": "<p>Josh: those URLs you just posted don't serve our predictable goal</p>",
        "id": 153817267,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458645832
    },
    {
        "content": "<p>Ah, they just provide a predictable way to get Metadata given a hook (strip the hook url, append \"$cds-hooks-meta\" or whatever </p>",
        "id": 153817268,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458645895
    },
    {
        "content": "<p>Posting here so we have them all together:</p>\n<p>Goal *fhir\": make sure that Hooks can be involved as fhir operations.</p>\n<p>Goal \"bulk\": make sure an EHR can register multiple Hooks with a single discovery point</p>\n<p>Goal \"distinct\": make sure each hook is a distinct URL so that invocation can be metered, monitored, and scaled independently.</p>\n<p>Goal \"predictable\": make it easy to go from the url of a hook to the Metadata for it, without maintaining a bunch of state. Improved ease of use and security.</p>\n<p>Goal \"introspection\": there must be some way to discover what is avialable, what they do and how they work</p>",
        "id": 153817269,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458645906
    },
    {
        "content": "<p>Grahame: I'm just saying we can define inputs and outputs but let servers host the operation at various names </p>",
        "id": 153817270,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458645939
    },
    {
        "content": "<p>But they are not predictable in that if I have a baseURL, I know what hooks are offered off of that baseURL. Not without some super metadata document</p>",
        "id": 153817271,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458645950
    },
    {
        "content": "<p>The Metadata document could live at a fixed url, always (relative to base) </p>",
        "id": 153817272,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458645991
    },
    {
        "content": "<p>If we add a 5th type of FHIR endpoint that operations can hang of off (<a href=\"https://www.hl7.org/fhir/operations.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/operations.html\">https://www.hl7.org/fhir/operations.html</a>), this becomes doable I think</p>",
        "id": 153817273,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458645991
    },
    {
        "content": "<p>Only the hook operation URLs would vary </p>",
        "id": 153817274,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646004
    },
    {
        "content": "<p>I like that, Kevin. </p>",
        "id": 153817275,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646024
    },
    {
        "content": "<p>Just \"a reserved path segment\" or some such. </p>",
        "id": 153817276,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646047
    },
    {
        "content": "<p>fyi - I have to drop off in 2 min for a 30min call</p>",
        "id": 153817277,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458646057
    },
    {
        "content": "<p>Yes, exactly</p>",
        "id": 153817278,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458646062
    },
    {
        "content": "<p>Once upon a time we said every path starting with \"_\" was fair game. </p>",
        "id": 153817279,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646077
    },
    {
        "content": "<p>I have to run too </p>",
        "id": 153817280,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646085
    },
    {
        "content": "<p>OR, we accept a single metadata endpoint off the base URL (this was in my #3 proposal on the GH issue) + predictable operation names (like $cds-hook-patient-view, $cds-hook-medication-prescribe).</p>\n<p>But I really dont like this</p>",
        "id": 153817281,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458646087
    },
    {
        "content": "<p>But (3) alone still doesn't let one server host multiple patient-view Hooks. </p>",
        "id": 153817282,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646131
    },
    {
        "content": "<p>how are these names controlled?</p>",
        "id": 153817283,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458646171
    },
    {
        "content": "<p>Gotta run now -- I'll be online in a few hrs as after my call I've got to go into work (still at home atm)</p>",
        "id": 153817284,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458646194
    },
    {
        "content": "<p>Thanks both for the great discussion on this! I don't know about you two, but I'm having a lot of fun with all of this :-)</p>",
        "id": 153817285,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1458646215
    },
    {
        "content": "<p>They're part or an extensible catalog, so they re really not controlled (i.e. You can have private activities too) </p>",
        "id": 153817286,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646218
    },
    {
        "content": "<p>and how are they described? </p>",
        "id": 153817287,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458646241
    },
    {
        "content": "<p><a href=\"https://github.com/cds-hooks/cds-hooks/wiki/Activity\" target=\"_blank\" title=\"https://github.com/cds-hooks/cds-hooks/wiki/Activity\">https://github.com/cds-hooks/cds-hooks/wiki/Activity</a></p>",
        "id": 153817288,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646282
    },
    {
        "content": "<p>Another solution is to stop trying to make expressive  URLs and just add one more field to the hook inputs: \"hook-id\". A provider would publish as many Hooks as it wanted, all invoked at \"/$cds-hooks\", and the id from Kevin's proposal just becomes an input parameter. </p>",
        "id": 153817290,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646481
    },
    {
        "content": "<p>Nope - It breaks \"distinct\" </p>",
        "id": 153817291,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646517
    },
    {
        "content": "<p>does it? </p>",
        "id": 153817292,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458646549
    },
    {
        "content": "<p>Absolutely </p>",
        "id": 153817293,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646556
    },
    {
        "content": "<p>Metering, mojotoring, and scaling independently by url </p>",
        "id": 153817294,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646574
    },
    {
        "content": "<p>how? because it's not in the URL?</p>",
        "id": 153817295,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458646580
    },
    {
        "content": "<p>Right. API gateways and reverse proxy servers make this stuff easy  if you have distinct URLs, and hard if you don't. </p>",
        "id": 153817296,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646644
    },
    {
        "content": "<p>Realty were should extend the FHIR operations framework as follows:</p>",
        "id": 153817297,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646685
    },
    {
        "content": "<p>Any non-complex parameter can be pasted in through a url path. </p>",
        "id": 153817298,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646734
    },
    {
        "content": "<p>Maybe the best way to standardize  it is by a convention like \"$operation/:name/:value/:name2/:value2\" </p>",
        "id": 153817300,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646814
    },
    {
        "content": "<p>that's really yuck</p>",
        "id": 153817301,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458646829
    },
    {
        "content": "<p>How about if your operation includes a list of \"path parameters\"? </p>",
        "id": 153817302,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646865
    },
    {
        "content": "<p>they can come in an order? why do we invent a syntax that's different from how they should be done?</p>",
        "id": 153817303,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458646869
    },
    {
        "content": "<p>And that list is ordered </p>",
        "id": 153817304,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646885
    },
    {
        "content": "<p>well, one or two, maybe. differntiating parameters? I'd be interested in an analysis of our existing operations and where that technique might lead to goodness</p>",
        "id": 153817305,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458646919
    },
    {
        "content": "<p>So then the hook operation defined a single path parameter called \"hook-id\" </p>",
        "id": 153817306,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646923
    },
    {
        "content": "<p>Type, string </p>",
        "id": 153817307,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646935
    },
    {
        "content": "<p>I can to the analysis myself tomorrow but not now</p>",
        "id": 153817308,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458646948
    },
    {
        "content": "<p>And then invocation is just \"POST $cds-hook/price-check\" </p>",
        "id": 153817310,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458646971
    },
    {
        "content": "<p>But this all still would make Hooks unusable from current  libraries (e.g. hapi) . That may violate the \"fhir\" goal. </p>",
        "id": 153817312,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458647688
    },
    {
        "content": "<p>why would it make them unusable? the libraries would need to enhance to know about this new thing we're talking about </p>",
        "id": 153817313,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458647915
    },
    {
        "content": "<p>By \"current\", I mean literally today </p>",
        "id": 153817314,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458647939
    },
    {
        "content": "<p>Er, current </p>",
        "id": 153817315,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458647948
    },
    {
        "content": "<p>yes correct</p>",
        "id": 153817318,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458647993
    },
    {
        "content": "<p>So in terms of where we'd like to go: yes, extended operations (to take some path parameters -- even just one) would help. <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I'll look forward to the analysis (let me know what I can do to help on that).</p>",
        "id": 153817351,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458681935
    },
    {
        "content": "<p>In terms of what we can do right now (DSTU2 compatible) and meets our goals, the best I can come up with is:</p>\n<p>1. Independent CDS services live at <code>/$cds-hook</code>. Technically you can host &gt;1 service at a single endpoint, <strong>if</strong> they each handle a different \"activity\". And service provides can make as many \"base URLs\" as they need to keep services separate.</p>\n<p>(To satisfy \"<strong>distinct</strong>\")</p>\n<p>2. Each service is associated with its own metadata by appending <code>-metadata</code> to the hook URL. This is a document with at most one hook per activity, and looks like (after Parameters tax):</p>\n<div class=\"codehilite\"><pre><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;hook&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n    <span class=\"nt\">&quot;activity&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;patient-view&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Show a patient&#39;s name&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Patient Namer&quot;</span>\n  <span class=\"p\">},</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;activity&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;medication-prescribe&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Show cost of a prescription&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Rx Cost&quot;</span>\n  <span class=\"p\">}]</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>(To satisfy \"<strong>predictable</strong>\")</p>\n<p>3. CDS service provider should publish a \"Hook Set\" (i.e. a single entry point for discovery) at <strong>any URL</strong> (not necessarily even a FHIR server). The Hook Set is a JSON document like:</p>\n<div class=\"codehilite\"><pre><span class=\"p\">[</span>\n  <span class=\"s2\">&quot;https://service-vendor.example.org/med-price-hook/$cds-hook&quot;</span><span class=\"p\">,</span>\n  <span class=\"s2\">&quot;https://service-vendor.example.org/med-genomics-hook/$cds-hook&quot;</span><span class=\"p\">,</span>\n  <span class=\"s2\">&quot;https://service-vendor.example.org/patient-greeting-hook/$cds-hook&quot;</span>\n<span class=\"p\">]</span>\n</pre></div>\n\n\n<p>(To satisfy \"<strong>bulk</strong>\")</p>\n<p>4. A CDS services that happens to be a FHIR server can also include a link to its \"Hook Set\" specification by adding an extension to its conformance statement:</p>\n<div class=\"codehilite\"><pre><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;extension&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n    <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://cds-hooks.org/hook-set-url&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;valueUrl&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://service-vendor.example.org/hook-set.json&quot;</span>\n  <span class=\"p\">}]</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>(To satisfy \"<strong>introspection</strong>\")</p>",
        "id": 153817353,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458682952
    },
    {
        "content": "<p>how important is it to be DSTU2 compatible? </p>",
        "id": 153817355,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458683043
    },
    {
        "content": "<p>Feels important to me (it's part of what I mean by \"fhir\").</p>",
        "id": 153817356,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458683063
    },
    {
        "content": "<p>well, that would need to be explicitly stated. I'm not sure, myself. Adding API features and then getting them retrospectively adopted is different to modifying resource structures and getting them retrospectively adopted</p>",
        "id": 153817358,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458683135
    },
    {
        "content": "<p>Different in which direction (easier or harder, do you mean)?</p>",
        "id": 153817360,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458683184
    },
    {
        "content": "<p>In the above, I'm proposing neither (no API features and no different resource structures).</p>",
        "id": 153817362,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458683190
    },
    {
        "content": "<p>The thing is, if we don't care about DSTU2 I'm not convinced we should care about the rest of the \"fhir\" objective (I mean, we'd be speculating on what we can get incorporated through the standards process.)</p>",
        "id": 153817363,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458683243
    },
    {
        "content": "<p>easier. I know you're not proposing either. But is the consequence of that being backwards compatible means a less than ideal design? is that a good value decision going forward? I'm just asking</p>",
        "id": 153817364,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458683247
    },
    {
        "content": "<p>I see those as different things, but yes, the speculation part is potentially problematic</p>",
        "id": 153817365,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458683285
    },
    {
        "content": "<p>What I mean is, the really  awkward position would be to design something not <strong>quite</strong> as clean ad we'd like (as a compromise for STU3 acceptability) and then still not have our design requirements incorporated into STU3.</p>",
        "id": 153817367,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458683343
    },
    {
        "content": "<p>yeah, that would be less than ideal</p>",
        "id": 153817368,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458683406
    },
    {
        "content": "<p>This is a list of possibly useful places in the existing operations :<br>\n ConceptMap.$closure: name<br>\nDecisionSupportRule.$evaluate: requestId? <br>\nList.$find: name<br>\nMeasure.$evaluate: reportType?<br>\nMessageHeader.$process : async?</p>",
        "id": 153817370,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458684365
    },
    {
        "content": "<p>The list is short mainly because most operations have their own resource to be associated with anyway</p>",
        "id": 153817371,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458684387
    },
    {
        "content": "<p>and I think that would make a difference here. If each cds-hook operation had a resource that defined it's operation, then that would have a solid URL:</p>",
        "id": 153817372,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458684424
    },
    {
        "content": "<p>GET [base]/CDSHookDefinition/[name]</p>",
        "id": 153817373,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458684447
    },
    {
        "content": "<p>where name would be for each instance of a hook operation (not type - that would be a property in the return). Of course, I'm implying the FHIR approach there, but I think the logic would apply anyway</p>",
        "id": 153817374,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458684497
    },
    {
        "content": "<p>and then to exceute it:</p>",
        "id": 153817375,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458684508
    },
    {
        "content": "<p>GET [base]/CDSHookDefinition/[name]/$evaluate</p>",
        "id": 153817377,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458684529
    },
    {
        "content": "<p>maybe the parameters in path thing is still useful here....</p>",
        "id": 153817378,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458684547
    },
    {
        "content": "<p>What's an example of \"[name]\" here? Is it like \"rx-cost-calculator\" (i.e. an ad-hoc, URL slug-formatted descriptor)?</p>",
        "id": 153817385,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458685159
    },
    {
        "content": "<p>How is:</p>\n<div class=\"codehilite\"><pre>POST [base]/CDSHookDefinition/rx-cost\n</pre></div>\n\n\n<p>better/different than:</p>\n<div class=\"codehilite\"><pre>POST [base]/$cds-hook/rx-cost?\n</pre></div>",
        "id": 153817386,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458685159
    },
    {
        "content": "<div class=\"codehilite\"><pre>POST [base]/CDSHookDefinition/rx-cost/$evaluate\n</pre></div>",
        "id": 153817387,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458685252
    },
    {
        "content": "<p>that's not much different. The difference is that because you treat the definition as a normal resource, then you get search, pub/sub, etc out of the box for the definitions (at least, out of the box from FHIR anyway, but the principle holds)</p>",
        "id": 153817388,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458685315
    },
    {
        "content": "<p>What is the definition, though? The metadata?</p>",
        "id": 153817389,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458685333
    },
    {
        "content": "<p>And then <code>rx-cost</code> is an instance id?</p>",
        "id": 153817390,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458685351
    },
    {
        "content": "<p>yes. that's an instance of a cdshooks service - specifically, a resource that describes the service and how you use it </p>",
        "id": 153817392,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458685410
    },
    {
        "content": "<p>That's interesting. Didn't you just say that defining a new retrospective resource was harder than defining a new retrospective API feature? (Or did I get the direction wrong?)</p>",
        "id": 153817393,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458685475
    },
    {
        "content": "<p>changing one is what is worst of all but yes, defining a new one would be very difficult to retrospectively adopt. But if we - say - said that was a direction we wanted to go (would make it easy to publish cds hook definitions in implementation guides, registries etc), then it would guide us towards how to retrospectively fitted it to dstu2</p>",
        "id": 153817396,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458686207
    },
    {
        "content": "<p>Anyway, hook-definition-as-resource is a fascinating idea. Thanks for that :-)</p>",
        "id": 153817397,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458686396
    },
    {
        "content": "<p>well, you've kind of already defined it. might as well go the whole hog....</p>",
        "id": 153817398,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458686458
    },
    {
        "content": "<p>Well, whole hog requires defining inputs and  outputs too. But just don't see using FHIR's official international resource Balloting process for something like this. </p>",
        "id": 153817401,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458687147
    },
    {
        "content": "<p>We want the level of convenience of having a resource , but the process is not a fit. The \"80%\" methodology wouldn't even seem relevant. </p>",
        "id": 153817403,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458687210
    },
    {
        "content": "<p>why not? you don't want people to use it?</p>",
        "id": 153817404,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458687213
    },
    {
        "content": "<p>Of course we want people to use it. </p>",
        "id": 153817405,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458687233
    },
    {
        "content": "<p>and also, why not? because it's new and the entire scope of implementers are all new ?</p>",
        "id": 153817406,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458687238
    },
    {
        "content": "<p>But it's not a healthcare resource. Yes, and all new scope </p>",
        "id": 153817407,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458687247
    },
    {
        "content": "<p>then everyone agrees, and 80% = 100%</p>",
        "id": 153817409,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458687256
    },
    {
        "content": "<p>not a healthcare resource? don't understand. </p>",
        "id": 153817410,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458687273
    },
    {
        "content": "<p>There are hundreds of ideas that deserve equal footing m</p>",
        "id": 153817411,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458687292
    },
    {
        "content": "<p>it's fine to prototype something in the wild, informally. but once people start committing to it, then you start needed a heavier weight process. </p>",
        "id": 153817412,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458687306
    },
    {
        "content": "<p>Are you saying they should all be balllted in FHIR? </p>",
        "id": 153817413,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458687321
    },
    {
        "content": "<p>what? </p>",
        "id": 153817414,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458687330
    },
    {
        "content": "<p>Especially the inputs and outputs, it just feels like they're not \"resources\" in FHIR's sense. I want to have a nice format for inputs to an hook, but it doesn't make sense to do CRUD on that input (or especially on the output) </p>",
        "id": 153817415,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458687387
    },
    {
        "content": "<p>umm I think we were talking at cross purposes. what you have now is an agreed single format for defining a specific operation, and how it describes what the inputs and outputs are, and a framework for doing the inputs and outputs </p>",
        "id": 153817416,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458687485
    },
    {
        "content": "<p>I'm not proposing any change to that. Just making the single format a resource</p>",
        "id": 153817417,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458687501
    },
    {
        "content": "<p>What if our preferred heavier process isn't an HL7 Balloting modeling though? What if it's a committer model? </p>",
        "id": 153817418,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458687555
    },
    {
        "content": "<p>It feels like  FHIR is configured  consume any vaguely related projects into its gravity well if the only way to build clean stuff on top is to assimilate into the ballot process. </p>",
        "id": 153817421,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458687696
    },
    {
        "content": "<p>Anyway, which of  Metadata vs inputs vs outputs should be a resource : that  <strong>is</strong> a separate issue </p>",
        "id": 153817422,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458687754
    },
    {
        "content": "<p>I think that's wishful thinking. As you start out, that works really well. You cycle quickly, you're responsive. The community is tight-knit. It's all good. But over time, the community spreads, existing committers that are heavily invested move onto other things, then change process gets harder, more money is committed, execs start asking how their investment is protected, government start wanting to specify things.... </p>",
        "id": 153817423,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458687786
    },
    {
        "content": "<p>there's a reason for the standards process</p>",
        "id": 153817424,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458687796
    },
    {
        "content": "<p>I don't dispute any of that. It's all good! But it can't be the solution to <strong>every</strong> problem. </p>",
        "id": 153817425,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458687865
    },
    {
        "content": "<p>Anyway, we're far afield in this discussion :p</p>",
        "id": 153817426,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458687882
    },
    {
        "content": "<p>well. it depends how much use you have. But the question of integration into fhir itself... that's something we need to work on more, agree</p>",
        "id": 153817427,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458687898
    },
    {
        "content": "<p>So, I'm trying to get caught up on this thread, but there's a lot here, so I apologize if I'm rehashing ground you've already covered, but it sounds like what Grahame is suggesting is fairly close to the approach that we've taken in CQIF. We consider a CDS Service as composed of Modules, each of which has a different signature.</p>",
        "id": 153817430,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458689649
    },
    {
        "content": "<p>From the perspective of the caller, the \"module\" is a black box. It's a service definition that has inputs and outputs.</p>",
        "id": 153817431,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458689670
    },
    {
        "content": "<p>As far as it not being a \"health care resource\", I see what you mean, and I sort of agree, but then, neither is StructureDefinition, or Questionnaire.</p>",
        "id": 153817432,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458689700
    },
    {
        "content": "<p>And treating them as Resources in the FHIR sense allows us to use the existing FHIR functionality. Why can't you use basic CRUD against service definitions? Registering a service then becomes a POST to the DecisionSupportServiceModule resource.</p>",
        "id": 153817433,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458689742
    },
    {
        "content": "<p>Querying for what services are supported is just a GET.</p>",
        "id": 153817434,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458689751
    },
    {
        "content": "<p>It also already supports the notion of \"required data\", what CDS-Hooks calls \"pre-fetch templates\".</p>",
        "id": 153817435,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458689860
    },
    {
        "content": "<p>And the \"activity\" definitions are supported as \"named events\".</p>",
        "id": 153817436,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458689898
    },
    {
        "content": "<p>I'm sure it's not a perfect fit, but there's a lot there that can be leveraged.</p>",
        "id": 153817438,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458689958
    },
    {
        "content": "<p>As for\"using CRUD\", my point here was if we defined a \"CDSHooksInput\" and \"CDSHooksOutput\" resource (or similar), these would make little/no sense for CRUD. And overall this just feels like a square peg in a round hole to me.</p>\n<p>Yes, CRUD feels fine for the metadata/descriptions.</p>",
        "id": 153817448,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458692237
    },
    {
        "content": "<p>I see, I missed that. Yes, I agree with that.</p>",
        "id": 153817451,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458692394
    },
    {
        "content": "<p>you know, if we said that the metadata/descriptions was a custom resource, and the RI and servers got around to supporting custom resources, then you'd have a path that maintained publishing/life cycle independence, but made ready to become part of FHIR (e.g. balloting) when the time is right</p>",
        "id": 153817459,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458693181
    },
    {
        "content": "<p>Well yes. That's very true -- that's the kind of de-coupling I'm talking about (and indeed, inputs/outputs could be custom resources too, to avoid \"parameters\")</p>",
        "id": 153817460,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458693318
    },
    {
        "content": "<p>I've never liked inputs and outputs being resources. That'll lead to 1000s of resources, and who'll know how to support them? </p>",
        "id": 153817464,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458693383
    },
    {
        "content": "<p>And by custom resources here, you mean the ability to define what looks and feels like a first-class resource but that isn't part of the core FHIR spec, right? (Just making sure you don't mean a profile of Basic with extensions)</p>",
        "id": 153817465,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458693425
    },
    {
        "content": "<p>I'm trying to find time to do policy stuff like this, but I'm flat stick trying to get the freeze ready </p>",
        "id": 153817466,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458693442
    },
    {
        "content": "<p>Bryn yes</p>",
        "id": 153817467,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458693445
    },
    {
        "content": "<p>If I can just point my FHIR client at the \"CDS Hooks Resource Pack v 0.4.1\" and write code against it... then who needs to \"know how to support them\"?  You'd just read the docs for CDS Hooks and you'd be good.</p>",
        "id": 153817468,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458693492
    },
    {
        "content": "<p>Agree on Inputs and Outputs not being resources, APIs that do this (define structures for everything) are very unwieldy, IMHO.</p>",
        "id": 153817469,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458693493
    },
    {
        "content": "<p>Wait, every API defines inputs and outputs.</p>",
        "id": 153817470,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458693516
    },
    {
        "content": "<p>We might be talking past each other if you're thinking of something \"unwieldy\".</p>",
        "id": 153817471,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458693548
    },
    {
        "content": "<p>Yes but most do it with parameters.</p>",
        "id": 153817472,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458693572
    },
    {
        "content": "<p>Yes, maybe.</p>",
        "id": 153817473,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458693577
    },
    {
        "content": "<p>well, that's fine for someone who writes bespoke APIs to support a few options. But as you scale that up, people get desparate for continuity across the engineering framework</p>",
        "id": 153817474,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458693584
    },
    {
        "content": "<p>I'm thinking of APIs that define Structs for everything, even if the call only has one or two parameters.</p>",
        "id": 153817475,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458693610
    },
    {
        "content": "<p>so you get some kind of double layer. Which is how I proposed to use the Parameters resource</p>",
        "id": 153817476,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458693613
    },
    {
        "content": "<p>Agreed, that's actually why we opted for defining a specific resource for DecisionSupportServiceModule, rather than making it a profile of OperationDefinition.</p>",
        "id": 153817477,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458693661
    },
    {
        "content": "<p>don't see the connection</p>",
        "id": 153817478,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1458693680
    },
    {
        "content": "<p>Because we think there are a handful of parameters that every service will need, so we define those on the $evaluate operation itself.</p>",
        "id": 153817479,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458693691
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span> gotcha -- this isn't what I mean. I just mean I'd rather pass:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n<span class=\"nt\">&quot;a&quot;</span><span class=\"p\">:</span>  <span class=\"mi\">1</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>than </p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;resourceType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Parameters&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;parameters&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"nt\">&quot;name&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;a&quot;</span><span class=\"p\">,</span> <span class=\"nt\">&quot;valueInteger&quot;</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}]</span>\n<span class=\"p\">}</span>\n</pre></div>",
        "id": 153817480,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1458693691
    },
    {
        "content": "<p>I'm also a little late to the conversation, but from my perspective its sounding kind of like what cds-hook is doing is very similar to what VBA macros were doing years ago.<br>\nApps had defined injection points that you cook hook code into that could do things.<br>\nThese had parameters you could process and do what you liked, and actions you could take on things.<br>\nThis then turned into apps that were built onto the models for each application.<br>\n(Not saying that we should adopt anything from it, just that we could learn from others experiences)</p>",
        "id": 153817596,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458724120
    },
    {
        "content": "<p>My preference is to keep the hook metadata seperate rather than a complete set, and I would like it to be a complete resource that can be udpated (enabled/disabled) as desired, and would then have the execution of the hook via a $evaluate (or $execute) after the hook resource name</p>",
        "id": 153817598,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458724598
    },
    {
        "content": "<p>Would also like to be able to search through services also, especially if there end up being lots of them</p>",
        "id": 153817599,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1458724675
    },
    {
        "content": "<p><a href=\"https://hl7-fhir.github.io/decisionsupportservicemodule.html\" target=\"_blank\" title=\"https://hl7-fhir.github.io/decisionsupportservicemodule.html\">https://hl7-fhir.github.io/decisionsupportservicemodule.html</a></p>",
        "id": 153817660,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458744245
    },
    {
        "content": "<p>This is the resource I'm thinking of as a fit for the metadata/description of the CDS-hooks services.</p>",
        "id": 153817661,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1458744279
    },
    {
        "content": "<p>afaik the prefetch templates are different for each hook...</p>",
        "id": 153817910,
        "sender_full_name": "David Hay",
        "timestamp": 1458805521
    }
]