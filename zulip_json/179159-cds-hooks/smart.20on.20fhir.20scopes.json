[
    {
        "content": "<p>Wondering if conflicting scopes has been covered?<br>\nspecifically if a user has these 2 scopes:<br>\n<code>user/*.*</code><br>\n<code>patient/*.read</code><br>\nDoes this imply that the access is that any resource is accessible with read/write, except where a patient is involved in the resource, where only read is permitted?</p>",
        "id": 153955538,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1525302862
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> - Thanks for giving me another reason as for why we need to get rid of wildcard scopes. :-) Also, This is a SMART question (not exclusive to CDS Hooks)</p>",
        "id": 153955759,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1525379461
    },
    {
        "content": "<p>Scopes are additive: since <code>patient/*.read</code> is a subset of <code>user/*.*</code>, this is equivalent to <code>user/*.*</code>.</p>",
        "id": 153955788,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1525379968
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191355\">@Kevin Shekleton</span> This isn't a wildcard issue per se.  You'd have the same question about <code>user/Patient.read user/Patient.write patient/Patient.read</code>.</p>",
        "id": 153955790,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1525380011
    },
    {
        "content": "<p>And the guiding principle is: each scope can be treated/evaluated independently, and they're additive. This is by design in OAuth (although it's not a universally respected principle in all OAuth 2.0-based permission models.)</p>",
        "id": 153955791,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1525380064
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> - I agree but wildcards makes it much more muddy.</p>",
        "id": 153955800,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1525380371
    },
    {
        "content": "<p>(Yes, sorry for asking the smart question in the cdshooks stream)<br>\nBut you have answered my question</p>",
        "id": 153955816,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1525384542
    }
]