[
    {
        "content": "<p>How are folks using the discovery endpoint? </p>\n<p>For some leading questions on what I'm trying to get at from the above: </p>\n<ul>\n<li>From the service side - do you dynamically adapt or change what is returned based on properties of the request? </li>\n<li>From the client side - when and how often do you query the discovery endpoint? Who or on whose behalf do you do that (for example: app store manager / hospital analyst / physician end user)? Do you query it at the global level and see new services etc., or do you query it at a service level only to get properties of a specific service? </li>\n</ul>\n<p>There was a discussion after the CDS Hooks track kickoff, where we started with whether the discovery endpoint should be behind JWT Authentication or not. And this led to an attempt to try to understand how discovery endpoint is being used in the real world.</p>",
        "id": 197488706,
        "sender_full_name": "Matt Varghese",
        "timestamp": 1589411424
    },
    {
        "content": "<p>As a service, our service discovery endpoint sits behind an authentication layer.  Configuration would be required for a client to use our services.  Our response could change based on what was in the request and the result of business logic used to process the request.</p>",
        "id": 197542435,
        "sender_full_name": "Steve Millard",
        "timestamp": 1589457725
    },
    {
        "content": "<p>As a client, we call the discovery endpoints at startup to determine the available services and get the requested prefetch information for each service. We are using it in production in this manner.</p>",
        "id": 197552648,
        "sender_full_name": "Chuck Feltner",
        "timestamp": 1589462591
    },
    {
        "content": "<p>Chuck, if a CDS Service publishes new services on their discovery endpoint as well as changing prefetch requirements, does this mean you dynamically pull in these changes during a start-up event?  i.e. you automatically start calling the new services in prod during a hook event they're interested in, as well as adjusting to any prefetch changes?</p>",
        "id": 197554679,
        "sender_full_name": "Dennis Patterson",
        "timestamp": 1589463439
    },
    {
        "content": "<p>Dennis, yes to some extent. In our administration setup for CDS Hooks, for each allowed CDS Service we specify their base URL, auth clientId, hooks they are allowed to call, and scopes allowed for prefetch. So there is still some coordination needed. It has been used where the CDS Service decided they also needed an additional FHIR resource so they updated their prefetch information and we granted the additional prefetch scope.</p>",
        "id": 197556977,
        "sender_full_name": "Chuck Feltner",
        "timestamp": 1589464359
    },
    {
        "content": "<p>administration setup sounds like manual work.    Part of this discussion about discovery endpoint is getting a feel for how much of the discovery endpoint is used at CDS Client runtime to dynamically flex vs more administrative/manual config</p>",
        "id": 197568515,
        "sender_full_name": "Dennis Patterson",
        "timestamp": 1589468756
    },
    {
        "content": "<p>Yes, the manual work is dealing with the granting of authorization. The parts of the discovery endpoint that are treated dynamically are the service id and the prefetch.</p>",
        "id": 197577459,
        "sender_full_name": "Chuck Feltner",
        "timestamp": 1589472215
    },
    {
        "content": "<p>if a CDS Service endpoint trusted by T-System adds another service to its discovery endpoint that also listens for patient-view, will that automatically start being invoked in prod?</p>",
        "id": 197577829,
        "sender_full_name": "Dennis Patterson",
        "timestamp": 1589472361
    },
    {
        "content": "<p>As service, we do dynamically adapt and change our response based who is calling. who is calling is determined by jwt [combination of one or more of the following: tenant , issuer and jwk uri ]</p>",
        "id": 197584591,
        "sender_full_name": "Raj M",
        "timestamp": 1589475140
    },
    {
        "content": "<p>The core value of Discovery Endpoint is realized if it used dynamically by the CDS clients. On a related note, as  a hooks service provider we do use contents defined in discovery end point (dynamically for every incoming request to us)  in addition to serving the same through discovery endpoint</p>\n<ul>\n<li>to establish link between a particular service id and jwt variables (tenant, issuer and jwks uri) to  validate (authorization and authentication ) hooks request </li>\n<li>use prefetch definition for our needs to check on the prefetch data completeness and do additional fhir query to get the clinical data</li>\n</ul>\n<p>So we have the need to maintain discovery endpoint like content irrespective of the requirement to expose discovery end point to cds client or not</p>",
        "id": 197587116,
        "sender_full_name": "Raj M",
        "timestamp": 1589476144
    },
    {
        "content": "<p>Within the bounds of the spec, yes clients should be sending the JWT for all calls to the CDS Service endpoint.  Given that, the following could be true:</p>\n<p>The CDS Service can then</p>\n<ul>\n<li>vary the services advertised in discovery</li>\n<li>adjust prefetch definitions if there are subtle client differences such as custom query parameters</li>\n<li>track/whitelist calls from CDS Clients ('iss') and optionally for specific tenants</li>\n</ul>",
        "id": 197692748,
        "sender_full_name": "Dennis Patterson",
        "timestamp": 1589550298
    },
    {
        "content": "<p>What I'm trying to understand is industry assumptions around responsiveness to discovery endpoint updates after initial client registration.</p>\n<ul>\n<li>A CDS Service could update its prefetch requirements.  A CDS Client could then be responsive to pull in those changes</li>\n<li>A CDS Service could change the id for a service or introduce a new service for a client-supported hook.  I'm curious what the expectations are or existing behavior is for this behavior?</li>\n</ul>",
        "id": 197692798,
        "sender_full_name": "Dennis Patterson",
        "timestamp": 1589550325
    }
]