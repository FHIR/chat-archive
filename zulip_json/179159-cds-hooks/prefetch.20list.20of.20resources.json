[
    {
        "content": "<p>Spec for prefetch says: <code>each value is a FHIR Bundle.entry indicating a response status and returned resource</code></p>\n<p>A Bundle.entry is 0..*, so it's an array in FHIR, but in the spec text and example, it seems to be using Bundle.entry[1] directly</p>",
        "id": 153892074,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1496396746
    },
    {
        "content": "<p>There's just one example where the EHR would need to send a list, <code>\"medications\": \"MedicationOrder?patient={{Patient.id}}\"</code>, but the spec doesn't have an example for that. </p>\n<p>I'll go with treating the prefetch objects value as an array of objects as using <code>Bundle.entry</code> would prescribe - but it would mean that it doesn't align with the text following it <code>indicating a response status and a returned resource</code> nor the provided examples</p>",
        "id": 153892075,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1496396873
    },
    {
        "content": "<p>Can anyone confirm/deny the problem?</p>",
        "id": 153892076,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1496396880
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191363\">@Vadim Peretokin</span>  I just opened Zulip to ask exactly the same question.  Looking at <span class=\"user-mention\" data-user-id=\"191368\">@Brett Esler</span> redbook service definition that includes a prefetch -- \"conditions\": \"Condition?patient={{Patient.id}}&amp;_count=1000\".  This would return a bundle with multiple entries, each containing one resource.  Seems like the spec should require any array for prefetch objects (entries).</p>",
        "id": 153892123,
        "sender_full_name": "Dave Carlson",
        "timestamp": 1496416251
    },
    {
        "content": "<p>I read this more 'like a FHIR Bundle.entry' and I expected the prefetch items that return multiple items to have 'resource' set to a Bundle (which is the resource returned by the prefetch statement)</p>",
        "id": 153892131,
        "sender_full_name": "Brett Esler",
        "timestamp": 1496418840
    },
    {
        "content": "<p>Brett, with that interpretation, it would be most consistent for any prefetch based on a query to expect a Bundle resource. So, in your Redbook services, all prefetch other than \"patient\". Many of your prefetch queries include &amp;_count=1.  When invoking, how would I know whether your service is expecting a single resource or a Bundle, unless I parsed the query looking for _count=1 ?</p>",
        "id": 153892135,
        "sender_full_name": "Dave Carlson",
        "timestamp": 1496419783
    },
    {
        "content": "<p>The prefetch would return a resource or a bundle as per FHIR API call so {emrbase}/Patient/{{Patient.id}} returns a single Patient resource with the id provided (FHIR read); something like \"{emrbase}/Condition?patient={{Patient.id}}&amp;_count=1000\" or \"{emrbase}/Observation?patient={{Patient.id}}&amp;code=55284-4&amp;_count=1&amp;_sort:desc=date‚Äù  are FHIR searches so return a Bundle (even though there is only ever one result in the 2nd one; still a Bundle)</p>",
        "id": 153892141,
        "sender_full_name": "Brett Esler",
        "timestamp": 1496421597
    },
    {
        "content": "<p>so just making the call on the EMR as stated in the pre-fetch; it might be good to say something about paging as expect the prefetch should provide all the pages available from the EMR - although can't see how to supply this for a CDS call as there would be multiple Bundles (pages); this kind of goes back to your original point... </p>",
        "id": 153892143,
        "sender_full_name": "Brett Esler",
        "timestamp": 1496422041
    },
    {
        "content": "<p>Thanks Brett.  So, as I continue to build a test using your hooks service, you expect all prefetch values other than \"patient\" to send a Bundle in the request?</p>",
        "id": 153892146,
        "sender_full_name": "Dave Carlson",
        "timestamp": 1496423122
    },
    {
        "content": "<p>I am just reading it as supply the response from the stated prefetch statement with the base url of the EMR - so the response will be a bundle for FHIR API search or a specific resource when a FHIR API read (based on the prefetch statement)  - the only way I can see there being a single resource (other than Bundle) is if one of the context variables is supplied like {{Patient.id}} - i.e. retrieve a specific resource like {emrBase}/{resourceType}/{{contextId}}</p>",
        "id": 153892195,
        "sender_full_name": "Brett Esler",
        "timestamp": 1496451244
    },
    {
        "content": "<p>so for redbook service you are right - Patient resource (read) and the rest are Bundles (search)</p>",
        "id": 153892196,
        "sender_full_name": "Brett Esler",
        "timestamp": 1496451291
    }
]