[
    {
        "content": "<p>CDS Hook newbie question:   why haven't <code>resourceType</code> fields been added to the CDS specification?  One would think that it would be simple enough to just toss on a resourceType field  with a value of <code>Hook</code> or <code>HookResponse</code>.  Is there a back story why that hasn't happened yet?</p>",
        "id": 163207483,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1555088452
    },
    {
        "content": "<p>Can you expand on where/how this would be used?</p>",
        "id": 163209723,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1555090157
    },
    {
        "content": "<blockquote>\n<p>Can you expand on where/how this would be used?</p>\n</blockquote>\n<p>Well, we just did a training session, and spent two days showing examples where pretty much every JSON object has a <code>resourceType</code>... except for the CDS hook examples.   I guess I was just surprised that there doesn't seem to be a StructureDefinition defined for the hooks and responses?  Also, from a don't-know-what-I-don't-know perspective, it just seems that having a <code>/Hooks</code> endpoint would help with autoconfiguration, and figuring out which hooks a server supports.</p>",
        "id": 163210606,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1555090840
    },
    {
        "content": "<p>Ah, so the more specific question is: Why aren't the various structures in CDS Hooks defined as resources?  I think the short answer is that they're purely transport level structures - no expectation to store, update, query, profile or otherwise manipulate them, no desire to ever support any syntaxes other than JSON and resources would add unwanted constraints/complexity.  For example, contexts are currently handled as just a propery on the hook invocation.  However, a resource doesn't just let you defined properties.  We'd instead have to have a name + value[x] approach  which, from a pure JSON perspective, is unnecessary.</p>",
        "id": 163218778,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1555096746
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191355\">@Kevin Shekleton</span> or <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> may have additional reasons</p>",
        "id": 163218787,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1555096762
    },
    {
        "content": "<p>Hey Abigail, Lloyd - originally, we actually were using the Parameter resource as part of the CDS Hooks exchange, we switched to non-FHIR json and the current structure in (I think) the Jan, 2016 connectathon. At the time, the consensus was that using the Parameters resource added no value except consistency with FHIR and made the request/response more complicated and less acceptable. Since the CDS Hooks request/response isn't FHIR, the <code>resourceType</code> element isn't necessary.</p>",
        "id": 163347106,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1555295451
    },
    {
        "content": "<p>I also agree with Lloyd's reasoning that an ephemeral HookRequest-type resource doesn't make sense in FHIR.</p>",
        "id": 163347109,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1555295460
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191678\">@Abigail Watson</span> , for your training/connectathons/outreach efforts, I'd suggest that you explain that CDS Hooks is a domain-specific wrapper around FHIR. FHIR is the content, the lightweight, small and simple CDS Hooks request/response structure is simply intended to get the FHIR where it needs to go -- while also not slowing down the clinician.</p>",
        "id": 163347127,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1555295491
    },
    {
        "content": "<p>I believe some of the infrastructure stuff defined for SMART is similarly not handled as a resource, so there's a precedent.</p>",
        "id": 163347195,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1555295606
    },
    {
        "content": "<p>the only caveat I have to this is that systems definitely have reasons to store the cards that come back</p>",
        "id": 163426891,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1555372344
    },
    {
        "content": "<p>Thanks for the clarification.  Makes sense, I think.  </p>\n<p>My takeaway is that they effectively got demoted to Metadata or Special Purpose Data type, but the documentation hasn't been updated to reflect it because CDS is a separate project.</p>",
        "id": 163738849,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1555684013
    },
    {
        "content": "<p>Can't be demoted if you were never promoted :)  They've always been 'custom' structures and when there's been discussion about making them full resources, the outcome of the discussion was to leave things as they are.  That doesn't mean there can't be a new discussion though :)  I suspect the original discussion is in Git.</p>",
        "id": 163739597,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1555684692
    },
    {
        "content": "<p>Well, I find it interesting/relevant that people have arrived at similar conversations from different directions.  </p>\n<p>My $0.02 would be that in-practice the <code>resourceType</code> field is appreciated as a general purpose data-typing field for JSON, and there's a flavor of implementors (particularly in the javascript community) who if it were up to them would just add a 'resourceType' field to all the Metadata and Special Purpose Data types.    Not because they want those objects to be resources, per se; but because class-typing is useful in of itself, even if it's a kludgy pseudo-implementation.</p>\n<p>That, and a vote to add Hook/HookResponse to the Special Purpose Data types maybe.  </p>\n<p>idk.  First impressions, and all that.</p>",
        "id": 163740447,
        "sender_full_name": "Abbie Watson",
        "timestamp": 1555685561
    }
]