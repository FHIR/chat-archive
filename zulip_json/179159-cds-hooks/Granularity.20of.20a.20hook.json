[
    {
        "content": "<p>I have a quick question regarding the actual hooks and the level of specificity that will be possible with them. We would like to use hooks to enable specific CDS calls on events that are more granular than just 'medication-prescribe'. I am wondering if a hook could further specify items like Condition.code or other fields in a resource. So instead of triggering when any condition is added to the problems list, trigger when a very specific condition(with an ICD  or SNOMED code) is added or exists in the active problems list of the current patient in the context. I don't see any hooks in the catalog that suggest such granularity. Is this use case beyond the scope of hooks right now?</p>",
        "id": 153880086,
        "sender_full_name": "Travis Stenerson",
        "timestamp": 1490714484
    },
    {
        "content": "<p>I don't think it's beyond the scope but rather that the hooks job to filter on the codes relevant to it. I suspect that's how <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> has setup his hypertension demo to start only on hypertension</p>",
        "id": 153880283,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1490810744
    },
    {
        "content": "<p>Hi Travis: the general idea is that hooks are slightly coarser-grained, but we can accomplish what you're looking for with a combination of:</p>\n<p>1.  a service doesn't need to respond with cards; the service can determine when the call is irrelevant and simply respond with a blank list of cards<br>\n2. as a performance optimization, we can imagine developing \"trigger guards\" that the EHR can evaluate before calling a service (e.g. \"only make this call for female patients\", or for newborns, etc). But this can come later; the system still works without it (or should).</p>",
        "id": 153880289,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1490812488
    },
    {
        "content": "<p>Thanks guys - the trigger guards would be useful, as we might have a fairly substantial prefetch template. Even the ability to execute a FHIRPath expression that evaluates to a Boolean prior to the prefetch and call would be useful to filter to the correct context. I thought I saw some type of filtering like this in the ZIKA app that was presented on the CQF call last Thursday, but can't find the minutes online.  Thanks for the replies. I suspect we will be using (a number of) CDS-Hooks for integration, so I will be looking for ways to get involved and help out with the project.</p>",
        "id": 153880404,
        "sender_full_name": "Travis Stenerson",
        "timestamp": 1490889302
    },
    {
        "content": "<p>Hey Travis - coming up with something like \"trigger guards\" (which the term we've been using) or useContext (which is the term Clinical Reasoning uses) is on our radar and something we've been discussing. The Zika app you saw on the last CQF call I believe was written using Clinical Reasoning.</p>",
        "id": 153880493,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1490909809
    },
    {
        "content": "<p>Ah, I see. Thanks for the reply Kevin. We are exploring both options - clinical reasoning vs CDS-hooks and we are looking forward to how they look as they align further. Do you have any suggestions on other groups to follow or calls to attend to stay up to date on this?</p>",
        "id": 153880617,
        "sender_full_name": "Travis Stenerson",
        "timestamp": 1490983048
    },
    {
        "content": "<p>The <a href=\"https://groups.google.com/forum/#!forum/cds-hooks\" target=\"_blank\" title=\"https://groups.google.com/forum/#!forum/cds-hooks\">CDS Hooks Google Group</a> will be a good place to stay plugged in. I'll be posting more details about this work there. Right now, we just don't have any concrete prospoals to share at this time. It's been just a lot of sharing of knowledge between the two sides and seeing where we are similar/different</p>",
        "id": 153880620,
        "sender_full_name": "Kevin Shekleton",
        "timestamp": 1490983354
    }
]