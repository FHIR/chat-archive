[
    {
        "content": "<p>We've had a long-standing open issue about whether/how to address security in SMART Web Messaging. I've added <a href=\"https://github.com/smart-on-fhir/smart-web-messaging/pull/4/files?short_path=04c6e90#diff-04c6e90faac2675aa89e2176d2eec7d8to\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/smart-web-messaging/pull/4/files?short_path=04c6e90#diff-04c6e90faac2675aa89e2176d2eec7d8to\">https://github.com/smart-on-fhir/smart-web-messaging/pull/4/files?short_path=04c6e90#diff-04c6e90faac2675aa89e2176d2eec7d8to</a> document one approach -- namely, defining a <code>smart_web_messaging_token</code> that acts like a limited-purpose access token (specifically designed to be safely movable into the browser environment, even for apps that keep their full access_tokens on a secure server; and conferring limited access only to web messaging APIs).</p>\n<p>Would love thoughts on this, and alternatives we should consider.</p>",
        "id": 176768121,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1569606161
    },
    {
        "content": "<p>with the idea being that the <code>smart_web_messaging_token</code> isn't exactly authentication, but rather a convenient way for the container to correlate a recently established OAuth session/set of granted scopes with the embedded app?</p>",
        "id": 176769661,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1569607075
    },
    {
        "content": "<p>That's correct. Correlation is exactly how I'd put it (correlating a specific browser window with the authorization context from the app launch).</p>",
        "id": 176771836,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1569608486
    },
    {
        "content": "<p>Line 199 is where my brain immediately jumps</p>",
        "id": 177250128,
        "sender_full_name": "Brendan Keeler",
        "timestamp": 1570113141
    },
    {
        "content": "<p>We now have a server auth token and a browser auth token, essentially. What makes the browser one more secure?</p>",
        "id": 177250178,
        "sender_full_name": "Brendan Keeler",
        "timestamp": 1570113189
    },
    {
        "content": "<p>Nothing makes it more secure -- it just comes with limited permissions, so apps that don't otherwise need to push an access token into the browser don't have to.</p>",
        "id": 177252270,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1570114478
    },
    {
        "content": "<p>The web messaging token is focused entirely on web messaging (i.e., helps the EHR correlate a given browser window with a session).</p>",
        "id": 177252455,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1570114572
    },
    {
        "content": "<p>Perhaps reusing the word \"token\" in a smart spec is a mistake. Inappropriate expectations and such. You really mean this to be a session id. Note that if you called it hub.topic, you'd potentially enable fhircast web messages.</p>",
        "id": 177299870,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1570147495
    },
    {
        "content": "<p>We can name it whatever, if we like that idea of having it in the first place...( <code>smart_web_messaging_handle</code> maybe). The main question I have is whether people like this approach.</p>",
        "id": 177377815,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1570222232
    },
    {
        "content": "<p>I like it</p>",
        "id": 177574658,
        "sender_full_name": "Brendan Keeler",
        "timestamp": 1570495554
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191644\">@Raj M</span> - does WK have insight or feedback on this?</p>",
        "id": 177923557,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1570811038
    },
    {
        "content": "<p>we follow similar pattern internally between smart containers and apps running within the container. we call it appToken. I don't have any particular preference on the naming, smart_web_messaging_handle is good. one feedback we got from our security folks when we implemented it, is to have expiry logic (end of session) on the smart_web_messaging_handle which I guess is assumed but it will be good to elucidate that in the spec</p>",
        "id": 177936094,
        "sender_full_name": "Raj M",
        "timestamp": 1570819096
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191644\">@Raj M</span>! I've updated the PR to include a quick description of expiration logic, and typing the handle to one window.  (<a href=\"https://github.com/smart-on-fhir/smart-web-messaging/pull/4/files?short_path=04c6e90#diff-04c6e90faac2675aa89e2176d2eec7d8\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/smart-web-messaging/pull/4/files?short_path=04c6e90#diff-04c6e90faac2675aa89e2176d2eec7d8\">See here</a>.)</p>",
        "id": 178122039,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1571074215
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span></p>",
        "id": 178293799,
        "sender_full_name": "Raj M",
        "timestamp": 1571235879
    },
    {
        "content": "<p>Thanks to <span class=\"user-mention\" data-user-id=\"191609\">@Matt Randall</span> for a good discussion on threat models + what we're trying to enable with a smart_web_messaging_handle. I've <a href=\"https://github.com/smart-on-fhir/smart-web-messaging/pull/4/files#diff-04c6e90faac2675aa89e2176d2eec7d8to\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/smart-web-messaging/pull/4/files#diff-04c6e90faac2675aa89e2176d2eec7d8to\">merged the PR defining this feature</a>; let's plan to discuss here + in our argonaut calls before calling this a wrap.</p>",
        "id": 180157679,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1573149915
    }
]