[
    {
        "content": "<p>Hi all, I'm quite new in the FHIR business and hope to find somebody more experienced here.</p>\n<p>I tried to push FHIR bundles with device data to FHIR repositories like HAPI JPA Server and IBM FHIR Server and noticed that the servers were quickly (and reproducibly) overstrained. Have you experienced the same problems when, e.g., inserting 100+ FHIR Observations per second?  Anybody have an idea how to persist data from a lot of devices, _each_ with 100+ Observations per second, with HAPI or IBM?</p>\n<p>I thought that pushing large Observation bundles was inevitable with \"Devices on FHIR\", so I was a bit surprised that the repositories struggled performance-wise. Looking forward to your comments/ideas!</p>",
        "id": 208825287,
        "sender_full_name": "Winfried Gerlach",
        "timestamp": 1599054214
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span></p>",
        "id": 208825450,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1599054276
    },
    {
        "content": "<p>You might also find this thread helpful: <a href=\"#narrow/stream/179166-implementers/topic/FHIR.20Performance.3A.20Concerns\">https://chat.fhir.org/#narrow/stream/179166-implementers/topic/FHIR.20Performance.3A.20Concerns</a></p>",
        "id": 208825517,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1599054314
    },
    {
        "content": "<p>In general, you might want to look at chunking data using Observation.sampledData. For example Microsoft has a middleware layer to handle this kind of thing, mapping streamed data from devices into (configurable, but often coarser- grained) FHIR resources and pushing those to a FHIR server (<a href=\"https://github.com/Microsoft/iomt-fhir\">https://github.com/Microsoft/iomt-fhir</a>).</p>",
        "id": 208826590,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1599054795
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"336602\">@Winfried Gerlach</span>  Yep ... and there are numerous strategies and architecture alternatives ... perhaps <span class=\"user-mention\" data-user-id=\"192966\">@Stefan Karl</span>  or <span class=\"user-mention\" data-user-id=\"192228\">@Brian Reinhold</span>  or <span class=\"user-mention\" data-user-id=\"192860\">@Ana Kostadinovska</span>  could provide some perspective.</p>",
        "id": 208964876,
        "sender_full_name": "Todd Cooper",
        "timestamp": 1599139096
    },
    {
        "content": "<blockquote>\n<p>You might also find this thread helpful: <a href=\"#narrow/stream/179166-implementers/topic/FHIR.20Performance.3A.20Concerns\">https://chat.fhir.org/#narrow/stream/179166-implementers/topic/FHIR.20Performance.3A.20Concerns</a></p>\n</blockquote>\n<p>Thanks for the hint, <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>! There are already some interesting statements in that thread. But I wanted to ask particularly in the context of device data, because I assume that the devices use case is somehow special: very frequent inserts/updates, infrequent but probably very expensive queries to aggregate data, no [or little] full text to index,... There are dedicated time-series databases out there and I assume that sooner or later we will need \"optimized persistence\", if device data and FHIR repositories shall get together.</p>\n<blockquote>\n<p>In general, you might want to look at chunking data using Observation.sampledData. </p>\n</blockquote>\n<p>Many thanks, <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>! I was thinking in the same direction and feel much better now, if big players also use this approach.</p>\n<p>Also thanks to <span class=\"user-mention\" data-user-id=\"192176\">@Todd Cooper</span>, looking forward to strategies and architectural alternatives!</p>",
        "id": 208968740,
        "sender_full_name": "Winfried Gerlach",
        "timestamp": 1599140740
    },
    {
        "content": "<p>Not sure if this belongs here, but sharing my experience building a device-centric system build on FHIR. We ended up building a separate service and storage system for capturing the sampled (in our case telemetry) data. That way we were able to finely control the parameters we were interested in. Then we had the FHIR entry (Device or ServiceRequest depending on the type of data) point to our telemetry API backend. The medium approach worked for us but the larger lesson we learned is that it's very tempting to use FHIR for everything, and certainly all our use cases could have in some way been supported by FHIR, but there's a very fine/subjective line between when a use case belongs in FHIR and when it should be solved independently and somehow integrated with FHIR. I wish I had  a systematic way of thinking about that, and if others have that I'd be super interested in hearing it, but I do think that each implementation needs to think through that...</p>",
        "id": 213842945,
        "sender_full_name": "OS",
        "timestamp": 1603140223
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"285887\">@OS</span>  I believe this is the general experience of people building device informatics systems - on  one side you end up with a Fire Hose of content but on the user end, you are typically TYPICALLY interested in summarized info and often for just a few parameters.  Some systems want the Fire Hose and then will do the persistence in their own server (based on whatever DB tech makes the most sense) and filter and serve up the data to applications as needed.  Other applications want to ONLY receive the info pre-filtered if you will.  And another typical scenario is when there is something \"interesting\" in the filtered / summarized data stream, and then full resolution data is needed to determine exactly what happened and perform predictive analytics etc.   </p>\n<p>All to say, yeah FHIR isn't the best fit for the full granular data feed - either in hospital or out in the wild - however, it IS perfect for applications that want to query / search retrospectively, or get a pub/sub update of a few parameters, etc. etc. etc.  And this is often not related to the care setting:  for the telemetry example you gave, often personal health devices only report occasionally and then a small set of info.  So a FHIR message bundle makes absolute sense.  If you are doing telemedicine, though, and hospital-at-home or post-acute / chronic care with ventilators and infusion pumps and serious physio monitoring, then yeah - FHIR isn't the best suited for that.  </p>\n<p>Note the HL7 DEV Devices on FHIR IGs provide some good perspective on this.</p>\n<p>Have fun!</p>",
        "id": 214075061,
        "sender_full_name": "Todd Cooper",
        "timestamp": 1603297066
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192176\">@Todd Cooper</span> What part of the IG do you mean? Could you provide a deep-link?<br>\nMaybe I am just too unexperienced but I couldn't find general musings about when (not) to use FHIR in the PoC Device IG.</p>",
        "id": 214079737,
        "sender_full_name": "Winfried Gerlach",
        "timestamp": 1603298996
    }
]