[
    {
        "content": "<p>For the BDA-03 test, Inferno (Program Edition) is flagging the test as failed if the server doesn't error when a client requests the user/*.read scope. This is based on language in <a href=\"http://hl7.org/fhir/uv/bulkdata/authorization/index.html#scopes\">backend auth guide</a>.  I think that check should just confirm that the server doesn't <em>grant</em> user scopes.  Our server will ignore any invalid scopes presented, and will return the scopes registered to the client during client registration (which can only be system scopes for backend  clients).</p>",
        "id": 247923586,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1627913239
    },
    {
        "content": "<p>Do folks agree in my interpretation?   If so, I can write a github issue to update BDA-03 to validate the server-issued scopes instead of the HTTP response code when a client sends invalid scopes.</p>",
        "id": 247923850,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1627913365
    },
    {
        "content": "<p>I agree that ignoring requested Scopes is fine, assuming you are in fact granting something and returning what you granted in the Scopes array of the generated access token response. If you're talking about issuing an access token with zero scopes because all of the requested Scopes were ignored and no default Scopes are configured... That seems like more dubious behavior.</p>",
        "id": 247927740,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1627915419
    },
    {
        "content": "<p>(in any case, it's not illegal or nonsensical or an application to request some combination of system level Scopes and user level scopes, using some combination of the application's own authority and the authority of a relevant user -- though this would be in the context of an authorizations code Grant (i.e., an app launch) ... We are clarifying this as we merge the backend Services content into the core SMART specification. I would not want to see the test suite and force behavior that would limit these kinds of possibilities )</p>",
        "id": 247927977,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1627915541
    },
    {
        "content": "<p>BDA-03 tests using 'user/*.read' scope and expects a 4xx error. <span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span> What is the response from your server?</p>",
        "id": 247933846,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1627918629
    },
    {
        "content": "<p>200-OK, but we ignored the user scope and instead returned a token with the system scopes the client was registered for.</p>",
        "id": 247934086,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1627918757
    },
    {
        "content": "<p>Doesn't this violate <a href=\"https://tools.ietf.org/html/rfc6749#section-5.2?--\">https://tools.ietf.org/html/rfc6749#section-5.2?--</a></p>",
        "id": 247934459,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1627918961
    },
    {
        "content": "<blockquote>\n<p>The authorization server responds with an HTTP 400 (Bad Request)<br>\n   status code (unless specified otherwise) and includes the following<br>\n   parameters with the response:<br>\n         invalid_scope<br>\n               The requested scope is invalid, unknown, malformed, or<br>\n               exceeds the scope granted by the resource owner.</p>\n</blockquote>",
        "id": 247934546,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1627919012
    },
    {
        "content": "<p>That is from the auth code grant section.  The client credentials grant section (<a href=\"https://datatracker.ietf.org/doc/html/rfc6749#section-4.4.2\">https://datatracker.ietf.org/doc/html/rfc6749#section-4.4.2</a>) references section 3.3, which includes this blurb:</p>\n<div class=\"codehilite\"><pre><span></span><code>The authorization server MAY fully or partially ignore the scope\n   requested by the client, based on the authorization server policy or\n   the resource owner&#39;s instructions.  If the issued access token scope\n   is different from the one requested by the client, the authorization\n   server MUST include the &quot;scope&quot; response parameter to inform the\n   client of the actual scope granted.```\n</code></pre></div>",
        "id": 247941659,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1627923323
    },
    {
        "content": "<p>(Agreed with Cooper's reference -- and in the context of an authorization code grant, I wouldn't say that <code>user/*.read</code> or, say, <code>system/*.read</code> is \"invalid\". They might just not be authorized.)</p>",
        "id": 247945343,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1627924994
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span> Would you mind to create a github issue so we can track it?</p>",
        "id": 247953836,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1627929510
    },
    {
        "content": "<p>Done.  <a href=\"https://github.com/onc-healthit/inferno-program/issues/331\">https://github.com/onc-healthit/inferno-program/issues/331</a></p>",
        "id": 247954684,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1627929944
    }
]