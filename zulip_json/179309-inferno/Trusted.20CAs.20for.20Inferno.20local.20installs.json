[
    {
        "content": "<p>I've been digging through the source and the docker containers, but figured I'd just ask in case any of you know off the top of your head.  I have a local deploy of Inferno using your docker containers. I want to add a local Cert Authority as trusted for the Ruby HTTP client you're using.  Any idea where I can drop the CA cert in the docker container for Ruby to pick it up?</p>",
        "id": 236407509,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1619557277
    },
    {
        "content": "<p>I do not -- I recall it being a little tricky for some reason, but we should figure it out.  We do have flags in <code>config.yml</code> to turn off SSL certificate validation (<code>disable_verify_peer</code>) and you can also disable the handful of tests we have throughout for checking TLS versions supported by the server (<code>disable_tls_tests</code>) .  But that isn't a great solution. FYI <span class=\"user-mention\" data-user-id=\"191647\">@Michael O'Keefe</span> <span class=\"user-mention\" data-user-id=\"225612\">@Stephen MacVicar</span></p>",
        "id": 236509781,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1619617804
    },
    {
        "content": "<p>I believe you can put it anywhere and set the <code>SSL_CERT_FILE</code> environment variable to the path to the cert chain you want to use.</p>",
        "id": 236510435,
        "sender_full_name": "Stephen MacVicar",
        "timestamp": 1619618068
    },
    {
        "content": "<p>I believe that will make ruby ONLY look at that cert file, so if you need to add your custom cert to the system certs rather than replacing them it's a bit more complicated.</p>",
        "id": 236511185,
        "sender_full_name": "Stephen MacVicar",
        "timestamp": 1619618370
    },
    {
        "content": "<p>Finally got around to testing this.  I ended up making edits to the Dockerfile to append my local CA cert to the existing /etc/ssl/certs/ca-certificates.crt in the container, and then adding ENV SSL_CERT_FILE=/etc/ssl/certs/ca-certificates.crt.   I couldn't figure out where openssl was pulling the default cert list from without SSL_CERT_FILE set.  </p>\n<p>You can test that the CA cert is working using <code>openssl s_client -connect servername.com:443</code>.  If openssl is happy, then ruby will by happy.</p>",
        "id": 245104404,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1625608981
    }
]