[
    {
        "content": "<p>I noticed that Inferno is validating that scopes are of the format patient/... for a few resources that have no patient context. These should allow user/... : Organization, Location, and Practitioner</p>",
        "id": 226017290,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1613060585
    },
    {
        "content": "<p>these also look like newer tests - is there a reason they were added?</p>",
        "id": 226017313,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1613060599
    },
    {
        "content": "<p>I believe these tests have been in place in their current form since v1.1 from July, with some minor updates when ONC provided guidance around PractitionerRole and RelatedPerson.  And we regenerated some files with the move to US Core v3.1.1, which updated a few class names but that's about it.  I can dig deeper if you'd like though.</p>",
        "id": 226039408,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1613069588
    },
    {
        "content": "<p>Is there a list of resources with no patient context, can it be inferred (e.g. if it has a direct reference to the patient in the resource) or is it completely up to the discretion of the server?</p>",
        "id": 226046239,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1613072208
    },
    {
        "content": "<p>Ours typically is just resources that don't have references to patients</p>",
        "id": 226050578,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1613074201
    },
    {
        "content": "<p>since there's no way to restrict it/meet that patient/... requirement in SMART</p>",
        "id": 226050657,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1613074224
    },
    {
        "content": "<p>If an app asks for patient/Organization.read do you change that to user/Organization.read when asking the patient for authorization?  Or do you just ignore it as invalid (or return an error or something similar)?</p>",
        "id": 226052040,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1613074906
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192576\">@Robert Scanlon</span>  sorry, just saw this. We ignore it as invalid as this would/could change expectation by the app during runtime. The app would need to ask for the user/... scopes</p>",
        "id": 228442044,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614703419
    },
    {
        "content": "<p>There were previous discussions out on SMART about this, though it's been a while</p>",
        "id": 228442168,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614703466
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> -- we've been looking at this on our side too.  I just ask because I'm trying to understand how the flexibility here impacts app developers.  It certainly would be nice for app developers if they can expect consistency (across all implementations) in the scopes that enable access to the complete set of patient data represented in USCDI/US Core.</p>",
        "id": 228451387,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614706497
    },
    {
        "content": "<p>If an app asks for patient/Organization.read but you grant user/Organization.read, then the app wouldn't have to figure out ahead of time where your system decided to draw the \"about/not-about the patient\" line.  My understanding is that this is allowed: \"As with any requested scope, the scopes ultimately granted by the authorization server may differ from the scopes requested by the client! When dealing with wildcard clinical scope requests, this is often true.\"</p>",
        "id": 228452039,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614706703
    },
    {
        "content": "<p>Doing that patient/Organization.read to user/Organization.read switch isn't a requirement, obviously, but it seems like it would be a nice solution to this problem.  Unless I'm misunderstanding.</p>",
        "id": 228455458,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614707848
    },
    {
        "content": "<p>I don't know why any EHR would allow for patient/... scopes as there is no way to enforce that</p>",
        "id": 228472766,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614714259
    },
    {
        "content": "<p>cc <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>  as well, I know we've talked about this (and I think talked about it more with SMART 2.0)</p>",
        "id": 228472797,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614714277
    },
    {
        "content": "<p>there is no patient on these resources in FHIR</p>",
        "id": 228472815,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614714288
    },
    {
        "content": "<p>requiring the auth server to know which scopes can be \"switched out\" requires a pretty specifically built auth server, and I know many use off the shelf ones</p>",
        "id": 228473100,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614714380
    },
    {
        "content": "<p>(our server uses the change in scope for when the patient removes scopes or when the app wasn't authorized to request them - it isn't smarter than that)</p>",
        "id": 228473156,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614714408
    },
    {
        "content": "<p>Also the test fails b/c it doesn't see patient/Location.read (I can update the test to ask for different scopes already) so I think it would fail the same way if an auth server \"swapped the scope out\"</p>",
        "id": 228473762,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614714633
    },
    {
        "content": "<blockquote>\n<p>there is no patient on these resources in FHIR</p>\n</blockquote>\n<p>Currently scopes like <code>patient/Organization.read</code> are allowed/valid in SMART with the interpretation of something like \"Organizations the EHR determines you need access to in order to make in-context patient record\".</p>",
        "id": 228479453,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1614716794
    },
    {
        "content": "<p>I don't know how testable this is or should be though; to Jenni's point, I understand Cerner doesn't support scopes like this.</p>",
        "id": 228479537,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1614716830
    },
    {
        "content": "<blockquote>\n<p>Currently scopes like patient/Organization.read are allowed/valid in SMART with the interpretation of something like \"Organizations the EHR determines you need access to in order to make in-context patient record\".</p>\n</blockquote>\n<p>I think the benefit on the EHR side is that you don't have to expose all Organizations/Practitioners/etc that a user has access to, to an app that only really needs information relating to the patient in context.  The benefit on the app side is that  they can expect consistency between implementations regarding what scopes to request if they really just want a single patient's data.</p>",
        "id": 228490913,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614721214
    },
    {
        "content": "<p>Agreed <span class=\"user-mention\" data-user-id=\"192576\">@Robert Scanlon</span>!</p>",
        "id": 228493730,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1614722313
    },
    {
        "content": "<p>It is very hard for an EHR to determine what practitioners a patient \"should\" have access to</p>",
        "id": 228624884,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614789977
    },
    {
        "content": "<p>IE: If I limited a practitioner by id lookup to only the practitioners that existed somewhere in the patient's history... I would basically be preventing them from scheduling new appointments or finding new providers. Or, from an app side, from recommending a referral etc</p>",
        "id": 228625008,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614790028
    },
    {
        "content": "<p>that also doesn't abide with how patient/... is defined in SMART today</p>",
        "id": 228625040,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614790040
    },
    {
        "content": "<p>same issue for organization and location. Why would I prevent the doctor from seeing all their orgs if they're trying to do a referral for a patient? Just because the patient hasn't been there? I think that would be surprising</p>",
        "id": 228625124,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614790073
    },
    {
        "content": "<p>But more to the root here, can we fix the assumption in inferno? This isn't required by any spec or CEHRT</p>",
        "id": 228625206,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614790092
    },
    {
        "content": "<blockquote>\n<p>If I limited a practitioner by id lookup to only the practitioners that existed somewhere in the patient's history... I would basically be preventing them from scheduling new appointments or finding new providers. Or, from an app side, from recommending a referral etc.</p>\n</blockquote>\n<p>Those seem to valid uses of user/Practioner.read (find practitioner near you or something), but that those are different capabilities than just \"give me my full patient record\", right?</p>",
        "id": 228628839,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614791328
    },
    {
        "content": "<p>our APIs are used for far more than just patient record access. The provider use cases ONC requires are for provider workflows, not just \"give me my record\"</p>",
        "id": 228632979,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614792832
    },
    {
        "content": "<p>Again, I think we've established that it's reasonable that an EHR doesn't support patient/... for resources that have no patient record tied to them. <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>  if we think this is a \"valid\" scope for SMART, we likely need to clarify what it means to enforce a \"patient\" specific limitation on resources that have no patient associated</p>",
        "id": 228633340,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614792968
    },
    {
        "content": "<p>I just would like inferno to be able to deal with this given that it's not clear what a patient restriction should even do here</p>",
        "id": 228633440,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614792999
    },
    {
        "content": "<p>Could you also submit feedback to ONC <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span>?  I've been looking for a clearcut reason I can use to justify relaxing this check here, and I was pushing back a bit because I do think the scope patient/Pracitioner.read makes sense at least.  Whether or not you need to support that in order to satisfy the requirements of the rule which layers requirements from USCDI, US Core, SMART, etc isn't completely cut and dry to me.  It seems like there isn't enough justfication for us keep this, and we should remove it.  But removing it may have some ramifications of what can test at all (e.g. can I justify requiring systems to use any patient/* scopes at all?)</p>",
        "id": 228636825,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614794249
    },
    {
        "content": "<p>(maybe we can't justify any testing around the shape of scopes, but that would be disappointing given how much content there is describing what scopes should look like)</p>",
        "id": 228637302,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614794419
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>  what would your expectation be if a system was supposed to enforce patient/Location.read? IE: what does that mean?</p>",
        "id": 228657277,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614801526
    },
    {
        "content": "<p>and do we know what other systems are doing today?</p>",
        "id": 228657296,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614801538
    },
    {
        "content": "<p>It means \"allow the client to see the Location resources that the server deems relevant for the in-context patient\"</p>",
        "id": 228661243,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1614802920
    },
    {
        "content": "<p>(To my mind, a \"nice\" implementation might be: locations where this patient has received care or locations otherwise mentioned by resources in this patient's compartment... but an \"acceptable\" implementation might be: no locations.)</p>",
        "id": 228661370,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1614802959
    },
    {
        "content": "<p>the math to find all locations/orgs a patient has access to seems excessive. Do we know how any of the reference servers deal with this?</p>",
        "id": 228661759,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614803106
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> or <span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span> how does Epic deal with this?</p>",
        "id": 228661804,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614803116
    },
    {
        "content": "<p>(note: inferno will also fail today if the location lookup fails when patient/Location.read has been issued)</p>",
        "id": 228661871,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614803145
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> -- which test are you talking about specifically?</p>",
        "id": 228666311,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614804872
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191356\">Jenni Syed</span> <a href=\"#narrow/stream/179309-inferno/topic/Inferno.20requiring.20patient.20focus.20for.20non-patient.20resources/near/228661759\">said</a>:</p>\n<blockquote>\n<p>the math to find all locations/orgs a patient has access to seems excessive. Do we know how any of the reference servers deal with this?</p>\n</blockquote>\n<p>In Firely Server, we essentially treat patient/Location.read as a user/Location.read. We check the patient compartment definition and if the resource is outside of it, all resources are returned if the patient/user has access to the resource type.</p>",
        "id": 228673011,
        "sender_full_name": "Alexander Zautke",
        "timestamp": 1614807430
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191356\">Jenni Syed</span> <a href=\"#narrow/stream/179309-inferno/topic/Inferno.20requiring.20patient.20focus.20for.20non-patient.20resources/near/228661871\">said</a>:</p>\n<blockquote>\n<p>(note: inferno will also fail today if the location lookup fails when patient/Location.read has been issued)</p>\n</blockquote>\n<p>I think I now realize what you meant.  If you grant patient/Location.read but do not allow access to all location references that Inferno comes across in the 'Single Patient API' tests, then the test will fail (e.g. USCPROC-11: Every reference within Procedure resources can be read: Fail: location did not resolve: Server returned 401).  This is intentional because a prerequisite of the test is a token that grants access to all resource types we know need to be supported/granted because of USCDI.</p>",
        "id": 228675030,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614808272
    },
    {
        "content": "<p>The one that fails for not seeing a specific patient/Location.read (seeing user/Location.read instead, or user/Practitioner.read, user/Organiztion.read) scope is SPB-OSLS-10. AVU-01 also will fail if not ll scopes are issues/the user scopes above are in place instead.</p>",
        "id": 228680090,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614810427
    },
    {
        "content": "<p>And then yes, those are the \"per call\" fails if we didn't issue user/Location.read and instead issued patient/Location.read</p>",
        "id": 228680134,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614810447
    },
    {
        "content": "<p>(same for Practitioner and Organization)</p>",
        "id": 228680164,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614810464
    },
    {
        "content": "<p>One way to reconcile app requests could be for Cerner, when an app requests <code>patient/Location.read</code>, to prompt the user about granting <code>user/Location.read</code> -- rather than requiring apps to ask for this \"in just the right way\". I expect you've already considered this though (and possibly are already doing this?) <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span>.</p>",
        "id": 228680703,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1614810711
    },
    {
        "content": "<p>We discussed this earlier in the thread, they are not currently doing this.  I think this would be a great solution because it allows client developers to ask for what they want in the same way across all implementations, but allows the EHR to grant more than was asked (with user's permission) if they do not support that fine a level of granularity.  My understanding is this is similar to how wildcard scopes can be handled for systems that do not want to grant a wildcard scope.</p>",
        "id": 228681682,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614811170
    },
    {
        "content": "<p>Though, there are challenges with doing this as well, because it requires some more intelligence on the auth server side than may be supported out-of-the-box for 3rd party auth software.</p>",
        "id": 228681856,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614811256
    },
    {
        "content": "<p>Correct, that would require our auth server to be very specifically knowledgeable about the FHIR specification specifics. Also, we don't prompt all users (like practitioners) - so that's also an interupt to workflow that wouldn't be good. Again, the tests <em>still</em> fail in inferno if we did that because it doesn't like that we issued user/Location... instead of patient/...</p>",
        "id": 228784842,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614869467
    },
    {
        "content": "<p>We haven't had an issue with apps needing to get these scopes before, it's something that is obvious as soon as they start testing in our public sandbox since it fails fast (the FHIR server fails the request since it doesn't recognize those scopes/can't enforce them). They typically get the failure, and then update the app to request user/... instead</p>",
        "id": 228785398,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614869660
    },
    {
        "content": "<p>This is consistent with past conversations we've had around SMART for these issues</p>",
        "id": 228785657,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614869756
    },
    {
        "content": "<blockquote>\n<p>We haven't had an issue with apps needing to get these scopes before, it's something that is obvious as soon as they start testing in our public sandbox since it fails fast</p>\n</blockquote>\n<p>just to be clear though, these are the kinds of \"paper cuts\" that add up for developers, they need to maintain exception files or other special case handlers describing different behaviors required to make each different server happy. I'm not saying this is terrible (these are small details to be sure); but it does add up and contribute to a perception that interoperability is weaker.</p>",
        "id": 228808154,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1614876606
    },
    {
        "content": "<p>I think, before we did this, SMART would need to describe <em>what</em> should happen. Since we're dealing with things that have security effects, my goal has been making sure we only support <em>enforceable</em> things based on past discussions we've had. If an app, for example, thinks that patient/Location.read is going to do what was described above (limit to only locations the user has ever had access to) that is a huge difference both in describing consent to the user as well as what the app expects to happen</p>",
        "id": 228809317,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614877005
    },
    {
        "content": "<p>this is the same issue as the wildcard discussion :) The spec describes a behavior. It should be a behavior that is consistently enforced (and well understood)</p>",
        "id": 228809388,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614877035
    },
    {
        "content": "<p>having 2 different systems implement a scope 2 different ways is more impactful, I would think</p>",
        "id": 228809427,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614877056
    },
    {
        "content": "<p>And the \"compartment\" rule is what we've been using to determine if a patient/.. scope should be supported for a resource, since it can't be limited in that way. IE: if it's not in the patient compartment, the patient/... scope isn't enforceable as defined by SMART</p>",
        "id": 228809572,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614877101
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191356\">Jenni Syed</span> <a href=\"#narrow/stream/179309-inferno/topic/Inferno.20requiring.20patient.20focus.20for.20non-patient.20resources/near/228784842\">said</a>:</p>\n<blockquote>\n<p>Again, the tests <em>still</em> fail in inferno if we did that because it doesn't like that we issued user/Location... instead of patient/...</p>\n</blockquote>\n<p>Yes, the tests today set a higher bar (we ask for patient scopes for all USCDI-relevant resources, you grant us patient scopes for all USCDI-relevant resources).  This would involve us changing the test to be a lower bar -- one of many potential lower bars.  I'd be happy to put up a build that allows for this, but if it has other technical issues that make it a non-starter then it probably wouldn't be worth the effort.</p>",
        "id": 228809726,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614877166
    },
    {
        "content": "<p>We're reaching out to ONC for clarification on this. If they come back and say we still have to support this my next ask is going to be to clarify this in the SMART spec so we all have a good understanding of what's expected :/</p>",
        "id": 228809939,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614877221
    },
    {
        "content": "<p>we've already seen several possible behaviors described above :)</p>",
        "id": 228810024,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614877242
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191356\">Jenni Syed</span> <a href=\"#narrow/stream/179309-inferno/topic/Inferno.20requiring.20patient.20focus.20for.20non-patient.20resources/near/228809939\">said</a>:</p>\n<blockquote>\n<p>We're reaching out to ONC for clarification on this. If they come back and say we still have to support this my next ask is going to be to clarify this in the SMART spec so we all have a good understanding of what's expected :/</p>\n</blockquote>\n<p>Thanks <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> -- I appreciate your help sorting this out.  This one is a real pain because I recognize it is a paper-cut level issue for developers given where you have drawn the line. But it's not nothing, and I'm having trouble defining exactly what the minimum expectation here is for \"permission-patient\" and \"permission-user\".  If there is no minimum expectation (e.g. you can just support patient/Patient.read and user/Patient.read and do whatever you want elsewhere), then I think other implementers are free to turn it into a more than a paper-cut level issue.</p>",
        "id": 228825627,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614882668
    },
    {
        "content": "<p>I think it would be helpful to ONC if there was some kind of consensus in SMART community on what the accepted minimum expectation is.   Maybe there is consensus there and I just missed it.  Patient compartment for patient-level scope?  Or is it just not possible to define a minimum expectation, and ONC needs to decide what they think it should be given the goal of their certification program (which could very well be no minimum expectation -- I don't know).</p>",
        "id": 228830416,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614884456
    },
    {
        "content": "<p>Again, I appreciate the help.</p>",
        "id": 228830594,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614884525
    },
    {
        "content": "<p>I've always understood it as patient/... really only can apply to patient compartment resources</p>",
        "id": 228841141,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614888370
    },
    {
        "content": "<p>but yes, agree that SMART would need a stance</p>",
        "id": 228841168,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1614888379
    },
    {
        "content": "<p>The CCG was updated today with the clarification here: <a href=\"https://www.healthit.gov/test-method/standardized-api-patient-and-population-services#ccg\">https://www.healthit.gov/test-method/standardized-api-patient-and-population-services#ccg</a></p>",
        "id": 233400132,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1617747812
    },
    {
        "content": "<blockquote>\n<p>For demonstration of the SMART IG \"Standalone Launch\" steps, health IT developers are permitted to scope US Core IG resources that do not exist in either the standard adopted at § 170.213 (USCDI version 1) or the \"Compartment Patient\" section of the standard adopted at § 170.215(a)(1) (HLY FHIR Release 4.0.1) as either patient/[Resource] or user/[Resource]. These resources include “Encounter,” “Device,” “Location,” “Medication,” “Organization,” “Practitioner,” and “PractitionerRole.” Health IT developers must document their supported scopes according to the technical documentation requirements at § 170.315(g)(10)(viii)(A) and § 170.404(a)(2).</p>\n</blockquote>",
        "id": 233400227,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1617747863
    },
    {
        "content": "<p>This seems to be in line with allowing user/Practitioner.read and not patient/Practitioner.read (for example)</p>",
        "id": 233400279,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1617747894
    },
    {
        "content": "<p>Same question as the other thread: do we know how long it might take to get inferno tests updated to account for this, knowing there are several changes likely that will come from this clarification.</p>",
        "id": 233400329,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1617747929
    },
    {
        "content": "<p>Yes, same answer as the other thread :). We'll only require demonstration of the intersection of patient compartment + USCDI-mapped resources under the patient scope, which means we'll allow user/Practioner.read, user/Location.read etc.  It will be in our next release, which will be in a week or two.</p>",
        "id": 233482324,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1617800407
    },
    {
        "content": "<p>Thanks for the help on this!</p>",
        "id": 233488172,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1617802537
    }
]