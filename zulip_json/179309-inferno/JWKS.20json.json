[
    {
        "content": "<p>Hello <span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span> </p>\n<p>This is regarding jwks url. Please see screenshot. <br>\n<a href=\"/user_uploads/10155/JBGVH_PME3yvGxiG792SZqM2/jwks.png\">jwks.png</a><br>\nHere, do we have to use the highlighted jwks url in our oauth provider? Although comment here says \"if supported\". </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/JBGVH_PME3yvGxiG792SZqM2/jwks.png\" title=\"jwks.png\"><img src=\"/user_uploads/10155/JBGVH_PME3yvGxiG792SZqM2/jwks.png\"></a></div><p>Even without using this URL, all the test cases pass (please check in the background of the screenshot). <br>\nPlease let me know your thoughts</p>\n<p>Thanks,<br>\nSagar</p>",
        "id": 272105770,
        "sender_full_name": "Sagar Sarvankar",
        "timestamp": 1645012350
    },
    {
        "content": "<p>This is used for bulk data client registration. Please take a look of Bulk Data IG <a href=\"http://hl7.org/fhir/uv/bulkdata/STU1.0.1/authorization/index.html#registering-a-smart-backend-service-communicating-public-keys\">Registering a SMART Backend Service</a> section. Using jwks url is strongly recommended by Bulk Data IG. If a server does not supporting using jwks url, the server can download the jwks and host it locally.</p>",
        "id": 272120409,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1645020664
    },
    {
        "content": "<p>Ok, thank you <span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span>  . I will look into details about that one.</p>",
        "id": 272145606,
        "sender_full_name": "Sagar Sarvankar",
        "timestamp": 1645031390
    },
    {
        "content": "<p>Hello <span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span> ,</p>\n<p>We configured the \"JWK Set URL\" (highlighted in our earlier screenshot), in our OAuth server. But while validating the token it fails, with the message \"The JSON Web Token (JWT) cannot be validated because a signing key cannot be found\". <br>\nDo we need to get the private key (asymmetric key pair) for <a href=\"https://inferno.healthit.gov/inferno/.well-known/jwks.json\">https://inferno.healthit.gov/inferno/.well-known/jwks.json</a>, that will be used by our OAuth server to sign the token?</p>\n<p>Please help. <br>\nThank you.</p>",
        "id": 272237663,
        "sender_full_name": "Sagar Sarvankar",
        "timestamp": 1645092375
    },
    {
        "content": "<p>You misunderstood the backend service workflow (<a href=\"http://hl7.org/fhir/uv/bulkdata/STU1.0.1/authorization/index.html\">http://hl7.org/fhir/uv/bulkdata/STU1.0.1/authorization/index.html</a>). This private key is used by client to sign its client assertion. Auth server use the public key to verify the received client assertion. (<a href=\"http://hl7.org/fhir/uv/bulkdata/STU1.0.1/authorization/index.html#obtaining-an-access-token\">http://hl7.org/fhir/uv/bulkdata/STU1.0.1/authorization/index.html#obtaining-an-access-token</a>)</p>",
        "id": 272266329,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1645107988
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span> . I will look further in these links.</p>",
        "id": 272502791,
        "sender_full_name": "Sagar Sarvankar",
        "timestamp": 1645258743
    },
    {
        "content": "<p>Hello <span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span> </p>\n<p>This is regarding 'ATT-10: Health IT developer confirms the Health IT module does not cache the JWK Set received via a TLS-protected URL for longer than the cache-control header received by an application indicates'. </p>\n<p>Does this talk about the URL highlighted in the screenshot here? <a href=\"/user_uploads/10155/-k0bnlKtiXlEXQd9lecPBgE8/infernojwks.png\">infernojwks.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/-k0bnlKtiXlEXQd9lecPBgE8/infernojwks.png\" title=\"infernojwks.png\"><img src=\"/user_uploads/10155/-k0bnlKtiXlEXQd9lecPBgE8/infernojwks.png\"></a></div><p>Thank you.<br>\nSagar</p>",
        "id": 273618244,
        "sender_full_name": "Sagar Sarvankar",
        "timestamp": 1646130286
    },
    {
        "content": "<p>Hello <span class=\"user-mention\" data-user-id=\"311435\">@James Threatte</span> ,<br>\nI just wanted to check if <span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span>  is on leave. I had posted this question few days back and I did not hear from <span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span> . <br>\nAlso, if you are the right person, please let me know your thoughts on the question I posted.</p>\n<p>Thank you,<br>\nSagar</p>",
        "id": 274645917,
        "sender_full_name": "Sagar Sarvankar",
        "timestamp": 1646804428
    },
    {
        "content": "<p>Yes, that is the URL they are talking about</p>",
        "id": 274695440,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1646836372
    },
    {
        "content": "<p>Ok. In ATT-10 it says the Health IT developer 'confirms' ..., here how do we confirm that this is the case? We have configured this URL in our app registration in oauth application. <br>\nHow ATT-10 will be a pass? Is this demonstration step or attestation?</p>\n<p>Regards,<br>\nSagar</p>",
        "id": 274696643,
        "sender_full_name": "Sagar Sarvankar",
        "timestamp": 1646836882
    },
    {
        "content": "<p>Modify what is returned by that URL, the server should then use the new values after the time specified by the cache-control header</p>",
        "id": 274700098,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1646838237
    },
    {
        "content": "<p>The URL <a href=\"https://inferno.healthit.gov/inferno/.well-known/jwks.json\">https://inferno.healthit.gov/inferno/.well-known/jwks.json</a> does not update the keys here and it has not updated in last more than 4-5 months.</p>",
        "id": 274720088,
        "sender_full_name": "Sagar Sarvankar",
        "timestamp": 1646846037
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"392120\">@Sagar Sarvankar</span> Same as my answer in ATT-08 question. ATT tests is run by testing lab out of Inferno automatic testing. Testing lab uses Inferno to document the test result and observations. I have no knowledge about testing lab's procedure. This is based on ONC (g)(10) testing procedure</p>\n<blockquote>\n<p>The health IT developer demonstrates that the Health IT Module does not cache a JWK Set received via a TLS-protected URL for longer than the “cache-control” header sent by an application indicates.</p>\n</blockquote>\n<p>To answer second part of your question,  <a href=\"https://inferno.healthit.gov/inferno/.well-known/jwks.json\">https://inferno.healthit.gov/inferno/.well-known/jwks.json</a>  is the JWK set Inferno (as Bulk Data client) provides to the Health IT Module (as Bulk Data server) to verify the request payload. This test is about Bulk Data server SHALL NOT cache client provided JWK set indefinitely.<br>\nThe analogy is that I MAY use the same password but server SHALL NOT store my credential on sever side indefinitely.</p>",
        "id": 274728116,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1646848991
    },
    {
        "content": "<p>In the case of Inferno, the fact that we do not rotate our keys is done to make it easier for users to run inferno behind their own firewalls, and so they do not need to expose a running instance of inferno somewhere addressable by the bulk data server.  Since the Inferno client does not rotate its keys, we cannot test requirement for servers to refresh the keys automatically based on the cache-control header, and therefore we unfortunately require it to be checked outside of the Inferno tool.</p>",
        "id": 274748173,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1646857890
    },
    {
        "content": "<p>In this case, you could mock up a lightweight jwks endpoint for a fake client, show your system fetch those keys if you register a client that points to that URL for their keys, then change the keys served at hte endpoint  (after whenever the cache header expires), and show those keys being retrieved by the system.  It doesn't have to be the Inferno client, and the client doesn't actually have to work -- since you are just showing that limited requirement.</p>",
        "id": 274749271,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1646858422
    },
    {
        "content": "<p>Asking the test lab that are using for what they are expecting is a good idea though.</p>",
        "id": 274749387,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1646858477
    },
    {
        "content": "<p>Thank you, <span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> , <span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span>  and <span class=\"user-mention\" data-user-id=\"192576\">@Robert Scanlon</span> . I will look further into this.</p>",
        "id": 274840098,
        "sender_full_name": "Sagar Sarvankar",
        "timestamp": 1646921684
    }
]