[
    {
        "content": "<p>Hello, I've been working on trying out inferno community and program editions with connecting to a postgres database. I have a few questions about the postgres setup.</p>\n<ul>\n<li>Is there a particular reason the postgres version is set to 9.6 in the docker compose file? Version 9 will be EOL in November, I would like to use something where I don't have to worry about using a version that is not getting security updates. I haven't tried using it with a newer version of postgres yet, but I think I will try it later today.</li>\n<li>Were there any plans to update the configuration methods we can load username/password/host from environment variables? Since the database contains client ids, client secrets, auth tokens, and PHI we need the configuration of the deployed postgres database to be secure, which means we need to put some configuration information in secret stores and load them into our runtime environment via environment variables or some other means. Checking passwords into source code in a yaml file is not secure, which is the only way I am aware of to configure it at the moment.</li>\n</ul>",
        "id": 247634155,
        "sender_full_name": "Nathan Loyer",
        "timestamp": 1627589100
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"279806\">Nathan Loyer</span> <a href=\"#narrow/stream/179309-inferno/topic/Inferno.20Deployment.20w.2F.20Postgres/near/247634155\">said</a>:</p>\n<blockquote>\n<ul>\n<li>Is there a particular reason the postgres version is set to 9.6 in the docker compose file?</li>\n</ul>\n</blockquote>\n<p>The reason is probably something like that is the verison I installed on my machine a long time ago, so I used it for my initial testing with, and then used that same version for the docker image. I expect that would be an easy update.</p>\n<blockquote>\n<ul>\n<li>Were there any plans to update the configuration methods we can load username/password/host from environment variables?</li>\n</ul>\n</blockquote>\n<p>No, but that is a reasonable request and should be pretty easy to implement.</p>",
        "id": 247937427,
        "sender_full_name": "Stephen MacVicar",
        "timestamp": 1627920779
    },
    {
        "content": "<p>thanks for the responses. </p>\n<p>I have been testing with postgres 13 running in RDS in AWS and it's been working well so far. I also updated my docker-compose to use 13 and it was working in my limited tests.</p>\n<p>I tried to hack adding environment variable overrides to the config file settings and I couldn't get it all to work. It would probably be best if yall implemented it. I had updated it in the database utility, and had to add overrides in the Rakefile for the migration utility, but there was another place that wasn't getting the overrides still and I gave up at that point. It looked like it was an issue with the db:create command. I wound up adding to the <a href=\"http://run.sh\">run.sh</a> script instead to write the env var settings over the existing yaml file in the docker image using sed and that worked. It's not ideal though and I'd prefer if the application could handle it without writing the secrets to the filesystem.</p>",
        "id": 247978596,
        "sender_full_name": "Nathan Loyer",
        "timestamp": 1627942817
    },
    {
        "content": "<p>FYI, this PR should address the configuration issue: <a href=\"https://github.com/onc-healthit/inferno/pull/580\">https://github.com/onc-healthit/inferno/pull/580</a></p>",
        "id": 248395388,
        "sender_full_name": "Stephen MacVicar",
        "timestamp": 1628104713
    },
    {
        "content": "<p>Thanks a lot. I just added a comment to the PR. I've been configuring a password for my postgres users to increase database security and need to be able to set that as well in order to revert the customizations I made.</p>",
        "id": 248620905,
        "sender_full_name": "Nathan Loyer",
        "timestamp": 1628261632
    },
    {
        "content": "<p>Looks like those have been merged in community and program editions. Thanks so much for the quick turnaround!</p>",
        "id": 249621874,
        "sender_full_name": "Nathan Loyer",
        "timestamp": 1629135792
    }
]