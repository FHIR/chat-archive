[
    {
        "content": "<p>I am having an issue with Encounter Tests not finding encounter references in resources. This is in the program edition online version. The reported message is \"No Encounter references found from the prior searches\".</p>\n<p>I know that at least two types of resources have encounters - conditions and medicationrequest.</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n  &quot;resource&quot;: {\n    &quot;resourceType&quot;: &quot;Condition&quot;, [...]\n    }, [...]\n    &quot;encounter&quot;: {\n      &quot;reference&quot;: &quot;Encounter/200007-Encounter-10001&quot;\n    }\n  }\n}\n</code></pre></div>\n\n\n<p>and</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n  &quot;resource&quot;: {\n    &quot;resourceType&quot;: &quot;MedicationRequest&quot;, [...]\n    }, [...]\n    &quot;encounter&quot;: {\n      &quot;reference&quot;: &quot;Encounter/200007-Encounter-10001&quot;\n    },\n},\n</code></pre></div>\n\n\n<p>Any advice on what the issue might be or how to debug this?</p>",
        "id": 208751828,
        "sender_full_name": "Matthew Dugal",
        "timestamp": 1598996008
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191473\">@Matthew Dugal</span> This github issue explained how Encounter reference works: <a href=\"https://github.com/onc-healthit/inferno-program/issues/153\">https://github.com/onc-healthit/inferno-program/issues/153</a></p>",
        "id": 208762847,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1599003757
    },
    {
        "content": "<p>This is helpful. Thank you!</p>",
        "id": 208825397,
        "sender_full_name": "Matthew Dugal",
        "timestamp": 1599054253
    },
    {
        "content": "<p>I believe that mixing US Core Encounter references and base FHIR Encounter references in US Core like this was unintentional and is fixed in the upcoming US Core Errata release.  But in the meantime you should add at least one Encounter reference in a spot that expects US Core Encounters (as described in the above ticket).</p>",
        "id": 208828080,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1599055344
    },
    {
        "content": "<p>I added encounter to the DocumentReference.context (as mentioned in the github issue) and still no luck getting my encounters recognized.</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n  &quot;resource&quot;: {\n    &quot;resourceType&quot;: &quot;DocumentReference&quot;, [...]\n    }, [...]\n    &quot;context&quot;: {\n      &quot;encounter&quot;: [ {\n          &quot;reference&quot;: &quot;Encounter/200007-Encounter-10001&quot;\n        }\n      ],\n [...]\n</code></pre></div>\n\n\n<p>Any ideas?</p>",
        "id": 208869467,
        "sender_full_name": "Matthew Dugal",
        "timestamp": 1599072414
    },
    {
        "content": "<p>Strange!  In our test data it appears that a reference in DocumentReference.context.encounter is a reference that is used in the Encounter tests  later.  Did you 'Rerun All Tests'?  Or just the skipped ones?</p>",
        "id": 208872122,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1599073478
    },
    {
        "content": "<p>It's a new test altogether navigating to the home page and starting over. We do have at least one document reference test not passing. Maybe it's using that particular one?</p>",
        "id": 208872911,
        "sender_full_name": "Matthew Dugal",
        "timestamp": 1599073808
    },
    {
        "content": "<p>Do you know if it is all test cases or just specific ones?</p>",
        "id": 208873219,
        "sender_full_name": "Matthew Dugal",
        "timestamp": 1599073936
    },
    {
        "content": "<p>Ok. DocumentReference test _definitely_ sees my encounter. I see it requesting the encounter resource in test #14 \"USCDR-14: Every reference within DocumentReference resources can be read.\"</p>\n<p>But Encounter Tests still shows \"No Encounter references found from the prior searches\".</p>\n<p>Is github the best place to report an issue?</p>",
        "id": 208901821,
        "sender_full_name": "Matthew Dugal",
        "timestamp": 1599089395
    },
    {
        "content": "<p>Right, if it attempts to resolve that resource within USCDR-14, then we know that it has been sent to Inferno and it should be saved for additional checks later.  It's a long shot, but you just confirm that reference isn't mistakenly in some other spot (other than <code>context.encounter</code>).  If that isn't the case, then a github issue would be great and we can track it there.  Thanks!</p>",
        "id": 208906925,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1599093179
    },
    {
        "content": "<p>is this test a basic existence test? Or is it hampered by security token that has been scoped to only DocumentReference and thus not the Encounter?</p>",
        "id": 208954168,
        "sender_full_name": "John Moehrke",
        "timestamp": 1599133479
    },
    {
        "content": "<p>A precondition of this test is a bearer token with sufficient scope to read any references that are provided, and the test should fail if the server returns anything other than OK and content that we expect.  This issue is something separate though and has to do with whether or not a client can expect a reference to conform to a US Core Profile, or just the base FHIR specification.  For non-USCDI, US Core resource references (e.g. Encounter), the way we structured the tests is to collect all US Core Encounter references in the USCDI US Core tests (which are always run first) and provide those references as an input to a dedicated US Core Encounter test which then performs a read and validates them against the US Core Encounter profile.  For some reason that collection appears to not be working as intended in this case, so the US Core Encounter test isn't receiving any references to read and validate as an input.</p>",
        "id": 208963884,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1599138664
    },
    {
        "content": "<p>well, Postel's Law would be a good thing to follow, it is considered the key to the success of the Internet and core Internet protocols... so one should never expect to get well behaved data. This does not mean you can process it as well as well behaved data, but it does mean that you must try hard to process it successfully and when it is so badly formatted, fail gracefully.  Thus the test tools should always go to the edge of the conformance and beyond.</p>",
        "id": 208964648,
        "sender_full_name": "John Moehrke",
        "timestamp": 1599138988
    },
    {
        "content": "<p>What do you mean by 'to the edge of the conformance and beyond'?</p>",
        "id": 208965362,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1599139315
    },
    {
        "content": "<p>See Postel's Law -- <a href=\"https://en.wikipedia.org/wiki/Robustness_principle\">https://en.wikipedia.org/wiki/Robustness_principle</a></p>",
        "id": 208966867,
        "sender_full_name": "John Moehrke",
        "timestamp": 1599139948
    },
    {
        "content": "<p>We've applied this to our test design in that we often will fail earlier steps if we receive bad data, but try really hard to move on and execute later tests if possible instead of just stopping the tests (that's harder than you'd think).  But you will still fail overall until the system has demonstrated it is capable of sending 100% valid (and complete by our definition) data.  Whether or not this happens when deployed, and using real data, is out of scope of our testing.</p>",
        "id": 208967087,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1599140052
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"192576\">Robert Scanlon</span> <a href=\"#narrow/stream/179309-inferno/topic/No.20Encounter.20references.20found.20from.20the.20prior.20searches/near/208963884\">said</a>:</p>\n<blockquote>\n<p>For some reason that collection appears to not be working as intended in this case, so the US Core Encounter test isn't receiving any references to read and validate as an input.</p>\n</blockquote>\n<p>Any guesses? Or suggestion on how to debug?</p>",
        "id": 209039374,
        "sender_full_name": "Matthew Dugal",
        "timestamp": 1599174334
    },
    {
        "content": "<p>If you're using the version at <a href=\"http://inferno.healthit.gov\">inferno.healthit.gov</a>, I can take a look next week if you send me a link to a failing run.</p>",
        "id": 209097047,
        "sender_full_name": "Stephen MacVicar",
        "timestamp": 1599228197
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"225612\">Stephen MacVicar</span><br>\nThank you for the offer. I did get pivoted to a new task but I am hearing from the team that encounters are populating and passing. So either something you or the team did resolved this issue. Thank you and everyone for your help!</p>",
        "id": 209517683,
        "sender_full_name": "Matthew Dugal",
        "timestamp": 1599661411
    },
    {
        "content": "<p>I'm having this same issue when running inferno locally.  I see it for both Practitioner and Encounter.  In my example, I have a Condition that in a previous search or read returns references to both a Practitioner and an Encounter.  When I run either of those tests that expect to use previously found references it tells me that it can't find any from previous searches.  </p>\n<p>Does anyone know if this is still an issue or if there was a resolution?</p>",
        "id": 211265905,
        "sender_full_name": "Fred Harmon",
        "timestamp": 1601044575
    },
    {
        "content": "<p>Not yet, though we were able to reproduce the issue at the Connectathon.  I'll take a look.</p>",
        "id": 211273230,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1601047720
    },
    {
        "content": "<p>We found the problem and identified a fix, we'll have it in there for the next release.  There was a bug that occurred for non-USCDI US Core references, if they were located within an array in the resource, that caused us to not save them for the later tests.   US Core DocumentReference.context.encounter is constrained down to 0..1, from 0..* in the base spec, which obscured the bug.</p>",
        "id": 211291401,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1601056417
    },
    {
        "content": "<p>Awesome.  I'll watch for the next release and try it out.  Thanks <span class=\"user-mention\" data-user-id=\"192576\">@Robert Scanlon</span> .</p>",
        "id": 211296540,
        "sender_full_name": "Fred Harmon",
        "timestamp": 1601058877
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"329482\">@Fred Harmon</span> -- our most recent release should fix this issue.  Could you give it a try when you have a chance?</p>",
        "id": 213452012,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1602779606
    }
]