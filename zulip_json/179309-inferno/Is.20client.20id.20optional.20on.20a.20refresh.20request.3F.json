[
    {
        "content": "<p>Our authorization server (based on KeyCloak) requires a client_id to be passed in the refresh token exchange, but (for public clients) inferno is only sending grant_type and refresh_token.  Is client_id truly optional on this exchange?</p>",
        "id": 207406978,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1597843641
    },
    {
        "content": "<p>Are you looking at the 'Program' tests or the 'Community Edition' tests?  (should be the same here, but just to be sure I'm looking in the right spot)</p>",
        "id": 207407402,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1597843846
    },
    {
        "content": "<p>this is the Community Edition \"Token Refresh\" test</p>",
        "id": 207408698,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1597844411
    },
    {
        "content": "<p>Right... Program Edition doesn't test refresh tokens on public clients.</p>",
        "id": 207408855,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1597844487
    },
    {
        "content": "<p>If we are just going by the spec, it doesn't appear to be something you pass for public clients, right?  Neither SMART (<a href=\"http://www.hl7.org/fhir/smart-app-launch/#step-5-later-app-uses-a-refresh-token-to-obtain-a-new-access-token\">http://www.hl7.org/fhir/smart-app-launch/#step-5-later-app-uses-a-refresh-token-to-obtain-a-new-access-token</a>) nor OAuth (<a href=\"https://tools.ietf.org/html/rfc6749#section-6\">https://tools.ietf.org/html/rfc6749#section-6</a>) mention passing that field.</p>",
        "id": 207409282,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1597844671
    },
    {
        "content": "<p>thanks, that is the info I was looking for...need to see if I can configure KeyCloak to do the right thing here :-)</p>",
        "id": 207409919,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1597844987
    },
    {
        "content": "<p>Note that refresh tokens on public clients are a tricky subject, because tokens are easier to steal on public clients, and it more damaging to have a refresh token stolen, so oauth servers may add extensions (for lack of better word) to help better secure the token exchange process for public clients that want refresh tokens.</p>",
        "id": 207410089,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1597845055
    },
    {
        "content": "<p>thanks Robert, I have definitely read that, but I saw the test and thought I'd give it a try.  glad to hear its not tested in program edition (so as not to encourage its use)</p>",
        "id": 207410693,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1597845328
    },
    {
        "content": "<p>I've got one other similar (seemingly minor) thing I need to figure out with our keycloak and that is how to get it to echo the allowed scopes as part of the dynamic client registration:</p>\n<blockquote>\n<p>Registration response did not include client_id and scope fields in JSON body</p>\n</blockquote>",
        "id": 207411206,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1597845550
    },
    {
        "content": "<p>just thought i'd leave it here in case any keycloak users are lurking :-)</p>",
        "id": 207411292,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1597845598
    },
    {
        "content": "<p>on this one, <a href=\"https://tools.ietf.org/html/rfc7591#section-3.2.1\">https://tools.ietf.org/html/rfc7591#section-3.2.1</a> says:</p>\n<blockquote>\n<p>Additionally, the authorization server MUST return all registered metadata about this client, including any fields provisioned by the  authorization server itself.</p>\n</blockquote>\n<p>Is that the language that led to the assumption a DCR response should include scopes?</p>",
        "id": 207411995,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1597845902
    },
    {
        "content": "<p>Right, though we aren't making a statement about its usefulness, just that we can't really test it.  Refresh tokens on public clients are useful.</p>",
        "id": 207412717,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1597846214
    },
    {
        "content": "<p>If we are registering an app with a scope, that line seems to make it clear that it needs to provide it back.  But I'm not sure a scope technically needs to be registered with an app for the SMART App Launch flows (just in practice it seems everyone does).  Does keycloak save that information with the registration, or does it just ignore the scope we tried to register with?</p>",
        "id": 207413933,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1597846815
    },
    {
        "content": "<p>Dynamic registration is something that probably should be profiled within SMART from my perspective, because from what I recall there is some optionality, and we may make a couple of assumptions to align things with the requirements of SMART that aren't quite hard requirements.</p>",
        "id": 207414225,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1597846965
    },
    {
        "content": "<p>Those tests are definitely less mature than other tests, so if after looking at it you think we made a mistake here let us know.</p>",
        "id": 207414554,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1597847138
    },
    {
        "content": "<p>Re: testing the use of public clients with refresh tokens, certainly this is something that smart and specifies how to do, so it seems like it should be testable. (CARIN alliance and others I've been in discussion with once to try to clarify the language in the rules in alignment with the existing implementation guide.)</p>",
        "id": 207414799,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1597847256
    },
    {
        "content": "<p>Re: profiling on companion specs -- yes, this is something we are starting to look at in the Argonaut project this year for SMART IG 2.0. Our focus right now has been on profiling token introspection because that is the place that seems most consequential -- and actually required rather than just recommended by the onc rule.</p>",
        "id": 207414944,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1597847332
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> .  We can test public clients and refresh tokens, but if a system requires the use of PKCE (denying refresh tokens to clients that don't use it), we will fail that system because we expect to get a refresh token.  Is that system wrong for denying refresh tokens to public clients without additional protections, or are we wrong for failing that system?  Or am I misunderstanding how these fit together?</p>",
        "id": 207416427,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1597848066
    },
    {
        "content": "<p>(and by 'we' i mean Inferno Community Edition tests in this case, separate of rule language clarification)</p>",
        "id": 207417820,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1597848769
    },
    {
        "content": "<p>I think for the moment, testing public clients with refresh tokens (sans PKCE) is a good set of tests to have in place; adding testing with PKCE might be worthwhile too, but we don't have specific profiling/recommendations on that front.</p>",
        "id": 207420201,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1597849812
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192576\">@Robert Scanlon</span> I've been meaning to follow up with you on this one for a while now.  I posed our question wrt client id on a refresh token to the keycloak community at <a href=\"https://keycloak.discourse.group/t/is-client-id-always-required-to-refresh-a-token/4378\">https://keycloak.discourse.group/t/is-client-id-always-required-to-refresh-a-token/4378</a> and, eventually, got this answer from a colleague at IBM:</p>\n<blockquote>\n<p>Although client_id requirement for public client is not explicitly specified in oauth 2.0 spec, the Openid Connect spec seem indicates client_id is required to refresh a token regardless of confidential or public clients. See <a href=\"https://openid.net/specs/openid-connect-core-1_0.html#RefreshingAccessToken\">https://openid.net/specs/openid-connect-core-1_0.html#RefreshingAccessToken</a> 1. It states “the Client MUST authenticate to the Token Endpoint using the authentication method registered for its client_id”, which implies client_id is required.</p>\n</blockquote>",
        "id": 213974919,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1603225528
    },
    {
        "content": "<p>I separately followed up with a colleague from RedHat and received a similar response:</p>\n<blockquote>\n<p>From my understanding client_id is required even for public clients. I would raise this with the people behind the conformance test tool. If they object we can certainly ask on the OIDC/OAuth mailing groups if they can provide some clarification.</p>\n</blockquote>",
        "id": 213975009,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1603225578
    },
    {
        "content": "<p>Is this enough info to get this changed in inferno or would you suggest we pursue further clarification on the OIDC mailing list?</p>",
        "id": 213975498,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1603225855
    },
    {
        "content": "<p>This seems like a SMART spec issue too -- right now we say for <code>grant_type=authorization_code</code>, <code>client_id</code> is a required body param for public clients (and a required header param, as part of the Authorize header  value, for confidential clients). But for <code>grant_type=refresh_token</code>, we don't list or require <code>client_id</code> as a body param.</p>",
        "id": 214251144,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1603402501
    },
    {
        "content": "<p>The assessment at <a href=\"https://keycloak.discourse.group/t/is-client-id-always-required-to-refresh-a-token/4378/3\">https://keycloak.discourse.group/t/is-client-id-always-required-to-refresh-a-token/4378/3</a> that somehow OIDC \"implies client_id is required\" is unconvincing, on my reading.</p>",
        "id": 214251183,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1603402531
    },
    {
        "content": "<p>I was looking through the history of our test and as of February of this year we did pass the <code>client_id</code> body param for <code>grant_type=refresh_token</code> for public clients.  But we explicitly removed it due to the SMART spec (we referenced <a href=\"http://www.hl7.org/fhir/smart-app-launch/#step-5-later-app-uses-a-refresh-token-to-obtain-a-new-access-token\">this section</a> in the PR).  We also removed a test where we checked if you pass an invalid <code>client_id</code> the system did not return a refresh token.</p>",
        "id": 214329756,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1603467878
    },
    {
        "content": "<blockquote>\n<p>Is this enough info to get this changed in inferno or would you suggest we pursue further clarification on the OIDC mailing list?</p>\n</blockquote>\n<p>Since we are testing to the SMART profile, and that is what drove our decision to not pass that body param, I think we need official direction from SMART before the Inferno test changes.  As written, it seems very clear to NOT pass that param.  But perhaps there is some wiggle-room I'm missing?</p>",
        "id": 214331326,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1603468700
    },
    {
        "content": "<p>As a general data point through, I think it is interesting that we initially implemented it to have that parameter and then had to go back in to fix our mistake to be consistent with SMART.  That may be common (or maybe not, it is just one data point).</p>",
        "id": 214331652,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1603468881
    }
]