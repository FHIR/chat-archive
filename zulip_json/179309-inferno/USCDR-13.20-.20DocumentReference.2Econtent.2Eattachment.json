[
    {
        "content": "<p><strong>Prior art:</strong></p>\n<ul>\n<li><a href=\"https://github.com/onc-healthit/inferno-program/issues/316\">Inferno Github Issue #316</a></li>\n<li><a href=\"https://github.com/onc-healthit/inferno-program/issues/261\">Inferno Github Issue #261</a></li>\n<li>Prior topic in this chat.fhir stream <a href=\"#narrow/stream/179309-inferno/topic/DocumentReference.20content.20attachment\">DocumentReference.content.attachment</a></li>\n</ul>\n<p><strong>Spec References:</strong></p>\n<ul>\n<li><a href=\"http://hl7.org/fhir/us/core/STU3.1.1/general-guidance.html#must-support\">US Core 3.1.1 Must Support</a></li>\n<li><a href=\"http://hl7.org/fhir/us/core/STU3.1.1/StructureDefinition-us-core-documentreference.html\">US Core 3.1.1 DocRef.content.attachment</a></li>\n</ul>\n<p><strong>Topic:</strong><br>\nI want to bring up the DocumentReference.content.attachment must-support / us-core-6 invariant topic again, this time in light of the CCG clarification about choice elements:</p>\n<div class=\"codehilite\"><pre><span></span><code>&quot;A Health IT Module must support at least one Choice or Reference for\nUS Core IG “must support” elements with multiple Choices or References, respectively. &quot;\n</code></pre></div>\n<p>DocumentReference.content.attachment is labeled as must-support in 3.1.1.  Right now, Inferno USCDR-13 is requiring that a server demonstrate support for <em>both</em>  <a href=\"http://attachment.data\">attachment.data</a> and attachment.url.  However, in light of the CCG clarification, it seems reasonable for Inferno to only require support for one or the other.   I make this claim for a few reasons:</p>\n<ol>\n<li>The CCG clarification uses the term \"Choice\", and the obvious interpretation of that is the choice[x] structure in FHIR, but <a href=\"http://attachment.data\">attachment.data</a> and attachment.url is functionally a \"choice\".</li>\n<li>US Core 3.1.1 indicates that if a responder doesn't have the data, and doesn't know why, then it SHALL not return it.  (Relevant note:  US Core 3.1.1 indicates that if a responder doesn't have the data, but does know why, it should DAR it.)</li>\n</ol>\n<p>#2 above is a little tricky, because DAR has an option of unsupported, but you have to figure out which entity is the responder.  If the responder is the API server, then if it doesn't support something (i.e. it is unintentionally unsupported), then it doesn't know enough to DAR it.  However if it is the <em>developer</em> of the API server, then they it might be intentionally unsupported, in which case a DAR would be fine.</p>\n<p><strong>Summary</strong><br>\nAnyway - this all boils down to whether a server who only supports <em>either</em> <a href=\"http://attachment.data\">attachment.data</a> <em>or</em> attachment.url should pass Inferno's 3.1.1 g10 checks.  The prior art above shows this is contentious, so I wanted to get consensus here before I throw another github issue at Inferno.</p>",
        "id": 251289361,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1630355020
    },
    {
        "content": "<p>I think supporting one of the two should be enough. Clients won't mind (they have to support both in any case)</p>",
        "id": 251289906,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1630355273
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> That is an update in US Core 4.0.0.<br>\nThe question is if there is wiggle room under US Core 3.1.1 which is required by (g)(10) test procedure.</p>",
        "id": 251290391,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1630355493
    },
    {
        "content": "<p>I think there are two different reasons why this could be fine in 3.1.1:</p>\n<ul>\n<li>I think the CCG clarification should/could apply here.  There is a conceptual \"Choice\" even though there isn't a \"value[x]\".   This might be stretching the <em>specific</em> intent of the CCG update, but I think it is in line with the <em>general</em> intent of the CCG update</li>\n<li>I think because of how 3.1.1 defines must-support, a non-DAR'ed \"don't return anything\" option is allowed for stuff the server just doesn't support.</li>\n</ul>",
        "id": 251293137,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1630356715
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span> <br>\n#1 they are not choices. Invariant us-core-6 state that both elements could be populated at the same time</p>\n<blockquote>\n<p>us-core-6: DocumentReference.content.attachment.url or <a href=\"http://DocumentReference.content.attachment.data\">DocumentReference.content.attachment.data</a> or both SHALL be present.</p>\n</blockquote>\n<p>#2 The testing of MustSuppor is that a server has to demonstrate that it support all MustSupport elements. If a server never provide data with a specific MustSupprt element, then there is no evidence that the sever support such element.</p>",
        "id": 251293486,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1630356874
    },
    {
        "content": "<p>??<br>\nrequiring to support both does not really make sense: one of the two is enough - and the same data can be rendered in either really</p>",
        "id": 251294345,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1630357246
    },
    {
        "content": "<p>The us-core-6 invariant isn't what Inferno is using to justify checking both, right?  There isn't any compliance language that I know about that requires a server to support all permutations of an invariant.  And since that one is an \"or\", meeting only one of the expressions is sufficient.</p>",
        "id": 251294844,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1630357464
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> <br>\nIt is not \"required\" to support both but MAY support both. While choice means SHALL NOT support both.<br>\n<span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span> <br>\nI agree that one is sufficient to pass resource validation. I used to indicate that these two are different than value[x] choice type because there is no chance that two choice values be provided in the same resource but it is <strong>possible</strong> to have both url and data in DocumentReference. </p>\n<p>For each individual resource validation (USCDR-01 - USCDR-12), Inferno use us-core-6 to check that either <code>url</code> or <code>data</code> or both are provided in each USCDR resources.</p>\n<p>For the MustSupport check (USCDR-13), Inferno looks through all USCDR resources received from previous tests (USCDR-01 to USCDR-11). The evidence that server supports these two MustSupport elements is that if there is at least one USCDR resource having <code>url</code> and at least one USCDR resource having <code>data</code> (it does not matter if they are the same resource or not).</p>",
        "id": 251384756,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1630416684
    },
    {
        "content": "<blockquote>\n<p>The evidence that server supports these two MustSupport elements is that if there is at least one USCDR resource having url and at least one USCDR resource having data </p>\n</blockquote>\n<p>Yes, my point is that checking ^ does not make any sense. Having just one or the other should be fine, because they are functionally interchangeable</p>",
        "id": 251385847,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1630417040
    },
    {
        "content": "<p>And <em>my</em> point is that checking that there are resources that support both url and data could be covered by that CCG clarification, if you consider url and data to be \"Choices\".</p>",
        "id": 251386494,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1630417269
    },
    {
        "content": "<p>Which means a server would only have to support one option in the list of choices, so only supporting one option across all resources would be ok.</p>",
        "id": 251386626,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1630417324
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span> CCG does say that</p>\n<blockquote>\n<p>A Health IT Module must support at least one Choice or Reference for US Core IG “must support” elements with multiple Choices or References, respectively. </p>\n</blockquote>\n<p>I think question here is that if <code>Choice</code> here is the FHIR choice type <code>value[x]</code> only or sub elements which could be considered as having <code>or</code>/<code>xor</code> relationship.</p>",
        "id": 251388907,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1630418234
    },
    {
        "content": "<p>Right.  We need a clarification on the clarification I guess...</p>",
        "id": 251389197,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1630418341
    },
    {
        "content": "<p>Another example would be <code>Observation.value[x]</code> and <code>Observation.DataAbsentReason</code></p>",
        "id": 251390022,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1630418601
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191764\">@Cooper Thompson</span> After thorough discussion, we decided to update USCDR-13 to match the CCG clarification on choice and reference element.</p>",
        "id": 251611485,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1630522828
    },
    {
        "content": "<p>Sweet!  Are you tracking that in a github issue?  Or do you want a new one?</p>",
        "id": 251618716,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1630525841
    },
    {
        "content": "<p>I reopened one of the issue you mentioned <a href=\"https://github.com/onc-healthit/inferno-program/issues/316\">https://github.com/onc-healthit/inferno-program/issues/316</a></p>",
        "id": 251619800,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1630526338
    }
]