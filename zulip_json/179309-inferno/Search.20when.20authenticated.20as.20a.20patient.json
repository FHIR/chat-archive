[
    {
        "content": "<p>Hello,<br>\nWhen I am authenticated as a patient and have a patient token, the tool allows search using name, birthDate etc..<br>\n../Patient?birthdate=1990-01-01&amp;name=Defect ,<br>\nWe coded such that the FHIR server returns an access violation (a patient should not be allowed to search another patient's data) .<br>\nThe Inferno test is expecting a success. <br>\nPlease advise.<br>\nThank you.</p>",
        "id": 227046382,
        "sender_full_name": "Lakshmi Bhamidipati",
        "timestamp": 1613777572
    },
    {
        "content": "<p>There is the assumption on the US Core 3.1.1 tests ('Single Patient API' for ONC Standardized API certification) that a token is being used that provides sufficient access to perform all required US Core searches.  Otherwise we have no way of verifying support for all required US Core searches.  In other words, a token with full access to the required searches is prerequisite for the test.</p>",
        "id": 227274538,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614004282
    },
    {
        "content": "<p>It isn't clear to me that your implementation is the proper behavior.  Another way for you to handle this search is to allow patients to search by birthdate/name, but restrict it such that it will at most return their own patient record.</p>",
        "id": 227274962,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614004429
    },
    {
        "content": "<p>Just like how a patient doing a search with a patient-scoped bearer token for Condition?patient=[my_patientid] needs to return records if they exist, but searching for Condition?patient=[someone_elses_patient_id] must not return any records.  Abstractly it would be more consistent to have the search by birthdate/name be the same, where searching by their own name/birthdate gives them back the record they have access to (their own), and searching by someone elses name/birthdate does not return any records.</p>",
        "id": 227277026,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614005287
    },
    {
        "content": "<p>However, I can't think of a reason why allowing patients to search for their own record by name/birthdate is useful, and I'm not aware of anywhere that states that your interpretation is invalid (just deny patients ever from searching by birthdate/name), so the other option for our testing is for you to use a user-level token that does have access to searching by that to demonstrate support.</p>",
        "id": 227277534,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614005481
    },
    {
        "content": "<p>This may be a good question for <span class=\"user-mention\" data-user-id=\"191410\">@Brett Marquard</span> and <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> .  Do patients need to have access to searching <code>Patient?birthdate=[their_birthdate]&amp;name=[their_name]</code>, which will return their own record if they put in the right birthdate/name?  Or is it valid for systems to decide to deny the whole search because it isn't intended to be used by patients using a patient-scoped token?</p>",
        "id": 227280201,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614006507
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192576\">@Robert Scanlon</span> - Thank you. For patient scoped tokens, as you mentioned, I guess we would have to code such that the search result returns just 1 record (ie the patient's own record) if there is a match with DOB or identifier or name, instead of throwing an error.</p>",
        "id": 227298004,
        "sender_full_name": "Lakshmi Bhamidipati",
        "timestamp": 1614012539
    },
    {
        "content": "<p>I agree the logical intent of this particular search is for providers and agree this is expected system behavior:</p>\n<blockquote>\n<p>Another way for you to handle this search is to allow patients to search by birthdate/name, but restrict it such that it will at most return their own patient record.</p>\n</blockquote>\n<p>We have not considered the intersection of scope and search in the IG and am reluctant to consider it unless the community sees it as a critical issue.</p>",
        "id": 227298053,
        "sender_full_name": "Eric Haas",
        "timestamp": 1614012554
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"224800\">@Lakshmi Bhamidipati</span> -- yes, that is what you would need to do to pass the tests while using a patient scoped token.  Which sounds like the expected behavior based on <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span>'s response.  Though to be precise, you only need to support <a href=\"https://www.hl7.org/fhir/us/core/StructureDefinition-us-core-patient.html#mandatory-search-parameters\">DOB searches when paired with name</a>  as defined in the mandatory search parameters section.  Though you can support searching by DOB without name too if you'd like.</p>",
        "id": 227303798,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614014508
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192576\">@Robert Scanlon</span>  - Other mandatory searches need to follow the same logic too, correct? -<br>\nSHALL support searching for a patient by a string match of any part of name using the name search parameter<br>\nSHALL support searching using the combination of the gender and name search parameters<br>\nSHALL support searching a patient by an identifier such as a MPI using the identifier search parameter<br>\nThanks!</p>",
        "id": 227314700,
        "sender_full_name": "Lakshmi Bhamidipati",
        "timestamp": 1614018720
    },
    {
        "content": "<p>Yes, the same logic would apply to all mandatory searches on the Patient resource.</p>",
        "id": 227316618,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1614019557
    }
]