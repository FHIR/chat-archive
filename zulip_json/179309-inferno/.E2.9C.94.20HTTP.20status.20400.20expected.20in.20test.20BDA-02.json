[
    {
        "content": "<p>Hello,</p>\n<p>We encountered an error that we did not expect (based on our understanding of RFC 6749) in test BDA-02 Bulk Data Authorization.</p>\n<p>In short, part of the test sends an HTTP request to the token endpoint without an appropriate content-type header, then expects an HTTP status of 400 and a corresponding OAuth error response as described in section 5.2 of RFC 6749.  We think this expectation is a misinterpretation of the specification, with reasoning as follows:</p>\n<p>RFC 6479 describes a token request using the following wording:</p>\n<blockquote>\n<p>The client MUST use the HTTP \"POST\" method when making access token<br>\n   requests.</p>\n</blockquote>\n<p>(Section 3.2)</p>\n<blockquote>\n<p>The client makes a request to the token endpoint by sending the<br>\n   following parameters using the \"application/x-www-form-urlencoded\"<br>\n   format per Appendix B with a character encoding of UTF-8 in the HTTP<br>\n   request entity-body:</p>\n</blockquote>\n<p>(Section 4.1.3)</p>\n<p>As such, a token request is defined as an HTTP POST to the token endpoint using <code>application/x-www-form-urlencoded</code> format with character encoding of UTF-8.  A \"malformed\" token request would be any request whose request entity-body does not match the expected structure as defined in section 4.1.3.</p>\n<p>Test BDA-02 seems to expect that the server returns an access token error response (with status 400) for payloads whose content-type is not <code>application/x-www-form-urlencoded</code>.  This may conflict with other future OAuth2-based RFCs that expect standard response codes for this situation.  For example, the RFC draft \"OAuth 2.0 JSON Request\" states the following for clients sending token request payloads as JSON:</p>\n<blockquote>\n<p>If the request is rejected with 415 Unsupported Media Type, the requester MAY repeat the request using form encoding instead.</p>\n</blockquote>\n<p>Our expectation is that a token endpoint receiving a request that contains an unexpected content-type would simply be rejected with a 415 response code, just as an HTTP PUT operation to the token endpoint would be expected to return a 405 status code.</p>\n<p>Please advise.</p>",
        "id": 255792891,
        "sender_full_name": "Matt Randall",
        "timestamp": 1633115225
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191609\">@Matt Randall</span> I think this is reasonable. Would you mind to create a Github Issue on <a href=\"https://github.com/onc-healthit/inferno-program/issues\">Infenro repo</a>? Thanks</p>",
        "id": 255794685,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1633116105
    },
    {
        "content": "<p>Will do</p>",
        "id": 255794888,
        "sender_full_name": "Matt Randall",
        "timestamp": 1633116183
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191609\">Matt Randall</span> has marked this topic as resolved.</p>",
        "id": 255797423,
        "sender_full_name": "Notification Bot",
        "timestamp": 1633117408
    }
]