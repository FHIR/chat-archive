[
    {
        "content": "<p>Several folks at the connectathon  have pointed out that <code>$everything</code> may not be an ideal operation name to kick off a bulk data export. In particular it seems confusing to have a <code>\\Patient\\[id]\\$everything</code> that generally won't support async and <code>\\Patient\\$everything</code> that will.</p>",
        "id": 153931794,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1517152810
    },
    {
        "content": "<p>We wouldn't change this today, but what do people think about defining the endpoints as <code>\\Patient\\$export</code> and <code>\\Group\\[id]\\$export</code> (Josh's suggestion) or <code>\\Patient\\$bulkdata</code> and <code>\\Group\\[id]\\$bulkdata</code> (Jason's suggestion)? Post a message below with <code>$everything</code>, <code>$export</code> or <code>$bulkdata</code> (and optionally a justification) to vote!</p>",
        "id": 153931795,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1517152821
    },
    {
        "content": "<p>I don't understand this: \"In particular it seems confusing to have a \\Patient\\[id]\\$everything that generally won't support async and \\Patient\\$everything that will.\"</p>",
        "id": 153931796,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517152872
    },
    {
        "content": "<p>and are you just asking about renaming, or are you proposing different semantics?</p>",
        "id": 153931798,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517152894
    },
    {
        "content": "<p>Just renaming - my point is that currently $everything on a single patient is a synchronous request</p>",
        "id": 153931806,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1517153061
    },
    {
        "content": "<p>only if you ask for it that way</p>",
        "id": 153931810,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517153112
    },
    {
        "content": "<p>my server supports async on any GET</p>",
        "id": 153931811,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517153125
    },
    {
        "content": "<p>Sure, but not all servers will support all options on all request types and bulk data requires async support while single patient requests don't</p>",
        "id": 153931814,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1517153206
    },
    {
        "content": "<p>true. but that doesn't change the semantics</p>",
        "id": 153931817,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517153259
    },
    {
        "content": "<p>Yup, but for clarity I think having an operation that will often only support async be distinct from one that will often only support sync would make sense</p>",
        "id": 153931821,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1517153403
    },
    {
        "content": "<p>we get into trouble differentiating semantics because they're often implemented differently for performance reasons (though we have done in a few places)</p>",
        "id": 153931822,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517153470
    },
    {
        "content": "<p>I wonder, if we rename these and give them dedicated async endpoints like \".../$export\", then why do we even need to send the \"prefer: respond-async\" header?</p>",
        "id": 153931832,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1517153851
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  On semantics, I'd think that giving distinct names to frequently-async operations would <em>help</em> with this confusion and lead to more consistent performance, no?</p>",
        "id": 153931848,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1517154042
    },
    {
        "content": "<p>Additionally, $everything is already defined at [base]/Patient/$everything and has different parameters than we're recommending for bulk data.</p>",
        "id": 153931852,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1517154253
    },
    {
        "content": "<p>It also has a different expectation (whether required or implied) that data is returned paged/in a bundle, not in ndjson files.</p>",
        "id": 153931854,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1517154295
    },
    {
        "content": "<p>And.. is it expected that $everything go normative this year with patient? That seems like it would severely limit our ability to mature the bulk data specification on its own timeline.</p>",
        "id": 153931860,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1517154405
    },
    {
        "content": "<ul>\n<li>we haven't decided whether $everything goes normative or not. </li>\n<li>Danielle is actually arguing the semantics are different</li>\n<li>but the return expectations are in the mind of the beholder; they're not different for me</li>\n<li>renaming purely for performance might help if there is a sweet spot for differentiation, but it could also be very confusing</li>\n</ul>",
        "id": 153931921,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517156064
    },
    {
        "content": "<p>I vote for a different operation name. <code>$bulkdata</code> or <code>$export</code>. The operation is different than <code>$everything</code> --  should have a different name. It also violates the definition of an operation, I think. Can't <code>POST</code> Parameters, for one thing. It is different. Deserves a different name.</p>",
        "id": 153931935,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1517156362
    },
    {
        "content": "<p>+1 to <code>$export</code></p>",
        "id": 153931942,
        "sender_full_name": "Phil Langthorne",
        "timestamp": 1517156841
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191381\">@Jason Walonoski</span> I didn't follow parameters issue</p>",
        "id": 153931960,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517157683
    },
    {
        "content": "<p>General question - if we do go with <code>$export</code>, should you be able to call <code>\\Patient\\[id]\\$export</code>  in addition to the current <code>\\Patient\\[id]\\$everything</code> to run an async export to ndjson?</p>",
        "id": 153931964,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1517157815
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191414\">@Dan Gottlieb</span> sounds good to me.</p>",
        "id": 153931966,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1517158089
    },
    {
        "content": "<p>Parameters issue (as I perceive it): <a href=\"http://hl7.org/fhir/STU3/operations.html#executing\" target=\"_blank\" title=\"http://hl7.org/fhir/STU3/operations.html#executing\">http://hl7.org/fhir/STU3/operations.html#executing</a></p>\n<p>You are supposed to be able to execute an operation with a <code>POST</code> of <code>Parameters</code> or a <code>Resource</code> or a <code>GET</code>if it is idempotent. So, right now bulk data fits under the <code>GET</code>/idempotent rule... but is it expected that operations should also support the <code>POST</code>? I may be muddying the waters here.</p>",
        "id": 153931974,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1517158492
    },
    {
        "content": "<p>servers can choose to support POST - but so what?</p>",
        "id": 153932004,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517160215
    },
    {
        "content": "<blockquote>\n<p>my server supports async on any GET</p>\n</blockquote>\n<p>mine too :)</p>",
        "id": 153933102,
        "sender_full_name": "Bas van den Heuvel",
        "timestamp": 1517262440
    }
]