[
    {
        "content": "<p>If the _typeFilter and _since are not supported in group export, how do we convey this to the client. Should we send it as OperationOutcome? Should this be mentioned in metadata?<br>\n<span class=\"user-mention\" data-user-id=\"191414\">@Dan Gottlieb</span> <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> <span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span></p>",
        "id": 254645106,
        "sender_full_name": "Moin Syed",
        "timestamp": 1632454329
    },
    {
        "content": "<p>Error 400 with an OperationOutcome</p>",
        "id": 254695605,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1632486675
    },
    {
        "content": "<blockquote>\n<p>If the _typeFilter and _since are not supported in group export, how do we convey this to the client</p>\n</blockquote>\n<p>Does that mean you don't support these parameters for all $export operation or you don't support these parameters just for $export/Group?<br>\nIf you don't support those for all export operation, I think you can profile your OperationDefinition by changing cardinality of these to <code>0..0</code></p>\n<p>If a server receives not-supported parameters, I would like a server executes with only supported ones and ignores those not-supported.</p>",
        "id": 254704833,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1632490680
    },
    {
        "content": "<p>Regarding the metadata, aren't the OperationDefinitions in the CapabilityStatement referenced at the resource level - think a server should be able to list param support for each operation individually?</p>",
        "id": 254705910,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1632491075
    },
    {
        "content": "<p>On the error message, STU2 of the Bulk IG clarifies server behavior with the following guidance:</p>\n<blockquote>\n<p>Servers unable to support the requested _typeFilter queries SHOULD return an error and OperationOutcome resource so clients can re-submit a request that omits those queries. When a Prefer: handling=lenient header is included in the request, the server MAY process the request instead of returning an error.</p>\n</blockquote>",
        "id": 254705987,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1632491111
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191414\">Dan Gottlieb</span> <a href=\"#narrow/stream/179250-bulk-data/topic/TypeFilter.20and.20Since.20Support/near/254705910\">said</a>:</p>\n<blockquote>\n<p>Regarding the metadata, aren't the OperationDefinitions in the CapabilityStatement referenced at the resource level - think a server should be able to list param support for each operation individually?</p>\n</blockquote>\n<p>Hmm. That is correct.</p>",
        "id": 254710081,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1632492584
    },
    {
        "content": "<p>For <code>_typeFilter</code> first check if <code>handling=lenient</code> is set in the <code>prefer</code> header. If so, just ignore the parameter. Otherwise reply with an error as <code>OperationOutcome</code>.</p>\n<p>As for the <code>_since</code> parameter, the truth is you just have to support it. If you don't, regardless of how you \"convey this to the client\", such a server will be about as useful as would a car be without a steering wheel.</p>",
        "id": 254710960,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1632492892
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"382630\">@Moin Syed</span> <br>\nFirst, it is good to support those parameters as optional input because it reduce the size of output and so reduce the burden of server to create output.<br>\nThen, those are not required parameters and there is no strong wording in STU1 (nor STU2) about what server SHALL do when client sends not supported parameters. So it is up to the server to decide.<br>\nBTW <span class=\"user-mention\" data-user-id=\"191414\">@Dan Gottlieb</span> I think this is confusing</p>\n<blockquote>\n<p>Servers unable to support the requested _typeFilter queries SHOULD return an error and OperationOutcome resource so clients can re-submit a request that omits those queries. </p>\n</blockquote>\n<p>After client receives OperationOutcome for the first request (with _typeFilter), the client has to choose either not to do anything (maybe put the server on a blacklist?) or re-submit request without _typeFilter.<br>\nIf the desired workflow is to let client re-send request without _type filter (as mentioned in the quote), then why don't recommend server to process the first request as without _type filter?</p>",
        "id": 254714884,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1632494356
    }
]