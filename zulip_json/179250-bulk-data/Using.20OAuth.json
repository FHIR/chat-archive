[
    {
        "content": "<p>Hello All,</p>\n<p>We are trying to implement inferno for bulk data and jus want to confirm whether we will be able to use OAuth authentication instead of JWT. Is there a way to dynamically pass the related headers from UI?</p>",
        "id": 237504604,
        "sender_full_name": "ranjith",
        "timestamp": 1620225145
    },
    {
        "content": "<p>Can you clarify your question?</p>",
        "id": 237505603,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1620225480
    },
    {
        "content": "<p>Is this specifically for the ONC Standardized API for Patient and Population Services criteria certification (which has requirements regarding using SMART Backend Services authorization), or are you more broadly asking if you could use a different authorization scheme outside the scope of that criteria?</p>",
        "id": 237505749,
        "sender_full_name": "Robert Scanlon",
        "timestamp": 1620225521
    },
    {
        "content": "<p>Mainly looking for standardized API which might help in setting up the required authorization and incase if we have options want to explore that as well.</p>",
        "id": 237512661,
        "sender_full_name": "ranjith",
        "timestamp": 1620227495
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span>  <br>\nthanks for your response.</p>\n<p>We have implemented Da Vinci - Risk Based Contracts Member Attribution (ATR) List - <a href=\"http://hl7.org/fhir/us/davinci-atr/2020Feb/spec.html\">http://hl7.org/fhir/us/davinci-atr/2020Feb/spec.html</a> </p>\n<p>Now trying to implement Mitre inferno community edition in local network to validate above implementation (<a href=\"https://github.com/onc-healthit/inferno#installation-and-deployment\">https://github.com/onc-healthit/inferno#installation-and-deployment</a>)</p>\n<p>We implemented OAuth 2.0 for API endpoints (Kickoff, status etc) - which works on client id and secret. But it seems  Inferno needs JWT token based Authentication. - our question is - can Mitre inferno work on OAuth 2.0  client id and secret based authentication?</p>\n<p>Thanks in advance..<br>\nRegards,<br>\nRahul Jain</p>",
        "id": 237528608,
        "sender_full_name": "Rahul Jain",
        "timestamp": 1620233458
    },
    {
        "content": "<p>The standard call for JWT token based authentication, so that's what you should use really</p>",
        "id": 237533557,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1620235359
    },
    {
        "content": "<p>thanks Michele - can you please point me to reference/implementation for JWT based authentication for Bulk FHIR APIs?</p>",
        "id": 237549009,
        "sender_full_name": "Rahul Jain",
        "timestamp": 1620241500
    },
    {
        "content": "<p><a href=\"https://hl7.org/fhir/uv/bulkdata/authorization/index.html\">https://hl7.org/fhir/uv/bulkdata/authorization/index.html</a> is the spec;  <a href=\"https://github.com/smart-on-fhir/bulk-data-server\">https://github.com/smart-on-fhir/bulk-data-server</a> is one reference server that supports this spec.</p>",
        "id": 237549975,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1620241854
    },
    {
        "content": "<p>thanks - per OAuth 2.0 framework standards supported values for token_endpoint_auth_methods_supported are </p>\n<p>client_secret_post<br>\n    client_secret_basic<br>\n    client_secret_jwt<br>\n    private_key_jwt</p>\n<p>then why is only private_key_jwt supported?</p>",
        "id": 237550585,
        "sender_full_name": "Rahul Jain",
        "timestamp": 1620242105
    },
    {
        "content": "<p>OAuth 2.0 is a framework, much like FHIR is a framework. Implementation guides are required to lock down details, layer on extensions,  and support end-to-end interoperability.</p>",
        "id": 237556442,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1620244909
    },
    {
        "content": "<p>We are still finding it bit tedious to implement Inferno as we dont know the internals <br>\nWe have hosted community edition in docker. <br>\nNow finding it bit difficult to make it to work with our bulk export </p>\n<p>Is there any professional support available for inferno?</p>\n<p>Also - what is the value expected in Bulk Client ID - </p>\n<p><a href=\"/user_uploads/10155/QBNkQybwYWbWw0mZrLy13enD/image.png\">image.png</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/QBNkQybwYWbWw0mZrLy13enD/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/QBNkQybwYWbWw0mZrLy13enD/image.png\"></a></div><p>In configuration - it seems to be JWT token, is it? if so it is already signed or just 64 bit encoded?</p>\n<p>or is it the client id (client app id)?</p>\n<p>Also - trying to understand how Bulk private key is populated here... we have private key available, already negotiated public key uploaded to FHIR auth server. Can it be just uploaded here in PEM format?</p>\n<p><a href=\"/user_uploads/10155/ul68fBzBoz2zGtI0X9b0y8rz/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/ul68fBzBoz2zGtI0X9b0y8rz/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/ul68fBzBoz2zGtI0X9b0y8rz/image.png\"></a></div><p>Thanks,<br>\nRahul</p>",
        "id": 239285807,
        "sender_full_name": "Rahul Jain",
        "timestamp": 1621356025
    },
    {
        "content": "<p>The first one should be the client_id and the second should be a JWK. Example:</p>\n<div class=\"codehilite\"><pre><span></span><code>Bulk Client:   my_client_id\nBulk Private Key:   {&quot;kty&quot;:&quot;EC&quot;,&quot;crv&quot;:&quot;P-384&quot;,&quot;d&quot;:&quot;...&quot;,&quot;x&quot;:&quot;...&quot;,&quot;y&quot;:&quot;...&quot;,&quot;key_ops&quot;:&quot;sign&quot;],&quot;ext&quot;:true,&quot;kid&quot;:&quot;...&quot;,&quot;alg&quot;:&quot;ES384&quot;}\n</code></pre></div>",
        "id": 239290820,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1621357995
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"410130\">@Rahul Jain</span> Hi, <code>Bulk Client ID</code> is the client ID what server generated when registering client with server. <code>Bulk Private Key</code> is the private key you used to encrypt the handshake request.</p>",
        "id": 239291754,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1621358289
    },
    {
        "content": "<p><a href=\"http://hl7.org/fhir/uv/bulkdata/authorization/index.html#registering-a-smart-backend-service-communicating-public-keys\">http://hl7.org/fhir/uv/bulkdata/authorization/index.html#registering-a-smart-backend-service-communicating-public-keys</a></p>",
        "id": 239291970,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1621358374
    },
    {
        "content": "<p>and here<br>\n<a href=\"http://hl7.org/fhir/uv/bulkdata/authorization/index.html#obtaining-an-access-token\">http://hl7.org/fhir/uv/bulkdata/authorization/index.html#obtaining-an-access-token</a></p>",
        "id": 239292268,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1621358469
    },
    {
        "content": "<p>I am testing the authentication with SMART Bulk Data Server. I generated a Client ID: <br>\n<a href=\"/user_uploads/10155/ViC4RdcQJmqj3eoIDe3zXEKL/image.png\">image.png</a>  </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/ViC4RdcQJmqj3eoIDe3zXEKL/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/ViC4RdcQJmqj3eoIDe3zXEKL/image.png\"></a></div><p>Then put the Client ID (JWT) in the following Token Request<br>\n<a href=\"/user_uploads/10155/jJ39ilkfVa_ADAYp-hiQ4_Fw/image.png\">image.png</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/jJ39ilkfVa_ADAYp-hiQ4_Fw/image.png\" title=\"image.png\"><img src=\"/user_uploads/10155/jJ39ilkfVa_ADAYp-hiQ4_Fw/image.png\"></a></div><p>But received 400 error: {<br>\n    \"error\": \"invalid_request\",<br>\n    \"error_description\": \"Invalid client details token: The token must be a string\"<br>\n}</p>\n<p>Am I missing anything?</p>\n<p>Thanks,<br>\nYan</p>",
        "id": 239331437,
        "sender_full_name": "Yan Wang",
        "timestamp": 1621374645
    },
    {
        "content": "<p>This may not be possible in Postman. You are missing a step here. <code>client_assertion</code> is not the client_id. Instead you need to take that id, put it in another structure, then sign that with your private key and use it as <code>client_assertion</code>. Here is a JS example: <a href=\"https://github.com/smart-on-fhir/sample-apps-stu3/blob/master/fhir-downloader/index.js#L530-L577\">https://github.com/smart-on-fhir/sample-apps-stu3/blob/master/fhir-downloader/index.js#L530-L577</a></p>",
        "id": 239333874,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1621375892
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"193731\">@Vladimir Ignatov</span>  for the clarification.</p>",
        "id": 239334497,
        "sender_full_name": "Yan Wang",
        "timestamp": 1621376278
    }
]