[
    {
        "content": "<p>I have a proposal for small addition to the export (and import) spec that<br>\nattempts to improve how a progress is being reported.</p>\n<p>The problem is that the value reported in the <code>x-progress</code> is implementation-dependent<br>\nand could be literally anything. While that is understandable, it also means that it<br>\nis not really possible to create a client that can do anything with that information,<br>\nother than simply displaying it. In other words, I may have a client that is capable of<br>\nrendering a progress indicator, but it wouldn't know for sure if that <code>x-progress</code> value is<br>\na percent number, or remaining time or something else...</p>\n<p>My idea is to add another optional custom header that describes the type of data<br>\nthat <code>x-progress</code> represents. That new header could be called <code>x-progress-type</code> and<br>\ncould contain a value from a predefined list (e.g.: \"percent-complete\", \"estimate-time-remaining\", \"resources-handled\", \"message\"...).<br>\nPerhaps think of it as a ValueSet for progress information types.</p>\n<p>The clients can then behave as follows:</p>\n<ul>\n<li>If the <code>x-progress-type</code> is not present or contains unknown value, treat it as if the value was \"message\".</li>\n<li>If the <code>x-progress-type</code> value is \"message\" the clients can simply display the value of <code>x-progress</code> as is.</li>\n<li>If the <code>x-progress-type</code> value is \"percent-complete\" the clients can render a progress bar.</li>\n<li>Other values are TBD, but clients can always fail back to \"message\"</li>\n</ul>",
        "id": 197571964,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1589469966
    },
    {
        "content": "<p>Suggestion: standardize x-progress (<em>if present</em>) to the format \"x/y\" where y can be \"?\" if the server does not know the total number of resources to process. If x <em>and</em> y are unknown to the server, just don't send the x-progress at all.<br>\nIf you want to express a percentage, use y = 100</p>",
        "id": 197741714,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1589570707
    },
    {
        "content": "<p>Seems doable but implies parsing on  the client-side. Also, that might restrict the servers by  not allowing them to send a free-text message.</p>\n<p>BTW, I just realized that a client should be able to inspect the size of the downloaded files and that way determine that the process is not stuck. This means that the only remaining issue is that the client would like to know how to interpret the progress information. Consider these examples: </p>\n<ul>\n<li><code>350/4600</code> is usable for progress bars if parsed. Can also be displayed as is, although it is not very descriptive.</li>\n<li><code>350/4600 resources</code> is usable for progress bars if parsed. Can also be displayed as is and is slightly easier to understand if rendered somewhere.</li>\n<li><code>46%</code> is usable for progress bars if parsed. Can also be displayed (even though it is a little short).</li>\n<li><code>number</code> - Not usable! The client wouldn't know what it is. It can be displayed as is, if that makes any sense.</li>\n<li><code>string</code> - anything else can only be displayed as is.</li>\n</ul>\n<p>If we decide to specify the format (instead of the two headers solution), then perhaps we need to make sure that this format can cover every single use case.  For example the following formats can probably be used and parsed with simple RegExp:</p>\n<ul>\n<li><code>^{number}{unit} {optional suffix}</code> - for example \"33% done\" or \"5 min remaining\"</li>\n<li><code>^{numerator}/{denominator} {subject} {optional suffix}</code> - for example \"34/45 resources handled\" or \"1024/45678 bytes exported...\"</li>\n<li><code>anything else as free message</code> - for example \"Export in progress. Please try again in 3 minutes.\"</li>\n</ul>\n<p>We can predict most of it, but I don't feel confident that we can have a format that covers everything. At least not until we have good number of servers and EHRs that support bulk-data in production, so that we have a reasonably good idea about what the possible x-progress values might be.</p>",
        "id": 197750246,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1589575539
    },
    {
        "content": "<p>Regarding \"<a href=\"https://hl7.org/fhir/uv/bulkdata/export/index.html#response---complete-status\">https://hl7.org/fhir/uv/bulkdata/export/index.html#response---complete-status</a>\": As per <a href=\"https://hl7.org/fhir/uv/bulkdata/export/index.html#response---complete-status\">https://hl7.org/fhir/uv/bulkdata/export/index.html#response---complete-status</a> the file download can only start when the server is done exporting the data. By then progress reporting is not useful anymore.</p>",
        "id": 197751306,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1589576201
    },
    {
        "content": "<p>Yes, that is correct. Please disregard the part about the progress being stuck :)</p>",
        "id": 197751700,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1589576428
    }
]