[
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"191414\">@Dan Gottlieb</span> . do you know of any API differences between my server and yours?</p>",
        "id": 153930194,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516660946
    },
    {
        "content": "<p>I think the main API difference is how they handle requests where no data is found - your server returns 200 and a link to an empty bundle and the SMART server returns a 204. Also, it looks like your server is returning links to a bundle.ndjson and a .zip(?) file in addition to the resource ndjson files, while the SMART server only returns the resource ndjson files.</p>",
        "id": 153930220,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1516666911
    },
    {
        "content": "<p>Does your server support the backend services auth API? If so, how can I register a client to test it out?</p>",
        "id": 153930221,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1516666925
    },
    {
        "content": "<p>yes supports back-end services</p>",
        "id": 153930310,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516722749
    },
    {
        "content": "<p>to register a client, use your browser to login through <a href=\"https://test.fhir.org/r3\" target=\"_blank\" title=\"https://test.fhir.org/r3\">https://test.fhir.org/r3</a></p>",
        "id": 153930311,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516722788
    },
    {
        "content": "<p>.. which doesn't work...</p>",
        "id": 153930312,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516722799
    },
    {
        "content": "<p>while I'm debugging that...</p>",
        "id": 153930319,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516723480
    },
    {
        "content": "<p>I think it's worth returning the bundle. It can help to determine the structure of the data returned. I don't have a solid use case to present right now for why that might matter, but the data returned might be a fairly deep web, and the bundle will help determine which are proximal resources, if you care</p>",
        "id": 153930321,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516723590
    },
    {
        "content": "<p>and it's because I always return the bundle, which all the information in it, that I don't return a 204</p>",
        "id": 153930322,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516723622
    },
    {
        "content": "<p>The single bundle could potentially have millions of entries though - I thought that was one of the things we were trying to avoid?</p>",
        "id": 153930330,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1516724646
    },
    {
        "content": "<p>Also, how would this be used - if the client loads and parses the bundle they still have to etl the ndjson files for it to be any use, at which point they have the same data in the db?</p>",
        "id": 153930331,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1516724661
    },
    {
        "content": "<p>the bundle is split at entry.resource  - so the ndjson files are all still one resource type, and resources are not carried twice</p>",
        "id": 153930336,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516724849
    },
    {
        "content": "<p>It looks like it has a fullUrl for each resource though - for a few hundred thousand paitents, wouldn't this be millions of rows?</p>",
        "id": 153930339,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1516725035
    },
    {
        "content": "<p>yes it could be plenty. It would still be a small % of the total though</p>",
        "id": 153930340,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516725077
    },
    {
        "content": "<p>I wonder if we should return an index to the files in the body of the final status response instead of having the links header and the bundle file. It would enable us to include metadata like the transaction date, whether auth is needed to download the files, and number of resources in each file. Also, implementers won't have to worry about bumping into header size restrictions.</p>",
        "id": 153930342,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1516725607
    },
    {
        "content": "<p>It does break the paradigm of the client not having to parse anything but headers though, which is a nice flow.</p>",
        "id": 153930343,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1516725621
    },
    {
        "content": "<p>it wouldn't be a substitute for the bundle directly, in that form at least. it carries other infomration</p>",
        "id": 153930345,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516726239
    },
    {
        "content": "<p>I'm not sure how significant the header size issue is. the HTTP/2.0 analysis said that it was normal to see 8k+ of headers</p>",
        "id": 153930346,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516726271
    },
    {
        "content": "<p>but i don't recall whether that analysis was scope limited</p>",
        "id": 153930347,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516726291
    },
    {
        "content": "<p>What info is in the bundle that we need to get to clients? We've talked about transaction date and possibly resource count - are there other items?</p>",
        "id": 153930350,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1516726614
    },
    {
        "content": "<p>fundamentally the element of interest is entry.search.mode, though I think it's use is ambiguous for $everything</p>",
        "id": 153930356,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516727117
    },
    {
        "content": "<p>For http, of course we're targeting http/1.1 support here too. I understand nothing about long headers is against the protocol, but going against the grain of default server configurations could be painful (or not...)</p>",
        "id": 153930431,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1516753256
    },
    {
        "content": "<p>For the bundle, hmm, I'm still not sure I understand -- is it that the bundle contains one entry for every unique resource returned (i.e. the number of entries in like <code>wc -l *.ndjson</code> if you've downloaded all the ndjson files?)</p>",
        "id": 153930433,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1516754196
    },
    {
        "content": "<p>my bundle does. It was my intent that it would be useful to allow you to know whether a resource is directly linked to a patient, or brought in by chasing the graph. This is most relevant for resources that are affected by the $list considerations, (which are current medications, vs other past records of medications). But it may be that Bundle.entry.search.mode is a very blunt device for that tricky problem even if we clarified it's usage</p>",
        "id": 153930443,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516765684
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191414\">@Dan Gottlieb</span> : server login using OAuth is fixed - login to my server using OAuth at <a href=\"https://test.fhir.org/r3\" target=\"_blank\" title=\"https://test.fhir.org/r3\">https://test.fhir.org/r3</a>, and then choose 'register a client' , with mode = backend services client</p>",
        "id": 153930468,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516795163
    },
    {
        "content": "<p>I can create you an account if you won't want to use HL7/facebook/google identity providers</p>",
        "id": 153930469,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516795200
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> - my comments about HTTP/2.0 were referring the source analysis the WG used when optimising http/2.0: it was analysis of how http/1.1 is actually being used</p>",
        "id": 153930470,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516795274
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> It times out when I click the login through google link. When I tried with hl7, I got this error \"The state does not match. You may be a victim of a cross-site spoof (or this server has restarted, try again)\".</p>",
        "id": 153930503,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1516813816
    },
    {
        "content": "<p>I made a sample CLI client for bulk data servers (<a href=\"https://github.com/smart-on-fhir/sample-apps-stu3/tree/master/fhir-downloader\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/sample-apps-stu3/tree/master/fhir-downloader\">https://github.com/smart-on-fhir/sample-apps-stu3/tree/master/fhir-downloader</a>) and I am currently trying to make it compatible with <a href=\"https://test.fhir.org/r3\" target=\"_blank\" title=\"https://test.fhir.org/r3\">https://test.fhir.org/r3</a>. While doing that I noticed some interesting behavior that is probably worth discussing:</p>\n<p>After I manage to get through the entire flow and try to download a file, I still have to provide an \"Accept: application/fhir+ndjson\". Otherwise I receive an error saying:<br>\n<code>Mime Type mismatch. Original request was for application/x-ndjson, current request is for \"\"</code></p>\n<p>I wonder if this should be added to (or removed from) the spec? Is that really needed at this point?</p>",
        "id": 153930506,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1516814794
    },
    {
        "content": "<p>Also, is the <code>_type</code> parameter implemented there? I was trying with  <code>http://test.fhir.org/r3/Patient/$everything?_type=CarePlan,Claim&amp;start=2016</code> but it returns all kinds of resources.</p>",
        "id": 153930530,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1516826866
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191414\">@Dan Gottlieb</span> did you go back? that's an issue I haven't got around to resolving - if you try one kind of authentication, you have to refresh the form if you go back</p>",
        "id": 153930567,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516833156
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193731\">@Vladimir Ignatov</span> - I will drop the requirement that accept must not be empty. But it must be correct if present</p>",
        "id": 153930569,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516833275
    },
    {
        "content": "<p>e.g. you can't, at this point, ask for xml after all</p>",
        "id": 153930571,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516833291
    },
    {
        "content": "<p>and no, my server doesn't support the _type parameter at this point</p>",
        "id": 153930573,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516833303
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> In each instance I started from <a href=\"http://test.fhir.org/r3\" target=\"_blank\" title=\"http://test.fhir.org/r3\">test.fhir.org/r3</a> and cleared my cookies. I just tried it again and am having the same issues. Do you know if the social login is working for other folks?</p>",
        "id": 153930702,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1516891758
    },
    {
        "content": "<p>(Trying now... the redirect back to <a href=\"http://test.fhir.org\" target=\"_blank\" title=\"http://test.fhir.org\">test.fhir.org</a> from Google seems to hang; <a href=\"http://test.fhir.org\" target=\"_blank\" title=\"http://test.fhir.org\">test.fhir.org</a> isn't serving up a page.)</p>",
        "id": 153930710,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1516895171
    },
    {
        "content": "<p>hmm. it works for me on my debug version... how useful....</p>",
        "id": 153930798,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516928291
    },
    {
        "content": "<p>seems as if the issue is lack of memory on the server.... bumping it's size up now</p>",
        "id": 153930803,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516933869
    },
    {
        "content": "<p>That did the trick, thanks!</p>",
        "id": 153930807,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1516946126
    },
    {
        "content": "<p>great.</p>",
        "id": 153930809,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1516957710
    },
    {
        "content": "<p>Are there any EHR vendors (eg, Epic) who plan to pilot bulk export functionality?</p>",
        "id": 153944437,
        "sender_full_name": "Informatics User",
        "timestamp": 1520962622
    },
    {
        "content": "<p>A number of EHR vendors will be exploring the bulk data effort in 2018 as part of the HL7 Argonaut Project (which includes Epic, Cerner, athenahealth, Meditech, McKesson, and others vendors), but have not yet committed to specific pilots: <a href=\"http://www.hl7.org/documentcenter/public_temp_6FECF0C3-1C23-BA17-0CB268745144461B/pressreleases/HL7_PRESS_20180227.pdf\" target=\"_blank\" title=\"http://www.hl7.org/documentcenter/public_temp_6FECF0C3-1C23-BA17-0CB268745144461B/pressreleases/HL7_PRESS_20180227.pdf\">http://www.hl7.org/documentcenter/public_temp_6FECF0C3-1C23-BA17-0CB268745144461B/pressreleases/HL7_PRESS_20180227.pdf</a></p>",
        "id": 153944750,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1521038057
    },
    {
        "content": "<p>Hi Vojtech/@<strong>Informatics User</strong> ,  To add on to Dan's answer -- Epic specifically should have a prototype server (and hopefully client too!) by the May connectathon. By the Sept connectathon, our prototype will be more stable. Let me know if you're specifically interested in testing with Epic.</p>",
        "id": 153944945,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1521087752
    },
    {
        "content": "<p>Isaac - is your Epic Bulk Data server available?  We would like to test with it and we will be at the Sept Connectathon.</p>",
        "id": 153994367,
        "sender_full_name": "Karen Fairchild",
        "timestamp": 1536345027
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"195992\">@Karen Fairchild</span> - oh man, almost. We've been working on getting it all setup for the past couple of weeks. Will you ask <span class=\"user-mention\" data-user-id=\"195242\">@Justin Stauffer</span> and I this question again next week?</p>",
        "id": 153994368,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1536345114
    },
    {
        "content": "<p>Will do!  Thanks for the update!</p>",
        "id": 153994369,
        "sender_full_name": "Karen Fairchild",
        "timestamp": 1536345162
    },
    {
        "content": "<p>I'm updating our URL on the documentation, but the Cerner server is up: <a href=\"https://fhir-open.stagingcerner.com/r4/a758f80e-aa74-4118-80aa-98cc75846c76/Patient/$export\" target=\"_blank\" title=\"https://fhir-open.stagingcerner.com/r4/a758f80e-aa74-4118-80aa-98cc75846c76/Patient/$export\">https://fhir-open.stagingcerner.com/r4/a758f80e-aa74-4118-80aa-98cc75846c76/Patient/$export</a></p>",
        "id": 153994392,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1536349929
    },
    {
        "content": "<p>There may still be some data issues, let us know if you find something</p>",
        "id": 153994393,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1536349944
    },
    {
        "content": "<p>Currently no OAuth support</p>",
        "id": 153994394,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1536349962
    },
    {
        "content": "<p>Is this supposed to have security or not?  We are having issues connecting to your server.</p>",
        "id": 153995771,
        "sender_full_name": "Karen Fairchild",
        "timestamp": 1536680927
    },
    {
        "content": "<p>Jenni - is your Cerner bulk data server secured or not?  We are having issues connecting to it.</p>",
        "id": 153995772,
        "sender_full_name": "Karen Fairchild",
        "timestamp": 1536680978
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span>  - still having issues connecting to your Cerner bulk data server.  What if any security is required for <a href=\"https://fhir-open.stagingcerner.com/r4/a758f80e-aa74-4118-80aa-98cc75846c76/Patient/$export\" target=\"_blank\" title=\"https://fhir-open.stagingcerner.com/r4/a758f80e-aa74-4118-80aa-98cc75846c76/Patient/$export\">https://fhir-open.stagingcerner.com/r4/a758f80e-aa74-4118-80aa-98cc75846c76/Patient/$export</a></p>",
        "id": 153996243,
        "sender_full_name": "Karen Fairchild",
        "timestamp": 1536761677
    },
    {
        "content": "<p>Should be none - what error are you seeing? What is the X-REquest-Id value returned with the error?</p>",
        "id": 153996264,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1536762998
    },
    {
        "content": "<p>Thanks.  <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span>  We thought it needed a token -- we'll take that out and retry it.</p>",
        "id": 153996290,
        "sender_full_name": "Karen Fairchild",
        "timestamp": 1536766884
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span>  -we processed data from your Cerner bulk data server and were able to correlate the clinical data with the patient data.  We did not see any MR (Medical Record Number) identifiers in your data.  Are you able to populate MRNs?  We use that for the bulk data \"de-id\" view for researchers.  Also noticed no race or ethnicity.  I realize those are argonaut extensions but If you had race or ethnicity we would be pulling that data also for the research scenario in the connectathon also.   <span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span>  - will Epic have MRNs for the connectathon?</p>",
        "id": 153997075,
        "sender_full_name": "Karen Fairchild",
        "timestamp": 1536945902
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span>  <span class=\"user-mention\" data-user-id=\"195242\">@Justin Stauffer</span></p>",
        "id": 153997365,
        "sender_full_name": "Karen Fairchild",
        "timestamp": 1537195028
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> <span class=\"user-mention\" data-user-id=\"195242\">@Justin Stauffer</span>  checking in on the Epic bulk data server - ETA for when it is ready - also, will Epic be able to supply an MR type identifier for patient medical record numbers - we were planning on using that to assign a pseudo patient identifier of type ANON in the patient resource in the connectathon for the \"research\" view of bulk data.</p>",
        "id": 153997366,
        "sender_full_name": "Karen Fairchild",
        "timestamp": 1537195106
    },
    {
        "content": "<p>We're still working on some setup for the Epic FHIR Bulk Data Server. It shouldn't be much longer. I'm not 100% clear on your question about the patient identifiers but in addition to returning the FHIR ID for a patient resource, we also return other MRNs for the patient that we have on file.</p>",
        "id": 153997597,
        "sender_full_name": "Justin Stauffer",
        "timestamp": 1537277184
    },
    {
        "content": "<p>How long did it take to get the data from the Cerner server? My client has been running for more than 30 minutes and still not done</p>",
        "id": 153997619,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1537283946
    },
    {
        "content": "<p>...also, I guess the Cerner server returns R4 resources? ...any chance to have STU3 or (even better) DSTU2 ?</p>",
        "id": 153997620,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1537283982
    },
    {
        "content": "<p>There was a discussion on <a href=\"#narrow/stream/95-bulk-data/subject/Gzip.20compression.20on.20Cerner.20staging.20server\" title=\"#narrow/stream/95-bulk-data/subject/Gzip.20compression.20on.20Cerner.20staging.20server\">https://chat.fhir.org/#narrow/stream/95-bulk-data/subject/Gzip.20compression.20on.20Cerner.20staging.20server</a>, but I'm planning to make gzipped ndjson fields available for download</p>",
        "id": 153997622,
        "sender_full_name": "Dennis Patterson",
        "timestamp": 1537284076
    },
    {
        "content": "<p>Our connectathon Server will fall under the r4 path (dstu2 is in production and stu3 is under development), but I mentioned on the kickoff call that I'll be aiming for STU3 compliance on those files... they likely already are</p>",
        "id": 153997623,
        "sender_full_name": "Dennis Patterson",
        "timestamp": 1537284144
    },
    {
        "content": "<p>...completed in 50 minutes, that's a lot of data! (that I actually failed to download...working on that)</p>",
        "id": 153997636,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1537285600
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195242\">@Justin Stauffer</span>  - thanks Justin.  Glad to hear you will popoulate MRNs in the Patient structure  where you have them as we will use those for our de-identification use case.</p>",
        "id": 153997667,
        "sender_full_name": "Karen Fairchild",
        "timestamp": 1537290899
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195992\">@Karen Fairchild</span>  I noticed your request about the Cerner server.  My priority right now is uplifting the API to the newest version of the spec, making some hosting changes to our mock data, and then digging into the Backend Services spec.  I have noted the desire for MRNs and race/ethnicity extensions, but can't make any promises for the connectathon timeline</p>",
        "id": 153997757,
        "sender_full_name": "Dennis Patterson",
        "timestamp": 1537300592
    },
    {
        "content": "<p>Thanks!</p>",
        "id": 153997763,
        "sender_full_name": "Karen Fairchild",
        "timestamp": 1537301075
    },
    {
        "content": "<p>OK, I think our test bulk data server is up and ready to go. The URL is as follows:<br>\n<a href=\"https://connectathon.epic.com/interconnect-fhir-bulk/api/FHIR/STU3/Group/ebUKRzWjCOkHtNr8R-zHgzc4TdaZx9-TOvXKIeP0bLnM3/$export\" target=\"_blank\" title=\"https://connectathon.epic.com/interconnect-fhir-bulk/api/FHIR/STU3/Group/ebUKRzWjCOkHtNr8R-zHgzc4TdaZx9-TOvXKIeP0bLnM3/$export\">https://connectathon.epic.com/interconnect-fhir-bulk/api/FHIR/STU3/Group/ebUKRzWjCOkHtNr8R-zHgzc4TdaZx9-TOvXKIeP0bLnM3/$export</a></p>\n<p>Some things to note:<br>\n- You'll notice I provided a Group ID in the URL above – this is the only Group I have defined on the test server right now and it should return data for 2 patients. We do not support the \"all patients\" or \"system level export\" options.<br>\n- Right now this test endpoint does not currently require OAuth2 but that will be subject to change as we're testing things at the Connectathon.<br>\n- Since we're not requiring OAuth2 but we still need to know who is requesting the data from our test endpoint, we require clients to provide a custom HTTP header identifying themselves. This header is called \"Epic-Client-ID\" and you will need to specify one of the Client IDs mentioned below. So for example, the header would look like this:<br>\nEpic-Client-ID: JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ01<br>\nI have a few such example client IDs that will allow multiple bulk data clients to request the same group's data at once since we normally only allow a particular client to request the so often (I think it's once per day or something along those lines). These test Client IDs are: JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ01, JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ02, JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ03, and JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ04.<br>\n- You'll also notice our complete status response always returns requiresAccessToken=true right now. This is because we never intend to use this in an unsecured fashion in the real world so I just hard-coded that. If that's an issue for some clients at the Connectathon, I can probably tweak that logic.<br>\n- The resources returned are STU3.</p>",
        "id": 153998119,
        "sender_full_name": "Justin Stauffer",
        "timestamp": 1537367928
    },
    {
        "content": "<p>To be pedantic, I should say that \"requiresAccessToken: false\" doesn't mean that a system is insecure; it just implies that any required authentications is baked into the URL (e.g., a URL with a signed authentication parameter baked in).</p>",
        "id": 153998171,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1537370549
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 153998175,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1537370685
    },
    {
        "content": "<p>For the connnectathon, if you're hard coding rules, can you relax the once daily restriction?</p>",
        "id": 153998176,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1537370690
    },
    {
        "content": "<p>Otherwise, four client IDs would mean that only eight exports could be performed all weekend, if I understood correctly? In my experience during testing and debugging, we are likely to need to kick off several hundred exports each.</p>",
        "id": 153998179,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1537370772
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195242\">@Justin Stauffer</span></p>",
        "id": 153998180,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1537370814
    },
    {
        "content": "<p>we likely need to identify a set of reasonable alternative security models and describe how they are declared in CapabilityStatement. Such as mutual-authenticated-TLS (IHE-ATNA), or API-KEY and https, or ???  The security wg would love to help, but we need the active development environment to come up with some patterns. Note that no pattern will ever be perfectly secure, so we should not be afraid of being realistic. Also, some data does not require transport security (de-identified data assessed as publicly exportable)</p>",
        "id": 153998194,
        "sender_full_name": "John Moehrke",
        "timestamp": 1537371974
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> Yeah, I can mess with those rules as needed. That's not a problem.</p>",
        "id": 153998278,
        "sender_full_name": "Justin Stauffer",
        "timestamp": 1537376854
    },
    {
        "content": "<p>Oh, and if anyone foresees their system having an issue with my non-GUID client IDs, please let me know. I may adjust them anyway but we don't /really/ care what the client ID is as long as it's unique to us.</p>",
        "id": 153998637,
        "sender_full_name": "Justin Stauffer",
        "timestamp": 1537455358
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195242\">@Justin Stauffer</span>  - just checking to see if you are doing gzip files from your bulk data server or are they the original standard ndjson files?</p>",
        "id": 153999508,
        "sender_full_name": "Karen Fairchild",
        "timestamp": 1537812807
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195992\">@Karen Fairchild</span> We return the raw ndjson files (no zipping).</p>",
        "id": 153999821,
        "sender_full_name": "Justin Stauffer",
        "timestamp": 1537908776
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"195242\">@Justin Stauffer</span></p>",
        "id": 153999833,
        "sender_full_name": "Karen Fairchild",
        "timestamp": 1537915050
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195992\">@Karen Fairchild</span> Here is an example request that I've sent from Fiddler with HTTP headers, etc.:<br>\n<strong>HTTP GET to:</strong> <a href=\"https://connectathon.epic.com/interconnect-fhir-bulk/api/FHIR/STU3/Group/ebUKRzWjCOkHtNr8R-zHgzc4TdaZx9-TOvXKIeP0bLnM3/$export\" target=\"_blank\" title=\"https://connectathon.epic.com/interconnect-fhir-bulk/api/FHIR/STU3/Group/ebUKRzWjCOkHtNr8R-zHgzc4TdaZx9-TOvXKIeP0bLnM3/$export\">https://connectathon.epic.com/interconnect-fhir-bulk/api/FHIR/STU3/Group/ebUKRzWjCOkHtNr8R-zHgzc4TdaZx9-TOvXKIeP0bLnM3/$export</a></p>\n<p><strong>HTTP Headers:</strong><br>\nUser-Agent: Fiddler<br>\nHost: <a href=\"http://connectathon.epic.com\" target=\"_blank\" title=\"http://connectathon.epic.com\">connectathon.epic.com</a><br>\nContent-Type: application/fhir+json<br>\nAccept: application/json<br>\nEpic-Client-ID: JJJJJJJJJJJJJJJJJJJJJJJJJJJJJJ01<br>\nContent-Length: 0</p>",
        "id": 154001376,
        "sender_full_name": "Justin Stauffer",
        "timestamp": 1538227786
    },
    {
        "content": "<p>Epic OAuth2 secured server info:<br>\nOAuth2 Token Endpoint (expecting Client Credentials with JWT): <a href=\"https://connectathon.epic.com/interconnect-fhir-oauth/oauth2/token\" target=\"_blank\" title=\"https://connectathon.epic.com/interconnect-fhir-oauth/oauth2/token\">https://connectathon.epic.com/interconnect-fhir-oauth/oauth2/token</a><br>\nSecured Bulk Data server URL: <a href=\"https://connectathon.epic.com/interconnect-fhir-bulk-secure/api/FHIR/STU3/Group/ebUKRzWjCOkHtNr8R-zHgzc4TdaZx9-TOvXKIeP0bLnM3/$export\" target=\"_blank\" title=\"https://connectathon.epic.com/interconnect-fhir-bulk-secure/api/FHIR/STU3/Group/ebUKRzWjCOkHtNr8R-zHgzc4TdaZx9-TOvXKIeP0bLnM3/$export\">https://connectathon.epic.com/interconnect-fhir-bulk-secure/api/FHIR/STU3/Group/ebUKRzWjCOkHtNr8R-zHgzc4TdaZx9-TOvXKIeP0bLnM3/$export</a></p>\n<p>You must use this client ID to make a request for the token: 4E5DF30EC3EF11E8845F0050568B2116<br>\nI have a certificate created that I can send you the keys for as well (I'm just doing manual client registration right now so I thought that would be easiest to supply the key).</p>",
        "id": 154001553,
        "sender_full_name": "Justin Stauffer",
        "timestamp": 1538231383
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195242\">@Justin Stauffer</span> <span class=\"user-mention\" data-user-id=\"191358\">@Dennis Patterson</span> we posted some sample keys on the bulk data docs repo so people don't have to host jwks files for testing. Is it possible to register these too? <a href=\"https://github.com/smart-on-fhir/fhir-bulk-data-docs/tree/master/sample-jwks\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/fhir-bulk-data-docs/tree/master/sample-jwks\">https://github.com/smart-on-fhir/fhir-bulk-data-docs/tree/master/sample-jwks</a></p>",
        "id": 154001572,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1538231721
    },
    {
        "content": "<p>Sure I'll get to work registering these in the Cerner server</p>",
        "id": 154001577,
        "sender_full_name": "Dennis Patterson",
        "timestamp": 1538231790
    },
    {
        "content": "<p>This zip file has the key data for Epic. There are multiple representations of the keys in here to make it easy for people using different systems.</p>\n<p>Public Key:                      connectathon-2018-09-a.cer<br>\nPrivate Key:                     connectathon-2018-09-a.key (encrypted with the password \"epic\")<br>\nPrivate Key Unencrypted:         connectathon-2018-09-a-unencrypted.key (not encrypted, in base64 format)<br>\nCombined Pub/Priv Key (PEM):     connectathon-2018-09-a.pem (encrypted with password \"epic\")<br>\nCombined Pub/Priv Key (PFX):     connectathon-2018-09-a.pfx (encrypted with password \"epic\")<br>\nPublic Key in RSA Crypto Form:   connectathon-2018-09-a-rsacrypto-pub.txt<br>\nPrivate Key in RSA Crypto Form:  connectathon-2018-09-a-rsacrypto-priv.txt</p>\n<p><a href=\"/user_uploads/10155/KbdzHh3Hh8be8puo9VZxjsxC/HL7-Connectathon-2018-09.7z\" target=\"_blank\" title=\"HL7-Connectathon-2018-09.7z\">HL7-Connectathon-2018-09.7z</a><br>\n<a href=\"user_uploads/10155/4NpGIvDAwYG-JUtFM1ytS5I9/HL7-Connectathon-2018-09.zip\" target=\"_blank\" title=\"user_uploads/10155/4NpGIvDAwYG-JUtFM1ytS5I9/HL7-Connectathon-2018-09.zip\">HL7-Connectathon-2018-09.zip</a></p>",
        "id": 154001674,
        "sender_full_name": "Justin Stauffer",
        "timestamp": 1538234416
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191414\">@Dan Gottlieb</span>  and others: I've registered the sample jwks in the Cerner server under the \"sample_jwks_es384\" and \"sample_jwks_rs384\" client ids</p>",
        "id": 154001683,
        "sender_full_name": "Dennis Patterson",
        "timestamp": 1538234714
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191358\">@Dennis Patterson</span>  awesome!</p>",
        "id": 154001685,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1538234788
    },
    {
        "content": "<p>One note - we've discovered you have use the rawgit service to get a proper content type on the key files. For example, <a href=\"https://cdn.rawgit.com/smart-on-fhir/fhir-bulk-data-docs/master/sample-jwks/ES384.public.json\" target=\"_blank\" title=\"https://cdn.rawgit.com/smart-on-fhir/fhir-bulk-data-docs/master/sample-jwks/ES384.public.json\">https://cdn.rawgit.com/smart-on-fhir/fhir-bulk-data-docs/master/sample-jwks/ES384.public.json</a> .</p>",
        "id": 154001686,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1538234799
    },
    {
        "content": "<p>Is it possible to alter the jwks url for the registered keys?</p>",
        "id": 154001688,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1538234830
    },
    {
        "content": "<p>I used <a href=\"https://raw.githubusercontent.com/smart-on-fhir/fhir-bulk-data-docs/master/sample-jwks/ES384.public.json\" target=\"_blank\" title=\"https://raw.githubusercontent.com/smart-on-fhir/fhir-bulk-data-docs/master/sample-jwks/ES384.public.json\">https://raw.githubusercontent.com/smart-on-fhir/fhir-bulk-data-docs/master/sample-jwks/ES384.public.json</a> which I <em>think</em> gets the same results</p>",
        "id": 154001689,
        "sender_full_name": "Dennis Patterson",
        "timestamp": 1538234912
    },
    {
        "content": "<p>Yes, save for content type headers</p>",
        "id": 154001691,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1538234934
    },
    {
        "content": "<p>It should, but it returns a content type of text instead of JSON. This broke the SMART server, but may work with yours :)</p>",
        "id": 154001693,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1538234950
    },
    {
        "content": "<p>gotcha</p>",
        "id": 154001696,
        "sender_full_name": "Dennis Patterson",
        "timestamp": 1538234982
    },
    {
        "content": "<p>I did some testing and it doesn't choke on the content type header, but I'll push out the change for consistency on the next deployment.  If anybody tries these client ids, let me know if you run into any issues</p>",
        "id": 154001723,
        "sender_full_name": "Dennis Patterson",
        "timestamp": 1538235194
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191358\">@Dennis Patterson</span> the SMART client now works your server!</p>",
        "id": 154002021,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1538246288
    },
    {
        "content": "<p>If you want to use the shared RSA key that Dan posted to access the Epic URL, you can do so now as long as you use this Client ID to obtain your access token: DD794EAEC42511E88BE00050568B2116</p>",
        "id": 154002247,
        "sender_full_name": "Justin Stauffer",
        "timestamp": 1538252899
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193731\">@Vladimir Ignatov</span> : cannot use the SMART bulk data test server - it gives me <code>Unable to verify the token with any of the public keys found in the JWKS</code>, not sure what changed</p>",
        "id": 154016644,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541685061
    },
    {
        "content": "<p>I tried to re-create the client id, double-checked the client credentials, everything seems fine</p>",
        "id": 154016645,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541685094
    },
    {
        "content": "<p>Client assertion that fails: <code>eyJ0eXAiOiJKV1QiLCJrdHkiOiJSU0EiLCJhbGciOiJSUzM4NCIsImtpZCI6IjY2NjJGMkY4MUMxQTQ1QTcxNTNEREI3NUM4MjJCNjY3M0U2RTdBMjkifQ.eyJpc3MiOiJleUpoYkdjaU9pSklVekkxTmlJc0luUjVjQ0k2SWtwWFZDSXNJbXRwWkNJNkluSmxaMmx6ZEhKaGRHbHZiaTEwYjJ0bGJpSjkuZXlKcWQydHpYM1Z5YkNJNkltaDBkSEJ6T2k4dlpHVnRieTVqWVhKbFpYWnZiSFYwYVc5dUxtTnZiUzlEVG1wM2RHTmhjbVZsZG05c2RYUnBiMjVqYjIwdWFuTnZiaUlzSW1GalkyVnpjMVJ2YTJWdWMwVjRjR2x5WlVsdUlqb3hOU3dpYVdGMElqb3hOVFF4TmpnME1ETTJmUS5MY2dYeTN5VEJtNFQ2bnN0XzBDVzg0T29wU24xUmwxbVc1azEtNGNTM2Z3Iiwic3ViIjoiZXlKaGJHY2lPaUpJVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0lzSW10cFpDSTZJbkpsWjJsemRISmhkR2x2YmkxMGIydGxiaUo5LmV5SnFkMnR6WDNWeWJDSTZJbWgwZEhCek9pOHZaR1Z0Ynk1allYSmxaWFp2YkhWMGFXOXVMbU52YlM5RFRtcDNkR05oY21WbGRtOXNkWFJwYjI1amIyMHVhbk52YmlJc0ltRmpZMlZ6YzFSdmEyVnVjMFY0Y0dseVpVbHVJam94TlN3aWFXRjBJam94TlRReE5qZzBNRE0yZlEuTGNnWHkzeVRCbTRUNm5zdF8wQ1c4NE9vcFNuMVJsMW1XNWsxLTRjUzNmdyIsImF1ZCI6Imh0dHBzOi8vYnVsay1kYXRhLnNtYXJ0aGVhbHRoaXQub3JnL2F1dGgvdG9rZW4iLCJqdGkiOiI1Njg2ZjdkMy03YzlkLTQ5MjUtOWM2My0xOTIxZDNmYmQ3YjMiLCJuYmYiOjE1NDE2ODQ0MjcsImV4cCI6MTU0MTY4NDcyN30.sa_ntw7ZcUbuFoGYRel4M-Jrx16GUmvKg8p7LGKnSVYm5WzPrx7EWZ_TOjxtl1d2t4Cw2AdF34ftcHjI8wTHXzMV1QgqXsPELFwUYPmp8xol54Fjx1wYkah0kraFJ8hED1nrjfTkm873M3lldELhAxCc7pMnTLFpepRG7R5ENepimP9uIqYyiAwYVKy5kbAWA839yb1Dolw4JSVqJEFFvbAiVCzi-_pLzFIugu1JWVRC3yYEY8uFJHkkurjEac7snd-pRo4E6u-aKn0vFc4NzcUFNb6FOXeBiHhZI6Rk1jq4spepvfUhxZTvW7uU3Ek2ZeCZSTzRrmqIUPD8J7kjpw</code></p>",
        "id": 154016646,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541685120
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195242\">@Justin Stauffer</span> :  getting authentication problems with Epic server as well, using client ID <code>4E5DF30EC3EF11E8845F0050568B2116</code></p>",
        "id": 154016654,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541686313
    },
    {
        "content": "<p>Client assertion:</p>",
        "id": 154016655,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541686322
    },
    {
        "content": "<p><code>eyJ0eXAiOiJKV1QiLCJrdHkiOiJSU0EiLCJhbGciOiJSUzM4NCIsImtpZCI6IkQ3NjU0NDAyQkZDMzkzNzQyN0VBMzlBNTRBOTQzQUNENDlGNEU4MTYifQ.eyJpc3MiOiI0RTVERjMwRUMzRUYxMUU4ODQ1RjAwNTA1NjhCMjExNiIsInN1YiI6IjRFNURGMzBFQzNFRjExRTg4NDVGMDA1MDU2OEIyMTE2IiwiYXVkIjoiaHR0cHM6Ly9jb25uZWN0YXRob24uZXBpYy5jb20vaW50ZXJjb25uZWN0LWZoaXItb2F1dGgvb2F1dGgyL3Rva2VuIiwianRpIjoiYWU0YmM2ODgtN2U0MS00ZDBmLTk4NzgtYjBhMTM1ZjdjYzE3IiwibmJmIjoxNTQxNjg1NDY3LCJleHAiOjE1NDE2ODU3Njd9.WXdMO-9SHUMsL_YBMPA69xS0TnO-2RaDz5zGMWPL66Z0uLvjvoi6KFo6Ku8OXW828eYhvtP26ad-ysrFxZ8vA2n45jk18MRfqmXYBxZzb_rWpYMZwfz6DoJ8AYrgQXfzXv4_BNU4P6vsr1DN96xNgUszCdbiPESQY8CQv4JgJ9n6PDhIOdEIczxw1xtItVQ0XXP8p495OJhIcME4ZQyS5u83s1vfkkCd7HUENv5DV70rbnTqdrUyEX6dl4ShwIKk8ml3VPD-zt5uEGQCu44zkcSsiMkZh9aenTQz7STYoJU9xvjFytnW5Iigu4pXOBTVCsIki0n0I2gS-_nU3Kee1Q</code></p>",
        "id": 154016656,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541686323
    },
    {
        "content": "<p>Getting back <code>invalid_client</code></p>",
        "id": 154016657,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541686343
    },
    {
        "content": "<p>Nothing has changed in the last month. Could it be a change on your end?</p>",
        "id": 154016725,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1541692485
    },
    {
        "content": "<p>It might well be, but I cannot find anything wrong: <code>\"kid\": \"6662F2F81C1A45A7153DDB75C822B6673E6E7A29\"</code>, the client_id is:</p>",
        "id": 154016727,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541693442
    },
    {
        "content": "<p>{<br>\n  \"jwks_url\": \"<a href=\"https://demo.careevolution.com/CNjwtcareevolutioncom.json\" target=\"_blank\" title=\"https://demo.careevolution.com/CNjwtcareevolutioncom.json\">https://demo.careevolution.com/CNjwtcareevolutioncom.json</a>\",<br>\n  \"accessTokensExpireIn\": 15,<br>\n  \"iat\": 1541684036<br>\n}</p>",
        "id": 154016728,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541693444
    },
    {
        "content": "<p>and that jwks_url resolves correctly</p>",
        "id": 154016729,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541693491
    },
    {
        "content": "<p>Maybe the server did not switch from daylight saving time?</p>",
        "id": 154016730,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541693517
    },
    {
        "content": "<p>Here is your error log:</p>\n<p>{ TokenExpiredError: jwt expired<br>\n    at /app/node_modules/jsonwebtoken/verify.js:141:21<br>\n    at getSecret (/app/node_modules/jsonwebtoken/verify.js:76:14)<br>\n    at Object.module.exports [as verify] (/app/node_modules/jsonwebtoken/verify.js:80:10)<br>\n    ...<br>\nname: 'TokenExpiredError',<br>\nmessage: 'jwt expired',<br>\nexpiredAt: 2018-11-08T13:45:27.000Z }</p>",
        "id": 154016762,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1541696564
    },
    {
        "content": "<p>Ah ok, so it is a time-related problem - let me double-check that I am sending the right expiration time</p>",
        "id": 154016763,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541696673
    },
    {
        "content": "<p>So I sent that request at 8:40 AM EST = 13:40 UTC, with that expiration time - so it should not have been considered expired?</p>",
        "id": 154016766,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541697069
    },
    {
        "content": "<p>What's the current time now according to your server?</p>",
        "id": 154016767,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541697099
    },
    {
        "content": "<p>2018-11-08T17:13:03.755563+00:00</p>",
        "id": 154016771,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1541697205
    },
    {
        "content": "<p>looks right - let me try again</p>",
        "id": 154016773,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541697464
    },
    {
        "content": "<p>same error - I am sending <code>\"exp\": 1541698009</code></p>",
        "id": 154016775,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541697812
    },
    {
        "content": "<p>that should be 17:26 UTC</p>",
        "id": 154016776,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541697837
    },
    {
        "content": "<p>the problem is not the expiration, is the <code>nbf</code> claim - removed that and it works</p>",
        "id": 154016780,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541698082
    },
    {
        "content": "<p>Are you also adding some lifetime to the current timestamp? For example, 5 min in JS would be:<br>\nexp: Date.now()/1000 + 300, // 5 min</p>",
        "id": 154016781,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1541698105
    },
    {
        "content": "<p>I was sending nbf = current time, exp = current time + 5 minutes</p>",
        "id": 154016784,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541698142
    },
    {
        "content": "<p>Now I am just sending exp = current time + 5 minutes and it works</p>",
        "id": 154016786,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541698154
    },
    {
        "content": "<p>I guess my clock is a bit later than your server one and that's enough to make the nbf not valid</p>",
        "id": 154016789,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541698195
    },
    {
        "content": "<p>I think I'll just remove the <code>nbf</code> claim - it just causes problems</p>",
        "id": 154016800,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541698475
    },
    {
        "content": "<p>Yes, <code>nbf</code> seem confusing to me. Who knows how the underlying libraries will interpret it...</p>",
        "id": 154016801,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1541698595
    },
    {
        "content": "<p>Agreed</p>",
        "id": 154016802,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541698880
    },
    {
        "content": "<p>Thanks Vladimir</p>",
        "id": 154016803,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541698889
    },
    {
        "content": "<p>Sure</p>",
        "id": 154016804,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1541699051
    }
]