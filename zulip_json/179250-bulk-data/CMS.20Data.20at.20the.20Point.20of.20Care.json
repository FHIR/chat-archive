[
    {
        "content": "<p>Reading through <a href=\"https://dpc.cms.gov/docs#attribution\" target=\"_blank\" title=\"https://dpc.cms.gov/docs#attribution\">https://dpc.cms.gov/docs#attribution</a>, I love the use of FHIR built-ins for this use case <span class=\"user-mention\" data-user-id=\"197208\">@Nick Robison</span> . A few quick notes...</p>",
        "id": 172976728,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1565544783
    },
    {
        "content": "<p>In the example of <code>POST /api/v1/Group</code>, the body should be a Group rather than a bundle entry object (with a \"resource\" property pointing to a group).</p>",
        "id": 172976783,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1565544904
    },
    {
        "content": "<blockquote>\n<p>Membership changes submitted to an existing attribution Group are always merged with the existing group state.Â </p>\n</blockquote>\n<p>Are these changed submitted via <code>POST /api/v1/Group</code> (I didn't see the URL in this section, so I'm inferring)? If so, \"merge\" behavior is not consistent with the FHIR core spec (which would always create a new group and not merged into an existing group here). You might want to think about <code>PATCH</code> for issuing small changes to an existing resource, or define a custom operation to merge a set of changes in; thought I would avoid overloading the FHIR \"create\" operation as \"merge\".</p>",
        "id": 172976836,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1565545007
    },
    {
        "content": "<p>For things like this I would prefer a custom operation, as patch requires you to know the entire previous state to apply it.</p>",
        "id": 172986594,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1565563799
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> Thanks for the feedback! We'll be improving the documentation as we go along, and I agree it's pretty unclear regarding the issues you've mentioned. I'll get that fixed quickly.</p>\n<p>Regarding the /Group POST, you're seeing a copy/paste bug in the documentation, the actual endpoint takes an actual resource and not a pointer, I'll get that updated.</p>\n<p>In terms of updating the membership Group, we're currently using PUT to update the group (though I doesn't actually say this in the docs!), so the actual command would be <code>PUT Group/{group.id} {body}</code>. Does that make sense?</p>\n<p>One question I had for the group, was in our use of code able concepts for attributing to a given provider NPI, in the SMART on FHIR docs, the R4 resource has a valueReference type, which makes things really easy, this is our attempt at back porting the functionality to STU3, but it doesn't feel right. Any thoughts or suggestions?</p>\n<p>Thanks for the feedback, we're actively working to refine our implementation and will definitely be making changes to the docs and interaction model as we go along.</p>",
        "id": 173017410,
        "sender_full_name": "Nick Robison",
        "timestamp": 1565611359
    },
    {
        "content": "<p>There is already a proposal for operations to add / remove individual elements from a group: <a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=21650&amp;start=25\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=21650&amp;start=25\">https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=21650&amp;start=25</a></p>",
        "id": 173031790,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1565622664
    },
    {
        "content": "<p>A standard PUT would replace the entire group content, not add new members</p>",
        "id": 173032022,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1565622813
    },
    {
        "content": "<blockquote>\n<p>In terms of updating the membership Group, we're currently using PUT to update the group (though I doesn't actually say this in the docs!), so the actual command would be <code>PUT Group/{group.id} {body}</code>. Does that make sense?<br>\n go along.</p>\n</blockquote>\n<p>Seconding Michele's point, FHIR PUT doesn't have merge semantics; you'd want PATCH or a custom operation.</p>",
        "id": 173035853,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1565625489
    },
    {
        "content": "<p>Re: back-port, I think what's mission is Group.characteristic.valueReference. There's a convention for back-porting new elements to older versions via extensions; maybe <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> can spell out what extension would be used to back-port Group.characteristic.valueReference to STU3?</p>",
        "id": 173038304,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1565627459
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> Good to know about that proposal, we'll look forward to implementing it once it's finalized.</p>\n<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> Thanks for the clarification, we'll look at updating our endpoints to use PATCH, I think the mistake came from misreading the HAPI FHIR client (which we use for TDD) which as an <code>update()</code> operation, which generates a PUT.</p>",
        "id": 173040895,
        "sender_full_name": "Nick Robison",
        "timestamp": 1565629655
    },
    {
        "content": "<p>You might find much easier to implement the operations instead of PATCH</p>",
        "id": 173045786,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1565633252
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> You're probably right, we should connect at the WG meeting and talk through this, I want to make sure we implement it correctly, to avoid another embarrassing PUT/PATCH situation! Thank you for the feedback.</p>",
        "id": 173048694,
        "sender_full_name": "Nick Robison",
        "timestamp": 1565635370
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> you are referring to <a href=\"http://hl7.org/fhir/versions.html#extensions\" target=\"_blank\" title=\"http://hl7.org/fhir/versions.html#extensions\">http://hl7.org/fhir/versions.html#extensions</a>. Using the extension to backport an additional choice in a data type... hmm...</p>",
        "id": 173049526,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1565636037
    },
    {
        "content": "<p>I guess it doesn't make any difference</p>",
        "id": 173049585,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1565636053
    },
    {
        "content": "<p>Thanks! Yeah, <code>http://hl7.org/fhir/4.0/StructureDefinition/extension-Group.characteristic.valueReference</code> would be the extension URL then. Thanks! (We might consider linking to <a href=\"http://hl7.org/fhir/versions.html#extensions\" target=\"_blank\" title=\"http://hl7.org/fhir/versions.html#extensions\">http://hl7.org/fhir/versions.html#extensions</a> from  <a href=\"https://www.hl7.org/fhir/extensibility-registry.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/extensibility-registry.html\">https://www.hl7.org/fhir/extensibility-registry.html</a> ; I'll add a GForge issue)</p>",
        "id": 173050285,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1565636508
    },
    {
        "content": "<p>Added <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23562\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=23562\">GF#23562</a></p>",
        "id": 173050762,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1565636829
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Thanks for the feedback, we'll look at implementing the extension, that seems to make the most sense.</p>",
        "id": 173053815,
        "sender_full_name": "Nick Robison",
        "timestamp": 1565639242
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"218703\">@Nick Robison</span>  I'll be at the connectathon in Atlanta - working on this stuff -  not for the whole work group meeting</p>",
        "id": 173066383,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1565648063
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> Great, let's connect then!</p>\n<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> We've updated the documentation to fix the issues you mentioned, let me know if you run into anything else. Thanks!</p>",
        "id": 173127740,
        "sender_full_name": "Nick Robison",
        "timestamp": 1565713005
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"218703\">@Nick Robison</span> looking at <a href=\"https://dpc.cms.gov/docs#attribution\" target=\"_blank\" title=\"https://dpc.cms.gov/docs#attribution\">\"Attributing Patients to Providers\"</a>, I see an example of</p>\n<blockquote>\n<p>An organization must first create a Practitioner resource, which represents a healthcare provider that is associated with the organization. This is accomplished by executing a POST request against the Practitioner resource, with the body containing a FHIR Practitioner resource.</p>\n</blockquote>\n<div class=\"codehilite\"><pre><span></span>POST /api/v1/Practitioner\n</pre></div>\n\n\n<p>where the body is a <code>Parameters</code> resource. The body for a Practitioner <code>create</code> interaction should only ever be a Practitioner, not a Parameters.</p>",
        "id": 173143801,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1565724859
    },
    {
        "content": "<p>And when I see:</p>\n<blockquote>\n<p>The Practitioner endpoint also supports a $submit operation, which allows the user to upload a Bundle of resources for registration in a single batch operation.</p>\n</blockquote>\n<p>This sounds like behavior you should be able to get out of the standard FHIR <code>batch</code> (or <code>transaction</code>) semantics, e.g. via <code>POST /</code> with a Bundle of type <code>batch</code>, where each entry is a <code>Practitioner</code>. What is the motivation for a custom <code>$submit</code> operation?</p>",
        "id": 173143900,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1565724951
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> The documentation has been updated, it will be available after our next build (tonight or tomorrow).</p>\n<p>Regarding the submission operation, we settled on a custom operator for a couple of reasons.</p>\n<p>One was simplicity of implementation, we could define a new operator and avoid issues with colliding with existing FHIR semantics. The other reason is we like coupling operations to the resources which they're performed against, rather than mixing specific operation semantics with more generic resource types (like Bundle).</p>\n<p>One of the thing we really like about the DPC project is that it's open source, so you and your team are more than welcome to contribute some of these changes. We're also really interested in hearing about your experiences integrating your existing clients and workflows with our backend.</p>",
        "id": 173148506,
        "sender_full_name": "Nick Robison",
        "timestamp": 1565728095
    }
]