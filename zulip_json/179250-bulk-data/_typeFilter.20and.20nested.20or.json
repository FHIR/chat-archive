[
    {
        "content": "<p>If an export request is made with a _typeFilter that has a nested 'or' it is necessary to escape the nested 'or' so that it isn't considered part of the _typeFilter parameter. Thus after separating the different filters in _typeFilter it would be necessary to unescape the nested 'or's. In this case should just the 'or's be unescaped or should all search parameter special characters be unescaped? </p>\n<p>As an example, a user is passing the following searches in _typeFilter:<br>\nObservation?code=a,b<br>\nCondition?code=system|ha125</p>\n<p>Ignoring the url encoding for readability, would this be written as:<br>\nObservation?code=a\\,b,Condition?code=system|ha125<br>\nor<br>\nObservation?code=a\\,b,Condition?code=system\\|ha125</p>\n<p>My thought is that the first one avoids unnecessary escapes, but the second is more consistent so that all special characters at the same 'level' are escaped the same amount.</p>",
        "id": 219649065,
        "sender_full_name": "RB Johnson",
        "timestamp": 1607714132
    },
    {
        "content": "<p>This is a bit tricky to discuss without URLencoding -- in general, you almost never expect to see <code>?code=a\\,b</code> in a FHIR query, unless you're working with a coding system that defines a literal code of \"a,b\" (pretty unusual in my experience, which makes the note at <a href=\"http://build.fhir.org/search.html#escaping\">http://build.fhir.org/search.html#escaping</a> a pretty obscure one).</p>",
        "id": 219664263,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1607721910
    },
    {
        "content": "<p>I think the intention for the following <a href=\"http://hl7.org/fhir/uv/bulkdata/export/index.html#experimental-query-parameters\">spec example</a>:</p>\n<div class=\"codehilite\"><pre><span></span><code>  _typeFilter=\n    MedicationRequest%3Fstatus%3Dactive,\n    MedicationRequest%3Fstatus%3Dcompleted%26date%3Dgt2018-07-01T00%3A00%3A00Z\n</code></pre></div>\n<p>... is that the literal query would go over the wire as:</p>\n<div class=\"codehilite\"><pre><span></span><code>_typeFilter=MedicationRequest%253Fstatus%253Dactive%2CMedicationRequest%253Fstatus%253Dcompleted%2526date%253Dgt2018-07-01T00%253A00%253A00Z\n</code></pre></div>\n<p>(which includes individual filter expressions that have been double-URL-encoded! Note things like <code>%253F</code>, which is a question mark double-encoded.)</p>",
        "id": 219664614,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1607722093
    },
    {
        "content": "<p>The server then URLdecodes it to get:</p>\n<div class=\"codehilite\"><pre><span></span><code>MedicationRequest%3Fstatus%3Dactive,MedicationRequest%3Fstatus%3Dcompleted%26date%3Dgt2018-07-01T00%3A00%3A00Z\n</code></pre></div>\n<p>... which it processes by splitting on <code>,</code> to get the two filters.</p>",
        "id": 219664776,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1607722189
    },
    {
        "content": "<p>Note, this section of the spec is marked as \"experimental\" for a reason: I'm not sure how much consistent real-world support exists, especially at this level of detail :)</p>",
        "id": 219664868,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1607722223
    }
]