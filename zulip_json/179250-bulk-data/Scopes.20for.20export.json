[
    {
        "content": "<p>The default scope for bulk data export is <code>system/*.read</code>. However, some servers currently support (or even require) <code>system/*.*</code>. I may be wrong but for me <code>*</code> at the end implies write access and the bulk data clients should operate in read-only mode.</p>\n<p>My question is related to testing. I wonder if the following would be a correct way to classify server behavior:</p>\n<ol>\n<li>The server <em>requires</em> <code>system/*.*</code> or other scopes like <code>system/Patient.*</code> -&gt; ERROR</li>\n<li>The server <em>allows</em> <code>system/*.*</code> or other scopes like <code>system/Patient.*</code>, but also supports <code>system/*.read</code> -&gt; WARNING</li>\n<li>The server <em>rejects</em> any scope not ending in <code>.read</code> -&gt; CORRECT</li>\n</ol>\n<p>Perhaps another version of the same question - even though Backend Services do allow <code>write</code> and <code>*</code> in system scopes, should we be more explicit in the bulk export use case?</p>",
        "id": 239643692,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1621537722
    },
    {
        "content": "<p>In general, an OAuth request is a negotiation; a client can ask for <code>system/*.*</code> and the server could decide to grant <code>system/*.read</code>.  I think from an interop perspective, we should make sure that servers don't <em>prevent</em> requests like <code>system/*.read</code>, and don't prevent requests like <code>system/Patient.read system/Observation.read</code>. But if they want to accept (and even grant) broader permissions that's OK.</p>",
        "id": 239646233,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1621538905
    },
    {
        "content": "<p>OK, makes sense. Then would this be correct:</p>\n<ol>\n<li>The server requires <code>system/*.*</code> -&gt; OK if read access is granted</li>\n<li>The server allows system/<em>.</em> or other scopes like system/Patient.<em>, but also supports system/</em>.read -&gt; OK</li>\n<li>The server rejects any scope not ending in .read -&gt; no need to test this (but is acceptable behavior)</li>\n</ol>",
        "id": 239649312,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1621540316
    },
    {
        "content": "<blockquote>\n<p>The server requires system/<em>.</em> -&gt; OK if read access is granted</p>\n</blockquote>\n<p>No, I think this <em>breaks</em> a client asking for <code>system/Patient.read system/Observation.read</code> or <code>system/*.read</code>. Servers should support these read requests, even if they <em>also</em> support write requests.</p>",
        "id": 239677897,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1621555625
    },
    {
        "content": "<p>I agree with (2) and (3)</p>",
        "id": 239677911,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1621555637
    },
    {
        "content": "<p>Yes, I test for <code>.read</code> separately and I expect that to be supported. What I meant is that if I request <code>system/a.*</code>, it is OK to receive any of <code>system/a.read, system/a.*, system/*.read, system/*.*</code> because that should mean i got the read access that I need.</p>",
        "id": 239682224,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1621559047
    },
    {
        "content": "<p>Perfect</p>",
        "id": 239682269,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1621559102
    },
    {
        "content": "<p><span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span>  Thanks</p>",
        "id": 239685615,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1621561948
    }
]