[
    {
        "content": "<p>Hello everyone,</p>\n<p>Has anyone implemented SMART backend services authentication (client credential grant flow with JWT)using Identity server 3 (.net)?</p>",
        "id": 222736315,
        "sender_full_name": "Sumanth Bandaru",
        "timestamp": 1610639498
    },
    {
        "content": "<p>We did - but only using RS256</p>",
        "id": 222736475,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1610639550
    },
    {
        "content": "<p>We have as well.</p>",
        "id": 222740714,
        "sender_full_name": "Chuck Feltner",
        "timestamp": 1610641103
    },
    {
        "content": "<p>Thanks for the response Michele and Chunk. I have few questions regarding the implementation. Do you mind if we have private conversation ?</p>",
        "id": 222743450,
        "sender_full_name": "Sumanth Bandaru",
        "timestamp": 1610642162
    },
    {
        "content": "<p>Ask here please</p>",
        "id": 222743595,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1610642219
    },
    {
        "content": "<p>Yes.  Please ask here so we can all learn.</p>",
        "id": 222748718,
        "sender_full_name": "Mike Ross",
        "timestamp": 1610644200
    },
    {
        "content": "<p>Sure. I have a question on how can we inject middle ware into ID3 that can understand and parse the JWT Client assertion from the request body ? Is there any link that you can provide which will be helpful for this scenario?</p>",
        "id": 222753805,
        "sender_full_name": "Sumanth Bandaru",
        "timestamp": 1610646183
    },
    {
        "content": "<p>When you create the client (Core.Model.Client) you have to set the ClientSecrets with the list of certificates to be used to verify the JWT signature:</p>\n<div class=\"codehilite\"><pre><span></span><code>                        client.ClientSecrets.Add( new Secret\n                        {\n                            Value = Convert.ToBase64String( cert.Export( X509ContentType.Cert ) ),\n                            Type = Constants.SecretTypes.X509CertificateBase64,\n                        } );\n</code></pre></div>",
        "id": 222772688,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1610653551
    },
    {
        "content": "<p>IdentityServer takes care of the parsing and validation based on those certificates</p>",
        "id": 222772815,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1610653589
    },
    {
        "content": "<p>Thanks Michele. I appreciate it.</p>",
        "id": 222782270,
        "sender_full_name": "Sumanth Bandaru",
        "timestamp": 1610657557
    },
    {
        "content": "<p>Hi Michele, <br>\nI used the code you sent. Looks like the Id3 has limitations on the value column in clientsecrets table. The Maximum value is defined as nvarchar(250) and the value I am getting from the certificate is more than 250 characters.  Did you change this limitation in your server?</p>",
        "id": 222795556,
        "sender_full_name": "Sumanth Bandaru",
        "timestamp": 1610663833
    },
    {
        "content": "<p>We use a custom client store and we actually read the certificate from the Windows certificate store</p>",
        "id": 222799481,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1610666247
    },
    {
        "content": "<p>I assume it is not a problem to increase the size of that column</p>",
        "id": 222799604,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1610666304
    },
    {
        "content": "<p>yeah. I will need to that and see if that works. Thanks</p>",
        "id": 222800655,
        "sender_full_name": "Sumanth Bandaru",
        "timestamp": 1610667061
    }
]