[
    {
        "content": "<p>Two changes to bulk data proposal based on our breakout session:</p>",
        "id": 153931395,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1517086615
    },
    {
        "content": "<p>1. On the initial kick-off request, server should accept a \"output-format\" parameter indicating the format for the bulk data files. Currently, this must be \"application/fhir+ndjson\". The Accept header will indicate the format for an OperationOutcome response to the kick-off request itself (eg. in the case of a missing parameter).</p>",
        "id": 153931397,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1517086639
    },
    {
        "content": "<p>2. On the final status request (response type of 200), return a body with the following json structure:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"s2\">&quot;transactionTime&quot;</span><span class=\"o\">:</span> <span class=\"s2\">&quot;[instant]&quot;</span><span class=\"p\">,</span>  <span class=\"c1\">//the server&#39;s time when the query is run (no resources that have a modified data after this instant should be in the response)</span>\n  <span class=\"s2\">&quot;request&quot;</span> <span class=\"o\">:</span> <span class=\"s2\">&quot;Patient/$everything?_type=Patient,Observation&quot;</span><span class=\"p\">,</span> <span class=\"c1\">//GET request that kicked-off the bulk data response</span>\n  <span class=\"s2\">&quot;secure&quot;</span> <span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span> <span class=\"c1\">//authentication is required to retrieve the files</span>\n  <span class=\"s2\">&quot;output&quot;</span> <span class=\"o\">:</span> <span class=\"p\">[{</span>\n    <span class=\"s2\">&quot;type&quot;</span> <span class=\"o\">:</span> <span class=\"s2\">&quot;Patient&quot;</span><span class=\"p\">,</span> <span class=\"c1\">//resource type contained in the file</span>\n    <span class=\"s2\">&quot;url&quot;</span> <span class=\"o\">:</span> <span class=\"s2\">&quot;http://serverpath2/patient_file_1.ndjson&quot;</span>\n  <span class=\"p\">},{</span>\n    <span class=\"s2\">&quot;type&quot;</span> <span class=\"o\">:</span> <span class=\"s2\">&quot;Patient&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;url&quot;</span> <span class=\"o\">:</span> <span class=\"s2\">&quot;http://serverpath2/patient_file_2.ndjson&quot;</span>\n  <span class=\"p\">},{</span>\n    <span class=\"s2\">&quot;type&quot;</span> <span class=\"o\">:</span> <span class=\"s2\">&quot;Observation&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;url&quot;</span> <span class=\"o\">:</span> <span class=\"s2\">&quot;http://serverpath2/observation_file_1.ndjson&quot;</span>\n  <span class=\"p\">}]</span>\n<span class=\"p\">}</span>\n</pre></div>",
        "id": 153931398,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1517086664
    },
    {
        "content": "<p>Dan - I am assuming the output-format is a parameter to the operation and is not part of the header ?</p>",
        "id": 153931451,
        "sender_full_name": "Nagesh Bashyam",
        "timestamp": 1517089024
    },
    {
        "content": "<p>Also - for the next breakout, it might be worth talking about a polling interval for the status , have heard a few people mention last week at ONC that since it is an async request, it might take more than a few minutes to get the data ready, so it might be good to not continuously poll but poll at regular intervals that is specified by a server in its initial response with the content location</p>",
        "id": 153931455,
        "sender_full_name": "Nagesh Bashyam",
        "timestamp": 1517089141
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"191414\">@Dan Gottlieb</span> - when did we decide to make those changes?</p>",
        "id": 153931456,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517089155
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192017\">@Nagesh Bashyam</span> Yup, -on the querystring.  Also, it would be good to discuss the polling. My initial thought is that we probably want to recommend <a href=\"https://en.wikipedia.org/wiki/Exponential_backoff\" target=\"_blank\" title=\"https://en.wikipedia.org/wiki/Exponential_backoff\">https://en.wikipedia.org/wiki/Exponential_backoff</a></p>",
        "id": 153931460,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1517089302
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> asap, but while leaving the link header in place and continuing to accept ndjson in the Accept header so they're non-breaking for now</p>",
        "id": 153931465,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1517089388
    },
    {
        "content": "<p>I'm not sure the change is non-breaking for me</p>",
        "id": 153931466,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517089414
    },
    {
        "content": "<p>In what way?</p>",
        "id": 153931467,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1517089467
    },
    {
        "content": "<p>the accept header change</p>",
        "id": 153931469,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517089480
    },
    {
        "content": "<p>I'm going to investigate</p>",
        "id": 153931470,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517089485
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 153931472,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1517089655
    },
    {
        "content": "<p>The server at <a href=\"https://bulk-data.smarthealthit.org\" target=\"_blank\" title=\"https://bulk-data.smarthealthit.org\">https://bulk-data.smarthealthit.org</a> was updated to implement these changes. Feedback is appreciated</p>",
        "id": 153931522,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1517092466
    },
    {
        "content": "<p><span class=\"emoji emoji-1f44d\" title=\"thumbs up\">:thumbs_up:</span></p>",
        "id": 153931523,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1517092523
    },
    {
        "content": "<p>Having a response body with clear type info for each resulting file is working really nicely here.</p>",
        "id": 153931530,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1517093691
    },
    {
        "content": "<p>Exponential backoff is fine as a recommendation, but I don't think this should be part of the spec. Different clients in different environments will poll their own way.</p>",
        "id": 153931560,
        "sender_full_name": "Jason Walonoski",
        "timestamp": 1517095734
    },
    {
        "content": "<blockquote>\n<p>The server at <a href=\"https://bulk-data.smarthealthit.org\" target=\"_blank\" title=\"https://bulk-data.smarthealthit.org\">https://bulk-data.smarthealthit.org</a> was updated to implement these changes. Feedback is appreciated</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"193731\">@Vladimir Ignatov</span> how do you handle multiple requests for $everything? When I make the $everything request multiple times (minutes apart or in quick succession), the response for each returns the same content-location. Are these generated per request/on the fly?</p>",
        "id": 153931561,
        "sender_full_name": "Danielle Friend",
        "timestamp": 1517095792
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191914\">@Danielle Friend</span> Yes. This is a demo server. It does not really generate any files on it's file system. It just makes you wait a while and then gives you a list of files to download... In other words, multiple calls to $everything with the same parameters will result in the same content-location</p>",
        "id": 153931577,
        "sender_full_name": "Vladimir Ignatov",
        "timestamp": 1517096578
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191914\">@Danielle Friend</span> <span class=\"user-mention\" data-user-id=\"193731\">@Vladimir Ignatov</span> - it seems like this may be the correct approach since on subsequent requests you're asking for  files that have already been generated...</p>",
        "id": 153931583,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1517096725
    },
    {
        "content": "<p>I dont think that would work, because each request in the case of Targeted extract for a different set of patients. So some kind of request / response tracking is necessary on the server side which is what we implemented. Even in the case of Patient/$everything, new patients or their observations may change in the system and the previously generated data is not appropriate, unless i am not understanding.</p>",
        "id": 153931589,
        "sender_full_name": "Nagesh Bashyam",
        "timestamp": 1517096868
    },
    {
        "content": "<p>Quick comment on the Root URL recommended by Jason :  This is how we had defined it in DAF-Research, before bulk-api came into being. Also defined on the Root URL.</p>\n<p><a href=\"http://hl7.org/fhir/us/daf-research/STU2/OperationDefinition-daf-extract.html\" target=\"_blank\" title=\"http://hl7.org/fhir/us/daf-research/STU2/OperationDefinition-daf-extract.html\">http://hl7.org/fhir/us/daf-research/STU2/OperationDefinition-daf-extract.html</a></p>",
        "id": 153931590,
        "sender_full_name": "Nagesh Bashyam",
        "timestamp": 1517096930
    },
    {
        "content": "<p>I updated my server with the changes recommended...Feel free to give it a shot.  </p>\n<p><a href=\"http://52.70.192.201/open-fhir/fhir/Patient/$everything\" target=\"_blank\" title=\"http://52.70.192.201/open-fhir/fhir/Patient/$everything\">http://52.70.192.201/open-fhir/fhir/Patient/$everything</a></p>",
        "id": 153931792,
        "sender_full_name": "Nagesh Bashyam",
        "timestamp": 1517152757
    },
    {
        "content": "<p>@Nagesh Bashyam for the initial query, i think the expected response status code should be 202, your server returns 200.</p>",
        "id": 153932147,
        "sender_full_name": "Toby Hu",
        "timestamp": 1517167999
    },
    {
        "content": "<p>Toby, I looked into it and I will have to get a fix from James (for HAPI libraries) to override that status. I will take care of it on the next version.</p>",
        "id": 153932158,
        "sender_full_name": "Nagesh Bashyam",
        "timestamp": 1517168389
    },
    {
        "content": "<p>Sounds good. Thanks.</p>",
        "id": 153932164,
        "sender_full_name": "Toby Hu",
        "timestamp": 1517168447
    },
    {
        "content": "<p>I registered my client at <a href=\"http://snapp.clinfhir.com:4000/\" target=\"_blank\" title=\"http://snapp.clinfhir.com:4000/\">http://snapp.clinfhir.com:4000/</a> and code can be found at <a href=\"https://github.com/toby-hu/test/tree/master/client\" target=\"_blank\" title=\"https://github.com/toby-hu/test/tree/master/client\">https://github.com/toby-hu/test/tree/master/client</a> .<br>\nAny server would like to try a connect?</p>",
        "id": 153932174,
        "sender_full_name": "Toby Hu",
        "timestamp": 1517168715
    }
]