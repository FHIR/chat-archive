[
    {
        "content": "<p>The bulk FHIR spec currently defines three types of exports:  1) All Patients, 2) Group of Patient and 3) System Level.  What are folks thoughts on what should be done for exporting a pre-coordinated group of Practitioners is a non-patient context.  System Level export does semi-support this, and _type=Practitioner is listed as an example.  However, our use case is basically to exchange a pre-coordinated roster of providers.  We could make an extension on Practitioner that indicates inclusion in the roster (or all rosters the practitioner is a part of) then have a _typeFilter searching on that extension, but that seems annoying given that we just want to export a pre-coordinated list, and having every roster a practitioner is a part of listed in the practitioner could get unwieldy.  If we added support for a Group of &lt;Resource&gt; export, that means the server can pre-coordinate the Group definition.  However, Group only really stretches so far - it does support Practitioners, but we can't use Group generically.  E.g. for Groups of Locations.</p>",
        "id": 232001043,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1616778655
    },
    {
        "content": "<p>Interesting -- if you use a tag to label things, this is similar to your suggestion about adding an extension, with the additional benefit that  it anchors you in the world of \"things you can express with standard FHIR search params\" (e.g., <code>Practitioner?_tag=https://my-provider-groups|42</code>).</p>",
        "id": 232002921,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1616779432
    },
    {
        "content": "<p>But I agree with  your point that this becomes unwieldy when you have to push assignments into every resource that belongs to the group, when you'd like these group assignments to layer <em>over</em> the group members.</p>",
        "id": 232003055,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1616779480
    },
    {
        "content": "<p><a href=\"https://www.hl7.org/fhir/search.html#list\">https://www.hl7.org/fhir/search.html#list</a> is one other thought for R4</p>",
        "id": 232003178,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1616779524
    },
    {
        "content": "<p>You could establish a List of practitioners (or any resource type, or even a heterogeneous list) and then do something like the following (pretend the typefilters are urlencoded):</p>\n<div class=\"codehilite\"><pre><span></span><code>[base]/$export?\n    _type=\n       Practitioner,\n       Organization,\n       Location&amp;\n    _typeFilter=\n       Practitioner?_list=42,\n       Organization?_list=42,\n       Location?_list=42\n</code></pre></div>",
        "id": 232003386,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1616779601
    },
    {
        "content": "<p>I don't know that there's a ton of real-world support for <code>_list</code>-based searches, but the concept is there in the spec, and you might prefer it to materializing tags everywhere.</p>",
        "id": 232003558,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1616779654
    },
    {
        "content": "<p>Heh.  We could do that for Patients too then!  So now we are back to List for Patient Lists <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> .</p>",
        "id": 232003722,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1616779722
    },
    {
        "content": "<p>Yeah, don't get me started :)</p>",
        "id": 232003760,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1616779741
    },
    {
        "content": "<p>I like the List approach here, and our server supports this.<br>\nIt permits a client to manage the set of resources that they are interested in (and use this method to get updates to changes in their local cache).<br>\nAbd also want to use the extended capacity for including deletions - did that get anywhere in the base bulk data?</p>",
        "id": 233405711,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1617751028
    },
    {
        "content": "<p>Yup - as part of the argonaut work, we added a \"deleted\" param to the output manifest where servers can pass a list of deleted resources to clients: <a href=\"http://build.fhir.org/ig/HL7/bulk-data/export.html#response---complete-status\">http://build.fhir.org/ig/HL7/bulk-data/export.html#response---complete-status</a> .</p>",
        "id": 233529090,
        "sender_full_name": "Dan Gottlieb",
        "timestamp": 1617816235
    }
]