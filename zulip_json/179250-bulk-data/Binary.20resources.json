[
    {
        "content": "<p>Should the protocol support binary resources? If yes, how?</p>",
        "id": 154013345,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1540840010
    },
    {
        "content": "<p>(see also <a href=\"https://github.com/smart-on-fhir/fhir-bulk-data-docs/issues/84\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/fhir-bulk-data-docs/issues/84\">https://github.com/smart-on-fhir/fhir-bulk-data-docs/issues/84</a>)</p>",
        "id": 154013346,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1540840015
    },
    {
        "content": "<p>Thanks -- I just commented in GH; I think this is an important design question and we should tackle it. (I'll also note that I wouldn't hold off on a 1.0 publication for this.)</p>",
        "id": 154013357,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1540841952
    },
    {
        "content": "<p>it has to</p>",
        "id": 154014918,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1541109367
    },
    {
        "content": "<p>Can you elaborate <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ? (Beyond \"treat Binary just like all other referenced resources\" are you suggesting something more is essential?) Cc <span class=\"user-mention\" data-user-id=\"191414\">@Dan Gottlieb</span></p>",
        "id": 154014932,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541110663
    },
    {
        "content": "<p>I don't think they're anything special</p>",
        "id": 154014966,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1541121231
    },
    {
        "content": "<p>Okay, cool. I think that was option number one that I listed on the GH issue.</p>",
        "id": 154014967,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541121293
    },
    {
        "content": "<p>mhh.. if they should be handled like the other resources that would be option two, wouldn't it? 'Explicit export a set of Binary files....'</p>",
        "id": 154014989,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541125615
    },
    {
        "content": "<p>D'oh yes, that's what I meant. I forgot the order I listed things in :-)</p>",
        "id": 154014991,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541125667
    },
    {
        "content": "<p>they are not exactly as other resources: they are referenced by Attachment URLs instead of Reference elements</p>",
        "id": 154014994,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541126034
    },
    {
        "content": "<p>Couldn't they be referenced by Reference elements too?</p>",
        "id": 154015003,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1541126521
    },
    {
        "content": "<p>Don't know - never saw that</p>",
        "id": 154015004,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541126614
    },
    {
        "content": "<p>Specs say 'This resource is generally used as the target of a Document Reference or an Attachment, '</p>",
        "id": 154015010,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541126661
    },
    {
        "content": "<p>Yes, but it's allowed to be pointed to directly - any place that's allowed to reference Any resource is allowed to reference Binary.</p>",
        "id": 154015013,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1541126851
    },
    {
        "content": "<p>OK - but does that happen anywhere?</p>",
        "id": 154015014,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541126886
    },
    {
        "content": "<p>In any case - my point is not really important</p>",
        "id": 154015015,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541126906
    },
    {
        "content": "<p>I'll do some testing of using transferring binary resources using their JSON format</p>",
        "id": 154015016,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541126957
    },
    {
        "content": "<p>(converting to base64, gzip, un-gzip, converting back to binary)</p>",
        "id": 154015017,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541127009
    },
    {
        "content": "<p>to see what's the impact</p>",
        "id": 154015018,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541127014
    },
    {
        "content": "<p>My point was that it's best not to treat them specially in terms of how they can be referenced because they're not defined that way.</p>",
        "id": 154015031,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1541131015
    },
    {
        "content": "<p>The worry I would have with Binary is that they are not self describing as to their Privacy or Security needs. Yes they can have security labels, which is my recommendation. However from a OAuth Scope perspective we don't yet have the ability to define in a scope the security labels authorized... right? Thus Binary should be treated special. One needs to find the 'other' Resource that describes the security context. This might be by way of the Binary.securityContext, or might be a Resource that points at the Binary, hopefully something like DocumentReference. Once you have that 'other' resource you would have a .subject and possibly other context. You then treat the Binary in the same way you would treat that 'other' resource.</p>",
        "id": 154015116,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541164669
    },
    {
        "content": "<p>This all makes sense but none of it is specific to bulk data, right <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> ?</p>",
        "id": 154015117,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541164759
    },
    {
        "content": "<p>correct. if the question is if it is different in bulk vs not... I would agree, not... but I am not then clear what is different in bulk vs not?</p>",
        "id": 154015118,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541164855
    },
    {
        "content": "<p>I was addressing the question of current SMART-on-FHIR ability to control various data by way of scopes.</p>",
        "id": 154015119,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541164904
    },
    {
        "content": "<p>What's different in bulk data is that you expect the server to follow relevant references and that's the data from the other side to prepare as part of your export.</p>",
        "id": 154015120,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541165463
    },
    {
        "content": "<p>so the question is on following References and attachment.url? Following Reference seems to be what has been answered, the fact that the Reference is a Binary is immaterial to if you _include... But most Binary are referenced by way of attachment.url, and not all attachment.url are Binary. Thus it is not obvious if an attachment.url is a Binary that could be treated as a Binary Resource, or is not a Binary and thus unclear what to do...</p>",
        "id": 154015121,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541165607
    },
    {
        "content": "<p>Thus attachment.url is sometimes a Reference and sometimes simply a url. Sometimes that matters to the server, most of the time it doesn't matter to the client (which just uses http negotiation).</p>",
        "id": 154015122,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541165720
    },
    {
        "content": "<p>It's about which references to follow (ultimately: server discretion) and whether/how to deliver the results.</p>",
        "id": 154015123,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541165728
    },
    {
        "content": "<p>in the way I just outlined, or other?</p>",
        "id": 154015124,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541165809
    },
    {
        "content": "<p>I'm not sure what you meant there; we're not doing anything specifically with _include</p>",
        "id": 154015125,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541165862
    },
    {
        "content": "<p>or is it the fact that Binary are often big bulky, hard to process as they are 99% of the time NOT FHIR encoded,</p>",
        "id": 154015126,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541165867
    },
    {
        "content": "<p>Yeah, more like that.</p>",
        "id": 154015127,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541165881
    },
    {
        "content": "<p>But as a first pass, I'm happy enough saying \"yup, take the hit when exporting binary for bulk data\". For now.</p>",
        "id": 154015128,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541165921
    },
    {
        "content": "<p>likely the best first pass. the alternative is the complete opposite to say Binary are NEVER communicated.</p>",
        "id": 154015129,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541165970
    },
    {
        "content": "<p>pipe through a de-identification service would likely redact them totally anyway...  :-)</p>",
        "id": 154015130,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541166018
    },
    {
        "content": "<p>(I used _include as a means of human communication of the concept. Sorry)</p>",
        "id": 154015131,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541166105
    },
    {
        "content": "<p>(Incidentally, I'm looking forward to a world with more useful deID trade-off options.)</p>",
        "id": 154015132,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541166150
    },
    {
        "content": "<p>don't count those chickens... each use is unique, very few re-usable algorithms.  However I am hopeful that algorithms can be defined in rules, that are injected into a de-identification service.</p>",
        "id": 154015133,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541166258
    },
    {
        "content": "<p>the two re-usable algorithm that I know of is pipe thru /dev/null, or /dev/random</p>",
        "id": 154015134,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541166326
    },
    {
        "content": "<p>(applause) (laughing) --- Thank You, Im here all weekend...</p>",
        "id": 154015135,
        "sender_full_name": "John Moehrke",
        "timestamp": 1541166385
    },
    {
        "content": "<p>I got 180 reports and tried to convert to a single NDJSON file of Binary resources, gzip it, un-gzip it, extract back the original files</p>",
        "id": 154015194,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541176660
    },
    {
        "content": "<p>and then did the same just concatenating the raw files instead of converting them to json Binary resources</p>",
        "id": 154015195,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541176706
    },
    {
        "content": "<p>the resulting gzip is 40% smaller, overall processing time is 10% faster of using ndjson</p>",
        "id": 154015196,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541176821
    },
    {
        "content": "<p>I _think_ we are OK sticking with ndjson</p>",
        "id": 154015197,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541176941
    },
    {
        "content": "<p>if we are not overly concerned with download size</p>",
        "id": 154015198,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541176966
    },
    {
        "content": "<p>the reasonably simple alternative I can think of is use .tar files for Binary - with the id as the file name</p>",
        "id": 154015199,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1541177007
    },
    {
        "content": "<p>I love the quantitative details there -- good to know we're within a factor of 10-50%.</p>",
        "id": 154015253,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541184866
    },
    {
        "content": "<p>Thanks Michele!</p>",
        "id": 154015254,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1541184872
    }
]