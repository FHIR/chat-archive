[
    {
        "content": "<p>Gibt es die Möglichkeit Beispiel-XML-Dateien zur VoS/FHIR-Schnittstelle zu bekommen?<br>\nDies wäre recht hilfreich. Die Spezifikationen haben immer einen recht hohen \"Interpretationsspielraum\".</p>",
        "id": 180118882,
        "sender_full_name": "R. von dem Borne",
        "timestamp": 1573122518
    },
    {
        "content": "<p>Der vermeintliche \"Interpretationsspielraum\" lässt sich schonmal effizient einengen, indem man sich erstmal <em>selbst</em> ein Beispiel-XML (oder JSON) aufschreibt, und dann das Ergebnis überprüft. Mit dem FHIR validator, mit <a href=\"https://simplifier.net/validate\" target=\"_blank\" title=\"https://simplifier.net/validate\">https://simplifier.net/validate</a>, und/oder mit den Schemas und Schematrons. Die FHIR-Dokumentation danebengelegt, und dabei gleich eine ganze Menge fürs Leben gelernt. </p>\n<p>Vor allem reduziert man dadurch erstmal seinen eigenen \"Interpretationsspielraum\", was das Verstehen des Standards und den Umgang mit den Tools angeht! In der FHIR-Dokumentation sind bei jeder Beschreibung auch Beispiele in XML und JSON dabei. Beispiel-XML-Dateien sind gut für Tutorials - im \"wirklichen Leben\" fördern sie schlechte Implementierungen, weil Entwickler dann nicht mehr lernen, mit der Spezifikation zu arbeiten.</p>",
        "id": 180172836,
        "sender_full_name": "Christof Gessner",
        "timestamp": 1573158731
    },
    {
        "content": "<p>Es geht hier um die Entgegennahme eines Transaction-Bundles auf der Server-Seite (PVS). Dieses Bundle enthält etliche weitere Resourcen in kaskadierter Form. Und die KBV-Extensions sind nicht Bestandteil der FHIR-Dokumentation. Wie hier zudem lesen ist, gibt es immer noch Fehler in der KBV-Spezifikation bzw. bei der Validierung.</p>\n<p>Da wäre man unnötig lange damit beschäftigt, sich ein solches Transaction-Bundle zusammenzubasteln, obwohl man es ja eigentlich als PVS parsen und nicht erzeugen will. Das ist Aufgabe der VoS. </p>\n<p>Das PVS liefert zwar auch im Transaction-Bundle enthaltene Resourcen später als Fragmente wieder an die VoS zurück, aber unverändert in der von der VoS erzeugten Form. Das PVS ist zum großen Teil dafür zuständig, die patientenbezogenen Daten für die VoS zu persistieren (Rezeptierung, Einnahmeverordnung, zum Zeitpunkt der Verordnung historisierte Medikamentendaten) und fischt sich nur einige, wenige Details heraus, um sie dem Anwender anzuzeigen.<br>\nDaher sind hier zumindest in Teilen auch möglichst generische Ansätze gefragt.</p>\n<p>Deshalb bleibe ich dabei: Beispieldateien wären sehr hilfreich.</p>",
        "id": 180211580,
        "sender_full_name": "R. von dem Borne",
        "timestamp": 1573202520
    },
    {
        "content": "<p>Ich schlage vor, dass alle, die sich Beispieldaten wünschen, dies der KBV auf <a href=\"https://www.kbv.de/html/4774.php\" target=\"_blank\" title=\"https://www.kbv.de/html/4774.php\">diesem Wege</a> mitteilen.</p>",
        "id": 180507564,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1573559338
    }
]