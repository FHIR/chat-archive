[
    {
        "content": "<p>Hallo Zusammen, hallo <span class=\"user-mention\" data-user-id=\"195854\">@Maximilian Reith</span> ,</p>\n<p>ich hattet eben versucht die eAU Profile zur Validierung zu nutzen. (Habe hierzu einen hapi Filter gebaut der überall die Versionen aus den canonicals löscht).</p>",
        "id": 211639286,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1601394052
    },
    {
        "content": "<p>Dabei ist mir ein ungültiges Slicing auf: Composition.author.identifier aufgefallen.</p>",
        "id": 211639358,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1601394079
    },
    {
        "content": "<p>Composition.author.identifier ist 0..1 und nicht polymorph, darf also nicht gesliced werden.</p>",
        "id": 211639574,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1601394131
    },
    {
        "content": "<p>Könntet ihr das zeitnah fixen?</p>",
        "id": 211639599,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1601394143
    },
    {
        "content": "<p>Moin Patrick,<br>\nich komme da nicht ganz mit: <br>\n<a href=\"https://simplifier.net/eau/kbvpreaucomposition\">https://simplifier.net/eau/kbvpreaucomposition</a><br>\nauthor wurde gesliced, identifier aber nicht!? und ist auch nicht 0..1 sondern einmal 1..1 und einmal 0..0?</p>\n<p>Gruß Max</p>",
        "id": 211717348,
        "sender_full_name": "Maximilian Reith",
        "timestamp": 1601443760
    },
    {
        "content": "<p>Sorry, hatte den Link zum Profil vergessen: <a href=\"https://simplifier.net/eau/kbvpreaustornocomposition\">https://simplifier.net/eau/kbvpreaustornocomposition</a></p>",
        "id": 211724341,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1601451019
    },
    {
        "content": "<p>einmal auf author, einmal custodian</p>",
        "id": 211724360,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1601451036
    },
    {
        "content": "<p>Ah, ja das mit dem Identifier ist natürlich unangenehm. Ich verstehe die Intention \"kann entweder LANR oder ZANR\" sein, aber Identifier ist in diesem Fall 1..1 und damit nicht slice-bar. Ich vermute, fast, dass das nur mit einer Invariante geht, die prüft, ob System entweder LANR oder ZANR ist...<br>\nWobei die Invariante sogar auf Konformität zum einen oder anderen Identifier-Profil prüfen könnte. Eine entsprechende FHIRPath-Expression gäbe es jedenfalls. Da wäre jedoch zu prüfen, ob das von den gängigen Validatoren implementiert ist.</p>",
        "id": 211899588,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1601554125
    },
    {
        "content": "<p>Kann man auch alternativ den Typ eingeschränken, z.B. sagen, dass statt Identifier allgemein nur die beiden Identifier erlaubt sind?</p>",
        "id": 211902596,
        "sender_full_name": "Mareike Przysucha",
        "timestamp": 1601555893
    },
    {
        "content": "<p>Ah, logisch! Ja natürlich. Beide Profile als Identifier-Type hinterlegen, das entspricht dann einem logischen \"oder\". Ich hatte die ganze Zeit so ein unterschwelliges Gefühl, dass ich etwas offensichtliches übersehe. Danke für den Hinweis!</p>",
        "id": 211902743,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1601555986
    },
    {
        "content": "<p>Ja ich hätte das auch mit targetProfiles gelöst. .Net kann keine targetProfiles, und mag daher hier lieber slicen als invarianten-magic zu machen.</p>",
        "id": 211906168,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1601557565
    },
    {
        "content": "<p>Laut Zulip sieht es so aus, dass diesem Argument die meisten folgen werden und es Slicing auf non-repeatable elements geben wird.</p>",
        "id": 211906230,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1601557595
    },
    {
        "content": "<p>(die werden Grahame überstimmen)</p>",
        "id": 211906249,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1601557605
    },
    {
        "content": "<p>Feedback Max: Sie Slicen das in der nächsten Version auf author und custodian, dann entfällt die Problematik.</p>",
        "id": 211906335,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1601557639
    },
    {
        "content": "<p>In diesem Fall braucht man kein TargetType, da nicht die Reference typisiert wird, sondern der Identifier...</p>",
        "id": 211906359,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1601557651
    },
    {
        "content": "<p>stimmt!</p>",
        "id": 211906572,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1601557769
    }
]