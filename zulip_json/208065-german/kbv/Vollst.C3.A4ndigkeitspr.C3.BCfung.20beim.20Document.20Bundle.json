[
    {
        "content": "<p>Wir hatten ja beim letzten Interop-Forum die Frage diskutiert ob und wenn ja wie man prüfen sollte, ob wirklich alle Referenzen einer Composition in einem Bundle enthalten sind. (<span class=\"user-mention\" data-user-id=\"196115\">@Mareike Przysucha</span> <span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span> )</p>\n<p>Ich habe dazu jetzt zwei Varianten von Invarianten ( <span aria-label=\"smirk\" class=\"emoji emoji-1f60f\" role=\"img\" title=\"smirk\">:smirk:</span> ) erstellt und getestet:</p>\n<ol>\n<li><code>Bundle.entry.descendants().reference.distinct().subsetOf(%resource.entry.fullUrl)</code></li>\n<li><code>Bundle.entry.resource.descendants().reference.all($this in %resource.entry.fullUrl)</code></li>\n</ol>\n<p>Beide scheinen nach ersten Tests korrekt erkennen zu können, wenn eine Referenz nicht im Bundle enthalten ist. In beiden Fällen wäre es <em>kein</em> Fehler, wenn das Bundle zusätzliche Entries enthalten würde (z.B. ein OperationOutcome oder ein Binary mit Stypesheet o.ä.)....</p>\n<p>Ich habe zum Testen übrigens das Impfpass Beispiel-Bundle genommen und dabei sind mit zwei Dinge aufgefallen:<br>\nZum einen sind die urls in reference nicht identisch mit jenen in fullUrl (in ersterem sind es UUIDs, in letzterem absolute URLs) Das Beispiel wäre also ohnehin nicht valide und sollte korrigiert werden. <br>\nWeiterhin haben die Composition und die Immunization die selbe UUID!<br>\n(<span class=\"user-mention\" data-user-id=\"195854\">@Maximilian Reith</span> )</p>\n<p>Falls die Referenzen nicht rekursiv überprüft werden sollen, sondern nur unmittelbare Referenzen der Composition, könnte man das mit dem Zusatz <code>Bundle.entry.ofType(Composition).reference...</code> erwirken.</p>\n<p>Also: wer's braucht, bediene sich....</p>",
        "id": 191587103,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1585043894
    },
    {
        "content": "<p>wurde das mit dem Java Validator validiert?</p>",
        "id": 191587376,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1585044050
    },
    {
        "content": "<p>bzw. sollte der Validator dies nicht von sich aus, auch ohne invariants, bemängeln?</p>",
        "id": 191587473,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1585044106
    },
    {
        "content": "<p>Liebe <span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> , vielen herzlichen Dank!</p>",
        "id": 191587807,
        "sender_full_name": "Mareike Przysucha",
        "timestamp": 1585044290
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191450\">Simone Heckmann</span> <a href=\"#narrow/stream/208065-german.2Fkbv/topic/Vollst.C3.A4ndigkeitspr.C3.BCfung.20beim.20Document.20Bundle/near/191587103\" title=\"#narrow/stream/208065-german.2Fkbv/topic/Vollst.C3.A4ndigkeitspr.C3.BCfung.20beim.20Document.20Bundle/near/191587103\">said</a>:</p>\n<blockquote>\n<p>Wir hatten ja beim letzten Interop-Forum die Frage diskutiert ob und wenn ja wie man prüfen sollte, ob wirklich alle Referenzen einer Composition in einem Bundle enthalten sind. (<span class=\"user-mention silent\" data-user-id=\"196115\">Mareike Przysucha</span> <span class=\"user-mention silent\" data-user-id=\"191436\">Stefan Lang</span> )</p>\n<p>Ich habe dazu jetzt zwei Varianten von Invarianten ( <span aria-label=\"smirk\" class=\"emoji emoji-1f60f\" role=\"img\" title=\"smirk\">:smirk:</span> ) erstellt und getestet:</p>\n<ol>\n<li><code>Bundle.entry.descendants().reference.distinct().subsetOf(%resource.entry.fullUrl)</code></li>\n<li><code>Bundle.entry.resource.descendants().reference.all($this in %resource.entry.fullUrl)</code></li>\n</ol>\n<p>Beide scheinen nach ersten Tests korrekt erkennen zu können, wenn eine Referenz nicht im Bundle enthalten ist. In beiden Fällen wäre es <em>kein</em> Fehler, wenn das Bundle zusätzliche Entries enthalten würde (z.B. ein OperationOutcome oder ein Binary mit Stypesheet o.ä.)....</p>\n<p>Ich habe zum Testen übrigens das Impfpass Beispiel-Bundle genommen und dabei sind mit zwei Dinge aufgefallen:<br>\nZum einen sind die urls in reference nicht identisch mit jenen in fullUrl (in ersterem sind es UUIDs, in letzterem absolute URLs) Das Beispiel wäre also ohnehin nicht valide und sollte korrigiert werden. <br>\nWeiterhin haben die Composition und die Immunization die selbe UUID!<br>\n(<span class=\"user-mention silent\" data-user-id=\"195854\">Maximilian Reith</span> )</p>\n<p>Falls die Referenzen nicht rekursiv überprüft werden sollen, sondern nur unmittelbare Referenzen der Composition, könnte man das mit dem Zusatz <code>Bundle.entry.ofType(Composition).reference...</code> erwirken.</p>\n<p>Also: wer's braucht, bediene sich....</p>\n</blockquote>\n<p>Also erstmal vielen Dank für die Invarianten und fürs Finden des \"Fehlers\", denn Simplifier meldet nur, dass zwei Referencen in zwei Extensions nicht aufgelöst werden können.  Aber ich denke auch das das Fehler sein müssten. Schaue ich mir an...</p>",
        "id": 191596146,
        "sender_full_name": "Maximilian Reith",
        "timestamp": 1585049044
    }
]