[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"237264\">@Gary Gryan</span>  When we submit a PA bundle to the Mitre PAS server it appears that we are always getting a \"disposition\": \"Granted\" and \"outcome\":\"complete\".   Is there some way to post a bundle that will return a \"disposition\": \"Pended\" to test the execution path for polling?   (what would be expected in the ClaimResponse when a PA is \"Pended\".  the outcome = \"queued\" or a particular reviewAction.valueCode?</p>\n<p>If there is a way to create and POST a bundle that would create the \"Pended\" state, is there a mechanism to then move this ClaimResponse to \"Granted\" ?   (Is there one of the /debug endpoints on the server that allows changing the state of a ClaimResponse?)</p>",
        "id": 238571101,
        "sender_full_name": "John Silva",
        "timestamp": 1620871802
    },
    {
        "content": "<p>Hi John, we have a rudementary rules engine to determine whether items are approved or not. Right now it looks like Home Blood Glucose Monitor (<a href=\"http://www.ama-assn.org/go/cpt\">http://www.ama-assn.org/go/cpt</a>    82947) should always come back as pending. Give that a try and let me know if it works</p>",
        "id": 238616013,
        "sender_full_name": "Benjamin Langley",
        "timestamp": 1620909935
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"236429\">@Benjamin Langley</span>  thanks!   I was starting to feel like no one was participating in this track. ;-)<br>\nWe've also noticed some other 'inconsistencies' and problems with some of the sample patient resource data (and Questionnaire/Library) we're using from this Github site:  <a href=\"https://github.com/HL7-DaVinci/CDS-Library\">https://github.com/HL7-DaVinci/CDS-Library</a><br>\nI suppose we can bring up some of these concerns at 'read out' -- unless there's a better place (time) to do that.</p>",
        "id": 238652433,
        "sender_full_name": "John Silva",
        "timestamp": 1620926633
    },
    {
        "content": "<p>I don't see a reason to wait, might as well bring it up now! I only work on the PAS side of the house but I'll loop in <span class=\"user-mention\" data-user-id=\"198783\">@Larry Decelles</span> who leads the DRLS project and works with those resources in the CDS-Library</p>",
        "id": 238652665,
        "sender_full_name": "Benjamin Langley",
        "timestamp": 1620926741
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"298707\">@John Silva</span> are you able to enumerate the inconsistencies and problems you are seeing with the patient data?</p>",
        "id": 238656741,
        "sender_full_name": "Larry Decelles",
        "timestamp": 1620928734
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"298707\">@John Silva</span> we'd be happy to help out.</p>",
        "id": 238656844,
        "sender_full_name": "Larry Decelles",
        "timestamp": 1620928793
    },
    {
        "content": "<p>I've run into a few both in patient data (resources) and profiled resources.   I'll have to put together a list but I haven't yet -- we're just trying to get something working first.</p>\n<p>One example, one of the samples for DeviceRequest (order) uses this for the code system:  <a href=\"https://bluebutton.cms.gov/resources/codesystem/hcpcs\">https://bluebutton.cms.gov/resources/codesystem/hcpcs</a>. - I was informed that it should probably be using <a href=\"http://terminology.hl7.org/CodeSystem/HCPCS\">http://terminology.hl7.org/CodeSystem/HCPCS</a>. (but the profile for CRDDeviceRequest only specifies an (example) code system so theoretically the bluebutton one is OK.    I've also run into problems with the naming of some of the Library resources because when used as an Id it's not legal.  This happens with the CDS_Connect_Commons_for_FHIRv400.   (I noticed this when I took the JSON  <a href=\"https://github.com/HL7-DaVinci/CDS-Library/blob/master/CRD-DTR/Shared/R4/resources/Library-R4-CDS_Connect_Commons_for_FHIRv400.json\">Library-R4-CDS_Connect_Commons_for_FHIRv400.json</a> and convert it to .fsh with GoFSH. Subsequently running the generated fsh file through Sushi complains about the \"_\" being illegal in an FHIR Id.)</p>",
        "id": 238662671,
        "sender_full_name": "John Silva",
        "timestamp": 1620931537
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"236429\">@Benjamin Langley</span>  - one of the other things I was thinking of was that the PAS Server implementation have a method, e.g. .../debug/ClaimResponse?updateState=granted&amp;id=&lt;ClaimResponseId&gt;. (or whatever the correct state values are -- which I'm not clear - which property and what are the state values that logically determine 'Approved', 'Denied', or 'Pending').    This would then allow a tester to be able to POST their PA bundle and then, using the returned ClaimResponseId, be able to manually set it to \"Approved' so that they can test their polling or Subscription mechanisms?     [I was just searching through the reference implementation code for the PA server to see where this is done, i.e. setting the state to \"Pending\" but haven't found it yet.]</p>",
        "id": 238663580,
        "sender_full_name": "John Silva",
        "timestamp": 1620931993
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"298707\">@John Silva</span> that's an interesting idea. Right now pended requests are automatically added to a scheduler and then approved after 60 seconds. So you can still test your polling/subscription mechanisms</p>",
        "id": 238663854,
        "sender_full_name": "Benjamin Langley",
        "timestamp": 1620932107
    },
    {
        "content": "<p>As for the official location you have <code>ClaimResponse.outcome</code> which can be queued, complete, error or partial. To determine whether it is approved or denied you need to look at each item: <code>ClaimResponse.item.extension(reviewAction).extension(reviewActionCode)</code>. The disposition you are looking at is a string property and we populate that based on those other factors</p>",
        "id": 238664145,
        "sender_full_name": "Benjamin Langley",
        "timestamp": 1620932245
    },
    {
        "content": "<p>Ah, an automatic (scheduled) change from Pending to Approved.   (related Q - how hard would it be for us to have the E0424 code for Home O2 Device the one that is set to pending?).    So, for an approved request would we expect outcome=complete and then disposition=\"Granted\" or do we have to iterate through every item to see the reviewActionCode?   (I assume these codes are X12 codes; I can't seem to find these in the profile documents unless I'm looking in the wrong place.)</p>",
        "id": 238666651,
        "sender_full_name": "John Silva",
        "timestamp": 1620933325
    },
    {
        "content": "<p>I can easily set the rule for Home Oxygen to be pending (we've been having a slight deploy issue to Logica though so even if I make the change now it may not get updated on the server - I'll let you know when its updated). As for your other questions - in our implementation that is how you can tell it is approved but it is not required to have disposition=\"Granted\". To work with any implementation then yes, you would need to check the reviewActionCode for each item (and yes these are X12 HCR01 codes)</p>",
        "id": 238667032,
        "sender_full_name": "Benjamin Langley",
        "timestamp": 1620933499
    }
]