[
    {
        "content": "<p>In the PAS workflow where a prior auth is submitted, does the PAS IG or FHIR support a \"transaction history\" that shows the state of the prior authorization when it was initially submitted and for subsequent submissions (if needed)? Inherently a user managing the prior authorization will want to see a snapshot or history of the prior authorization as it goes back and forth. Should there be a way for a FHIR consumer to do some sort of GET to see the state of the request as it was sent?</p>",
        "id": 263053133,
        "sender_full_name": "Sean O'Quinn",
        "timestamp": 1638212425
    },
    {
        "content": "<p>PAS can't do anything that X12 can't do.  Is this an X12 capability?</p>",
        "id": 263082268,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1638228494
    },
    {
        "content": "<p>Not necessarily, but couldnt one make the argument that the ClaimResponse resource is a single response that shouldnt be updated? That its a snapshot? </p>\n<p>That being said, there isnt a ClaimRequest resource unless we are considering the Claim resource the request, but that seems a little weird to have Request and Response resource, but no resource to interact with the prior authorization outside the request and response</p>",
        "id": 263094247,
        "sender_full_name": "Sean O'Quinn",
        "timestamp": 1638238360
    },
    {
        "content": "<p>In principle, the \"ClaimResponse\" is actually the \"Authorization\".  (I've long argued that it should be called something like 'ClaimEvaluation' or 'ClaimAdjudication' to remove the premise that it will always be created in response to a Claim - because that's not always true.)  The key point here is that PAS is a fa√ßade over the X12 capabilities.  The FHIR resources can't expose anything that the payer doesn't expose over X12 (regardless of what resources we use).</p>",
        "id": 263094819,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1638239008
    },
    {
        "content": "<p>Then what does the Claim Resource represent?</p>",
        "id": 263099417,
        "sender_full_name": "Sean O'Quinn",
        "timestamp": 1638244757
    },
    {
        "content": "<p>I dont understand why Prior Auths cant be a single resource like Patient, and I dont understand why its shared with Claim. </p>\n<p>\"... the 'ClaimResponse' is actually the 'Authorization'...\" doesnt really match with the idea of Claim and ClaimResponse base resources does it? If its sharing the resource shouldnt it behave the same as the base resource?</p>",
        "id": 263099583,
        "sender_full_name": "Sean O'Quinn",
        "timestamp": 1638244885
    },
    {
        "content": "<p>It's sort of like ServiceRequest and Procedure.  Claim is the 'request' resource - it asks for something to be done (process a claim, process a prior authorization request).  ClaimResponse is the result of that processing - the adjudication of the claim or of the prior authorization request.  There can be multiple ClaimResponse instances for a single claim.  First, a fully pended response, then a partially adjudicated response, then a fully adjudicated response - even if the Claim never changes.</p>",
        "id": 263152473,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1638282572
    },
    {
        "content": "<p>So then what would a consumer interact with to get the Claim request ready? If you are saying the Claim resource really is \"ClaimRequest\", then there needs to be another resource for a consumer to interact with. In a UI world you do other work to prep the authorization before you send it off.</p>",
        "id": 263200038,
        "sender_full_name": "Sean O'Quinn",
        "timestamp": 1638302329
    },
    {
        "content": "<p>A Claim is essentially an \"AdjudicationRequest\".  I don't understand why there would need to be another resource for a consumer to interact with - I'm also not exactly sure who you consider a 'consumer' to be.  You have a resource that defines what you want adjudicated (for claims processing, prior authorization or pre-determination) and a resource that represents the adjudication process (be it in progress or final).  What else is required?</p>",
        "id": 263214220,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1638309255
    },
    {
        "content": "<p>Lets think of it this way... You have to build a Claim before you submit it, but if you have the Claim resource as the \"Request\" then how would a consumer of the resource know when they are working on a Claim that hasnt been submitted and when they are working on a Claim that has already been submitted?</p>\n<p>IMO the Bundle with all the resources is the \"request\"... not the Claim resource</p>",
        "id": 263220912,
        "sender_full_name": "Sean O'Quinn",
        "timestamp": 1638312941
    },
    {
        "content": "<p>The same way you work on a referral or prescription or any other request resource.  You create it with a status of 'draft' on your local machine and edit as you see fit.  Eventually you set the status to 'active' when it's ready to go.  Then you use one of the various FHIR workflow mechanisms to  ask a payer to adjudicate it.  For most Request resources, this would typically happen using Task.  For most of the financial resources, the pattern is to use a $submit operation (generally because payers don't typically expose their data over RESTful interfaces or have an ability to query data sitting in clinical systems).</p>",
        "id": 263237678,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1638326183
    }
]