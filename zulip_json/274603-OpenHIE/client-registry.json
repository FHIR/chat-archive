[
    {
        "content": "<p>for discussions around OpenCR and SanteMPI...</p>",
        "id": 226132119,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1613134029
    },
    {
        "content": "<p>hey <span class=\"user-mention\" data-user-id=\"297038\">@Joseph Dal Molin</span>  and <span class=\"user-mention\" data-user-id=\"222440\">@Ryan Crichton</span></p>",
        "id": 226132239,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1613134097
    },
    {
        "content": "<p>adding in <span class=\"user-mention\" data-user-id=\"193299\">@Luke Duncan</span>  and <span class=\"user-mention\" data-user-id=\"381898\">@Ally Shaban</span>  as well.</p>",
        "id": 226146018,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1613141625
    },
    {
        "content": "<p>Hi all, Jembi Matt here.</p>\n<p>I have a Sub-topic question on <strong>OpenCR</strong> as part of the <strong>Instant OpenHIE Client package</strong>.<br>\nDoes OpenCR require its own independent instance of HAPI-FHIR with Instant OpenHIE or could it be configured to use the HAPI-FHIR instance created by the <strong>Core</strong> package? (i.e. Do we need the FHIR server duplication?)</p>\n<p>Currently, the two HAPI-FHIR instances conflict if you try to start up the Core and Client packages at the same time.</p>\n<p>Client HAPI-FHIR instance: <a href=\"https://github.com/openhie/instant/blob/master/client/docker/docker-compose.yml#L20-L24\">https://github.com/openhie/instant/blob/master/client/docker/docker-compose.yml#L20-L24</a><br>\nCore HAPI-FHIR instance: <a href=\"https://github.com/openhie/instant/blob/master/core/docker/docker-compose.yml#L26-L36\">https://github.com/openhie/instant/blob/master/core/docker/docker-compose.yml#L26-L36</a></p>\n<blockquote>\n<p>Side note: Jembi is currently updating the Core package Instant HAPI-FHIR instance to 5.2.0</p>\n</blockquote>",
        "id": 226774908,
        "sender_full_name": "Matthew Dickie",
        "timestamp": 1613634489
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194192\">@Richard Stanley</span> maybe you could help us understand this?</p>",
        "id": 226781180,
        "sender_full_name": "Ryan Crichton",
        "timestamp": 1613638685
    },
    {
        "content": "<p>Great question. It can use the HAPI in the core package.</p>",
        "id": 226781508,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1613638897
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"194192\">Richard Stanley</span> <a href=\"#narrow/stream/274603-OpenHIE/topic/client-registry/near/226781508\">said</a>:</p>\n<blockquote>\n<p>Great question. It can use the HAPI in the core package.</p>\n</blockquote>\n<p>Hi <span class=\"user-mention\" data-user-id=\"194192\">@Richard Stanley</span> - I'm trying to test this now and there's an issue with the OpenCR Docker image having a hard-coded reference to a specific HAPI-FHIR URL - <a href=\"https://github.com/intrahealth/client-registry/blob/master/docker/opencr/Dockerfile#L24\">https://github.com/intrahealth/client-registry/blob/master/docker/opencr/Dockerfile#L24</a></p>\n<p>I'll try to make this url configurable and open a PR if it works <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 226783295,
        "sender_full_name": "Matthew Dickie",
        "timestamp": 1613640069
    },
    {
        "content": "<p>Indeed. Yeah, OpenCR doesn't like if HAPI isn't ready and usually the HAPI container takes a couple of minutes to be ready. So, I used Dockerize to ensure the service is available. This isn't really needed in K8s because of init containers. I'll have a look at it today.</p>",
        "id": 226814825,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1613657457
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"364091\">@Matthew Dickie</span>  So, OpenCR requires a hard-coded config file. This is also true for decision rules for matching. So, the Docker quick start doesn't use the Dockerized OpenCR (<a href=\"https://intrahealth.github.io/client-registry/admin/docker/\">https://intrahealth.github.io/client-registry/admin/docker/</a>), it asks the user to run OpenCR (not HAPI or ES) straight from the command line because they'll need to customize it in any case to match anything. What I was thinking when I wrote the Dockerization was that it's really for demos or CI/CD pipelines. I'm waiting for the devs to tell me me if there are env vars to do it but I don't think there are for now.</p>",
        "id": 226900295,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1613691406
    },
    {
        "content": "<p>I can commit a config file just for K8s/Instant that would fulfill whatever is needed in the meantime and publish an image. Just please give me an idea of what is needed. Right now the K8s service is named <code>fhir</code> and the service name and ports can be remapped to whatever OpenHIM requires.</p>",
        "id": 226900347,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1613691457
    },
    {
        "content": "<p>I imagine that for some deployments it would be useful to have two instances of a fhir server/HAPI.  How comparison is it to have fhir-cr as the named K8s service that OpenCR references and then allow for a  configuration option that allows fhir-cr to point/route to the core fhir K8s service.  In other words have open CR know nothing about fhir and only references fhir-cr internally and then let the user decide if fhir-cr and fhir are one and the same.  This could be useful for data segmentation and/or performance optimization reasons.</p>",
        "id": 226958729,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1613739100
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"194192\">Richard Stanley</span> <a href=\"#narrow/stream/274603-OpenHIE/topic/client-registry/near/226900347\">said</a>:</p>\n<blockquote>\n<p>I can commit a config file just for K8s/Instant that would fulfill whatever is needed in the meantime and publish an image. Just please give me an idea of what is needed. Right now the K8s service is named <code>fhir</code> and the service name and ports can be remapped to whatever OpenHIM requires.</p>\n</blockquote>\n<p>Hi Richard, I submitted a PR with a small change to the Dockerfile - it just adds an Env Var for the HAPI-FHIR heartbeat check. But I kept the previous value as a default to make it backward compatible. </p>\n<p><a href=\"https://github.com/intrahealth/client-registry/pull/43\">https://github.com/intrahealth/client-registry/pull/43</a></p>\n<p>I also added some documentation to that Docker section you mentioned. I added an example of voluming in a new configuration file to replace the default image config on startup. Using the docker volume caters for the config needs so far <span aria-label=\"grinning face with smiling eyes\" class=\"emoji emoji-1f601\" role=\"img\" title=\"grinning face with smiling eyes\">:grinning_face_with_smiling_eyes:</span> <br>\nI'll add you as the reviewer for my Instant changes.</p>",
        "id": 227764398,
        "sender_full_name": "Matthew Dickie",
        "timestamp": 1614258870
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191604\">@Carl Leitner</span> - our concern about running two separate HAPI-FHIR servers is that these are quite resource-intense services. Since we're already upgrading to v5.2.x we plan to use <a href=\"https://hapifhir.io/hapi-fhir/docs/server_jpa_partitioning/partitioning.html\">HAPI's Resource Partitioning feature</a>. </p>\n<p>We think this may be a more efficient way of fulfilling any data segmentation needs - though perhaps our tune will change when we've actually implemented the partitioning. </p>\n<p>On performance optimization, I'm not sure - perhaps having one better spec'd HAPI-FHIR instance will perform better in the long run compared to two HAPI-FHIR instances sharing those resources? Thoughts <span class=\"user-mention\" data-user-id=\"222440\">@Ryan Crichton</span> </p>\n<p>With regards to OpenCR not knowing about FHIR, I'm quite sure what you mean? But in the PR I mentioned earlier that should make the OpenCR very agnostic about the HAPI-FHIR instance. The user will now have full config control there.</p>",
        "id": 227766485,
        "sender_full_name": "Matthew Dickie",
        "timestamp": 1614259788
    },
    {
        "content": "<p>OK, partitioning looks promising.  Do you know if  these partitions are strict (e.g. a resource can only exist in one partition) or does it allow overlaps?</p>",
        "id": 227771152,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1614261843
    },
    {
        "content": "<p>performance optimization consideration was thinking that would want to be able to support multiple scaling options in a cost efficient manner.   for example, through more compute resources on an instance of HAPI that is making use of the CQL engine or being hit hard for search queries..  that said I haven't really though through this or looked at the threading capabilities with HAPI+CQL.</p>",
        "id": 227771731,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1614262069
    },
    {
        "content": "<p>Most resources can be partitioned. However, code systems, questionnaires, and similar are actually shared. But, most can be partitioned.</p>",
        "id": 227777995,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1614264419
    },
    {
        "content": "<p>See Non-Partitionable in: <a href=\"https://hapifhir.io/hapi-fhir/docs/server_jpa_partitioning/partitioning.html\">https://hapifhir.io/hapi-fhir/docs/server_jpa_partitioning/partitioning.html</a></p>",
        "id": 227781883,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1614265889
    },
    {
        "content": "<p>As I RTFM, I see \"In a partitioned repository, it is important to understand that only a single pool of resource IDs exists. In other words, only one resource with the ID Patient/1 can exist across all partitions, and it must be in a single partition.\" which means that there is no overlap.</p>",
        "id": 227785675,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1614267186
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194192\">@Richard Stanley</span> I've opened <a href=\"https://github.com/intrahealth/client-registry/pull/46\">another small PR to OpenCR</a>. </p>\n<p>It would be useful in Instant OpenHIE to use environment variables to make small config changes to OpenCR - instead of voluming in entire files. </p>\n<p>OpenCR already accepts some environment variables but the colon syntax for accessing the nested config fields (like the OpenHIM API details) does not play well with Docker.<br>\nSince OpenCR uses <code>nconf</code> already, the change was very minor . <code>nconf</code> allows defining a new separator for accessing nested config. The suggested separator is <code>__</code> according to the <a href=\"https://github.com/indexzero/nconf#env\">documentation and examples</a>.</p>\n<p>I also added some documentation along with the change <span aria-label=\"grinning\" class=\"emoji emoji-1f600\" role=\"img\" title=\"grinning\">:grinning:</span></p>",
        "id": 228579275,
        "sender_full_name": "Matthew Dickie",
        "timestamp": 1614772718
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"364091\">@Matthew Dickie</span>  Looks great, let me review with the devs</p>",
        "id": 228637443,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1614794466
    },
    {
        "content": "<p>Reviewed and merged. Thanks again.</p>",
        "id": 228797746,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1614873495
    }
]