[
    {
        "content": "<p>continuing thread with <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span>  and <span class=\"user-mention\" data-user-id=\"381898\">@Ally Shaban</span>  on IGs here.  We will include IG documentation of the resources and workflow on the HAPI to ElasticSearch adapter in the general case reporting IG.   see <a href=\"https://github.com/intrahealth/fhir2es\">https://github.com/intrahealth/fhir2es</a></p>",
        "id": 224209116,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1611765721
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"222440\">@Ryan Crichton</span>  <span class=\"user-mention\" data-user-id=\"335762\">@Daniel Futerman</span>  <span class=\"user-mention\" data-user-id=\"194192\">@Richard Stanley</span>  it would be good to align IGs to Instant OpenHIE packages as well.   Is there an easy place to see what those packages currently are (core, health worker, etc.)?  I don't know if we want a separate 'data analytics' package and IG that builds of core and include the HAPI, ES connector.   I know that HAPI+ES is already in HW, so ideally that would depend on a 'data analytics' package.  we could then have the case report IG depend on data analytics</p>",
        "id": 224209586,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1611765891
    },
    {
        "content": "<p>thinking aloud, so any feedback would be appreciated here</p>",
        "id": 224209640,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1611765914
    },
    {
        "content": "<p>It was recently discussed. iHRIS (+mHero) and OpenCR all use ES/Kibana. So, there will be a separate analytics package. But, to implement this safely requires adding a dependency tree for packages. That's being worked on here: <a href=\"https://github.com/openhie/instant/pull/63\">https://github.com/openhie/instant/pull/63</a></p>",
        "id": 224214297,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1611767712
    },
    {
        "content": "<p>All packages are at the root of the repo: <a href=\"https://github.com/openhie/instant\">https://github.com/openhie/instant</a> But, going forward  I wonder if we'll need to be more explicit in the directory structure about which are infrastructure versus workflow packages. <br>\n<span class=\"user-mention\" data-user-id=\"222440\">@Ryan Crichton</span> <span class=\"user-mention\" data-user-id=\"335762\">@Daniel Futerman</span> for their thoughts.</p>",
        "id": 224214741,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1611767900
    },
    {
        "content": "<p>I think separate packages for anything common makes sense. The dependency ordering stuff is still new but we are almost done with it so packages depending on packages will be supported properly.</p>\n<p><span class=\"user-mention\" data-user-id=\"194192\">@Richard Stanley</span> we could definitely split packages out into folders that make sense. Also, not all packages need to be in this single repository. We can include packages by mounting them into the instant OpenHIE docker image. This means that we could have groups of packages that exist outside of the main repository. Is it worth discussing what packages should actually be in the main repo or should be just put stuff there until it becomes an issue?</p>",
        "id": 224290153,
        "sender_full_name": "Ryan Crichton",
        "timestamp": 1611817074
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"222440\">@Ryan Crichton</span>  I hadn't thought of that as an option, but it's very interesting. So, for example, the main iHRIS repo would have a /instant folder with the same content like instant/docker and instant/k8s? It makes sense. I'm happy to help prototype it.</p>",
        "id": 224335644,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1611845213
    },
    {
        "content": "<p>On common dependencies, postgres and mysql would also be useful.</p>",
        "id": 224336681,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1611845647
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194192\">@Richard Stanley</span> ya, that's definitely possible. It might be worth keeping key packages in the repo for easy of use. We could even use Instant OpenHIE for private project specific packages in this way. Or, for example, if their was a particular group of packages that we want to keep separate as they work together.</p>",
        "id": 224337439,
        "sender_full_name": "Ryan Crichton",
        "timestamp": 1611845962
    },
    {
        "content": "<p>That's great, thanks.</p>",
        "id": 224344011,
        "sender_full_name": "Richard Stanley",
        "timestamp": 1611848477
    },
    {
        "content": "<p>hey all, updates the case-reporting IG to reflect the L1-L4 levels of knowledge representation and started pulling together a google doc qith some questions/suggestions/open-issues to resolve.  would appreciate any feedback.  </p>\n<ul>\n<li><a href=\"https://docs.google.com/document/d/1aumqL0vinwAHyTc9GPi4jUEqdadYjtkDdICikEQcCxE/edit\">https://docs.google.com/document/d/1aumqL0vinwAHyTc9GPi4jUEqdadYjtkDdICikEQcCxE/edit</a></li>\n<li><a href=\"https://openhie.github.io/case-reporting/\">https://openhie.github.io/case-reporting/</a></li>\n</ul>",
        "id": 224654652,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1612113524
    }
]