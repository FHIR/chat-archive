[
    {
        "content": "<p>comment on SaveAppointmentStatus:</p>\n<blockquote>\n<p>TODO: Not sure if we actually need to store anything in here, maybe the actual message content that was received.</p>\n</blockquote>",
        "id": 191336622,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584782435
    },
    {
        "content": "<p>yeah, we do. For each appointment, we need to store the following information:</p>",
        "id": 191336624,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584782453
    },
    {
        "content": "<ul>\n<li>have we sent the post-registration message?</li>\n<li>have we sent the pre-appointment message?</li>\n<li>have we went them an invitation to a teleconference message?</li>\n<li>have we sent them a please come inside message?</li>\n</ul>",
        "id": 191336723,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584782567
    },
    {
        "content": "<p>that's historical input into the message processing algorithm</p>",
        "id": 191336737,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584782618
    },
    {
        "content": "<p>why do we have PatientPhoto?</p>",
        "id": 191336801,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584782675
    },
    {
        "content": "<p>what is RebookAppointment about?</p>",
        "id": 191336808,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584782700
    },
    {
        "content": "<p>shouldn't ArrivalStatus be an enum?</p>",
        "id": 191336817,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584782732
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191368\">@Brett Esler</span> can a patient have more than one appointment at once?</p>",
        "id": 191336878,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584782828
    },
    {
        "content": "<p>AppointmentStartTime should be a DateTime?</p>",
        "id": 191337417,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584783672
    },
    {
        "content": "<p>The plan with storage for the appointments was to store that extra content in the local filesystem as extras<br>\nPatient photo can be removed.</p>",
        "id": 191338106,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584784817
    },
    {
        "content": "<p>yes more than one appointment per patient ispossible</p>",
        "id": 191338107,
        "sender_full_name": "Brett Esler",
        "timestamp": 1584784820
    },
    {
        "content": "<p>at the same time?</p>",
        "id": 191338124,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584784871
    },
    {
        "content": "<blockquote>\n<p>plan with storage for the appointments was to store that extra content in the local filesystem as extras</p>\n</blockquote>\n<p>Good. Comment suggested otherwise</p>",
        "id": 191338133,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584784894
    },
    {
        "content": "<p>yes can have multiple appointments for same patient at the same time...booked in for multiple practitioners is possible as separate appointments... not very common though</p>",
        "id": 191338244,
        "sender_full_name": "Brett Esler",
        "timestamp": 1584785064
    },
    {
        "content": "<p>hmm. it kind of blows the model. Do they get arrived for all of them? DO they move to happening all at once?</p>",
        "id": 191338251,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584785095
    },
    {
        "content": "<p>Maybe just arrive the first one and log a message (display a popup too?)</p>",
        "id": 191338280,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584785129
    },
    {
        "content": "<p>it is pretty rare I am thinking; you get warned in BP when you book two slots for the same time for a given patient</p>",
        "id": 191338360,
        "sender_full_name": "Brett Esler",
        "timestamp": 1584785233
    },
    {
        "content": "<p>I thik arriving one based on SMS would be fine; the other can be done manually if they care</p>",
        "id": 191338477,
        "sender_full_name": "Brett Esler",
        "timestamp": 1584785420
    },
    {
        "content": "<p>will need to think about the SMS to come inside; don;t wan t to send multiple - maybe suppress for a period after sending one out for a patient</p>",
        "id": 191338485,
        "sender_full_name": "Brett Esler",
        "timestamp": 1584785494
    },
    {
        "content": "<p>this is pretty rare in IRL</p>",
        "id": 191338488,
        "sender_full_name": "Brett Esler",
        "timestamp": 1584785519
    },
    {
        "content": "<p>there is the other case where patient visits twice in one day - might have appt with GP and then later with allied health</p>",
        "id": 191338541,
        "sender_full_name": "Brett Esler",
        "timestamp": 1584785617
    },
    {
        "content": "<p>the one where they visit twice in one day is cool with me, I think. Have to keep an eye on sequence... and be careful not to overlap protocols</p>",
        "id": 191339037,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584786494
    },
    {
        "content": "<p>If there's more one appointment at the same time, we'll just ignore the second altogether</p>",
        "id": 191339054,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584786535
    },
    {
        "content": "<p>I'm not sure why we split appointments into Waiting, Expecting, and Fulfilled. Is that useful?</p>",
        "id": 191339066,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584786566
    },
    {
        "content": "<p>That is just the  appointment status division  - we only trigger SMS on arrived (waiting) -&gt; fulfilled</p>",
        "id": 191339150,
        "sender_full_name": "Brett Esler",
        "timestamp": 1584786684
    },
    {
        "content": "<p>not true. we trigger on other status too now. and if there's more than one, they might overlap, and it matters.</p>",
        "id": 191339207,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584786748
    },
    {
        "content": "<p>so I think that separating them into different lists by status is not a useful thing</p>",
        "id": 191339211,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584786764
    },
    {
        "content": "<p>The fulfilled is going away and replacing with a MessagesReadyToSend queue</p>",
        "id": 191339266,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584786843
    },
    {
        "content": "<p>(as that's what it's for - I think)</p>",
        "id": 191339273,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584786854
    },
    {
        "content": "<p>hmm I think you need to explain that - I'm not sure that i follow that model</p>",
        "id": 191339279,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584786883
    },
    {
        "content": "<p>I'm doing the simple template editor part and storage at the moment.</p>",
        "id": 191339283,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584786889
    },
    {
        "content": "<p>we don't show fulfilled do we?  just queue up  send messages when arrived patients go into consult</p>",
        "id": 191339344,
        "sender_full_name": "Brett Esler",
        "timestamp": 1584786967
    },
    {
        "content": "<p>That's right, once they're fulfilled, we send a message and then forget about them.</p>",
        "id": 191339358,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584787005
    },
    {
        "content": "<p>I don't think it's quite so simple. What happens if they respond to that message?</p>",
        "id": 191339370,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584787031
    },
    {
        "content": "<p>But do want to queue and store that in temp storage in case it restarts or the web receiver fails, so that we can retry.</p>",
        "id": 191339377,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584787040
    },
    {
        "content": "<p>what do we need to queue for? that I haven't followed..</p>",
        "id": 191339386,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584787061
    },
    {
        "content": "<p>The messages that are to be sent to the Patient for whatever reason...</p>",
        "id": 191339454,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584787158
    },
    {
        "content": "<p>I don't want to queue anything. The algorithm should go like this:</p>\n<ul>\n<li>load list of already known appointments</li>\n<li>get list of appointments for today </li>\n<li>for each appointment in today's list <ul>\n<li>do you need to send a message</li>\n<li>send it</li>\n<li>update the status to say it's sent and store it (so it doesn't get sent again)</li>\n</ul>\n</li>\n<li>done</li>\n</ul>",
        "id": 191339467,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584787189
    },
    {
        "content": "<p>no queuing there....</p>",
        "id": 191339470,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584787196
    },
    {
        "content": "<p>We need to refactor a workflow processor that takes the before/after appointment and then decides what actions need to occur -&gt; Messages be sent, and that gets queued, in case things fail somewhere.</p>",
        "id": 191339511,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584787208
    },
    {
        "content": "<p>we assume Twilio doesn't fail. So once it says it's got it, we record that we sent it. If we die at any stage, we just start again using what's stored</p>",
        "id": 191339531,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584787268
    },
    {
        "content": "<p>if we die between twilio saying ok and us recording that, we send one duplicate message</p>",
        "id": 191339543,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584787294
    },
    {
        "content": "<p>So the extended appointment data that is stored separately has that data right?</p>",
        "id": 191339550,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584787319
    },
    {
        "content": "<p>yes</p>",
        "id": 191339589,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584787326
    },
    {
        "content": "<p>Ok, no queue needed then <span aria-label=\"smile\" class=\"emoji emoji-263a\" role=\"img\" title=\"smile\">:smile:</span></p>",
        "id": 191339595,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584787345
    },
    {
        "content": "<p>I do want to refactor the message processing, yes. I want to move all the logic into a single class that has all the smarts, and just gets called with the 2 lists, and has the services provided to</p>\n<ul>\n<li>send messages</li>\n<li>update stored status for an appointment</li>\n</ul>\n<p>It's not responsible for the details. We happy with that layout?</p>",
        "id": 191339608,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584787396
    },
    {
        "content": "<p>That is where I wanted to get it.</p>",
        "id": 191339617,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584787424
    },
    {
        "content": "<p>And what the MessageProcessing class was intended to do, but got lots of extras in it...</p>",
        "id": 191339660,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584787449
    },
    {
        "content": "<p>so I'll leave coordination in MessageProcessing.cs, and create a new class MessageLogic that just does the thinking</p>",
        "id": 191339664,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584787465
    },
    {
        "content": "<p>this always happens ;-)</p>",
        "id": 191339667,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584787478
    },
    {
        "content": "<p>Yes it does...<br>\nIf I strip all the Fhir Server state handling out, that's almost there...<br>\nBut go for it.</p>",
        "id": 191339703,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584787556
    },
    {
        "content": "<p>The intro message setting can also be removed from the settings class, as that's just another template right?</p>",
        "id": 191340036,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584788086
    },
    {
        "content": "<p>yes</p>",
        "id": 191340101,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584788178
    },
    {
        "content": "<p>ok, I added the MessageLogic class. Can you check that you're happy with that interface for it?</p>",
        "id": 191340338,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584788536
    },
    {
        "content": "<p><code>he incoming mobile number does not match to a known patient: reply with \"This is not a recognised phone number</code><br>\nDo you think this might be better to just ask them to call the reception?</p>",
        "id": 191340630,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584789001
    },
    {
        "content": "<p>yes. It's a template anyway, but use your discretion for the default value</p>",
        "id": 191340755,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584789171
    },
    {
        "content": "<p>It was the further processing on the content...</p>",
        "id": 191340782,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584789199
    },
    {
        "content": "<p>sigh. I committed my token again. Putting the token in a file I have to remember not to commit just isn't working for me :-(</p>",
        "id": 191340977,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584789527
    },
    {
        "content": "<p>put a .gitignore ;)</p>",
        "id": 191340984,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584789548
    },
    {
        "content": "<p>it's in appSettings.json in Test.Models. You put it there...</p>",
        "id": 191341093,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584789750
    },
    {
        "content": "<p>I put the file there, it had nothing in it...</p>",
        "id": 191341100,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584789768
    },
    {
        "content": "<p>but you set it up so that the values have to go in there.. can we change it to use the settings for the app?</p>",
        "id": 191341114,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584789836
    },
    {
        "content": "<p>If you have a unit test for the thing, needs settings, hence boom.<br>\nThe app doesn't have it checked in anywhere.</p>",
        "id": 191341156,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584789856
    },
    {
        "content": "<p>That's only used in the unit test, not the app.</p>",
        "id": 191341160,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584789876
    },
    {
        "content": "<p>yeah but that's what I was testing... hence, needs the credentials somewhere. But hell, it works. Don't need to test it anymore...</p>",
        "id": 191341432,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584790337
    },
    {
        "content": "<p>I added pseudo code to the messageLogic class. you ok with it's interface?</p>",
        "id": 191341439,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584790355
    },
    {
        "content": "<p>Once you're happy with them, Mark the test with an Ignore attribute so others don't run them accidentally.</p>",
        "id": 191341445,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584790378
    },
    {
        "content": "<p>Was just committing the settings and template changes.</p>",
        "id": 191341454,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584790396
    },
    {
        "content": "<p>Then I'll take a peek</p>",
        "id": 191341499,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584790444
    },
    {
        "content": "<p>Drop the Initialize method (that's just all the stuff that needs to provide)</p>",
        "id": 191342048,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584791378
    },
    {
        "content": "<p>Do we need the 2 lists of appointments?<br>\nCan't we just use the state that is in the appointment?</p>",
        "id": 191342093,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584791419
    },
    {
        "content": "<p>Otherwise I like it.</p>",
        "id": 191342168,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584791561
    },
    {
        "content": "<p>why drop the initialise method?</p>",
        "id": 191342291,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584791763
    },
    {
        "content": "<p>we do need the 2 lists, because they have different sources</p>",
        "id": 191342296,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584791781
    },
    {
        "content": "<p>Or put all of the things that you need to initialize on it (all the other stuff)</p>",
        "id": 191342298,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584791786
    },
    {
        "content": "<p>I'm not following</p>",
        "id": 191342301,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584791805
    },
    {
        "content": "<p>All the other interface implementations</p>",
        "id": 191342310,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584791824
    },
    {
        "content": "<p>?</p>",
        "id": 191342363,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584791909
    },
    {
        "content": "<p>Populating the value of <code>AppointmentUpdater</code> etc.</p>",
        "id": 191342372,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584791948
    },
    {
        "content": "<p>Also wondering if TimeNow could be a param to the 3 functions instead of a prop?</p>",
        "id": 191342430,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584792026
    },
    {
        "content": "<p>it could be. I decided it shouldn't because it's wrong to touch it in production; it's a test mode thing.</p>",
        "id": 191342439,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584792056
    },
    {
        "content": "<p>I put initialise on the Engine itself in case we decide that there's direct configuration for the engine itself, and to be consistent</p>",
        "id": 191342457,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584792099
    },
    {
        "content": "<p>Fair deal</p>",
        "id": 191342506,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584792152
    },
    {
        "content": "<p>Though TimeNow will change over time, and if this object goes over days, it might not get re-initiailized</p>",
        "id": 191342517,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584792208
    },
    {
        "content": "<p>hmm. I guess I anticpated that this would be created each time. Or at least, initialised each time</p>",
        "id": 191342643,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584792398
    },
    {
        "content": "<p>do the settings get reloaded, or only at start up?</p>",
        "id": 191342644,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584792409
    },
    {
        "content": "<p>The settings object is live, unless you copy the value out of it</p>",
        "id": 191342958,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584793006
    },
    {
        "content": "<p>I think that means it gets reloaded on the fly from the file? or not?</p>",
        "id": 191343090,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584793296
    },
    {
        "content": "<p>hopefully the answer is that it gets ignored and overwritten at shutdown</p>",
        "id": 191343134,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584793328
    },
    {
        "content": "<p>Hey is the current version buildable or do i neeed an update to VS?</p>\n<p>CS8703<br>\nThe modifier 'public' is not valid for this item in C# 7.3. Please use language version 'preview' or greater.<br>\nClinicArrivals.Models (net462)<br>\nD:\\Oridashi\\Repositories\\ClinicArrivals\\ClinicArrivals.Models\\IAppointmentUpdater.cs<br>\n5<br>\nActive</p>",
        "id": 191343140,
        "sender_full_name": "Brett Esler",
        "timestamp": 1584793339
    },
    {
        "content": "<p>update and try again</p>",
        "id": 191343245,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584793520
    },
    {
        "content": "<p>can you do ITemplateProcessor as well? same issue</p>",
        "id": 191343510,
        "sender_full_name": "Brett Esler",
        "timestamp": 1584793919
    },
    {
        "content": "<p>update ;-)</p>",
        "id": 191343550,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584793927
    },
    {
        "content": "<p>ok. I'm done for the day. I'll be up early working on getting the template processor working and then back on the message engine</p>",
        "id": 191343562,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584793965
    },
    {
        "content": "<p>check MessageEngineTester - that's driving things for me now</p>",
        "id": 191343568,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584793989
    },
    {
        "content": "<p>cool - working on checking MD and will try and get Zedmed happening...</p>",
        "id": 191343684,
        "sender_full_name": "Brett Esler",
        "timestamp": 1584794180
    },
    {
        "content": "<p>Got lots done last night in the background processing infrastructure</p>",
        "id": 191352853,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1584806892
    },
    {
        "content": "<p>great</p>",
        "id": 191362615,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1584819746
    }
]