[
    {
        "content": "<p>Hi (and apologies if I'm not using the right terms):<br>\nCan I query a server for all findings that have a given qualifier? How?<br>\nThe case at hand: I want to see all findings that have a qualifier \"Perinatal\" or \"Neonatal\"</p>",
        "id": 208539544,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1598868578
    },
    {
        "content": "<p>If I understand this correctly you'll probably need to query using the <a href=\"https://confluence.ihtsdotools.org/display/DOCECL/1.+Introduction\">Expression Constraint Language (ECL)</a>. Like this, you can limit your results to concepts that adhere to a given definition. <br>\nFor your example the ECL expression would be something like this: </p>\n<div class=\"codehilite\"><pre><span></span><code>&lt;&lt; 404684003|Clinical finding| : &lt;&lt; 246454002|Occurrence| = (\n    (&lt;&lt; 371578004|Perinatal period| OR &lt;&lt; 255407002|Neonatal|)\n  )\n</code></pre></div>\n\n\n<p>Your server needs to be able to handle ECL but <a href=\"https://confluence.ihtsdotools.org/display/FHIR/Features+of+Known+Servers\">quite a few do</a>.<br>\nThen, you can use the <code>$expand</code> operation to <a href=\"https://www.hl7.org/fhir/snomedct.html#implicit\">query an implicit ValueSet</a> defined by ECL (see the last of the five possibilities).</p>",
        "id": 208556331,
        "sender_full_name": "Cora Drenkhahn",
        "timestamp": 1598880725
    },
    {
        "content": "<p>You _should_ also be able to use <code>ValueSet.compose.include.filter</code>, since all properties should have a corresponding filter that supports the <code>=</code> and <code>in</code> operators (<a href=\"https://www.hl7.org/fhir/codesystem.html#filters\">https://www.hl7.org/fhir/codesystem.html#filters</a>).  In this case, where you want to test <code>&lt;&lt; 255407002|Neonatal|</code> it is unclear whether SNOMED's redefinition of the <code>in</code> operator to take a ValueSet URI as its parameter value applies, or whether the default comma-separated list of codes should be used.<br>\nIf the ValueSet approach does apply, then you'd have</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;include&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n    <span class=\"nt\">&quot;system&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://snomed.info/sct&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;filter&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n      <span class=\"nt\">&quot;property&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;concept&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;op&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;is-a&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;404684003&quot;</span>\n    <span class=\"p\">},</span> <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;property&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;246454002&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;op&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;in&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://snomed.info/sct?fhir_vs=isa/371578004&quot;</span>\n    <span class=\"p\">}]</span>\n  <span class=\"p\">},</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;system&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://snomed.info/sct&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;filter&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n      <span class=\"nt\">&quot;property&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;concept&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;op&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;is-a&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;404684003&quot;</span>\n    <span class=\"p\">},</span> <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;property&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;246454002&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;op&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;in&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://snomed.info/sct?fhir_vs=isa/255407002&quot;</span>\n    <span class=\"p\">}]</span>\n  <span class=\"p\">}]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n\n\n<p>Note, this is quite the same semantics because it doesn't capture the  descendants or self of <code>&lt;&lt; 246454002|Occurrence|</code> but since Occurrence has no descendants this is not likely to be an issue.</p>",
        "id": 208922439,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1599110989
    }
]