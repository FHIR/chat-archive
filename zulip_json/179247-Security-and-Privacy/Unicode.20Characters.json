[
    {
        "content": "<p><a href=\"https://www.schneier.com/blog/archives/2021/11/hiding-vulnerabilities-in-source-code.html\">https://www.schneier.com/blog/archives/2021/11/hiding-vulnerabilities-in-source-code.html</a></p>\n<p>This affects any parsed text. I'm going to make the validator create a warning any time it sees one of these characters in a resource, and there'll be an option to make it an error</p>",
        "id": 259939952,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1635812942
    },
    {
        "content": "<p>Can you throw these checks into my operating system clipboard and third-party clipboard manager as well? :-)</p>\n<p>(Seriously this vuln is a diabolical delight -- awards clever angrams.)</p>",
        "id": 259949430,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1635823251
    },
    {
        "content": "<p>should I worry about unicode control characters in xml and json whitespace?</p>",
        "id": 259958123,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1635835225
    },
    {
        "content": "<p><a href=\"https://twitter.com/GrahameGrieve/status/1455425097511038980\">https://twitter.com/GrahameGrieve/status/1455425097511038980</a></p>\n<div class=\"inline-preview-twitter\"><div class=\"twitter-tweet\"><a href=\"https://twitter.com/GrahameGrieve/status/1455425097511038980\"><img class=\"twitter-avatar\" src=\"https://uploads.zulipusercontent.net/0fef57ac7027fab26a6dbf02899f0be0e1f808cd/68747470733a2f2f7062732e7477696d672e636f6d2f70726f66696c655f696d616765732f313230393232393231313039393130373333312f37673764474951765f6e6f726d616c2e6a7067\"></a><p><a href=\"https://twitter.com/rossjanderson\">@rossjanderson</a> should we be concerned about unicode control characters in whitespace? at a minimum, you could make something look like it was in a different order in xml or json?</p><span>- Grahame Grieve (@GrahameGrieve)</span></div></div>",
        "id": 259958238,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1635835375
    },
    {
        "content": "<p><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/compare/gg-202110-CVE-2021-42574?expand=1\">https://github.com/hapifhir/org.hl7.fhir.core/compare/gg-202110-CVE-2021-42574?expand=1</a> (and <a href=\"https://confluence.hl7.org/display/FHIR/Using+the+FHIR+Validator#UsingtheFHIRValidator-UnicodeControlChars\">https://confluence.hl7.org/display/FHIR/Using+the+FHIR+Validator#UsingtheFHIRValidator-UnicodeControlChars</a>)</p>",
        "id": 259958504,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1635835691
    },
    {
        "content": "<p>and this is why I use punch-cards for all my editing.</p>",
        "id": 260008408,
        "sender_full_name": "John Moehrke",
        "timestamp": 1635865631
    },
    {
        "content": "<p>I converted my windows desktop to use EBCDIC.  6 bits is all we'll ever need.</p>",
        "id": 260009270,
        "sender_full_name": "David Pyke",
        "timestamp": 1635865930
    },
    {
        "content": "<p>to be clear, this vulnerability has more about the code editors / viewers that humans use. The compilers are treating the source file as a stream of bytes. It is unfortunate that this is characterized as a bug in code files.</p>",
        "id": 260013501,
        "sender_full_name": "John Moehrke",
        "timestamp": 1635867565
    },
    {
        "content": "<p>I fail to understand why this is such a shock. Back in the terminal days it was common to use the backspace character to overwrite characters, this was often how a spinner was shown on a terminal screen.</p>",
        "id": 260013720,
        "sender_full_name": "John Moehrke",
        "timestamp": 1635867628
    },
    {
        "content": "<p>not to say that it should not be added as rules to github/gitlab code inspection, with a warning \"do you really want this?\".</p>",
        "id": 260013781,
        "sender_full_name": "John Moehrke",
        "timestamp": 1635867658
    },
    {
        "content": "<p>HAving to worry about sanitizing character streams is so 1990s.  it should be automatic now</p>",
        "id": 260013814,
        "sender_full_name": "David Pyke",
        "timestamp": 1635867677
    },
    {
        "content": "<p>well, we use to only have two baskspace characters... uncode gives us so much more flexibility</p>",
        "id": 260013894,
        "sender_full_name": "John Moehrke",
        "timestamp": 1635867713
    },
    {
        "content": "<p>it is those ^G that are so much more annoying  well all know when someone on an HL7 zoom is doing a FHIR core build</p>",
        "id": 260014090,
        "sender_full_name": "John Moehrke",
        "timestamp": 1635867782
    },
    {
        "content": "<p>From the Krebs article. I very much loved this quote</p>\n<blockquote>\n<p>“It is already hard for humans to tell ‘this is OK’ from ‘this is evil’ in source code,” Weaver</p>\n</blockquote>",
        "id": 260018349,
        "sender_full_name": "John Moehrke",
        "timestamp": 1635869286
    },
    {
        "content": "<p>I knew it was a bad idea to allow emojis in variable names.</p>",
        "id": 262088815,
        "sender_full_name": "Mohammad Jafari",
        "timestamp": 1637338712
    },
    {
        "content": "<p>IF you do that in interop code, just set the evil bit on send and people can take appropriate precuations.</p>",
        "id": 262088957,
        "sender_full_name": "David Pyke",
        "timestamp": 1637338797
    },
    {
        "content": "<p><a href=\"https://datatracker.ietf.org/doc/html/rfc3514\">https://datatracker.ietf.org/doc/html/rfc3514</a></p>",
        "id": 262088960,
        "sender_full_name": "David Pyke",
        "timestamp": 1637338798
    }
]