[
    {
        "content": "<p>The <a href=\"http://wiki.hl7.org/index.php?title=FHIR_Agenda_201901_WGM#Mon_Q3\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=FHIR_Agenda_201901_WGM#Mon_Q3\">FHIR Agenda for Q3</a> lists \"FHIR-Security and Privacy Overview (<span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> ).\"  Is this an overview of recent changes and what we're doing this week, a high level overview for people who've never been in this space before, or something else?</p>",
        "id": 155092111,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1547480112
    },
    {
        "content": "<p>It is not a tutorial, it is an update to the active workgroup membership on what has changed recently that they may not have followed.</p>",
        "id": 155092232,
        "sender_full_name": "John Moehrke",
        "timestamp": 1547480224
    },
    {
        "content": "<p>There have been tutorials, but they are not well attended. So there is a need to get a bunch of people interested to drive for a tutorial.</p>",
        "id": 155092488,
        "sender_full_name": "John Moehrke",
        "timestamp": 1547480466
    },
    {
        "content": "<p>Cool, thanks.</p>",
        "id": 155095353,
        "sender_full_name": "Michael Donnelly",
        "timestamp": 1547482944
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191328\">@Ewout Kramer</span> <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> : </p>\n<div class=\"codehilite\"><pre><span></span>interface ConsentEngine {\n  // initialises the engine, and provides it with a FHIR API Access to a data store\n  // that includes patient consent statements. The engine is trusted to access the\n  // store as part of the system\n  void initialise(FHIRClient client) throws [Exceptions];\n\n  // notify the engine that a new resource has been added to the store\n  // called immediately after the transaction to commit the resource\n  // completes (may be in a different thread). The engine can use this\n  // to help maintain it&#39;s internal cache\n  void seeResource(FHIRResource resource);\n\n  // call this when any operation is started. return true if the\n  // request should be processed. call this *before* user authorization\n  // has been checked\n  //\n  // if the operation is not appropriate, fill out the response, and\n  // return false\n  ConsentOperationEngine startOperation(Request request, FHIRClient client);\n}\n\nenum ConsentOperationStatus {\n  reject, // the requested operation cannot proceed, and an operation outcome suitable for the user is available\n  proceed, // the requested operation is allowed to proceed, but the engine will review each resource before sending to the client\n  authorised // the engine has nothing to say about the operation  (same as proceed, but the host application need not consult the engine - can use more efficient counting/caching methods)\n}\n\ninterface ConsentOperationEngine {\n  // find out the status of the operation\n  ConsentOperationStatus status();\n\n  // if the operation is rejected, the details to return to the client as an explanation (may be explicit or not)\n  OperationOutcome outcome();\n\n  // check whether to add the resource to the response going out to the client.\n  //   result = null: don&#39;t send the resource to the client.\n  //   result != null: send the resource to the client.\n  // the routine may modify the resource to prepare it for sending to the client\n  Resource addResource(Resource resource);\n\n  // adds consent related information to the audit record for the operation\n  void addToAudit(AuditEvent event);\n\n  // called when the operation processing is terminated to allow\n  // the consent engine to recover resources etc.\n  void close();\n}\n</pre></div>",
        "id": 155343601,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1547738767
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191505\">@Sean McIlvenna</span>  as well (see above)</p>",
        "id": 155345136,
        "sender_full_name": "Rick Geimer",
        "timestamp": 1547739877
    },
    {
        "content": "<p>on this subject: I've been playing around with my implementation, and I've discovered that it misses something that 's pretty hard. Imagine that you have this query:</p>\n<p>Get {base]/Observation?patient=12345&amp;context.class=IMP</p>\n<p>(get all observations associated with an inpatient episode)</p>\n<p>Now imagine that the patient has consented to share all encounters for the period where the encounter unit is not type=PSYCH. And there's an encounter in there with that type for patient 12345. Should the observations from the encounter be returned as part of the query?</p>",
        "id": 162020255,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1553838149
    },
    {
        "content": "<p>Not always, i hope. I had this case where depending who asks, the result may not show all events. Our use case was not an inpatient (it was a nurse that was being followed in psych ward) and we wanted to \"hide\" those consultations and related medications. Medication was a bit more tricky but consultations was clear - this should not be shown.</p>",
        "id": 162020726,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1553838897
    },
    {
        "content": "<p>Grahame, if the organization agrees to that kind of a policy, then they must have the technology to enforce that kind of a policy. This is why the complexity of policy tends to be far less comprehensive than Privacy advocates want. As once a policy is accepted, it must be enforced without exception. Proving a negative is very hard.</p>",
        "id": 162043467,
        "sender_full_name": "John Moehrke",
        "timestamp": 1553864162
    },
    {
        "content": "<p>Your specific case is one that the security/privacy committees would indicate is best handled with security labeling. Those Observations would be tagged, and thus the result (none with this tag) would be returned.  Which brings up the point Jose is making, that with some things (especially drugs) it is not clear why the drug was prescribed, so one tends to need to tag drugs based on all possible uses of that drug. Which brings up safety cases, these safety cases are often handled by role/persona elevated privileges to safety algorithms (cds-hooks) like drug-drug interaction checking.</p>",
        "id": 162043714,
        "sender_full_name": "John Moehrke",
        "timestamp": 1553864345
    },
    {
        "content": "<p>The other way of dealing with it is by compartments.  If you find the restricted encounters, you could then constrain out anything that's in their compartments.</p>",
        "id": 162051783,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1553870558
    },
    {
        "content": "<p>using security tags is a form of compartment... (everything that has ETH is in the ETH compartment, etc...)</p>",
        "id": 162055029,
        "sender_full_name": "John Moehrke",
        "timestamp": 1553872685
    },
    {
        "content": "<p>Security tags and compartments are completely separate technical mechanisms.  You could have a tagging service that was compartment driven - but that would mean that if an encounter got updated to change its type, the tagging service would then go through (on all accessible servers) and change the tags associated with everything in the encounter compartment.</p>",
        "id": 162057760,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1553874612
    },
    {
        "content": "<p>No, please look at the Healthcare Security/Privacy Classification system, which is the vocabulary used in the meta.security element. It indicates \"compartment\". I expressed that this is not identical but related to RESTful use of 'compartment'..    <a href=\"http://build.fhir.org/security-labels.html#hcs\" target=\"_blank\" title=\"http://build.fhir.org/security-labels.html#hcs\">http://build.fhir.org/security-labels.html#hcs</a></p>",
        "id": 162067616,
        "sender_full_name": "John Moehrke",
        "timestamp": 1553881185
    },
    {
        "content": "<p>Ick.  Why would you use a word that FHIR ascribes a specific meaning to and give it a different meaning?</p>",
        "id": 162067970,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1553881411
    },
    {
        "content": "<p>because Security used the word well before REST was a concept...</p>",
        "id": 162068461,
        "sender_full_name": "John Moehrke",
        "timestamp": 1553881770
    },
    {
        "content": "<p>it isn't dramatically different in concept... but technically implementation is different. However as a meta.security use, it is clear. And as meta.security use, it is very flexible to any specific organizations needs.</p>",
        "id": 162068574,
        "sender_full_name": "John Moehrke",
        "timestamp": 1553881845
    },
    {
        "content": "<p>The military uses this often, as a way to tag data to specific secret projects. Think about the various military code words... those are compartments.. within that compartment there are also various levels of 'sensitivity' and also various levels of 'confidentiality'... just like we have modeled. We modeled it after 'standards'.</p>",
        "id": 162068727,
        "sender_full_name": "John Moehrke",
        "timestamp": 1553881932
    },
    {
        "content": "<blockquote>\n<p>Your specific case is one that the security/privacy committees would indicate is best handled with security labeling</p>\n</blockquote>\n<p>security labeling is a useful input to the problem, but wouldn't begin to handle the actual case in my question</p>",
        "id": 162076015,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1553886928
    },
    {
        "content": "<blockquote>\n<p>Not always, i hope</p>\n</blockquote>\n<p>Not ever, I expect. If you don't consent to share information about that encounter, you don't consent to share information about the things in the encounter. It's less obvious to me about observation linked to condition where there's no agreement to share the condition.</p>",
        "id": 162076144,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1553887032
    },
    {
        "content": "<p>I think this depends on the language of the policy. Was the language about start-&gt;stop time? Was the language about the encounter? Was the language about the class of sensitivity? Each of these is possible.</p>",
        "id": 162077223,
        "sender_full_name": "John Moehrke",
        "timestamp": 1553887971
    },
    {
        "content": "<p>which is unfortunately the complexity of policy. everytime we try to get a handle on this complexity, someone introduces another vector.</p>",
        "id": 162077273,
        "sender_full_name": "John Moehrke",
        "timestamp": 1553888019
    },
    {
        "content": "<p>(I assume we are talking about really consent, not permission to share the data, which may be broader than consent).<br>\nI would expect the decision on whether to share or not would depend on some set of rules. I don't think we can find all those rules, but they should be a few types of rules and implementers can have their own recipes.</p>",
        "id": 162077850,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1553888495
    },
    {
        "content": "<p>if patient does not consent on condition, all derived information which would require a reason to share, is not consented.<br>\nIf it gets shared or not, it depends on a \"calculation\" which will consider consent among other things.</p>",
        "id": 162078249,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1553888831
    },
    {
        "content": "<p>YES <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span>  That is the scope of the \"Consent\" resource</p>",
        "id": 162079031,
        "sender_full_name": "John Moehrke",
        "timestamp": 1553889553
    },
    {
        "content": "<p>I meant the scope of the question, not the scope of the resource (perhaps i missed the context). The question was \"should information be returned\", so i just wanted to check that \"consent\" is one of the variables.</p>",
        "id": 162081230,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1553891248
    },
    {
        "content": "<p>Would we consider a standard mechanism to express what can be shared in which conditions? Just an idea inspired by other thread, not sure if sensible or misplaced: a GraphDefinition of sorts to say \"Here is what you can share (under these conditions...):</p>",
        "id": 163308625,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1555232774
    },
    {
        "content": "<p>and then we put the graphQL or the paths to the linked elements, with the constraints we need.</p>",
        "id": 163308637,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1555232834
    },
    {
        "content": "<p>I have too been wondering if GraphQL would work better than the rule encoding we have in Consent today... but need an expert to give it a try and present some examples.</p>",
        "id": 163383498,
        "sender_full_name": "John Moehrke",
        "timestamp": 1555338071
    }
]