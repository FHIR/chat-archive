[
    {
        "content": "<p>At the San Antonio WGM tooling meeting (I hope I'm getting the timeline right..) <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> proposed a generic user-implementable API that would allow a developer to implement a consent service on top of a FHIR repository. The motivation was to create a fairly low-level API that is flexible and powerful enough that it could be used by developers to implement anyone's notion of consent. I.e. it makes on assumptions on how a Consent resource (or consent directives more generally) should be interpreted, but provides the infrastructure so that someone could write that interpretation in code and have it enforced by the server.</p>\n<p>In case it's of interest, at DevDays today I'm going to touch briefly on a new proof-of-concept implementation of this that is being added to HAPI FHIR.</p>\n<p>This is the user visible API that implementers would have to implement:<br>\n<a href=\"https://github.com/jamesagnew/hapi-fhir/blob/ja_consent_svc/hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/interceptor/consent/IConsentService.java\" target=\"_blank\" title=\"https://github.com/jamesagnew/hapi-fhir/blob/ja_consent_svc/hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/interceptor/consent/IConsentService.java\">https://github.com/jamesagnew/hapi-fhir/blob/ja_consent_svc/hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/interceptor/consent/IConsentService.java</a></p>\n<p>The rest of the user API (but not hapi's internal implementation of the API) lives in here: <a href=\"https://github.com/jamesagnew/hapi-fhir/tree/ja_consent_svc/hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/interceptor/consent\" target=\"_blank\" title=\"https://github.com/jamesagnew/hapi-fhir/tree/ja_consent_svc/hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/interceptor/consent\">https://github.com/jamesagnew/hapi-fhir/tree/ja_consent_svc/hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/interceptor/consent</a></p>\n<p>This is very much a work in progress, but it does work. I have testing consent service implementations that block specific user access, do data masking, create audit records, etc.</p>\n<p>I'm hoping to spur some feedback on the API, shortcomings, suggestions, etc.</p>",
        "id": 167851905,
        "sender_full_name": "James Agnew",
        "timestamp": 1560261354
    },
    {
        "content": "<p>Session details <a href=\"https://www.devdays.com/us/schedule/#event-234\" target=\"_blank\" title=\"https://www.devdays.com/us/schedule/#event-234\">https://www.devdays.com/us/schedule/#event-234</a> -- 10:30a in St Helen's</p>",
        "id": 167854187,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560262698
    },
    {
        "content": "<p>Can I get a copy of the presentation?</p>",
        "id": 167857897,
        "sender_full_name": "David Pyke",
        "timestamp": 1560264972
    },
    {
        "content": "<p>Sure thing, will post afterward. The consent stuff is literally only 4 slides, but hey. :)</p>",
        "id": 167861324,
        "sender_full_name": "James Agnew",
        "timestamp": 1560267207
    },
    {
        "content": "<p>I have a few discovered things to extend the API with. Will get back to it</p>",
        "id": 167861529,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560267343
    },
    {
        "content": "<p>Does </p>\n<p><em><a href=\"https://github.com/jamesagnew/hapi-fhir/blob/ja_consent_svc/hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/interceptor/consent/ConsentInterceptor.java#L65\" target=\"_blank\" title=\"https://github.com/jamesagnew/hapi-fhir/blob/ja_consent_svc/hapi-fhir-server/src/main/java/ca/uhn/fhir/rest/server/interceptor/consent/ConsentInterceptor.java#L65\">thePreResourceAccessDetails.setDontReturnResourceAtIndex(i);</a></em></p>\n<p>mean that fewer than <code>_count</code> resources (maybe even zero) would get returned, or is there logic somewhere to go fetch more results from the db as individual search results are redacted from the response bundle?  <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span></p>",
        "id": 167868495,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560272032
    },
    {
        "content": "<p>Also, I was expecting to see something about <code>Consent</code> resources in this interface, but I guess this is at a different level of abstraction (and any given interceptor might look up some Consent resources to define its policy... or not).</p>",
        "id": 167868632,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1560272121
    },
    {
        "content": "<p>yes the consent resources are implicit in this interface - one assumes that implementations track and load consent resources as appropriate</p>",
        "id": 167877880,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560278395
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> re. count: that is a fun topic. One of the differences between my API and the one Grahame proposed is that i've split the concept of \"seeResource\" into two concepts, roughly called \"canSeeResource\" and \"aboutToSeeResource\".</p>\n<p>The former is a simple boolean question, and the idea is that it happens before pages are calculated. The idea there is that if you ask for <code>_count=10</code>, you should get a page of 10 back unless you've exhausted all possible resources. This probably has a measurable negative impact on performance, but also means that it's possible to block resources without the user being able to detect whether any data was blocked.</p>",
        "id": 167891647,
        "sender_full_name": "James Agnew",
        "timestamp": 1560288149
    },
    {
        "content": "<p>And yeah, the assumption I'm making is that if Consent resources are a part of your consent infrastructure (and they probably are), you load them in the first method.</p>",
        "id": 167891683,
        "sender_full_name": "James Agnew",
        "timestamp": 1560288197
    },
    {
        "content": "<p>Oh, and <span class=\"user-mention\" data-user-id=\"192587\">@David Pyke</span>, here are the slides: <a href=\"https://docs.google.com/presentation/d/1rp7g7n3OXvjoU4qmMhEWEFW-3Csag-gdh4g16y139So\" target=\"_blank\" title=\"https://docs.google.com/presentation/d/1rp7g7n3OXvjoU4qmMhEWEFW-3Csag-gdh4g16y139So\">https://docs.google.com/presentation/d/1rp7g7n3OXvjoU4qmMhEWEFW-3Csag-gdh4g16y139So</a></p>",
        "id": 167892825,
        "sender_full_name": "James Agnew",
        "timestamp": 1560289147
    },
    {
        "content": "<p>Nicely done. I look forward to deeper details to be understood.</p>",
        "id": 167942726,
        "sender_full_name": "John Moehrke",
        "timestamp": 1560343759
    }
]