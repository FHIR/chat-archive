[
    {
        "content": "<p>Hi All</p>\n<p>Just to add a little bit of background. I have a requirement to load multiple organizations data onto a single FHIR instance. Loading the organizations and their unique identifiers is relatively simple based on the provided documentation. The only caveat is that not all organizations can access all other organizations' data. I have an external authentication and authorization service that I use to manage access to the fhir integration.</p>\n<p>So the process that we will follow is that a client will get a client id and secret that will be exchanged for a short lived access token (oauth2). The access token will be of type JWT with scope claims including allowed organizations, etc. When a resource is then requested, the claims will filter out results the user is not allowed to see.</p>\n<p>From what I understand the security labels in the FHIR specification is to be used to filter out data that is not allowed to be seen by the requesting user.</p>\n<p>That all being said. The way I wanted to implement this, was to add an \"organization\" claim to the jwt token, which is the primary organization the user belongs to. When that user then submits a resource, that organization claim is then stored under the security label on the resource. So when another resource then requests access to the resource, that user will need to have the relevant organization as part of his scope claim to access the details.</p>\n<p>I also have a question around the Provenance and audit requirements. Is this a hard requirement that this information is stored in the FHIR server?</p>\n<p>Would this be a correct approach to solve the authorization problem? I hope this is enough information. I used the information provided here: <a href=\"https://smilecdr.com/docs/security/smart_on_fhir_introduction.html\">https://smilecdr.com/docs/security/smart_on_fhir_introduction.html</a> and here: <a href=\"https://www.hl7.org/fhir/security.html\">https://www.hl7.org/fhir/security.html</a></p>",
        "id": 206568103,
        "sender_full_name": "Ivan May",
        "timestamp": 1597148850
    },
    {
        "content": "<p>For reference, a similar use case involving security labels was discussed here:<br>\n<a href=\"#narrow/stream/179247-Security-and.20Privacy/topic/clinical.20outcomes.20registry.20data.20access.20control.20use.20case\">https://chat.fhir.org/#narrow/stream/179247-Security-and.20Privacy/topic/clinical.20outcomes.20registry.20data.20access.20control.20use.20case</a></p>",
        "id": 206579452,
        "sender_full_name": "Joel Schneider",
        "timestamp": 1597155053
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"324468\">@Ivan May</span> What you are describing is one of the use-case solutions that I speak to in my HL7 Tutorial on Security and Privacy. The slide deck is available, and was updated a few months ago when I gave the tutorial virtually. <a href=\"https://healthcaresecprivacy.blogspot.com/2019/12/sydney-hl7-fhir-privacy-and-security.html\">https://healthcaresecprivacy.blogspot.com/2019/12/sydney-hl7-fhir-privacy-and-security.html</a></p>",
        "id": 206687109,
        "sender_full_name": "John Moehrke",
        "timestamp": 1597235340
    },
    {
        "content": "<p>What you are describing is using the .meta.security to hold a compartment value(s) of the organizations that have Create/Update/Delete rights.  See the slides starting at 53 and 57. Two alternatives. The one you chose enables multi-ownership.</p>",
        "id": 206687374,
        "sender_full_name": "John Moehrke",
        "timestamp": 1597235516
    },
    {
        "content": "<p>To your audit question... audit logs will be essential, as accidents will happen and someone will need to figure out how that accident happened.  Does it need to be in FHIR AuditEvent? No, it only needs to meet your organizational needs. The AuditEvent is modeled in FHIR to enable  more rich audit logging. You might be able to use the raw database logs. They are harder to analyze, but they are easier to implement.</p>",
        "id": 206687640,
        "sender_full_name": "John Moehrke",
        "timestamp": 1597235691
    },
    {
        "content": "<p>Thank you for the advice! I will be online again tomorrow morning to go through the info! Will post if I have any more questions.</p>",
        "id": 206727923,
        "sender_full_name": "Ivan May",
        "timestamp": 1597254857
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> if I understand that correctly, I would put a scope claim into the metadata of the resource? So this would contain a organization ids and the allowed scopes. For example: read, update, delete.</p>",
        "id": 206791412,
        "sender_full_name": "Ivan May",
        "timestamp": 1597307379
    },
    {
        "content": "<p>Also <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> you dont have a video of the talk you gave somewhere? That would also be super helpful</p>",
        "id": 206793895,
        "sender_full_name": "Ivan May",
        "timestamp": 1597309493
    },
    {
        "content": "<p>HL7 does have the recording of the tutorial <a href=\"https://www.pathlms.com/hl7/courses/22130\">https://www.pathlms.com/hl7/courses/22130</a></p>",
        "id": 206809292,
        "sender_full_name": "John Moehrke",
        "timestamp": 1597322278
    },
    {
        "content": "<p>There are two different models described in my tutorial. The first one relies on relationships to enable WRITE access, else everyone has READ. The second uses a tag in .meta.security to indicate the compartment that would have WRITE access, else everyone has READ.</p>",
        "id": 206809512,
        "sender_full_name": "John Moehrke",
        "timestamp": 1597322417
    }
]