[
    {
        "content": "<p>There is a <a href=\"https://jira.hl7.org/browse/FHIR-31903\">proposal at the CBCP WG</a> to phase out <code>Consent.scope</code> and use the multiplicity in <code>Consent.category</code>to capture the the consent scope value. We wanted to ask for some feedback from the implementer and other in the community about how Consent scope is being used currently and whether there is any consequences for the current use-cases as a result of this change. I will cross-post this at the implementer stream as well.<br>\nThere is a JIRA ticket for this here:<br>\n<a href=\"https://jira.hl7.org/browse/FHIR-31903\">https://jira.hl7.org/browse/FHIR-31903</a></p>",
        "id": 237702287,
        "sender_full_name": "Mohammad Jafari",
        "timestamp": 1620324057
    },
    {
        "content": "<p>what is the motivation?  Seems wrong.</p>",
        "id": 237702503,
        "sender_full_name": "John Moehrke",
        "timestamp": 1620324131
    },
    {
        "content": "<p>It's seen that Consent.scope and Consent.category are duplicative</p>",
        "id": 237702632,
        "sender_full_name": "David Pyke",
        "timestamp": 1620324186
    },
    {
        "content": "<p>meaning, seems there is a good reason to have one element for the major kind of consent, and the other for the more refined kind. I do understand how that is not against the rules for multiplicity... but as independent elements it is easy to define rules... otherwise slicing is needed.</p>",
        "id": 237702699,
        "sender_full_name": "John Moehrke",
        "timestamp": 1620324202
    },
    {
        "content": "<p>Which should be done at the profile level.  With the two, we have effectively created slicing.</p>",
        "id": 237702795,
        "sender_full_name": "David Pyke",
        "timestamp": 1620324242
    },
    {
        "content": "<p>There has been some discussion at the Jira <a href=\"http://jira.hl7.org/browse/FHIR-31903\">J#31903</a></p>",
        "id": 237702935,
        "sender_full_name": "David Pyke",
        "timestamp": 1620324290
    },
    {
        "content": "<p>I would not mind switching element names... the intent as I understand it is the same intent as is common in other resources for .category vs .code... see Observation, DocumentReference, etc</p>",
        "id": 237703323,
        "sender_full_name": "John Moehrke",
        "timestamp": 1620324440
    },
    {
        "content": "<p>so to me Consent.scope is like Observation.category...  and Consent.category is like Observation.code</p>",
        "id": 237703537,
        "sender_full_name": "John Moehrke",
        "timestamp": 1620324515
    },
    {
        "content": "<p>I guess the question is, is the scope code a useful thing that gives utility beyond what would be in consent.category alone?</p>",
        "id": 237710889,
        "sender_full_name": "David Pyke",
        "timestamp": 1620327340
    },
    {
        "content": "<p>The main motivators are:</p>\n<ul>\n<li>we can't mandate what the category codes are for consent - different organizations are going to categorize differently and won't necessarily be able to easily map to whatever set of categories HL7 happens to define</li>\n<li>some types of contents will fit multiple categories</li>\n<li>there are use-cases for a variety of types of categorization, some having different granularities and some which are orthogonal to each other.</li>\n<li>there's no one 'magic' set of categories we can expect interoperability with across all possible uses of the resource across all countries</li>\n</ul>\n<p>Therefore: simply define category as 0..*, define a preferred value set and leave it up to implementation guides to drive interoperability on categorization within domain spaces where it's possible to gain agreement on a coherent set of codes everyone finds useful and can map to.</p>",
        "id": 237743561,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1620342129
    },
    {
        "content": "<p>At the moment, there's no equivalent of Observation.code for consent.  Both scope and category were both types of high-level categorization.</p>",
        "id": 237743743,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1620342220
    },
    {
        "content": "<p>I disagree. as I said above.</p>",
        "id": 238150084,
        "sender_full_name": "John Moehrke",
        "timestamp": 1620656575
    },
    {
        "content": "<p>im not necessarily against going to just one code. but today I do think that scope is like Observation.category, and category is like Observation.code.</p>",
        "id": 238150747,
        "sender_full_name": "John Moehrke",
        "timestamp": 1620656823
    },
    {
        "content": "<p>where a paper consent covers multiple topics... this can easily be done with two instances of Consent both pointing at the same attachment. so that argument seems false</p>",
        "id": 238150882,
        "sender_full_name": "John Moehrke",
        "timestamp": 1620656883
    },
    {
        "content": "<p>John, one issue that you may not be seeing is that Lloyd's use case is using Consent as an envelope for sending a document that covers multiple scopes.  In that case, it would make sense that the Consent resource have multiple scopes and require only one Consent to be pushed</p>",
        "id": 238152112,
        "sender_full_name": "David Pyke",
        "timestamp": 1620657287
    },
    {
        "content": "<p>I was not aware of that, but it did come out. I did say that my view would be that there would be multiple instances of Consent for the different purposes. <br>\nIf we really think that a single Consent instance can address multiple purposes, then we must remove the .provisions. As it would be very confusing to have mixture of .provisions for different purposes.  I am okay with removing .provision, as I would prefer this concept be rolled into Permission and out of Consent.</p>",
        "id": 238154227,
        "sender_full_name": "John Moehrke",
        "timestamp": 1620657978
    },
    {
        "content": "<p>category isn't like Observation.code - it's not conveying 'detail'.  It's also 0..*, which makes no sense for a 'code' type element.  If you're categorizing, you only need one element to capture a wide variety of categories.</p>",
        "id": 238156445,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1620658770
    },
    {
        "content": "<p>The categorization of a consent doesn't drive the behavior of provisions.  Categories are used for discovery.  Consent.scope is just a category - it doesn't change what the consent does or doesn't do.  And the current proposed codes for Consent.scope are not orthogonal or even necessarily complete.</p>",
        "id": 238156877,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1620658919
    }
]