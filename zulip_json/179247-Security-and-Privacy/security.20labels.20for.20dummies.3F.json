[
    {
        "content": "<p>I'm trying (really hard!) to understand how security labels would actually work in practice. While OAuth2/SMART scopes are widely used in prod, it seems like tagging resources with a <a href=\"https://www.hl7.org/fhir/security-labels.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/security-labels.html\">security label</a> is a possibility in the future. I don't understand how security labels are created, nor how they interact with OAuth2 scopes. Are there any basic, educational articles that I could read to understand this? <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> <span class=\"user-mention\" data-user-id=\"191920\">@Mohammad Jafari</span></p>",
        "id": 181989025,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1574829286
    },
    {
        "content": "<p>I think a few of them are used in practice. VIP tag on Patient, for instance, is a widely adopted practice in Australia</p>",
        "id": 181989625,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574830237
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> I try to provide a quick summary:<br>\nGenerally, security labels are assigned by a Security Labeling Service (SLS) based on rules (e.g. originating from policies or patient consent). For example, based on the appearance of certain clinical codes in medications or diagnoses, the SLS may decide to assign the label <code>HIV</code>. Or, based on organizational policies or patient consent, the SLS may assign the confidentiality label <code>R</code> to a resource. <br>\nThe SLS can operate in real time by labeling resources on-the-fly as they are requested by a client, or it can operate as a batch service. In practice, probably a combination of both is desirable depending on the type of labels and the type of processing (e.g. if you are using natural language processing to scan unstructured text in a resource, it's usually not feasible to implement that in real time).</p>\n<p>OAuth 2.0 scopes on the other hand, record the client's level of access, i.e. <em>clearance</em> which is determined by the OAuth server based on policies and the patient consent. For example, a patient can grant to an app the clearance to access resources with confidentiality level <code>N</code>(but not <code>R</code>). </p>\n<p>When a client requests a resource, the FHIR Server needs to ensure that the client's clearances match the labels of the resource. So for example, a client with confidentiality clearance <code>N</code> should not be able to view a resource labeled as <code>R</code>.</p>",
        "id": 181989769,
        "sender_full_name": "Mohammad Jafari",
        "timestamp": 1574830509
    },
    {
        "content": "<p>.. I've never seen an SLS in live practice. But I have seen security flags - usually assigned straight out of the API. Or sometimes in config tables associated with particular kind of STD related tests</p>",
        "id": 181989903,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574830749
    },
    {
        "content": "<p>Mohammad - thank you for the explanation!</p>",
        "id": 181990455,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1574831628
    },
    {
        "content": "<blockquote>\n<p>OAuth 2.0 scopes on the other hand, record the client's level of access ... For example, a patient can grant to an app the clearance to access resources with confidentiality level N(but not R).</p>\n</blockquote>",
        "id": 181990456,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1574831635
    },
    {
        "content": "<p>Do you have a recommendation for representing <code>N, but not R</code> as an OAuth2 scope?  I'm trying to figure out how this could interact with an overly simple SMART scope.</p>",
        "id": 181990460,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1574831640
    },
    {
        "content": "<blockquote>\n<p>security labels are assigned by a Security Labeling Service (SLS) based on rules (e.g. originating from policies or patient consent)</p>\n</blockquote>",
        "id": 181990499,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1574831645
    },
    {
        "content": "<p>I do struggle to understand exactly how an SLS should be implemented by a developer. It feels a little loosey-goosey to say that \"certain clinical codes in medications or diagnoses, the SLS may decide to assign\" a label. I imagine the worst case -- a poor HIM analyst in a basement assigning security labels to conditions 8x265. Exactly who is involved in the workflow of assigning a security label?</p>",
        "id": 181990502,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1574831647
    },
    {
        "content": "<p>note the SLS is a service. We security geeks knew we couldn't differentiate between the various medical conditions, we are security geeks after- all. So we see that there are clinical-decision-support services, and decide that we want to use that huge brain. So we define that there is a service that would look at the data and label it, likely based on the brain that also drives CDS. So SLS is a form of CDS... so if you believe that CDS can exist to some degree, then so can a SLS.</p>",
        "id": 182019342,
        "sender_full_name": "John Moehrke",
        "timestamp": 1574861980
    },
    {
        "content": "<p>Here are some blog articles where I have tried to provide a simplified view of security labeling used for access control<br>\n<a href=\"https://healthcaresecprivacy.blogspot.com/2019/02/basic-ds4p-how-to-set.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2019/02/basic-ds4p-how-to-set.html\">https://healthcaresecprivacy.blogspot.com/2019/02/basic-ds4p-how-to-set.html</a><br>\n<a href=\"https://healthcaresecprivacy.blogspot.com/2019/02/segmenting-sensitive-health-topics.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2019/02/segmenting-sensitive-health-topics.html\">https://healthcaresecprivacy.blogspot.com/2019/02/segmenting-sensitive-health-topics.html</a><br>\n<a href=\"https://healthcaresecprivacy.blogspot.com/2019/02/what-is-ds4p.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2019/02/what-is-ds4p.html\">https://healthcaresecprivacy.blogspot.com/2019/02/what-is-ds4p.html</a></p>",
        "id": 182019575,
        "sender_full_name": "John Moehrke",
        "timestamp": 1574862161
    },
    {
        "content": "<p>Here is my three year old proposal for adjusting SMART scopes to add purposeOfUse (how will this data be used if you give it to me), and _confidentiality (highest confidentialitycode authorized to access)<br>\n<a href=\"https://healthcaresecprivacy.blogspot.com/2016/01/fhir-oauth-scope.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2016/01/fhir-oauth-scope.html\">https://healthcaresecprivacy.blogspot.com/2016/01/fhir-oauth-scope.html</a><br>\nI don't claim that this three year old proposal still holds up, but it is readily available to read</p>",
        "id": 182019871,
        "sender_full_name": "John Moehrke",
        "timestamp": 1574862388
    },
    {
        "content": "<p>HEART has a scopes definition that includes many of these vectors in a very different arrangement. Where HEART is intended to be used cascaded with business level OAuth (e.g. SMART), thus the thing actually authorized is the overlap of the HEART token and the SMART token. Thus the SMART token doesn't need to address all vectors, just the business level OAuth.<br>\n<a href=\"https://healthcaresecprivacy.blogspot.com/2015/11/heart-profiles-for-review-comment-and.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2015/11/heart-profiles-for-review-comment-and.html\">https://healthcaresecprivacy.blogspot.com/2015/11/heart-profiles-for-review-comment-and.html</a></p>",
        "id": 182020046,
        "sender_full_name": "John Moehrke",
        "timestamp": 1574862524
    },
    {
        "content": "<p>Isaac:<br>\n- The simple SMART scopes are currently unable to record security labels but I am aware that an update is being discussed by them to accommodate more advanced scopes. Meanwhile, there are other proposals out there including the one John mentioned above. I have an experimental implementation which I have demoed in the past connectathons, discussed <a href=\"https://medium.com/@jafarim/json-scopes-for-fhir-b5ce2fbee6fb\" target=\"_blank\" title=\"https://medium.com/@jafarim/json-scopes-for-fhir-b5ce2fbee6fb\">here</a> and <a href=\"https://github.com/mojitoj/pauldron/tree/master/pauldron-hearth#scopepermission-structure\" target=\"_blank\" title=\"https://github.com/mojitoj/pauldron/tree/master/pauldron-hearth#scopepermission-structure\">here</a>.</p>\n<p>- As for SLS, the VHA team has had demos in the past, of a simple labeling service at the connectathons working based on simple rules by mapping clinical codes (e.g. SNOMED and RxNorm) to sensitivity labels; the simple rules were essentially of the form <em>if clinical codes <code>x</code> and <code>y</code> and <code>z</code> exist in the content of the resource, then mark it as <code>HIV</code></em>. A second sweep then would assign confidentiality codes based on the sensitivity codes assigned earlier. Rules in this stage were of the form <em>if resource is labeled as <code>HIV</code> then label with <code>R</code></em> and were based on organizational policies or patient consent. There was also a demo of a preliminary natural language processing of unstructured text to infer clinical codes implied by the text but not explicitly specified as a structured code. <br>\nNote that this is admittedly a <em>simple</em> implementation and does not accommodate other considerations such as related resources. <br>\nFrom an implementation perspective, the SLS can either be its own microservice with an API that accepts a resource or a bundle and returns the labels, or it can be implemented as a module inside the FHIR server --invoked by addition of new resources for batch processing, and by a response interceptor to label the resource/bundle in real time before they're sent to the client.</p>\n<p>I will see if I can find and share some of the reports in this thread.</p>",
        "id": 182037971,
        "sender_full_name": "Mohammad Jafari",
        "timestamp": 1574874012
    },
    {
        "content": "<p>but I believe it's true to say that no one has pushed SLS into production and dealt with the policy issues that result from that ?</p>",
        "id": 182038106,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574874095
    },
    {
        "content": "<p>Everyone participating in eHealth Exchange in US who auto-magically  puts a confidentiality code on a CDA at the header Document class  - either N, R, VR - has demonstrated that they are taking responsibility for security labeling. Not that there are many confidentiality code police - however, if an eHealth Exchange participant were to put the default N (normal for HIPAA) on a CDA that contained 42 CFR Part 2 information (i.e., didn't conform to the DS4P CDA IG guidance for security labeling of Part 2 information), then they could be fined if that CDA information were disclosed to a eHX participant who did not have Part 2 consent.  Since there aren't a lot of those fines being discussed, seems like there must be a lot of eHX participants doing the right security labeling to segregate Part 2 from HIPAA CDA information flows.</p>",
        "id": 182154412,
        "sender_full_name": "k connor",
        "timestamp": 1575009523
    },
    {
        "content": "<p>Lack of fines could be an indication of correct security labeling or it could be an indication of negligible enforcement.  If the former, I'd have expected to see a bump of fines as the ignorant/lazy were informed the error of their ways, followed by a decrease in fines as everyone learned the expectations.  Have we seen that?  If not, my leaning would lax enforcement (and quite possibly poor compliance under the covers)</p>",
        "id": 182182500,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575038279
    },
    {
        "content": "<p>Another theory is that there's not a lot of Part 2 information being exchanged to avoid the compliance issues.  My point is that those exchanging CDA are security labeling with the confidentiality code, whether selected intentionally based on policy or by default.</p>",
        "id": 182191419,
        "sender_full_name": "k connor",
        "timestamp": 1575046737
    },
    {
        "content": "<p>Those exchanging CDA <em>could be</em> security labeling.  Do we know how many systems actually support doing so (and are doing so in practice)?  Also, protecting a document is rather different from protecting individual records.</p>",
        "id": 182195852,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575051214
    },
    {
        "content": "<p>Well, given that a conformant CDA requires a confidentiality code, which is hopefully accurate, then the number of systems are at a minimum the number of participants in the US eHealth Exchange. Guess we 'd need the principals from Sequoia and Commonwell to give us some numbers in the US.  Then EU also exchanges conformant CDAs, so that's another batch.  Then there's the other realms that exchange CDAs.  Determining the volume of CDA usages may be a good exercise for HQ.</p>",
        "id": 182207421,
        "sender_full_name": "k connor",
        "timestamp": 1575065420
    },
    {
        "content": "<p>Volume of systems that produce CDAs with a confidentialityCode other than N would be most relevant.</p>",
        "id": 182208997,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1575067967
    },
    {
        "content": "<p>Unfortunately (or fortunately) these documents are protected resources and therefore we don't have access to the statistics to prove or disprove. Given my short view into the workings of the eHEX; I would say that it is both ( a ) no one cares what the tags are on an incoming document (it was released or denied, so they are just going to use it for why they asked for it), AND ( b ) there are some organizations that continue to not release their 42 CFR Part 2 data for many reasons possibly including not trusting their recipient to care (see  ( a ))...  <br>\n<span class=\"user-mention\" data-user-id=\"191866\">@Matt Blackmon</span> can you comment on to what level eHEX 'tests' for this vector (security tagging N vs R)?<br>\nNote that there are changes going on in eHEX policy that would give them visibility to the metadata (aka hub architecture), thus they will soon have ability to give us this statistic (and be exposed to alot of PHI that normally wouldn't be knowable to them).</p>",
        "id": 182245535,
        "sender_full_name": "John Moehrke",
        "timestamp": 1575131279
    },
    {
        "content": "<blockquote>\n<p>Well, given that a conformant CDA requires a confidentiality code, which is hopefully accurate, then the number of systems are at a minimum the number of participants in the US eHealth Exchange. Guess we 'd need the principals from Sequoia and Commonwell to give us some numbers in the US.  Then EU also exchanges conformant CDAs, so that's another batch.  Then there's the other realms that exchange CDAs.  Determining the volume of CDA usages may be a good exercise for HQ.</p>\n</blockquote>\n<p>So to start this thread, I wanted to point out that The Sequoia Project  is a separate non-profit 501(C)3 company  from the eHealth Exchange and Carequality who are also non-profits.  Commonwell is an implementer of the Carequality Framework.  The eHealth Exchange and Carequality leverage the C-CDA specifications that have the following conformance: </p>\n<p>SHALL contain exactly one [1..1] confidentialityCode, which SHOULD be selected from ValueSet HL7 BasicConfidentialityKind urn:oid:2.16.840.1.113883.1.11.16926 DYNAMIC (CONF:1198-5259).  </p>\n<p>This would require that ALL documents exchanged will contain  a confidentialityCode that SHOULD be selected from those provided in the spec and available in VSAC found in Table 5: HL7 BasicConfidentialityKind Value Set: HL7 BasicConfidentialityKind urn:oid:2.16.840.1.113883.1.11.16926</p>\n<p>N = normal<br>\nR = restricted<br>\nV = very restricted</p>\n<p>We have no numbers to provide for the eHealth Exchange, but I can state that Carequality is exchanging 80 million documents per month that should all contain this code.  I hope this helps and thanks to Kathleen for calling my attention to this thread.</p>",
        "id": 183081398,
        "sender_full_name": "Didi Davis",
        "timestamp": 1575998880
    },
    {
        "content": "<p>Hi Didi.. that doesn't help... The assertion is that no one is actually giving these codes any thought an everyone is just using \"N\" because they must put something into the element. So you are just expressing that indeed there is a requirement to fill out.</p>",
        "id": 183081756,
        "sender_full_name": "John Moehrke",
        "timestamp": 1575999110
    },
    {
        "content": "<p>second, the 1..1 restriction is a CDA requirement. the XCA metadata element confidentialityCode is not 1..1; it allows many codes, and IHE recommends the valueSet from HL7 HCS (same valuesets in FHIR). This metadata capability to carry 0..* security/privacy codes enables more expressive obligations and restrictions. This is the scope of DS4P...</p>",
        "id": 183081971,
        "sender_full_name": "John Moehrke",
        "timestamp": 1575999244
    },
    {
        "content": "<blockquote>\n<p>Unfortunately (or fortunately) these documents are protected resources and therefore we don't have access to the statistics to prove or disprove. Given my short view into the workings of the eHEX; I would say that it is both ( a ) no one cares what the tags are on an incoming document (it was released or denied, so they are just going to use it for why they asked for it), AND ( b ) there are some organizations that continue to not release their 42 CFR Part 2 data for many reasons possibly including not trusting their recipient to care (see  ( a ))...  <br>\n<span class=\"user-mention silent\" data-user-id=\"191866\">Matt Blackmon</span> can you comment on to what level eHEX 'tests' for this vector (security tagging N vs R)?<br>\nNote that there are changes going on in eHEX policy that would give them visibility to the metadata (aka hub architecture), thus they will soon have ability to give us this statistic (and be exposed to alot of PHI that normally wouldn't be knowable to them).</p>\n</blockquote>\n<p>eHealth Exchange has been testing content conformance to the 2011 (HL7 CCD), 2014 (HL7 R1.1 + Companion Guide) and 2015 (HL7 R2.1 + Companion Guide) Editions of Meaningful Use Requirements.  The testing tooling provides an error if no code is included and a warning if one of the three codes recommended is not used.  Carequality is expected to formally require testing against these specifications plus the added requirements specified by the Joint Carequality/Commonwell Content Workgroup published in 2018 found here: <a href=\"https://s3.amazonaws.com/ceq-project/wp-content/uploads/2018/10/03211340/Carequality_CommonWell_Improve_C-CDA_06-15-2018_V1.pdf\" target=\"_blank\" title=\"https://s3.amazonaws.com/ceq-project/wp-content/uploads/2018/10/03211340/Carequality_CommonWell_Improve_C-CDA_06-15-2018_V1.pdf\">https://s3.amazonaws.com/ceq-project/wp-content/uploads/2018/10/03211340/Carequality_CommonWell_Improve_C-CDA_06-15-2018_V1.pdf</a>.  As was mentioned, once the Hub is deployed in production by the eHealth Exchange, more insight and statistics would be available for the number of documents exchanged.</p>",
        "id": 183082438,
        "sender_full_name": "Didi Davis",
        "timestamp": 1575999576
    },
    {
        "content": "<p>the real question is, how many documents do you have that don't have \"N\" as their confidentiality code, and what would it mean if they don't?</p>",
        "id": 183100960,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1576011060
    },
    {
        "content": "<blockquote>\n<p>the real question is, how many documents do you have that don't have \"N\" as their confidentiality code, and what would it mean if they don't?</p>\n</blockquote>\n<p>exactly the question</p>",
        "id": 183156321,
        "sender_full_name": "John Moehrke",
        "timestamp": 1576071066
    },
    {
        "content": "<p>Didi, I suspect the only to answer the question we really want answered is to specifically ask the endpoints in the exchange for their statistics (by percentage so as to protect the data). Percent of documents sent with just \"N\", percent of documents sent with just \"R\", other Percent of document received with just \"N\", percent of documents received with just \"R\", other.</p>",
        "id": 183157210,
        "sender_full_name": "John Moehrke",
        "timestamp": 1576071692
    },
    {
        "content": "<p>Note that another factor in the exchange is that there is not a clear security assertion to express need for highly-sensitive (R) type data. Thus it would not be unreasonable for (R) data to never be sent, thus skewing the results.</p>",
        "id": 183157378,
        "sender_full_name": "John Moehrke",
        "timestamp": 1576071791
    },
    {
        "content": "<p>And most data that would be marked (R) is because it falls under 42 CFR Part 2, which requires explicit consent. and it is a well established problem that getting explicit consent for these data are hard to obtain (for good privacy reason, and for user interface and policy language reasons)</p>",
        "id": 183157546,
        "sender_full_name": "John Moehrke",
        "timestamp": 1576071895
    },
    {
        "content": "<p>so we will have skewed data... but I expect the results to be statistically 100% \"N\" alone.</p>",
        "id": 183157603,
        "sender_full_name": "John Moehrke",
        "timestamp": 1576071938
    },
    {
        "content": "<p>What I'm really interested in is how many systems that create documents have <em>ever</em> created production documents with values other than \"N\" and how many systems that consume documents have behavior that's in any way different based on what the code is.</p>",
        "id": 183160221,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1576073691
    },
    {
        "content": "<p>I.e. Not what's the percentage of sensitive data, but rather what systems actually differentiate sensitive data and behavior around it.</p>",
        "id": 183160260,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1576073723
    },
    {
        "content": "<p>yes. I would also like a reality check on \"N\" vs anything-else... But there are various reasons that \"N\" might be the only thing that is live. So I am interested in \"why not\", because that helps us understand the likelihood for improvement.</p>",
        "id": 183163881,
        "sender_full_name": "John Moehrke",
        "timestamp": 1576075884
    },
    {
        "content": "<p>OUTBOUND:<br>\nLet me know if your experience on documents published (outbound) from your system is that :</p>\n<ol>\n<li>\"N\" is the only thing your system would ever send, as you have no instrumentation for anything other than \"N\"</li>\n<li>\"N\" is the only thing your system would ever send, as all policies restrict anything more sensitive. (that is to say your system can do it, but mostly is never configured to do it)</li>\n<li>\"N\" is mostly what is sent, as there is a small set of circumstances when restricted \"R\" could be sent.  (an example is 42 CFR Part 2 data where no consent is given)</li>\n<li>You have a system that is more complex than just \"N\" vs \"R\".</li>\n</ol>\n<p>INBOUND<br>\nLet me know your inbound experience:</p>\n<ol>\n<li>100% of documents inbound are marked \"N\"</li>\n<li>Our request for data forces only \"N\" to be requested</li>\n<li>We see both \"N\" and \"R\" data but nothing else</li>\n<li>We see more than just \"N\" and \"R\" data</li>\n</ol>\n<p>so just respond with your number for inbound and your number for outbound. Feel free to elaborate, but all I want is these two numbers. You should not need to do statistical assessment, as the difference between these buckets should be stark.</p>",
        "id": 183163911,
        "sender_full_name": "John Moehrke",
        "timestamp": 1576075902
    },
    {
        "content": "<p>Also on INBOUND, do you treat \"N\" vs. \"R\" vs. other codes differently in any way?</p>",
        "id": 183170859,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1576079839
    },
    {
        "content": "<p>I didn't expect anyone would be wiling to say they ignore all tags.</p>",
        "id": 183177125,
        "sender_full_name": "John Moehrke",
        "timestamp": 1576083561
    },
    {
        "content": "<p>True.  But they might choose to not answer a question about whether they have logic that differentiates.  If few people say they differentiate, that would be telling</p>",
        "id": 183181890,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1576086574
    },
    {
        "content": "<p>We have logic that differentiates on CDAs, would have to see if we have data on actual production %. We don't send anything other than N out.</p>",
        "id": 183196564,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1576095045
    },
    {
        "content": "<p>If it's inbound marked R/V etc, it gets stored (and accessed) in a different way.</p>",
        "id": 183196639,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1576095093
    },
    {
        "content": "<p>It sounds like the majority inbound in prod is N. We could get more detailed if needed :)</p>",
        "id": 183197322,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1576095489
    },
    {
        "content": "<p>For outbound, if there's any sensitive info, the CDA doesn't get created.</p>",
        "id": 183197384,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1576095542
    },
    {
        "content": "<p>as mentioned, because of consent complications</p>",
        "id": 183197404,
        "sender_full_name": "Jenni Syed",
        "timestamp": 1576095561
    },
    {
        "content": "<p>thanks <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span></p>",
        "id": 183197544,
        "sender_full_name": "John Moehrke",
        "timestamp": 1576095639
    },
    {
        "content": "<p>The ONC 21st Century Cures Act NPRM Draft Test Procedures - See <a href=\"https://www.healthit.gov/sites/default/files/page/2019-03/170_315b_13_Data_segmentation_for_privacy_-_receive.pdf\" target=\"_blank\" title=\"https://www.healthit.gov/sites/default/files/page/2019-03/170_315b_13_Data_segmentation_for_privacy_-_receive.pdf\">https://www.healthit.gov/sites/default/files/page/2019-03/170_315b_13_Data_segmentation_for_privacy_-_receive.pdf</a>  The received CCDA tagged as restricted document includes the following data elements: The originating document Individual Author or Organization; and Confidentiality Code constrained in accordance with the standard specified in § 170.205(o)(1).5 - which is \"R\" (restricted) for sensitive information governed by privacy laws more stringent than HIPAA (which is \"N\" because it's the norm of protection.)<br>\n<a href=\"https://www.healthit.gov/sites/default/files/page/2019-03/170_315b_12_Data_segmentation_for_privacy_-_send.pdf\" target=\"_blank\" title=\"https://www.healthit.gov/sites/default/files/page/2019-03/170_315b_12_Data_segmentation_for_privacy_-_send.pdf\">https://www.healthit.gov/sites/default/files/page/2019-03/170_315b_12_Data_segmentation_for_privacy_-_send.pdf</a> for proposed capability The user will generate a summary record document(s) from the Health IT Module and submit the document(s) to the tester for verification. The generated summary record includes the following data elements:  Document Level Confidentiality Code constrained in accordance with the standard specified in § 170.205(o)(1) HL7 Version 3 Implementation Guide: Data Segmentation for Privacy (DS4P), Release 1 - which is \"R\" (restricted) for sensitive information governed by privacy laws more stringent than HIPAA (which is \"N\" because it's the norm of protection.)</p>",
        "id": 183201074,
        "sender_full_name": "k connor",
        "timestamp": 1576097929
    },
    {
        "content": "<p>I'm in the process of creating training material to cover 'security labels'. It'll first cover the wider access control context, SLS, and then focus on the FHIR aspects thereof. Let's see whether I understand the context of the labeling process correctly:</p>\n<p>Let's say system A receives a request for a resource R: then R could already have security labels associated with it created by some other system (which A imported into its persistence layer), A might run a SLS (once upon storing R, or whenever R is modified) to assign new labels or update old labels on R.<br>\nThe access control engine could also use an SLS at run-time (upon querying) to assign run-time labels (espcially dynamic labels), and stick them on to R, to inform the querying application (let's call that application: Q) of such labels.  Q would at least have to persist R with its non-dynamic labels. </p>\n<p>In XACML terms, an SLS (if present) would effectively be grouped with a PDP, or could be grouped with a PAP. </p>\n<p>Correct?</p>",
        "id": 220358949,
        "sender_full_name": "René Spronk",
        "timestamp": 1608289341
    },
    {
        "content": "<p>Big question is obviously: if one has a XACML based policy registry, what access control rules would one support using a privacy label (=labeling based on a XACML policy) versus a SDS (=access control decisions based on policies, and labels related thereto). Key differentiator is the stickyness of the labels when storing a resource, in case one assumes that a retrieving system has the capability to support security labels, but does not support SDS, or does not support (the same set of) policies.</p>",
        "id": 220360788,
        "sender_full_name": "René Spronk",
        "timestamp": 1608290601
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"199026\">@k connor</span> <span class=\"user-mention\" data-user-id=\"191920\">@Mohammad Jafari</span></p>",
        "id": 220361027,
        "sender_full_name": "René Spronk",
        "timestamp": 1608290798
    },
    {
        "content": "<p>On the latter topic, John also blogged about such questions: <a href=\"https://healthcaresecprivacy.blogspot.com/2019/02/segmenting-sensitive-health-topics.html\">https://healthcaresecprivacy.blogspot.com/2019/02/segmenting-sensitive-health-topics.html</a></p>",
        "id": 220367500,
        "sender_full_name": "René Spronk",
        "timestamp": 1608295660
    },
    {
        "content": "<p>Looking at the HCS Label categories, Confidentiality, Sensitivity, Privacy Law, Integrity, Compartment, Handling caveats: in what order would you list those in terms of actual use (from high to low)? Either what systems are using right now, or what you think the usage will be within the next years or so. It would seem that Confidentiality, Sensitivity and Handling caveats are in the top-3. Would you agree with that assessment ?</p>",
        "id": 220368106,
        "sender_full_name": "René Spronk",
        "timestamp": 1608296089
    },
    {
        "content": "<p>Hi Rene - a lot of questions. Starting with your last one. See <a href=\"http://hl7.org/implement/standards/fhir/uv/security-label-ds4p/2020May/spec.html\">http://hl7.org/implement/standards/fhir/uv/security-label-ds4p/2020May/spec.html</a> for the FHIR version of HCS.  Also, see <a href=\"https://confluence.hl7.org/display/SEC/Security+Labels\">https://confluence.hl7.org/display/SEC/Security+Labels</a> and leaf pages.  There are 3 Named Tag Sets: Security Classification, Security Category, and Security Control.  Security Classification, which is the level of confidentiality protection, only has Confidentiality Tag Set, and a label must have 1..1.  Security Category, which is a security/privacy attribute of the labeled content, includes sensitivity, and importantly, the policy tag, as well as others.  Labeled content may have 0..* Security Category tags.  Security Control tags convey the permissible purposes of use, obligations, refrains, and privacy marks.  Labeled content may have 0..* Security Control tags.</p>",
        "id": 220379407,
        "sender_full_name": "k connor",
        "timestamp": 1608302609
    },
    {
        "content": "<p>RE 1st set of questions - See HL7 SLS spec <a href=\"http://www.hl7.org/implement/standards/la.cfm?file=/documentcenter/private/standards/v3/V3_SECURITY_LABELSRV_R1_2014JUN_R2019JUN.zip\">http://www.hl7.org/implement/standards/la.cfm?file=/documentcenter/private/standards/v3/V3_SECURITY_LABELSRV_R1_2014JUN_R2019JUN.zip</a>  The component that runs at access decision time along with PAP is the SLS.  The component that runs after the PDP to assign a label to the authorized disclosure is a PPS (Privacy Protective Service).  In the FHIR DS4P IG, we've added an extension that allows a label to include a reference to an external artifact, which could be the XACML policy, so it too can \"stick\" to the disclosed content.</p>",
        "id": 220380366,
        "sender_full_name": "k connor",
        "timestamp": 1608303086
    },
    {
        "content": "<p>RE Which tags are used most and in what order:  Order doesn't matter as long as long as the label is differentiated by policy - which is what we use the sec-label-basis for in FHIR DS4P IG <a href=\"http://hl7.org/implement/standards/fhir/uv/security-label-ds4p/2020May/StructureDefinition-extension-sec-label-basis.html\">http://hl7.org/implement/standards/fhir/uv/security-label-ds4p/2020May/StructureDefinition-extension-sec-label-basis.html</a>.  Cardinality matters for Confidentiality - must be 1..1 per label.  The tags used should be sufficient to convey the policy.  Sometimes, part of the policy is conveyed outside of the label, e.g., NHIN requests contain the purpose of use (POU). Since the prevailing policy is HIPAA, then a Confidentiality code = N is sufficient.  However, with Part 2 (current, not the To Be revision) governed content where the POU is set outside of the label, it is important to include the refrain tag NORDSCLCD (Prohibition on redisclosure without patient consent directive).  In some cases, it is important to include the Sensitivity tag so that the recipient knows which information is governed by the label.  E.g., if a C-CDA includes service information governed by HIPAA for which the patient has paid for in full, a provider will need to know which information may not be disclosed to a payer.  The safest practice is to include all of the tags for the policy governing the information.  If a policy domain decides on a consensus security label for each privacy/security policy important to the domain, then recipients would be able to configure their access control systems to recognize an entire label.  There doesn't have to be fine grain parsing of each label to figure out how to comply with the policy.</p>",
        "id": 220383154,
        "sender_full_name": "k connor",
        "timestamp": 1608304371
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span> RE \"Jenni Syed: For outbound, if there's any sensitive info, the CDA doesn't get create as mentioned, because of consent complications\" Curious how that's going to work with CURES Information Blocking - if the patient consented to disclosure of restricted sensitive information or the requester is authorized to receive restricted information (where consent is not required), then not sending the C-CDA would not meet the privacy exemption from what I can tell. Another thought is that not being able to computably segment/label data may not meet the Information Blocking infeasibility exemption if the sender could have manually redacted/labeled the data, e.g., in a UI.  Interestingly, entities required to label CUI are now examining the labeling capabilities of commonly deployed content/security management and data loss protection products such as Varonis, McAfee, and Microsoft Information Protection.  Some of these are able to label computably and some allow end users to label using labeling templates.</p>",
        "id": 220386004,
        "sender_full_name": "k connor",
        "timestamp": 1608305768
    },
    {
        "content": "<p>Right - that's a lot of details, which I'll read up on. This conversation serves as input in the creation of international (non-US specific) training material, and we'll probably talk about security labels for 20-30 minutes. The training material won't mention CDA at all (it is a FHIR training, one can't assume any prior knowledge of CDA - which most attendees in FHIR courses won't have). </p>\n<p>One of the things to explain which types of security labels are <em>actually used</em>, and show them a list of which types of security labels are most commonly implemented.  That question is not about how we would like projects to use labels, but about actual use.</p>\n<p>Re: 1st set of questions: thanks, that's helpful, I'll read the SLS spec.</p>",
        "id": 220389952,
        "sender_full_name": "René Spronk",
        "timestamp": 1608307409
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191372\">@René Spronk</span> I presume you got the answers to your questions that I would give by reading my blog...  Let me know what I might need to clarify</p>",
        "id": 220699345,
        "sender_full_name": "John Moehrke",
        "timestamp": 1608650160
    },
    {
        "content": "<p>As you indicate the \"when\" the SLS is applied is a design choice, usually policy driven. Doing it as PIP to a runtime request for data assures that the data are most accurately assessed to current clinical knowledge and policy norms. BUT, doing this at runtime will result in performance impact. Doing this at import, and just using existing tags at runtime, might be more energy efficient; but will not catch cases where clinical facts change over time from sensitive to non-sensitive (like HIV did), or from non-sensitive to sensitive.</p>",
        "id": 220699558,
        "sender_full_name": "John Moehrke",
        "timestamp": 1608650274
    },
    {
        "content": "<p>Note that the SLS tends to just mark the data with the sensitivity codes, classifying the data into various sensitivity buckets. This is PIP. These sensitivity codes tend to get converted into access decisions, and those decisions tend to apply obligations and refrains; and scope use to purposees... with the resulting released data not including the sensitivity codes that the SLS came up with.</p>",
        "id": 220699816,
        "sender_full_name": "John Moehrke",
        "timestamp": 1608650391
    },
    {
        "content": "<p>First priority for an organization to implement is Policy... that policy might declare that all data released has implied tags of X + Y + Z. Thus the data at runtime does not need to have these tags, limiting accidents and bandwidth overhead. Where X + Y + Z tends to be a group of authorized purpose of use (Treatment + Payment), a group of refrains (do not re-disclose without further consent, persist encrypted, attribution to source), and a confidentiality code of Normal.   -- which is also my proposal for the priority of the use of the valuesets in the HCS vocabulary.</p>",
        "id": 220700262,
        "sender_full_name": "John Moehrke",
        "timestamp": 1608650593
    },
    {
        "content": "<p>More mature is an environment that recognizes multiple levels of access, where purposeOfUse must be declared to communicate intentions. Where obligations must be declared on data as they can't be implied by policy. Where multiple level access controlled data are carried in the same bundle because the recipient system is trusted, but where the users at that recipient system are known to include legitimate access by lesser-authorized users. These are the reasons for inline tagging, vs implied tagging.</p>",
        "id": 220700555,
        "sender_full_name": "John Moehrke",
        "timestamp": 1608650738
    },
    {
        "content": "<p>I can see that SLS would be PIP, and I'll certainly cover the considerations of assigning labels at run-time (upon disclosure) or batch-like. Policies should be defined first (and this is mostly lacking in 'affinity domains'). There may be implicit defaults, these may have to be made explicit when disclosing data.</p>",
        "id": 220706309,
        "sender_full_name": "René Spronk",
        "timestamp": 1608653800
    },
    {
        "content": "<p>When it comes to guidance for FHIR servers, they should A)  Enforce the handling caveats associated with security labels, and B) Restrict ability of clients to modify security labels to ensure their integrity; Support the $meta operations</p>\n<p>Is there any additional guidance as to 'category B' ?</p>",
        "id": 220769359,
        "sender_full_name": "René Spronk",
        "timestamp": 1608711781
    },
    {
        "content": "<p>Are you asking about \"functionally\" regarding the data persisted within themselves? We generally stay away from that. We define the requirements on import (create/update) and on export (read/delete). Letting you handle persistence how ever works for you.</p>",
        "id": 220787099,
        "sender_full_name": "John Moehrke",
        "timestamp": 1608729095
    },
    {
        "content": "<p>note that there are authorized reasons to change the .meta.security (patient explicitly tagging data they want handled with higher confidentiality), privacy office needing to put a hold on data under investigation, police investigation, public health reporting). The $meta operations are only helpful because they have been designed such that using them to modify the .meta.security could function without changing the _lastUpdated. Changing that might be desired by policy, or might be not.  However (B) can only be examined by the server on an Update, where the server has knowledge of the previous state of the tags.  So it is important to cast your (B) carefully as there are many considerations. I am not convinced that the $meta operation will be found as important/useful as was originally envisioned. Lastly, (B) effect might simply happen because of policy driven design, that is to say that if on a Read a client might get a filtered .meta.security, then on an Update the server can't trust the .meta.security values the client offers, the server must dump them and keep what it has internally. An example might be where the tags are more privacy exposing than the data, so that tag always gets removed; or where a runtime SLS is used to apply tags that are never persisted; or where obligation tags are applied specific to that client/user. These roundtrip issues make all Import (Create/Update) difficult, not just difficult for local trusted app. Example is that when Importing from another organization, their tags might not apply at all, yet they do need to be considered relative to the trust-framework agreements and patient consents.</p>",
        "id": 220788068,
        "sender_full_name": "John Moehrke",
        "timestamp": 1608729921
    },
    {
        "content": "<p>which gets to your (A) relative to a Server Importing data from another organization, it needs to inspect the incoming .meta.security and decide what to do. I would like to think that the other organization didn't put tags that have no value or have no expectation; but it is possible. And they might have been overly tag happy, tagging things that could have been implied under the trust-framework.</p>",
        "id": 220788242,
        "sender_full_name": "John Moehrke",
        "timestamp": 1608730061
    },
    {
        "content": "<p>Relative to Obligations, Refrains, and PurposeOfUse... I think these should only appear in the <a href=\"http://Bundle.meta.security\">Bundle.meta.security</a>; as they are contextually related to the authorization decision for the request/response; and generally are not specific to the data itself (they are not strictly \"meta\" about the \"data\"; they are \"meta\" about the \"communication\"). Thus I would tend to recommend against putting these valuesets on data. This is not to say that a system upon Import couldn't put these on their persisted data, that is their design choice. I might chose to put these into the Provenance,  would rather see us get Permission done so I could put it there.    I don't think this is in violation of the context-conduction forbiddance principle that FHIR has, but that is a perspective against my thinking.</p>",
        "id": 220788974,
        "sender_full_name": "John Moehrke",
        "timestamp": 1608730618
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> <a href=\"#narrow/stream/179247-Security-and.20Privacy/topic/security.20labels.20for.20dummies.3F/near/220788974\">said</a>:</p>\n<blockquote>\n<p>Relative to Obligations, Refrains, and PurposeOfUse... I think these should only appear in the <a href=\"http://Bundle.meta.security\">Bundle.meta.security</a>; as they are contextually related to the authorization decision for the request/response; and generally are not specific to the data itself (they are not strictly \"meta\" about the \"data\"; they are \"meta\" about the \"communication\"). Thus I would tend to recommend against putting these valuesets on data. This is not to say that a system upon Import couldn't put these on their persisted data, that is their design choice. I might chose to put these into the Provenance,  would rather see us get Permission done so I could put it there.    I don't think this is in violation of the context-conduction forbiddance principle that FHIR has, but that is a perspective against my thinking.</p>\n</blockquote>\n<p>Looking forward to progress on the Permission Resource! I'll see if I can get the Security SMEs here in NZ involved.</p>",
        "id": 220823149,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1608754217
    },
    {
        "content": "<p>Sigh - the security topic is overloaded with all sorts of careful considerations. But in a training course (where a topic like security labels already falls in the 'advanced topics' category) I have max 30 minutes to spend on the topic ;-) .. so whilst I appreciate the considered and detailed feedback, which provides me (as a trainer) with a lot of context, I'm still having to condense the material, and get rid of some of the nuances/subtleties that a newbie to this subject won't understand anyway. That's my job as a trainer, so no complaints there. But I will try not to stray too far from what the experts on this forum regard as the 'minimal viable content' .. </p>\n<p>Nowadays, we have to make statements about server-side implementation aspects, albeit not in a normative manner, but as guidance, or a statement of observed best practices. Hopefully we'll be able to do that, otherwise those that study this subject will simply drown in the level of detail, without us providing them guidance as to e.g. how this is currently used in projects, or how this should be used in practice. And I'm aware that many of you work on this stuff in real-live projects, so I value your suggestions and hints.  </p>\n<p>The current version of my server-side-supply slide (talking points, so I'll elaborate when presenting this):</p>\n<ul>\n<li>Enforce the handling caveats associated with security labels</li>\n<li>\n<p>Process/filter labels on imported data<br>\n** On update, “merge” inbound labels with pre-existing ones</p>\n</li>\n<li>\n<p>Restrict ability of clients to modify security labels to ensure their integrity<br>\n** May be helpful to support the $meta operations</p>\n</li>\n<li>\n<p>Upon disclosure, scrub security labels<br>\n** Tags themselves may be sensitive</p>\n</li>\n</ul>",
        "id": 220872126,
        "sender_full_name": "René Spronk",
        "timestamp": 1608819254
    },
    {
        "content": "<p>understood. Any progress at educating is good. I just want to express that the area is very broad and very deep. I am happy if they go away understanding the tea-cup you offer and understanding that was just a tea-cup.</p>",
        "id": 220875102,
        "sender_full_name": "John Moehrke",
        "timestamp": 1608822966
    }
]