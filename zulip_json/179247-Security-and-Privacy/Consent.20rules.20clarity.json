[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192587\">@David Pyke</span> I just added some CR to help draw some clarity to the provisions model in Consent</p>\n<ul>\n<li><a href=\"https://jira.hl7.org/browse/FHIR-30760\">https://jira.hl7.org/browse/FHIR-30760</a></li>\n</ul>",
        "id": 224462054,
        "sender_full_name": "John Moehrke",
        "timestamp": 1611922288
    },
    {
        "content": "<p>Need to make more clear how in .provisions AND and  OR are to be used.</p>\n<p>The general rule that I designed, but I don't see stated anywhere. This was designed to enable all possible logic. This is also why the .provisions are not restricted on how deep they can go:</p>\n<p>1) adjacent provisions are in an OR relationship</p>\n<p>2) adjacent elements within a provision are in an AND relationship</p>\n<p>3) all values within an element are in an AND relationship</p>",
        "id": 224462142,
        "sender_full_name": "John Moehrke",
        "timestamp": 1611922350
    },
    {
        "content": "<p>Thus </p>\n<p>A) Permit Dr Bob for Treatment purpose access to vital-signs that are normal confidentiality and published between 2000-2020. This indicates that no one other than Dr Bob, nothing other than Treatment, nothing other than vital-signs, nothing other than data that are normal, and nothing outside of the timeframe. Thus this is all encoded in one sub .provision. The parent provision would be a DENY, and this sub .provision would have have elements indicating these.</p>\n<div class=\"codehilite\"><pre><span></span><code>* provision.type = #deny\n* provision.provision[0].type = #permit\n* provision.provision[0].actor = Dr Bob\n* provision.provision[0].purpose = #Treatment\n* provision.provision[0].class = #vital-signs\n* provision.provision[0].securityLabel = #N\n* provision.provision[0].datePeriod = 2000-2020\n ```\n</code></pre></div>",
        "id": 224462163,
        "sender_full_name": "John Moehrke",
        "timestamp": 1611922374
    },
    {
        "content": "<p>B) Permit Dr Bob, Permit Treatment purpose access, permit vital-signs, permit normal confidentiality, and permit data published between 2000-2020. This indicates that Dr Bob is to be permitted for everything, Treatment purpose of access for everything, vital-signs for any purpose, normal confidentiality tagged data, and permit data published between 2000-2020 </p>\n<div class=\"codehilite\"><pre><span></span><code>* provision.type = #deny\n* provision.provision[0].type = #permit\n* provision.provision[0].actor = Dr Bob\n* provision.provision[1].type = #permit\n* provision.provision[1].purpose = #Treatment\n* provision.provision[2].type = #permit\n* provision.provision[2].class = #vital-signs\n* provision.provision[3].type = #permit\n* provision.provision[3].securityLabel = #N\n* provision.provision[4].type = #permit\n* provision.provision[4].datePeriod = 2000-2020\n</code></pre></div>\n<p>of course these are all in an OR relationship, which given the rules will result in permitting everything. Thus the result of this is to permit everything not explicitly denied, and given the parent clause didn't explicitly deny anything specific, the result is everything is permitted under the consent base policy.  </p>\n<div class=\"codehilite\"><pre><span></span><code>* provision.type = #permit\n</code></pre></div>",
        "id": 224462235,
        "sender_full_name": "John Moehrke",
        "timestamp": 1611922427
    },
    {
        "content": "<p>C) Permit requests for Treatment, Payment, and Operations. Which means Permit Treatment and Permit Payment, and Permit Operations, or any combination of the three. Are encoded how? Does this require three .provision elements? or is this done with one .provision with three values in the .purpose?  I tend to think that this argues that they must be in an AND relationship, thus to encode this TPO use, we need three .provisions.</p>\n<p>so this authorizes request that declare they want Treatment, Payment, AND Operations access. But this would not authorize someone asking only for Treatment:</p>\n<div class=\"codehilite\"><pre><span></span><code>* provision.provision[0].type = #permit\n* provision.provision[0].purpose[0] = #Treatment\n* provision.provision[0].purpose[1] = #Payment\n* provision.provision[0].purpose[2] = #Operations\n</code></pre></div>\n<p>so this authorizes requests that declare they want Treatment, payment, AND Operations access, but would also authorize access requests for only Treatment, or only Payment, or only Operations, or Treatment+Payment, or ....</p>\n<div class=\"codehilite\"><pre><span></span><code>* provision.provision[0].type = #permit\n* provision.provision[0].purpose[0] = #Treatment\n* provision.provision[1].type = #permit\n* provision.provision[1].purpose[0] = #Payment\n* provision.provision[2].type = #permit\n* provision.provision[2].purpose[0] = #Operations\n</code></pre></div>",
        "id": 224462357,
        "sender_full_name": "John Moehrke",
        "timestamp": 1611922521
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> if we are opening the discussion on provisions, I want to share our findings in LEAP as well. <br>\n<a href=\"https://sdhealthconnect.github.io/leap/blog/2020/05/13/provisions.html\">https://sdhealthconnect.github.io/leap/blog/2020/05/13/provisions.html</a><br>\nThe gist of our proposal is to get rid of the recursive, multi-level provision structure and use a flat array of provisions together with a decision combining strategy. I will file a CR to that effect as well to be considered in the new round of updates to the consent resource.</p>",
        "id": 228833414,
        "sender_full_name": "Mohammad Jafari",
        "timestamp": 1614885528
    },
    {
        "content": "<p>Please do!</p>",
        "id": 228834160,
        "sender_full_name": "David Pyke",
        "timestamp": 1614885814
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192587\">@David Pyke</span> <a href=\"https://jira.hl7.org/browse/FHIR-31412\">FHIR-31412</a></p>",
        "id": 228868017,
        "sender_full_name": "Mohammad Jafari",
        "timestamp": 1614899853
    },
    {
        "content": "<p>I am surprised that the patients would sign off on these things. You have very patient patients</p>",
        "id": 232881643,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1617357591
    },
    {
        "content": "<p>(i.e. the amount of rules and their complexity). We also do something like that in Europe but it becomes a blanket consent for being treated, which is one of the misuses I think were introduced with the GDPR rush.</p>",
        "id": 232881814,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1617357674
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> the change is just a change in the encoding. The complexity is still supported. However we have not been presented with anyone that wants to do anything other than a few exceptions to a base policy.</p>",
        "id": 232889226,
        "sender_full_name": "John Moehrke",
        "timestamp": 1617363379
    },
    {
        "content": "<p>Ok. I was just feeling for the patient. <br>\nI think it is good to support more complex scenarios (hoping that this complexity does not end up on the patient)</p>",
        "id": 232889492,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1617363634
    },
    {
        "content": "<p>There is nothing we can do to make it easier or harder on the Patient. That falls to those writing the policies, writing the User Interface, etc.</p>",
        "id": 232890491,
        "sender_full_name": "John Moehrke",
        "timestamp": 1617364477
    },
    {
        "content": "<p>I'm not sure about that. Often the features supported by a system influence how the system is leveraged in implementations, which in turn influences usability.</p>",
        "id": 232902806,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1617372584
    }
]