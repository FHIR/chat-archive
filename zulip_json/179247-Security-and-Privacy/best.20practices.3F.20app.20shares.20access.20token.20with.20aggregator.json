[
    {
        "content": "<p>I'm hoping to hear the community's perspective on the following scenario -- </p>\n<p>A SMART on FHIR app contracts with a 3rd party middleware vendor. The app passes it's access_token to the middleware which reads and writes to the resource server on its behalf. Please indicate in which scenarios you'd deem this appropriate:</p>",
        "id": 259460362,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1635459970
    },
    {
        "content": "<p>/poll the middleware is a library or compiled in SDK<br>\nYes, that's okay</p>",
        "id": 259460442,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1635460050
    },
    {
        "content": "<p>/poll the app is patient facing and the patient agreed to the disclosure in the EULA<br>\nyes, okay<br>\nNo, bad security</p>",
        "id": 259460577,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1635460144
    },
    {
        "content": "<p>/poll the app is operated by a covered entity and the CE signed a BAA with both parties<br>\nyes, okay<br>\nno, bad security</p>",
        "id": 259460595,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1635460177
    },
    {
        "content": "<p>/poll instead of acquiring then sharing the access token, the middleware performs the full auth code flow on behalf of the app<br>\nyes, okay<br>\nno, bad security</p>",
        "id": 259460685,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1635460230
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191864\">@Isaac Vetter</span> I'm not sure how to answer these. Who's the \"CE\"? What's the details of the contract between app vendor and middleware vendor? Who offered the app to the patient? What's do you mean by 'security'? (some of you options appear to provide good technical security - maybe - and you're asking about perceptions). in the last option, how does the app authz to the middleware?</p>",
        "id": 259462781,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1635461684
    },
    {
        "content": "<p>I don't think the blanket terms \"okay\" and \"bad\" are meaningful here. Practices must be evaluated in the context of individual agency, informedness, understanding, expectations...</p>",
        "id": 259466652,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1635464546
    },
    {
        "content": "<p>In general, sharing of access_token is not a good security practice. The whole idea of OAuth and related specs builds on the idea of not sharing security tokens/secrets (which has caused issues). There are standards (or ideas in draft) for delegated access which can be better than blind sharing.</p>\n<p>Having said that there may be cases where some business partnership nudges towards common access token b/w systems which need to be evaluated case by case. (those should be exceptional and rare)</p>",
        "id": 259512835,
        "sender_full_name": "Jeffy Mathew Jose",
        "timestamp": 1635508191
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194170\">@Jeffy Mathew Jose</span> you 'share' your token with your application libraries without even thinking about it. Why would splitting libraries into client and server module be any different? There's some reasons, yes, but not convincing ones - depends on how. I think the problem is in 'horizontal' sharing = between apps, rather than vertical sharing. but that also assumes a particular concept of 'between apps'</p>",
        "id": 259513707,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1635508664
    },
    {
        "content": "<p>While there's always exceptions, it seems fine to give an opinion on the 'general case'.</p>",
        "id": 259517273,
        "sender_full_name": "Vadim Peretokin",
        "timestamp": 1635510690
    },
    {
        "content": "<p>It seems fine to share an access token with a party that you explicitly trust for a specific purpose.  But the \"explicit trust\" is the essential part.</p>",
        "id": 259520970,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1635512766
    },
    {
        "content": "<p>And should probably involve vetting, security review, etc.</p>",
        "id": 259521012,
        "sender_full_name": "Cooper Thompson",
        "timestamp": 1635512790
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179247-Security-and.20Privacy/topic/best.20practices.3F.20app.20shares.20access.20token.20with.20aggregator/near/259513707\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"194170\">Jeffy Mathew Jose</span> you 'share' your token with your application libraries without even thinking about it. Why would splitting libraries into client and server module be any different? There's some reasons, yes, but not convincing ones - depends on how. I think the problem is in 'horizontal' sharing = between apps, rather than vertical sharing. but that also assumes a particular concept of 'between apps'</p>\n</blockquote>\n<p>that is the last case we were asked about. The first cases didn't express a business relationship.</p>",
        "id": 259528666,
        "sender_full_name": "John Moehrke",
        "timestamp": 1635516239
    },
    {
        "content": "<p>These all seem to be asking for a legal opinion on a policy statement relative to HIPAA and other USA regulations.... I am not a lawyer</p>",
        "id": 259528828,
        "sender_full_name": "John Moehrke",
        "timestamp": 1635516292
    },
    {
        "content": "<p>As a security person,  I would favor architectures that have a clear chain of trust. Implied trust (where the intermediary is allowed to hit the backend onbehalf of the app and user based solely on some unstated trust) are always problematic. But sometimes they can be build using good old legal contracts. But there needs to be a clear chain of trust.</p>",
        "id": 259529092,
        "sender_full_name": "John Moehrke",
        "timestamp": 1635516390
    },
    {
        "content": "<p>thus, the all could be acceptable... but generally only the last one is provable in technical terms.</p>",
        "id": 259529165,
        "sender_full_name": "John Moehrke",
        "timestamp": 1635516421
    },
    {
        "content": "<p>Thank you, guys. The real-world scenario is an intermediary (that perhaps aggregates) in front of a provider-facing app sold to health systems.</p>",
        "id": 259566062,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1635532543
    },
    {
        "content": "<p>To answer Grahame's questions explicitly:</p>\n<ul>\n<li>\n<p>Who's the \"CE\"? <br>\n** A healthcare delivery system in the US.</p>\n</li>\n<li>\n<p>What's the details of the contract between app vendor and middleware vendor? <br>\n** I don't know. Re: business contract -- the app vendor pays the middleware vendor. Re: technical contract --  I'm guessing that the middleware vendor provides a RESTful and messaging FHIR server that the app vendor entirely interacts with. And that they've established some type of tenant id to identify which health system is using the app.  I don't know how the app authnz's to the middleware. </p>\n</li>\n<li>\n<p>Who offered the app to the patient? <br>\n** This was a made-up scenario, the straighforward case would be that the app developer offered the app (e.g. not a covered entity).</p>\n</li>\n<li>\n<p>What's do you mean by 'security'? <br>\n** I think security best practice or maybe technical acceptableness.</p>\n</li>\n</ul>",
        "id": 259566073,
        "sender_full_name": "Isaac Vetter",
        "timestamp": 1635532548
    }
]