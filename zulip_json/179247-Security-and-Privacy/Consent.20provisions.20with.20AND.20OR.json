[
    {
        "content": "<p>I have submitted <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20503\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=20503\">GF#20503</a> given some discussion on monday's GDPR call. I am interested in discussion that would help us understand the need and understand if the solution I mention is sufficient. Here is the body of the GF item<br>\nThere are needs to encode into a privacy Consent provisions of various combinations. That is there are times when I want to say:</p>\n<p>a) AND -- these two element values MUST exist for the provision to be evaluated</p>\n<p>b) OR -- either of these two element values MUST exist for the provision to be evaluated</p>\n<p>For example:</p>\n<p>a) The consent authorizes access when the request for data has both RESEARCH and RESEARCH_XYZ purposeOfUse</p>\n<p>b) The consent authorizaes access when the request for data is either RESEARCH or RESEARCH_XYZ purposeOfUse</p>\n<p>Back when consent had .except; this was handled by</p>\n<p>a)  One except would include in the purpseOfUse two values for RESEARCH and RESEARCH_XYZ</p>\n<p>b) Two except would exist with one including purposeOfUse of RESEARCH, the other except would have RESEARCH_XYZ.</p>\n<p>Thus OR is handled at the .except repitition level, and AND is handled with repitition of the element within the .except</p>\n<p>With .provision this is unclear, especially since .provision can infinitely nest. Is it true that repitition at the .provision level is always OR, and repitition at the elements within .provision is always AND (with the exception of provision.provision).?  It is not clear this is the intent, and not clear if this is possible,.</p>\n<p>Would be good to have the examples I give above expressed as examples of this, and encoded in examples.</p>\n<p>This topic came up on the HL7 GDPR call March 4, 2019; as they were trying to encode some GDPR like consents and needed AND/OR logic.</p>\n<p>I submitted <a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13420\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=13420\">GF#13420</a> which was dismissed withiout understanding my request for AND/OR capability.</p>",
        "id": 160015387,
        "sender_full_name": "John Moehrke",
        "timestamp": 1551802118
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192587\">@David Pyke</span></p>",
        "id": 160016567,
        "sender_full_name": "John Moehrke",
        "timestamp": 1551802928
    },
    {
        "content": "<p>Ah, that makes more sense.  We need to handle the nested provisions as either specifically or/and.  My understanding of the design was that a nested provision was to make an exception to the parent provision.  Additions would be handled at the parent.  I can ask this at today's CBCP meeting.</p>",
        "id": 160017281,
        "sender_full_name": "David Pyke",
        "timestamp": 1551803328
    },
    {
        "content": "<p>I am just not sure that my recommendation (repeated .provisions are considered OR, repeated elements inside .provision are AND) will always work. Need to setup some examples of permit vs deny to determine if this works. It was far easier to understand when there was just one level of .except</p>",
        "id": 160017769,
        "sender_full_name": "John Moehrke",
        "timestamp": 1551803658
    },
    {
        "content": "<p>My thought it we need a flag inside provision to mark it as \"or\" or \"except\"</p>",
        "id": 160018502,
        "sender_full_name": "David Pyke",
        "timestamp": 1551804200
    },
    {
        "content": "<p>I hope not. but we did discuss that on monday... it would make processing much harder</p>",
        "id": 160018566,
        "sender_full_name": "John Moehrke",
        "timestamp": 1551804250
    },
    {
        "content": "<p>I think if we need to start down that path, we should abandon the whole provision and just tell people to use XACML</p>",
        "id": 160018583,
        "sender_full_name": "John Moehrke",
        "timestamp": 1551804280
    },
    {
        "content": "<p>It was designed around except logic for sub-provisions.  I don't think anyone considered the Or case</p>",
        "id": 160018599,
        "sender_full_name": "David Pyke",
        "timestamp": 1551804292
    },
    {
        "content": "<p>I did include it in the original Consent that had .except</p>",
        "id": 160018698,
        "sender_full_name": "John Moehrke",
        "timestamp": 1551804363
    },
    {
        "content": "<p>and I am sure I described AND and OR logic -- as I have expressed in the new gForge.</p>",
        "id": 160018720,
        "sender_full_name": "John Moehrke",
        "timestamp": 1551804385
    },
    {
        "content": "<p>It is mentioned in the description in STU3 but not how one distinguishes between except and OR</p>",
        "id": 160018880,
        "sender_full_name": "David Pyke",
        "timestamp": 1551804523
    },
    {
        "content": "<p>CBCP meets in 12 minutes so we can discuss it there</p>",
        "id": 160018898,
        "sender_full_name": "David Pyke",
        "timestamp": 1551804537
    },
    {
        "content": "<p>Here are two distinct use-cases to show AND vs OR. They are somewhat contrived to be compact, but not really unusual. I will use purposeOfUse as a flat vocabulary, where as there is some structure such that Research_XYZ would be seen as a more specific version of Research, thus a request for data on Research_XYZ could be seen as the same as Research+Research_XYZ In the first one ( 1 ) the patient is authorizing requests that have purpose of either Research or the xyz specific research project; and ( 2 ) the patient is authorizing only requests that are declared as both Research and xyz specific research project.</p>\n<p>Given that the root provision must exist, I simply made the root .provision that denies all access to everything covered by the .policy. Presumably .policy is clear about how it relates to other Consent(s) so as to not have this policy negate another that is Treatment authorizing. This root level and combination with other Consents is the topic of another discussion with @grahame. There was a root level set of context setting elements (period, actor, purpose, etc), where these context setting elements were simply identifying the context that this Consent applies to. Thus a transaction that does not fit within the context given, is not applicable to that Consent. </p>\n<p>trying to do a compact pseudo json... I might be horably wrong with this pseudo-json encoding</p>\n<p>1) Authorize all requests for data with purpose of Research and all requests with purpose of Research_XYZ<br>\n.provision <br>\n {<br>\n \"type\":\"deny\",<br>\n \"provision\": <br>\n   [{\"type\":\"permit\",\"purpose\":[\"RESEARCH\"]},<br>\n    {\"type\":\"permit\",\"purpose\":[\"RESEARCH_XYZ\"]}]<br>\n  }</p>\n<p>2) Authorize all requests for data that have both purpose of Research and Research_XYZ indicated. Meaning a request that just asks for purpose of Research would be denied.<br>\n.provision <br>\n {<br>\n \"type\":\"deny\",<br>\n \"provision\": <br>\n   [{\"type\":\"permit\",\"purpose\":[\"RESEARCH\", \"RESEARCH_XYZ\"]}],<br>\n  }  </p>\n<p>I guess in the case of ( 1 ), one could/should have a deeper nested deny for the opposite purpose value. (e.g. permit research and deny research_xyz; or permit research_xyz and deny research)  Which is where I am not clear everything works.</p>\n<p>I wonder if the structure of .provision is going to work.</p>",
        "id": 160037768,
        "sender_full_name": "John Moehrke",
        "timestamp": 1551818237
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> ?</p>",
        "id": 160037795,
        "sender_full_name": "John Moehrke",
        "timestamp": 1551818258
    },
    {
        "content": "<p>Hi everyone. Any conclusion on this thread ? What about to consider OR what is inside the same element (e.g. policyRule; provision) and consider  AND the relationship between elements. I prepared a matrix with possible combinations based on the above case that I hope we can discuss in the incoming GDPR on FHIR call.</p>",
        "id": 161651719,
        "sender_full_name": "Giorgio Cangioli",
        "timestamp": 1553525969
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192587\">@David Pyke</span> can you join the HL7 GDPR call today?</p>",
        "id": 161651919,
        "sender_full_name": "John Moehrke",
        "timestamp": 1553526069
    },
    {
        "content": "<p>Yep, I'll bethere</p>",
        "id": 161652408,
        "sender_full_name": "David Pyke",
        "timestamp": 1553526352
    }
]