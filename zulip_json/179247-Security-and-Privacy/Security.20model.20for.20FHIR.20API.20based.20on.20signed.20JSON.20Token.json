[
    {
        "content": "<p>As anticipated in <a class=\"stream\" data-stream-id=\"179166\" href=\"/#narrow/stream/179166-implementers\">#implementers</a>  stream here is a proposal for discussion about the security model we have implemented.</p>\n<p><strong>SCENARIO</strong><br>\nWe have to publish a FHIR API to a trusted third party (e.g. a private clinic), we don’t want to know the registry of their users, we don’t want to manage singular permissions. The API is invoked from the server of the third party to our server, not directly form a client.</p>\n<p><strong>SECURITY CONSTRAINTS</strong><br>\n•   Communication between servers must be encrypted<br>\n•   We must enable only some third parties to call the service<br>\n•   We have to audit WHO used the service, at what time, for which patient…</p>\n<p><strong>SECURITY MODEL</strong><br>\nThe first two requisites are covered by using the TLS protocol, restricted by server IP, with a mutual certification; the certificate is nominal for each party and is released by our Certification Authority (the private key is held by the third party).<br>\nTo perform the audit trail of the singular operation we ask the caller to assert what follows:<br>\n•   Timestamp<br>\n•   Requestor ID<br>\n•   Operator ID<br>\n•   Operator role<br>\n•   Resource ID<br>\nAll mentioned fields must be passed in the header of the REST call, inside a signed JSON token that must have this structure:<br>\nBASE64URL(UTF8(JWS Protected Header)) || '.' || BASE64URL(JWS Payload) || '.' || BASE64URL(JWS Signature)<br>\nThe last part of the token is the signature of header and payload, in accordance with JWS standard (Json Web Signature RFC7515).</p>\n<p><strong>IMPLEMENTATION</strong><br>\nThe JOSE header is structured as follows:<br>\n{\"typ\":\"JWS\",\"alg\":\"SHA256\"}<br>\nPayload sample:<br>\n{\"requestorId\":\"EXTP056\",\"operatorId\":\"AS0562\",\"operatorRole\":\"HOPERAT\",\"timeStamp\":1568807570957,\"resourceId\":\"&lt;fiscal-code&gt;\"}<br>\nSignature must be applied with the same certificate used for TLS, that has a public key for signature.</p>\n<p><strong>REFERENCE STANDARDS</strong><br>\nTo design this solution we tried to apply recommendations of the following documentation/standards:<br>\nFHIR Release 4: <a href=\"http://hl7.org/fhir/\" target=\"_blank\" title=\"http://hl7.org/fhir/\">http://hl7.org/fhir/</a><br>\nMobile security considerations: <a href=\"https://www.ihe.net/uploadedFiles/Documents/ITI/IHE_ITI_Suppl_Appx-Z.pdf\" target=\"_blank\" title=\"https://www.ihe.net/uploadedFiles/Documents/ITI/IHE_ITI_Suppl_Appx-Z.pdf\">https://www.ihe.net/uploadedFiles/Documents/ITI/IHE_ITI_Suppl_Appx-Z.pdf</a><br>\nSecurity and Privacy module: <a href=\"http://hl7.org/fhir/R4/secpriv-module.html\" target=\"_blank\" title=\"http://hl7.org/fhir/R4/secpriv-module.html\">http://hl7.org/fhir/R4/secpriv-module.html</a><br>\nJWS standard: <a href=\"https://tools.ietf.org/html/rfc7515\" target=\"_blank\" title=\"https://tools.ietf.org/html/rfc7515\">https://tools.ietf.org/html/rfc7515</a></p>\n<p><strong>SUMMARY</strong><br>\nWhat’s relevant in this security model is that the token is generated by the invoker of the service, not released by an IDP server, it works more like a SAML Assertion rather than a JWT. This simplifies the security level as we don’t have to manage OAuth and to keep the registry of the operators of external parties. Another advantage is that the token is “refreshed” at every call and carries updated attributes for audit trail.</p>",
        "id": 181802477,
        "sender_full_name": "Ivano Tomainu",
        "timestamp": 1574672202
    },
    {
        "content": "<p>This seems rather similar to the IHE IUA profile of OAuth. In that model there is a well defined JWT set of attributes. <br>\nI am a fan of Mutual-Authenticated TLS, but it tends to have issues at the server interface. Especially when the server is using TLS accelerators that strip off the TLS.<br>\n<a href=\"https://healthcaresecprivacy.blogspot.com/2016/11/is-iua-oauth-useful-in-service-to.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2016/11/is-iua-oauth-useful-in-service-to.html\">https://healthcaresecprivacy.blogspot.com/2016/11/is-iua-oauth-useful-in-service-to.html</a></p>",
        "id": 181833320,
        "sender_full_name": "John Moehrke",
        "timestamp": 1574696215
    },
    {
        "content": "<p>IHE is currently updating the IUA profile due to some evolution of some draft IETF specifications. All are welcome to participate in that effort. I am sure that team would welcome your perspective.  <a href=\"https://github.com/IHE/IT-Infrastructure/tree/master/IUA.b\" target=\"_blank\" title=\"https://github.com/IHE/IT-Infrastructure/tree/master/IUA.b\">https://github.com/IHE/IT-Infrastructure/tree/master/IUA.b</a></p>",
        "id": 181833509,
        "sender_full_name": "John Moehrke",
        "timestamp": 1574696327
    },
    {
        "content": "<p>Thanks for your answer John, I've looked at the mentioned solutions and they are indeed similar to our model. The token attributes mentioned in IUA Profile confirm that we are on the right path. <br>\nI was wondering: could the lack of a FHIR Resource to describe the token raise an issue?</p>",
        "id": 181910182,
        "sender_full_name": "Ivano Tomainu",
        "timestamp": 1574765897
    },
    {
        "content": "<p>I have setup that resembles yours <span class=\"user-mention\" data-user-id=\"197698\">@Ivano Tomainu</span> , bridging SAML over OAuth2 with JWTs. What part of the model do you think lacks a FHIR Resource modelling?</p>",
        "id": 181917786,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1574772773
    },
    {
        "content": "<p>The JSON of the payload inside the token.<br>\nConsider that I work in a context similar to SAML Identitiy Federation, I'm in charge to release specification for the use of the service.</p>",
        "id": 181918371,
        "sender_full_name": "Ivano Tomainu",
        "timestamp": 1574773297
    },
    {
        "content": "<p>your JWT adheres to the JWT spec, right?</p>",
        "id": 181919255,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1574774042
    },
    {
        "content": "<p>We've done the following: <a href=\"https://ehealth-dk.atlassian.net/wiki/spaces/EDTW/pages/291176482/Tokens+roles+and+RBAC+ABAC#TheAccessToken\" target=\"_blank\" title=\"https://ehealth-dk.atlassian.net/wiki/spaces/EDTW/pages/291176482/Tokens+roles+and+RBAC+ABAC#TheAccessToken\">https://ehealth-dk.atlassian.net/wiki/spaces/EDTW/pages/291176482/Tokens+roles+and+RBAC+ABAC#TheAccessToken</a></p>",
        "id": 181919375,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1574774144
    },
    {
        "content": "<p>Thanks, very useful.<br>\nI agree that's more important to adhere to this specification: <a href=\"https://www.iana.org/assignments/jwt/jwt.xhtml\" target=\"_blank\" title=\"https://www.iana.org/assignments/jwt/jwt.xhtml\">https://www.iana.org/assignments/jwt/jwt.xhtml</a><br>\nrather than any other for the JSON Payload.</p>",
        "id": 181920528,
        "sender_full_name": "Ivano Tomainu",
        "timestamp": 1574774915
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"197698\">@Ivano Tomainu</span>,<br>\nI would also point you to the UDAP profiles for including this type of information in JWTs, specifically: <a href=\"http://www.udap.org/udap-client-authorization-grants.html\" target=\"_blank\" title=\"http://www.udap.org/udap-client-authorization-grants.html\">UDAP Client Authorization Grants using JSON Web Tokens</a>. This particular profile includes an extensions parameter specifically intended to carry the types of metadata you are describing. <br>\nIn your specialized situation, the Authorization JWT defined in that profile could be used as a standalone Authorization header payload. <br>\nAdditionally, since your FHIR server is presumably validating the JWT presented by the client, I would also note that the UDAP profiles are designed to link X.509 certificate frameworks to the trust model. This means that the JWT submitted by the client can also be used for authentication, in which case you may be able to simplify your workflow by removing the TLS client-side authentication altogether since client certificate validation is also part of the UDAP flow.<br>\nThese profiles have been tested at several <a href=\"https://confluence.hl7.org/display/FHIR/2019-09+Cross+Organization+Application+Access\" target=\"_blank\" title=\"https://confluence.hl7.org/display/FHIR/2019-09+Cross+Organization+Application+Access\">HL7 FHIR connectathons</a>. You can also find additional information about UDAP on the <a href=\"http://build.fhir.org/security.html#AuthZmethods\" target=\"_blank\" title=\"http://build.fhir.org/security.html#AuthZmethods\">FHIR Security page</a> and at <a href=\"http://www.udap.org\" target=\"_blank\" title=\"http://www.udap.org\">http://www.udap.org</a>.</p>",
        "id": 182366999,
        "sender_full_name": "Luis Maas",
        "timestamp": 1575306875
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"195299\">@Luis Maas</span> , is very interesting the fact that they talk of a JSON Assertion, it's exactly the concept we're replicating from SAML.<br>\nA part from that the server architecture is a bit different, we don't use Oauth Server.</p>",
        "id": 183346874,
        "sender_full_name": "Ivano Tomainu",
        "timestamp": 1576233548
    }
]