[
    {
        "content": "<p>The security WG has a CR <a href=\"https://jira.hl7.org/browse/FHIR-26938\">https://jira.hl7.org/browse/FHIR-26938</a>  that is asking us to define a pattern for auditEvent when recording a POST based search. I would rather define something that is in use, than define something no one has implemented.</p>",
        "id": 221545082,
        "sender_full_name": "John Moehrke",
        "timestamp": 1609777558
    },
    {
        "content": "<p>Would seem the post body is simple enough to record in the query element. Does someone have an example?</p>",
        "id": 221548484,
        "sender_full_name": "John Moehrke",
        "timestamp": 1609779039
    },
    {
        "content": "<p>Need both the URL and the post body (as can have parameters in both places, and the base URL would indicate which operation, or resource type)<br>\nI've also added notes into the Jira ticket too.</p>",
        "id": 222248730,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1610322840
    },
    {
        "content": "<p>yes, seems even with a GET query, one does need to preserve the http headers. So, is there already a definition of how one combines the URL and http headers (and body for POST) into a blob?</p>",
        "id": 222297801,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610372526
    },
    {
        "content": "<p>I'd be interested to know.</p>",
        "id": 222418110,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1610450486
    },
    {
        "content": "<p>For my server, I'd only log a few specific headers.</p>",
        "id": 222418121,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1610450511
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span>  what do you log? as is typical for FHIR and for Implementation Guides, they tend to start with what is currently done.</p>",
        "id": 222429148,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610457705
    },
    {
        "content": "<p>Our auditevents looks the same regardless of the FHIR query being done as GET or POST</p>",
        "id": 222468062,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610473495
    },
    {
        "content": "<p>They are semantically equal</p>",
        "id": 222468135,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610473529
    },
    {
        "content": "<p>so... what do they look like?</p>",
        "id": 222468311,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610473601
    },
    {
        "content": "<p>Ill find an example for you tomorrow</p>",
        "id": 222468565,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610473702
    },
    {
        "content": "<p>Here's a rough one</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"nt\">\"resourceType\"</span><span class=\"p\">:</span> <span class=\"s2\">\"AuditEvent\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"f1df2bacce8e4c4198e12a90f3a7197c\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"meta\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"versionId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"lastUpdated\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2020-12-18T14:14:01.6713288+11:00\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"extension\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://fhir.example-org.com.au/StructureDefinition/TimeTaken\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"valueDecimal\"</span><span class=\"p\">:</span> <span class=\"mf\">7.45</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://fhir.example-org.com.au/StructureDefinition/X_CorrelationId\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://terminology.hl7.org/CodeSystem/audit-event-type\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"rest\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"action\"</span><span class=\"p\">:</span> <span class=\"s2\">\"R\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"recorded\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2020-12-18T03:14:01.6539829+00:00\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"outcome\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"_outcome\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"extension\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://fhir.example-org.com.au/StructureDefinittion/httpstatus\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"valueInteger\"</span><span class=\"p\">:</span> <span class=\"mi\">200</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"agent\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"who\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"reference\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Organization/2bfe6cfc-38e5-4b84-a4d9-efaebabe110b\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"display\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Generic Medicines\"</span>\n      <span class=\"p\">},</span>\n      <span class=\"nt\">\"altId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"mvf_client_id\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Generic Medicines\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"requestor\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"network\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"address\"</span><span class=\"p\">:</span> <span class=\"s2\">\"::1\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">\"source\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"site\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Development\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"observer\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"display\"</span><span class=\"p\">:</span> <span class=\"s2\">\"HCX-LP-1303\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://terminology.hl7.org/CodeSystem/security-source-type\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"3\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"display\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Web Server\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">},</span>\n  <span class=\"nt\">\"entity\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"role\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://terminology.hl7.org/CodeSystem/object-role\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"24\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"display\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Query\"</span>\n      <span class=\"p\">},</span>\n      <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://localhost:2483/Patient?_id=3d03619fefa74dae93ce0d93c65b2803&amp;given=Jonathan&amp;family=Curt\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Search Patient - Total: 1   Entries: 1\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"what\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"reference\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Patient/3d03619fefa74dae93ce0d93c65b2803\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"display\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Curt, Jonathan Mr\"</span>\n      <span class=\"p\">},</span>\n      <span class=\"nt\">\"role\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://terminology.hl7.org/CodeSystem/object-role\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"display\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Patient\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>(yes I know it's not valid as has some missing values, but is in development build)<br>\nAnd happy to get feedback if I have some of these values wrong.<br>\nNote that we extract the patient ID from the query parameter, and put that into the entities so that the searching for that patient's content comes up in the audit searching by that patient ID - this is also done on other things like MedReq searching by Patient ID.</p>",
        "id": 222508915,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1610492741
    },
    {
        "content": "<p>so that looks like an audit of a GET, not a POST... and properly what you have in entity[0].name should really be in entity[0].query. </p>\n<p>I am noticing that even this is missing information like the mime-type negotiation...</p>",
        "id": 222516854,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610498566
    },
    {
        "content": "<p>do you have a FHIR server available that is configured to auto record AuditEvents for REST (and possibly transactions)?</p>",
        "id": 222520983,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610501759
    },
    {
        "content": "<p>GET</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n    &quot;resourceType&quot;: &quot;AuditEvent&quot;,\n    &quot;type&quot;: {\n        &quot;system&quot;: &quot;http://hl7.org/fhir/audit-event-type&quot;,\n        &quot;code&quot;: &quot;rest&quot;,\n        &quot;display&quot;: &quot;RESTful Operation&quot;\n    },\n    &quot;subtype&quot;: [\n        {\n            &quot;system&quot;: &quot;http://hl7.org/fhir/restful-interaction&quot;,\n            &quot;code&quot;: &quot;search-type&quot;\n        }\n    ],\n    &quot;action&quot;: &quot;R&quot;,\n    &quot;recorded&quot;: &quot;2021-01-13T12:21:12.303+01:00&quot;,\n    &quot;outcome&quot;: &quot;0&quot;,\n    &quot;outcomeDesc&quot;: &quot;Patient&quot;,\n    &quot;purposeOfEvent&quot;: [\n        {\n            &quot;coding&quot;: [\n                {\n                    &quot;system&quot;: &quot;http://ehealth.sundhed.dk/fhir/PurposeOfUse&quot;,\n                    &quot;code&quot;: &quot;INTERNAL_AUDIT_ONLY&quot;\n                }\n            ]\n        }\n    ],\n    &quot;agent&quot;: [\n        {\n            &quot;extension&quot;: [\n                {\n                    &quot;url&quot;: &quot;http://ehealth.sundhed.dk/fhir/StructureDefinition/ehealth-responsibleOrganization&quot;,\n                    &quot;valueReference&quot;: {\n                        &quot;reference&quot;: &quot;https://organization.fut.trifork.com/fhir/Organization/33405&quot;\n                    }\n                }\n            ],\n            &quot;userId&quot;: {\n                &quot;system&quot;: &quot;http://ehealth.sundhed.dk&quot;,\n                &quot;value&quot;: &quot;https://organization.fut.trifork.com/fhir/Practitioner/107950&quot;\n            },\n            &quot;requestor&quot;: true\n        }\n    ],\n    &quot;source&quot;: {\n        &quot;identifier&quot;: {\n            &quot;system&quot;: &quot;http://ehealth.sundhed.dk&quot;,\n            &quot;value&quot;: &quot;http://localhost:8080/fhir/&quot;\n        },\n        &quot;type&quot;: [\n            {\n                &quot;system&quot;: &quot;http://hl7.org/fhir/security-source-type&quot;,\n                &quot;code&quot;: &quot;4&quot;\n            }\n        ]\n    },\n    &quot;entity&quot;: [\n        {\n            &quot;identifier&quot;: {\n                &quot;value&quot;: &quot;f7ded3e5-6db7-42de-ba30-65cd8d0b4015&quot;\n            },\n            &quot;type&quot;: {\n                &quot;system&quot;: &quot;http://hl7.org/fhir/security-source-type&quot;,\n                &quot;code&quot;: &quot;4&quot;,\n                &quot;display&quot;: &quot;Application Server&quot;\n            },\n            &quot;role&quot;: {\n                &quot;system&quot;: &quot;http://hl7.org/fhir/object-role&quot;,\n                &quot;code&quot;: &quot;24&quot;,\n                &quot;display&quot;: &quot;Query&quot;\n            },\n            &quot;description&quot;: &quot;search entity&quot;,\n            &quot;query&quot;: &quot;eyJfaWQiOlsiMTExIl19&quot;\n        },\n        {\n            &quot;reference&quot;: {\n                &quot;reference&quot;: &quot;http://localhost:8080/fhir/Patient/111&quot;\n            },\n            &quot;role&quot;: {\n                &quot;system&quot;: &quot;http://hl7.org/fhir/object-role&quot;,\n                &quot;code&quot;: &quot;1&quot;\n            }\n        }\n    ]\n}\n</code></pre></div>",
        "id": 222566520,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610537247
    },
    {
        "content": "<p>POST</p>\n<div class=\"codehilite\"><pre><span></span><code>{\n    &quot;resourceType&quot;: &quot;AuditEvent&quot;,\n    &quot;type&quot;: {\n        &quot;system&quot;: &quot;http://hl7.org/fhir/audit-event-type&quot;,\n        &quot;code&quot;: &quot;rest&quot;,\n        &quot;display&quot;: &quot;RESTful Operation&quot;\n    },\n    &quot;subtype&quot;: [\n        {\n            &quot;system&quot;: &quot;http://hl7.org/fhir/restful-interaction&quot;,\n            &quot;code&quot;: &quot;search-type&quot;\n        }\n    ],\n    &quot;action&quot;: &quot;R&quot;,\n    &quot;recorded&quot;: &quot;2021-01-13T12:22:02.980+01:00&quot;,\n    &quot;outcome&quot;: &quot;0&quot;,\n    &quot;outcomeDesc&quot;: &quot;Patient&quot;,\n    &quot;purposeOfEvent&quot;: [\n        {\n            &quot;coding&quot;: [\n                {\n                    &quot;system&quot;: &quot;http://ehealth.sundhed.dk/fhir/PurposeOfUse&quot;,\n                    &quot;code&quot;: &quot;INTERNAL_AUDIT_ONLY&quot;\n                }\n            ]\n        }\n    ],\n    &quot;agent&quot;: [\n        {\n            &quot;extension&quot;: [\n                {\n                    &quot;url&quot;: &quot;http://ehealth.sundhed.dk/fhir/StructureDefinition/ehealth-responsibleOrganization&quot;,\n                    &quot;valueReference&quot;: {\n                        &quot;reference&quot;: &quot;https://organization.fut.trifork.com/fhir/Organization/33405&quot;\n                    }\n                }\n            ],\n            &quot;userId&quot;: {\n                &quot;system&quot;: &quot;http://ehealth.sundhed.dk&quot;,\n                &quot;value&quot;: &quot;https://organization.fut.trifork.com/fhir/Practitioner/107950&quot;\n            },\n            &quot;requestor&quot;: true\n        }\n    ],\n    &quot;source&quot;: {\n        &quot;identifier&quot;: {\n            &quot;system&quot;: &quot;http://ehealth.sundhed.dk&quot;,\n            &quot;value&quot;: &quot;http://localhost:8080/fhir/&quot;\n        },\n        &quot;type&quot;: [\n            {\n                &quot;system&quot;: &quot;http://hl7.org/fhir/security-source-type&quot;,\n                &quot;code&quot;: &quot;4&quot;\n            }\n        ]\n    },\n    &quot;entity&quot;: [\n        {\n            &quot;identifier&quot;: {\n                &quot;value&quot;: &quot;b4b77e5f-9658-4fa4-8a1c-530a5f2ce0e7&quot;\n            },\n            &quot;type&quot;: {\n                &quot;system&quot;: &quot;http://hl7.org/fhir/security-source-type&quot;,\n                &quot;code&quot;: &quot;4&quot;,\n                &quot;display&quot;: &quot;Application Server&quot;\n            },\n            &quot;role&quot;: {\n                &quot;system&quot;: &quot;http://hl7.org/fhir/object-role&quot;,\n                &quot;code&quot;: &quot;24&quot;,\n                &quot;display&quot;: &quot;Query&quot;\n            },\n            &quot;description&quot;: &quot;search entity&quot;,\n            &quot;query&quot;: &quot;eyJfaWQiOlsiMTExIl19&quot;\n        },\n        {\n            &quot;reference&quot;: {\n                &quot;reference&quot;: &quot;http://localhost:8080/fhir/Patient/111&quot;\n            },\n            &quot;role&quot;: {\n                &quot;system&quot;: &quot;http://hl7.org/fhir/object-role&quot;,\n                &quot;code&quot;: &quot;1&quot;\n            }\n        }\n    ]\n}\n</code></pre></div>",
        "id": 222566547,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610537266
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191427\">@Jens Villadsen</span> so it appears you convert both get and post into some other form. What is that other form? I simply don't recognize it</p>\n<div class=\"codehilite\"><pre><span></span><code>{&quot;_id&quot;:[&quot;111&quot;]}\n</code></pre></div>",
        "id": 222573570,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610541845
    },
    {
        "content": "<p>this method has the drawback that the audit log will not contain the query as it was received. It will have been cleansed. Thus there is not data there to be used to determine if an attack probe is being done.</p>",
        "id": 222573643,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610541898
    },
    {
        "content": "<p>the query was \"_id=111\"</p>",
        "id": 222574386,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610542397
    },
    {
        "content": "<p>you can say it has been 'cleansed' - by HAPI that is ... to the canonical internal representation as conceived by HAPI</p>",
        "id": 222574546,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610542492
    },
    {
        "content": "<p>They are syntactically identical</p>",
        "id": 222574599,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610542529
    },
    {
        "content": "<p>We have a full request/response log next to the auditlog</p>",
        "id": 222574708,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610542589
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span></p>",
        "id": 222575653,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610543152
    },
    {
        "content": "<p>so the intermediate form I am looking for is a HAPI invention. unfortunate... and as I said, for security or privacy purposes this clensed form is not as good.... I do wonder if this brings up an opportunity to use the intermediate form for positive purposes (find me the audits of queries for <em>this</em>). while dual recording the exact inbound query also for negative purposes.</p>",
        "id": 222575993,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610543307
    },
    {
        "content": "<p>note - all auditevents are linked to the actual request in the request/response log as the entity.identifier in the auditevent is a b3 zipkin ... meaning that we can always find the original request will all headers and URL's and stuff</p>",
        "id": 222576330,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610543486
    },
    {
        "content": "<p>The AuditEvent will always be a condensed form of the the original request as I see it</p>",
        "id": 222576374,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610543514
    },
    {
        "content": "<p>but that is not \"standard\"... I am trying to come up with a \"standard\" that everyone can follow ... hence my questions</p>",
        "id": 222576492,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610543570
    },
    {
        "content": "<p>I am not looking to implement, I am looking to fix or provide guidance in AuditEvent</p>",
        "id": 222576543,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610543597
    },
    {
        "content": "<p>ok ... then the AuditEvent should reflect the request in its entirety</p>",
        "id": 222576600,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610543635
    },
    {
        "content": "<p>meaning: ALL headers, ALL of the Body</p>",
        "id": 222576666,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610543655
    },
    {
        "content": "<p>IE - I don't see a partiular field for HTTP header fields in AuditEvent</p>",
        "id": 222577323,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610544005
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span></p>",
        "id": 222579437,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610545028
    },
    {
        "content": "<p>yes, that is the intentioni</p>",
        "id": 222581445,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610545895
    },
    {
        "content": "<p>that is why I was asking for how others have solved this.</p>",
        "id": 222581503,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610545921
    },
    {
        "content": "<p>This is why the AuditEvent.entity.query is a base64, so that it captures exactly what came in. Thus for any kind of query technology there needs to be a way defined for how to be complete while also not sanitizing the data. With DICOM this was easy, with SQL this was easy, for XDS this was easy... for http GET we thought it was easy until it was pointed out the http headers are important, and for http POST we could grab the http header/body but miss the URL.</p>",
        "id": 222582065,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610546157
    },
    {
        "content": "<p>HTTP headers are also important in XDS</p>",
        "id": 222582482,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610546315
    },
    {
        "content": "<p>in what way are you thinking they are important?</p>",
        "id": 222582578,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610546353
    },
    {
        "content": "<p>they may contain security tokens</p>",
        "id": 222582594,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610546367
    },
    {
        "content": "<p>or other important context</p>",
        "id": 222582632,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610546383
    },
    {
        "content": "<p>security is not a different layer, handled by a different audit event</p>",
        "id": 222582649,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610546389
    },
    {
        "content": "<p>sure ... but the header may set the context of the xds invocation</p>",
        "id": 222582758,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610546425
    },
    {
        "content": "<p>right?</p>",
        "id": 222582764,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610546429
    },
    {
        "content": "<p>in FHIR http, I don't mind keeping the security headers or removing them... not the most important problem right now</p>",
        "id": 222582781,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610546438
    },
    {
        "content": "<p>it would not recommend  removing headers in an audit trail</p>",
        "id": 222582994,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610546520
    },
    {
        "content": "<p>especially in a RESTful setup as FHIR</p>",
        "id": 222583074,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610546537
    },
    {
        "content": "<p>right. I agree</p>",
        "id": 222583092,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610546546
    },
    {
        "content": "<p>I am not trying to remove them</p>",
        "id": 222583112,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610546554
    },
    {
        "content": "<p>I am trying to get the POST query fully recorded</p>",
        "id": 222583151,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610546573
    },
    {
        "content": "<p>you don't even have the GET fully recorded</p>",
        "id": 222583207,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610546597
    },
    {
        "content": "<p>if along the way I discover the GET query needs some more guidance, so be it</p>",
        "id": 222583214,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610546598
    },
    {
        "content": "<p>then help me... I know the points you are making.</p>",
        "id": 222583244,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610546614
    },
    {
        "content": "<p>and your intention is to build a model that fully encapsulates a HTTP request</p>",
        "id": 222583390,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610546667
    },
    {
        "content": "<p>?</p>",
        "id": 222583403,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610546673
    },
    {
        "content": "<p>I asked for examples.. you gave them to me... I pointed out how they are not sufficient... now onto the next step</p>",
        "id": 222583415,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610546678
    },
    {
        "content": "<p>and the next step would be ... ? to fully encapsulate HTTP requests (at least for RESTful FHIR)?</p>",
        "id": 222583553,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610546759
    },
    {
        "content": "<p>is that your goal? to design such a model?</p>",
        "id": 222583610,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610546772
    },
    {
        "content": "<p>the specific HTTP method is irrelevant ... you would have to capture all of them anyway</p>",
        "id": 222583731,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610546847
    },
    {
        "content": "<p>any by the way ... HTTP GET can actually contain a body ... just an FYI</p>",
        "id": 222583759,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610546869
    },
    {
        "content": "<p>and it is used from time to time ... seldom however</p>",
        "id": 222583840,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610546897
    },
    {
        "content": "<p>just to stir things up</p>",
        "id": 222584006,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610546986
    },
    {
        "content": "<p>yes that sounds right</p>",
        "id": 222584232,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610547086
    },
    {
        "content": "<p>well ... to simplify matters ... for calls made over HTTP you would need an array of fields for for HTTP headers, one for the method and a field for the body</p>",
        "id": 222585023,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610547425
    },
    {
        "content": "<p>regardless of the HTTP method</p>",
        "id": 222585045,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610547435
    },
    {
        "content": "<p>sounds good... does this exist, or will we be defining this on the AuditEvent page?</p>",
        "id": 222585608,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610547657
    },
    {
        "content": "<p>The word 'header' does not exist on <a href=\"https://www.hl7.org/fhir/auditevent.html\">https://www.hl7.org/fhir/auditevent.html</a> so my guess would be 'no'.</p>",
        "id": 222585731,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610547718
    },
    {
        "content": "<p>I don't mind defining it on the AuditEvent page, but would like it better if it was already specified somewhere.. like in an IETF RFC...</p>",
        "id": 222585732,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610547719
    },
    {
        "content": "<p>arh...</p>",
        "id": 222585784,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610547729
    },
    {
        "content": "<p>what do web server audit logs natively look like?</p>",
        "id": 222585829,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610547748
    },
    {
        "content": "<p>there's no such thing</p>",
        "id": 222585887,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610547775
    },
    {
        "content": "<p>in general terms</p>",
        "id": 222585893,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610547778
    },
    {
        "content": "<p>surely doesn't hurt to ask</p>",
        "id": 222585910,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610547790
    },
    {
        "content": "<p>usually like <a href=\"https://httpd.apache.org/docs/2.4/logs.html#accesslog\">https://httpd.apache.org/docs/2.4/logs.html#accesslog</a></p>",
        "id": 222586015,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610547842
    },
    {
        "content": "<p>well ... thats access logs ...</p>",
        "id": 222586062,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610547852
    },
    {
        "content": "<p>that not the same thing as auditlogs</p>",
        "id": 222586083,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610547863
    },
    {
        "content": "<p><a href=\"https://tools.ietf.org/html/rfc2616\">https://tools.ietf.org/html/rfc2616</a> specifies how HTTP requests look like</p>",
        "id": 222586357,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610547970
    },
    {
        "content": "<p>and what is mandatory</p>",
        "id": 222586380,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610547979
    },
    {
        "content": "<p>so we have the other stuff... we just need the \"The request line from...\"</p>",
        "id": 222586475,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610548025
    },
    {
        "content": "<p>we just need %r</p>",
        "id": 222586772,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610548140
    },
    {
        "content": "<p>The <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html</a></p>",
        "id": 222586979,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610548215
    },
    {
        "content": "<p>so the method and the request uri</p>",
        "id": 222587187,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610548282
    },
    {
        "content": "<p>that would do it... right?</p>",
        "id": 222587205,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610548288
    },
    {
        "content": "<p>seems correct ... where would you place the headers?</p>",
        "id": 222587251,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610548303
    },
    {
        "content": "<p>or are you 'just' collecting stuff that needs to be in the model?</p>",
        "id": 222587379,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610548336
    },
    {
        "content": "<p>unfortunately... the code that would be building the AuditEvent likely only has sanitized data (like your observing)... so it might be hard to get this...</p>",
        "id": 222587394,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610548340
    },
    {
        "content": "<p>nop ... and FHIR server building auditevents should have access to the actual request ...</p>",
        "id": 222587525,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610548382
    },
    {
        "content": "<p>ah. okay.</p>",
        "id": 222587575,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610548399
    },
    {
        "content": "<p>well ... you are right .... it can probably be hard to get it under some circumstances</p>",
        "id": 222587641,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610548427
    },
    {
        "content": "<p>so... this would solve the core problem. satisfy the need for both GET and POST query, grabing stuff that we don't grab today...</p>",
        "id": 222587644,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610548428
    },
    {
        "content": "<p>and all the other Methods</p>",
        "id": 222587715,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610548445
    },
    {
        "content": "<p>I just wonder if we should have a different way to record the sanitized parameters.</p>",
        "id": 222587722,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610548448
    },
    {
        "content": "<p>PATCH, DELETE</p>",
        "id": 222587726,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610548449
    },
    {
        "content": "<p>this is just for Query type transactions... but the pattern might be useful elsewhere.. agreed</p>",
        "id": 222587783,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610548478
    },
    {
        "content": "<p>well ... given that POST and GET searches are semantically equivivalent ... it shouldn't be necessary</p>",
        "id": 222587807,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610548489
    },
    {
        "content": "<p>You need to support all HTTP methods for the AuditEvent</p>",
        "id": 222587862,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610548508
    },
    {
        "content": "<p>at least the one's that are supported for FHIR</p>",
        "id": 222587943,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610548537
    },
    {
        "content": "<p>or specified for FHIR</p>",
        "id": 222587958,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610548543
    },
    {
        "content": "<p>will this come up on the upcoming WGM?</p>",
        "id": 222588113,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610548579
    },
    {
        "content": "<p>I think you are addressing another topic.. that of should there be a pattern in AuditEvent to record all http requests regardless of what they are.</p>",
        "id": 222588128,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610548584
    },
    {
        "content": "<p>to that, I don't disagree, but to that we expected that was already handled by the infrastructure that is not FHIR specific</p>",
        "id": 222588202,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610548609
    },
    {
        "content": "<p>well ... we just agreed that the current model does not contain headers</p>",
        "id": 222588367,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610548668
    },
    {
        "content": "<p>and for Query we do expect that if you can identify the patient(s) that you do... so we are not replacing the web server log, we are doing a log at the FHIR  infrastructure level</p>",
        "id": 222588462,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610548688
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191427\">Jens Villadsen</span> <a href=\"#narrow/stream/179247-Security-and.20Privacy/topic/AuditEvent.20pattern.20for.20POST.20search/near/222588367\">said</a>:</p>\n<blockquote>\n<p>well ... we just agreed that the current model does not contain headers</p>\n</blockquote>\n<p>yes, and you just helped solve that one</p>",
        "id": 222588503,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610548707
    },
    {
        "content": "<p>sure</p>",
        "id": 222588509,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610548709
    },
    {
        "content": "<p>I just dont understand how the auditevent model can be seen as complete for the other HTTP methods when HTTP headers currently are not part of the model</p>",
        "id": 222588787,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610548820
    },
    {
        "content": "<p>but  i agree - that is not part of the topic</p>",
        "id": 222588826,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610548845
    },
    {
        "content": "<p>but if you are working on fixing the model i general ... now you know more of its shortcommings ;)</p>",
        "id": 222588922,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610548893
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191427\">Jens Villadsen</span> <a href=\"#narrow/stream/179247-Security-and.20Privacy/topic/AuditEvent.20pattern.20for.20POST.20search/near/222586979\">said</a>:</p>\n<blockquote>\n<p>The <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec5.html</a></p>\n</blockquote>\n<p>so the recommendation is that the AuditEvent.entity.query is base64 (later we can argue the base64 point) encoded of this </p>\n<div class=\"codehilite\"><pre><span></span><code>Request       = Request-Line              ; Section 5.1\n                        *(( general-header        ; Section 4.5\n                         | request-header         ; Section 5.3\n                         | entity-header ) CRLF)  ; Section 7.1\n                        CRLF\n                        [ message-body ]          ; Section 4.3\n</code></pre></div>\n<p>does this work for <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span>  <span class=\"user-mention\" data-user-id=\"191319\">@James Agnew</span> and other FHIR server platforms ?</p>",
        "id": 222589219,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610549012
    },
    {
        "content": "<ul>\n<li>an obvious note to that is that the query can be in either the <code>message-body</code> or the <code>Request-Line</code></li>\n</ul>",
        "id": 222589790,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610549238
    },
    {
        "content": "<p>I read this to say that the \"Request\" includes both the Request-Line and the message-body... so we are covered.. right?</p>",
        "id": 222590276,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610549421
    },
    {
        "content": "<p>would be good to see two examples (GET vs POST) of a simple FHIR query</p>",
        "id": 222590342,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610549448
    },
    {
        "content": "<p>The <code>Request</code> is the full monty</p>",
        "id": 222590725,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610549573
    },
    {
        "content": "<p>likely more than we want... as you pointed out it will include security headers... but better to get it than invent some format that will be harder to address.</p>",
        "id": 222590988,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610549676
    },
    {
        "content": "<p>I have not read all the messages in this thread but wanted to point out <a href=\"http://www.softwareishard.com/blog/har-12-spec/#request\">http://www.softwareishard.com/blog/har-12-spec/#request</a> which I don't think was ever formally standardized despite being drafted in w3c, but it is widely used in software tools for saving durable records of http requests and responses (for example, in chrome developer tools you can save any requests made from a web page in this format by right clicking the request in the network tab and choosing save as)</p>",
        "id": 222593709,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1610550558
    },
    {
        "content": "<p>seems like an ok option</p>",
        "id": 222598228,
        "sender_full_name": "Jens Villadsen",
        "timestamp": 1610552048
    },
    {
        "content": "<p>that seems like an alternative we should consider. It is a bit more readable to a JSON friendly person. But it seems to contain the same stuff, right? So the difference is encoding, and one is a standard vs one is a a quasi-standard. I don't see that as a bad thing, but just want to be clear.</p>",
        "id": 222610048,
        "sender_full_name": "John Moehrke",
        "timestamp": 1610556571
    },
    {
        "content": "<p>I think \"quasi-standard\" sounds about right for HAR; <a href=\"https://en.wikipedia.org/wiki/HAR_(file_format)\">https://en.wikipedia.org/wiki/HAR_(file_format)</a> has a bit more background.</p>",
        "id": 222611049,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1610556972
    }
]