[
    {
        "content": "<p>Where we have SMART-on-FHIR to support apps speaking to a FHIR server, we do not have a clear security model for when organizations have backend communications. Presume the authorization to access is legitimate, and at the organization level. Such a case might be a EHR communicating with a Health Information Exchange under pre-negotiated trust relationship (for example a DURSA, and purposeOfUse of Treatment). Clearly HTTPS can be used to protect the communications channel confidentiality, integrity, and server authentication. But how does the server know that the requesting organization is legitimate and authenticated?</p>",
        "id": 153950152,
        "sender_full_name": "John Moehrke",
        "timestamp": 1522763525
    },
    {
        "content": "<p>Please provide links or description of possible models:</p>",
        "id": 153950153,
        "sender_full_name": "John Moehrke",
        "timestamp": 1522763545
    },
    {
        "content": "<p>Mutual-Authenticated-TLS -- This is commonly used in SOAP, and can be used in REST; however common REST api toolkits tend to terminate the TLS at the edge, thus the backend server service has no identity to associate with the request. There are configurations, as documented in F5 manual, where the client certificate ID can be stuffed into the http headers in the infrastructure. This clunky and has risks.  The benefit is that certificate management is relatively easy for these kind of situations, and revocation mechanism is sufficient.  <a href=\"https://healthcaresecprivacy.blogspot.com/2016/11/is-iua-oauth-useful-in-service-to.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2016/11/is-iua-oauth-useful-in-service-to.html\">https://healthcaresecprivacy.blogspot.com/2016/11/is-iua-oauth-useful-in-service-to.html</a></p>",
        "id": 153950154,
        "sender_full_name": "John Moehrke",
        "timestamp": 1522763824
    },
    {
        "content": "<p>signed JWT Bearer token for the client service, HTTPS for everything else. This would operate on the server side just like any SMART-on-FHIR. Bootstrapping the client is hard. There are profiles in the W3C/OASIS that show how to do this.   <a href=\"https://healthcaresecprivacy.blogspot.com/2016/11/is-iua-oauth-useful-in-service-to.html\" target=\"_blank\" title=\"https://healthcaresecprivacy.blogspot.com/2016/11/is-iua-oauth-useful-in-service-to.html\">https://healthcaresecprivacy.blogspot.com/2016/11/is-iua-oauth-useful-in-service-to.html</a></p>",
        "id": 153950155,
        "sender_full_name": "John Moehrke",
        "timestamp": 1522763949
    },
    {
        "content": "<p>so argonaut is testing Smart back end services this year</p>",
        "id": 153950248,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522779176
    },
    {
        "content": "<p><a href=\"http://docs.smarthealthit.org/authorization/backend-services/\" target=\"_blank\" title=\"http://docs.smarthealthit.org/authorization/backend-services/\">http://docs.smarthealthit.org/authorization/backend-services/</a></p>",
        "id": 153950249,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522779185
    },
    {
        "content": "<p>several of us have iumplementations of that</p>",
        "id": 153950250,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522779193
    },
    {
        "content": "<p>Interesting blog post on mutual TLS. Interestingly, AWS API gateway does not support client certificates for authenticating HTTP inbound, but ONLY supports client certificates as a way to authenticate to a backend service. Wild. </p>\n<p>Anyways, the SMART backend services proposal follows what others such as Google have done for their APIs (see gRPC for example <a href=\"https://grpc.io/docs/guides/auth.html\" target=\"_blank\" title=\"https://grpc.io/docs/guides/auth.html\">https://grpc.io/docs/guides/auth.html</a>). </p>\n<p>The biggest flaw in JWT is the flexibility of the <code>alg</code> property. Check out the NVD database and most of them boil down to people doing the validation wrong. <a href=\"https://nvd.nist.gov/vuln/search/results?form_type=Basic&amp;results_type=overview&amp;query=JWT&amp;search_type=all\" target=\"_blank\" title=\"https://nvd.nist.gov/vuln/search/results?form_type=Basic&amp;results_type=overview&amp;query=JWT&amp;search_type=all\">https://nvd.nist.gov/vuln/search/results?form_type=Basic&amp;results_type=overview&amp;query=JWT&amp;search_type=all</a></p>\n<p>SMART is doing a good thing by insisting on asymmetric keys (rs256) vs symmetric keys (hs256). If you visit <a href=\"http://jwt.io\" target=\"_blank\" title=\"http://jwt.io\">jwt.io</a> the default is always going to be hs256 because it's easier to illustrate. It's easier to protect the secret with rs256, and by standardizing on one method, servers won't need to build two separate secret infrastructures - one for hs256 secrets and one for rs256 public keys.</p>",
        "id": 153950364,
        "sender_full_name": "Nick Hatt",
        "timestamp": 1522795380
    },
    {
        "content": "<p><a href=\"https://chat.fhir.org/#narrow/stream/cds-hooks-github/subject/docs.20.2F.20Issue.20.23187.20JWT.20alg.20should.20be.20standardized\" target=\"_blank\" title=\"https://chat.fhir.org/#narrow/stream/cds-hooks-github/subject/docs.20.2F.20Issue.20.23187.20JWT.20alg.20should.20be.20standardized\">https://chat.fhir.org/#narrow/stream/cds-hooks-github/subject/docs.20.2F.20Issue.20.23187.20JWT.20alg.20should.20be.20standardized</a> - relevant to algorithm</p>",
        "id": 153950365,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522795561
    },
    {
        "content": "<p>The IETF agrees on the use of asymmetric keys. We should all be following IETF RFC6819 - OAuth 2.0 Security.  See 5.1.4.1.5.  Use of Asymmetric Cryptography... We should not be re-learning and re-inventing these best-practices that the larger community provide to us freely and openly.  <a href=\"https://tools.ietf.org/html/rfc6819\" target=\"_blank\" title=\"https://tools.ietf.org/html/rfc6819\">https://tools.ietf.org/html/rfc6819</a></p>",
        "id": 153950593,
        "sender_full_name": "John Moehrke",
        "timestamp": 1522847853
    },
    {
        "content": "<p>Note there is a track at the upcoming FHIR Connectathon that has a proposal for doing backend services security. Please review and comment to help drive us toward one or more solutions  <a href=\"http://wiki.hl7.org/index.php?title=201805_Direct/Certificates_Track\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=201805_Direct/Certificates_Track\">http://wiki.hl7.org/index.php?title=201805_Direct/Certificates_Track</a></p>",
        "id": 153952956,
        "sender_full_name": "John Moehrke",
        "timestamp": 1524064346
    }
]