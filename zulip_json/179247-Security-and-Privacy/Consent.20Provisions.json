[
    {
        "content": "<p>As part of the implementation of consent in the ONC LEAP project, we have identified some issues with the current provision structure. I wanted to share this here for some feedback before I file a CR.<br>\n<a href=\"https://sdhealthconnect.github.io/leap/blog/2020/05/13/provisions.html\">https://sdhealthconnect.github.io/leap/blog/2020/05/13/provisions.html</a></p>",
        "id": 200034080,
        "sender_full_name": "Mohammad Jafari",
        "timestamp": 1591551397
    },
    {
        "content": "<p>I don't know if you want to apply this to Consent (as in patient-given consent) or if this applies to Permission (if that stands).</p>",
        "id": 200041429,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1591562657
    },
    {
        "content": "<p>The description seems to be for \"permission-like\" provisions, whether it is patient-given or policy-driven</p>",
        "id": 200041442,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1591562680
    },
    {
        "content": "<p>Our focus is on Consent for now. I think when/if the Permission resource is released and more widely used, the Consent resource may have to go through more changes to offload the \"rules\" parts to a Permission resource but right now we're focusing on Consent as it stands.</p>",
        "id": 200043291,
        "sender_full_name": "Mohammad Jafari",
        "timestamp": 1591565281
    },
    {
        "content": "<p>ok I just wanted to confirm. I think the approach makes sense - adding a provision about if rules are conflicting.</p>",
        "id": 200043871,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1591566016
    },
    {
        "content": "<p>About the implementation approach - a set of codes combning {what} {happens} - e.g. {permit} {overrides} - is that robust enough? what about other things like {court-ordered} {overrides}? Or more possible combinations, like \"this overrides all permits unless patient is dead\". ?<br>\nOr you don't want to cover that?</p>",
        "id": 200043873,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1591566031
    },
    {
        "content": "<p>I think this is purely at the rules-level. When you evaluate a request context against a collection of rules, the outcome for each rule is either <code>permit</code>, <code>deny</code>, or <code>notApplicable</code>(i.e. the request didn't match the rule and therefore the rule does not say anything about the request). Now, if more than one rule match the request and they have conflicting decisions, i.e., one says <code>deny</code> and another says <code>permit</code>, we need a conflict resolution strategy to reconcile these decisions and make a final call. The common conflict resolutions in the access control policy and rights languages are the ones I have listed. Other conflict resolution strategies can of course be considered as long as the consent processor can actually have a well-defined way of applying them.</p>",
        "id": 200044343,
        "sender_full_name": "Mohammad Jafari",
        "timestamp": 1591566792
    },
    {
        "content": "<p>might we experiment with your new model in the Permission resource first?</p>",
        "id": 200093396,
        "sender_full_name": "John Moehrke",
        "timestamp": 1591621225
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191920\">@Mohammad Jafari</span> can you correct this paragraph in your article so that I can understand what you mean to be saying? I think you have too many \"except\" in the sentence and can't figure out which is not intended:</p>\n<blockquote>\n<p>Figure 2 shows a (hypothetical) example for this model. These provisions articulate that during the time period from 01/01/2020 to 31/12/2022, all access except is permitted except:</p>\n</blockquote>",
        "id": 200107710,
        "sender_full_name": "John Moehrke",
        "timestamp": 1591627682
    },
    {
        "content": "<p>I am not following why Figure 2 and 3 have the effect on Org1 and HLEGAL you assert.</p>",
        "id": 200109028,
        "sender_full_name": "John Moehrke",
        "timestamp": 1591628178
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> I fixed that typo.</p>",
        "id": 200109607,
        "sender_full_name": "Mohammad Jafari",
        "timestamp": 1591628382
    },
    {
        "content": "<p>firstMatchOverrides presumes ordered lists. I don't think that FHIR guarantees ordered lists</p>",
        "id": 200109771,
        "sender_full_name": "John Moehrke",
        "timestamp": 1591628428
    },
    {
        "content": "<p>note the reason I had permit/deny in the original model was following  the override model. Just never got the chance to get the override concept into the model before nesting took over.</p>",
        "id": 200109999,
        "sender_full_name": "John Moehrke",
        "timestamp": 1591628513
    },
    {
        "content": "<p>I agree that <code>firstMatchOverrides</code> (and any other order-based logic) is not a good idea.</p>",
        "id": 200110236,
        "sender_full_name": "Mohammad Jafari",
        "timestamp": 1591628588
    },
    {
        "content": "<blockquote>\n<blockquote>\n<p>I am not following why Figure 2 and 3 have the effect on Org1 and HLEGAL you assert.</p>\n</blockquote>\n</blockquote>\n<p>In Figure 2, the default is permit and a request by Org1 for the purpose of HLEGAL will not match any of the second-tier provisions therefore goes by the default in the root which is permit.<br>\nIn Figure 3, a request by Org1 for the purpose of HLEGAL matches the second-tier provision which denies anything by Org1 unless for the ones matching the third-tier provisions (none of which match the HLEGAL purpose).</p>",
        "id": 200111205,
        "sender_full_name": "Mohammad Jafari",
        "timestamp": 1591628945
    },
    {
        "content": "<p>right. so Figure 2 is  likely poorly designed policy fragment... which we can't stop bad policy writing. But I get your point that the current model is potentially easier to do something stupid</p>",
        "id": 200112044,
        "sender_full_name": "John Moehrke",
        "timestamp": 1591629281
    },
    {
        "content": "<p>The initial use-cases were simple  <a href=\"http://build.fhir.org/consent.html#model\">http://build.fhir.org/consent.html#model</a></p>",
        "id": 200112131,
        "sender_full_name": "John Moehrke",
        "timestamp": 1591629324
    },
    {
        "content": "<p>note that repetitions at the element level (more than one .provision.class means that one must match ALL the values given). although this is not well stated on current Consent page. An OR is achieved with multiple .provision elements.  So if one wants class of account, claim, OR claimResponse; one would need three .provision repetitions; which enables one to define a rule on data that has a class of account, claim, AND claimResponse.  How would your proposal support AND and OR mechanics like this?</p>",
        "id": 200117282,
        "sender_full_name": "John Moehrke",
        "timestamp": 1591631323
    },
    {
        "content": "<p>I have finally filed a CR for this: <a href=\"https://jira.hl7.org/browse/FHIR-31412\">https://jira.hl7.org/browse/FHIR-31412</a></p>",
        "id": 231862830,
        "sender_full_name": "Mohammad Jafari",
        "timestamp": 1616700650
    }
]