[
    {
        "content": "<p>This may be more of a profiling question than about the IPS in particular, but I'm trying to understand the value[x] profiling for the lab results profile (<a href=\"http://hl7.org/fhir/uv/ips/StructureDefinition-Observation-results-laboratory-uv-ips.html\">http://hl7.org/fhir/uv/ips/StructureDefinition-Observation-results-laboratory-uv-ips.html</a>). Elements valueBoolean, valueInteger, and valueSampled are not given slices and they don't look to be contrained out. On the other hand, valueTime, valueDateTime, and valuePeriod are listed, but don't appear to have any constraints on them.</p>",
        "id": 237436006,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1620185863
    },
    {
        "content": "<p>Another thing I found -- ObservationResultsPathologyUvIps (<a href=\"http://hl7.org/fhir/uv/ips/StructureDefinition-Observation-results-pathology-uv-ips.html\">http://hl7.org/fhir/uv/ips/StructureDefinition-Observation-results-pathology-uv-ips.html</a>) has some oddities around the specimen element. The base Observation specimen datatype is Reference(Specimen). On the differential and snapshot views, it appears the data type is SpecimenUvIps; on the detail view the datatype is CodeableConcept(SpecimenUvIps). Neither SpecimenUvIps nor CodeableConcept should be possible profilings of Reference.</p>",
        "id": 237437685,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1620187579
    },
    {
        "content": "<p>I see that SpecimenUvIps.fastingStatusCodeableConcept also has oddities on the data type. It's showing as CodeableConcept(CodeableConceptIPS). Again, I don't think that should be possible.</p>",
        "id": 237710826,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1620327316
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span>  It's interesting (and a bit funny) that you are the first person that has mentioned this issue for Observation.specimen in the IPS profiles for laboratory and pathology results.  You picked up on that 2 days ago, and that's exactly the same time that I first noticed it and I fixed it in our CI build yesterday.  Basically, we were inadvertently treating the Specimen-uv-ips profile as if it were a datatype (as seen <a href=\"https://github.com/HL7/fhir-ips/blob/d2ef13f4638eceb6b2326a4c100559b5ae211e8d/input/profiles/Observation-results-laboratory-uv-ips.structuredefinition.xml\">here</a> - in the published IPS STU 1 it was even worse, where it was declared as a CodeableConcept with a profile of Specimen-uv-ips, as seen <a href=\"https://github.com/HL7/fhir-ips/blob/753a303518ffe0a7450b5c1f2ffcdaf996c909de/input/profiles/Observation-results-laboratory-uv-ips.structuredefinition.xml\">here</a>).  As you say, I'm pretty sure that isn't supposed to be possible!  And the validator has never complained about any of this at all, so it was completely overlooked (until both of us discovered it apparently at the same time).  This seems like something to fix and prevent in the validator.  I was going to call that to <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>'s attention, so I will do that now.</p>",
        "id": 237743112,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1620341896
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191380\">@Elliot Silver</span> I'm also looking at the the fastingStatusCodeableConcept issue that you noted, as the rendering there is odd.</p>",
        "id": 237743226,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1620341975
    },
    {
        "content": "<p>Thanks. Between those issues I was wondering if there was just an issue with the publisher when the IG was generated.</p>",
        "id": 237743387,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1620342043
    },
    {
        "content": "<p>I think it would be an error now</p>",
        "id": 238205388,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1620678007
    },
    {
        "content": "<p>As of 1.1.68 (and earlier) I haven't seen an error message from it (unless it's somehow obscure enough that I didn't notice it, which seems rather unlikely).</p>",
        "id": 238211778,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1620680660
    },
    {
        "content": "<p>the current build is not like that</p>",
        "id": 238214470,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1620681783
    },
    {
        "content": "<p>No, it isn't.  I just commited the fix for it (the second iteration) on May 5th (after 1.1.68 was released).  The first (partial attempt) at a fix was committed back on June 10, 2020.  I haven't seen any error messages for it, at least since the first fix attempt almost a year ago.</p>",
        "id": 238214954,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1620682033
    }
]