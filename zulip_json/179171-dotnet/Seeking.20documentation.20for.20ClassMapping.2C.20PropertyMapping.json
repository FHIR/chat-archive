[
    {
        "content": "<p>I'm looking for some documentation describing the intent and proper use the ClassMapping, PropertyMapping classes.  Can anyone point me in the right direction?</p>",
        "id": 178501201,
        "sender_full_name": "Kirt Noel",
        "timestamp": 1571424908
    },
    {
        "content": "<p>Those are some usually internal classes, and as such haven't been documented.<br>\nHowever some of us have been using them too.<br>\nWhat do you want to do with them?<br>\n(and they are only applicable to the  erosion specific pocos)</p>",
        "id": 178512365,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1571434459
    },
    {
        "content": "<p>If you're wanting to do serialization and parsing, you don't need to directly interact with them.</p>",
        "id": 178512391,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1571434497
    },
    {
        "content": "<p>Hello Brian,</p>\n<p>I'm currently using the ISourceNode interface to crystallize FHIR resources from local POCOs.</p>\n<p>However, I was wondering whether the ClassMapping/PropertyMapping classes could be suited for mapping properties from an arbitrary class (or interface) to a corresponding FHIR resource.  The notion of a PropertyMap struck me as a potential avenue map POCOs to FHIR resources in a declarative manner.</p>\n<p>Thanks,<br>\nKirt</p>",
        "id": 178519570,
        "sender_full_name": "Kirt Noel",
        "timestamp": 1571443245
    },
    {
        "content": "<p>That's been considered, and could be possible, but noone has actually done that to date I know of.<br>\nAnd the new serialization classes might be a better way of doing it.<br>\nI personally haven't tried that code out myself though.</p>",
        "id": 178526889,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1571456401
    }
]