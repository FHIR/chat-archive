[
    {
        "content": "<p>Hello, I am looking to call a FHIR server that has a custom operation and the url looks something like this: POST [base]/Composition/$custom-operation-name</p>\n<p>I am using the STU3 client and can't seem to find any where to tell the client to call this custom operation off the Composition resource.</p>\n<p>Can anyone point me in the right direction?</p>\n<p>Thanks,<br>\nDavid</p>",
        "id": 167794331,
        "sender_full_name": "David Boss",
        "timestamp": 1560199150
    },
    {
        "content": "<p>So I figured it out. Client.Operation(uri, \"custom-operation-name, list of parameters)<br>\nthe uri must include the name of the resource. The operation name must not contain the $.</p>",
        "id": 167798522,
        "sender_full_name": "David Boss",
        "timestamp": 1560202365
    },
    {
        "content": "<p>There are several overrides on the client</p>",
        "id": 167804642,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1560208223
    },
    {
        "content": "<p>Are you at dev days?</p>",
        "id": 167804809,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1560208403
    },
    {
        "content": "<p>client.TypeOperation&lt;Patient&gt;(...)<br>\nInstanceOperation(...)</p>",
        "id": 167805067,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1560208670
    },
    {
        "content": "<p>Wish I was, but unfortunately not.<br>\nBut to follow up. Is there a way to use Client.Operation() with SearchParams. I have a custom operation like this:<br>\nGET [base]/Composition/$operation-name?filter=hello</p>",
        "id": 167855742,
        "sender_full_name": "David Boss",
        "timestamp": 1560263668
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> Thanks for your answer. I ultimately decided to go with OperationAsync. Do you know how I might add a search param to an Operation call? None of the overloads take in a SearchParams object for a query string.</p>",
        "id": 167889946,
        "sender_full_name": "David Boss",
        "timestamp": 1560286687
    },
    {
        "content": "<p>You use Parameters - add to it parameter named 'filter' with value 'hello' (of the appropriate type - FhirString if it is a simple string)</p>",
        "id": 167895586,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1560291651
    },
    {
        "content": "<p>Or you sue Get and compose the request URL in your code</p>",
        "id": 167895617,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1560291714
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> I am going to ask the Server guys to change the queyString to be parameter based</p>",
        "id": 168082155,
        "sender_full_name": "David Boss",
        "timestamp": 1560457659
    },
    {
        "content": "<p>Mhh, that's not what I meant. FHIR operations should always be callable with a POST of a Parameters resource. If all the parameters can be represented as string and the operation does not affect the server state the operation can be called also with a GET (see <a href=\"http://hl7.org/fhir/operations.html#executing\" target=\"_blank\" title=\"http://hl7.org/fhir/operations.html#executing\">http://hl7.org/fhir/operations.html#executing</a>) - and so this is how it should be implemented by the server guys</p>",
        "id": 168101298,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1560478555
    },
    {
        "content": "<p>When using the client you call the Operation() methods passing the parameters as a Parameter resource - this by default generates a POST, but passing the <code>useGet</code> argument set to true it generates a GET</p>",
        "id": 168101375,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1560478649
    }
]