[
    {
        "content": "<p>I'm using the latest STU3 NuGet package in a small demo app.</p>\n<p>The App creates its own version of \"Bundle\" inherited from the core Bundle</p>\n<div class=\"codehilite\"><pre><span></span>   public class ITKBundle : Bundle\n  {\n    .....\n  }\n</pre></div>\n\n\n<p>Later on it attempts to serialise this to XML using </p>\n<div class=\"codehilite\"><pre><span></span>  FhirSerializer.SerializeResourceToXml(xx);\n</pre></div>\n\n\n<p>When it does this I get an error as attached. Any clues what I am doing wrong....</p>\n<p><a href=\"/user_uploads/10155/VKecIypVYOD20IszRUIDqw4P/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a></p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/VKecIypVYOD20IszRUIDqw4P/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/VKecIypVYOD20IszRUIDqw4P/pasted_image.png\"></a></div>",
        "id": 153903723,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1503667137
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191362\">@Richard Kavanagh</span>, I'm not sure if the API serializer supports derived classes. Apparently not...</p>",
        "id": 153903724,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1503667880
    },
    {
        "content": "<p>It would appear not :-)  Will have to think of a way around this. My \"derived class\" just has a bunch of helper methods so I'd hoped it would work</p>",
        "id": 153903726,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1503668046
    },
    {
        "content": "<p>I can reproduce the exception in a unit test. Let me check if there's a workaround...</p>",
        "id": 153903727,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1503668210
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191362\">@Richard Kavanagh</span>, try to add the following attribute to your derived class:</p>\n<p><code>[Hl7.Fhir.Introspection.FhirType(\"Bundle\", IsResource = true)]</code></p>\n<p>Now serialization should work.</p>",
        "id": 153903728,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1503668427
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> Thanks for the suggestion, unfortunately it did not work..</p>",
        "id": 153903729,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1503669474
    },
    {
        "content": "<p>I can succesfully run the following logic:</p>\n<div class=\"codehilite\"><pre><span></span>[FhirType(&quot;Bundle&quot;, IsResource = true)]\npublic class CustomBundle : Bundle\n{\n    public CustomBundle() : base() { }\n}\n\n[TestMethod]\npublic void TestDerivedPoCoSerialization()\n{\n    var bundle = new CustomBundle()\n    {\n        Type = Bundle.BundleType.Collection,\n        Id = &quot;MyBundle&quot;\n    };\n\n    var xml = FhirSerializer.SerializeResourceToXml(bundle);\n    Assert.IsNotNull(xml);\n\n    var json = FhirSerializer.SerializeResourceToJson(bundle);\n    Assert.IsNotNull(json);\n}\n</pre></div>",
        "id": 153903730,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1503669741
    },
    {
        "content": "<p>Maybe you should also add [DataContract] attribute, but in my quick test, this didn't seem to be necessary.</p>",
        "id": 153903731,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1503669806
    },
    {
        "content": "<p>BTW You should also add the [NotMapped] attribute to all public (helper) members that you add.</p>",
        "id": 153903732,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1503669862
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span> perfect! it was the [NotMapped] I was missing.</p>",
        "id": 153903733,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1503670685
    },
    {
        "content": "<p><img alt=\":+1:\" class=\"emoji\" src=\"/static/generated/emoji/images/emoji/unicode/1f44d.png\" title=\":+1:\"></p>",
        "id": 153903734,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1503670709
    },
    {
        "content": "<p>And if the helper methods do not require state  besides what is already in the Bundle, you could use extension methods. Then you don't need a derived class at all.</p>",
        "id": 153904499,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1504633273
    },
    {
        "content": "<p>Yeah, missing the NotMapped attribute when developers add stuff to it makes things awkward.<br>\nAlso, when deserializing it won't use your class. Especially if you want to have multiple derived bundle types for different purposes.</p>",
        "id": 153904527,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1504650255
    }
]