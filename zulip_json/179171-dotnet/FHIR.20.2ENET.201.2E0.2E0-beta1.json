[
    {
        "content": "<p>Hi all, last week released a <em>beta</em> of the new 1.0.0 version of the FHIR .NET API.</p>\n<p>The release incorporates many bug fixes and most notably a total rewrite of the parsing and serialization subsystem that we have worked on in the past 6 month or so. This means that you are now able to parse and serialize without needing the pre-compiled POCO's, which increases performance and allows you to work with unknown resources. In addition, the parser and serializer are now configurable pipelines, so you can integrate your own logic into the stack to for example mask out elements based on permissions. And much, much more.</p>\n<p>I documented the new features here:  <a href=\"http://docs.simplifier.net/fhirnetapi/parsing.html\" target=\"_blank\" title=\"http://docs.simplifier.net/fhirnetapi/parsing.html\">http://docs.simplifier.net/fhirnetapi/parsing.html</a> and in the release notes <a href=\"http://docs.simplifier.net/fhirnetapi/releasenotes.html\" target=\"_blank\" title=\"http://docs.simplifier.net/fhirnetapi/releasenotes.html\">http://docs.simplifier.net/fhirnetapi/releasenotes.html</a>.</p>\n<p>There are several reasons I want to draw your attention to this beta before we go final:</p>\n<ul>\n<li>We have tried to keep the public surface unchanged - but we are interested to know what kind of compilation issues you might find.</li>\n<li>The parsers are much more strictly following the syntax specifications of FHIR for XML and Json - data that were \"valid\" according to the older versions of the library might now trigger parsing errors. We are interested in learning about the impact of these changes (there is a setting to re-enable the old behaviour).</li>\n</ul>\n<p>Have a go at it and let us know what you think!</p>",
        "id": 154019796,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1542722975
    },
    {
        "content": "<p>Note: There's not yet an R4 1.0.0 release. We hope to support R4 in 1.1.0.</p>",
        "id": 154019797,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1542723006
    },
    {
        "content": "<p>(as R4 is still in its final changes before publishing)</p>",
        "id": 154019856,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1542741986
    },
    {
        "content": "<p>Hi, Tom Uttaro here, I am a new member (noobie to FHIR) I have the FHIR .NET API in Visual Studio and I have my ORACLE DB views in the project.  I need to use Visual Studio and the FHIR .NET API together to map my data onto a CDA, and create a C# file representing all production layers from the mapping to call for a CDA (CCD).  I have successfully used Visual Studio for other tasks such as running R against large databases, but I honestly don’t know where to begin in this context.   To put it another way, my goal is to map my DB to CDA using the FHIR .NET API, and generate C# code representing the mapping and the call and creation of the CDA/CCD.  I would hand the code off to our architects and network staff.  We will embed a URL which calls for the CDA/CCD in our New York State Medicaid PSYCKES application.  The only goal right now is for a user to be able to call for a CDA/CCD.  I don’t need to create a full blown Restful app at this point.  It is the beginning, but an important one for NYS.  I need a very straightforward set of instructions, directions, or help.  I would appreciate any assistance anyone can render to get me going with the mapping in Visual Studio and the export of generated C# code.  Thank you.</p>",
        "id": 154020293,
        "sender_full_name": "Tom Uttaro",
        "timestamp": 1542826854
    },
    {
        "content": "<p>You cannot use a FHIR library to create CDAs - they use a (completely) different standard</p>",
        "id": 154020305,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1542831179
    },
    {
        "content": "<p>I don't know of any library to do that - we can do it in our system but entirely with home grown code</p>",
        "id": 154020306,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1542831203
    },
    {
        "content": "<p>I assume you already have all your database in DB. It is easier to create CDA directly than using any CDA-FHIR adaptor.</p>",
        "id": 154020309,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1542831923
    },
    {
        "content": "<p>Thank you, yes I understand.  I will avoid the CDA standard specifically, the general content is what I am after.  I believe that I can work directly and entirely in FHIR and accomplish the same goal.  Can anyone help me with documentation or other resources for mapping the DB directly to FHIR using the FHIR .NET API in Visual Studio? Does anyone have experience with this?  Thank you.</p>",
        "id": 154020381,
        "sender_full_name": "Tom Uttaro",
        "timestamp": 1542863500
    },
    {
        "content": "<p>First pick a FHIR version you want to target - DSTU2, STU3 or upcoming R4 - there are different version of the library for each</p>",
        "id": 154020467,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1542895265
    },
    {
        "content": "<p>Then the Hl7.Fhir.Model namespace contains classes corresponding to all FHIR resources and data types</p>",
        "id": 154020468,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1542895281
    },
    {
        "content": "<p>So you create instances of those classes filling them with the data that comes from your DB</p>",
        "id": 154020470,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1542895305
    },
    {
        "content": "<p>There are some data types that are used across multiple resources - like Identifier and CodeableConcept - so probably it is a good idea to write methods creating those from the corresponding structure in your DB</p>",
        "id": 154020472,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1542895428
    },
    {
        "content": "<p>And then use those methods across all resources</p>",
        "id": 154020473,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1542895441
    },
    {
        "content": "<p>(There is also a fork of the .NET library that supports multiple versions at the same time if that's what you need  - <a href=\"https://www.nuget.org/packages/CareEvolution.Fhir.Core\" target=\"_blank\" title=\"https://www.nuget.org/packages/CareEvolution.Fhir.Core\">https://www.nuget.org/packages/CareEvolution.Fhir.Core</a> - but it is going to change considerably to support also R4)</p>",
        "id": 154020474,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1542895612
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 154020562,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1542913447
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197488\">@Tom Uttaro</span>  I use stored procedures to DB to return data that maps to FHIR model and use Dapper (<a href=\"https://www.nuget.org/packages/Dapper\" target=\"_blank\" title=\"https://www.nuget.org/packages/Dapper\">https://www.nuget.org/packages/Dapper</a>) as ERM layer .</p>",
        "id": 154020563,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1542913465
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> Thank you so much for this guidance, it is very helpful.</p>",
        "id": 154022135,
        "sender_full_name": "Tom Uttaro",
        "timestamp": 1543596879
    },
    {
        "content": "<p>When I check Nuget, only Serialization and ElementModel are in 1.0.0-beta1. Other packages are still at 0.96.1.</p>",
        "id": 154023757,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1544201549
    },
    {
        "content": "<p>Don't know, I think it's a UI issue in NuGet. If you actually click on the link of the package (e.g. go to <a href=\"https://www.nuget.org/packages/Hl7.Fhir.DSTU2/\" target=\"_blank\" title=\"https://www.nuget.org/packages/Hl7.Fhir.DSTU2/\">https://www.nuget.org/packages/Hl7.Fhir.DSTU2/</a>), you see that they in fact exist.</p>",
        "id": 154024045,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1544443795
    },
    {
        "content": "<p>Found it. It shows only non-beta packages normally.  But since for Serialization and ElementModel there no non-beta package yet, it shows the beta versions in stead ;-)</p>",
        "id": 154024046,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1544443902
    },
    {
        "content": "<p>Oh. I got that. DSTU2/STU3 are in 1.0.0-b1 and R4 is still on 0.96.1.</p>",
        "id": 154024097,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1544456710
    },
    {
        "content": "<p>Ah, yes. We have no 1.0 for R4 yet. Neither will there be an 1.1 unfortunately. We are currently working on it - and there is probably an alpha for R4 when it is released. I expect full support to appear in 1.2, somewhere end of January.</p>",
        "id": 154024144,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1544464159
    },
    {
        "content": "<p>There is a mostly working branch of R4 on github, but no NuGet packages.</p>",
        "id": 154024230,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1544476357
    },
    {
        "content": "<p>Yes, there is an \"almost\" working branch, that will be in alpha soon. But that would still exclude snapshot generation and validation.</p>",
        "id": 154024233,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1544477107
    },
    {
        "content": "<p>this one: feature/upgrade-r4-with-stu3-changes</p>",
        "id": 154024235,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1544477140
    },
    {
        "content": "<p>When my changes are accepted into it <span class=\"emoji emoji-1f609\" title=\"wink\">:wink:</span></p>",
        "id": 154024237,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1544477173
    }
]