[
    {
        "content": "<p>How would I add a value to type when it also has a extension?<br>\n&lt;type&gt;<br>\n&lt;extension url=\"<a href=\"http://ncbi.nlm.nih.gov/fhir/StructureDefinition/templateRelationship\" target=\"_blank\" title=\"http://ncbi.nlm.nih.gov/fhir/StructureDefinition/templateRelationship\">http://ncbi.nlm.nih.gov/fhir/StructureDefinition/templateRelationship</a>\"&gt;<br>\n&lt;valueCode value=\"precedes\" /&gt;<br>\n&lt;/extension&gt;<br>\n&lt;/type&gt;</p>",
        "id": 167483885,
        "sender_full_name": "Jefferson",
        "timestamp": 1559829657
    },
    {
        "content": "<p>When I set the type it will remove the extension</p>",
        "id": 167484704,
        "sender_full_name": "Jefferson",
        "timestamp": 1559830187
    },
    {
        "content": "<p>relatedArtifact.Type =  RelatedArtifact.RelatedArtifactType.DependsOn</p>",
        "id": 167484710,
        "sender_full_name": "Jefferson",
        "timestamp": 1559830192
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"197172\">@Tom MCDEVITT</span>, you can use the mirroring <code>.TypeElement</code> property to access/assign the full component.</p>",
        "id": 167484987,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1559830350
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span>  that still removes the extension   var relatedArtifact = new RelatedArtifact()<br>\n                {<br>\n                    TypeElement = new Code&lt;RelatedArtifact.RelatedArtifactType&gt;()<br>\n                    {<br>\n                        Extension = new List&lt;Extension&gt;()<br>\n                        {<br>\n                            new Extension(GetExtensionUrl(\"templateRelationship\"),<br>\n                                new Code(t.RelationTypeName.ToLowerInvariant()))<br>\n                        }<br>\n                    },<br>\n                    Url = $\"PlanDefinition/{t.RelatedTemplateAcronym}\",<br>\n                    Type = RelatedArtifact.RelatedArtifactType.DependsOn<br>\n                };</p>",
        "id": 167485881,
        "sender_full_name": "Jefferson",
        "timestamp": 1559830959
    },
    {
        "content": "<p>Yes, because you are assigning a new component, fully replacing the original. Instead, try to modify the properties of the existing Type component.</p>",
        "id": 167486549,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1559831392
    },
    {
        "content": "<p>As long as you know what the extension is, and your new value doesn't effect it.</p>",
        "id": 167534983,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1559867140
    },
    {
        "content": "<p>Would be undesirable to have a value and a null flavour extension for example.<br>\nOr a translation value that isn't a translation of the value.</p>",
        "id": 167535038,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1559867198
    },
    {
        "content": "<p>Otherwise removing the extension is the appropriate action, hence what it is by default.</p>",
        "id": 167535068,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1559867266
    }
]