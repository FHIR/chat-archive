[
    {
        "content": "<p>Busy adding a FHIR connection to our healthcare application.</p>\n<p>We are using the fhir-net-api (C#) (Hl7.Fhir.STU3) and i'm getting some errors. I have no problems opening the many example<br>\ndocuments found on the internet. I am a little bit lost, am I doing something wrong or is my third party<br>\nnot using the standards.</p>\n<p>The error messages:</p>\n<p>System.FormatException: Type checking the data: Since type Identifier is not a primitive, it cannot have a value (at Patient.generalPractitioner[0].identifier[0])<br>\n   at Hl7.Fhir.Serialization.ComplexTypeReader.Deserialize(ClassMapping mapping, Base existing)<br>\n   at Hl7.Fhir.Serialization.DispatchingReader.Deserialize(PropertyMapping prop, String memberName, Object existing)<br>\n   at Hl7.Fhir.Serialization.RepeatingElementReader.Deserialize(PropertyMapping prop, String memberName, IList existing)<br>\n   at Hl7.Fhir.Serialization.DispatchingReader.Deserialize(PropertyMapping prop, String memberName, Object existing)<br>\n   at Hl7.Fhir.Serialization.ComplexTypeReader.read(ClassMapping mapping, IEnumerable`1 members, Base existing)<br>\n   at Hl7.Fhir.Serialization.ComplexTypeReader.Deserialize(ClassMapping mapping, Base existing)<br>\n   at Hl7.Fhir.Serialization.ResourceReader.Deserialize(Resource existing)<br>\n   at Hl7.Fhir.Serialization.PocoBuilder.&lt;&gt;c__DisplayClass8_0.&lt;BuildFrom&gt;g__build|0()<br>\n   at Hl7.Fhir.Serialization.PocoBuilder.BuildFrom(ITypedElement source)<br>\n   at Hl7.Fhir.Serialization.PocoBuilder.BuildFrom(ISourceNode source, String dataType)<br>\n   at Hl7.Fhir.Serialization.PocoBuilder.BuildFrom(ISourceNode source, Type dataType)<br>\n   at Hl7.Fhir.Serialization.FhirJsonParser.Parse(String json, Type dataType)<br>\n   at Hl7.Fhir.Serialization.FhirJsonParser.Parse<a href=\"http://String%20json\" target=\"_blank\" title=\"http://String%20json\">T</a></p>\n<p>and</p>\n<p>System.FormatException: Type checking the data: Since type Identifier is not a primitive, it cannot have a value (at Patient.extension[0].valueReference[0].identifier[0])<br>\n   at Hl7.Fhir.Serialization.ComplexTypeReader.Deserialize(ClassMapping mapping, Base existing)<br>\n   at Hl7.Fhir.Serialization.DispatchingReader.Deserialize(PropertyMapping prop, String memberName, Object existing)<br>\n   at Hl7.Fhir.Serialization.ComplexTypeReader.read(ClassMapping mapping, IEnumerable<code>1 members, Base existing)\n   at Hl7.Fhir.Serialization.ComplexTypeReader.Deserialize(ClassMapping mapping, Base existing)\n   at Hl7.Fhir.Serialization.DispatchingReader.Deserialize(PropertyMapping prop, String memberName, Object existing)\n   at Hl7.Fhir.Serialization.RepeatingElementReader.Deserialize(PropertyMapping prop, String memberName, IList existing)\n   at Hl7.Fhir.Serialization.DispatchingReader.Deserialize(PropertyMapping prop, String memberName, Object existing)\n   at Hl7.Fhir.Serialization.ComplexTypeReader.read(ClassMapping mapping, IEnumerable</code>1 members, Base existing)<br>\n   at Hl7.Fhir.Serialization.ComplexTypeReader.Deserialize(ClassMapping mapping, Base existing)<br>\n   at Hl7.Fhir.Serialization.ResourceReader.Deserialize(Resource existing)<br>\n   at Hl7.Fhir.Serialization.PocoBuilder.&lt;&gt;c__DisplayClass8_0.&lt;BuildFrom&gt;g__build|0()<br>\n   at Hl7.Fhir.Serialization.PocoBuilder.BuildFrom(ITypedElement source)<br>\n   at Hl7.Fhir.Serialization.PocoBuilder.BuildFrom(ISourceNode source, String dataType)<br>\n   at Hl7.Fhir.Serialization.PocoBuilder.BuildFrom(ISourceNode source, Type dataType)<br>\n   at Hl7.Fhir.Serialization.FhirJsonParser.Parse(String json, Type dataType)<br>\n   at Hl7.Fhir.Serialization.FhirJsonParser.Parse<a href=\"http://String%20json\" target=\"_blank\" title=\"http://String%20json\">T</a></p>\n<p>The problem nodes are the following (this is exactly as I recieve the data):</p>\n<p>\"generalPractitioner\": [<br>\n        {<br>\n            \"display\": \"HJ JANSEN\",<br>\n            \"identifier\": \"01000298\",<br>\n            \"reference\": \"/fhir/Practitioner?identifier=01000298\"<br>\n        }<br>\n    ]</p>\n<p>and </p>\n<p>\"extension\": [<br>\n        {<br>\n            \"url\": \"<a href=\"http://hl7.org/fhir/StructureDefinition/nl-core-preferred-pharmacy\" target=\"_blank\" title=\"http://hl7.org/fhir/StructureDefinition/nl-core-preferred-pharmacy\">http://hl7.org/fhir/StructureDefinition/nl-core-preferred-pharmacy</a>\",<br>\n            \"valueReference\": {<br>\n                \"display\": \"Zandvoortse Apotheek\",<br>\n                \"identifier\": \"02079755\",<br>\n                \"reference\": \"/fhir/Organization?identifier=02079755\"<br>\n            },<br>\n            \"valueString\": \"\"<br>\n        }<br>\n    ]</p>\n<p>If I remove \"identifier\" from both these nodes then my errors go away.</p>\n<p>Thank you,<br>\nPhillip</p>",
        "id": 183364900,
        "sender_full_name": "Phillip Partridge",
        "timestamp": 1576248146
    },
    {
        "content": "<p>Yes, those two identifiers are wrong, they should be <code>\"identifier\": { \"value\": \".....\" }</code></p>",
        "id": 183365435,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1576248500
    },
    {
        "content": "<p>Have those identifiers ever been correct? I get the feeling the organization I am connecting to aren't really using the FHIR standards. Generating look-a-like documents.</p>",
        "id": 183366173,
        "sender_full_name": "Phillip Partridge",
        "timestamp": 1576248999
    },
    {
        "content": "<p>No. always wrong. Previous version of FHIR did not have \"identifier\" at all - so still wrong</p>",
        "id": 183366765,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1576249429
    }
]