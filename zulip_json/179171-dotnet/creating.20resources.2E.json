[
    {
        "content": "<p>I need to create resources at runtime.  The following happens:<br>\nstring n = \"Hl7.Fhir.R4.Core\";<br>\nstring c = \"Person\";<br>\nvar myObj = Activator.CreateInstance(n, c);</p>\n<p>System.TypeLoadException<br>\n  HResult=0x80131522<br>\n  Message=Could not load type 'Person' from assembly 'Hl7.Fhir.R4.Core, Version=3.8.0.0, Culture=neutral, PublicKeyToken=d706911480550fc3'.</p>\n<p>Is this a constructor problem or something I'm missing in C#.  It has obviously found the dll correctly.</p>",
        "id": 273430454,
        "sender_full_name": "Dennis Brox",
        "timestamp": 1646003216
    },
    {
        "content": "<p>To test things out, just create a new person normally (verifying that the assemblies are all loaded) then see if your code works...</p>",
        "id": 273461959,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1646039439
    },
    {
        "content": "<p>Hi Dennis, there are some utilities in the <code>Hl7.Fhir.Model.ModelInfo</code> class to make these types of operations easier:</p>\n<div class=\"codehilite\" data-code-language=\"C#\"><pre><span></span><code><span class=\"kt\">string</span><span class=\"w\"> </span><span class=\"n\">ft</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"s\">\"Person\"</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(!</span><span class=\"n\">Hl7</span><span class=\"p\">.</span><span class=\"n\">Fhir</span><span class=\"p\">.</span><span class=\"n\">Model</span><span class=\"p\">.</span><span class=\"n\">ModelInfo</span><span class=\"p\">.</span><span class=\"n\">FhirTypeToCsType</span><span class=\"p\">.</span><span class=\"n\">ContainsKey</span><span class=\"p\">(</span><span class=\"n\">ft</span><span class=\"p\">))</span><span class=\"w\"></span>\n<span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">throw</span><span class=\"w\"> </span><span class=\"k\">new</span><span class=\"w\"> </span><span class=\"nf\">Exception</span><span class=\"p\">(</span><span class=\"s\">$\"{ft} is not a valid FHIR Type\"</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"kt\">var</span><span class=\"w\"> </span><span class=\"n\">typed</span><span class=\"w\"> </span><span class=\"p\">=</span><span class=\"w\"> </span><span class=\"n\">Activator</span><span class=\"p\">.</span><span class=\"n\">CreateInstance</span><span class=\"p\">(</span><span class=\"n\">Hl7</span><span class=\"p\">.</span><span class=\"n\">Fhir</span><span class=\"p\">.</span><span class=\"n\">Model</span><span class=\"p\">.</span><span class=\"n\">ModelInfo</span><span class=\"p\">.</span><span class=\"n\">FhirTypeToCsType</span><span class=\"p\">[</span><span class=\"n\">ft</span><span class=\"p\">]);</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 273508493,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1646063064
    },
    {
        "content": "<p>Two nice FhirType functions but CreateInstance works C# normally doesn't work i.e. it  creates a resource nicely, the class  has values like a resource I create normally, GetType returns the same values.  But there is no constructor i.e. I can't assign property values to it.</p>",
        "id": 273560114,
        "sender_full_name": "Dennis Brox",
        "timestamp": 1646085508
    },
    {
        "content": "<p>I am unclear on what you are trying to do.  If you are asking about code-completion, yes a <code>var</code> type from <code>Activator.CreateInstance</code> will not know what you are doing.</p>\n<p>If you know the type at compile-time, you can just use <code>new Hl7.Fhir.Model.Person()</code> to create the instance.</p>",
        "id": 273561185,
        "sender_full_name": "Gino Canessa",
        "timestamp": 1646085981
    },
    {
        "content": "<p>I'm trying to create a FHIR class  at runtime where all I know is the class name i.e. a string \"Person\" and assign it  values when it is created. Why else would you use CreateInstance?  I want to handle values in a dictionary in one line generically instead of using scads of cases in a switch statement.    On another \"Type\" issue, how do convert Address.Line to some type I can use in C#? I created it as a string [] but I can't get it back as either an array or a list.</p>",
        "id": 273724534,
        "sender_full_name": "Dennis Brox",
        "timestamp": 1646175547
    },
    {
        "content": "<p>When I do this I'm using the ClassMapping and PropertyMapping classes to manipulate things.<br>\nOtherwise you could just do regular dotnet reflection.<br>\nThat's a pretty advanced part of the libs, and you'd want to understand what's going on internally to ensure that you know how things might break into the future.</p>",
        "id": 273734771,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1646181377
    }
]