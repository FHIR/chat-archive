[
    {
        "content": "<p>Does anyone know where I might find some simple examples of the use of the FluentPath dotnet libaray \"HL7.Fhir.FluentPath\". Just something to get started on.  I have read the <a href=\"https://github.com/ewoutkramer/fhirpath/blob/master/fluentpath.md\" target=\"_blank\" title=\"https://github.com/ewoutkramer/fhirpath/blob/master/fluentpath.md\">https://github.com/ewoutkramer/fhirpath/blob/master/fluentpath.md</a> which is great to understand the language as a whole but I seem to be missing a very simple example of to get started on with the libaray. Maybe a simple example of extracting the first patient name I asume using a FluentPath string like \"Patient.name[0].given[0]\". How do I parse such a string with the library against a Patient resource to get the first given name.</p>",
        "id": 153830489,
        "sender_full_name": "Angus Millar",
        "timestamp": 1464587575
    },
    {
        "content": "<p>Have a look at the unit tests in that project on github, did you know where to find that?</p>",
        "id": 153830490,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1464589058
    },
    {
        "content": "<p>Yes have cloned the project but can not see any test project within it</p>",
        "id": 153830491,
        "sender_full_name": "Angus Millar",
        "timestamp": 1464589120
    },
    {
        "content": "<p>Oh I cloned master, dev has the tests</p>",
        "id": 153830493,
        "sender_full_name": "Angus Millar",
        "timestamp": 1464589167
    },
    {
        "content": "<p>will look at them</p>",
        "id": 153830494,
        "sender_full_name": "Angus Millar",
        "timestamp": 1464589178
    },
    {
        "content": "<p>OK thanks Brian, have something to chew on now</p>",
        "id": 153830495,
        "sender_full_name": "Angus Millar",
        "timestamp": 1464589378
    },
    {
        "content": "<p>good stuff.</p>",
        "id": 153830497,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1464590499
    },
    {
        "content": "<p>Wow, there is a fair bit more in that test project than I was expecting</p>",
        "id": 153830499,
        "sender_full_name": "Angus Millar",
        "timestamp": 1464593378
    },
    {
        "content": "<p>Hi Angus, the FluentPath API support is fairly new. My colleague Ewout implemented most of the syntax. Possibly there is still some work to be done on complex use cases/operators and type casting/coercion. Since this is all new and under development, we haven't started to integrate FluentPath support into our tools yet. So your feedback on the current API support is welcome!</p>",
        "id": 153830520,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1464601328
    },
    {
        "content": "<p>Angus, if you are just looking to be trying out the fluentpath stuff for some initial work, there is a slightly older version available on github integrated ina branch of the DSTU2 version.<br>\nWe are using it for validation, and actively updating it for support.</p>",
        "id": 153830607,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1464652127
    },
    {
        "content": "<p>Once Ewout and Michel have the first cut of the new project done. I'll be moving to that and getting it integrated into the dotnet client to work on the models.</p>",
        "id": 153830608,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1464652165
    },
    {
        "content": "<p>Thanks for your comments guys. I will keep pushing on. I'm new to using FluentPath and had just the conceptual idea of how it worked and was now trying to put it into practice. Not looking to do anything complex at this stage really just trying to get up and running with a basic working implementation, I can expand out from there. Rightly or wrongly, naively, I was thinking it was going to extend the dotnet FHIR API in some fashion. I.e. parse a resource into the FHIR API POCOs and then be able to call some FluentPath extension method on the root (something like:  <code>Patient.ResolveFluentPathExpression(“Patient.name[0].given[0]”)</code> that resolves to an appropriate FluentPath object result. <br>\nBut I can also now understand that it is agnostic to any API and works directly on XML or JSON. Yet even here the test project seem to have a lot of infrastructural work within it. Everything in the ‘Instance Tree’ and ‘Navigation’ folders and the whole implementation of the static class ‘TreeConstructor’ seems like it should have been abstracted away from me the API user.<br>\nBut these are only first impressions, I’ve only been on this for a few hours.     </p>",
        "id": 153830621,
        "sender_full_name": "Angus Millar",
        "timestamp": 1464655037
    },
    {
        "content": "<p>That's where we want it to get to once it's a part of the spec in STU3, but for now is external.</p>",
        "id": 153830633,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1464657046
    },
    {
        "content": "<p>I guess I could create an extension method that does this for you in the background pretty simply.</p>",
        "id": 153830634,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1464657070
    },
    {
        "content": "<p>There are 2 main fluentpath operations, once for validating a predicate (IsTrue) and another for extracting data.</p>",
        "id": 153830636,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1464657113
    },
    {
        "content": "<p>the java version does work that way - it returns a set of fhir objects</p>",
        "id": 153830651,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1464657977
    },
    {
        "content": "<p>Don't worry Brian, I can make do for now as I’m only exploring how I will use it. I'm already over to the Pre Release May STU3 so don't want to go back to DSTU2. I think for now I will just explore with what is here and will look forward to the real STU3 release and then look hard using it. I want it to generically populate my db indexes off the search parameter fluent paths.    </p>",
        "id": 153830652,
        "sender_full_name": "Angus Millar",
        "timestamp": 1464658211
    },
    {
        "content": "<p>@Angus The FHIR .NET API implementation of fluentpath works against *any* tree structure, XML/JSON/PoCo/..., hence the need for a (public) abstract tree datastructure. We are trying to move towards exposing both low level and high level API functionality, to cater for different types of clients. But as Brian mentioned, this is all work in progress and will probably be refactored a bit before the final release.</p>",
        "id": 153830705,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1464681128
    }
]