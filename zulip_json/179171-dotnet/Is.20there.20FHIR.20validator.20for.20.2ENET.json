[
    {
        "content": "<p>This page <a href=\"https://www.hl7.org/fhir/validation.html\" target=\"_blank\" title=\"https://www.hl7.org/fhir/validation.html\">https://www.hl7.org/fhir/validation.html</a> has a JAR validator. Is there a .NET implementation?</p>",
        "id": 153886679,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1493731776
    },
    {
        "content": "<p>yes there is, though it is still work in progress</p>",
        "id": 153886701,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1493763806
    },
    {
        "content": "<p>It is actually a part of the current HL7.Fhir.Specification packages!<br>\nThis is what is used by the new Forge editor too.<br>\nDetails descriptions of its usage are not readily available yet, maybe we'll get to this at the connectathon.<br>\n(there are unit tests for it, so you might be able to work it out from those)</p>",
        "id": 153886744,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1493781446
    },
    {
        "content": "<p>(In both the DSTU2 and STU3 versions)</p>",
        "id": 153886745,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1493781468
    },
    {
        "content": "<p>I can confirm it exists as we commissioned FHIR to build it for us. Furore do have a simple test harness for it, though I am not sure if that has been released anywhere. I created a different test harness here <a href=\"https://github.com/clarotech/Verifier/tree/develop\" target=\"_blank\" title=\"https://github.com/clarotech/Verifier/tree/develop\">https://github.com/clarotech/Verifier/tree/develop</a> which shows at a high level how the API can be used.</p>",
        "id": 153886761,
        "sender_full_name": "Richard Kavanagh",
        "timestamp": 1493799955
    },
    {
        "content": "<p>I was trying to figure out how the validator validate coding using external terminology service. I am trying to make our terminology service available for that validator. I read source codes from Github. Now I understand how ExternalTerminologyService class works. It is interesting that the java implementation sends valueset as a post parameter while dotnet implementation adds valueset Id in route. </p>",
        "id": 153886834,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1493836522
    },
    {
        "content": "<p>the java validator doesn't assume that the terminology server has the right set of value sets </p>",
        "id": 153886893,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1493857058
    },
    {
        "content": "<p>I'd like to change the behaviour of the term validation so it will try the in-memory terminology server first, but when that fails (either because the VS is too complex or unknown), it will try an external server.  Would it make sense in that case to send the valueset as a whole to the external server?  It seems like a waste of bandwith.... but you cannot assume that server has your VS either (unless you manage that VS yourself).  Should that be configurable behaviour?</p>",
        "id": 153895305,
        "sender_full_name": "Ewout Kramer",
        "timestamp": 1498570968
    },
    {
        "content": "<p>Assuming that the purpose here is to \"check that codes/displays provided in the Coding/CodeableConcept types are valid\", and concerns such as realm-specific valuesets, languages, code system versions, etc. come into play, my feeling is that there needs to be a configurable option to use an external Terminology Service.</p>",
        "id": 153895339,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1498615663
    },
    {
        "content": "<p>what I do in my validator is break down the part I can't process, and pass just that to the server. It's not yet been big</p>",
        "id": 153895642,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1498737092
    },
    {
        "content": "<p>In my server, I just pass the reference to my internal implementation, then fall back to the memory one if don't have it loaded in my database</p>",
        "id": 153895918,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1498992118
    }
]