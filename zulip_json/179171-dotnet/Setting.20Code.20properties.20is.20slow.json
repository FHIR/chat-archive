[
    {
        "content": "<div class=\"codehilite\"><pre><span></span>            var patient = new Hl7.Fhir.Model.DSTU2.Patient();\n            var watch = Stopwatch.StartNew();\n            const int count = 10_000;\n            for ( var i = 0; i &lt; count; i++ )\n            {\n                patient.Gender = Hl7.Fhir.Model.AdministrativeGender.Female;\n            }\n            watch.Stop();\n            Console.WriteLine( &quot;Set code X {0:N0}: {1:N1} msec&quot;, count, watch.ElapsedMilliseconds );\n</pre></div>",
        "id": 179988847,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1572996263
    },
    {
        "content": "<p>Output: <code>Set code X 10,000: 62.0 msec</code></p>",
        "id": 179988887,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1572996288
    },
    {
        "content": "<p>(for non-code properties the time is &lt; 1 msec)</p>",
        "id": 179988985,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1572996374
    },
    {
        "content": "<p>Property setters raise the <code>PropertyChanged</code> event. Did you hook up a subscriber?</p>",
        "id": 180011811,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1573029450
    },
    {
        "content": "<p>I'd expect it's the try parse enumeration stuff. But without using the profiler couldn't be sure.<br>\nWould be a good example to try with the dotnet profiler.</p>",
        "id": 180019925,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1573037228
    },
    {
        "content": "<p>Also, the optimizer with a native property might optimizer things out, but can't be sure.</p>",
        "id": 180020047,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1573037321
    },
    {
        "content": "<p>The slowness comes from GetAttributeOnEnum() (<a href=\"https://github.com/FirelyTeam/fhir-net-common/blob/develop/src/Hl7.Fhir.Support/Utility/ReflectionHelper.cs#L219\" target=\"_blank\" title=\"https://github.com/FirelyTeam/fhir-net-common/blob/develop/src/Hl7.Fhir.Support/Utility/ReflectionHelper.cs#L219\">https://github.com/FirelyTeam/fhir-net-common/blob/develop/src/Hl7.Fhir.Support/Utility/ReflectionHelper.cs#L219</a>) - that is called every time</p>",
        "id": 180036332,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1573050043
    },
    {
        "content": "<p>I created an issue <a href=\"https://github.com/FirelyTeam/fhir-net-api/issues/1169\" target=\"_blank\" title=\"https://github.com/FirelyTeam/fhir-net-api/issues/1169\">https://github.com/FirelyTeam/fhir-net-api/issues/1169</a></p>",
        "id": 180036683,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1573050297
    },
    {
        "content": "<p>Any suggestions <span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span> there is also the mirror property element that has the string representation in it, which is what is going on there, converting the enum to the string representation.</p>",
        "id": 180380150,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1573418115
    },
    {
        "content": "<p>We could generate a hash table I guess.</p>",
        "id": 180380156,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1573418134
    },
    {
        "content": "<p>Yes, hash tables is the way to go</p>",
        "id": 180386643,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1573429643
    },
    {
        "content": "<p>I see a PR coming :-)</p>",
        "id": 180408585,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1573464436
    },
    {
        "content": "<p>I was thinking about them more, and from a generation perspective, a switch/case function would be better, though that then can't be extended with other values, but that isn't the issue with the current stuff anyway. code vs data - where it sits in memory...</p>",
        "id": 180478621,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1573529536
    },
    {
        "content": "<p>Turns out that there is already a cache - it is just a matter of using it: <a href=\"https://github.com/FirelyTeam/fhir-net-common/pull/16\" target=\"_blank\" title=\"https://github.com/FirelyTeam/fhir-net-common/pull/16\">https://github.com/FirelyTeam/fhir-net-common/pull/16</a></p>",
        "id": 181975202,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1574811350
    }
]