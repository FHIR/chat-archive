[
    {
        "content": "<p>Just a little gotcha out there for those writing servers when porting over to netcore...<br>\nHttpUtility.ParseQueryString has some fun behaviours...<br>\nThe parts in the query have meaning for FHIR, seperate by <code>&amp;</code> is a logical <code>and</code>, seperate with a <code>,</code> means a logical <code>or</code></p>\n<p>Instead you should use the QueryHelpers.ParseQuery() routine.</p>\n<p><a href=\"https://trackjs.com/blog/query-string-parsing/\">https://trackjs.com/blog/query-string-parsing/</a></p>\n<p>The NameValueCollection will convert this<br>\n<code>Observation?date=le2018-04&amp;date=ge2018-04,le2018-04</code><br>\ninto</p>\n<div class=\"codehilite\"><pre><span></span><code>name : `date`\nvalue : `le2018-04,ge2018-04,le2018-04` (single string)\n</code></pre></div>\n\n\n<p>The new structure has a StringValues object, which is a collection of strings, so produces </p>\n<div class=\"codehilite\"><pre><span></span><code>name : `date`\nvalue : `le2018-04` and `ge2018-04,le2018-04` (2 strings, as was in the originalstring intent)\n</code></pre></div>\n\n\n<p>This issue is in the Spark server here <span class=\"user-mention\" data-user-id=\"192710\">@Kenneth Myhra</span> <br>\n<a href=\"https://github.com/FirelyTeam/spark/blob/326c41bfe6aa63907e85c016d55f280029f95ec8/src/Spark.Engine/Extensions/HttpHeadersExtensions.cs#L72\">https://github.com/FirelyTeam/spark/blob/326c41bfe6aa63907e85c016d55f280029f95ec8/src/Spark.Engine/Extensions/HttpHeadersExtensions.cs#L72</a></p>\n<p><span class=\"user-mention\" data-user-id=\"191757\">@Christiaan Knaap</span> , <span class=\"user-mention\" data-user-id=\"222054\">@Gino Canessa</span>, <span class=\"user-mention\" data-user-id=\"191912\">@Michele Mottini</span>  not sure if your servers are also susceptible to this too.<br>\nI'll be posting an update to the fhir-net-web-api to resolve it in my facade project this weekend for those using this nuget package.</p>",
        "id": 210483362,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1600411108
    },
    {
        "content": "<p>Thanks for checking Brian. Our server is OK,  we use <code>HttpRequestMessageExtensions.GetQueryNameValuePairs() </code></p>",
        "id": 210513415,
        "sender_full_name": "Michele Mottini",
        "timestamp": 1600433544
    },
    {
        "content": "<p>We're not susceptible to this, but thanks for the mention anyway!</p>",
        "id": 214730268,
        "sender_full_name": "Christiaan Knaap",
        "timestamp": 1603817998
    }
]