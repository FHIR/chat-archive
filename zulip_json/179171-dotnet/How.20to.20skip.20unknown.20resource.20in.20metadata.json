[
    {
        "content": "<p>When reading metadata, my C# client throws exception because unknown resource in the metadata. That is a server issue which I cannot fix. Is there a  way to skip exception and continue parsing the rest of metadata?</p>",
        "id": 153950903,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1522942979
    },
    {
        "content": "<p>Is that due to the resource type value in the conformance/capabilitystatement?</p>",
        "id": 153951031,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1522962169
    },
    {
        "content": "<p>yes. hapi made a custom resource up</p>",
        "id": 153951032,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522962663
    },
    {
        "content": "<p>that version did anyway</p>",
        "id": 153951033,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1522962670
    },
    {
        "content": "<p>There is a parser settings object that you can pass to the serializer that has a <code>AllowUnrecognizedEnums</code> property which will permit it to accept the invalid code value.<br>\nThe resource will have a value populated in the string representation of the code underneath, however the native enumeration field will be null.</p>\n<div class=\"codehilite\"><pre><span></span>// Example to parse some content with invalid required binding code values\nvar settings = new Hl7.Fhir.Serialization.ParserSettings() { AllowUnrecognizedEnums = true};\nvar parser = new Hl7.Fhir.Serialization.FhirXmlParser(settings);\nvar resource = parser.Parse&lt;CapabilityStatement&gt;(xmlString);\n\n// And the same thing with the FHIR REST client\nvar server = new FhirClient(fhirServerAddress);\nserver.ParserSettings = settings;\nvar conformance = server.Conformance();\n</pre></div>\n\n\n<p>or similar ;)</p>",
        "id": 153951041,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1522966167
    },
    {
        "content": "<p>That is great. Thank you <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span></p>",
        "id": 153951047,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1522966368
    },
    {
        "content": "<p>Just be careful with it, as it lets stuff get through you may not be expecting.<br>\nI don't recall how the \"error/warning\" gets through to you.<br>\nIt might be up to you to handle.</p>",
        "id": 153951048,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1522966426
    },
    {
        "content": "<p>Just checked, it's quiet</p>\n<div class=\"codehilite\"><pre><span></span>if (!Settings.AllowUnrecognizedEnums)\n{\n    if (EnumUtility.ParseLiteral((string)value, mappedProperty.ElementType) == null)\n        throw Error.Format(&quot;Literal &#39;{0}&#39; is not a valid value for enumeration &#39;{1}&#39;&quot;.FormatWith(value, mappedProperty.ElementType.Name), _current);\n}\n</pre></div>",
        "id": 153951049,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1522966491
    }
]