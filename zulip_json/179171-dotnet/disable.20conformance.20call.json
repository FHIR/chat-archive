[
    {
        "content": "<p>Hello everyone,</p>\n<p>while working with the official .NET API for HL7 FHIR i have got a problem regarding with the conformance call.<br>\nActually i want to send a search-request to the administration endpoint of the vonk<br>\n(We need to validate if a StructureDefinition is available or not).<br>\nAs I have seen in wireshark there is also a conformance call to the administration endpoint and the administration endpoint<br>\ncan't handle that call. <br>\nAfter consultation with my work colleague Simone Heckmann, the following question arises:<br>\nIs it possible to disable the conformance call or are there other ways to validate if a StructureDefinition exists or not?<br>\nthank you very much!</p>\n<p>greetings<br>\nNils Steinmeyer,  B.Sc.<br>\nIT-Infrastruktur und Services</p>\n<p>DMI GmbH &amp; Co. KG<br>\nOtto-Hahn-Str. 11-13<br>\n48161 MÃ¼nster<br>\nGermany</p>",
        "id": 162425082,
        "sender_full_name": "Nils Steinmeyer",
        "timestamp": 1554295260
    },
    {
        "content": "<p>I think there is a general question of if and how we can use the dotnet client library to talk to the VONK administration endpoint? I was thinking about redirecting calls to <code>http://my-vonk-server.org/administration/metadata</code> to <code>http://my-vonk-server.org/metadata</code> but this doesn't make much sense, since the admin endpoint doesn't have the same capabilities as the data endpoint. Should Vonk serve a separate CapabilityStatement on the administration endpoint? It would certainly be the <em>correct</em> solution, however it feels a bit overkill since this is not a <em>public</em> endpoint and even our use case needs this kind of access for internal purposes only. Would be nice, if there was a way to tell the client to simply skip checking the CapabilityStatement, if that's possible...</p>",
        "id": 162427039,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1554296757
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span>, the .NET <code>BaseFhirClient</code> has a <code>VerifyFhirVersion</code> property. If enabled, the client verifies the server <code>CapabilityStatement</code> on the first request. Default value is false however, so this shouldn't block requests?</p>",
        "id": 162431136,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1554299640
    },
    {
        "content": "<p>Strange.  <span class=\"user-mention\" data-user-id=\"216805\">@Nils Steinmeyer</span> , can you provide details of your error?</p>",
        "id": 162431504,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1554299855
    },
    {
        "content": "<p>Yes of course <span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> . I was initializing a FhirClient (API/adiministation).<br>\nNext i used the following call <code>_fhirClient.Search&lt;StructureDefinition&gt;(\"url = http://someUrl\")</code><br>\nAs result i've got following error message:</p>\n<p><code>[WARNING] Argument is not supported (at /metadata).\n at Hl7.Fhir.Rest.TaskExtensions.WaitResult[T](Task1 task) </code>   </p>\n<p>As I saw in Wireshark the first package is <code>http://API/administration/metadata?_summary=true</code><br>\nThe result is the above-mentioned error.</p>",
        "id": 162498510,
        "sender_full_name": "Nils Steinmeyer",
        "timestamp": 1554359223
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191336\">@Michel Rutten</span>  thank you for your input. The <code>VerifyFhirVersion</code> was set by default to <code>true</code>.<br>\nI changed the <code>VerifyFhirVersion</code> property to false. Now it works. Thank you a lot!</p>",
        "id": 162500925,
        "sender_full_name": "Nils Steinmeyer",
        "timestamp": 1554362352
    },
    {
        "content": "<p>No problem! Our server developers confirmed that the Vonk administration endpoint indeed does not provide a (separate) Capabilitystatement. Just make sure that you disable the <code>BaseFhirClient.VerifyFhirVersion</code> property.<br>\nCheers, Michel</p>",
        "id": 162503179,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1554364942
    },
    {
        "content": "<p>Whoops ;)</p>",
        "id": 162508288,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1554370201
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> not an oversight, but hard to implement - think about it...</p>",
        "id": 162515564,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1554377584
    },
    {
        "content": "<p>...and hardly necessary from an interoperability/conformance viewpoint. You wouldn't want 3rd party apps to mess with your admin database, so I wouldn't consider it a \"public FHIR endpoint\".<br>\nHowever, people writing administration UIs for VONK may still want to use the dotnet client library, so having a workaround seems legit...</p>",
        "id": 162519204,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1554380774
    },
    {
        "content": "<p>Yes, and the workaround is explicitly disabling <code>VerifyFhirVersion</code> property.</p>",
        "id": 162526042,
        "sender_full_name": "Michel Rutten",
        "timestamp": 1554385386
    },
    {
        "content": "<p>Which is super simple. There's also a constructor flag for that too.</p>",
        "id": 162572080,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1554414323
    }
]