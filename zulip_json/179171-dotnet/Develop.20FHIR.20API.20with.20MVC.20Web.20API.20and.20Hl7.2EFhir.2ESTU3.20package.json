[
    {
        "content": "<p>Hi,</p>\n<p>I am new to FHIR and I am trying to developing my own FHIR API (server side) with MVC Web API and Hl7.Fhir.STU3 package. I got some problem when posting FHIR object with JSON format from client (using Postman) to my API. The following is what I've done to create the API.</p>\n<p>(1) created a ASP.NET MVC Web API project in visual studio<br>\n(2) installed Hl7.Fhir.STU3 package by typing \"Install-Package Hl7.Fhir.STU3 -Version 1.2.0\" in the package manager console<br>\n(3) created a ApiController called \"PatientController.cs\" and created a post method in it (see below code):<br>\nusing Hl7.Fhir.Model;<br>\nusing System.Web.Http;<br>\nnamespace FHIR.API.Controllers<br>\n{<br>\npublic class PatientController : ApiController<br>\n{<br>\n// POST api/values<br>\npublic void Post(Hl7.Fhir.Model.Patient patientObj)<br>\n{<br>\nstring dateOfBirth = patientObj.BirthDate;<br>\n}<br>\n}<br>\n}<br>\n(4) To test this API, in postman, send a http post request to my FHIR API with a sample \"Patient\" FHIR JSON object (The \"Patient\" FHIR object is copied from FHIR website)<br>\n(5) Debug the API PatientController \"Post\" Method, all properties in \"patientObj\" is null. It seems that the \"Patient\" FHIR object sent from Postman is not mapped into the API Hl7.Fhir.Model.Patient object.</p>\n<p>Could you please advise if I am doing anything wrong when using Hl7.Fhir.STU3 package to develop my own FHIR API server? I am using vs 2013 and .net 4.5.</p>\n<p><strong><strong><em><strong><em><strong><em><strong><em><strong><em><strong><em><strong><em><strong><em><strong><em><strong><em>Sample Patient FHIR Object</em></strong></em></strong></em></strong></em></strong></em></strong></em></strong></em></strong></em></strong></em></strong></em></strong></strong>*<br>\n{<br>\n\"resourceType\": \"Patient\",<br>\n\"id\": \"xcda\",<br>\n\"identifier\": [<br>\n{<br>\n\"use\": \"usual\",<br>\n\"type\": {<br>\n\"coding\": [<br>\n{<br>\n\"system\": \"<a href=\"http://terminology.hl7.org/CodeSystem/v2-0203\" target=\"_blank\" title=\"http://terminology.hl7.org/CodeSystem/v2-0203\">http://terminology.hl7.org/CodeSystem/v2-0203</a>\",<br>\n\"code\": \"MR\"<br>\n}<br>\n]<br>\n},<br>\n\"system\": \"urn:oid:2.16.840.1.113883.19.5\",<br>\n\"value\": \"12345\"<br>\n}<br>\n],<br>\n\"active\": true,<br>\n\"name\": [<br>\n{<br>\n\"family\": \"Levin\",<br>\n\"given\": [<br>\n\"Henry\"<br>\n]<br>\n}<br>\n],<br>\n\"gender\": \"male\",<br>\n\"birthDate\": \"1932-09-24\",<br>\n\"managingOrganization\": {<br>\n\"reference\": \"Organization/2.16.840.1.113883.19.5\",<br>\n\"display\": \"Good Health Clinic\"<br>\n}<br>\n}<br>\n<strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong><strong>*</strong></p>\n<p>Thanks a lot.</p>\n<p>Hannah</p>",
        "id": 163100646,
        "sender_full_name": "hannah",
        "timestamp": 1554990530
    },
    {
        "content": "<p>There is not a 1-1 mapping between the POCO representation in the fhir-net-api and the representation in XML/JSON. You need to do some parsing in your request pipeline.</p>",
        "id": 163118825,
        "sender_full_name": "Kenneth Myhra",
        "timestamp": 1555002728
    },
    {
        "content": "<p>Ok I see. Thank you for the information, Kenneth. </p>\n<p>Actually I see the source cod specifically marked the properties defined in FHIR spec to be not mapped, please see below code from \"Hl7.Fhir.Model\" in the package. <br>\nFor example, the property \"BirthDate\" of Patient FHIR object  is decorated with two attributes \"IgnoreDataMemberAttribute\" and \"NotMapped\",  however, the property \"BirthDateElement\" is marked as DataMember to be serialized. Not sure why it's designed as this and if there is an easy way for us to turn it off or we have to customize the source code to remove those two attributes?</p>\n<p>/// &lt;summary&gt;<br>\n        /// The date of birth for the individual<br>\n        /// &lt;/summary&gt;<br>\n        [FhirElement(\"birthDate\", InSummary=true, Order=140)]<br>\n        [DataMember]<br>\n        public Hl7.Fhir.Model.Date BirthDateElement<br>\n        {<br>\n            get { return _BirthDateElement; }<br>\n            set { _BirthDateElement = value; OnPropertyChanged(\"BirthDateElement\"); }<br>\n        }</p>\n<div class=\"codehilite\"><pre><span></span>    private Hl7.Fhir.Model.Date _BirthDateElement;\n\n    /// &amp;lt;summary&amp;gt;\n    /// The date of birth for the individual\n    /// &amp;lt;/summary&amp;gt;\n    /// &amp;lt;remarks&amp;gt;This uses the native .NET datatype, rather than the FHIR equivalent&amp;lt;/remarks&amp;gt;\n    [NotMapped]\n    [IgnoreDataMemberAttribute]\n    public string BirthDate\n    {\n        get { return BirthDateElement != null ? BirthDateElement.Value : null; }\n        set\n        {\n            if (value == null)\n              BirthDateElement = null; \n            else\n              BirthDateElement = new Hl7.Fhir.Model.Date(value);\n            OnPropertyChanged(&quot;BirthDate&quot;);\n        }\n    }\n</pre></div>",
        "id": 163128588,
        "sender_full_name": "hannah",
        "timestamp": 1555009770
    },
    {
        "content": "<p>Add a media formatter and using XmlSerializer/JsonSerializer in the FHIR nuget package serialize the inbound xml/json steam  to FHIR instance. The same for outbound messages.</p>",
        "id": 163140452,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1555019702
    },
    {
        "content": "<p>Because FHIR resource classes are generated from FHIR xml  schema. All data types in FHIR are inherited from Element type. FHIR .NET package wraps around Element type to simplify developer's work. In your example, BirthDate in FHIR xml schema is Date type which inherited from Element. So the genereated class has public Date BirthDateElement property. Most c# developers use either string or .NET DateTime type for date/dateTime. To simplify that, the code generator also creates public string BrithDate wrapping around BirthDateElement property. But when serialized to xml/json stream, only the BirthDateElement is serialized/deserialized since the Date property is what specified in the standard, not the string property.</p>",
        "id": 163141027,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1555020225
    },
    {
        "content": "<p>There is a project on github that provides an implementation of the facade you can use.<br>\n<a href=\"https://github.com/brianpos/fhir-net-web-api\" target=\"_blank\" title=\"https://github.com/brianpos/fhir-net-web-api\">https://github.com/brianpos/fhir-net-web-api</a><br>\nTheres an example project in there to show how to use it.<br>\nComes in either full net framework or aspnet core.</p>",
        "id": 163168221,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1555056083
    },
    {
        "content": "<p>That handles all the controller and formatting stuff for you, and you implement the storage logic.</p>",
        "id": 163168362,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1555056211
    },
    {
        "content": "<p>(all the stuff that Yunwei mentions)</p>",
        "id": 163168382,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1555056235
    },
    {
        "content": "<p>I'm planning to push it as a NuGet package, but not there just yet.</p>",
        "id": 163168579,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1555056422
    },
    {
        "content": "<p>Hi Brian and Yunwei,</p>\n<p>Thanks a lot for the explanation, I will try that. much appreciated.</p>",
        "id": 163202759,
        "sender_full_name": "hannah",
        "timestamp": 1555084484
    }
]