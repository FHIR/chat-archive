[
    {
        "content": "<p>Hello all,<br>\nI'm specifically wanting to add an extension to the questionnaire element in the QuestionnaireResponse resource. It is not possible to simply call the extension as I can with a domain resource. That is, I would want to do something like :<br>\nquestionnaire_response = QuestionnaireResponse()<br>\nquestionnaire_response.questionnaire.extension = [<br>\n{<br>\n\"url\": \"<a href=\"http://hl7.org/fhir/StructureDefinition/display\">http://hl7.org/fhir/StructureDefinition/display</a>\",<br>\n\"valueString\": \"KOLS skjema\"<br>\n}<br>\n]</p>\n<p>But this is not possible as questionnaire (a Canonical) does not accept extension.<br>\nI'm using the fhirclient library.</p>\n<p>Does anyone have some tips?<br>\nBest,<br>\nKristine</p>",
        "id": 268515989,
        "sender_full_name": "Kristine S. Beckmann",
        "timestamp": 1642586623
    },
    {
        "content": "<p>It's currently not possible to add extensions to primitive elements with the fhirclient library. You may want to check out the fhir.resources library which supports extensions on primitive types.</p>",
        "id": 268530464,
        "sender_full_name": "Julian Sass",
        "timestamp": 1642594832
    },
    {
        "content": "<p>Okay, thanks for the tip!</p>",
        "id": 268532178,
        "sender_full_name": "Kristine S. Beckmann",
        "timestamp": 1642595869
    },
    {
        "content": "<p>here is a jupyter file on how to primitive extension using fhir.resources and why I switched thanks again <span class=\"user-mention\" data-user-id=\"197422\">@Md Nazrul Islam</span> !</p>\n<p><a href=\"https://github.com/Healthedata1/MyNotebooks/blob/master/fhirprimitiveextensions.ipynb\">https://github.com/Healthedata1/MyNotebooks/blob/master/fhirprimitiveextensions.ipynb</a></p>",
        "id": 268575346,
        "sender_full_name": "Eric Haas",
        "timestamp": 1642613532
    },
    {
        "content": "<p>That's great, thanks! :D</p>",
        "id": 268647495,
        "sender_full_name": "Kristine S. Beckmann",
        "timestamp": 1642659902
    }
]