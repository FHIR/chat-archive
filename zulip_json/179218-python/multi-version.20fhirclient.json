[
    {
        "content": "<p>Moving this discussion <a href=\"https://groups.google.com/d/msg/smart-on-fhir/pqwmqTMYIzk/fF9y7V8DEAAJ\" target=\"_blank\" title=\"https://groups.google.com/d/msg/smart-on-fhir/pqwmqTMYIzk/fF9y7V8DEAAJ\">https://groups.google.com/d/msg/smart-on-fhir/pqwmqTMYIzk/fF9y7V8DEAAJ</a> here.<br>\nI have a PR to make fhirclient support multiple FHIR versions here <a href=\"https://github.com/smart-on-fhir/client-py/pull/81\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/client-py/pull/81\">https://github.com/smart-on-fhir/client-py/pull/81</a></p>\n<p>What is the best way to move forward with this? I could do a new PR that simply repackages the R4 models in a backward compatible way, then add support for DSTU2 and STU3 in a subsequent PR.</p>\n<p>Also, currently on fhirclient master most of the python 2.7 unit tests fail, I had fixed this in my PR - but should we just drop 2.7? Or should I just ignore the failures for now to minimize the size of the PR (fixing them requires regenerating all the unit test files)?</p>",
        "id": 178593998,
        "sender_full_name": "Andrew Wason",
        "timestamp": 1571578696
    },
    {
        "content": "<p>Thanks so much for your contribution, Andrew!<br>\nI think <span class=\"user-mention\" data-user-id=\"191339\">@Pascal Pfiffner</span> indeed suggested to break the PR up in multiple parts, to make it easier to digest. Your proposed break down seems to make sense, but I couldn't say for sure. Probably <span class=\"user-mention\" data-user-id=\"191660\">@Harold Solbrig</span> and Pascal are most qualified to judge? Or maybe  <span class=\"user-mention\" data-user-id=\"191648\">@Adam Culbertson</span> <span class=\"user-mention\" data-user-id=\"233081\">@Carl Anderson</span>?</p>",
        "id": 178634866,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1571646027
    },
    {
        "content": "<p>IMO the best way is to first move the existing models into a R4 subfolder and in follow-up PRs add the older versions back in. All other stuff like config changes should be done in separate PRs as well. But aware, <span class=\"user-mention\" data-user-id=\"191660\">@Harold Solbrig</span> 's team has been working on changes over the summer that should be ready soon, we probably want to wait for these before anything major lands. I think we decided to drop Python 2.x.</p>",
        "id": 178668797,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1571673208
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191339\">@Pascal Pfiffner</span>  OK, I repackaged R4 in this PR <a href=\"https://github.com/smart-on-fhir/client-py/pull/82\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/client-py/pull/82\">https://github.com/smart-on-fhir/client-py/pull/82</a></p>",
        "id": 178669400,
        "sender_full_name": "Andrew Wason",
        "timestamp": 1571673563
    },
    {
        "content": "<p>This will still have to wait for Harold's changes, and I'd also pull the CI integration out into a separate PR. FWIW I'm not the maintainer anymore.</p>",
        "id": 178670270,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1571674076
    },
    {
        "content": "<p>What branch is he working on so I can see if there will be any tricky conflicts? We need to use multiple versions in our app so hopefully this won't take too long. If the conflicts aren't that bad, we could merge either PR first and rebase/merge the other branch from master.</p>",
        "id": 178673614,
        "sender_full_name": "Andrew Wason",
        "timestamp": 1571676118
    },
    {
        "content": "<p>So since we need to support DSTU2, we switched back to v1.0.3 of fhirclient. We use an app_secret, but it looks like v1.0.3 has no support for that. So must we wait for my future series of PRs to be merged before we can use this?</p>",
        "id": 178898809,
        "sender_full_name": "Andrew Wason",
        "timestamp": 1571866246
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191660\">@Harold Solbrig</span> any timeframe for when you are going to land your changes?</p>",
        "id": 179358704,
        "sender_full_name": "Andrew Wason",
        "timestamp": 1572373342
    },
    {
        "content": "<blockquote>\n<p>Thanks so much for your contribution, Andrew!<br>\nI think <span class=\"user-mention silent\" data-user-id=\"191339\">Pascal Pfiffner</span> indeed suggested to break the PR up in multiple parts, to make it easier to digest. Your proposed break down seems to make sense, but I couldn't say for sure. Probably <span class=\"user-mention silent\" data-user-id=\"191660\">Harold Solbrig</span> and Pascal are most qualified to judge? Or maybe  <span class=\"user-mention silent\" data-user-id=\"191648\">Adam Culbertson</span> <span class=\"user-mention silent\" data-user-id=\"233081\">Carl Anderson</span>?</p>\n</blockquote>\n<p>Sure I can connect with Harold and see how we can keep this moving forward.</p>",
        "id": 179714489,
        "sender_full_name": "Adam Culbertson",
        "timestamp": 1572721616
    },
    {
        "content": "<p>Any response from Harold?</p>",
        "id": 181960247,
        "sender_full_name": "Andrew Wason",
        "timestamp": 1574800007
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191660\">@Harold Solbrig</span> are you around?</p>",
        "id": 181989632,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574830261
    },
    {
        "content": "<p>i've had a pull request sitting out there since may that i believe fixes part of this issue <a href=\"https://github.com/smart-on-fhir/client-py/pull/66\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/client-py/pull/66\">https://github.com/smart-on-fhir/client-py/pull/66</a> pascal commented and said it looks good, just need someone to merge it in</p>",
        "id": 182024329,
        "sender_full_name": "Brian Kolowitz",
        "timestamp": 1574865382
    },
    {
        "content": "<p>I've seen emails that <span class=\"user-mention\" data-user-id=\"191660\">@Harold Solbrig</span> and likely <span class=\"user-mention\" data-user-id=\"193513\">@Duncan Weatherston</span> had a community call on this, and notes should follow... I'll ping him by email again.</p>",
        "id": 182029155,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1574868467
    },
    {
        "content": "<p>I am now -- I kind of lost track of zulip so I hadn't been aware that this conversation was going on</p>",
        "id": 182036900,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1574873347
    },
    {
        "content": "<p>Need to catch up and will respond shortly</p>",
        "id": 182036938,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1574873369
    },
    {
        "content": "<p>Most immediate need - the pull request.  Accepted and merged</p>",
        "id": 182037476,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1574873746
    },
    {
        "content": "<p>Next thing -- I've proposed separating the client.py code (server.py / auth.py) from the python rendering of the fhir models.  What is the best way to proceed to discuss, etc. this item?</p>",
        "id": 182037631,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1574873845
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191660\">@Harold Solbrig</span> I did that in my original PR, I package each fhir version models in separate python packages and then allow the user to select which version they want to use. See my branch here <a href=\"https://github.com/smart-on-fhir/client-py/compare/master...rectalogic:versioning\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/client-py/compare/master...rectalogic:versioning\">https://github.com/smart-on-fhir/client-py/compare/master...rectalogic:versioning</a></p>\n<p>This was my original PR, but I was asked to introduce it gradually. So currently I have a PR that just repackages the R4 models here <a href=\"https://github.com/smart-on-fhir/client-py/pull/82\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/client-py/pull/82\">https://github.com/smart-on-fhir/client-py/pull/82</a> - but I was told this cannot be merged until some changes you are working on have been merged. So I have been waiting a month for your changes to land so that this PR can be reviewed.  Once that is done I will submit another PR for the rest of the changes that support DSTU2 and STU3 simultaneously with R4.</p>",
        "id": 182038364,
        "sender_full_name": "Andrew Wason",
        "timestamp": 1574874277
    },
    {
        "content": "<p>Apologies for the wait.  Should we have a short voice chat to sync up?  I could be available on Friday...</p>",
        "id": 182038526,
        "sender_full_name": "Harold Solbrig",
        "timestamp": 1574874380
    },
    {
        "content": "<p>Next week would work better for me, pretty much any day next week. <span class=\"user-mention\" data-user-id=\"191660\">@Harold Solbrig</span> let me know what day/time works for you</p>",
        "id": 182039369,
        "sender_full_name": "Andrew Wason",
        "timestamp": 1574874942
    },
    {
        "content": "<p>Hmm, fhirclient <code>test_models.sh</code> relies on the downloaded json spec files<br>\n<a href=\"https://github.com/smart-on-fhir/client-py/blob/master/test_models.sh\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/client-py/blob/master/test_models.sh\">https://github.com/smart-on-fhir/client-py/blob/master/test_models.sh</a><br>\nBut these recently changed - <a href=\"http://hl7.org/fhir/R4/examples-json.zip\" target=\"_blank\" title=\"http://hl7.org/fhir/R4/examples-json.zip\">http://hl7.org/fhir/R4/examples-json.zip</a> used to be 4.0.0 but is now 4.0.1. So <code>fhir-parser/generate.py --load-only</code> downloads the 4.0.1 specs.<br>\nIs there somewhere to download the 4.0.0 spec files since that is what fhirclient models were generated using - all the unit tests fail when using the 4.0.1 spec files.</p>",
        "id": 182046678,
        "sender_full_name": "Andrew Wason",
        "timestamp": 1574880096
    },
    {
        "content": "<p>It could be part of the Zip download here: <a href=\"http://hl7.org/fhir/directory.html\" target=\"_blank\" title=\"http://hl7.org/fhir/directory.html\">http://hl7.org/fhir/directory.html</a></p>",
        "id": 182105659,
        "sender_full_name": "Ward Weistra",
        "timestamp": 1574945184
    },
    {
        "content": "<p>shouldn't be any different for the examples?</p>",
        "id": 182119010,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1574956371
    },
    {
        "content": "<p>Only when generating new models do the unit tests need to run so one can validate the generation. Maybe they should be spun out of the client?</p>",
        "id": 182140265,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1574982010
    },
    {
        "content": "<p>I'll change my PR to make running those unit tests a separate task that can be run only when validating new models.</p>",
        "id": 182351720,
        "sender_full_name": "Andrew Wason",
        "timestamp": 1575298050
    },
    {
        "content": "<p>So what's the plan now? Can someone review my initial PR <a href=\"https://github.com/smart-on-fhir/client-py/pull/82\" target=\"_blank\" title=\"https://github.com/smart-on-fhir/client-py/pull/82\">https://github.com/smart-on-fhir/client-py/pull/82</a> and then we can move on to packaging the DSTU2 and STU3 models and support multiple versions? Or do we still need to wait for <span class=\"user-mention\" data-user-id=\"191660\">@Harold Solbrig</span> to merge his changes first?</p>",
        "id": 182356154,
        "sender_full_name": "Andrew Wason",
        "timestamp": 1575300524
    },
    {
        "content": "<p>I'm going to close my PR. We haven't been able to get any traction with this and so we ended up just writing or own SMART on FHIR implementation that works with any version and meets our needs.</p>",
        "id": 183271763,
        "sender_full_name": "Andrew Wason",
        "timestamp": 1576165746
    },
    {
        "content": "<p>Hi, <span class=\"user-mention\" data-user-id=\"244797\">@Andrew Wason</span> !<br>\nAre you going to opensource your solution?<br>\nDid you check <a href=\"https://github.com/beda-software/fhir-py\" target=\"_blank\" title=\"https://github.com/beda-software/fhir-py\">https://github.com/beda-software/fhir-py</a>?<br>\nWe support multiple FHIR versions out of the box.</p>",
        "id": 184996503,
        "sender_full_name": "Ilya Beda",
        "timestamp": 1578391383
    },
    {
        "content": "<blockquote>\n<p>Are you going to opensource your solution?<br>\nDid you check <a href=\"https://github.com/beda-software/fhir-py\" target=\"_blank\" title=\"https://github.com/beda-software/fhir-py\">https://github.com/beda-software/fhir-py</a>?</p>\n</blockquote>\n<p>I did check out fhir-py, it didn't seem to support SMART on FHIR which we need. We need to use SMART to authenticate the EMR user with our application (SSO) and our solution is kind of tightly coupled with our existing SSO implementations so I don't think I'll try to extract it to opensource it. Now that we have the SMART piece implemented I think we may end up using fhir-py in the future. For now we only needed one FHIR api so I just did a simple implementation using requests.</p>",
        "id": 185019141,
        "sender_full_name": "Andrew Wason",
        "timestamp": 1578409805
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"244797\">@Andrew Wason</span> for the detailed answer, <br>\nwe are going to add SMART on FHIR support soon.</p>\n<p>Why do you decide to use requests over asyncio for the HTTP layer?  <br>\nWe are still debating regarding supporting requests in parallel with our primary technology -  asincio.<br>\nMaybe your use cases can show where requests may be preferable.</p>",
        "id": 185094823,
        "sender_full_name": "Ilya Beda",
        "timestamp": 1578477852
    },
    {
        "content": "<p>I don't see an easy way to incrementally adopt asyncio. This is in a pyramid/uwsgi-based webapp and using mongodb database with pymongo. So we would have to rewrite all the database code using an async driver like motor, move to some async asgi server instead of uwsgi and so on. It seems like this would mean replacing nearly every part of our technology stack and rewriting all the code based on it.</p>",
        "id": 185122269,
        "sender_full_name": "Andrew Wason",
        "timestamp": 1578497033
    }
]