[
    {
        "content": "<p>I tried to created a FHIRString class or FHIRPrimitive class,  I can create the  object   ( e.g.  _text  inheriets id and extension) and can use as_json(),  but I can't get it to hang off a larger object such as CodeableConcept.text.    This is my first foray into python class inheritance and I am not sure why the FHIRprimitive class is not  working like  the Element Class and adding new element Properties ( id and extension) to the base.    I've looked at the Swift code but trying to map that to Python has not been easy. </p>\n<p>here is some code...</p>",
        "id": 154026440,
        "sender_full_name": "Eric Haas",
        "timestamp": 1545249327
    },
    {
        "content": "<p>I tried just extending the Element class which did not work and now I think I know why</p>\n<p>I think the add'l properties need to define in the abstract base class</p>",
        "id": 154026441,
        "sender_full_name": "Eric Haas",
        "timestamp": 1545249752
    },
    {
        "content": "<p>It tried using a separate FHIRPrimitive class too which was patterned after the Element class.</p>",
        "id": 154026444,
        "sender_full_name": "Eric Haas",
        "timestamp": 1545249908
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 154026445,
        "sender_full_name": "Eric Haas",
        "timestamp": 1545250041
    },
    {
        "content": "<p>OK I got it to work .. sort of.... here is my code:</p>\n<p>FHIRPrimitive Class:</p>\n<div class=\"codehilite\"><pre><span></span>import logging\nfrom . import element\n\n\nclass FHIRPrimitive(element.Element):\n    &quot;&quot;&quot; FHIR Primitive Class - is just an empty class for now\n    &quot;&quot;&quot;\n\n    resource_type = &quot;FHIRPrimitive&quot;\n\n    def __init__(self, jsondict=None, strict=True):\n        &quot;&quot;&quot; Initialize all valid properties.\n\n        :raises: FHIRValidationError on validation errors, unless strict is False\n        :param dict jsondict: A JSON dictionary to use for initialization\n        :param bool strict: If True (the default), invalid variables will raise a TypeError\n        &quot;&quot;&quot;\n\n        # setattr(self,sunder_name,None)  # how do I get the name\n\n        super(FHIRPrimitive, self).__init__(jsondict=jsondict, strict=strict)\n</pre></div>",
        "id": 154026514,
        "sender_full_name": "Eric Haas",
        "timestamp": 1545272724
    },
    {
        "content": "<p>CodeableConcpept Class:  notice I hardcoded  '_text' to init and elementProperties.. I tried to do this dynamically but was not successful.</p>\n<div class=\"codehilite\"><pre><span></span>import logging\nfrom . import element\n\n\nclass CodeableConcept(element.Element):\n    &quot;&quot;&quot; Concept - reference to a terminology or just  text.\n\n    A concept that may be defined by a formal reference to a terminology or\n    ontology or may be provided by text.\n    &quot;&quot;&quot;\n\n    resource_type = &quot;CodeableConcept&quot;\n\n    def __init__(self, jsondict=None, strict=True):\n        &quot;&quot;&quot; Initialize all valid properties.\n\n        :raises: FHIRValidationError on validation errors, unless strict is False\n        :param dict jsondict: A JSON dictionary to use for initialization\n        :param bool strict: If True (the default), invalid variables will raise a TypeError\n        &quot;&quot;&quot;\n        self.coding = None\n        &quot;&quot;&quot; Code defined by a terminology system.\n        List of `Coding` items (represented as `dict` in JSON). &quot;&quot;&quot;\n\n        self.text = None\n        &quot;&quot;&quot; Plain text representation of the concept.\n        Type `str`. &quot;&quot;&quot;\n\n        self._text = None\n        &quot;&quot;&quot; addon for text id and extension. &quot;&quot;&quot;\n\n        super(CodeableConcept, self).__init__(jsondict=jsondict, strict=strict)\n\n    def elementProperties(self):\n        from . import coding\n        from . import fhirprimitive\n        js = super().elementProperties()\n        js.extend([\n            (&quot;coding&quot;, &quot;coding&quot;, coding.Coding, True, None, False),\n            (&quot;text&quot;, &quot;text&quot;, str, False, None, False),\n            (&#39;_text&#39;, &#39;_text&#39;, fhirprimitive.FHIRPrimitive, False, None, False)\n        ])\n        logging.info(&quot;elementProperties for CodeableConcept returning js&quot;)\n        return js\n</pre></div>",
        "id": 154026517,
        "sender_full_name": "Eric Haas",
        "timestamp": 1545273094
    },
    {
        "content": "<p>so....</p>\n<div class=\"codehilite\"><pre><span></span>from json import dumps, loads\nfrom fhirr4models import codeableconcept as C\nfrom fhirr4models import fhirprimitive as FP\nfrom fhirr4models import extension as X\n\nmy_c = C.CodeableConcept()\nmy_c.text = &quot;foo&quot;\n_text = FP.FHIRPrimitive()\n_text.id = &#39;123&#39;\nmy_extension = X.Extension({&quot;url&quot;:&quot;http://example.org/fhir/StructureDefinition/text&quot;,&quot;valueString&quot;:&quot;Easter 1970&quot;})\n_text.extension = [my_extension]\nmy_c._text = _text\nprint(my_c.as_json())\n</pre></div>",
        "id": 154026518,
        "sender_full_name": "Eric Haas",
        "timestamp": 1545273291
    },
    {
        "content": "<p>returns....</p>\n<p><code>{'text': 'foo', '_text': {'extension': [{'url': 'http://example.org/fhir/StructureDefinition/text', 'valueString': 'Easter 1970'}], 'id': '123'}}</code></p>",
        "id": 154026519,
        "sender_full_name": "Eric Haas",
        "timestamp": 1545273319
    },
    {
        "content": "<p>so the question is do we try to initialize the Class  and all the primitives on the fly or just regenerate the class  definitions with all the '_name' element for all the primitives? ( except for id and extension)?</p>",
        "id": 154026520,
        "sender_full_name": "Eric Haas",
        "timestamp": 1545273529
    },
    {
        "content": "<p>I wlll take a look at the class generator to see If I can add this.</p>",
        "id": 154026715,
        "sender_full_name": "Eric Haas",
        "timestamp": 1545325547
    },
    {
        "content": "<p>could you use the <code>my_c.update_with_json({'extension': [{'url': 'http://example.org/fhir/StructureDefinition/text', 'valueString': 'Easter 1970'}]})</code> ?  The <code>Element</code> already holds a collection for <code>extension</code></p>",
        "id": 154026840,
        "sender_full_name": "Geoff Low",
        "timestamp": 1545346450
    },
    {
        "content": "<p>I tried but for primitive extensions really are adding an element to the class  or a new name value pair to the dict.   So I am just regenerating the models to include all these elements.</p>",
        "id": 154026851,
        "sender_full_name": "Eric Haas",
        "timestamp": 1545353992
    },
    {
        "content": "<p>for example:</p>\n<p>for Patient I just generated this... ( have not tested fully for side effects)</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"c1\"># -*- coding: utf-8 -*-</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\">#  Generated from FHIR 3.6.0-bd605d07 (http://hl7.org/fhir/StructureDefinition/Patient) on 2018-12-20.</span>\n<span class=\"c1\">#  2018, SMART Health IT.</span>\n\n\n<span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">domainresource</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Patient</span><span class=\"p\">(</span><span class=\"n\">domainresource</span><span class=\"o\">.</span><span class=\"n\">DomainResource</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; Information about an individual or animal receiving health care services.</span>\n\n<span class=\"sd\">    Demographics and other administrative information about an individual or</span>\n<span class=\"sd\">    animal receiving care or other health-related services.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">resource_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;Patient&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">jsondict</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">strict</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot; Initialize all valid properties.</span>\n\n<span class=\"sd\">        :raises: FHIRValidationError on validation errors, unless strict is False</span>\n<span class=\"sd\">        :param dict jsondict: A JSON dictionary to use for initialization</span>\n<span class=\"sd\">        :param bool strict: If True (the default), invalid variables will raise a TypeError</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">active</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; Whether this patient&#39;s record is in active use.</span>\n<span class=\"sd\">        Type `bool`. &quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_active</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; extension for fhir primitive  active&quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; An address for the individual.</span>\n<span class=\"sd\">        List of `Address` items (represented as `dict` in JSON). &quot;&quot;&quot;</span>\n\n\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">birthDate</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; The date of birth for the individual.</span>\n<span class=\"sd\">        Type `FHIRDate` (represented as `str` in JSON). &quot;&quot;&quot;</span>\n\n\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">communication</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; A language which may be used to communicate with the patient about</span>\n<span class=\"sd\">        his or her health.</span>\n<span class=\"sd\">        List of `PatientCommunication` items (represented as `dict` in JSON). &quot;&quot;&quot;</span>\n\n\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">contact</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; A contact party (e.g. guardian, partner, friend) for the patient.</span>\n<span class=\"sd\">        List of `PatientContact` items (represented as `dict` in JSON). &quot;&quot;&quot;</span>\n\n\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deceasedBoolean</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; Indicates if the individual is deceased or not.</span>\n<span class=\"sd\">        Type `bool`. &quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_deceasedBoolean</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; extension for fhir primitive  deceasedBoolean&quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">deceasedDateTime</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; Indicates if the individual is deceased or not.</span>\n<span class=\"sd\">        Type `FHIRDate` (represented as `str` in JSON). &quot;&quot;&quot;</span>\n\n\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gender</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; male | female | other | unknown.</span>\n<span class=\"sd\">        Type `str`. &quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_gender</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; extension for fhir primitive  gender&quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">generalPractitioner</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; Patient&#39;s nominated primary care provider.</span>\n<span class=\"sd\">        List of `FHIRReference` items (represented as `dict` in JSON). &quot;&quot;&quot;</span>\n\n\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">identifier</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; An identifier for this patient.</span>\n<span class=\"sd\">        List of `Identifier` items (represented as `dict` in JSON). &quot;&quot;&quot;</span>\n\n\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">link</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; Link to another patient resource that concerns the same actual</span>\n<span class=\"sd\">        person.</span>\n<span class=\"sd\">        List of `PatientLink` items (represented as `dict` in JSON). &quot;&quot;&quot;</span>\n\n\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">managingOrganization</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; Organization that is the custodian of the patient record.</span>\n<span class=\"sd\">        Type `FHIRReference` (represented as `dict` in JSON). &quot;&quot;&quot;</span>\n\n\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">maritalStatus</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; Marital (civil) status of a patient.</span>\n<span class=\"sd\">        Type `CodeableConcept` (represented as `dict` in JSON). &quot;&quot;&quot;</span>\n\n\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">multipleBirthBoolean</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; Whether patient is part of a multiple birth.</span>\n<span class=\"sd\">        Type `bool`. &quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_multipleBirthBoolean</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; extension for fhir primitive  multipleBirthBoolean&quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">multipleBirthInteger</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; Whether patient is part of a multiple birth.</span>\n<span class=\"sd\">        Type `int`. &quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_multipleBirthInteger</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; extension for fhir primitive  multipleBirthInteger&quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; A name associated with the patient.</span>\n<span class=\"sd\">        List of `HumanName` items (represented as `dict` in JSON). &quot;&quot;&quot;</span>\n\n\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">photo</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; Image of the patient.</span>\n<span class=\"sd\">        List of `Attachment` items (represented as `dict` in JSON). &quot;&quot;&quot;</span>\n\n\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">telecom</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; A contact detail for the individual.</span>\n<span class=\"sd\">        List of `ContactPoint` items (represented as `dict` in JSON). &quot;&quot;&quot;</span>\n\n\n\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">Patient</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">jsondict</span><span class=\"o\">=</span><span class=\"n\">jsondict</span><span class=\"p\">,</span> <span class=\"n\">strict</span><span class=\"o\">=</span><span class=\"n\">strict</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">elementProperties</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">js</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">Patient</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">elementProperties</span><span class=\"p\">()</span>\n        <span class=\"n\">js</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;active&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;active&quot;</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;_active&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_active&quot;</span><span class=\"p\">,</span><span class=\"n\">fhirprimitive</span><span class=\"o\">.</span><span class=\"n\">FHIRPrimitive</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;address&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;address&quot;</span><span class=\"p\">,</span> <span class=\"n\">address</span><span class=\"o\">.</span><span class=\"n\">Address</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;birthDate&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;birthDate&quot;</span><span class=\"p\">,</span> <span class=\"n\">fhirdate</span><span class=\"o\">.</span><span class=\"n\">FHIRDate</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;communication&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;communication&quot;</span><span class=\"p\">,</span> <span class=\"n\">PatientCommunication</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;contact&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;contact&quot;</span><span class=\"p\">,</span> <span class=\"n\">PatientContact</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;deceasedBoolean&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;deceasedBoolean&quot;</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"s2\">&quot;deceased&quot;</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;_deceasedBoolean&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_deceasedBoolean&quot;</span><span class=\"p\">,</span><span class=\"n\">fhirprimitive</span><span class=\"o\">.</span><span class=\"n\">FHIRPrimitive</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;deceasedDateTime&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;deceasedDateTime&quot;</span><span class=\"p\">,</span> <span class=\"n\">fhirdate</span><span class=\"o\">.</span><span class=\"n\">FHIRDate</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"s2\">&quot;deceased&quot;</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;gender&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;gender&quot;</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;_gender&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_gender&quot;</span><span class=\"p\">,</span><span class=\"n\">fhirprimitive</span><span class=\"o\">.</span><span class=\"n\">FHIRPrimitive</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;generalPractitioner&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;generalPractitioner&quot;</span><span class=\"p\">,</span> <span class=\"n\">fhirreference</span><span class=\"o\">.</span><span class=\"n\">FHIRReference</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;identifier&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;identifier&quot;</span><span class=\"p\">,</span> <span class=\"n\">identifier</span><span class=\"o\">.</span><span class=\"n\">Identifier</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;link&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;link&quot;</span><span class=\"p\">,</span> <span class=\"n\">PatientLink</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;managingOrganization&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;managingOrganization&quot;</span><span class=\"p\">,</span> <span class=\"n\">fhirreference</span><span class=\"o\">.</span><span class=\"n\">FHIRReference</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;maritalStatus&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;maritalStatus&quot;</span><span class=\"p\">,</span> <span class=\"n\">codeableconcept</span><span class=\"o\">.</span><span class=\"n\">CodeableConcept</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;multipleBirthBoolean&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;multipleBirthBoolean&quot;</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"s2\">&quot;multipleBirth&quot;</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;_multipleBirthBoolean&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_multipleBirthBoolean&quot;</span><span class=\"p\">,</span><span class=\"n\">fhirprimitive</span><span class=\"o\">.</span><span class=\"n\">FHIRPrimitive</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;multipleBirthInteger&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;multipleBirthInteger&quot;</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"s2\">&quot;multipleBirth&quot;</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;_multipleBirthInteger&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_multipleBirthInteger&quot;</span><span class=\"p\">,</span><span class=\"n\">fhirprimitive</span><span class=\"o\">.</span><span class=\"n\">FHIRPrimitive</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;name&quot;</span><span class=\"p\">,</span> <span class=\"n\">humanname</span><span class=\"o\">.</span><span class=\"n\">HumanName</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;photo&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;photo&quot;</span><span class=\"p\">,</span> <span class=\"n\">attachment</span><span class=\"o\">.</span><span class=\"n\">Attachment</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;telecom&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;telecom&quot;</span><span class=\"p\">,</span> <span class=\"n\">contactpoint</span><span class=\"o\">.</span><span class=\"n\">ContactPoint</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n        <span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"n\">js</span>\n\n\n<span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">backboneelement</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">PatientCommunication</span><span class=\"p\">(</span><span class=\"n\">backboneelement</span><span class=\"o\">.</span><span class=\"n\">BackboneElement</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; A language which may be used to communicate with the patient about his or</span>\n<span class=\"sd\">    her health.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">resource_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;PatientCommunication&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">jsondict</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">strict</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot; Initialize all valid properties.</span>\n\n<span class=\"sd\">        :raises: FHIRValidationError on validation errors, unless strict is False</span>\n<span class=\"sd\">        :param dict jsondict: A JSON dictionary to use for initialization</span>\n<span class=\"sd\">        :param bool strict: If True (the default), invalid variables will raise a TypeError</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">language</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; The language which can be used to communicate with the patient</span>\n<span class=\"sd\">        about his or her health.</span>\n<span class=\"sd\">        Type `CodeableConcept` (represented as `dict` in JSON). &quot;&quot;&quot;</span>\n\n\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">preferred</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; Language preference indicator.</span>\n<span class=\"sd\">        Type `bool`. &quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_preferred</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; extension for fhir primitive  preferred&quot;&quot;&quot;</span>\n\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">PatientCommunication</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">jsondict</span><span class=\"o\">=</span><span class=\"n\">jsondict</span><span class=\"p\">,</span> <span class=\"n\">strict</span><span class=\"o\">=</span><span class=\"n\">strict</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">elementProperties</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">js</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">PatientCommunication</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">elementProperties</span><span class=\"p\">()</span>\n        <span class=\"n\">js</span><span class=\"o\">.</span><span class=\"n\">extend</span><span class=\"p\">([</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;language&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;language&quot;</span><span class=\"p\">,</span> <span class=\"n\">codeableconcept</span><span class=\"o\">.</span><span class=\"n\">CodeableConcept</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">True</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;preferred&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;preferred&quot;</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n            <span class=\"p\">(</span><span class=\"s2\">&quot;_preferred&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;_preferred&quot;</span><span class=\"p\">,</span><span class=\"n\">fhirprimitive</span><span class=\"o\">.</span><span class=\"n\">FHIRPrimitive</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"bp\">False</span><span class=\"p\">),</span>\n        <span class=\"p\">])</span>\n        <span class=\"k\">return</span> <span class=\"n\">js</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PatientContact</span><span class=\"p\">(</span><span class=\"n\">backboneelement</span><span class=\"o\">.</span><span class=\"n\">BackboneElement</span><span class=\"p\">):</span>\n    <span class=\"sd\">&quot;&quot;&quot; A contact party (e.g. guardian, partner, friend) for the patient.</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"n\">resource_type</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;PatientContact&quot;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">jsondict</span><span class=\"o\">=</span><span class=\"bp\">None</span><span class=\"p\">,</span> <span class=\"n\">strict</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">):</span>\n        <span class=\"sd\">&quot;&quot;&quot; Initialize all valid properties.</span>\n\n<span class=\"sd\">        :raises: FHIRValidationError on validation errors, unless strict is False</span>\n<span class=\"sd\">        :param dict jsondict: A JSON dictionary to use for initialization</span>\n<span class=\"sd\">        :param bool strict: If True (the default), invalid variables will raise a TypeError</span>\n<span class=\"sd\">        &quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; Address for the contact person.</span>\n<span class=\"sd\">        Type `Address` (represented as `dict` in JSON). &quot;&quot;&quot;</span>\n\n\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">gender</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; male | female | other | unknown.</span>\n<span class=\"sd\">        Type `str`. &quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_gender</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; extension for fhir primitive  gender&quot;&quot;&quot;</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; A name associated with the contact person.</span>\n<span class=\"sd\">        Type `HumanName` (represented as `dict` in JSON). &quot;&quot;&quot;</span>\n\n\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">organization</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"sd\">&quot;&quot;&quot; Organization that is associated with the contact.</span>\n<span class=\"sd\">        Type `FHIRReference` (represented as `dict` in JSON). &quot;&quot;&quot;</span>\n\n\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">period</span> <span class=\"o\">=</span> <span class=\"bp\">None</span>\n\n        <span class=\"s2\">&quot;&quot;&quot; The period during which this contact person or organization</span>\n</pre></div>",
        "id": 154026852,
        "sender_full_name": "Eric Haas",
        "timestamp": 1545354083
    },
    {
        "content": "<p>Then they are avaiable when needed for use other wise the primitives behave normally.</p>",
        "id": 154026853,
        "sender_full_name": "Eric Haas",
        "timestamp": 1545354146
    },
    {
        "content": "<p>I could not figure out how to access the subclass element name in the superclass so I regenerated all the classes instead.</p>",
        "id": 154026871,
        "sender_full_name": "Eric Haas",
        "timestamp": 1545362098
    },
    {
        "content": "<p>OK so I'm ready to do a PR.  there are two systemic unit test warnings....<br>\none for unit tests on FHIRReference</p>\n<p>e.g...</p>\n<div class=\"codehilite\"><pre><span></span>WARNING:fhirparser:Unknown property &quot;patient.reference&quot; in unit test on FHIRReference in downloads/claimresponse-example-unsolicited-preauth.json\n</pre></div>",
        "id": 154027021,
        "sender_full_name": "Eric Haas",
        "timestamp": 1545594256
    },
    {
        "content": "<p>and one for Resource</p>\n<p>e..g,...</p>\n<div class=\"codehilite\"><pre><span></span>WARNING:fhirparser:Unknown property &quot;contained[0].status&quot; in unit test on Resource in downloads/plandefinition-example-kdn5-simplified.json\n</pre></div>",
        "id": 154027022,
        "sender_full_name": "Eric Haas",
        "timestamp": 1545594338
    },
    {
        "content": "<p>Could not figure out what the unit test was testing and why these errors arise  <span class=\"user-mention\" data-user-id=\"191339\">@Pascal Pfiffner</span> ?</p>",
        "id": 154027023,
        "sender_full_name": "Eric Haas",
        "timestamp": 1545594388
    },
    {
        "content": "<p>(deleted)</p>",
        "id": 154027025,
        "sender_full_name": "Eric Haas",
        "timestamp": 1545599133
    }
]