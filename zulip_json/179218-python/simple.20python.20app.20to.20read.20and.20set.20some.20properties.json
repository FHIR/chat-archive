[
    {
        "content": "<p>Hi. I am thinking of making a simple script that reads a few variables from FHIR resources, whether they are xml or json.<br>\nThe variables are only 3 or 4.<br>\nI'm wondering if the existing FHIR libraries will allow me to abstract from all that, and simply pass the fhirpath and let the library do the rest.</p>\n<p>So instead of a </p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"n\">is_xml</span><span class=\"p\">):</span>\n  <span class=\"n\">var1</span> <span class=\"o\">=</span> <span class=\"n\">resourcexml</span><span class=\"o\">.</span><span class=\"n\">findall</span><span class=\"p\">(</span><span class=\"s2\">\"./path/to/element]\"</span><span class=\"p\">)</span>\n<span class=\"k\">elif</span> <span class=\"p\">(</span><span class=\"n\">is_json</span><span class=\"p\">):</span>\n  <span class=\"n\">var1</span> <span class=\"o\">=</span> <span class=\"n\">resourcejson</span><span class=\"p\">[</span><span class=\"n\">path</span><span class=\"p\">][</span><span class=\"n\">to</span><span class=\"p\">][</span><span class=\"n\">element</span><span class=\"p\">]</span>\n</code></pre></div>\n<p>I would like to have  a</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"n\">var1</span> <span class=\"o\">=</span> <span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"p\">,</span> <span class=\"n\">path_to_element</span><span class=\"p\">)</span>\n</code></pre></div>",
        "id": 230983752,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1616137645
    },
    {
        "content": "<p>(don't really mind the syntax.)</p>",
        "id": 230983806,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1616137683
    },
    {
        "content": "<p>Is that available in the current libraries?</p>",
        "id": 230983828,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1616137692
    },
    {
        "content": "<p>I can do this manually but if I can reuse something, that would be better</p>",
        "id": 230983870,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1616137722
    },
    {
        "content": "<p>anyone?</p>",
        "id": 231090773,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1616188393
    },
    {
        "content": "<p>Can i use one of the libraries to just get values from resource files using a FHIR path expression?</p>",
        "id": 231090940,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1616188433
    },
    {
        "content": "<p>I use the libraries but never use fhirpath... I just grab value directly as a class attribute.   or using get() method.on a dicf if not using FHIR models.   maybe <span class=\"user-mention\" data-user-id=\"196255\">@Ilya Beda</span> has python fhirpath engine.</p>",
        "id": 231169387,
        "sender_full_name": "Eric Haas",
        "timestamp": 1616271882
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191832\">@Jose Costa Teixeira</span> <br>\nHere is a FHIRPath implementation in python <a href=\"https://github.com/beda-software/fhirpath-py\">https://github.com/beda-software/fhirpath-py</a><br>\n<a href=\"https://github.com/beda-software/fhir-py\">https://github.com/beda-software/fhir-py</a> only supports JSON.</p>",
        "id": 231234070,
        "sender_full_name": "Ilya Beda",
        "timestamp": 1616352859
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"197422\">@Md Nazrul Islam</span>  I noticed that the dict form date and datetime uses the datetime class..</p>\n<p>e.g ;</p>\n<div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"n\">my_patient</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"s1\">'subject1'</span><span class=\"p\">,</span>\n <span class=\"s1\">'meta'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'profile'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient|4.0.0'</span><span class=\"p\">]},</span>\n <span class=\"s1\">'active'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n <span class=\"s1\">'address'</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Anytown'</span><span class=\"p\">,</span>\n   <span class=\"s1\">'country'</span><span class=\"p\">:</span> <span class=\"s1\">'USA'</span><span class=\"p\">,</span>\n   <span class=\"s1\">'line'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'100 Main St'</span><span class=\"p\">],</span>\n   <span class=\"s1\">'postalCode'</span><span class=\"p\">:</span> <span class=\"s1\">'99999'</span><span class=\"p\">,</span>\n   <span class=\"s1\">'state'</span><span class=\"p\">:</span> <span class=\"s1\">'CA'</span><span class=\"p\">,</span>\n   <span class=\"s1\">'text'</span><span class=\"p\">:</span> <span class=\"s1\">'100 Main St</span><span class=\"se\">\\n</span><span class=\"s1\">Anytown, CA 99999</span><span class=\"se\">\\n</span><span class=\"s1\">USA'</span><span class=\"p\">}],</span>\n <span class=\"s1\">'birthDate'</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">1964</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">19</span><span class=\"p\">),</span> <span class=\"c1\">#&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; datetime object &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>\n <span class=\"s1\">'communication'</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">'language'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'coding'</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">'code'</span><span class=\"p\">:</span> <span class=\"s1\">'en'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'display'</span><span class=\"p\">:</span> <span class=\"s1\">'English'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'system'</span><span class=\"p\">:</span> <span class=\"s1\">'urn:ietf:bcp:47'</span><span class=\"p\">}],</span>\n    <span class=\"s1\">'text'</span><span class=\"p\">:</span> <span class=\"s1\">'English'</span><span class=\"p\">}}],</span>\n <span class=\"s1\">'gender'</span><span class=\"p\">:</span> <span class=\"s1\">'male'</span><span class=\"p\">,</span>\n <span class=\"s1\">'identifier'</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">'system'</span><span class=\"p\">:</span> <span class=\"s1\">'http://example.org/pids'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"s1\">'1234'</span><span class=\"p\">}],</span>\n <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">'family'</span><span class=\"p\">:</span> <span class=\"s1\">'Doe'</span><span class=\"p\">,</span> <span class=\"s1\">'given'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'John'</span><span class=\"p\">,</span> <span class=\"s1\">'M'</span><span class=\"p\">]}],</span>\n <span class=\"s1\">'resourceType'</span><span class=\"p\">:</span> <span class=\"s1\">'Patient'</span><span class=\"p\">}</span>\n</code></pre></div>",
        "id": 231737777,
        "sender_full_name": "Eric Haas",
        "timestamp": 1616637921
    },
    {
        "content": "<p>I think this should be documented because the natural inclination would be to use  a string \"1964-06-19\"</p>",
        "id": 231738254,
        "sender_full_name": "Eric Haas",
        "timestamp": 1616638332
    },
    {
        "content": "<p>Do you have a sample using this + FastAPI?</p>",
        "id": 231738405,
        "sender_full_name": "Eric Haas",
        "timestamp": 1616638472
    },
    {
        "content": "<p>also the parse_raw method is choking on the json div element escape char \"\\\" ...</p>\n<p>e.g. </p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"nt\">\"resourceType\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Provenance\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"example\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"text\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"status\"</span><span class=\"p\">:</span> <span class=\"s2\">\"generated\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"div\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;div xmlns=\\\"http://www.w3.org/1999/xhtml\\\"&gt;procedure record authored on 27-June 2015 by Harold Hippocrates, MD Content extracted from XDS managed CDA Referral received 26-June as authorized by a referenced Consent.&lt;/div&gt;\"</span>\n  <span class=\"p\">},</span>\n<span class=\"err\">....</span>\n</code></pre></div>\n<p>give this error....</p>\n<div class=\"codehilite\"><pre><span></span><code>ValidationError: 1 validation error for Provenance\n__root__\n  Expecting &#39;,&#39; delimiter: line 6 column 25 (char 116) (type=value_error.jsondecode; msg=Expecting &#39;,&#39; delimiter;\n</code></pre></div>",
        "id": 231739366,
        "sender_full_name": "Eric Haas",
        "timestamp": 1616639378
    },
    {
        "content": "<p>double backslashes work.  may need a CR ...right?</p>",
        "id": 231739621,
        "sender_full_name": "Eric Haas",
        "timestamp": 1616639610
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191401\">Eric Haas</span> <a href=\"#narrow/stream/179218-python/topic/simple.20python.20app.20to.20read.20and.20set.20some.20properties/near/231737777\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"197422\">Md Nazrul Islam</span>  I noticed that the dict form date and datetime uses the datetime class..</p>\n<p>e.g ;</p>\n<p><div class=\"codehilite\" data-code-language=\"Python\"><pre><span></span><code><span class=\"n\">my_patient</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"s1\">'subject1'</span><span class=\"p\">,</span>\n <span class=\"s1\">'meta'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'profile'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient|4.0.0'</span><span class=\"p\">]},</span>\n <span class=\"s1\">'active'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n <span class=\"s1\">'address'</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Anytown'</span><span class=\"p\">,</span>\n   <span class=\"s1\">'country'</span><span class=\"p\">:</span> <span class=\"s1\">'USA'</span><span class=\"p\">,</span>\n   <span class=\"s1\">'line'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'100 Main St'</span><span class=\"p\">],</span>\n   <span class=\"s1\">'postalCode'</span><span class=\"p\">:</span> <span class=\"s1\">'99999'</span><span class=\"p\">,</span>\n   <span class=\"s1\">'state'</span><span class=\"p\">:</span> <span class=\"s1\">'CA'</span><span class=\"p\">,</span>\n   <span class=\"s1\">'text'</span><span class=\"p\">:</span> <span class=\"s1\">'100 Main St</span><span class=\"se\">\\n</span><span class=\"s1\">Anytown, CA 99999</span><span class=\"se\">\\n</span><span class=\"s1\">USA'</span><span class=\"p\">}],</span>\n <span class=\"s1\">'birthDate'</span><span class=\"p\">:</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">date</span><span class=\"p\">(</span><span class=\"mi\">1964</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">19</span><span class=\"p\">),</span> <span class=\"c1\">#&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; datetime object &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;</span>\n <span class=\"s1\">'communication'</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">'language'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'coding'</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">'code'</span><span class=\"p\">:</span> <span class=\"s1\">'en'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'display'</span><span class=\"p\">:</span> <span class=\"s1\">'English'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'system'</span><span class=\"p\">:</span> <span class=\"s1\">'urn:ietf:bcp:47'</span><span class=\"p\">}],</span>\n    <span class=\"s1\">'text'</span><span class=\"p\">:</span> <span class=\"s1\">'English'</span><span class=\"p\">}}],</span>\n <span class=\"s1\">'gender'</span><span class=\"p\">:</span> <span class=\"s1\">'male'</span><span class=\"p\">,</span>\n <span class=\"s1\">'identifier'</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">'system'</span><span class=\"p\">:</span> <span class=\"s1\">'http://example.org/pids'</span><span class=\"p\">,</span> <span class=\"s1\">'value'</span><span class=\"p\">:</span> <span class=\"s1\">'1234'</span><span class=\"p\">}],</span>\n <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"p\">[{</span><span class=\"s1\">'family'</span><span class=\"p\">:</span> <span class=\"s1\">'Doe'</span><span class=\"p\">,</span> <span class=\"s1\">'given'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'John'</span><span class=\"p\">,</span> <span class=\"s1\">'M'</span><span class=\"p\">]}],</span>\n <span class=\"s1\">'resourceType'</span><span class=\"p\">:</span> <span class=\"s1\">'Patient'</span><span class=\"p\">}</span>\n</code></pre></div><br>\n</p>\n</blockquote>\n<p>'BirthDate' is FHIR Date primitive type that should represent python's date object normally (unless full date is not provided, for example only year).<br>\nPydantic keep the original data type for <code>dict()</code>  method but when you will user <code>json()</code> method that value should be a string as you described.</p>\n<p>The issue with div value</p>\n<hr>\n<p>You are welcome to add issue here <a href=\"https://github.com/nazrulworld/fhir.resources/issues\">https://github.com/nazrulworld/fhir.resources/issues</a></p>",
        "id": 231746973,
        "sender_full_name": "Md Nazrul Islam",
        "timestamp": 1616647095
    }
]