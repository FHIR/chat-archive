[
    {
        "content": "<p>What can go inside the model parenthesis?  </p>\n<ul>\n<li>dict works</li>\n<li>json too</li>\n<li>another model?  </li>\n</ul>\n<div class=\"codehilite\"><pre><span></span>import fhirclient.models.questionnaire as Q\nimport fhirclient.models.coding as C\n\ne.g    valuecoding = C.Coding({&#39;code&#39;:&#39;code&#39;, &#39;system&#39;: &#39;system&#39;:&#39;display&#39;: &#39;display&#39;} )\noption = Q.QuestionnaireItemOption({valuecoding})\n</pre></div>",
        "id": 153953029,
        "sender_full_name": "Eric Haas",
        "timestamp": 1524082133
    },
    {
        "content": "<p>I'm no python expert, but I would do this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">option</span> <span class=\"o\">=</span> <span class=\"n\">Q</span><span class=\"o\">.</span><span class=\"n\">QuestionnaireItemOption</span><span class=\"p\">()</span>\n<span class=\"n\">option</span><span class=\"o\">.</span><span class=\"n\">valueCoding</span> <span class=\"o\">=</span> <span class=\"n\">valuecoding</span>\n</pre></div>",
        "id": 153953219,
        "sender_full_name": " Bob Milius",
        "timestamp": 1524156754
    },
    {
        "content": "<p><code>help(option)</code> says </p>\n<div class=\"codehilite\"><pre><span></span> |  __init__(self, jsondict=None, strict=True)\n |      Initialize all valid properties.\n |\n |      :raises: FHIRValidationError on validation errors, unless strict is False\n |      :param dict jsondict: A JSON dictionary to use for initialization\n |      :param bool strict: If True (the default), invalid variables will raise a TypeError\n</pre></div>\n\n\n<p>So it looks like you can put in a jsondict in the parens.<br>\nTried this and it also seems to work:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"n\">option</span> <span class=\"o\">=</span> <span class=\"n\">Q</span><span class=\"o\">.</span><span class=\"n\">QuestionnaireItemOption</span><span class=\"p\">({</span><span class=\"s1\">&#39;valueCoding&#39;</span><span class=\"p\">:</span><span class=\"n\">valuecoding</span><span class=\"o\">.</span><span class=\"n\">as_json</span><span class=\"p\">()})</span>\n<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">option</span><span class=\"o\">.</span><span class=\"n\">as_json</span><span class=\"p\">(),</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n\n<span class=\"p\">{</span>\n    <span class=\"s2\">&quot;valueCoding&quot;</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s2\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;code&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;display&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;display&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;system&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;system&quot;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>",
        "id": 153953223,
        "sender_full_name": " Bob Milius",
        "timestamp": 1524157968
    },
    {
        "content": "<p>It's designed to take an in-memory representation of FHIR-JSON (meaning technically it's a Python <code>dict</code>).</p>",
        "id": 153953231,
        "sender_full_name": "Pascal Pfiffner",
        "timestamp": 1524162163
    },
    {
        "content": "<p>ty</p>",
        "id": 153953252,
        "sender_full_name": "Eric Haas",
        "timestamp": 1524165397
    }
]