[
    {
        "content": "<p>Hi all, <br>\nfor expressing the character range (=text span) of a text mining annotation within a fhir Provenance resource, we (mainly @Kai Heitmann and @Simone Heckmann) suggest the following format:</p>\n<div class=\"codehilite\"><pre><span></span>&quot;extension&quot;: [\n    {\n        &quot;url&quot;: &quot;http://fhir.de/StructureDefinition/character-range/0.5&quot;,\n        &quot;valueRange&quot;: [\n            {\n                &quot;low&quot;: {&quot;value&quot;: 12},\n                &quot;high&quot;: {&quot;value&quot;: 24}\n            }\n        ]\n    }\n]\n</pre></div>",
        "id": 154020632,
        "sender_full_name": "Philipp Daumke",
        "timestamp": 1543006525
    },
    {
        "content": "<p>Might it be an idea to include an optional field (<code>snippet</code>, <code>context</code> or similar) for providing the range of text (with a buffer on either side) from which the concept in question was extracted? E.g if the generated resource is a <code>Condition</code> stating that the patient has pneumonia, one might have something like this inside the extension on the corresponding <code>Provenance</code>:</p>\n<div class=\"codehilite\"><pre><span></span>...\ncontext: &quot;(...)completed. It seems the patient suffers from pneumonia. This could(...)&quot;\n...\n</pre></div>\n\n\n<p>I will defer to NLP pros to say whether this is useful and feasible, but it might worth considering for the following reasons:</p>\n<p>1. It would give a (human) user the chance to evaluate how trustworthy the extraction is without retrieving further resources, opening documents etc.<br>\n2. It could be useful in contexts where it may be difficult to identify the correct text range if the text in question is not in a plain text file (this came up during the NLP session at the DevDays). E.g. It may be a PDF produced from a scan on which OCR was run and if the PDF includes company logos with text etc. it may be hard to tell exactly which character is number 234.</p>",
        "id": 154020788,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1543222006
    },
    {
        "content": "<p>I'd like to revisit this discussion: why not using a commonly used format like <a href=\"http://2011.bionlp-st.org/home/file-formats\" target=\"_blank\" title=\"http://2011.bionlp-st.org/home/file-formats\">http://2011.bionlp-st.org/home/file-formats</a> and transform this into a FHIR class like structure? For text annotations it has the information as Philipp suggested and it also contains the actual context.</p>",
        "id": 181833717,
        "sender_full_name": "Andr√© Sander",
        "timestamp": 1574696479
    },
    {
        "content": "<p>I like the idea of modeling this based on existing specifications, however, I am not sure whether the definition</p>\n<blockquote>\n<p>The start-offset is the index of the first character of the annotated span in the text (\".txt\" file), i.e. the number of characters in the document preceding it. The end-offset is the index of the first character after the annotated span. Thus, the character in the end-offset position is not included in the annotated span.</p>\n</blockquote>\n<p>is really unambiguous enough. E.g. it doesn't really say how whitespace is handled when counting the positions. Does anyone see that as an issue?</p>\n<p>Another question I am still struggling with is how to deal with the txt (OCR extract) in relation to the original document (PDF).<br>\nWhere do we keep the txt and how do we link it to the pdf...?</p>\n<p>A probably obvious thing would be to put it in DocumentReference.text (Narrative)<br>\nBecause that would allow for the additional functionality to run a full text search on the Document using the <code>_text</code>parameter.</p>\n<p>The character-range extension would then by default count the characters in <em>the Narrative</em> of the DocumentReference, not the Document in the Attachment...</p>",
        "id": 182001534,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1574846109
    },
    {
        "content": "<p>I have created an Extension based on the results of the discussion so far:<br>\n<a href=\"https://simplifier.net/semantischeanalyse/annotationcharacterrange\" target=\"_blank\" title=\"https://simplifier.net/semantischeanalyse/annotationcharacterrange\">https://simplifier.net/semantischeanalyse/annotationcharacterrange</a><br>\nIt has </p>\n<ul>\n<li>a <code>range</code>element of DataType <code>Range</code>with a low/high element, both inclusive as per FHIR definition of Range (in the bionlp description, the upper boundary is <em>ex</em>clusive!)</li>\n<li>a <code>snippet</code> element of type String that includes the snippet of annotated text which may also include buffer characters onboth ends.</li>\n</ul>\n<p>Comments welcome...</p>",
        "id": 182006424,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1574850695
    },
    {
        "content": "<p>The Extention Context is Provenance.target, so if multiple target ressources are created from one common source (i.e. a Document), the extensions are specific to each target.</p>",
        "id": 182006764,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1574851015
    },
    {
        "content": "<p>I created an example instance of Provenance documenting the extraction of a Condition from a Document:<br>\n<a href=\"https://simplifier.net/semantischeanalyse/provenance-example\" target=\"_blank\" title=\"https://simplifier.net/semantischeanalyse/provenance-example\">https://simplifier.net/semantischeanalyse/provenance-example</a></p>\n<div class=\"codehilite\"><pre><span></span><span class=\"nt\">&lt;Provenance&gt;</span>\n  <span class=\"nt\">&lt;target&gt;</span>\n    <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://dmi.de/fhir/StructureDefinition/annotation-character-range&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;range&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;valueRange&gt;</span>\n          <span class=\"nt\">&lt;low&gt;</span>\n            <span class=\"nt\">&lt;value</span> <span class=\"na\">value=</span><span class=\"s\">&quot;16&quot;</span> <span class=\"nt\">/&gt;</span>\n          <span class=\"nt\">&lt;/low&gt;</span>\n          <span class=\"nt\">&lt;high&gt;</span>\n            <span class=\"nt\">&lt;value</span> <span class=\"na\">value=</span><span class=\"s\">&quot;27&quot;</span> <span class=\"nt\">/&gt;</span>\n          <span class=\"nt\">&lt;/high&gt;</span>\n        <span class=\"nt\">&lt;/valueRange&gt;</span>\n      <span class=\"nt\">&lt;/extension&gt;</span>\n      <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;snippet&quot;</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;... confirmed Type II Diabetes ...&quot;</span> <span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/extension&gt;</span>\n    <span class=\"nt\">&lt;/extension&gt;</span>\n    <span class=\"nt\">&lt;reference</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Condition/12345&quot;</span> <span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;/target&gt;</span>\n  <span class=\"nt\">&lt;recorded</span> <span class=\"na\">value=</span><span class=\"s\">&quot;2019-11-28T13:28:17.239+02:00&quot;</span> <span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;activity&gt;</span>\n    <span class=\"nt\">&lt;coding&gt;</span>\n      <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://terminology.hl7.org/CodeSystem/v3-DataOperation&quot;</span> <span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;CREATE&quot;</span> <span class=\"nt\">/&gt;</span>\n      <span class=\"c\">&lt;!-- CREATE: Fundamental operation in an Information System (IS) that results only in the act of bringing an object into existence.--&gt;</span>\n    <span class=\"nt\">&lt;/coding&gt;</span>\n  <span class=\"nt\">&lt;/activity&gt;</span>\n  <span class=\"nt\">&lt;agent&gt;</span>\n    <span class=\"nt\">&lt;type&gt;</span>\n      <span class=\"nt\">&lt;coding&gt;</span>\n        <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://terminology.hl7.org/CodeSystem/provenance-participant-type&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;assembler&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"c\">&lt;!--assembler: A device that operates independently of an author on custodian&#39;s algorithms for data extraction of existing information for purpose of generating a new artifact.--&gt;</span>\n      <span class=\"nt\">&lt;/coding&gt;</span>\n    <span class=\"nt\">&lt;/type&gt;</span>\n    <span class=\"nt\">&lt;role&gt;</span>\n      <span class=\"nt\">&lt;coding&gt;</span>\n        <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://dicom.nema.org/resources/ontology/DCM&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;110150&quot;</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;display</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Application&quot;</span> <span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/coding&gt;</span>\n    <span class=\"nt\">&lt;/role&gt;</span>\n    <span class=\"nt\">&lt;who&gt;</span>\n      <span class=\"nt\">&lt;reference</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Device/23456&quot;</span> <span class=\"nt\">/&gt;</span>\n      <span class=\"c\">&lt;!--reference to a Device Resource describing the details (manufacturer, software version etc) of the application extracting the data--&gt;</span>\n    <span class=\"nt\">&lt;/who&gt;</span>\n  <span class=\"nt\">&lt;/agent&gt;</span>\n  <span class=\"nt\">&lt;entity&gt;</span>\n    <span class=\"nt\">&lt;role</span> <span class=\"na\">value=</span><span class=\"s\">&quot;source&quot;</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;what&gt;</span>\n      <span class=\"nt\">&lt;reference</span> <span class=\"na\">value=</span><span class=\"s\">&quot;DocumentReference/345678&quot;</span> <span class=\"nt\">/&gt;</span>\n      <span class=\"c\">&lt;!--reference to the Document from which the target Resource has been extracted--&gt;</span>\n    <span class=\"nt\">&lt;/what&gt;</span>\n  <span class=\"nt\">&lt;/entity&gt;</span>\n<span class=\"nt\">&lt;/Provenance&gt;</span>\n</pre></div>",
        "id": 182099693,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1574939049
    },
    {
        "content": "<p>Question: should the high/low values have a unit? Or should we rather use two integer extensions instead of Range...?</p>",
        "id": 182099776,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1574939136
    },
    {
        "content": "<p>tagging Security WG, since they own the Provenance Resource...<br>\n<span class=\"user-mention\" data-user-id=\"191404\">@John Moehrke</span> <span class=\"user-mention\" data-user-id=\"192248\">@Alexander Mense</span> <span class=\"user-mention\" data-user-id=\"199026\">@k connor</span> <span class=\"user-mention\" data-user-id=\"195200\">@Chris Shawn</span></p>",
        "id": 182100211,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1574939562
    },
    {
        "content": "<blockquote>\n<p>I like the idea of modeling this based on existing specifications, however, I am not sure whether the definition</p>\n<blockquote>\n<p>The start-offset is the index of the first character of the annotated span in the text (\".txt\" file), i.e. the number of characters in the document preceding it. The end-offset is the index of the first character after the annotated span. Thus, the character in the end-offset position is not included in the annotated span.</p>\n</blockquote>\n<p>is really unambiguous enough. E.g. it doesn't really say how whitespace is handled when counting the positions. Does anyone see that as an issue?</p>\n<p>Another question I am still struggling with is how to deal with the txt (OCR extract) in relation to the original document (PDF).<br>\nWhere do we keep the txt and how do we link it to the pdf...?</p>\n<p>A probably obvious thing would be to put it in DocumentReference.text (Narrative)<br>\nBecause that would allow for the additional functionality to run a full text search on the Document using the <code>_text</code>parameter.</p>\n<p>The character-range extension would then by default count the characters in <em>the Narrative</em> of the DocumentReference, not the Document in the Attachment...</p>\n</blockquote>\n<p>There is a CR that is asking if the _text search on a DocumentReference should be a text search across the attachment too (provided the server can execute this in some capacity based on it's understanding of the attachment layout).</p>",
        "id": 182118351,
        "sender_full_name": "John Moehrke",
        "timestamp": 1574955802
    },
    {
        "content": "<blockquote>\n<p>I have created an Extension based on the results of the discussion so far:<br>\n<a href=\"https://simplifier.net/semantischeanalyse/annotationcharacterrange\" target=\"_blank\" title=\"https://simplifier.net/semantischeanalyse/annotationcharacterrange\">https://simplifier.net/semantischeanalyse/annotationcharacterrange</a><br>\nIt has </p>\n<ul>\n<li>a <code>range</code>element of DataType <code>Range</code>with a low/high element, both inclusive as per FHIR definition of Range (in the bionlp description, the upper boundary is <em>ex</em>clusive!)</li>\n<li>a <code>snippet</code> element of type String that includes the snippet of annotated text which may also include buffer characters onboth ends.</li>\n</ul>\n<p>Comments welcome...</p>\n</blockquote>\n<p>There is a CR approved but not yet applied <a href=\"http://jira.hl7.org/browse/FHIR-21284\" target=\"_blank\" title=\"http://jira.hl7.org/browse/FHIR-21284\">J#21284</a></p>",
        "id": 182119386,
        "sender_full_name": "John Moehrke",
        "timestamp": 1574956700
    },
    {
        "content": "<p>beyond that... in Provenance we have only addressed using reference to point at a whole resource. So, can't really help on trying to point at specific locations within a narrative. That seems well beyond core need.</p>",
        "id": 182119440,
        "sender_full_name": "John Moehrke",
        "timestamp": 1574956782
    },
    {
        "content": "<p>The CR you mentioned adresses referencing specific elements in the <em>target</em> resource, whereas the extension above connects the target to a snippet from the <em>source</em> which led to the creation of the target. They have both different scopes but they can work perfectly well in combination, e.g. to express that Condition.code has been created from the snipped \"...suffers from Type II Diabetes...\", while Condition.onsetDateTime was created from the snippet \"...diagnosed in December 2016...\".</p>\n<p>So, what you're saying is that the extensions should go into an Implementation guide rather than in core extensions?<br>\nBTW: I'm definitely <strong>not</strong> arguing to make them core <em>elements</em>!</p>",
        "id": 182120018,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1574957288
    },
    {
        "content": "<p>something that starts in an implementation guide can migrate into the core as it proves useful to a broader community. More importantly, I think this kind of functionality likely needs lots of explanation which is easier to do in an IG.  I am not outright rejecting it, I am not that powerful anyway.. just asserting that it feels to me as not core.</p>",
        "id": 182130197,
        "sender_full_name": "John Moehrke",
        "timestamp": 1574967684
    },
    {
        "content": "<p>I cannot help feeling like there is some force fitting here.  While a Range does have 2 quantitative values, I don't think that it is a good fit for text character indices.  A Range defines upper and lower bounds, within which some value should exist.  This does not fit text character indices, which are absolute and not simply within some range.  In addition, Range uses the General Purpose Datatype SimpleQuantity.  This is not ideal for text character indices, which are always of Primitive Type  unsignedInt.  In my view, Range is not exact enough to be used for character indices.   In addition, consider the Rule for Range: \"If present, low SHALL have a lower value than high.\"   That doesn't work for a single-character token, for which indices are not a vector.</p>",
        "id": 182603600,
        "sender_full_name": "Sean Finan",
        "timestamp": 1575496126
    }
]