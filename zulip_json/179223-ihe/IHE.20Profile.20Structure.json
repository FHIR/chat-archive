[
    {
        "content": "<p>We should have our Actors and Transactions as FHIR resources. Not sure where decisions last landed, but I think:<br>\nTransactions - PlanDefinition<br>\nActors - Device? CapStatement?</p>",
        "id": 189211344,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582808451
    },
    {
        "content": "<p>I have been creating a CapabilityStatement for every Actor. This seems clear. One might have other CapabilityStatement for various options or other reasons, but there should be at-least ONE</p>",
        "id": 189215313,
        "sender_full_name": "John Moehrke",
        "timestamp": 1582811771
    },
    {
        "content": "<p>I expect at-least ONE StructureDefinition for the \"Message Encoding\" sub-section in each IHE Transaction. Given that an IHE Transaction can be made up of 1..* messages. An important point is that the IHE Transaction structure is made up of three subsections, for which messge encoding is just one of them. The oters are \"Trigger Event\" and \"Expected Action\". These other two sub-sections don't have an obvious conformance resource.</p>",
        "id": 189215469,
        "sender_full_name": "John Moehrke",
        "timestamp": 1582811905
    },
    {
        "content": "<p>The Transaction layout is being worked by some using Gherkin-- Given/When/Then which is much like Trigger-Event/Message-Encoding/Expected-Action. There is experimentation in IHE on two projects</p>",
        "id": 189215653,
        "sender_full_name": "John Moehrke",
        "timestamp": 1582812029
    },
    {
        "content": "<p>I think there is also interest in using other FHIR resources, such as Test Scenario</p>",
        "id": 189215675,
        "sender_full_name": "John Moehrke",
        "timestamp": 1582812052
    },
    {
        "content": "<p>I don't think that Plan Definition is proper, but I just haven't thought much about it</p>",
        "id": 189215708,
        "sender_full_name": "John Moehrke",
        "timestamp": 1582812069
    },
    {
        "content": "<p>I think PlanDefinition is proper :). Name is misleading, I think. But that is the place to say \"Alice says ... to Bob\"</p>",
        "id": 189221643,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582816106
    },
    {
        "content": "<p>CapabilityStatement contains the specs - does it contain the Actor definition? I started with that as well, not sure where we landed</p>",
        "id": 189221717,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582816178
    },
    {
        "content": "<p>The requirements you mention for Transactions seem covered</p>",
        "id": 189221895,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582816305
    },
    {
        "content": "<p>I am prototyping adding more resource types to the BE IG, so it's good to start this discussion in parallel</p>",
        "id": 189221982,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582816367
    },
    {
        "content": "<p>My focus for now is Transaction and Examples/ Use cases (pending a change in the template)</p>",
        "id": 189222128,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582816466
    },
    {
        "content": "<p>I think we should restart some calls</p>",
        "id": 189222191,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582816509
    },
    {
        "content": "<p>I disagree with using PlanDefinition for this.  It's really meant to be used in a clinical context, where the plan is some sort of care/treatment plan that can be customized based on decision points.  The fact that it <strong> could be </strong> used for this purpose is inconsequential.  It's not really appropriate for this purpose.</p>",
        "id": 189259586,
        "sender_full_name": "Keith Boone",
        "timestamp": 1582839182
    },
    {
        "content": "<p>I can provide the history of the discussions in a future call</p>",
        "id": 189260473,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582839826
    },
    {
        "content": "<p>I just did a search for \"plandefinition workflow conformance\" and I got some of the discussions around this</p>",
        "id": 189260556,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582839873
    },
    {
        "content": "<p>At the time I raised the same point - PlanDefinition seems about clinical decision. But I accepted it and have worked on that assumption</p>",
        "id": 189260783,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582840016
    },
    {
        "content": "<p>What we are missing is actors, glossary terms.</p>",
        "id": 189260928,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582840103
    },
    {
        "content": "<p>CapStatements are needed. I had a question mark because I wanted to see if we agree whether they are the actual actor definition (in the IHE sense).</p>",
        "id": 189261295,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582840404
    },
    {
        "content": "<p>If an actor has 2 capabilitystatements, then the capabilitystatement cannot be the definition of the actor, right? An actor cannot have 2 definitions</p>",
        "id": 189261406,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582840480
    },
    {
        "content": "<p>Perhaps we need a 3rd CapStatement to actually define the actor</p>",
        "id": 189261441,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1582840508
    },
    {
        "content": "<p>I use capability statements to define actors.  A transaction imposes constraints on what needs to appear within a transaction on both sides of the transaction.  As John has noted, these could actually be described as constraints on the actor supplied CapabilityStatement Resource.</p>",
        "id": 189346101,
        "sender_full_name": "Keith Boone",
        "timestamp": 1582920533
    },
    {
        "content": "<p>I think we just have to clarify what we do for the options.</p>",
        "id": 189677185,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1583317231
    },
    {
        "content": "<p>And probably my need for actor definitions is different. What I want is a governed repository of actor definitions (independent of options).<br>\nI also want a repository of transactions (we're working on that in Belgium)<br>\nAnd a repository of glossary terms (will be good to see where those sit)</p>",
        "id": 189677346,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1583317381
    },
    {
        "content": "<p>These things will come with effort. It is not hard to solve them for ONE editor, the hard part is making it something that the organization can sustain.</p>",
        "id": 189698187,
        "sender_full_name": "John Moehrke",
        "timestamp": 1583333528
    },
    {
        "content": "<p>To that end, there are some projects that we will each taken on that solve the same kind of problem differently. This is \"Trial Implementation\". So I encourage a few potential solutions, when there is potential. Hence why I am encouraging Cucumber experimentation too.</p>",
        "id": 189698416,
        "sender_full_name": "John Moehrke",
        "timestamp": 1583333657
    },
    {
        "content": "<p>Not sure we're looking at the same here. <br>\nI'd want to have a governed set of actors, that we can maintain across all editors and domains. If an actor has 1 transaction adn one option, how many CapStatements do we have? I am guessing 2 or 3.</p>",
        "id": 189702088,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1583335823
    },
    {
        "content": "<p>And a governed set of transactions (as part of our architecture) - not the detailed specifications, just the repository.</p>",
        "id": 189702123,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1583335849
    },
    {
        "content": "<p>Perhaps I should have started with that vision: I would want our artefacts to be governed (having them as resources will help in the publication process).</p>\n<ul>\n<li>Actors</li>\n<li>\n<p>Transaction definitions<br>\n** Content profiles (StructureDefs)<br>\n** Workflow profiles (PlanDefinitions)</p>\n</li>\n<li>\n<p>Glossary Terms (CodeSystems?)</p>\n</li>\n<li>Test scenarios</li>\n<li>Terminologies (CodeSystems/ValueSets)<br>\nEventually more stuff, like Actual implementations...</li>\n</ul>",
        "id": 189702451,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1583336082
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191832\">Jose Costa Teixeira</span> <a href=\"#narrow/stream/179223-ihe/topic/IHE.20Profile.20Structure/near/189702088\" title=\"#narrow/stream/179223-ihe/topic/IHE.20Profile.20Structure/near/189702088\">said</a>:</p>\n<blockquote>\n<p>Not sure we're looking at the same here. <br>\nI'd want to have a governed set of actors, that we can maintain across all editors and domains. If an actor has 1 transaction adn one option, how many CapStatements do we have? I am guessing 2 or 3.</p>\n</blockquote>\n<p>IHE does have that now.. The mechanics are just not well understood and well used... So, yes there is room for improvement and I very much agree. However in the context of a specific PROFILE the CapabilitySttement is the right way to give profile specific context. These are not two different things</p>",
        "id": 189706654,
        "sender_full_name": "John Moehrke",
        "timestamp": 1583338472
    },
    {
        "content": "<p>I think most of what I indicated is manual and copy-paste.<br>\nAnd in my vision, the different profiles will build up those assets - if a profile adds a term, or an actor, etc., I want the rest to be automated - publication, maintenance...</p>",
        "id": 189709775,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1583340266
    },
    {
        "content": "<p>YES!!!! you do know that Mary is in the process of automating this... and getting it html published... but yes the IG build should enhance this even more</p>",
        "id": 189710441,
        "sender_full_name": "John Moehrke",
        "timestamp": 1583340663
    },
    {
        "content": "<p>yep. hence my points. we need a bit of a revolution there, and that should be based on governed assets like FHIR resources.<br>\nI expect an Author to need to provide all the input (in a structured format) so that Mary just has to press a button.</p>",
        "id": 189711965,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1583341558
    },
    {
        "content": "<p>My thoughts on this: A CapabilityStatement is a statement of what a application or system supports.  A claim by an application or system to support an Actor reflects what should be seen in a CapabilityStatement, as does a separate claim to support a particular option for an actor.  Thus, each is a set of requirements  associated with an Actor, or an Option, and can be reported in a separate set of constraints on the CapabilityStatement resources exposed by that application or system.  They can be expressed as profiles on an Instance (CapabilityStatement.kind=\"instance\"), and represented as independent capabilities (in a CapabilityStatement where kind=\"capability\").  The former can be used for validation, the latter for expression of the capabiltiies, and the former (profiles) can be crafted from the latter.</p>",
        "id": 189733365,
        "sender_full_name": "Keith Boone",
        "timestamp": 1583354932
    },
    {
        "content": "<p>I've got some stuff I'm playing around with that can automate generation of an IG that might be worthy of discussion on an IHE FHIR workgroup call.</p>",
        "id": 189733443,
        "sender_full_name": "Keith Boone",
        "timestamp": 1583355001
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191387\">Keith Boone</span> <a href=\"#narrow/stream/179223-ihe/topic/IHE.20Profile.20Structure/near/189733443\" title=\"#narrow/stream/179223-ihe/topic/IHE.20Profile.20Structure/near/189733443\">said</a>:</p>\n<blockquote>\n<p>I've got some stuff I'm playing around with that can automate generation of an IG that might be worthy of discussion on an IHE FHIR workgroup call.</p>\n</blockquote>\n<p>Definitely worth discussing.<br>\nI think we need to pool these efforts. Personally I have looked at </p>\n<ul>\n<li>editing pages in Word</li>\n<li>generating our diagrams from the resources (which is why I want to clarify the actors /transactions thing)</li>\n<li>forcing some content layout (we don't want people to define their own menu structure)</li>\n</ul>",
        "id": 189740590,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1583359332
    },
    {
        "content": "<p>Agree, and I ask of the IHE-FHIR workgroup members, for which you two are a part, to gather your list of tasks so that we can create a work plan. So please take this topic to the IHE-FHIR workgroup</p>",
        "id": 189792976,
        "sender_full_name": "John Moehrke",
        "timestamp": 1583416430
    },
    {
        "content": "<p>Reusing this old thread. I was postponing it, but now I think I should look at someone else's XSLT for automating the page generation :)..<br>\n<span class=\"user-mention\" data-user-id=\"191387\">@Keith Boone</span> can you point me to your IG that had all those transformations?</p>",
        "id": 223858571,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611554761
    },
    {
        "content": "<p>I even think I made a nice diagram for your model (as I understood it), but I can't find it. So I need to see that wizardry again</p>",
        "id": 223858616,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1611554781
    },
    {
        "content": "<p>While that is in the works, another question: <br>\nGherkin - I think that conceptually, Gherkin corresponds to (a computable expression of) <strong>Acceptance Criteria</strong><br>\nwhich means that our model, to contain gherkin, would comprehend the notion of Acceptance Criteria.</p>",
        "id": 227808372,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1614275408
    },
    {
        "content": "<p>Right?</p>",
        "id": 227808387,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1614275411
    },
    {
        "content": "<p>Thoughts?</p>",
        "id": 227808396,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1614275414
    },
    {
        "content": "<p>that sounds right, but I have no practical/hands-on experience with Gherkin</p>",
        "id": 227808443,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1614275443
    },
    {
        "content": "<p>yes. but I am not clear what the alternative is that you are trying to scope out.</p>",
        "id": 227813823,
        "sender_full_name": "John Moehrke",
        "timestamp": 1614277773
    },
    {
        "content": "<p>the current use of Gherkin is simply as a means of expressing the expected tests that should be designed for the IHE-Connectathon. It is not a replacement for SHALL language or structureDefinitions. I expect the Gherkin will leverage the structureDefinitions at points of conformance checking.</p>",
        "id": 227814048,
        "sender_full_name": "John Moehrke",
        "timestamp": 1614277850
    },
    {
        "content": "<p>No alternative, I just want to see what it is so that it fits in a structured model (and therefore in a more industrialized process). <br>\nIf they are acceptance criteria, they are related to requirements/user stories. The link to Connectathon is not a direct link, I think.</p>\n<p>Example:<br>\n\"Given a patient exists on the system, when I try to create a new patient with the same ID, this should fail\" <br>\nor <br>\n\"Given a patient exists on the system, when I submit an updated patient record, then the server should result ...\" </p>\n<ul>\n<li>these are <strong>Acceptance criteria</strong>, which belong to a <strong>User Story</strong>; this <strong>User Story</strong> is in the origin of <strong>Conformance Artifacts</strong> including the <strong>StructureDefs</strong>. In a <strong>Connectathon</strong> you may apply a <strong>test plan</strong> which includes the tests for a given set of <strong>criteria</strong></li>\n</ul>",
        "id": 227818360,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1614279578
    },
    {
        "content": "<p>In the Gemini MDI project, we ended up utilizing Cucumber/Gherkin as a handy way of getting more precision in the story / use case / scenario specifications associated with an IHE Profile; however, we found that once you get much beyond that (e.g., linking them to test platforms, as Gherkin was designed to do), you quickly end up with more complexity than needed or wanted (esp. on the part of the SMEs describing the scenario logic.</p>\n<p>So we will be using ReqIF (OMG spec supported by quite a few requirements management tools) to represent both Gherkin-based requirements as well as all other requirements, including from standards referenced in the IHE Profile.  </p>\n<p>Stay tuned ... but we think it will get us to where we need to go, namely a CA  report of sufficient rigor that it can be directly included in regulatory submissions.</p>",
        "id": 227823352,
        "sender_full_name": "Todd Cooper",
        "timestamp": 1614281402
    },
    {
        "content": "<p>I was not going as far as interoperable requirements. I'd be glad to have clearly identified requirements :)</p>",
        "id": 227829776,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1614283529
    },
    {
        "content": "<p>LOL ... In our final review (last week?) of the strategy we'll take, we added \"Requirements Interoperability\" to that particular slide ... wish us luck!</p>",
        "id": 227830358,
        "sender_full_name": "Todd Cooper",
        "timestamp": 1614283788
    },
    {
        "content": "<p>QRPH tried to use Gherkin as their requirements language. Two problems, (1) although it should be easer given the BDD ideal, but turns for the kind of requirements IHE focuses on it is not always that much more clear. We already have the concepts of Given/When/Then built into Volume 2 in our Trigger/MessageEncoding/ExpectedActions.... and (2) the governance of IHE says that we use the normative words \"SHALL/SHOULD/MAY\", so a specification without those words will be seen by many as a NULL specification.</p>",
        "id": 227831334,
        "sender_full_name": "John Moehrke",
        "timestamp": 1614284150
    },
    {
        "content": "<p>hence why we are just looking at filling the gap between Interop spec and testing; and for that space Gherkin is a good tool.</p>",
        "id": 227831504,
        "sender_full_name": "John Moehrke",
        "timestamp": 1614284208
    },
    {
        "content": "<p>I am not a fan of trying to change the tires while the buss is rolling down the highway; say nothing about changing the oil too.</p>",
        "id": 227831590,
        "sender_full_name": "John Moehrke",
        "timestamp": 1614284247
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"192176\">Todd Cooper</span> <a href=\"#narrow/stream/179223-ihe/topic/IHE.20Profile.20Structure/near/227830358\">said</a>:</p>\n<blockquote>\n<p>LOL ... In our final review (last week?) of the strategy we'll take, we added \"Requirements Interoperability\" to that particular slide ... wish us luck!</p>\n</blockquote>\n<p>Ok, then I correct my statement - i WAS not going as far as interoperable requirements. When you have something, I'll be happy to see if we can take those files and put them in the publication somehow (creating a section for requirements?..)</p>",
        "id": 227893886,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1614326450
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> <a href=\"#narrow/stream/179223-ihe/topic/IHE.20Profile.20Structure/near/227831504\">said</a>:</p>\n<blockquote>\n<p>hence why we are just looking at filling the gap between Interop spec and testing; and for that space Gherkin is a good tool.</p>\n</blockquote>\n<p>At this moment, I'm trying to see  what that gap is. Not how big it is, or which tool covers it, but what that gap is named. I think it is Acceptance Criteria</p>",
        "id": 227894011,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1614326533
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> <a href=\"#narrow/stream/179223-ihe/topic/IHE.20Profile.20Structure/near/227831334\">said</a>:</p>\n<blockquote>\n<p>QRPH tried to use Gherkin as their requirements language. Two problems, (1) although it should be easer given the BDD ideal, but turns for the kind of requirements IHE focuses on it is not always that much more clear. We already have the concepts of Given/When/Then built into Volume 2 in our Trigger/MessageEncoding/ExpectedActions.... and (2) the governance of IHE says that we use the normative words \"SHALL/SHOULD/MAY\", so a specification without those words will be seen by many as a NULL specification.</p>\n</blockquote>\n<p>Well, that sounds like we're trying to fit a language without seeing where it should go. A user story is different from Acceptance Criteria, and an Acceptance Criteria is not a technical specification.</p>",
        "id": 227894203,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1614326691
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> <a href=\"#narrow/stream/179223-ihe/topic/IHE.20Profile.20Structure/near/227831504\">said</a>:</p>\n<blockquote>\n<p>hence why we are just looking at filling the gap between Interop spec and testing; and for that space Gherkin is a good tool.</p>\n</blockquote>\n<p>From what I know today, Gherkin is a good tool IF we are talking about (Acceptance Criteria/?). That is what I am trying to find out.</p>",
        "id": 227894334,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1614326794
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191404\">John Moehrke</span> <a href=\"#narrow/stream/179223-ihe/topic/IHE.20Profile.20Structure/near/227831590\">said</a>:</p>\n<blockquote>\n<p>I am not a fan of trying to change the tires while the buss is rolling down the highway; say nothing about changing the oil too.</p>\n</blockquote>\n<p>Yes, so we have a shiny new bus in the workshop, we can mess with that at will. And if your bus is rolling down the highway, and I understand we cannot slow down the bus, if you need to change the oil, what I'm trying to avoid is that you put gas in the oil compartment.</p>",
        "id": 227894530,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1614326979
    },
    {
        "content": "<p>the use of Gherkin in IHE today is experimental, and may not be found to be useful. There is the use that I describe in the IPS, CCG, and MHD profiles. It is very minimal, it is an appendix. It is just as likely to be found unnecessary as it is to be found a distraction.</p>",
        "id": 227924152,
        "sender_full_name": "John Moehrke",
        "timestamp": 1614344534
    },
    {
        "content": "<p>I'm glad I asked then :)</p>",
        "id": 227940787,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1614352159
    },
    {
        "content": "<p>I hope I had not misdirected you to thinking it was more common when I asked if there was a way to have the IG publisher display .feature files. I asked only to see if there was something already done that can be directed to pull in TEXT files and display them inline, possibly as code blocks, etc.</p>",
        "id": 227946690,
        "sender_full_name": "John Moehrke",
        "timestamp": 1614354697
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191387\">@Keith Boone</span> has some gherkin rendering in his SANER project.</p>",
        "id": 227946818,
        "sender_full_name": "John Moehrke",
        "timestamp": 1614354740
    },
    {
        "content": "<p>Yes, we can display text files (or markdown, or diagrams). For that we need to build the template (not difficult) and for building the template we need to see what that template is about - i.e. we want to put text in what \"type\" of page? in the structuredef intro? in any random markdown? Or as part of a \"requirements\" section? Or as part of the \"test\" section? In either case, we need to know  which text to put where.<br>\nI'm glad the call today helped clarify that.</p>",
        "id": 227976096,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1614366378
    },
    {
        "content": "<p>you are a few steps beyond what I need today. I just need a way that a markdown page in an IG can include text from a named file. That named file happens to be a .feature file. But for my needs it could be anything. The alternative I have is to copy-paste it into the markdown, and thus have two instances of the text.. i am trying to avoid two copies of the same text.</p>",
        "id": 227977865,
        "sender_full_name": "John Moehrke",
        "timestamp": 1614367151
    },
    {
        "content": "<p>you could try to <code>{% include yourfile.feature %}</code>inside your markdown</p>",
        "id": 227979529,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1614367865
    },
    {
        "content": "<p>yourfile.feature would need to be in the ig's <code>input\\images</code> folder</p>",
        "id": 227979619,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1614367902
    },
    {
        "content": "<p>I probably did something wrong, but that didn't work. I think I followed instructions... this filename is right, and it exists in the images-source</p>\n<div class=\"codehilite\"><pre><span></span><code>Jekyll has failed. Complete output from running Jekyll: ←[31m  Liquid Exception: Could not locate the included file &#39;create-simple-weight.feature&#39; in any of [&quot;C:/Users/john.moehrke/Git/MHV-PGHD/temp/pages/_includes&quot;]. Ensure it exists in one of those directories and, if it is a symlink, does not point outside y (02:55.0922)\n</code></pre></div>",
        "id": 227981801,
        "sender_full_name": "John Moehrke",
        "timestamp": 1614368717
    },
    {
        "content": "<p>didn't help to make the file a .txt file.</p>",
        "id": 227990744,
        "sender_full_name": "John Moehrke",
        "timestamp": 1614372292
    },
    {
        "content": "<p>it's a shot in the dar.. do you have a repo (i'm lazy to setup something from scratch)?)</p>",
        "id": 227997721,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1614375216
    }
]