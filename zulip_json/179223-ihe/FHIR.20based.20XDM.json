[
    {
        "content": "<p>As a possibility for a new work item for ITI... I am wondering if there is interest in producing an IHE Profile similar in function to XDM, but using FHIR rather than the XDS Metadata XML file. Likely solution just produces a parallel FHIR based file (json) holding DocumentManifest+DocumentReference, with the documents still represented as files. Alternatives would certainly be considered. The intent is the same use-cases as XDM. That is a portable persistence of a patient documents onto media (CD, DVD, USB-Memory, and email attachment).  </p>\n<p>Possible enhancement to support ALL possible FHIR data, not specifically only Document Sharing. This would not be the same use-case as XDM, but would still be for portable persistence onto media.</p>",
        "id": 153987102,
        "sender_full_name": "John Moehrke",
        "timestamp": 1534366376
    },
    {
        "content": "<p>possible enhancement is a good idea.</p>",
        "id": 153987200,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534375528
    },
    {
        "content": "<p>get lots of media kudos if you extend this to specify how to put this stuff in a blockchain. Whether that's actually a good idea or not</p>",
        "id": 153987202,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534375575
    },
    {
        "content": "<p>How would this  be different from FHIR Bulk Data?</p>",
        "id": 153987469,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1534410090
    },
    {
        "content": "<p>(other than that FHIR Bulk Data at this point only allows media/documents to be represented as Binary Ressources)</p>",
        "id": 153987470,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1534410174
    },
    {
        "content": "<p>I'd be definitely interested, if this XDMm (or mXDM? :thinking_face: ) uses the FHIR Bulk Data approach as an option to Invoke the export/define requested content but added some improvements around handling non-FHIR data (Ping <span class=\"user-mention\" data-user-id=\"191436\">@Stefan Lang</span> <span class=\"user-mention\" data-user-id=\"191549\">@Frank Oemig</span> )</p>",
        "id": 153987471,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1534410612
    },
    {
        "content": "<p>That's definitely something of interest, especially when it goes beyond the document oriented approach.<br>\nI, too, think that FHIR Bulk Data should be taken into account here, while it would not cover everything involved in something I would imagine as \"mXDM\" yet.</p>\n<p>Apart from discussing this here: would a BoF session at the Baltimore WGM be good as a starter for brainstorming?</p>",
        "id": 153987475,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1534411668
    },
    {
        "content": "<p>IHE governance would do a complete standards search... so if FHIR Bulk is the right solution, we will find it. I kind of agree.</p>",
        "id": 153987541,
        "sender_full_name": "John Moehrke",
        "timestamp": 1534423314
    },
    {
        "content": "<p>A BoF during FHIR Connectathon sounds like a good idea.</p>",
        "id": 153987542,
        "sender_full_name": "John Moehrke",
        "timestamp": 1534423355
    },
    {
        "content": "<p>I could certainly see  general-purpose media persistence. I would like that Binary would be files on the media, rather than encoded in the main stream. If we accept files as parts, could that be generalizable to any Resource could be a file. Thus there could be one well-known file as the entrypoint. That file might contain everything in one big huge Bundle, or that file might just be the starting point. GIven REST, and the dominant directionality of the References in FHIR, it seems we might need to have a manifest that minimally lists all the files that should be found on the media, and what that file is, possibly a method of signing for integrity sake...</p>",
        "id": 153987545,
        "sender_full_name": "John Moehrke",
        "timestamp": 1534423681
    },
    {
        "content": "<p>Where one variation of this is the XDM use-case of Patient+DocumentReference+DocumentManifest+Binary... aka, document centric... but the solution could be any FHIR data...</p>",
        "id": 153987547,
        "sender_full_name": "John Moehrke",
        "timestamp": 1534424613
    },
    {
        "content": "<p>XDM is focused on ONE Patient... I like starting with this limitation... but am open to discussion. (How XDM does it is to say that any branch of a filesystem is focused on one patient, so large media can have many patients each with their own directory branch...</p>",
        "id": 153987548,
        "sender_full_name": "John Moehrke",
        "timestamp": 1534424692
    },
    {
        "content": "<p>Sounds good to me.<br>\nBut I also would consider the multi-patient use case as a very relevant one. As you say, this might just be one meta-level above the single patient structure.<br>\nAlso, including non patient related information would be essential. Think of value sets that are actually maintained by the organization that created the data. You would need those to have a correct understanding of the actual, patient related, resources.<br>\nBut any kind of other resource type come to mind here, from practitioners, organizations, coverages via things like PlanDefinition and eventually to StructureDefinitions (yes, I have a certain use case in mind).</p>",
        "id": 153987561,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1534426950
    },
    {
        "content": "<p>Regarding BoF: shall we spread the word then?<br>\nAnd should we fix a time or just see when it fits during the connectathon?</p>",
        "id": 153987563,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1534427788
    },
    {
        "content": "<p>Bringing along non-patient resources would need to be supported (Practitioner, Organization, etc).  I am not sure the value of ValueSets and StructureDefinition... I suspect you have another use-case in mind? Trying to do too much is not good, enabling expansion is not bad.</p>",
        "id": 153987564,
        "sender_full_name": "John Moehrke",
        "timestamp": 1534428176
    },
    {
        "content": "<p>Regarding ValueSets: it is, at least in Germany, not uncommon to have \"house catalogs\", i.e. certain value sets specific to a hospital or GP. And these also may contain codes not only from well known code systems, but also codes that are made up by the organizations themselves.<br>\nNow, finding such a code in  some patient's Observation.code (eventually even without display and/or text) will result in loss of information - you just don't know what the observation was about.<br>\nI know that's not the way interoperability ideally works, but it's reality. A part of my daily work consist of exactly that: trying to find out the actual meaning of certain codes in some proprietary and non-documented data structure. This often is time consuming and that's the reason why I think it should at least be an optional part of such a specification.</p>",
        "id": 153987585,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1534432561
    },
    {
        "content": "<p>If an observation uses a local code, it is fully understandable. Having the ValueSet from which it came is not more informative than the encoding of the code within the Observation.  this is why persisting the valueset is not important in this case. -- but I could be missing something</p>",
        "id": 153987588,
        "sender_full_name": "John Moehrke",
        "timestamp": 1534433115
    },
    {
        "content": "<p>I am figuring that carrying all of the profile conformance details is not important... however if done, then must be fully done.. possibly a whole nother directory holding all the conformance resources necessary... I think this is just overhead that is not justified by the use-case need, and not supported by the typical size of a portable media</p>",
        "id": 153987589,
        "sender_full_name": "John Moehrke",
        "timestamp": 1534433206
    },
    {
        "content": "<p>I think going beyond simple portability on media of a Patient data is moving into the space of  a different work item on FHIR persistence model that is being discussed as a potential FHIR Foundation project</p>",
        "id": 153987590,
        "sender_full_name": "John Moehrke",
        "timestamp": 1534433478
    },
    {
        "content": "<p>As long as the consumer of the data has already access to the value set, it is unimportant. But that's not always the case.<br>\nThink of a patient changing his GP, bringing the data along. The new GP then at least is able to retrieve display values via the ValueSet/CodeSystem. Which is not the case when your Observation just says:</p>\n<div class=\"codehilite\"><pre><span></span>...\n&lt;code&gt;\n    &lt;coding&gt;\n        &lt;system value=&quot;http://gp-old.com/myCodeSystems/myObsevationTypes&quot; /&gt;\n        &lt;code value=&quot;852&quot; /&gt;\n    &lt;/coding&gt;\n&lt;/code&gt;\n</pre></div>",
        "id": 153987591,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1534433599
    },
    {
        "content": "<p>well.. there is a URL to retrieve the details from the system... THAT should be published... The gap is an organization not willing to publish their codesytem,  that also does NOT populate the &lt;coding&gt; properly, but is willing to put the whole thing onto patient carried media... I am not sure I am convinced these exist.</p>",
        "id": 153987592,
        "sender_full_name": "John Moehrke",
        "timestamp": 1534433751
    },
    {
        "content": "<p>There is a German law that enforces exactly what you say</p>",
        "id": 153987594,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1534433800
    },
    {
        "content": "<p>Except that \"willing\" may be the wrong word ;-)</p>",
        "id": 153987596,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1534433861
    },
    {
        "content": "<p>But maybe that's more the FHIR Foundation project than \"mXDM\" then.<br>\nIn any case, whatever would be specified for a single patient by IHE should not differ from the respective concept in the FHIR Foundation project</p>",
        "id": 153987599,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1534434128
    },
    {
        "content": "<p>I also completely agree that code systems should be made available publicly. Unfortunately, this is something that will not happen in many cases due to the \"what's mine is mine\" doctrine. So a different way to make them available not publicly, but when needed, is required.</p>",
        "id": 153987604,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1534434460
    },
    {
        "content": "<p>so, there is a solution... fully describe the code in the data.</p>",
        "id": 153987605,
        "sender_full_name": "John Moehrke",
        "timestamp": 1534434527
    },
    {
        "content": "<p>True, apart from the case when it says \"XYZ, other\" (as a display value). You would not know what \"other\" is when you don't know all variants of \"XYZ\".<br>\nBut surely you will argue, you'd just put into code.text (for example), what the exact meaning of \"other\" is in that special instance, right?</p>",
        "id": 153987607,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1534434852
    },
    {
        "content": "<p>I am more and more convinced that the organizations you speak of are not going to listen to any recommendations...</p>",
        "id": 153987613,
        "sender_full_name": "John Moehrke",
        "timestamp": 1534435567
    },
    {
        "content": "<p>I wouldn't say so, since there is definitely a change starting, but as always in such cases, it may take some time to catch up with the new things and I consider it relevant to have some \"multi-step\" path available.</p>",
        "id": 153987618,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1534435903
    },
    {
        "content": "<blockquote>\n<p>I could certainly see  general-purpose media persistence. I would like that Binary would be files on the media, rather than encoded in the main stream. If we accept files as parts, could that be generalizable to any Resource could be a file. Thus there could be one well-known file as the entrypoint. That file might contain everything in one big huge Bundle, or that file might just be the starting point. GIven REST, and the dominant directionality of the References in FHIR, it seems we might need to have a manifest that minimally lists all the files that should be found on the media, and what that file is, possibly a method of signing for integrity sake...</p>\n</blockquote>\n<p>I'm having visions of multipart/related, cids, and xop -- correction: nightmares.</p>",
        "id": 153987766,
        "sender_full_name": "Elliot Silver",
        "timestamp": 1534449830
    },
    {
        "content": "<p>I think it makes perfect sense to publish code systems as part of an XDM content set. Value Sets, not so much. Also it makes perfect sense to publish extension definitions.</p>",
        "id": 153987774,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534451024
    },
    {
        "content": "<p>of course, these may be published somewhere in a registry, and that would be preferable. but registries might not be maintained, and/or institutions might not want to publish in public what they are prepared to put in an extract of a clinical record</p>",
        "id": 153987776,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534451083
    },
    {
        "content": "<p>Obviously I agree on the CodeSystem part. But if you consider extensions, this will include extensions with bound ValueSets, so you have to include these also, at least when they are custom.<br>\nAnother use case is archiving, which definitely should include at least custom ValueSets. But according to John, this might be beyond the scope of XDM on FHIR?</p>",
        "id": 153987869,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1534458534
    },
    {
        "content": "<p>yes value sets too for that reason</p>",
        "id": 153987871,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534458607
    },
    {
        "content": "<p>So this is why I figured there might be a non-patient section on the media. to hold codesystems, and extension definitions. This space could also hold other things as deemed needed.</p>",
        "id": 153988411,
        "sender_full_name": "John Moehrke",
        "timestamp": 1534509691
    },
    {
        "content": "<p>It was the ValueSets that I was mostly pushing back on...  The valueset does not add to understanding the data. I would acknolwedge one need when an extension calls for a specific valueset.</p>",
        "id": 153988413,
        "sender_full_name": "John Moehrke",
        "timestamp": 1534509798
    },
    {
        "content": "<p>So, given one puts codeSystems on the media... now a CD-ROM is filled by SNOMED,LOINC, DICOM, and HL7 vocabulary... no space left to put the patient data...    Clearly I am using an absurd point to drive home that there would need to be some guidance on what CodeSystems should go on, and which should NOT.</p>",
        "id": 153988416,
        "sender_full_name": "John Moehrke",
        "timestamp": 1534509906
    },
    {
        "content": "<p>there's a few places where value set is a necessary link between definition and code system.</p>",
        "id": 153988420,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534511444
    },
    {
        "content": "<blockquote>\n<p>So, given one puts codeSystems on the media... now a CD-ROM is filled by SNOMED,LOINC, DICOM, and HL7 vocabulary... no space left to put the patient data...    Clearly I am using an absurd point to drive home that there would need to be some guidance on what CodeSystems should go on, and which should NOT.</p>\n</blockquote>\n<p>I would basically leave that to the specific use case, allowing both options:<br>\n- have a reference to a publicly available CodeSystem<br>\n- have a complete CodeSystem stored<br>\nI consider it perfectly ok to mix both, e.g. just referring to SNOMED, but putting \"internal\" CodeSystems onto the media.<br>\nBut neither (meaning: \"use only references\" or \"use only full resources\"), and also not a fixed \"when to use which\" should be part of the spec. That should rather be a recommendation (\"if you expect run out of media space, a reference to publicly available code systems is encouraged\")</p>",
        "id": 153988427,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1534513835
    },
    {
        "content": "<p>best practice would be not to create licensing issues by reproducing snomed cpt4 icd etc ;-)</p>",
        "id": 153988551,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534537755
    },
    {
        "content": "<p>That's true for sure ;-) Still not more than a recommendation in the spec, I think.</p>",
        "id": 153988920,
        "sender_full_name": "Stefan Lang",
        "timestamp": 1534588550
    }
]