[
    {
        "content": "<p>We are working on adding SVCM compliance to the ICD-11 API.   For the CodeSystem resource (specifically for linearizations such as MMS) we don't think it make sense to return the full  set of concepts under CodeSystem.concept.  Rather, we want to have the root concept be identified somehow in the CodeSystem resource.  One option is to have CodeSystem.concept have a single concept in it, which is the root, but that seems perhaps a misleading.   Is there another approach that others use in such a situation such as an extension to the CodeSystem resource to designate a root code?  <span class=\"user-mention\" data-user-id=\"340886\">@Joe Amlung</span>  <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span>  <span class=\"user-mention\" data-user-id=\"193278\">@jon payne</span></p>",
        "id": 264303773,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639057998
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191604\">@Carl Leitner</span> I have not heard of anyone so far doing this, or needing to do it.  Of course someone might have done that, or something like it, and I'm not aware.  Can you describe a little more the rationale for why identifying and calling out the root code like this is specifically needed for the ICD-11 API?  I have some idea why you may want to do that, but it would be good to hear more of your thoughts.  My inclination is that, assuming that it is needed, an extension on CodeSystem would be the way to do it.</p>",
        "id": 264306621,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1639059186
    },
    {
        "content": "<p>Specific use case is that Open Concept Lab (OCL) is building a multi-code system browser and wants to show a hierarchy.  To do so, they need to know the root to get started on the hierarchy and then use parent-child relationships on concepts to build out the hierarchy from there.</p>",
        "id": 264307155,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639059411
    },
    {
        "content": "<p>Hi <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> and <span class=\"user-mention\" data-user-id=\"191604\">@Carl Leitner</span> - The only way to get the root code now is from the native ICD-11 API or manually from the ICD-11 browser. Once you have the root entity ID, you can use the ICD-11 FHIR API to visualize and traverse the entire hierarchy, but there's that manual step that you have to start with. Ideally we'd like a way for FHIR to respond with the root so that it is a fully FHIR-based process with no manual steps.</p>",
        "id": 264307491,
        "sender_full_name": "Jonathan Payne",
        "timestamp": 1639059557
    },
    {
        "content": "<p>Would selecting from a valueset of root concepts not work?</p>",
        "id": 264310574,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1639060882
    },
    {
        "content": "<p>so a singleton valueset?  but then you would need to know that this is the 'special' valueset that contains the root.  we want to avoid having to hardcode these types of associations in the browser.</p>",
        "id": 264312852,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639061965
    },
    {
        "content": "<p>Agree- Would still want to have that ValueSet available as an attribute of the CodeSystem, meaning either a list of root code(s) or a pointer to a valueset. Both would get the job done</p>",
        "id": 264313150,
        "sender_full_name": "Jonathan Payne",
        "timestamp": 1639062066
    },
    {
        "content": "<p>a special valueset  (as opposed to a special concept) would make sense if we have  a multi-rooted codesystem.  that's not exactly the case with ICD-11.  Foundation is unrooted.  MMS is a rooted subset that is published as its own code system.   I don't think we will need multi-root with ICD-11.    But not sure of other codesytems.</p>",
        "id": 264313591,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639062248
    },
    {
        "content": "<p>so i think we need an extension defined for 'root' as a concept or 'roots' as a valueset.   the question is if there would be any use cases for the second option or should we just go with the first.</p>",
        "id": 264313936,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639062399
    },
    {
        "content": "<p>Something like this? Here's the ICD-11 MMS codesystem in FHIR: <a href=\"https://icdapitest2.azurewebsites.net/fhir/CodeSystem/ICD11-MMS-2021-05/\">https://icdapitest2.azurewebsites.net/fhir/CodeSystem/ICD11-MMS-2021-05/</a></p>\n<p>An example of how we might add a root extension to the CodeSystem response. (I'm new to extensions, so definitely looking for input!) And need to draft the structure definition...</p>\n<div class=\"codehilite\"><pre><span></span><code>  &quot;_root&quot;: {\n    &quot;extension&quot;: [\n      {\n        &quot;extension&quot;: [\n          {\n            &quot;url&quot;: &quot;root&quot;,\n            &quot;valueCode&quot;: &quot;455013390&quot;\n          }\n        ],\n        &quot;url&quot;: &quot;http://hl7.org/fhir/StructureDefinition/codeSystemRoot&quot;\n      }\n    ]\n  },\n</code></pre></div>",
        "id": 264318948,
        "sender_full_name": "Jonathan Payne",
        "timestamp": 1639064511
    },
    {
        "content": "<p>I think that looks pretty good (I didn't try to verify the syntax).  SNOMED CT has exactly the same situation with a root concept (138875005 |SNOMED CT Concept (SNOMED RT+CTV3)|), but this issue has never come up there (or with any other code system) that I am aware of.  Again, though, an extension as Jonathan is proposing I think is likely going to be the cleanest and best way to do this.  I agree with the other comments about using a value set - it seems that trying to use ValueSet probably doesn't add anything here (and may be more cumbersome).</p>",
        "id": 264320277,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1639065028
    },
    {
        "content": "<blockquote>\n<p>One option is to have CodeSystem.concept have a single concept in it, which is the root, but that seems perhaps a misleading</p>\n</blockquote>\n<p>Why is that misleading? Why isn't the simplest solution the best?</p>",
        "id": 264352189,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639077384
    },
    {
        "content": "<p>and why did no one talk about a property based solution?</p>",
        "id": 264352212,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639077399
    },
    {
        "content": "<p>Yes, I think that a property could work.  It maybe is the most obvious solution - and could handle either the single or multiple root cases.  Presumably (in most cases) the property(ies) would need to be added in a code system supplement - since if they were already present in the code system itself then we most likely wouldn't be having this discussion.</p>",
        "id": 264355295,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1639078857
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"193544\">@Jonathan Payne</span> is making his own one up. I'm not aware of an agreed fhir distribution of icd-11 at least</p>",
        "id": 264357214,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639079666
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179202-terminology/topic/ICD-11.20.2B.20root.20of.20a.20codesystem/near/264352189\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>One option is to have CodeSystem.concept have a single concept in it, which is the root, but that seems perhaps a misleading</p>\n</blockquote>\n<p>Why is that misleading? Why isn't the simplest solution the best?</p>\n</blockquote>\n<p>Receiving system could say - oh wow here is a code system with only one code in it.   The definition says \"Concepts that are in the code system. The concept definitions are inherently hierarchical, but the definitions must be consulted to determine what the meanings of the hierarchical relationships are.\" and I would think it is a larger assumption to interpret this sentence as \"Some of the concepts that are...\" rather then \"If present, all of the concepts that are\"</p>",
        "id": 264366905,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639084313
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179202-terminology/topic/ICD-11.20.2B.20root.20of.20a.20codesystem/near/264357214\">said</a>:</p>\n<blockquote>\n<p>I think <span class=\"user-mention silent\" data-user-id=\"193544\">Jonathan Payne</span> is making his own one up. I'm not aware of an agreed fhir distribution of icd-11 at least</p>\n</blockquote>\n<p>No, <span class=\"user-mention\" data-user-id=\"193544\">@Jonathan Payne</span>  and I working with the ICD-11 team on this.  They have started adding SVCM support and this was the one major gap.  There is initial support for FHIR in the ICD-API.</p>",
        "id": 264367036,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639084374
    },
    {
        "content": "<p>we are trying to figure out what to get back to the ICD-11 API dev lead as needed changes in their FHIR API response.</p>",
        "id": 264367156,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639084430
    },
    {
        "content": "<blockquote>\n<p>Receiving system could say - oh wow here is a code system with only one code in it</p>\n</blockquote>\n<p>yeah well, receiving system could just as well say, 'I never even looked for any concepts at all'. That would be the same thing  - ignoring an element in the resource. So I think that shouldn't be an issue</p>",
        "id": 264368528,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639085063
    },
    {
        "content": "<p>great. I'm happy to be in on the conversation - I've been talking to Can about this (though not recently). Have you looked at the importer I already wrote?</p>",
        "id": 264368664,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639085145
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179202-terminology/topic/ICD-11.20.2B.20root.20of.20a.20codesystem/near/264368664\">said</a>:</p>\n<blockquote>\n<p>great. I'm happy to be in on the conversation - I've been talking to Can about this (though not recently). Have you looked at the importer I already wrote?</p>\n</blockquote>\n<p>I have not seen that.</p>",
        "id": 264368743,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639085170
    },
    {
        "content": "<p><a href=\"https://github.com/hapifhir/org.hl7.fhir.core/blob/master/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/ICD11Generator.java\">https://github.com/hapifhir/org.hl7.fhir.core/blob/master/org.hl7.fhir.convertors/src/main/java/org/hl7/fhir/convertors/misc/ICD11Generator.java</a></p>",
        "id": 264368848,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639085222
    },
    {
        "content": "<p>I have no need to continue to maintain that, btw. Just for consideration around consistency, though it's draft, so it's not authoritative in any way</p>",
        "id": 264368927,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639085262
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191405\">Rob Hausam</span> <a href=\"#narrow/stream/179202-terminology/topic/ICD-11.20.2B.20root.20of.20a.20codesystem/near/264355295\">said</a>:</p>\n<blockquote>\n<p>Yes, I think that a property could work.  It maybe is the most obvious solution - and could handle either the single or multiple root cases.  Presumably (in most cases) the property(ies) would need to be added in a code system supplement - since if they were already present in the code system itself then we most likely wouldn't be having this discussion.</p>\n</blockquote>\n<p>OK.  That's better than a extension and less ambiguous  as to the intent of singleton list of conepts.</p>",
        "id": 264369083,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639085326
    },
    {
        "content": "<p>oh... wait.   There is no property.type code that we could use as 'root' and it is not extensible.</p>",
        "id": 264369310,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639085413
    },
    {
        "content": "<p>so what did you intend here?</p>",
        "id": 264369413,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639085464
    },
    {
        "content": "<p>the type would be boolean - true | false. The code you're thinking about goes in CodeSystem.property.code - whatever you want, with your definition. If you want a formally defined thing, then use URL like <a href=\"http://hl7.org/fhir/concept-properties#root\">http://hl7.org/fhir/concept-properties#root</a> (we'd have to define that code in the code system)</p>",
        "id": 264372215,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639086796
    },
    {
        "content": "<p>We use a filter of `parent exists false</p>",
        "id": 264372519,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1639086961
    },
    {
        "content": "<p>To determine root concepts (ie in a valueSet)</p>",
        "id": 264372607,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1639086999
    },
    {
        "content": "<p>This is how the Shrimp browser determines hierarchy roots.</p>",
        "id": 264372674,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1639087050
    },
    {
        "content": "<p>Adding a property to specify this means that it can be wrong, which can lead to strange behaviour from a user oerspective</p>",
        "id": 264372772,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1639087093
    },
    {
        "content": "<p>Shrimp is a SMART app and can  be launched to point at any FHIR terminology server (assuming CORS is permitted).<br>\n<a href=\"https://ontoserver.csiro.au/shrimp/launch.html?iss=[endpoint]\">https://ontoserver.csiro.au/shrimp/launch.html?iss=[endpoint]</a></p>",
        "id": 264373818,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1639087474
    },
    {
        "content": "<p>Shrimp does rely on being able to POST a ValueSet to the $expand operation to drive the hierarchy view</p>",
        "id": 264374164,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1639087635
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191343\">Michael Lawley</span> <a href=\"#narrow/stream/179202-terminology/topic/ICD-11.20.2B.20root.20of.20a.20codesystem/near/264374164\">said</a>:</p>\n<blockquote>\n<p>Shrimp does rely on being able to POST a ValueSet to the $expand operation to drive the hierarchy view</p>\n</blockquote>\n<p>SVCM 3.97 has a GET for this.  Why POST? <a href=\"https://www.ihe.net/uploadedFiles/Documents/ITI/IHE_ITI_Suppl_SVCM.pdf\">https://www.ihe.net/uploadedFiles/Documents/ITI/IHE_ITI_Suppl_SVCM.pdf</a></p>",
        "id": 264375689,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639088401
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191343\">Michael Lawley</span> <a href=\"#narrow/stream/179202-terminology/topic/ICD-11.20.2B.20root.20of.20a.20codesystem/near/264372519\">said</a>:</p>\n<blockquote>\n<p>We use a filter of `parent exists false</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"193544\">@Jonathan Payne</span> <span class=\"user-mention\" data-user-id=\"340886\">@Joe Amlung</span> <span class=\"user-mention\" data-user-id=\"193278\">@jon payne</span> would this work for ICD-11-API+FHIR and OCL?</p>",
        "id": 264375786,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639088439
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191343\">Michael Lawley</span> <a href=\"#narrow/stream/179202-terminology/topic/ICD-11.20.2B.20root.20of.20a.20codesystem/near/264372772\">said</a>:</p>\n<blockquote>\n<p>Adding a property to specify this means that it can be wrong, which can lead to strange behaviour from a user oerspective</p>\n</blockquote>\n<p>OK. Thanks</p>",
        "id": 264375820,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639088461
    },
    {
        "content": "<p>POST means that the ValueSet doesn't need to exist on the server -- Shrimp can construct them on the fly and get them $expanded and thus work with a readonly server</p>",
        "id": 264376234,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1639088705
    },
    {
        "content": "<p>From the spec, POST is primary and GET is \"additional\" for idempotent operations:</p>\n<blockquote>\n<p>3.2.0.1 Executing an Operation <br>\nOperations are executed using a URL derived from the FHIR endpoint, where the name of the operation is prefixed by a \"dollar sign\" ('$') character. For example:<br>\n<code>POST http://fhir.someserver.org/fhir/Patient/1/$everything</code><br>\nWhen an operation has affectsState = false, and the parameters are all primitive data types with no extensions (as is the case with the example above), it may be invoked using GET as well.</p>\n</blockquote>",
        "id": 264376522,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1639088852
    },
    {
        "content": "<p>not sure if I fully understand here.   under 2) here <a href=\"http://hl7.org/fhir/valueset.html#expansion\">http://hl7.org/fhir/valueset.html#expansion</a> it shows a GET as an example.   expansion should be an idempotent operation.  why would POST allow an expansion against a valueset that does not exist on the server while GET would not allow?</p>",
        "id": 264380032,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639090823
    },
    {
        "content": "<p>and here <a href=\"http://hl7.org/fhir/R4/terminology-service.html#expand\">http://hl7.org/fhir/R4/terminology-service.html#expand</a> there is not difference in expected behavior between GET and POST.  I had understood that one of the main reason for POST is that there are practical limitations in GET request parameters (e.g. <a href=\"https://stackoverflow.com/questions/2659952/maximum-length-of-http-get-request\">https://stackoverflow.com/questions/2659952/maximum-length-of-http-get-request</a>)</p>",
        "id": 264380286,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639090998
    },
    {
        "content": "<p>(trying to understand if there is a reason for a change request against SVCM or not)</p>",
        "id": 264380311,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639091029
    },
    {
        "content": "<p>Yes, in a GET, there's no way to include the ValueSet definition in the request URL</p>",
        "id": 264380378,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1639091068
    },
    {
        "content": "<p>well, there is, but it's not convenient or reliable</p>",
        "id": 264380388,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639091084
    },
    {
        "content": "<p>and I don't even know whether my server supports GET for that</p>",
        "id": 264380419,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639091111
    },
    {
        "content": "<p>oh! -Where is that documented?</p>",
        "id": 264380520,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1639091196
    },
    {
        "content": "<p>where is what documented?</p>",
        "id": 264381031,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639091588
    },
    {
        "content": "<p>no actually, i lie:</p>",
        "id": 264381056,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639091611
    },
    {
        "content": "<blockquote>\n<p>When an operation has affectsState = false, and the parameters are all primitive data types with no extensions (as is the case with the example above), it may be invoked using GET as well.</p>\n</blockquote>",
        "id": 264381069,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639091628
    },
    {
        "content": "<p>so technically you could squeeze a value set into the URL, but we said not to</p>",
        "id": 264381134,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639091649
    },
    {
        "content": "<p>anyway <span class=\"user-mention\" data-user-id=\"191604\">@Carl Leitner</span> it's purely an encoding difference - GET/POST are the same in terms of meaning: do an expansion on this value set that you haven't previously seen.</p>",
        "id": 264381209,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639091724
    },
    {
        "content": "<p>I make extensive use of this technique</p>",
        "id": 264381234,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1639091749
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"193544\">@Jonathan Payne</span>  <span class=\"user-mention\" data-user-id=\"193299\">@Luke Duncan</span>  flagging for you for SVCM.  Looks like we may need it to support both a GET and a POST</p>",
        "id": 264381350,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639091823
    },
    {
        "content": "<p>One thing on my todo list is a FHIR ValueSet equivalent of SNOMED's ECL and then we can define compact implicit ValueSets URIs for use in GET requests</p>",
        "id": 264381352,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1639091825
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191604\">Carl Leitner</span> <a href=\"#narrow/stream/179202-terminology/topic/ICD-11.20.2B.20root.20of.20a.20codesystem/near/264381350\">said</a>:</p>\n<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"193544\">Jonathan Payne</span>  <span class=\"user-mention silent\" data-user-id=\"193299\">Luke Duncan</span>  flagging for you for SVCM.  Looks like we may need it to support both a GET and a POST</p>\n</blockquote>\n<p>I believe there may be an appendix that calls out POST and GET can be used, but I'll double check and we can specifically call it out when I convert it to an IG format.</p>",
        "id": 264396974,
        "sender_full_name": "Luke Duncan",
        "timestamp": 1639104564
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179202-terminology/topic/ICD-11.20.2B.20root.20of.20a.20codesystem/near/264372215\">said</a>:</p>\n<blockquote>\n<p>the type would be boolean - true | false. The code you're thinking about goes in CodeSystem.property.code - whatever you want, with your definition. If you want a formally defined thing, then use URL like <a href=\"http://hl7.org/fhir/concept-properties#root\">http://hl7.org/fhir/concept-properties#root</a> (we'd have to define that code in the code system)</p>\n</blockquote>\n<p>Catching up- sounds like the use of a CodeSystem property may be the way to go? Seems like this works well if only a single root -- would this method work for a multi-root system? (Do we need to worry about that use case?)</p>",
        "id": 264480806,
        "sender_full_name": "Jonathan Payne",
        "timestamp": 1639157790
    },
    {
        "content": "<p>no <span class=\"user-mention\" data-user-id=\"193544\">@Jonathan Payne</span>  i think the filter approach that <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span>  is best.</p>",
        "id": 264482080,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639158386
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191604\">Carl Leitner</span> <a href=\"#narrow/stream/179202-terminology/topic/ICD-11.20.2B.20root.20of.20a.20codesystem/near/264482080\">said</a>:</p>\n<blockquote>\n<p>no <span class=\"user-mention silent\" data-user-id=\"193544\">Jonathan Payne</span>  i think the filter approach that <span class=\"user-mention silent\" data-user-id=\"191343\">Michael Lawley</span>  is best.</p>\n</blockquote>\n<p>Got it- thanks <span class=\"user-mention\" data-user-id=\"191604\">@Carl Leitner</span> for pointing that out - I missed that. And good approach <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> </p>\n<p>There's the possibility of orphaned codes that would be returned with the <code>parent exists false</code> approach, in which case you'd also need to look at whether a code also had children. This probably wouldn't be a concern in a major reference vocabulary, but could easily see this happening with other content.</p>",
        "id": 264485903,
        "sender_full_name": "Jonathan Payne",
        "timestamp": 1639159933
    },
    {
        "content": "<p>(<span class=\"user-mention\" data-user-id=\"193544\">@Jonathan Payne</span>  and <span class=\"user-mention\" data-user-id=\"340886\">@Joe Amlung</span>  assuming you will coordinate with Can if any changes are needed, but please let me know if I am wrong)</p>",
        "id": 264494584,
        "sender_full_name": "Carl Leitner",
        "timestamp": 1639163591
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191604\">Carl Leitner</span> <a href=\"#narrow/stream/179202-terminology/topic/ICD-11.20.2B.20root.20of.20a.20codesystem/near/264494584\">said</a>:</p>\n<blockquote>\n<p>(<span class=\"user-mention silent\" data-user-id=\"193544\">Jonathan Payne</span>  and <span class=\"user-mention silent\" data-user-id=\"340886\">Joe Amlung</span>  assuming you will coordinate with Can if any changes are needed, but please let me know if I am wrong)</p>\n</blockquote>\n<p>We will coordinate with Can about this. We are drafting the recommendations and feedback for ICD-11's FHIR API in <a href=\"https://docs.google.com/document/d/1x4-QnX_2tqBBnHNH-IilUHdvwTZ8Z5mkb0lKcYooyYk/edit#heading=h.2fkwb08aa8fu\">this document</a>.</p>",
        "id": 264496114,
        "sender_full_name": "Joe Amlung",
        "timestamp": 1639164337
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191343\">Michael Lawley</span> <a href=\"#narrow/stream/179202-terminology/topic/ICD-11.20.2B.20root.20of.20a.20codesystem/near/264372519\">said</a>:</p>\n<blockquote>\n<p>We use a filter of `parent exists false</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> do you think you could provide a quick example (i.e. the body of the POST request) of how shrimp uses $expand to filter by parents exists false?</p>",
        "id": 270436788,
        "sender_full_name": "Jonathan Payne",
        "timestamp": 1643827341
    },
    {
        "content": "<p>Sure, here's a ValueSet definition for the root concepts in LOINC:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"resourceType\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"ValueSet\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"url\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"urn:loinc-root-concepts\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"title\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Find root concept\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"status\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"draft\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"compose\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"include\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"filter\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">\"property\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"parent\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">\"op\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"exists\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"false\"</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"system\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"http://loinc.org\"</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Find_root_concept\"</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>\n<p>There's a couple of caveats to bear in mind.  You may also want to limit the expansion to just active concepts since this definition will also find \"orphan\" concepts and in some code systems, inactive concepts are removed from the hierarchy. Hence, if you do this with SNOMED, then you'll get a lot of undesirable codes (or you can add <code>inactive = false</code> as an additional filter condition:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"resourceType\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"ValueSet\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"url\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"urn:sct-root-concepts\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"title\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Find root concept\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"status\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"draft\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"compose\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"nt\">\"include\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"filter\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">\"property\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"parent\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">\"op\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"exists\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"false\"</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">\"property\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"inactive\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">\"op\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"=\"</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"nt\">\"value\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"false\"</span><span class=\"w\"></span>\n<span class=\"w\">          </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">],</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nt\">\"system\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"http://snomed.info/sct\"</span><span class=\"w\"></span>\n<span class=\"w\">      </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">]</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"p\">},</span><span class=\"w\"></span>\n<span class=\"w\">  </span><span class=\"nt\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Find_root_concept\"</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
        "id": 270478858,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1643846417
    },
    {
        "content": "<p>Thank you <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> ! Really really helpful, especially your comment on the orphaned concepts. Will play around with this and see if this approach works for the ICD11 FHIR endpoint.</p>",
        "id": 270623193,
        "sender_full_name": "Jonathan Payne",
        "timestamp": 1643924945
    }
]