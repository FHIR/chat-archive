[
    {
        "content": "<p>What is the expected behaviour if you:</p>\n<ul>\n<li>have a CodeSystem and a ValueSet with the same value in their <code>CodeSystem.valueSet</code> and <code>ValueSet.url</code> elements</li>\n<li>call the <code>ValueSet$expand</code> operation, passing in this value in the <code>url</code> parameter?</li>\n</ul>",
        "id": 153938832,
        "sender_full_name": "John Grimes",
        "timestamp": 1519108422
    },
    {
        "content": "<p>if you have a CodeSystem and a ValueSet with the same value in their CodeSystem.valueSet and ValueSet.url elements, then it is expect that the compose of the value set simply includes the entire code system</p>",
        "id": 153938842,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519111092
    },
    {
        "content": "<p>and $expand will return the expansion which is the whole code system</p>",
        "id": 153938843,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519111106
    },
    {
        "content": "<p>according to the compose</p>",
        "id": 153938844,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519111115
    },
    {
        "content": "<p>...but what if the ValueSet contains concepts from more than one Code System - or there are additional constraining parameters, e.g. a text filter?</p>",
        "id": 153938845,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1519111274
    },
    {
        "content": "<p>I guess what I am asking is would you expect the server to give preference to the CodeSystem or the ValueSet - in terms of selecting a definition on which to base the calculation of the expansion?</p>",
        "id": 153938849,
        "sender_full_name": "John Grimes",
        "timestamp": 1519111386
    },
    {
        "content": "<p>Well, one could argue that implicit value sets are really <em>just</em> runtime artefacts, therefore the ValueSet definition is going to be contained in the related CodeSystem resource (plus, possibly in R4, a TerminologyCapabilities resource).</p>",
        "id": 153938852,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1519111640
    },
    {
        "content": "<p>it's an error if the value set contains anything other than 'all the code system' - that's why the code system claims that it's the value set that contains all (and only) the code system</p>",
        "id": 153938856,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519112789
    },
    {
        "content": "<p>the server ignores the codesystem - the fact that CodeSystem.valueSet has a value or not is only useful in the case that someone has the code system, and wonders what the value set that is 'all the code system' is. Otherwise it's meaningless</p>",
        "id": 153938858,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519112831
    },
    {
        "content": "<p>Presumably you're talking about the implicit ValueSet 'definition' here, rather than the expansion of an implicit value set? In practical terms, my server creates implicit Value Set and Code System resources for major Code Systems, such as SNOMED CT, from a single class.</p>",
        "id": 153938864,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1519113214
    },
    {
        "content": "<p>it doens't matter whether the value set is implicit or explicit</p>",
        "id": 153938865,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519113253
    },
    {
        "content": "<p>In my implementation, I store the definitions of extensional and intensional value sets (e.g. the test artefacts used by Touchstone) in separate classes, so from that perspective I handle implicit and explicit value sets differently. The data extraction layer is the same for intensional and implicit value sets - i.e. those based on a query rather than a pre-determined enumerated list.</p>",
        "id": 153938867,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1519113615
    },
    {
        "content": "<p>I feel as though you confused the definition of implicit vs explicit and intensional vs extensional there.</p>",
        "id": 153938868,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519114259
    },
    {
        "content": "<p>but it doesn't really matter here - a valueset nominated in CodeSystem.valueSet will (once made explicit, if necessary) have neither concept list or filter - just a statement to include the whole code system</p>",
        "id": 153938869,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519114315
    },
    {
        "content": "<p>Possibly :)  My definitions are rather more practical than theoretical and I'll never expand Value Sets based on large code systems, e.g. SNOMED CT, without any additional filters (for the 'fun' exception see the VS expansion value set comparison tool at <a href=\"http://ontoserver.csiro.au/vstool/\" target=\"_blank\" title=\"http://ontoserver.csiro.au/vstool/\">http://ontoserver.csiro.au/vstool/</a> - Health Intersections gives quite an 'upright' response.)</p>",
        "id": 153938875,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1519115025
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <br>\nI've spent a bit of time searching for where it says this in the spec (STU3), the part about it being an error if the explicit ValueSet does not contain all the codes. Would you be able to point me in the right direction?<br>\nThe behaviour in Ontoserver is to ignore the explicit ValueSet and favour the expansion of the implicit ValueSet within the CodeSystem.</p>",
        "id": 153938899,
        "sender_full_name": "John Grimes",
        "timestamp": 1519120317
    },
    {
        "content": "<p>it's from the definition: Canonical URL of value set that contains the entire code system.<br>\nComments:  The definition of the value set SHALL include all codes from this code system, and it SHALL be immutable.</p>",
        "id": 153938900,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519120551
    },
    {
        "content": "<p>not sure what explicit or implicit value sets have to do with this</p>",
        "id": 153938901,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519120573
    },
    {
        "content": "<p>Should we change it to say something like: \"The definition of the value set SHALL include all codes from this code system and only codes from this code system, and it SHALL be immutable.\"?</p>",
        "id": 153938924,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1519129469
    },
    {
        "content": "<p>sure. want to create a task for that?</p>",
        "id": 153938926,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1519129503
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=15587\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=15587\">GF#15587</a></p>",
        "id": 153938937,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1519133691
    }
]