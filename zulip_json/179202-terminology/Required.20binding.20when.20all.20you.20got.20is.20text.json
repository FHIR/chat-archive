[
    {
        "content": "<p>On the Argonaut call today we reviewed this issue from an earlier <a href=\"#narrow/stream/implementers/topic/Definition.20Problem\" title=\"#narrow/stream/implementers/topic/Definition.20Problem\">Zulip chat</a>  for how to deal with the use case when all you got is a bit of free text for a required CodeableConcept element.   I summarized thes data elements this affects for Argonaut profiles  <a href=\"https://github.com/argonautproject/implementation-program/issues/57\" target=\"_blank\" title=\"https://github.com/argonautproject/implementation-program/issues/57\">here</a>.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  was interested in use cases and the basic use case is when your system has only text and no code and the element has a required binding.   We are exploring options including :</p>\n<p>1. proposing changes/clarification to  spec for Required with CodeableConcept<br>\n2. proposing a new binding strength to specification.<br>\n3. Move everything in Argonaut profiles to extensible...</p>\n<p>Since the consensus is this is not just an Argonaut problem we want to revisit it here.</p>",
        "id": 153856113,
        "sender_full_name": "Eric Haas",
        "timestamp": 1478647566
    },
    {
        "content": "<p>So if you have text and no code, how is that not an \"Extensible\" circumstance?  Are you dealing with unencoded data?  I.e. the concept in the text could be expressed with one of the required codes, but the sending system wasn't smart enough to do so?</p>",
        "id": 153856116,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1478650973
    },
    {
        "content": "<p>yes it sounds like extensible to me</p>",
        "id": 153856120,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478657420
    },
    {
        "content": "<p>Our struggle in Argonaut is that for almost every element we are hearing that in certain circumstances, systems may only have text -- does that mean all bindings should be extensible?</p>",
        "id": 153856130,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1478662649
    },
    {
        "content": "<p>They only have text because they can't map it to one of the codes, or they only have text because they don't know how to translate the text to the appropriate matching code?</p>",
        "id": 153856142,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1478664180
    },
    {
        "content": "<p>If the former, it's definitely extensible.  If the latter, then it's a bit tougher to say.</p>",
        "id": 153856143,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1478664205
    },
    {
        "content": "<p>what's the resistance to making them extensible?</p>",
        "id": 153856145,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478664653
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  it's more often the latter </p>",
        "id": 153856146,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1478664820
    },
    {
        "content": "<p>One concern is ability to perform conformance testing -- with extensible, any local would be allowed...yes, I know that's not intent of extensible...</p>",
        "id": 153856147,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1478664855
    },
    {
        "content": "<p>I'm not sure that I follow. If you allow text, why not allow any local code? </p>",
        "id": 153856148,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478664930
    },
    {
        "content": "<p>Alternative is to make the elements optional - provide a proper code or don't send them.</p>",
        "id": 153856149,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1478664998
    },
    {
        "content": "<p>Agree there's no difference between text and a local code</p>",
        "id": 153856150,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1478665030
    },
    {
        "content": "<p>text you can display.</p>",
        "id": 153856151,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1478665069
    },
    {
        "content": "<p>You can display the \"display\" for a local code too.</p>",
        "id": 153856152,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1478665091
    },
    {
        "content": "<p>yes, you could include text with local code which might be best solution</p>",
        "id": 153856153,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1478665095
    },
    {
        "content": "<p>text should be present anyway whatever</p>",
        "id": 153856154,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478665108
    },
    {
        "content": "<p>I agree - seems like extensible</p>",
        "id": 153856253,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1478728313
    },
    {
        "content": "<p>Why bother defining vocabulary at all extensible is as good as example to conformance testing.  The local code is useless but the text is useful for human displayt and the use case I heard is that sometimes through translations the system may only have text (no codes)_ for a coded field with required binding.   </p>",
        "id": 153856262,
        "sender_full_name": "Eric Haas",
        "timestamp": 1478740379
    },
    {
        "content": "<p>besides the Required binding instances are based on regulatory requirements which say use this.  That doesn't sound like substitutions are OK.</p>",
        "id": 153856263,
        "sender_full_name": "Eric Haas",
        "timestamp": 1478740564
    },
    {
        "content": "<p>so when is just text ok? </p>",
        "id": 153856271,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478749998
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> Help me understand what you mean by saying that allowing text only (a local code = text) when there is a required binding to a value set is an \"Extensible circumstance\"? Do you mean create an extension to the resource/profile or do you mean change the binding, or do you mean that the value set \"is extensable\" so people can send anything they want in the value slot as long as they pinky-swear that they honestly really tried to translate before giving up so 'supposedly' the text does not have a meaning equal to one of the required codes? </p>",
        "id": 153856372,
        "sender_full_name": "Robert McClure",
        "timestamp": 1478804988
    },
    {
        "content": "<p>Lloyd is saying that if you allowed to send text instead of a code, then the binding should be extensible, since 'sir, I really did try to use a code instead of a text' is actually much less likely to be true than 'sir, I really did try to use the recommended code instead of a local code' (one use user behaviour, the other is system behaviour)</p>",
        "id": 153856375,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478805338
    },
    {
        "content": "<p>What we're trying to understand is why the Argonaut participants think that there's a problem with an extensible binding, and want to use a required binding when they can't</p>",
        "id": 153856376,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478805394
    },
    {
        "content": "<p>My understanding of the problem with Argonaut - in v3 terms - is one of UNC (unencoded), not OTH (other).  I.e. the concept maps to one of the approved codes - as is required by legislation.  But the concept has been captured as text and the software isn't smart enough to figure out what code is applicable.  In which case, you're not really \"extending\" the value set.  And we don't have a good solution for that use-case other than making the coded element optional and sending the text in a parallel extension.</p>",
        "id": 153856393,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1478809779
    },
    {
        "content": "<p>Our problem with extensible is that its too easy to \"cheat\".   The only reason to use it is to allow for the text only option.  (and yes the point on text only not following the regs is well taken)  But the text can be read by the provider/patent at least.  The local code is useless for that.   The implementers problem with required is you can't just have text which in some cases is all they got.   We could throw a DAR extension in there but they are cold to that idea.</p>",
        "id": 153856394,
        "sender_full_name": "Eric Haas",
        "timestamp": 1478810004
    },
    {
        "content": "<p>It's not really a question of cheating.  Required can be validated automatically. Extensible requires human validation.  But a human can easily determine whether you're compliant or not</p>",
        "id": 153856404,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1478812477
    },
    {
        "content": "<p>it's wrong to think that there's no value in a local code. Many vendors could use their own codes even if other vendors can't. </p>",
        "id": 153856408,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478813102
    },
    {
        "content": "<p>just because the local code is not useful to everyone does not mean it is useful for nothing</p>",
        "id": 153856409,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478813135
    },
    {
        "content": "<p>obviously a proper code is better than a local code, but if you're going to allow just text, why not allow a local code? </p>",
        "id": 153856411,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478813177
    },
    {
        "content": "<p>and if you're going to allow just text, cheating got even easier</p>",
        "id": 153856412,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478813191
    },
    {
        "content": "<p>But you are assuming there is a local code when the use case I'm describing its just text.  any way it seems like the consensus here is extensible bindings.   And one step down a slippery slope.  <span class=\"user-mention\" data-user-id=\"191356\">@Jenni Syed</span>  and  <span class=\"user-mention\" data-user-id=\"191403\">@Michelle (Moseman) Miller</span>  and <span class=\"user-mention\" data-user-id=\"191914\">@Danielle Friend</span>  have you been following this chat?</p>",
        "id": 153856416,
        "sender_full_name": "Eric Haas",
        "timestamp": 1478813675
    },
    {
        "content": "<p>User and vendor defined codes have proved to be problematic in NZ from an HIE perspective as many of these codes don't pass RegEx tests in standards (e.g. spaces aren't permitted by HL7 v3 and CDA). While I agree that they may be useful from the viewpoint of the facility where they are created and used they are, almost by definition, not inter-operable and need to be accompanied (or replaced) by text when exchanged.</p>",
        "id": 153856417,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1478813760
    },
    {
        "content": "<p>in Australia, must of the vendors have common codes across sites. And we rescinded the space issue in FHIR because of that problem</p>",
        "id": 153856420,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478814451
    },
    {
        "content": "<p>but agree that text should always be present</p>",
        "id": 153856421,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478814463
    },
    {
        "content": "<p>Eric, we are not assuming that there's a local code. There should always be text. but if you allow just text, then what is the benefit of saying that you can't provide a local code? </p>",
        "id": 153856423,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478814553
    },
    {
        "content": "<p>btw, you can do this with a requried binding if you really want - in the profile, walk into the CodeableConcept, set text to min cardinality = 1, and then coding to 0..1, with a required binding to whatever value set. Then you have said<br>\n- you have to provide text<br>\n- if you can, you provide a code from the recommended value set</p>",
        "id": 153856425,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478814854
    },
    {
        "content": "<p>I read the definition of Extensible at <a href=\"http://hl7.org/fhir/2016Sep/terminologies.html\" target=\"_blank\" title=\"http://hl7.org/fhir/2016Sep/terminologies.html\">http://hl7.org/fhir/2016Sep/terminologies.html</a> in a way that does not fit this discussion.</p>\n<blockquote>\n<p>To be conformant, instances of this element must include a code from the specified value set if any of the codes within the value set can apply to the concept being communicated. If the value set does not cover the concept (based on human review), alternate codings (from different code systems, including local ones) or (data type allowing) text) may be included instead.</p>\n</blockquote>\n<p>I read this as saying that one uses an approved code unless nothing has the right meaning. <br>\nBut this discussion assumes that Extensible means one uses an approved code if one is able.</p>\n<p>Which is correct? Does the definition of Extensible need clarifying?</p>",
        "id": 153856483,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1478840171
    },
    {
        "content": "<p>I think that the definitions is carefully chosen and correct. There's some potential confusion about whether you aren't able to have the right code because you aren't able or because the code system isn't able to - it can be hard, operationally, to separate those </p>",
        "id": 153856484,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478840634
    },
    {
        "content": "<p>in the end, the determination of whether there is a correct code available that wasn't used can only be done by a human. It sounds like the argonaut group wanted more certainty than that, but you can't have more certainty if you're going to allow text only</p>",
        "id": 153856485,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478840700
    },
    {
        "content": "<p>I guess \"any of the codes within the value set can apply to the concept being communicated.\" is to be interpreted as something like  \"any of the codes within the value set can <strong>be applied by the authoring system</strong> to the concept being communicated.\" <br>\nI think that reading is useful, but it is not obvious to me.</p>",
        "id": 153856490,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1478845172
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Right now, required binding prohibits bare text.  The validation rule is \"if the element is present, it must have a code from the specified value set\".  I.e. You can't send just text, just extensions or anything else unless you've code a coding from the value set.</p>",
        "id": 153856528,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1478873549
    },
    {
        "content": "<p>Seems we need to call upon the extended set of Normative words defined on April 1st 2013 in IETF RFC 6919 <a href=\"https://tools.ietf.org/html/rfc6919\" target=\"_blank\" title=\"https://tools.ietf.org/html/rfc6919\">https://tools.ietf.org/html/rfc6919</a> ---  The key words \"MUST (BUT WE KNOW YOU WON'T)\", \"SHOULD CONSIDER\",<br>\n   \"REALLY SHOULD NOT\", \"OUGHT TO\", \"WOULD PROBABLY\", \"MAY WISH TO\",<br>\n   \"COULD\", \"POSSIBLE\", and \"MIGHT\"   <br>\n:-)</p>",
        "id": 153856537,
        "sender_full_name": "John Moehrke",
        "timestamp": 1478876624
    },
    {
        "content": "<p>Perhaps we've with good intension linked two things that need to be separated: 1) the desire for an encoding to be from a specified interoperable value set, and 2) the the value of sending text humans can use to deliver care. BTW, I agree with Graham that a local code is simply a specific kind of \"text\" and I see no reason to not send it if you have it as long as it's clear that it is the local code and not something else. What I don't think we should allow is to consider that code as an interoperable code from a required value set. </p>\n<p>In the binding semantics project (<a href=\"http://wiki.hl7.org/index.php?title=Binding_Syntax#Current_Working_Material\" target=\"_blank\" title=\"http://wiki.hl7.org/index.php?title=Binding_Syntax#Current_Working_Material\">http://wiki.hl7.org/index.php?title=Binding_Syntax#Current_Working_Material</a>) we can support this although \"text' is not discussed specifically. This would be a binding to the \"required\" value set that has a strength of CEA (Coding extensions allowed) and a conformance verb of FIXED (it could be something else but since we are implementing on this binding, it's not important.) The point here is that with CEA you can send something that is NOT in the required value set as long as you flag it as \"An Exception\" in some way. Seems we could adopt something like this in FHIR that would allow text, +/- a local code as the exception transmission. <span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> - do you agree?</p>",
        "id": 153856541,
        "sender_full_name": "Robert McClure",
        "timestamp": 1478879623
    },
    {
        "content": "<p>no I still don't agree with the logic of flagging that your exception to the rules is an exception to the rules. This achieves nothing than duplication and confusion. </p>",
        "id": 153856599,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478896087
    },
    {
        "content": "<p>Lloyd, I think you need to read what I wrote again - your comment suggests you didn't understand it</p>",
        "id": 153856600,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1478896106
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> You're right.  I'd missed that you were doing the binding at the Coding level rather than the CodeableConcept level.  That would work.  (Though you'd still have to have a binding of some sort at the CodeableConcept level too.)</p>",
        "id": 153856671,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1478958972
    }
]