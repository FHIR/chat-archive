[
    {
        "content": "<p>How do I define a ValueSet that allows all codes from all versions of a CodeSystem, e.g.<br>\nif I have multiple versions of ICD-10 and thus multiple CodeSystem resources with the same url=http://hl7.org/fhir/sid/icd-10-de but different versions (\"2017\", \"2016\" etc) .<br>\nThe proper Version always depends on context (like encounter admission date), so when profiling, I don't want to bind to any particular version of the catalogue, just to icd-10 in general.</p>\n<p>How do I define a valueSet that includes <em>all</em> ICD-10 Codes regardless of version? Do I need to include all versions explicitly , like</p>\n<div class=\"codehilite\"><pre><span></span>    <span class=\"nt\">&lt;compose&gt;</span>\n        <span class=\"nt\">&lt;include&gt;</span>\n            <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://hl7.org/fhir/sid/icd-10-de&quot;</span> <span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;version</span> <span class=\"na\">value =</span> <span class=\"s\">&quot;2017&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/include&gt;</span>\n        <span class=\"nt\">&lt;include&gt;</span>\n            <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://hl7.org/fhir/sid/icd-10-de&quot;</span> <span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;version</span> <span class=\"na\">value =</span> <span class=\"s\">&quot;2016&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/include&gt;</span>\n        <span class=\"nt\">&lt;include&gt;</span>\n            <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://hl7.org/fhir/sid/icd-10-de&quot;</span> <span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;version</span> <span class=\"na\">value =</span> <span class=\"s\">&quot;2015&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/include&gt;</span>\n        ...\n    <span class=\"nt\">&lt;/compose&gt;</span>\n</pre></div>\n\n\n<p>or do I just omit the version altogether and the tx server will automagically expand the valueset to include all versions?</p>",
        "id": 153899336,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1501277024
    },
    {
        "content": "<p>well, not quite the same - omitting the version defers the choice of version to the terminology server</p>",
        "id": 153899378,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501281400
    },
    {
        "content": "<p>we haven't discussed evaluating outcomes across more than one version. why is that a good idea?</p>",
        "id": 153899379,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501281422
    },
    {
        "content": "<p>Selecting multiple versions can mean you have concepts that overlap in ways that weren't intended by the organization maintaining the terminology.  That said, being able to validate across all versions will be a common requirement.</p>",
        "id": 153899527,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1501355685
    },
    {
        "content": "<p>There's not necessarily an overlap, since you can set the CodeSystem to versionNeeded=true, then all instances of the codes must carry a version.<br>\nBut as LLoyd said, in Profiles we don't want to allow only one version, as they can change from time to time and the validation will never be able to evaluate the rules to decide which version applies (e.g. correct version of ICD-10 catalogue in a Condition is determined by the admission date of the Encouter it references - that's beyond the scope of what validation can do.<br>\nBut we need profiles to be able to make ICD-10 mandatory.</p>\n<p>And right now I'm stuck figuring out how to define the ValueSet for the terminology binding that says \"any ICD-10 code is valid, as long as it's a valid code in the version of the catalogue it claims to be from\".</p>",
        "id": 153900406,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1501778776
    },
    {
        "content": "<p>\"correct version of ICD-10 catalogue in a Condition is determined by the admission date of the Encouter it references - that's beyond the scope of what validation can do.\" - sounds pretty easy to do this in an invariant</p>",
        "id": 153900426,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501795045
    },
    {
        "content": "<p>\"any ICD-10 code is valid, as long as it's a valid code in the version of the catalogue it claims to be from\". - also could be done in an invariant, or in a value set that simply imports all versions of ICD-10</p>",
        "id": 153900427,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501795076
    },
    {
        "content": "<p>\"...or in a value set that simply imports all versions of ICD-10\"<br>\nThat's exactly what I'm trying to do. But the question is: Do I explicitly have to explicitly include every single version of ICD-10 (Assuming that each of them is a  CodeSystem Resource with the same canonical url but different versions) or is it enough to just include the canonical url and the TX server will \"know\" that all CodeSystems matching that url need to be included regardless of version.</p>\n<p>Even if I validate the \"correct\" version of a code through an invariant checking the Encounter context at runtime, I'd still need a ValueSet with <em>all</em> versions for the Terminology binding...</p>",
        "id": 153900469,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1501840614
    },
    {
        "content": "<p>you need to list them all at the moment</p>",
        "id": 153900478,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501841517
    },
    {
        "content": "<p>ok. Thanks! This is currently not clearly stated in the spec (unless I'm not seeing it).<br>\nThis bullet point (sort of) suggests that an unversioned inclusion means \"all of them\": </p>\n<blockquote>\n<p>If the system reference is not version specific and filters are present, then the contents of the value set are open and change over time as the underlying code systems are updated</p>\n</blockquote>\n<p><a href=\"http://build.fhir.org/valueset.html#compositions\" target=\"_blank\" title=\"http://build.fhir.org/valueset.html#compositions\">http://build.fhir.org/valueset.html#compositions</a></p>",
        "id": 153900485,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1501842237
    },
    {
        "content": "<p>This seems like something that should have an easier convention.  It's also problematic if you want to allow for future versions as you can't really reference those in advance and it would be challenging from a maintenance perspective to have to update the value set every time a new version comes out.  We have a convention for referencing versions of <code>[canonicalURL]|[businessVersion]</code>.  Would it make sense to use a convention of <code>[canonicalUrl]|*</code> if you wanted to include all versions?  Obviously those who want a particular range of versions would need to enumerate, but this would cover a lot of use-cases.</p>",
        "id": 153900520,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1501860517
    },
    {
        "content": "<p>Yes, the necessity to permantently update the ValueSets when a new version comes out, is a concern. As for the syntax of the convention, I don't have a preference. Whatever suits the TX server implementers best...</p>",
        "id": 153900523,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1501861479
    },
    {
        "content": "<p>My perspective is</p>\n<ul>\n<li>Value set definition that does not LOCK any or all of the definition to a specifIc code system version, means to test conformance to that value set definition (version) you have to allow all valid code from any valid expansion. </li>\n<li>Binding semantics come next, if a binding is not STATIC, then to be conformant you need to test against the same thing as above. STATIC will only allow one expansion. I think that code system version should be the one valid when the IG was published</li>\n<li>unless the TS users requests conformance test against a specific code system version, you have to assume any version is ok.</li>\n</ul>",
        "id": 153900556,
        "sender_full_name": "Robert McClure",
        "timestamp": 1501892257
    },
    {
        "content": "<p>note that STATIC is not a think in FHIR. we delegate that decision to the value set</p>",
        "id": 153900582,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501969118
    },
    {
        "content": "<p>Rob's perspective here is different to FHIR, in that we are specific that if neither value set or the expansion profile specifies the version of the code system, the server performing $expand chooses the version</p>",
        "id": 153900583,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1501969201
    },
    {
        "content": "<p>Yes, and I think a significant point there is that in that case the server chooses THE version - it's not mandated (at least not currently), but in most cases it is probably going to be (and agruably should be) a single version and most likely that version of the code system will be the latest one that the server provides (which won't necessarily always or immediately be the latest version of the code system that is available from the code system publisher).  I think that the \"all versions\" value set is a special case (and one that is potentially fraught with problems), and that, if used, it would be best if it was invoked explicity.  In that regard, Lloyd's suggestion of of [canonicalUrl]|* is probably worth considering.</p>",
        "id": 153900601,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1502022810
    },
    {
        "content": "<p>Would * be interpreted as \"all versions\" or as \"all versions known to this terminology server\"?</p>",
        "id": 153921212,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1511403164
    },
    {
        "content": "<p>I'm also not sure I understand the original use-case.  Surely ICD10-DE 2017 is a superset of ICD10-DE 2016?  but just with some codes active status changed.  I would expect that just this would be suitable?</p>\n<div class=\"codehilite\"><pre><span></span>   &lt;compose&gt;\n        &lt;include&gt;\n            &lt;system value=&quot;http://hl7.org/fhir/sid/icd-10-de&quot; /&gt;\n        &lt;/include&gt;\n    &lt;/compose&gt;\n</pre></div>",
        "id": 153921213,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1511403361
    }
]