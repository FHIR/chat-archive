[
    {
        "content": "<p>I'm planning to demonstrate some of the \"cool\" things we can do with SNOMED using FHIR-based terminology services.  After some discussion with Grahame, I'm getting the impression that things aren't as far along as I thought they were.  For example, he wasn't aware of anyone who has ability to do subsumption testing on data with post-coordinated codes or doing \"in:\" testing for value sets that include filters on anything other than is-a relationships.   So what I'm looking for now is what SNOMED terminology capabilities <em>do</em> exist in publicly accessable test servers that I can show off and that implementers can do some testing with.</p>",
        "id": 154008348,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539291467
    },
    {
        "content": "<p>also, we have not defined a way - other than ECL - to say \"all codes with a body-site of liver\"</p>",
        "id": 154008349,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539291529
    },
    {
        "content": "<p>Our link to ECL in the spec doesn't resolve.   If I can define the value sets using ECL, that might be good enough.  But I need to know how to write it...</p>",
        "id": 154008351,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539291731
    },
    {
        "content": "<p>I'm not going to support ECL anytime soon. <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> might</p>",
        "id": 154008352,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539291769
    },
    {
        "content": "<p>Not true regarding in: -- while we don't yet support SNOMED post coordination, Ontoserver supports $expand (with filter) and $validate-code are supported for SNOMED, LOINC and FHIR CodeSystems with ValueSets using \"arbitrary\" filters (as declared in the CodeSystem resource)</p>",
        "id": 154008353,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1539291801
    },
    {
        "content": "<p>We have full ECL support too, both via the ECL Implicit ValueSet URIs and in filters</p>",
        "id": 154008354,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1539291834
    },
    {
        "content": "<p>what filters do you support for SCT?</p>",
        "id": 154008355,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539291845
    },
    {
        "content": "<p>and you don't unfortunately, have what Lloyd meant when he referred to :in</p>",
        "id": 154008356,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539291870
    },
    {
        "content": "<p>You can play with ECL here <a href=\"http://ontoserver.csiro.au/shrimp/ecl/\" target=\"_blank\" title=\"http://ontoserver.csiro.au/shrimp/ecl/\">http://ontoserver.csiro.au/shrimp/ecl/</a></p>",
        "id": 154008357,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1539291871
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span>GET [base]/Condition?code:in=[valueset]\n</pre></div>",
        "id": 154008358,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539291891
    },
    {
        "content": "<p>which I do have, but none of the SCT smarts; just straight is-a</p>",
        "id": 154008359,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539291911
    },
    {
        "content": "<p>Re :in, we have done (do) this using a generic HAPI server that delegates terminology operations to an external Ontoserver instance.</p>",
        "id": 154008360,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1539291927
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"194480\">@Mark Braunstein</span> and <span class=\"user-mention\" data-user-id=\"191376\">@Jim Steel</span> are using such a server for the student projects in the FHIR course they're teaching at Uni of Queensland this semester</p>",
        "id": 154008363,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1539292007
    },
    {
        "content": "<p>which link were you referring to?<br>\nthe one in <a href=\"http://build.fhir.org/snomedct.html#4.3.1.0.8.4\" target=\"_blank\" title=\"http://build.fhir.org/snomedct.html#4.3.1.0.8.4\">4.3.1.0.8.4</a> resolves</p>",
        "id": 154008364,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1539292009
    },
    {
        "content": "<p>is that server publicly available?</p>",
        "id": 154008366,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539292072
    },
    {
        "content": "<p>Ontoserver 5.2.0 (on the cusp of release, but also in the currently deployed public endpoint) also supports /$validate for arbitrary resources</p>",
        "id": 154008367,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1539292108
    },
    {
        "content": "<p>yes, I'm pretty much certain that it is publicly available</p>",
        "id": 154008368,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1539292121
    },
    {
        "content": "<p>although I'm always logged in, so a little harder to check</p>",
        "id": 154008369,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1539292149
    },
    {
        "content": "<p>I meant, is the ontoserver for QU students publicly available</p>",
        "id": 154008370,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539292180
    },
    {
        "content": "<p>sorry</p>",
        "id": 154008371,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1539292188
    },
    {
        "content": "<p>Wrt supported SNOMED filters:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"s2\">&quot;filter&quot;</span><span class=\"err\">:</span> <span class=\"p\">[</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;concept&quot;</span><span class=\"p\">,</span>\n                        <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Includes all concept ids that have a transitive is-a relationship with the code provided as the value.&quot;</span><span class=\"p\">,</span>\n                        <span class=\"nt\">&quot;operator&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                            <span class=\"s2\">&quot;is-a&quot;</span>\n                        <span class=\"p\">],</span>\n                        <span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;A SNOMED CT code&quot;</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;concept&quot;</span><span class=\"p\">,</span>\n                        <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Includes all concept ids that have a transitive is-a relationship with the code provided as the value, excluding the code itself.&quot;</span><span class=\"p\">,</span>\n                        <span class=\"nt\">&quot;operator&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                            <span class=\"s2\">&quot;descendent-of&quot;</span>\n                        <span class=\"p\">],</span>\n                        <span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;A SNOMED CT code&quot;</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;concept&quot;</span><span class=\"p\">,</span>\n                        <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Includes all concept ids that are active members of the reference set identified by the concept id provided as the value.&quot;</span><span class=\"p\">,</span>\n                        <span class=\"nt\">&quot;operator&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                            <span class=\"s2\">&quot;in&quot;</span>\n                        <span class=\"p\">],</span>\n                        <span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;A SNOMED CT concept id&quot;</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;constraint&quot;</span><span class=\"p\">,</span>\n                        <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;The result of the filter is the result of evaluating the given SNOMED CT Expression Constraint.&quot;</span><span class=\"p\">,</span>\n                        <span class=\"nt\">&quot;operator&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                            <span class=\"s2\">&quot;=&quot;</span>\n                        <span class=\"p\">],</span>\n                        <span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;A SNOMED CT Expression Constraint&quot;</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;expression&quot;</span><span class=\"p\">,</span>\n                        <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;The result of the filter is the result of evaluating the given SNOMED CT Expression Constraint.&quot;</span><span class=\"p\">,</span>\n                        <span class=\"nt\">&quot;operator&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                            <span class=\"s2\">&quot;=&quot;</span>\n                        <span class=\"p\">],</span>\n                        <span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;A SNOMED CT Expression Constraint&quot;</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;parent&quot;</span><span class=\"p\">,</span>\n                        <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Includes all concept ids that have/do not have a parent concept.&quot;</span><span class=\"p\">,</span>\n                        <span class=\"nt\">&quot;operator&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                            <span class=\"s2\">&quot;exists&quot;</span>\n                        <span class=\"p\">],</span>\n                        <span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;A boolean, to specifiy whether or not the property has a value.&quot;</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;child&quot;</span><span class=\"p\">,</span>\n                        <span class=\"nt\">&quot;description&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Includes all concept ids that have/do not have a child concept.&quot;</span><span class=\"p\">,</span>\n                        <span class=\"nt\">&quot;operator&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n                            <span class=\"s2\">&quot;exists&quot;</span>\n                        <span class=\"p\">],</span>\n                        <span class=\"nt\">&quot;value&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;A boolean, to specifiy whether or not the property has a value.&quot;</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">]</span><span class=\"err\">,</span>\n</pre></div>",
        "id": 154008373,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1539292233
    },
    {
        "content": "<p>so could you use one of those filters to say 'with a bodysite of X'? (or 'with laterality')?</p>",
        "id": 154008378,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539292356
    },
    {
        "content": "<p>I'm not sure whether that UQ server is publicly available.  We can sort out something short-term for demo purposes for <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> -- you'll need to contact <span class=\"user-mention\" data-user-id=\"191376\">@Jim Steel</span> though as I'm about to jump on a plane to Vancouver</p>",
        "id": 154008379,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1539292460
    },
    {
        "content": "<p>Certainly you can use the <code>constraint</code> filter to do that with ECL - eg<br>\n<code>constraint</code> <code>=</code> <code>* : &lt;&lt; 363698007|Finding site| = &lt;&lt; 122865005|Gastrointestinal tract structure|</code></p>",
        "id": 154008381,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1539292578
    },
    {
        "content": "<p>However, the ECL support only works with pre-coordinated concepts, not post-coordinated ones (wrt the <code>:in</code> implementation)</p>",
        "id": 154008382,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1539292691
    },
    {
        "content": "<p>My server (Terminz) supports creating implicit ValueSets using ECL - although it's very much WIP, a little slow, and doesn't yet implement the entire language. <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> , I'll be happy to demonstrate this to you in Vancouver. As for post-coordination, I don't know any FHIR API that supports that or, indeed, how one might return these expressions to FHIR clients in a 'standard' format as there are several options for doing this.</p>",
        "id": 154008388,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1539294219
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> does your server support externalised terminology operations?</p>",
        "id": 154008394,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1539295356
    },
    {
        "content": "<p>no. it's possible; I would just use the closure operation (that's what i used internally)</p>",
        "id": 154008395,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539295397
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> ECL link was from 3.0.  You're right that the one on <a href=\"http://build.fhir.org\" target=\"_blank\" title=\"http://build.fhir.org\">build.fhir.org</a> works.</p>",
        "id": 154008407,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539296545
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> <span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span> I'm trying to figure out scenarios for the developers at the Day of the Dev session on Wednesday in Vancouver to try out.  The intention is to show software developers how they can start doing clinically useful things with SNOMED once they've got FHIR Terminology services in the mix - decision support, data entry, etc.</p>\n<p>Use-case 1 was to be: App supports a user in choosing a code that meets the requirements of an intensional SNOMED value set - including the ability to pick appropriate post-coordinated qualifiers.  </p>\n<p>While it sounds like there's an ability for some servers to use $validate to test \"is this post-coordinated expression valid under this value set\", there's no way for a system to expose what qualifiers and values would be legal for a user to choose from in doing the post-coordination.  So for this one we'll have to settle for using the $expand with filter for type-ahead and indicate that post-coordination selection is \"future\".</p>\n<p>Use-case 2 was to be: App allows filtering for Observations and/or Conditions that meet complex SNOMED filters (including qualifier relations and post-coordinated concepts) and returns relevant data using ValueSet definitions and the :in search modifier.</p>\n<p>It sounds like we can do some ECL-based stuff if we can get a server set up, but the post-coordinated subsumption testing is still a no-go.</p>\n<p>Is that an accurate assessment?</p>",
        "id": 154008412,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539297292
    },
    {
        "content": "<p>Post coordination is pretty much a no go, yes.  However, we've struggled to find people with real post coordination needs. Our previous (non fhir) generation of ontoserver had post coordination support but nobody (except us, on internal research projects) ever really used it</p>",
        "id": 154008419,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1539298161
    },
    {
        "content": "<p>it's a mexican stand off. no one uses it because no one is able to use it. no one is able to use it because the tools don't support it because no one uses it</p>",
        "id": 154008421,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1539298239
    },
    {
        "content": "<p>SNOMED's a lot more limited in expressiveness without it.   If we can make it \"easy\" for apps to use it, they will.  Have we defined the necessary services?  E.g. \"What are the qualified codes that are specializes of code x that are valid against value set y, organized by qualification type?\"</p>",
        "id": 154008423,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539298413
    },
    {
        "content": "<p>WRT scenario 1, you'd need the SNOMED machine readable concept model (MRCM) to do this in a general purpose way, but could still use ECL to demo the concept.  E.g., if a code X has been selected and you want to offer appropriate 'severity' qualifiers, then the ECL &lt; severity MINUS &gt; X.severity should work (this is offering descendants of severity as per the MRCM, but excluding any severity that's not compatible with an possibly already modelled severity for X)</p>",
        "id": 154008424,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1539298507
    },
    {
        "content": "<p>We are aiming to support post coordination, but there are significant changes happening to snomed's description logic at the moment that we need to deal with first.<br>\nAlso, we need to understand better what the use-cases are so we can prioritise the feature set</p>",
        "id": 154008428,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1539299011
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  Our UQ Student deployment of our FHIR server (which delegates :in searches to a terminology server, in our case Ontoserver) is  part of a SMART-on-FHIR framework, so its not publicly accessible at present. I can hook you up with credentials if you like (either client credentials for Postman requests, or a google OpenID account authorisation for an authorization code flow.</p>\n<p>Or if that's too confusing for your demo, I can probably arrange to stand up a FHIR server without any of the SMART stuff. It may not have data in it though.</p>",
        "id": 154008439,
        "sender_full_name": "Jim Steel",
        "timestamp": 1539303762
    },
    {
        "content": "<p>My understanding is that, after those changes, it will no longer be possible to perform equivalence testing without a classifier. That would raise the bar even higher for those implementing post-coordination. The key issue for me is how we render them so that they are interoperable, distributable and searchable using the RF2 format. I'd love to see some good examples as test cases, but my gut feeling is that if they are useful they should be promoted, as pre-coordinated concepts, to the International Edition asap rather than sitting in Expression Libraries for years.</p>",
        "id": 154008441,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1539304043
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191376\">@Jim Steel</span> The intention is to have something developers can try hands-on with that they can get done in a couple of hours after some training.  SMART-on-FHIR (and probably even TLS) might be too steep to climb in the time we have available</p>",
        "id": 154008458,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539311113
    },
    {
        "content": "<p>Yeah, I agree. I can try and stand something up on Monday (our time, late Sunday US/CA time) if you like. Do you need (or do you have) sample data that you'd like in there?</p>",
        "id": 154008461,
        "sender_full_name": "Jim Steel",
        "timestamp": 1539311960
    },
    {
        "content": "<p>For the first use-case, raw SNOMED and a value set for SNOMED diagnosis codes is probably sufficient.  For the second, perhaps a set of patients with conditions that are variations of hypertension and diabetes - and some that have both.</p>",
        "id": 154008463,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539313150
    },
    {
        "content": "<p>you could ping dev ppl at snomed (or chat to them if you're going to the vancouver snomed meeting) as snowstorm has just hit 2.0.0 and... I believe it's available as a read-only instance somewhere.  I believe it now has owl axioms but don't know if they've done the fhir api.</p>",
        "id": 154008485,
        "sender_full_name": "Adam Flinton",
        "timestamp": 1539336808
    },
    {
        "content": "<p>We can also load patient data on my HAPI server.  There's are still issues with the HAPI uploader and the FHIR examples, but I'll see if I can get through that and get that set uploaded on the server.</p>",
        "id": 154008495,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1539345204
    },
    {
        "content": "<p>Any luck <span class=\"user-mention\" data-user-id=\"191376\">@Jim Steel</span> , <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> ?</p>",
        "id": 154009136,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1539617068
    }
]