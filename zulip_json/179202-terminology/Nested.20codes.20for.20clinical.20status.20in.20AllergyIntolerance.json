[
    {
        "content": "<p>A colleague asked me why the code \"resolved\" from the  <a href=\"https://terminology.hl7.org/3.1.0/CodeSystem-allergyintolerance-clinical.html\">AllergyIntolerance clinical status code</a> is nested under \"inactive\". I  was a little puzzled as I had implicitly  assumed the standard code sets bound directly to a <code>code</code> field would always be flat sets of mutually exclusive codes. If the nesting is intended, would it not mean that the meanings of the codes \"inactive\" and \"resolved\" overlap?  Specifically (ignoring the principle of using the most specific code available), would it not mean that formally, it would not be incorrect to put \"inactive\" even if the actual state is \"resolved\"?</p>",
        "id": 276011621,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1647845269
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191985\">@Jay Lyle</span> <span class=\"user-mention\" data-user-id=\"191487\">@Russell Leftwich</span></p>",
        "id": 277473967,
        "sender_full_name": "Robert McClure",
        "timestamp": 1648845001
    },
    {
        "content": "<p>That's hard to answer because the CodeSystem doesn't state a value for hierarchyMeaning!</p>",
        "id": 277474435,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1648845289
    },
    {
        "content": "<blockquote>\n<p>I had implicitly assumed the standard code sets bound directly to a code field would always be flat sets of mutually exclusive codes</p>\n</blockquote>\n<p>no there are many examples where this is not the case</p>",
        "id": 277479447,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1648848220
    },
    {
        "content": "<blockquote>\n<p>If the nesting is intended, would it not mean that the meanings of the codes \"inactive\" and \"resolved\" overlap?</p>\n</blockquote>\n<p>yes. Specifically, resolved means inactive. <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> is correct that there's no explicit hierarchyMeaning but that should be taken to mean that it's subsumption based (btw, Michael, that's an error now, so won't be true in R5)</p>",
        "id": 277479603,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1648848291
    },
    {
        "content": "<p>The intention is that \"resolved\" is a subclass of \"inactive.\" I.e., all resolved instances are inactive; inactive instances may be resolved. Feedback is welcome on how useful (or problematic) this is.</p>\n<p>\"Inactive\" is clearly valid, and applicable to cases of \"resolved\". Whether it would be permissible to use only the parent code is a question we haven't addressed, and may want to leave to the profile level.</p>\n<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span>  That's an issue I had with the ConceptMap equivalence property, since I can imagine multiple axes for a map. But in the case of a value set, being a constraint on the range of an element, I would only expect a subclass relationship. Are there other use cases?</p>",
        "id": 277480428,
        "sender_full_name": "Jay Lyle",
        "timestamp": 1648848784
    },
    {
        "content": "<p><code>grouped-by</code>, <code>is-a</code> , <code>part-of</code>, <code>classified-with</code> are the possible values for hierarchyMeaning.</p>\n<p><code>grouped-by</code>'s definition is particularly broad:</p>\n<blockquote>\n<p>No particular relationship between the concepts can be assumed, except what can be determined by inspection of the definitions of the elements (possible reasons to use this: importing from a source where this is not defined, or where various parts of the hierarchy have different meanings).</p>\n</blockquote>\n<p>But also <code>part-of</code> would mean that the parent-concept is not a generalised substitutable concept for the child-concept.</p>",
        "id": 277482413,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1648849809
    },
    {
        "content": "<p>I'm not suggesting there are not other kinds of relationships, just that when you create a value set for an element, you are specifying a concept domain. The members of that set may have refinement relationships (E coli O25:H4, refinement of E coli O25) but not syntactical navigation (\"Infection caused by Escherichia coli (disorder)\", caused by E coli O25).</p>\n<p>Unless there is a use case for such a thing?</p>",
        "id": 277534011,
        "sender_full_name": "Jay Lyle",
        "timestamp": 1648911340
    },
    {
        "content": "<p>Thanks for the input, clearly my assumptions were off! <span class=\"user-mention\" data-user-id=\"191985\">@Jay Lyle</span> in terms of feedback on this: The use of overlapping codes on different hierarchy levels in standard places like <code>AllergyIntolerance.clinicalStatus</code> seems to put an extra burden on implementers (and/or end users):</p>\n<ol>\n<li>It forces implementers to always keep the parent-child logic in mind when coding, e.g. every time I want to check if smt. is \"inactive\", I need to also check whether it is \"resolved\"</li>\n<li>It is hard to present overlapping codes clearly in a UI. If they are simply put as different options in a drop-down menu, users will most likely assume that they are non-overlapping. Hence, they will be confused about whether to use e.g. <code>inactive</code> or <code>resolved</code> since both may indeed be correct in some cases. To guide users well, some sort of hierarchical (or otherwise fancy) visualization is needed - obviously fine for SNOMED &amp; co, but seems a lot of effort for status codes.</li>\n</ol>\n<p>I think this is compounded by the fact that the parent-child nature of the codes is easy to miss when perusing the ValueSet page &amp; that the formal meaning of such a hierarchy might not even be entirely clear (cf. comment from <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span>). I could absolutely see myself getting tripped up by this, even though I am a relatively seasoned \"FHIR user\".</p>\n<p>Note that the above argument do not apply to ValueSets that use codes from different levels, as long as codes never overlap semantically.</p>",
        "id": 277718887,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1649073082
    },
    {
        "content": "<blockquote>\n<p>every time I want to check if smt. is \"inactive\", I need to also check whether it is \"resolved\"</p>\n</blockquote>\n<p>yes. Indeed. So you should check whether the code is subsumed by inactive as a matter of course.</p>",
        "id": 277729829,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1649078575
    },
    {
        "content": "<blockquote>\n<p>I think this is compounded by the fact that the parent-child nature of the codes is easy to miss when perusing the ValueSet page</p>\n</blockquote>\n<p>oh? where? That shouldn't happen</p>",
        "id": 277729868,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1649078595
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191503\">@Robert McClure</span> Agree with  <span class=\"user-mention\" data-user-id=\"191985\">@Jay Lyle</span>  resolved is a subclass of inactive.  Allergy/intolerance is a risk of future reaction to a substance, is in most cases a clinical judgement that is testable only by direct challenge with the substance.  There are many mechanisms of reaction that we group under this term (allergy/intolerance) for risk of future reaction. In  recent years it has been demonstrated in hundreds of individuals with penicillin allergy that 90% have NO reaction when challenged with penicillin.  They are certainly inactive.  Whether they are \"resolved\" would depend on the certainty that they were ever allergic to penicillin.  If there is  strong documentation that they were, then the allergy/intolerance is both inactive and resolved.</p>",
        "id": 277822776,
        "sender_full_name": "Russell Leftwich",
        "timestamp": 1649128405
    },
    {
        "content": "<blockquote>\n<p>yes. Indeed. So you should check whether the code is subsumed by inactive as a matter of course.</p>\n</blockquote>\n<p>Right, all of this can of course be correctly handled in code. Needless to say, developers have the responsibility to pay attention to the details &amp; laziness is no excuse. I merely wanted to say that the increased medical precision &amp; expressivity offered by the use of nested &amp; overlapping codes in this context does come at the price of a somewhat higher implementer burden/risk of error (especially in contexts where no terminology server is available)</p>\n<blockquote>\n<blockquote>\n<p>I think this is compounded by the fact that the parent-child nature of the codes is easy to miss when perusing the ValueSet page</p>\n</blockquote>\n<p>oh? where? That shouldn't happen</p>\n</blockquote>\n<p>I think it is indeed correctly documented on <a href=\"http://hl7.org/fhir/R4/valueset-allergyintolerance-clinical.html\">the allergyintolerance-clinical ValueSet Page</a>.  What I meant was merely that the signs that \"resolved\" is a child code that overlaps with \"inactive\" are very easy to overlook if you peruse the page without knowing about this in advance. The different code levels are given by the \"Lvl\" column entries, but as far as I can tell, the fact that \"resolved\" is a child of \"inactive\" is only indicated by the fact that \"resolved\" is slightly indented in the \"Code\" column. AFAIK, the levels alone don't give information about parent-child links as the VS could have included non-overlapping codes from different levels. As an implementer, I would personally have preferred a \"louder\" indication of the nesting and an in-place explanation of what the levels  &amp; parent-child link imply.</p>",
        "id": 277834732,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1649141538
    },
    {
        "content": "<p>well, there is some documentation in the page. Do you have wording suggestions?</p>",
        "id": 277835049,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1649141864
    },
    {
        "content": "<p>I suppose one could add a further column and explicitly indicate child-parent links. If multiple code level are included, one could also include minimal usage guidance directly below the table. So smt. like this (not sure if the guidance text is appropriate...)</p>\n<table>\n<thead>\n<tr>\n<th>Lvl</th>\n<th>Code</th>\n<th>Sub type of (is-a child)</th>\n<th>Display</th>\n<th>Definition</th>\n<th>Canonical Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0</td>\n<td>active</td>\n<td></td>\n<td>Active</td>\n<td>The subject is currently experiencing, or is at risk of, a reaction to the identified substance.</td>\n<td>~active</td>\n</tr>\n<tr>\n<td>0</td>\n<td>inactive</td>\n<td></td>\n<td>Inactive</td>\n<td>The subject is no longer at risk of a reaction to the identified substance.</td>\n<td>~inactive</td>\n</tr>\n<tr>\n<td>1</td>\n<td>resolved</td>\n<td>inactive</td>\n<td>Resolved</td>\n<td>A reaction to the identified substance has been clinically reassessed by testing or re-exposure and is considered no longer to be present. Re-exposure could be accidental, unplanned, or outside of any clinical setting.</td>\n<td>~resolved</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Use of nested codes</strong>: Where available codes have parent-child relations and hence overlap in meaning, producing systems should attempt to provide the most specific code applicable. Receiving systems must correctly handle parent-child code relations.</p>",
        "id": 277838466,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1649144315
    },
    {
        "content": "<p>Of course, Lvl only works as a unique value for trees, not DAGs (where each parent concept may have a different Lvl).<br>\nI would omit that column and label the Sub type column <code>Parent (is-a)</code> instead -- \"Parent\" because that's the relevant property, and \"(is-a)\" from the value of <code>.hierarchyMeaning</code>.</p>",
        "id": 277851891,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1649152131
    },
    {
        "content": "<p>that approach really really doesn't scale. It's fine when there's a few parent/child relationships, but when there's 100s....</p>",
        "id": 277862973,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1649158553
    },
    {
        "content": "<p>I would only ever put in the list of parents -- I would be afraid if a concept had 100s of parents!</p>",
        "id": 277863801,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1649159001
    },
    {
        "content": "<p>I mean, 100s of parents across the entire code system, not for a single code (I've seen... 10... ?)</p>",
        "id": 277868620,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1649161327
    },
    {
        "content": "<p>I was still imagining one row per code and the 'parent' column would have a comma-separated list of codes.  Clearly not ideal for 10 parents, but still workable?</p>",
        "id": 277944809,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1649193527
    },
    {
        "content": "<p>I don't think it's workable for anything but small code systems. try this one:</p>",
        "id": 277945411,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1649193897
    },
    {
        "content": "<p><a href=\"https://terminology.hl7.org/CodeSystem-v3-ActCode.html\">https://terminology.hl7.org/CodeSystem-v3-ActCode.html</a></p>",
        "id": 277945606,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1649193990
    },
    {
        "content": "<p>oh - I see you're already doing what I was suggesting, only the parent column is \"hidden\" on the righthand side of the table.</p>",
        "id": 277946755,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1649194546
    },
    {
        "content": "<p>so I am. Well, that code system is a little special</p>",
        "id": 277949437,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1649196117
    },
    {
        "content": "<p>Right, that looks pretty good already - though, as mentioned, it's very easy to miss on the right edge (not visible even on my large monitor unless I explicitly pan right). Would it be possible to also render this column on corresponding ValuseSet pages?</p>",
        "id": 278124506,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1649315100
    },
    {
        "content": "<p>it's possible. I think it would be a negative value contribution to the page</p>",
        "id": 278125595,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1649315950
    },
    {
        "content": "<p>You mean it would just clutter the page? My own feeling is that it would be a net plus (certainly would be for me personally).</p>",
        "id": 278127208,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1649317149
    },
    {
        "content": "<p>well you can make a task and ask the vocab committee to vote on it</p>",
        "id": 278127226,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1649317171
    },
    {
        "content": "<p>Sounds sensible <span aria-label=\"+1\" class=\"emoji emoji-1f44d\" role=\"img\" title=\"+1\">:+1:</span> - will do.</p>",
        "id": 278127497,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1649317365
    },
    {
        "content": "<p>JIRA was effectively down yesterday but now managed to create a ticket: <a href=\"https://jira.hl7.org/browse/FHIR-36742\">FHIR-36742</a>.</p>",
        "id": 278272748,
        "sender_full_name": "Morten Ernebjerg",
        "timestamp": 1649407116
    }
]