[
    {
        "content": "<p><a href=\"http://hl7.org/fhir/R4/valueset.html#invs\">Invariant  vsd-1</a> when created was intended to require that within ValueSet.compose.include when a valueSet.compose.include.valueSet reference exists, ValueSet.compose.include.system should not be populated. In other words the invariant was intended to be an exclusive OR between valueSet.compose.include.system and valueSet.compose.include.valueSet reference. This is noted in <a href=\"https://jira.hl7.org/browse/FHIR-30585\">Jira 30585</a>. We are concerned that some users may have misinterpreted the “or” in the Description and the Expression as the non-exclusive (intersection) type or that exists in the Expression. The intent in R4B is to change both the description and the Expression to clarify that this is indeed an XOR. </p>\n<p>We are seeking input from the community to determine if anyone has real use cases where the current non-XOR approach is needed. If such a use case exists we also need to understand how this was implemented. There appear to be two potential choices:</p>\n<ul>\n<li>The valueSet.compose.include.system (potentially with version) restricts the included members from the referenced value set to only the expansion members that match the system+/-version.</li>\n<li>The valueSet.compose.include.system (potentially with version) forces the included expansion members <em>of that system</em> from the referenced value set to match the system+/-version, <em>but does not exclude expansion members from other code systems.</em></li>\n</ul>\n<p>We intend to <strong>make this change to XOR in R4B</strong> as a clarifying change but due to it technically being non-conformant, we need users to contact us with concerns by replying to this thread. <br>\n<span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span> <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> <span class=\"user-mention\" data-user-id=\"220039\">@Andrea MacLean</span> <span class=\"user-mention\" data-user-id=\"191376\">@Jim Steel</span> <span class=\"user-mention\" data-user-id=\"191337\">@Dion McMurtrie</span> <span class=\"user-mention\" data-user-id=\"191359\">@Bryn Rhodes</span></p>",
        "id": 224126449,
        "sender_full_name": "Robert McClure",
        "timestamp": 1611708654
    },
    {
        "content": "<p>We used the machine-readable definition: <code>valueSet.exists() or system.exists()</code> as the basis for our implementation specifically to avoid the ambiguity surrounding natural-language use of \"or\".<br>\nThe semantics we implemented follows the rule \"Within an <code>include</code>, all the criterion apply -e.g. the value set contains the intersection of the criterion\".  Thus we restrict the expansion to just those members that match the system+/-version.<br>\nIf a version is specified, then it may also influence any default version selection (i.e., where the $expand call and other uses of the same CodeSystem do not specify a version).</p>",
        "id": 224138199,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1611720644
    },
    {
        "content": "<p>I would like to understand the motivation for making this change.  Granted, the spec may not say what was originally intended, but there's a perfectly reasonable and clear semantics driven by the rule \"Within an include, all the criterion apply -e.g. the value set contains the intersection of the criterion\", so why suddenly make currently legal things illegal?</p>",
        "id": 224138268,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1611720752
    },
    {
        "content": "<p>It is also a pretty convenient way of sub-setting an existing multi-system ValueSet.<br>\nThe alternative would be to just add an additional <code>include.valueSet</code> URI using the \"all codes in the CodeSystem\" valueSet and you should get the same semantics.</p>",
        "id": 224138433,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1611720995
    },
    {
        "content": "<p>A further undesirable effect of making this change is that intersecting an explicit list of codes with a ValueSet expansion becomes more cumbersome.<br>\nFor example, I may have a list of unique codes drawn from clinical data and wish to identify which of these codes belong to a specific ValueSet (perhaps for cohort selection).  While I could issue a series of $validate-code calls, it would be much more efficient to construct a ValueSet with a single include.valueSet and include.concepts and then POST it.</p>",
        "id": 224138634,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1611721275
    },
    {
        "content": "<p>Rather than the change that is being suggested, clarifying and making explicit the \"within an include, all the criterion apply\" rule that <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> described would likely be a better (and certainly more compatible) path forward.</p>",
        "id": 224138869,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1611721557
    },
    {
        "content": "<p>We don't have any specific values sets including system and valueSet in the same include but I'd seen it as way to refine a valueSet by a system. This seems a reasonable thing to do.</p>",
        "id": 224144597,
        "sender_full_name": "Liam Barnes",
        "timestamp": 1611728573
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> So you have chosen one of the two alternative approaches based on this being a intersecting OR, giving \"full weight\" to the impact of including a single system. To be clear, that was not the intent, hence the motivation. The edge-case use of this is essentially theoretical and \"illegality\" has nothing to do with it. The only use case I see is the ability to restrict the expansion of a multi-system value set.  Are you saying you have <strong>real examples</strong> of this, or are just musing about the possibility? Your last theoretical advantage makes no sense to me and I don't see how this intersection OR of a system does something to support whatever you want. Of course clarifying the current ambiguous approach is more compatible for Michael, as long as someone else doesn't come in and say they interpreted this the other way.  </p>\n<p><span class=\"user-mention\" data-user-id=\"192027\">@Liam Barnes</span> By \"refine\" which of the alternatives noted in the OP are you referring to?</p>",
        "id": 224201183,
        "sender_full_name": "Robert McClure",
        "timestamp": 1611762836
    },
    {
        "content": "<p>I wouldn't say we chose, I would say we followed the direction of the spec -- all constrains apply.</p>",
        "id": 224252450,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1611784073
    },
    {
        "content": "<p>More importantly though is the case where you have valueSet, system, AND concepts - this is not an edge case for us</p>",
        "id": 224252659,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1611784183
    },
    {
        "content": "<p>In fact it is the use case analogous to <code>Condition/_search?code:in=http://example.com/myConditionsOfInterestValueSet</code></p>",
        "id": 224253017,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1611784351
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> No one would say that an intersection of a set of codes (by enumeration and/or filter) and a value set within one include does not make sense. What is confusing is why you need system too. how does that make it work better?</p>",
        "id": 224259601,
        "sender_full_name": "Robert McClure",
        "timestamp": 1611787517
    },
    {
        "content": "<p>To specify codes you must have a system -- vsd-2</p>",
        "id": 224263735,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1611789864
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191503\">@Robert McClure</span> I meant the first choice stated, where the value set members are restricted to the stated system. <br>\nI interpreted that constraint's purpose to enforce the minimum required for an include to be valid. I.e. Either a valueSet or a System</p>",
        "id": 224264296,
        "sender_full_name": "Liam Barnes",
        "timestamp": 1611790254
    },
    {
        "content": "<p>But, you still haven't answered the question of WHY make this change?</p>",
        "id": 224264443,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1611790343
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> We were making the change to align with the original intent. We assumed that others had interpreted it as an XOR and put this out to find out. We also would like to understand any use case that bolsters the need for intersectional OR versus the original intent. I understand that it was <strong>not</strong> specified as XOR originally and it sounds like you got out there and implemented as intersectional OR because that was what it said to do. Totally get that. It is our understanding that others have not. So we need to align. We understand that precedence, even incorrect precedence. needs to be gin due consideration - we have not made a final decision. So to best understand that, please help me understand the answer to </p>\n<blockquote>\n<p>No one would say that an intersection of a set of codes (by enumeration and/or filter) and a value set within one include does not make sense. What is confusing is why you need system too. How does that make it work better?</p>\n</blockquote>",
        "id": 224273463,
        "sender_full_name": "Robert McClure",
        "timestamp": 1611796931
    },
    {
        "content": "<p>Right.  As I see it then, there are three options going forward:</p>\n<ol>\n<li>clarify the OR semantics as \"intersectional\"</li>\n<li>clarify the OR semantics as \"version-narrowing\"</li>\n<li>clarify the \"XOR, NOT BOTH\" semantics</li>\n</ol>\n<p>We have implemented 1., and have ongoing significant use-cases that rely on this semantic, which is also (I argue) directly supported by wording in the spec.<br>\nWe've yet to see anyone (here) indicate preference for, or implementation of 2.</p>\n<ol start=\"3\">\n<li>says the combination would be explicitly not allowed (what I meant by \"illegal\" above).  As I understand it, this was the original intent, but I don't understand why it is a desirable outcome?</li>\n</ol>",
        "id": 224289358,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1611816120
    },
    {
        "content": "<p>I think it's unclear if #3 was the original \"intent\".  I think it possibly may have been the original \"expectation\", though never expressed as a requirement, but I'm also not certain of that.  I believe that <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> is likely the only person who can (probably) answer the original intent question.  But, as I think <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> is expressing, even if we can answer the intent question, I'm not sure if now that is or should be <strong>the</strong> deciding factor or one of the highest priority factors for deciding how we should go forward with this.</p>",
        "id": 224351090,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1611851020
    },
    {
        "content": "<p>If we don't get anyone you fights as Michael has, for option #3 XOR, then I'm not going to stand in the way of clarifying vsd-1 means option #1.  I'm being honest that I have not understood the use case <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> says they \"definitely have\" because he's not answered my question on why system makes a difference. perhaps it's too obvious to need explaining.</p>",
        "id": 224375688,
        "sender_full_name": "Robert McClure",
        "timestamp": 1611860466
    },
    {
        "content": "<p>Let's say I'm implementing something equivalent to the FHIR Search request <code>Condition/_search?code:in=http://example.com/myConditionsOfInterestValueSet</code> and I have a set of Condition instances in my database with the unique set of <code>Condition.code</code> values: <code>http://snomed.info/sct#191044006</code>, <code>http://snomed.info/sct#74400008</code>, and <code>http://hl7.org/fhir/sid/icd-10#C94</code>.  Then I want to <code>$expand</code> the following ValueSet to see which of these codes are relevant (i.e., are members of the specified ValueSet). </p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"nt\">\"resourceType\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ValueSet\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://example.com/query-type-example-vs\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Query_type_ValueSet\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Query-type ValueSet\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"status\"</span><span class=\"p\">:</span> <span class=\"s2\">\"draft\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"compose\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"include\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"valueSet\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"s2\">\"http://example.com/myConditionsOfInterestValueSet\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"nt\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://snomed.info/sct\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"concept\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"191044006\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"display\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Diabetes mellitus\"</span>\n          <span class=\"p\">},</span>\n          <span class=\"p\">{</span>\n            <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"74400008\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"display\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Appendicitis\"</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n      <span class=\"p\">},</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"valueSet\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"s2\">\"http://example.com/myConditionsOfInterestValueSet\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"nt\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://hl7.org/fhir/sid/icd-10\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"concept\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n          <span class=\"p\">{</span>\n            <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"C94\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"display\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Other leukaemias of specified cell type\"</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</code></pre></div>",
        "id": 224424284,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1611887427
    },
    {
        "content": "<p>Our open source FHIR Analytics server, Pathling (<a href=\"https://pathling.csiro.au\">https://pathling.csiro.au</a>), uses this pattern to optimise FHIRPath <code>member-of</code> tests.</p>",
        "id": 224424330,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1611887508
    },
    {
        "content": "<p>I think that the intent was that you would have one or the other. But I can definitely see cases where value set designers choose to use system to ensure that they only get a subset of concepts in the included value set. I myself would say that this is not good design. and I expect that <a href=\"http://tx.fhir.org\">tx.fhir.org</a> wouldn't handle this as <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> says his one does, which I agree is what is stated. </p>\n<p>So I favor, given that this is normative, #1</p>",
        "id": 225234172,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1612478151
    }
]