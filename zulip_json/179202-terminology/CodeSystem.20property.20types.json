[
    {
        "content": "<p>Is there a raionale for the set of types available for CodeSystem properties?<br>\nWe would *really* like to use a uri or url.  But also, decimal and Quantity seem to be omissions</p>",
        "id": 153851153,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1475109885
    },
    {
        "content": "<p>main rationale is only to ad what is needed, not to throgh in a kitchen sink of possibiliites. name you use cases</p>",
        "id": 153851154,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475110092
    },
    {
        "content": "<p>uri would be a general mechanism to link to more complex things.  For example an image or diagram associated with a code.<br>\ndecimal / quantity would be for things like meds properties (concentration of a solution, or quantity of an ingredient)</p>",
        "id": 153851158,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1475112456
    },
    {
        "content": "<p>do we have code systems with that level of graunalarity? it sounds like medication resources to me,</p>",
        "id": 153851331,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475179194
    },
    {
        "content": "<p>I wanted to attach a property carrying the SNOMED CT diagramming syntax to each code.<br>\nAdditionally, we're try to work out how best to expose the SNOMED CT relationships since their structure is more complex than a simple valueCode will support.  We'd also like such a solution to be generalisable to various OWL-based terminologies</p>",
        "id": 153851391,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1475194291
    },
    {
        "content": "<p>a diagram for each code? </p>",
        "id": 153851397,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475195343
    },
    {
        "content": "<p>amazing</p>",
        "id": 153851398,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475195348
    },
    {
        "content": "<p>and perhaps you can explan the other a bit more</p>",
        "id": 153851399,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475195359
    },
    {
        "content": "<p>Do you mean the complex relationship structure?  This relates to \"nesting\"<br>\nConsider 30392007 | Laparoscopy with excision of lesion |<br>\n<a href=\"http://ontoserver.csiro.au/shrimp/?concept=30392007&amp;versionId=http%3A%2F%2Fsnomed.info%2Fsct%2F32506021000036107%2Fversion%2F20160831\" target=\"_blank\" title=\"http://ontoserver.csiro.au/shrimp/?concept=30392007&amp;versionId=http%3A%2F%2Fsnomed.info%2Fsct%2F32506021000036107%2Fversion%2F20160831\">http://ontoserver.csiro.au/shrimp/?concept=30392007&amp;versionId=http%3A%2F%2Fsnomed.info%2Fsct%2F32506021000036107%2Fversion%2F20160831</a></p>\n<p>There are two values for |method| - |excision| and |inspection| and one for |direct morphology| = |lesion|, if the SNOMED relationships get flattened into simple property-value pairs (which is all CodeSystem currently allows), then the association between |excision| and |lesion| is lost.</p>",
        "id": 153851407,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1475200477
    },
    {
        "content": "<p>I asked about value set filters. Given that we allow expression = [x] as a filter, why is there are use case for Concept is-a [y] where [y] is post-coordinated?</p>",
        "id": 153851408,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475202888
    },
    {
        "content": "<p>Right.  Okay, while SNOMED does not support general concept inclusions it is possible to rewrite a subsumption query with post coordination as an ECL query.  If / when this changes, then this will no longer be true.</p>",
        "id": 153851758,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1475547084
    },
    {
        "content": "<p>this is going to change?</p>",
        "id": 153851761,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475550924
    },
    {
        "content": "<p>I have no useful sense of how long it might be before GCIs are supported, but there's certainly an appetite for them in some quarters.  Also, they are a core part of the work to redo the anatomy hierarchy and align it with FMA.</p>",
        "id": 153852116,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1475729863
    },
    {
        "content": "<p>what's a GCI?</p>",
        "id": 153852117,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475729912
    },
    {
        "content": "<p>GCI = General Concept Inclusion (allows for multiple sufficient conditions in the definition of a concept).</p>",
        "id": 153852118,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1475729998
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> This looks wrong to me <a href=\"http://fhir3.healthintersections.com.au/open/CodeSystem/$lookup?code=192030003&amp;system=http%3A%2F%2Fsnomed.info%2Fsct\" target=\"_blank\" title=\"http://fhir3.healthintersections.com.au/open/CodeSystem/$lookup?code=192030003&amp;system=http%3A%2F%2Fsnomed.info%2Fsct\">http://fhir3.healthintersections.com.au/open/CodeSystem/$lookup?code=192030003&amp;system=http%3A%2F%2Fsnomed.info%2Fsct</a><br>\nIt shows inactive as \"False\" - would expect this to be a valueBoolean and also should be true not false<br>\nIt shows moduleId as \"22215336\" - should be 900000000000207008</p>\n<p>See <a href=\"https://ontoserver.csiro.au/shrimp/?concept=192030003&amp;versionId=http%3A%2F%2Fsnomed.info%2Fsct%2F32506021000036107%2Fversion%2F20160731\" target=\"_blank\" title=\"https://ontoserver.csiro.au/shrimp/?concept=192030003&amp;versionId=http%3A%2F%2Fsnomed.info%2Fsct%2F32506021000036107%2Fversion%2F20160731\">https://ontoserver.csiro.au/shrimp/?concept=192030003&amp;versionId=http%3A%2F%2Fsnomed.info%2Fsct%2F32506021000036107%2Fversion%2F20160731</a> for my reference</p>",
        "id": 153852247,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1475811364
    },
    {
        "content": "<p>agree about inactive being wrong, and moduleId being wrong - will be fixed next update. (oops on both). </p>",
        "id": 153852262,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475820198
    },
    {
        "content": "<p>but all properties are type string, according to the spec</p>",
        "id": 153852263,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475820213
    },
    {
        "content": "<p>Which spec?  CodeSystem allows for multiple types: <a href=\"http://hl7-fhir.github.io/codesystem.html#properties\" target=\"_blank\" title=\"http://hl7-fhir.github.io/codesystem.html#properties\">http://hl7-fhir.github.io/codesystem.html#properties</a> and I don't see anything relevant here <a href=\"http://hl7-fhir.github.io/snomedct.html\" target=\"_blank\" title=\"http://hl7-fhir.github.io/snomedct.html\">http://hl7-fhir.github.io/snomedct.html</a></p>",
        "id": 153852266,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1475824318
    },
    {
        "content": "<p>the spec for $lookup</p>",
        "id": 153852272,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475832760
    },
    {
        "content": "<p>Ah, well, that's interesting.  So properties go in typed, but come out \"untyped\" (through $lookup) but not in the CodeSystem resource itself.  Where do I find the mapping between the type and the String representation?  I presume dateTime is as documented for search, but what about Coding?  Also, boolean - I would have expected true/false but I see you have True and False</p>",
        "id": 153852277,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1475840758
    },
    {
        "content": "<p>well, it's really something we need to fix</p>",
        "id": 153852279,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475841451
    },
    {
        "content": "<p>want to create a task?</p>",
        "id": 153852280,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1475841470
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12248\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12248\">GF#12248</a></p>",
        "id": 153852357,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1475876448
    },
    {
        "content": "<p>When requesting the definition property in a $lookup operation for a SNOMED CT Code should the Fully Specified Name be returned, or something else? I'm looking for a property which might contain defining attributes (other than direct parent and child which are already defined as properties).</p>",
        "id": 153853279,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1476916647
    },
    {
        "content": "<p>have you seen this task?</p>",
        "id": 153853281,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476917341
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=11820\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=11820\">GF#11820</a></p>",
        "id": 153853282,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476917349
    },
    {
        "content": "<p>and since that is somewhat short hand, try doing $lookup on a snomed code on <a href=\"http://fhir3.healthintersections.com.au\" target=\"_blank\" title=\"http://fhir3.healthintersections.com.au\">fhir3.healthintersections.com.au</a></p>",
        "id": 153853283,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476917420
    },
    {
        "content": "<p>you should get back a bunch of properties now</p>",
        "id": 153853284,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476917433
    },
    {
        "content": "<p>Thanks, Grahame. I was aware of the task, as the result of the breakout session in Baltimore, but not the new CodeSystem $lookup properties that effectively implement decomposition. Looking at the response from...<br>\n<a href=\"http://fhir3.healthintersections.com.au/open/CodeSystem/$lookup?system=http://snomed.info/sct&amp;code=28576007\" target=\"_blank\" title=\"http://fhir3.healthintersections.com.au/open/CodeSystem/$lookup?system=http://snomed.info/sct&amp;code=28576007\">http://fhir3.healthintersections.com.au/open/CodeSystem/$lookup?system=http://snomed.info/sct&amp;code=28576007</a><br>\nI see a new 'normalForm'  property containing a normalized expression and 'normalFormTerse' with the canonical version of that expression. <br>\nWhat I'm not seeing are individual attributes and relationship group numbers - which was discussed in Baltimore - or do I need to request them explicitly with another property?<br>\nStill not sure what should go in the 'definition' property for an SCT Code - if anything (possibly not FSN as that's included in the designations)?</p>",
        "id": 153853285,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1476920028
    },
    {
        "content": "<p>I need to add the other relationships - may get to that today </p>",
        "id": 153853298,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476928072
    },
    {
        "content": "<p>I don't give a definition for a SCT term. </p>",
        "id": 153853299,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476928098
    },
    {
        "content": "<p>I just committed the write up of this; it will take some time to get published, but it will be build 10029</p>",
        "id": 153853306,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1476947365
    },
    {
        "content": "<p>Looking at the SCT-specific properties for $lookup operations, I have a couple of questions. Firstly is 'Normal Form' short nf or long nf (and that is different from verbose/terse versions). Secondly, as alternative to specifying attribute types as properties (e.g. laterality), what if a user requires all attributes (possibly because they don't know what the attributes of the concept are)?</p>",
        "id": 153854332,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1477451210
    },
    {
        "content": "<p>I'm using short form. And we should say that it's short form</p>",
        "id": 153854333,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477452800
    },
    {
        "content": "<p>? list 246061005 as a requested property - that means any attribute. </p>",
        "id": 153854334,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477452904
    },
    {
        "content": "<p>Short Normal Form to be accurate, I think. In the SCT TIG, the term 'short form is used in relation to SCTIDs. BTW: it would be interesting to hear the answer to Michael's question about how 'short normal form' might be used - I believe that 'long normal form' is required for equivalence testing. Look forward to implementing all this...and $compose.</p>",
        "id": 153854335,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1477457387
    },
    {
        "content": "<p>I primarily think of the short normal form as documentation for the user at this time</p>",
        "id": 153854337,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1477462205
    }
]