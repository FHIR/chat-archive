[
    {
        "content": "<p>Is it possible to represent disjointness between sibiling codes in an ontology/classification?</p>",
        "id": 219416448,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1607557924
    },
    {
        "content": "<p>You certainly can in description logic -- the conjunction is subsumedBy bottom (i.e., A ⋀ B ⊑ ⊥)</p>",
        "id": 219602977,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1607691945
    },
    {
        "content": "<p>How to express that in FHIR language?</p>",
        "id": 219607116,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1607694244
    },
    {
        "content": "<p>In ConceptMap you can set group.element.target.equivalence = 'disjoint' in R4, or group.element.target.relationship = 'not-related-to' in the proposed R5.  That's not necessarily defined strictly in accordance with OWL, but I think that's how you would express disjointness between concepts in FHIR.  You might wonder why the R5 version seems less \"precise\" for declaring this?  There's some considerable history on that, but I don't think that the semantic itself should be substantially different.</p>",
        "id": 219774594,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1607885969
    },
    {
        "content": "<p>Sorry, the context info was missed in my question.  I mean disjointness within a CodeSystem.  And for now, it could be implicitly expressed with the hierarchyMeaning=classified-with.   But explicitly in other ontology languages such as owl, obo.  Thanks anyway.</p>",
        "id": 219787075,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1607901355
    },
    {
        "content": "<p>It might be sensible to use <a href=\"http://CodeSystem.concept.properties\">CodeSystem.concept.properties</a> of coding type for this purpose.</p>",
        "id": 219787740,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1607902369
    },
    {
        "content": "<p>There's no way to say it within FHIR (other than in the description of the concepts or, as Rob suggests, in a ConceptMap).<br>\nBut, the real question is _why_ do you want to be able to specify this in FHIR?  It doesn't affect behaviour of any of the operations.</p>",
        "id": 219791847,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1607909003
    },
    {
        "content": "<p>The reason is the value of disjointness.  And this may be related to implementation of the hierarchyMeaning classified-with beyond just as a flag.</p>",
        "id": 219795212,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1607914535
    },
    {
        "content": "<p>You could add a 0..* property to a concept that lists the concepts it is disjoint with.<br>\nAlternatively, you might add a flag to a parent concept to indicate that all its children are disjoint.<br>\nI'm sure there are many other options too.  But they all rely on a client doing some kind of interpretation; there's nothing that the terminology server itself will do with this information.</p>",
        "id": 221337545,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1609480532
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> Thanks.  The first option looks more like OWL.</p>",
        "id": 221339772,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1609485052
    }
]