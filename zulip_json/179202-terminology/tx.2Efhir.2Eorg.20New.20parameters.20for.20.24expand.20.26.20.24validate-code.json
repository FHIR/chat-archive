[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> and other terminology server authors</p>\n<p>I'm just finishing adding a new feature to <a href=\"http://tx.fhir.org\">tx.fhir.org</a> $expand and $validate operations. The feature is driven by errors and performance challenges producing implementation guides. I'm adding 2 new parameters to both operations:</p>\n<ul>\n<li><strong>tx-resource</strong>: This is a parameter in a POSTed Parameters resource that carries additional resources that will be needed by the server to perform the expansion or code validation. A typical use of this is when the client has a value set that it is passing by value (e.g. the whole value set) and that value set imports another valueset that the client has (and it is not confident that the server, or has the correct version). The server needs to include these resources in it's resolution space for the passed value set. tx resources can also include code systems that are known to the client. (Note that the server can choose to ignore these and return errors anyway)</li>\n</ul>\n<p>The upshot of adding this is to fix various corner case problems to IG publisher expansion and code validation. But also, to increase the size of the calls to the terminology server. In one case I found, the call to the $validate-code operation was passing about 5MB of value set resources (long enumerations) and making about 1000 calls of the duration of the IG publication, and getting about 800b back each time. And it was about 60b that was different in each call</p>\n<p>So this leads to the second parameter:</p>\n<ul>\n<li><strong>cache-id</strong>: the client passes this parameter with a unique value (I'm using a UUID) for the run. The client only needs to pass resources in tx-resource, a value set inline by value, once during a session for the cache-id. The server remembers previously passed resources, and automatically brings them into scope when new calls are made for the same cache-id. Clients keep track of what they have sent to server previously, and only refer to the content by canonical URL (either {url}. {url} and {version} or {url|version}.  The server retains the cache for x mins after last use (30 mins on <a href=\"http://tx.fhir.org\">tx.fhir.org</a> ). Once they are out of scope, clients will start getting errors as if they hadn't passed the content. </li>\n</ul>\n<p>The FHIR validator and the IG publisher both now use this technique, but only if they find the cache-id parameter declared in <a href=\"http://TerminologyCapabilities.expansion.parameter.name\">TerminologyCapabilities.expansion.parameter.name</a> (or for R2|3, an \"expansion.parameter' parameter in the parameters resource returned from the terminology metadata query response from the server)</p>",
        "id": 206876379,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597355622
    },
    {
        "content": "<p>Yes, this sounds good to me.  It may be pretty specific to the IG publication process and other servers may not need it (unless they are functioning as alternate build servers)?  Not sure what your thought is on that.</p>",
        "id": 206877053,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1597356090
    },
    {
        "content": "<p>I think that both issues are not specific to IGs, they are generic to using a terminology server, though they may not arise in many contexts</p>",
        "id": 206877147,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597356130
    },
    {
        "content": "<p>Yes, I would agree with that.</p>",
        "id": 206877173,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1597356164
    },
    {
        "content": "<p>We need to update the spec for this?</p>",
        "id": 206877191,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1597356188
    },
    {
        "content": "<p>I think in time, yes</p>",
        "id": 206877208,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597356204
    },
    {
        "content": "<p>in time = R5, presumably?</p>",
        "id": 206877235,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1597356231
    },
    {
        "content": "<p>yes in that time, but I think we want to get experience with this before updating the spec</p>",
        "id": 206877296,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597356257
    },
    {
        "content": "<p>btw, the other change I've made is that the IG publisher is making heavy use of batch validation now - using the batch API).</p>",
        "id": 206877661,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597356510
    },
    {
        "content": "<p>It's going to take me some time to digest the above proposal.  But, it has always struck me as unusual that <code>$validate-code</code> does not support taking multiple Codings / CodeableConcepts as input.</p>",
        "id": 206880789,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1597359048
    },
    {
        "content": "<p>I'm amenable to thinking about that. Would reduce the importance of these other changes but not remove the need for them</p>",
        "id": 206880841,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597359103
    },
    {
        "content": "<p>btw, <a href=\"http://tx.fhir.org\">tx.fhir.org</a> is averaging 5 requests/sec at the moment</p>",
        "id": 206882461,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597360205
    },
    {
        "content": "<p>Doesn't sound too bad?</p>",
        "id": 206884696,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1597362312
    },
    {
        "content": "<p>no. it's creeping up. And there's bursts of 10-15/sec when multiple test runs are happening during the validator build process</p>",
        "id": 206884854,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597362474
    },
    {
        "content": "<p>I may have to upgrade the server soon</p>",
        "id": 206884906,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597362490
    },
    {
        "content": "<p>Are these mostly $validate-code calls?</p>",
        "id": 206885156,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1597362733
    },
    {
        "content": "<p>yes.</p>",
        "id": 206885783,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597363257
    },
    {
        "content": "<p>though the unit testing / ig publish has focus on expand so that might be higher than normal usage</p>",
        "id": 206885831,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597363300
    },
    {
        "content": "<p>Our r4 server was seeing 300-700 calls / minute overnight (which would be ~5-10/sec).<br>\nSadly most were fails -- $validate-code without a system parameter (which I understand to be an issue with HAPI)</p>",
        "id": 206886400,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1597363825
    },
    {
        "content": "<p>If the FHIR Validator and the IG Publisher now use the TerminologyCapabilities Resource, shouldn't the FMM Level of that Resource be raised from 0 to at least 1?</p>",
        "id": 206888367,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1597366186
    },
    {
        "content": "<p>yes it should be.</p>",
        "id": 206888427,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597366233
    },
    {
        "content": "<p>but it's not new; I've been using it since it was first defined</p>",
        "id": 206888431,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597366245
    },
    {
        "content": "<p>though my use is pretty selective in terms of elements right now</p>",
        "id": 206888442,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597366264
    },
    {
        "content": "<p>I've also implemented it since it was first defined and I believe that Michael also has a test implementation.</p>",
        "id": 206888633,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1597366449
    },
    {
        "content": "<p>Based on my implementation &amp; Grahame's, I'm not sure the breadth of our use is very significant.<br>\nAlso, I would suggest that merely publishing instances of a Resource doesn't really constitute \"use\" -- you need clients to be consuming the Resource, and the only one I know of is the IG Publisher</p>",
        "id": 206896064,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1597377148
    },
    {
        "content": "<p>and the validator. And that's enough evidence to go from 0 to 1</p>",
        "id": 206896517,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597378015
    },
    {
        "content": "<p>though no further</p>",
        "id": 206896520,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597378019
    },
    {
        "content": "<p>I can update it along with some of the other changes that need to be applied.</p>",
        "id": 206923801,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1597408031
    },
    {
        "content": "<p>Been giving this a little thought.  Is there a reason why you couldn't batch up all the calls into a single request.  Then you could POST a Bundle with the requisite tx-resources as simple contained resources, and all of the $expand / $validate operations go in the batch Bundle which itself encapsulates the \"lifespan\" of the tx resources.</p>",
        "id": 208023878,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1598389744
    },
    {
        "content": "<p>yes lots of reasons</p>",
        "id": 208025701,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1598390644
    },
    {
        "content": "<ul>\n<li>I'm validating multiple different resources - sometimes hundreds / thousands, which may contain that amount of codes (or more). I don't want to validate all that in a single hit (especially since the conditions of validation differ between resources e.g. language)</li>\n<li>Enough of the validation logic depends on the outcome of code validation (particularly slices) that I can't defer the validation logic into a batch. It's on my todo list to lazy validate anything that can deferred until I hit something I need to wait for but that's a signficant step up in complexity right now, so it hasn't happened yet (particularly because it actually makes the validator slower for any of the validation handled by the internal mini-terminology server)</li>\n<li>I am already batching what I can</li>\n</ul>",
        "id": 208026157,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1598390876
    },
    {
        "content": "<p>I wondered about the validation logic...that did seem to be a possible key issue.<br>\nAnother alternative is to just PUT/POST the resources to the server at the beginning and then clean them up at the end.</p>",
        "id": 208032732,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1598394950
    },
    {
        "content": "<p>I might be building different versions simultaineously</p>",
        "id": 208040215,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1598400968
    },
    {
        "content": "<p>So you need some kind of scoping mechanism... (if the Tx resources have business versions, then that could help).<br>\nOr...generalise to the idea of creating a (transient) Scope that can be explicitly disposed or garbage collected.  [thinking aloud here]</p>",
        "id": 208044023,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1598405082
    },
    {
        "content": "<p>that's what this is - a transient scope</p>",
        "id": 208049836,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1598412762
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> Please enter a JIRA to track the maturity level change - this Zulip thread might not be remembered in the future. Thanks.</p>",
        "id": 208380799,
        "sender_full_name": "Carmela Couderc",
        "timestamp": 1598640323
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192130\">@Carmela Couderc</span> I did that when I made the updates for the Connectathon build - <a href=\"http://jira.hl7.org/browse/FHIR-28296\">J#28296</a>.</p>",
        "id": 208381699,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1598640808
    },
    {
        "content": "<p>Does it then make sense to generalise this notion of a named transient scope across all $operations and not just $expand and $validate-code?<br>\nPerhaps <code>$begin-scope</code> and <code>$end-scope</code> operations, where <code>$begin-scope</code> takes a <code>Bundle</code> and returns a scope-id?  Then pass an <code>_scope=[scope-id]</code> parameter to other operations?</p>",
        "id": 209598805,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1599717672
    },
    {
        "content": "<p>.. I don't know</p>",
        "id": 209600809,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599720106
    },
    {
        "content": "<p>FYI: Phast's terminology server has also implemented TerminologyCapabilities.</p>",
        "id": 209607616,
        "sender_full_name": "François Macary",
        "timestamp": 1599725643
    }
]