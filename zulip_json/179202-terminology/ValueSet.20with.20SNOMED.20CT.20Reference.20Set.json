[
    {
        "content": "<p>Just checking: What would a SNOMED CT reference set reference in a FHIR ValueSet look like? Suppose:</p>\n<p><code>SNOMED CT: ^42931000146101| Dutch non-drug allergen simple reference set (foundation metadata concept)|</code></p>\n<p>Would that look like this?</p>\n<div class=\"codehilite\"><pre><span></span><code>    <span class=\"nt\">&lt;compose&gt;</span>\n        <span class=\"nt\">&lt;include&gt;</span>\n            <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://snomed.info/sct&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;filter&gt;</span>\n                <span class=\"nt\">&lt;property</span> <span class=\"na\">value=</span><span class=\"s\">&quot;concept&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;op</span> <span class=\"na\">value=</span><span class=\"s\">&quot;in&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;value</span> <span class=\"na\">value=</span><span class=\"s\">&quot;42931000146101&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;/filter&gt;</span>\n        <span class=\"nt\">&lt;/include&gt;</span>\n    <span class=\"nt\">&lt;/compose&gt;</span>\n</code></pre></div>",
        "id": 210819033,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1600736672
    },
    {
        "content": "<p>That looks good to me. Alternatively you could also do </p>\n<div class=\"codehilite\"><pre><span></span><code>   <span class=\"nt\">&lt;compose&gt;</span>\n        <span class=\"nt\">&lt;include&gt;</span>\n            <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://snomed.info/sct&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;filter&gt;</span>\n                <span class=\"nt\">&lt;property</span> <span class=\"na\">value=</span><span class=\"s\">&quot;constraint&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;op</span> <span class=\"na\">value=</span><span class=\"s\">&quot;=&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;value</span> <span class=\"na\">value=</span><span class=\"s\">&quot;^42931000146101| Dutch non-drug allergen simple reference set (foundation metadata concept)|&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;/filter&gt;</span>\n        <span class=\"nt\">&lt;/include&gt;</span>\n    <span class=\"nt\">&lt;/compose&gt;</span>\n</code></pre></div>",
        "id": 210819613,
        "sender_full_name": "Liam Barnes",
        "timestamp": 1600737358
    },
    {
        "content": "<p>Thanks! The alternative looks too SNOMED-dy to me. Harder to parse for multi purpose parsers</p>",
        "id": 210822939,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1600741938
    },
    {
        "content": "<p>Beware - the <code>in</code> operator for CodeSystems other than SNOMED treats the value as a comma-separated list of codes, so the semantics is different.  Either way you need a SNOMED-aware Terminology Server</p>",
        "id": 210933526,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1600810132
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span>,  <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span>'s concerns are actually understated if my understanding is correct. The REQUIRED binding in compose to the <a href=\"http://build.fhir.org/valueset-filter-operator.html\">FilterOperator</a> value set means that <a href=\"http://build.fhir.org/codesystem-filter-operator.html#filter-operator-in\">in</a> is \"In set\" meaning The specified property of the code is in the set of codes or concepts specified in the provided value (comma separated list). So a comma separated list is expected. I think SNOMED has bent that if it uses \"in\" to mean something different, like \"there are a set of codes in a refset identified by this ID.\" I suggest we make it more clear that whatever operator is best, it is clearly only understood in the context of SNOMED CT. Perhaps a better approach would be to reference the refset as a value set to be used as the source membership of the new value set. We'd do that by using the refset id in a url that identifies the refset directly. I'd assume there is already a standard SNOMED-defined way that constructs a refset url?</p>",
        "id": 211061303,
        "sender_full_name": "Robert McClure",
        "timestamp": 1600894635
    },
    {
        "content": "<p>I really want one syntax to rule them all if possible so no syntax switching based on target codesystem. You are right that the use of \"in\" for SNOMED seems different than for other systems. That could/should be addressed. Preferably in a way that does not require supporting ECL or similar</p>",
        "id": 211068054,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1600898800
    },
    {
        "content": "<p>yes, well, the fault here is mine. The canonical definition of how to do this in Snomed CT is on this page: <a href=\"http://hl7.org/fhir/snomedct.html#implicit\">http://hl7.org/fhir/snomedct.html#implicit</a>, and it is:</p>\n<div class=\"codehilite\" data-code-language=\"XML\"><pre><span></span><code><span class=\"nt\">&lt;ValueSet</span> <span class=\"na\">xmlns=</span><span class=\"s\">\"http://hl7.org/fhir\"</span><span class=\"nt\">&gt;</span>\n  ...\n  <span class=\"nt\">&lt;compose&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">\"http://snomed.info/sct\"</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;filter&gt;</span>\n        <span class=\"nt\">&lt;property</span> <span class=\"na\">value=</span><span class=\"s\">\"concept\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;op</span> <span class=\"na\">value=</span><span class=\"s\">\"in\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;value</span> <span class=\"na\">value=</span><span class=\"s\">\"[sctid]\"</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/filter&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n  <span class=\"nt\">&lt;/compose&gt;</span>\n<span class=\"nt\">&lt;/ValueSet&gt;</span>\n</code></pre></div>",
        "id": 211077056,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600906499
    },
    {
        "content": "<p>However as <span class=\"user-mention\" data-user-id=\"191503\">@Robert McClure</span> right points out, that you can do this isn't clear from the definition of <code>in</code>:</p>\n<blockquote>\n<p>The specified property of the code is in the set of codes or concepts specified in the provided value (comma separated list).</p>\n</blockquote>\n<p>What's not clear - but I certainly always intended to mean - is that 'in' is semantic, not syntactical. So a concept is \"in\" a the property if the property value is a reference to a reference set. </p>\n<p>This is not SNOMED CT specific - at least the definition is not. The instantiation of it in SCT is SCT specific</p>",
        "id": 211077230,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600906663
    },
    {
        "content": "<p>So is this just about wordsmithing something, or is there more to it?</p>",
        "id": 211077333,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1600906741
    },
    {
        "content": "<p>I think it's about word smithing.</p>",
        "id": 211077370,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600906785
    },
    {
        "content": "<p>(good) ... I thought it was a nice and concise expression as it was. With a little word smithing it could be even better</p>",
        "id": 211077443,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1600906847
    },
    {
        "content": "<p>Need a ticket? I'll create one after some sleep tomorrow if needed</p>",
        "id": 211077478,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1600906912
    },
    {
        "content": "<p>So, it's really about how you interpret the provided value, and that is CodeSystem-specific?<br>\nI don't think this helps <span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span> desire for a common semantic across code systems (if I'm understanding correctly)</p>",
        "id": 211080066,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1600909608
    },
    {
        "content": "<p>Following <span class=\"user-mention\" data-user-id=\"191503\">@Robert McClure</span> 's idea, there is a ValueSet URI for every Reference Set, so you could do <code>compose.include.valueSet=[URI]</code> where the URI is <code>http://snomed.info/sct?fhir_vs=refset/42931000146101</code></p>",
        "id": 211080197,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1600909767
    },
    {
        "content": "<p>Does that work for extension ref sets? We have a growing number of those in NL. Are those hosted centrally too?</p>",
        "id": 211112115,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1600942799
    },
    {
        "content": "<blockquote>\n<p>So, it's really about how you interpret the provided value, and that is CodeSystem-specific?</p>\n</blockquote>\n<p>Yes that remains unless the word smithing leads to a consistent picture again. For SNOMED the conceptId is a refset/valueset, for other systems it is just a code.</p>\n<p>Why do you even need \"in [code, code, code]\" for anything when you could just include the codes separately? is</p>\n<div class=\"codehilite\" data-code-language=\"XML\"><pre><span></span><code>  <span class=\"nt\">&lt;compose&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">\"http://example.org\"</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;filter&gt;</span>\n        <span class=\"nt\">&lt;property</span> <span class=\"na\">value=</span><span class=\"s\">\"concept\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;op</span> <span class=\"na\">value=</span><span class=\"s\">\"in\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;value</span> <span class=\"na\">value=</span><span class=\"s\">\"1234,5678\"</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/filter&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n  <span class=\"nt\">&lt;/compose&gt;</span>\n</code></pre></div>\n\n<p>Not equivalent to:</p>\n<div class=\"codehilite\" data-code-language=\"XML\"><pre><span></span><code>  <span class=\"nt\">&lt;compose&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">\"http://example.org\"</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;concept&gt;</span>\n        <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">\"1234\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;display</span> <span class=\"na\">value=</span><span class=\"s\">\"display\"</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/concept&gt;</span>\n      <span class=\"nt\">&lt;concept&gt;</span>\n        <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">\"5678\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;display</span> <span class=\"na\">value=</span><span class=\"s\">\"display\"</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/concept&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n  <span class=\"nt\">&lt;/compose&gt;</span>\n</code></pre></div>",
        "id": 211112537,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1600943135
    },
    {
        "content": "<blockquote>\n<p>for other systems it is just a code</p>\n</blockquote>\n<p>That's not what I said</p>",
        "id": 211141535,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600958729
    },
    {
        "content": "<p>yes, you could do in by repeating equals. sure. And when you have 2-3 codes, neither here nor there. It starts to be different on bulk</p>",
        "id": 211141705,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600958791
    },
    {
        "content": "<p>btw, LOINC, \"in\" when pointing to a code in the multi-axial heirarchy has the same meaning as snomed</p>",
        "id": 211141825,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600958844
    },
    {
        "content": "<p>Happy to file the ticket still, but although I think we agreed that word smithing could be in order, I'm a little unsure of what to ask for exactly.</p>",
        "id": 211154333,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1600964079
    },
    {
        "content": "<p>ask for the wording to be improved  and reference this thread in Zulip</p>",
        "id": 211154469,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600964153
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191375\">@Alexander Henket</span> </p>\n<blockquote>\n<p>Does that work for extension ref sets? We have a growing number of those in NL. Are those hosted centrally too?</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> Should answer that one too but I'd assume it does as long as you specify the correct version (the edition with the extension I'd assume) in the version element for that compose (or specific part of the compose.) Do others agree?</p>",
        "id": 211156163,
        "sender_full_name": "Robert McClure",
        "timestamp": 1600964924
    },
    {
        "content": "<p>yes. it works for extension refsets (though the server needs to know them)</p>",
        "id": 211156260,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600964966
    },
    {
        "content": "<p>Maybe my assumption was wrong: you don't actually go to <a href=\"http://snomed.info/sct?fhir_vs=refset/42931000146101\">http://snomed.info/sct?fhir_vs=refset/42931000146101</a>, but rather disect that and lookup the refset in whatever way was implemented at that server?</p>",
        "id": 211157072,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1600965314
    },
    {
        "content": "<p>In any case: <a href=\"http://snomed.info/sct?fhir_vs=refset/42931000146101\">http://snomed.info/sct?fhir_vs=refset/42931000146101</a> does not lead to anything by itself</p>",
        "id": 211157116,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1600965336
    },
    {
        "content": "<p>it's a canonical URL, not a literal web reference. All the value set URIs work like that</p>",
        "id": 211157684,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600965613
    },
    {
        "content": "<p>Right my mistake. It looked so very much like something that resolves... wishful thinking on my behalf.</p>\n<p>In any case, <a href=\"https://www.hl7.org/fhir/snomedct.html#implicit\">looking at the spec</a> it seems there almost always multiple of ways to do the same thing basically. Implicit value set versus filter on is-a is one of those too.</p>\n<p>Were those specification alternatives born out of necessity?</p>",
        "id": 211159799,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1600966588
    },
    {
        "content": "<p>implicit value sets are extremely useful. Very very useful indeed.</p>",
        "id": 211160883,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600967143
    },
    {
        "content": "<p>but they're not a different way to do the same thing - they are explicitly built on the same approach</p>",
        "id": 211160975,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600967174
    },
    {
        "content": "<p>In all cases, the <code>url</code> parameter to <code>$expand</code> is a URI (Identifier) and not an URL (Location) -- you do not resolve it as a URL to find a ValueSet definition.<br>\nFor resolving SNOMED reference sets, it is of course up to the terminology server to support.  Without an explicit reference to a version of SNOMED, servers will use a default version (often in combination with a default Edition, commonly the International Edition, but alternatively the local Edition - eg AU or NL or ...).<br>\nIt is also valid to include the Edition or Version in the implicit ValueSet URI -- <a href=\"http://snomed.info/sct/11000146104?fhir_vs=refset/42931000146101\">http://snomed.info/sct/11000146104?fhir_vs=refset/42931000146101</a> or <a href=\"http://snomed.info/sct/11000146104/version/20200331?fhir_vs=refset/42931000146101\">http://snomed.info/sct/11000146104/version/20200331?fhir_vs=refset/42931000146101</a> for example</p>",
        "id": 211339395,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1601090460
    },
    {
        "content": "<p>Implicit ValueSets have a number of core benefits:</p>\n<ul>\n<li>you don't need to pre-define a ValueSet to use it</li>\n<li>the URI is a very compact representation and you can easily generate the URIs dynamically</li>\n<li>you can use GET requests for the $expand, which are cacheable (the alternative of POSTing a dynamically generated explicit ValueSet is not)</li>\n</ul>",
        "id": 211339549,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1601090649
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> can you elaborate on the meaning of</p>\n<div class=\"codehilite\" data-code-language=\"XML\"><pre><span></span><code>  <span class=\"nt\">&lt;compose&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">\"http://loinc.org\"</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;filter&gt;</span>\n        <span class=\"nt\">&lt;property</span> <span class=\"na\">value=</span><span class=\"s\">\"concept\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;op</span> <span class=\"na\">value=</span><span class=\"s\">\"in\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;value</span> <span class=\"na\">value=</span><span class=\"s\">\"[partcode]\"</span><span class=\"nt\">/&gt;</span>\n      <span class=\"nt\">&lt;/filter&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n  <span class=\"nt\">&lt;/compose&gt;</span>\n</code></pre></div>\n\n<p>My reading of <a href=\"http://build.fhir.org/loinc.html#4.3.3.9.3\">http://build.fhir.org/loinc.html#4.3.3.9.3</a> (even though it references only <code>parent</code> and <code>ancestor</code>) suggests that <code>in</code> should be used only when multiple comma-separated codes are provided and the semantics is \"equals any\".  This seems far removed from the SNOMED reference set semantics where the semantics is (roughly) 'belongs to any of the indirectly referenced code sets identified by the supplied code'.</p>",
        "id": 211339782,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1601091118
    },
    {
        "content": "<blockquote>\n<p>My reading of <a href=\"http://build.fhir.org/loinc.html#4.3.3.9.3\">http://build.fhir.org/loinc.html#4.3.3.9.3</a> (even though it references only parent and ancestor) suggests that in should be used only when multiple comma-separated codes are provided</p>\n</blockquote>\n<p>I think you're reading it wrong. comma separated <em>part codes</em>. not comma separated codes.</p>",
        "id": 211559191,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1601332512
    },
    {
        "content": "<p>Sure, part codes, but you haven't explained the meaning of the compose fragment above, and what I'm trying to establish is that for a filter like:</p>\n<div class=\"codehilite\" data-code-language=\"XML\"><pre><span></span><code><span class=\"nt\">&lt;filter&gt;</span>\n        <span class=\"nt\">&lt;property</span> <span class=\"na\">value=</span><span class=\"s\">\"concept\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;op</span> <span class=\"na\">value=</span><span class=\"s\">\"in\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;value</span> <span class=\"na\">value=</span><span class=\"s\">\"[code]\"</span><span class=\"nt\">/&gt;</span>\n<span class=\"nt\">&lt;/filter&gt;</span>\n</code></pre></div>\n\n<p>has different interpretations depending on whether the <code>system</code> is <code>http://snomed.info/sct</code> or not</p>",
        "id": 212260508,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1601876099
    }
]