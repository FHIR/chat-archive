[
    {
        "content": "<p>I have a CodeSystem with codes that have a property of type Coding (because the value may be from one of several other CodeSystems).<br>\nI now want to define a ValueSet that filters on these properties.  The type of <code>compose.include.filter.value</code> is <code>string</code>, but the spec only mentions its use for codes, booleans, or regex (dependent on the filter operator).</p>\n<p>What syntax should I use here for Coding?  I was thinking token syntax (<code>&lt;system&gt;|&lt;code&gt;</code>) and its variants.<br>\nFor  the EQUALS operator:</p>\n<ul>\n<li><code>&lt;system&gt;|&lt;code&gt;</code> exact match</li>\n<li><code>&lt;code&gt;</code> match code, any system</li>\n<li><code>|&lt;code&gt;</code> match code, NO system</li>\n</ul>\n<p>but I can see value in wanting to filter on all property values from a single CodeSystem, which would naturally lead to</p>\n<ul>\n<li><code>&lt;system&gt;|</code> match system, any code</li>\n</ul>\n<p>However this conflicts with Search semantics which would require NO code.</p>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span> <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span></p>",
        "id": 272221436,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1645081981
    },
    {
        "content": "<p>I don't think we've described this, but my inclination would have been to use &lt;system&gt;#&lt;code&gt;. And for what you're doing, I would expect {property} in {valueset-ref} to avoid the syntax issues altogether</p>",
        "id": 272224943,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1645085156
    },
    {
        "content": "<p>But that's not how <code>in</code> works; it takes a comma-separated list of codes (except for SNOMED)</p>",
        "id": 272226571,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1645086257
    },
    {
        "content": "<p>oh? I'm sure we agreed that there was a way to do that somehow - to say that the filter was based on a property in a value set? I think that I do that internally: if there's no commas,and it's a uri, then it's a value set reference</p>",
        "id": 272231035,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1645088698
    },
    {
        "content": "<p>Interesting.  I could be forgetting, but I don't think that's in the spec (or even \"hidden\" anywhere that I know of).  But maybe it should be.</p>",
        "id": 272252667,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1645101523
    },
    {
        "content": "<p>Re syntax above, I've just been back to double-check <a href=\"https://www.hl7.org/fhir/search.html#token\">https://www.hl7.org/fhir/search.html#token</a> and discovered that I remembered the search semantics incorrectly and each form matches exactly what I'm after.</p>\n<p>So, <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> the | based syntax has a lot going for it - where does the # syntax come from (FSH?)</p>",
        "id": 272320861,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1645131149
    },
    {
        "content": "<p>The | in canonicals is used to add on the version number.<br>\nsystem|version#code when used in a canonical value...</p>",
        "id": 272618180,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1645393063
    },
    {
        "content": "<p>Where do \"canonical values\" show up?<br>\n| is used in token syntax which only allows for system and code (not version)</p>",
        "id": 272618459,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1645393324
    },
    {
        "content": "<p>I think that | is ambiguous - are you referring to version or code? But also you’re referring to a search term, and you’re not doing a search. I think that system|version#code is a more reliable approach</p>",
        "id": 272621928,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1645397224
    },
    {
        "content": "<p>Ok, so what variations should be supported?</p>\n<ul>\n<li><code>system|version#code</code>  - exact match on all</li>\n<li><code>code</code>  - code, any system</li>\n<li><code>system|</code>   - system match, any code</li>\n<li><code>system|version</code>  - system &amp; version match, any code</li>\n<li><code>#code</code>  - code, no system</li>\n<li><code>system#code</code>  - system and code match, any version</li>\n</ul>\n<p>others?</p>",
        "id": 272623409,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1645398772
    }
]