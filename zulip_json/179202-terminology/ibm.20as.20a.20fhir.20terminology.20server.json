[
    {
        "content": "<p>Hi guys, as the title suggests: has anyone experience with ibm fhir server as a terminology server? <br>\nWe are right now deciding which open source fhir server we should use for our new Terminology Exchange server in Austria and would, if needed, expand the code with the implementation of some terminology operations we need (and of course give these implementations back to the open-source community).<br>\nI'm aware that there is an ibm stream here, but i wanted to choose this more neutral stream.  I've seen many discussions here about the hapi as a terminology server, so this would be our other choice. Still wanted to give ibm a chance, they seem pretty active and seem to focus on performance. Whats your thoughts?</p>",
        "id": 230642386,
        "sender_full_name": "Nikola Tanjga",
        "timestamp": 1615960707
    },
    {
        "content": "<p>HAPI FHIR JPA Server support different relational databases.</p>",
        "id": 230868800,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1616076382
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191676\">@Lee Surprenant</span> FYI</p>",
        "id": 230873853,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1616078213
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"241501\">@Caitlin Voegele</span> FYI</p>",
        "id": 230873957,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1616078250
    },
    {
        "content": "<p>IBM FHIR Server implements a light-weight version of the terminology services.  It works well for \"extensional\" codesystems (ones that list all their codes), but its currently rather limited for large codesystems like SNOMED CT, LOINC, etc.  However, there is a clear interface for extending it and documentation for that is at <a href=\"https://ibm.github.io/FHIR/guides/FHIRTerminologyGuide\">https://ibm.github.io/FHIR/guides/FHIRTerminologyGuide</a></p>",
        "id": 230876484,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1616079158
    },
    {
        "content": "<p>Additionally, <span class=\"user-mention\" data-user-id=\"192334\">@John Timm</span> has been working on some interesting stuff here (in the open) which uses a graph db (janusgraph) to implement a more performant flavor and supports more advanced scenarios...definitely connect with us on <a class=\"stream\" data-stream-id=\"212434\" href=\"/#narrow/stream/212434-ibm\">#ibm</a> if you're interested in discussing that or potentially collaborating</p>",
        "id": 230877232,
        "sender_full_name": "Lee Surprenant",
        "timestamp": 1616079408
    },
    {
        "content": "<p>Interesting.  Is there an implementation of the SPI (<a href=\"https://ibm.github.io/FHIR/guides/FHIRTerminologyGuide/#fhir-terminology-service-provider-interface-spi\">https://ibm.github.io/FHIR/guides/FHIRTerminologyGuide/#fhir-terminology-service-provider-interface-spi</a>) that simply makes REST call to an external service?</p>",
        "id": 230981771,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1616135446
    },
    {
        "content": "<p>Also, I don't understand the contract associated with <code>$closure</code> and the SPI <code>Set&lt;Concept&gt; closure(Coding coding);</code><br>\nNormal use of <code>$closure</code> would involve passing in multiple Codings, and also a <code>name</code> parameter to allow for separate closure tables.  It looks like the SPI only allows for a single closure table and (inefficiently) building it one Coding at a time?</p>",
        "id": 230981907,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1616135607
    },
    {
        "content": "<p>Yes, this is a limitation of the SPI. In the current design, different FHIRTermServiceProvider implementations might support different code systems and therefore we look at each coding individually. That said, if FHIRTermService determined that all code systems mentioned in the closure request could be serviced by the same service provider, then an optimization might be to send off all codings to that provider and let it handle things as efficiently as possible.</p>\n<p>Also, we don’t  have an implementation of FHIRTermServiceProvider that makes calls to an external REST API (though I suppose that it wouldn't be too hard to implement and we may even have an issue in our backlog to build it).<br>\nAs it stands, we currently have two implementations of FHIRTermServiceProvider — one that is registry based for code systems with CodeSystem.content = complete and one that is graph-based for larger code systems where CodeSystem.content = not-present. The latter stores terminological content in a graph database (JanusGraph). <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> I'd be happy to set up some time to give you a walk-through of what we have. The graph database support and really the terminology  capabilities in general are pretty experimental and the documentation is lacking but we will continue to enhance / improve.</p>",
        "id": 232121747,
        "sender_full_name": "John Timm",
        "timestamp": 1616882979
    },
    {
        "content": "<p>Added to our backlog: <a href=\"https://github.com/IBM/FHIR/issues/2162\">https://github.com/IBM/FHIR/issues/2162</a></p>",
        "id": 232126252,
        "sender_full_name": "John Timm",
        "timestamp": 1616888173
    },
    {
        "content": "<p>Thanks <span class=\"user-mention\" data-user-id=\"192334\">@John Timm</span> , I'm on leave for the next couple of weeks, so perhaps we can set something up for towards the end of the month?</p>",
        "id": 232543031,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1617172548
    },
    {
        "content": "<p>Sounds good. Please send me a PM with your availability and your email and I'll set something up.</p>",
        "id": 232583691,
        "sender_full_name": "John Timm",
        "timestamp": 1617194776
    }
]