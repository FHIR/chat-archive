[
    {
        "content": "<p>Hi. We have concept maps between local value sets and HL7(FHIR) value sets. Iâ€™ve found out that the HL7 value set compositions can change between fhir versions to include concepts from different code systems while still maintaining the same URI. </p>\n<p>Our concept maps refers to the value sets using the elements sourceUri and targetUri. Would it be advisable/correct to move to using sourceCanonical and targetCanonical and include the version when referencing HL7 value sets since backwards incompatible changes can occur with them?</p>\n<p>E.g. <a href=\"http://hl7.org/fhir/valueset-immunization-status.json.html\" title=\"http://hl7.org/fhir/valueset-immunization-status.json.html\">http://hl7.org/fhir/valueset-immunization-status.json.html</a> vs <a href=\"http://hl7.org/fhir/stu3/valueset-immunization-status.json.html\" title=\"http://hl7.org/fhir/stu3/valueset-immunization-status.json.html\">http://hl7.org/fhir/stu3/valueset-immunization-status.json.html</a><br>\nAnd our concept map: <a href=\"https://healthterminologies.gov.au/fhir/ConceptMap/immunization-act-status-v3-to-immunization-status-codes-fhir-1\" title=\"https://healthterminologies.gov.au/fhir/ConceptMap/immunization-act-status-v3-to-immunization-status-codes-fhir-1\">https://healthterminologies.gov.au/fhir/ConceptMap/immunization-act-status-v3-to-immunization-status-codes-fhir-1</a><br>\nThanks</p>",
        "id": 194903857,
        "sender_full_name": "Liam Barnes",
        "timestamp": 1587545973
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192027\">@Liam Barnes</span> I am not an expert on ConceptMap (<span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> - help here) but I believe there are a couple of issues with your example but let me go through some issues in general also.</p>\n<ul>\n<li>ValueSet expansions can change over time because you can change the CLD - content logical definition (the compose) to refine the set of concepts to be included _as long as the result stays consistent with the original scope, usually as reflected in the description element. When you make such a change the value set business version SHALL be changed. Expansions can also change simply based on the fact that the compose can define an \"expression\" that will bring different concepts into the expansion because the code system used changes between expansion events (IE, with _no_ change in the value set CLD so no change in the version of the value set).</li>\n<li>Because a conceptMap describes concept-level maps and the expansion can change what is in both the source and the target, I would agree that you should capture the version of the source and target value set.<ul>\n<li>But remember that even with that, the expansion can change based on what code system version was used to generate the expansion. So your conceptMap might have issues if it is used with a different code system version in addition to a different value set version.</li>\n<li>I do think you should be using the canonical reference.</li>\n</ul>\n</li>\n<li>I see you used <a href=\"http://hl7.org/fhir/R4/conceptmap-definitions.html#ConceptMap.group\" title=\"http://hl7.org/fhir/R4/conceptmap-definitions.html#ConceptMap.group\">ConceptMap.group</a> element which is restricted to source and target _in the same code system_ yet your example does not do that. I'm not an expert on this resource so perhaps Rob H can help us here and I know this resource has been under review.</li>\n</ul>",
        "id": 194941469,
        "sender_full_name": "Robert McClure",
        "timestamp": 1587566502
    },
    {
        "content": "<p>Thanks for the reply <span class=\"user-mention\" data-user-id=\"191503\">@Robert McClure</span> . Some great info there. I have understood that an expansion can change due to variances in versions of the code system/s in the CLD (unless versions are stated in the CLD). What I've misunderstood is that the CLD can have backwards incompatible changes and that is reflected by a change in the business version but not URI. I had always considered concept enumerations in a CLD to be brittle because of this. </p>\n<p>My interpretation of ConceptMap.group is you can have a number of groups but each group should have source concepts from the same source code system and also target concepts from the same target code system, but the source and target systems would be different. Is that what you mean?</p>",
        "id": 195014038,
        "sender_full_name": "Liam Barnes",
        "timestamp": 1587610310
    },
    {
        "content": "<p>I think a take-away here is that where ValueSets have the same governance and life-cycle as the CodeSystems that they reference, they should explicitly target the relevant CodeSystem version (and the same would apply to ConceptMaps that share the same governance and life-cycle as the ValueSets they reference).</p>",
        "id": 195016807,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1587614744
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> I'm not sure I follow. By that logic are you saying that HL7 value sets should include code system versions in the compose/CLD if those code systems are also HL7 and have the same governance?</p>\n<p>This has now made me wonder, why the datatype choice (uri and canonical) even exists? If you don't have a version, you can just put the uri in a canonical datatype.</p>",
        "id": 195021711,
        "sender_full_name": "Liam Barnes",
        "timestamp": 1587622385
    },
    {
        "content": "<p>For the HL7 ValueSets that are part of the spec, yes.</p>",
        "id": 195021981,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1587622724
    },
    {
        "content": "<p>I think for our value sets and concept maps, we will now explicitly state versions for any reference to HL7 code systems or value sets.<br>\nFor references to our own value sets and code systems, I don't think versions will be necessary.  Our value set definitions will not have backwards incompatible changes without a URI change. Similarly for our code systems as we maintain concept permanence in those.</p>",
        "id": 195023176,
        "sender_full_name": "Liam Barnes",
        "timestamp": 1587624133
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192027\">@Liam Barnes</span> <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> <br>\nFirst let me clarify that I was incorrect on how ConceptMap.group is used - source and target <strong>can be from two different code systems</strong> That will actually be happening almost all the time, the wording on the resource is confusing at best.</p>\n<p>Like most things FHIR, there is lots of wiggle room in the base spec. To be a well formed value set, there is no need to specify the code system version to be used in the CLD. It is certainly important to understand how value sets work and that the CLD can change (even a change in code system used,) and when it does it SHALL result in a new business version but SHALL stay consistent with the specified intended scope, usually noted in the ValueSet.description. As you've noted, the expansion will <em>be guaranteed to <strong>not</strong> change for that business version</em> only if the code system version is specified in the compose <strong>OR</strong> the value set (as most do not) has the <a href=\"http://build.fhir.org/valueset-definitions.html#ValueSet.compose.lockedDate\" title=\"http://build.fhir.org/valueset-definitions.html#ValueSet.compose.lockedDate\">ValueSet.Compose.lockedDate</a> is populated. Both of those approaches result in a <em>version of the valueset</em> that is \"Locked\" resulting in one and only one expansion. Remember that a new version of the valueset can change this. For all of these reasons I think it's best to try to manage conceptmap version integrity in the conceptmap resource instance, and to not push that back into the value set unless you own it. That means using canonical(valueset) <em>with the version appended</em> as your identifier for source and target <strong>BUT</strong> we have a gap it seems with this in that you can not <em>also</em> specify the code system version you want to say your source and target are to use to generate the needed expansion. Without this you are correct that the only way to be sure, is to force the value business version to be a form of \"Locked\" so you can be sure the map does not have to deal with different expansion members. <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> I think this is a gap and we need to come up with a way to allow Conceptmap to state both valueset version <strong>and</strong> the code system version to be used.</p>",
        "id": 195087632,
        "sender_full_name": "Robert McClure",
        "timestamp": 1587659937
    },
    {
        "content": "<p>well, it can: ConceptMap.source/target vs ConceptMap.group.source/target</p>",
        "id": 195119605,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1587675941
    },
    {
        "content": "<p>I take issue with the idea that  ValueSet.Compose.lockedDate fixes or otherwise results in a deterministic expansion. The problem is that the scope of interpretation of lockedDate is not fixed -- it could be \"the versions of the CodeSystems available in a specific terminology server on the specified date\" or \"the latest version of the CodeSystem available anywhere on the specified date\" (only released versions or also draft versions?).  Also, there may be several versions associated with a given date -- either in the SNOMED case, or because of rapid updates.</p>",
        "id": 195133037,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1587685722
    },
    {
        "content": "<p>Note that you can always wrap a ValueSet to fix the CodeSystem(s) version(s) and then reference the wrapping ValueSet.</p>",
        "id": 195133350,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1587685951
    },
    {
        "content": "<p>The intention of lockedDate  is that it fixes things.  The reality is that changes in technical availability of information, changes in software, etc. could negatively impact the reproducability</p>",
        "id": 195134560,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1587687015
    },
    {
        "content": "<p>As Grahame pointed out, I don't believe that there is any actual gap in being able to specify and fix the versions of both the code system and value set, as that is necessary.  There may well be an issue with what we can and can't do with lockedDate (when compared with the intention for that element, as Lloyd mentions - \"fixes things\" doesn't seem exactly specific enough).  So some further discussion (and clarification, if nothing else) in Vocab seems needed.</p>",
        "id": 195141469,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1587696141
    },
    {
        "content": "<p>Is there a way to fix to just the major version of a value set or code system (if semantic versioning is used in those)? Now that we've found versionless references can introduce unintended/breaking changes, by stating specific versions we will create a maintenance overhead updating our resources in line with updates to the fhir spec terminology.</p>",
        "id": 195143975,
        "sender_full_name": "Liam Barnes",
        "timestamp": 1587699743
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"192027\">@Liam Barnes</span> I think one of the keys there goes back to the naming scheme for the URIs -- the \"major\" version should be part of the URI because changing the major version is a signal of breakage -- you need clients to explicitly opt in to the change.<br>\nThe patch version indicates minor unimportant changes / bug fixes etc.  You want these to be picked up automatically and thus they shouldn't really trigger the rules for a Business Version change (they're conceptually at the level of a technical version change), thus patch version does not belong in the version string.<br>\nThis leaves us with minor version, and that is the thing that you might want to fix to.</p>\n<p>Summary:</p>\n<ul>\n<li>Major version goes into the URI</li>\n<li>Major.minor goes into the version</li>\n<li>Patch is omitted (or in a server with full history, can be considered as .../_history/[patch])</li>\n</ul>",
        "id": 195145022,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1587701182
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> <span class=\"user-mention\" data-user-id=\"192027\">@Liam Barnes</span> Even if semantic versioning of terminology (value sets or code systems, how about concept maps?) artifacts was understood, and I'm not aware that it is, I am not aware of any major sources for these artifacts that use semantic versioning. So for me, discussing how to use it in a url seems premature. Perhaps you can show me how that opinion is mistaken?</p>",
        "id": 195201015,
        "sender_full_name": "Robert McClure",
        "timestamp": 1587740660
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> Can you explain exactly how the source element/target content would be structured to state the code system version to be used for a specific value set version to get a specific expansion. It would help to have that example here in zulip so we can have it documented here. I assume you are saying you can do it in both the spots noted?</p>",
        "id": 195201894,
        "sender_full_name": "Robert McClure",
        "timestamp": 1587741000
    },
    {
        "content": "<p>yes</p>",
        "id": 195247901,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1587764562
    },
    {
        "content": "<p>actually, sort of:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"cp\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>\n\n<span class=\"nt\">&lt;ConceptMap</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://hl7.org/fhir&quot;</span><span class=\"nt\">&gt;</span>\n  <span class=\"nt\">&lt;id</span> <span class=\"na\">value=</span><span class=\"s\">&quot;103&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;sourceCanonical</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://acme.org/ValueSet/condition-codes|234&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;targetCanonical</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://acme.org/ValueSet/diagnoses-billing|2020-04-10&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;group&gt;</span>\n    <span class=\"nt\">&lt;source</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://snomed.info/sct&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;sourceVersion</span> <span class=\"na\">value=</span><span class=\"s\">&quot;March 2015 US Edition&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;target</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://hl7.org/fhir/sid/icd-10-us&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;targetVersion</span> <span class=\"na\">value=</span><span class=\"s\">&quot;2015&quot;</span><span class=\"nt\">/&gt;</span>\n  <span class=\"nt\">&lt;/group&gt;</span>\n<span class=\"nt\">&lt;/ConceptMap&gt;</span>\n</pre></div>",
        "id": 195248106,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1587764708
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191503\">@Robert McClure</span> That's what I was trying to do, at least from a technical perspective.<br>\nI'm starting from the perspective that the goal is to capture the common compatibility/substitutability semantics of the semver pattern, then showing how the conceptual major.minor.patch parts could map into existing parts and semantics of FHIR to achieve the same essential compatibility/substitutability semantics.<br>\nWhat I didn't address in detail was the content-end of the picture -- under what circumstances should a given change to a CodeSystem, ValueSet, or ConceptMap be considered a change to major, minor, or patch.  There is obviously some low-hanging fruit in the patch space, and also in the major space.<br>\nBut, some of it will depend on the use-cases a ValueSet, for example, is intended.  e.g., a ValueSet that is designed to specify what's valid to enter into a diagnosis field vs one designed for cohort identification vs one defined for validation.</p>",
        "id": 195266460,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1587787208
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span><br>\nIt would be nice to have some example maps in your ConceptMap example. As it stands, it's a bit incomplete. But I take this to mean something that is not clear in the spec: that when a group specifies a code system version, that version is intended to generate an expansion. When I looked at the spec, it seems to indicate the <em>code system version used for the code in the map.</em> To the OP issue - this does not say \"this map is for this expansion\" and importantly one could assume that it simply says these are valid mapping for a specific versioned code in a versioned value set <strong>independent of the expansion it is found in.</strong> </p>\n<p>I think we could improve ConceptMap to make more clear a ConceptMap may be tied to a specific expansion (value set version + code system version). I think this very immature resource could be improved to make such a thing clear.  That said, <span class=\"user-mention\" data-user-id=\"192027\">@Liam Barnes</span> , do you think what Graham has described is sufficient?</p>",
        "id": 195347126,
        "sender_full_name": "Robert McClure",
        "timestamp": 1587926730
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> I agree that semver for terminology artifacts would be useful. I don't agree that what you call \"the content-end of the picture\" is universally agreed upon low hanging fruit. I'd be very happy for you to make such a proposal and bring that forth as an HL7 project to make determinations of what is major, minor, patch consistent so we can promote this far and wide.  Start with UTG which is trying to do this. Then perhaps get SNOMED CT to agree. Then perhaps we have a platform to begin, otherwise I don't see this going very far and to suggest otherwise and make other decisions based upon that assumption is dangerous.</p>",
        "id": 195347284,
        "sender_full_name": "Robert McClure",
        "timestamp": 1587926975
    },
    {
        "content": "<p>if you really wanted to say that your mapping is only for a particular expansion, then produce a new value set with the expansion and it's own id or version, and then reference that directly. I agree that that example I should is</p>\n<blockquote>\n<p>code system version used for the code in the map.</p>\n</blockquote>\n<p>Not the version of the expansion. I think that's how it should be, btw</p>",
        "id": 195350747,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1587932235
    },
    {
        "content": "<p>I said there is _some_ low hanging fruit in the \"content\" space.  I was not saying the content space  _is_ low hanging fruit. Also I was not talking about just the CLD, but no matter.<br>\nConsider a CodeSystem that has no inactive codes, then changing the value of ValueSet.compose.inactive to true could be considered a patch change.  Wholesale changes to the compose such as switching from one CodeSystem to another would be a major change.<br>\nOther things, like adding the explicit inclusion (exclusion) of a code that currently already matches (doesn't match) existing filter conditions is less clear.<br>\nI don't have anything specific to propose here - there's too much context to account for, not least of which is the intended use of a ValueSet or ConceptMap.  What might help is documenting particular examples to help others make consistent judgement calls.</p>",
        "id": 195356345,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1587940668
    },
    {
        "content": "<p>I can try to explain the issue that we are experiencing better and see if that helps. Apologies for the length of post.<br>\nWe have concept maps and value sets that reference terminology from the FHIR spec. To date we have included those as versionless references. It is apparent that for one/some of our use cases that is not stable enough and ultimately ambiguous. One of our existing concept maps demonstrating this is as follows:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;resourceType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ConceptMap&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;immunization-act-status-v3-to-immunization-status-codes-fhir-1&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://healthterminologies.gov.au/fhir/ConceptMap/immunization-act-status-v3-to-immunization-status-codes-fhir-1&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;1.0.1&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;sourceUri&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://healthterminologies.gov.au/fhir/ValueSet/immunization-act-status-hl7-v3-1&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;targetUri&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://hl7.org/fhir/ValueSet/immunization-status&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;group&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;source&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://hl7.org/fhir/v3/ActStatus&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;target&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://hl7.org/fhir/medication-admin-status&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;element&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;completed&quot;</span><span class=\"p\">,</span>\n          <span class=\"nt\">&quot;target&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n              <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;completed&quot;</span><span class=\"p\">,</span>\n              <span class=\"nt\">&quot;equivalence&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;equivalent&quot;</span>\n            <span class=\"p\">}</span>\n          <span class=\"p\">]</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;nullified&quot;</span><span class=\"p\">,</span>\n          <span class=\"nt\">&quot;target&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n              <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;entered-in-error&quot;</span><span class=\"p\">,</span>\n              <span class=\"nt\">&quot;equivalence&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;equivalent&quot;</span>\n            <span class=\"p\">}</span>\n          <span class=\"p\">]</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;aborted&quot;</span><span class=\"p\">,</span>\n          <span class=\"nt\">&quot;target&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n              <span class=\"nt\">&quot;equivalence&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;unmatched&quot;</span>\n            <span class=\"p\">}</span>\n          <span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>The change to <a href=\"http://hl7.org/fhir/ValueSet/immunization-status\" title=\"http://hl7.org/fhir/ValueSet/immunization-status\">http://hl7.org/fhir/ValueSet/immunization-status</a> to include values from a different system means the map is not suitable for anyone using R4. So our option is to now produce this:</p>\n<div class=\"codehilite\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;resourceType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;ConceptMap&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;immunization-act-status-v3-to-immunization-status-codes-fhir-2&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://healthterminologies.gov.au/fhir/ConceptMap/immunization-act-status-v3-to-immunization-status-codes-fhir-2&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;2.0.0&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;sourceCanonical&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;https://healthterminologies.gov.au/fhir/ValueSet/immunization-act-status-hl7-v3-2&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;targetCanonical&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://hl7.org/fhir/ValueSet/immunization-status|4.0.1&quot;</span><span class=\"p\">,</span>\n  <span class=\"nt\">&quot;group&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">&quot;source&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://terminology.hl7.org/CodeSystem/v3-ActStatus&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;sourceVersion&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;2018-08-12&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;target&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://hl7.org/fhir/event-status&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;targetVersion&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;4.0.1&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;element&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;completed&quot;</span><span class=\"p\">,</span>\n          <span class=\"nt\">&quot;target&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n              <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;completed&quot;</span><span class=\"p\">,</span>\n              <span class=\"nt\">&quot;equivalence&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;equivalent&quot;</span>\n            <span class=\"p\">}</span>\n          <span class=\"p\">]</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;nullified&quot;</span><span class=\"p\">,</span>\n          <span class=\"nt\">&quot;target&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n              <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;entered-in-error&quot;</span><span class=\"p\">,</span>\n              <span class=\"nt\">&quot;equivalence&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;equivalent&quot;</span>\n            <span class=\"p\">}</span>\n          <span class=\"p\">]</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;aborted&quot;</span><span class=\"p\">,</span>\n          <span class=\"nt\">&quot;target&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n              <span class=\"nt\">&quot;equivalence&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;unmatched&quot;</span>\n            <span class=\"p\">}</span>\n          <span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre></div>\n\n\n<p>My concern is that, if the target value set and system increment by patch or minor version, we will need maps for each of those. I would like to be able state relationships between concepts in systems (and value sets) and have those relationships valid for a range of versions of systems/value sets unless something significant happens to them.<br>\nHope that was clear.</p>",
        "id": 195365078,
        "sender_full_name": "Liam Barnes",
        "timestamp": 1587953627
    },
    {
        "content": "<p>This seems quite clear, <span class=\"user-mention\" data-user-id=\"192027\">@Liam Barnes</span>.  It seems to me that what you would like to be able to do is to specify a range of target versions (e.g. min and/or max) for which the map applies.  Using targetCanonical and group.targetVersion doesn't provide a way to do that.  So if you stay with that approach then it seems that you will have to create a separate map for each current and future published version of the FHIR spec.  That's  probably not a huge number of versions over time, but it does require maintenance which would be preferable to avoid.  So my other thought is this.  You could continue using sourceUri and targetUri (without versions) as in the first map.  And then you could have two groups with different group.target values for the two different code systems, one which is used for the FHIR spec versions &lt;= 3.0.2 and another for &gt; 3.0.2 (and not using group.targetVersion).  Then you would distinguish between those maps for a particular source code using dependsOn.  I haven't thought of a specific way to represent the spec version ranges using the dependsOn property/value element pairs.  There is quite a bit of flexibility with that, but it may not be sufficient for it to be fully computable (if that's what you need).  So maybe you would end up needing to also add an extension, but that doesn't seem necessarily too bad in order for it to work using a single map.</p>",
        "id": 195367679,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1587957246
    },
    {
        "content": "<p>That sounds interesting <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span>. If we were to leave the new EventStatus target versionless, there's still the possibility a mapping will be made invalid due to a backwards incompatible change in the system. I must admit I'll have to do some research for dependsOn to see how that might work and maybe that addresses this. </p>\n<p>If we create separate maps for each fhir version, the maintenance extends to ensuring implementation guide versions and maps don't drift apart. All possible, just a pain.</p>\n<p>Thanks</p>",
        "id": 195369881,
        "sender_full_name": "Liam Barnes",
        "timestamp": 1587960341
    },
    {
        "content": "<p>Yes, I agree there could still be a future backwards incompatible change to the underlying code system.  But actually following this change that was made for R4 I think that seems relatively unlikely, and with decreasing likelihood as the Immunization resource matures.</p>",
        "id": 195370443,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1587961078
    },
    {
        "content": "<p>It's interesting that this text <a href=\"https://www.hl7.org/fhir/resource.html#versions\" title=\"https://www.hl7.org/fhir/resource.html#versions\">https://www.hl7.org/fhir/resource.html#versions</a> explicitly says:</p>\n<blockquote>\n<p>For the kind of resources that have canonical URLs, this specification recommends that implementers follow the Semantic Versioning principles, but does not require this. Implementers should consider, however, making the MAJOR version part of the canonical URL rather than putting it in [Resource].version.</p>\n</blockquote>\n<p>But the FHIR spec itself doesn't do this.</p>",
        "id": 195370638,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1587961218
    },
    {
        "content": "<p>Yeah there are some terminology resources you get the vibe are stable and others aren't. Immunization status is an example but we have several  different concept maps (and value sets) dependent on fhir content so would be good to have something predictable.</p>",
        "id": 195371567,
        "sender_full_name": "Liam Barnes",
        "timestamp": 1587962163
    },
    {
        "content": "<p>The normative parts of the FHIR specification will do that</p>",
        "id": 195393516,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1587980306
    }
]