[
    {
        "content": "<p>The Terminology Service page (maturity level 4) - <a href=\"http://build.fhir.org/terminology-service.html#validation\">http://build.fhir.org/terminology-service.html#validation</a> has the following to say:</p>\n<blockquote>\n<p>Every code system has an implicit value set that is \"all the concepts defined in the code system\" (CodeSystem.valueSet). For some code systems, these value set URIs are defined in advance (e.g. for LOINC, it is <a href=\"http://loinc.org/vs\">http://loinc.org/vs</a>). However, for some code systems, they are not known. Clients can refer to these implicit value sets by providing the URI for the code system itself.</p>\n</blockquote>\n<p>We used to support this in Ontoserver, but ended up disabling it because some infrastructure tooling complained</p>",
        "id": 259944599,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1635817964
    },
    {
        "content": "<p>hmm. I don't think anyone's doing this</p>",
        "id": 259958802,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1635836056
    },
    {
        "content": "<p>It's come up for me because 1. I was reading the spec, and 2. UCUM doesn't define such an implicit valueset uri so would appear to be a prime candidate for this usage</p>",
        "id": 260063246,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1635890214
    },
    {
        "content": "<p>well, should we retire it. or make it work?</p>",
        "id": 260067228,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1635892421
    },
    {
        "content": "<p>This thread and a request for a value set with all the ICD-10-CM codes in it prompted a lively internal discussion. I believe that Michael found the only, nicely hidden, reference to what is to my mind commonly mentioned as \"the implicit value set\" meaning \"all the codes in the code system.\"  I've had some concern about the confusion that using the same url to represent both a code system and a value set could cause given that this is intended to be <strong>the permanent canonical identifier for the object specified.</strong> But let's keep in mind the identifier is not expected to resolve so perhaps it means either/both? I also understand there are <em>implicit</em> tooling implications that seem to be creating havoc. </p>\n<p>After some discussion with <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> we've agreed as a strawman to propose this:</p>\n<ul>\n<li>It is permissible for a code system canonical url can be cast (my word) as a value set canonical url </li>\n<li>When this is done, the implied value set resource SHALL be interpreted to have the following:<ul>\n<li>Valueset.url = codesystem.url</li>\n<li>Valueset.status = codesystem.status for the code system version used for any operations</li>\n<li>valueset.immutable = true</li>\n<li>valueset.compose.inactive = We need to have a separate discussion on what \"MeaningIfMissing\" should say about this, but I would say it should be \"false\"</li>\n<li>valueset.compose.include.system = the code system base canonical url</li>\n<li>valueset.compose.include.version SHALL NOT be populated so that it (as an immutable value set) is never <em>defined</em> to be specific to a particular version. We may want to think about how this works for all the SCT editions.</li>\n</ul>\n</li>\n</ul>\n<p>Thoughts? <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> <span class=\"user-mention\" data-user-id=\"195036\">@Carol Macumber</span> <span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> <span class=\"user-mention\" data-user-id=\"192130\">@Carmela Couderc</span></p>",
        "id": 260468797,
        "sender_full_name": "Robert McClure",
        "timestamp": 1636148930
    },
    {
        "content": "<blockquote>\n<p>using the same url to represent both a code system and a value set could cause given that this is intended to be the permanent canonical identifier for the object specified</p>\n</blockquote>\n<p>so we should always  be clear that we are <em>not</em> (and never are) using the same URL to represent both. And it's not documented that way. We're saying that for a code system, there is either an explicit or implicit value set that means 'all the codes in the code system', and that therefore it's acceptable to provide a code system URL as a proxy for that value set. Irrespective of whether we or you think that's a good idea, we must be clear that it's a proxy, not an alternative identifier. (like people who put medications on the problem list as a proxy for the underlying condition and side effects of treatment)</p>\n<p>btw. the 'all codes' value set includes inactive codes - it must. Otherwise agree about it how it's constructed. If you don't want inactive codes, you don't want 'all codes in the system' and using the code system URL as a proxy for the value set you do want isn't the thing you want to do</p>",
        "id": 260474266,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1636152873
    },
    {
        "content": "<p>Finally home and looking at this.    Note we have a whole raft (&gt;100s) of value sets in THO (imported from v3 coremif last official release December 2019, and from v2) that are defined with a compose.include only specifying the system (thus including all codes in the expansion).    The URI values are all over the place relative to the CodeSystem URI.   Many (most?) of these have additional metadata, ie the other elements in ValueSet resource with various values, many of which differ from similar or implied values in the CodeSystem referenced in the compose.   Some (many? most?) have values that are required for conformance to VSD; I think (but need to check) that some of these are not in the CodeSystem resource specified in the ValueSet.compose; unknown what the effect/meaning of this might be.    Some (a few I think?) of these value sets have their URI specified in CodeSystem.valueSet element; also unknown what this means wrt how the tooling handles it, and what might be the expectation when these resources are imported from the generated package for servers.    Maybe it is just I am ignorant of too many things, but it appears there are still a number of disconnects and ambiguities.</p>",
        "id": 260474935,
        "sender_full_name": "Ted Klein",
        "timestamp": 1636153356
    },
    {
        "content": "<p>Right.  I never asserted that the Valueset.url would be the CodeSystem.url - the implicit ValueSet doesn't have a URL (and can't be stuck in a registry or otherwise discovered).</p>",
        "id": 260490686,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1636171644
    },
    {
        "content": "<p>Hmm. Isn‘t the implicit VS.url defined in CodeSystem.valueSet?</p>",
        "id": 260506926,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1636196471
    },
    {
        "content": "<p>I‘m concerned about the proposed „proxy pattern“<br>\nThis would allow binding an element to a CodeSystem. This is an error i see beginners doing a lot. <br>\nIG publisher/ validator creates currently errors on this, helping FHIR beginners. <br>\nAllowing the proxy url means, that a validator can‘t throw an error in this case - as the user could have meant to use the cs proxy url.</p>",
        "id": 260507108,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1636196691
    },
    {
        "content": "<p>All, the above proposal was intended to be provocative to force clarifications, so let's get all this straight.</p>\n<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> This:</p>\n<blockquote>\n<p>we must be clear that it's a proxy, not an alternative identifier. </p>\n</blockquote>\n<p>Is a distinction without a difference unless you clearly - for all, not just highly technical designers and implementers - clarify how to easily distinguish when \"a proxy\" is ok and when it is not. </p>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> </p>\n<blockquote>\n<p>the implicit ValueSet doesn't have a URL (and can't be stuck in a registry or otherwise discovered)</p>\n</blockquote>\n<p>If the implicit value set does not have a url, then how are we referencing it? That statement in the context of how FHIR is currently designed makes no sense to me. I keep thinking that in essence \"the implicit all codes value set\" that is defined as the code system url is actually not a FHIR value set. Instead, it seems to be a shorthand reference to an expansion of all the codes for a specified code system (can be version specific?) that can <em>be treated like the result of $expand of an all codes value set</em> and used for validation. If that is on-target, then I'd like to see an explicit list of the places this can be used: Binding? Max value set (I'd very much like this) , other?</p>",
        "id": 260518594,
        "sender_full_name": "Robert McClure",
        "timestamp": 1636211087
    },
    {
        "content": "<p>CodeSystem.valueSet is a reference to an <em>explicit</em> valueset that serves the same function as the implicit one - though it could potentially have significantly more metadata.</p>\n<p>The implicit value set gets generated \"on the fly\" when someone points to a CodeSystem instead of a ValueSet in a place where only ValueSets are allowed to be referenced.  The ValueSet itself doesn't have a URL because it is not storeable/discoverable/retrievable as a distinct entity.  If you reference the canonical for a code system  any place where the data type is canonical&lt;ValueSet&gt;, then that's taken as an instruction to auto-generate the implicit value set.</p>\n<p>And, as I think about it more, if the reference in the canonical is to a specific version of the code system, then the implied value set should also be tied to that version of the code system.</p>",
        "id": 260523460,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1636217033
    },
    {
        "content": "<p>An implicit value set does implicitly have a URL, but you probably don’t know what it is. (Explicitly!)</p>",
        "id": 260536787,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1636233772
    },
    {
        "content": "<p>Think we clearly say that using a proxy is only OK in one particular context? Where do we currently say that?</p>",
        "id": 260536812,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1636233817
    },
    {
        "content": "<p>(I could look it up but I’m out in the country today wth limited access - surprised zulip is working)</p>",
        "id": 260536858,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1636233844
    },
    {
        "content": "<p>\"All codes in the code system\" means that <code>ValueSet.compose.inactive</code> must be <code>true</code>.</p>",
        "id": 260538045,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1636235373
    },
    {
        "content": "<blockquote>\n<p>CodeSystem.valueSet is a reference to an _explicit_ valueset that serves the same function as the implicit one - though it could potentially have significantly more metadata.</p>\n</blockquote>\n<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> where is it stated that the ValueSet must be explicit?</p>",
        "id": 260538211,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1636235607
    },
    {
        "content": "<p>At issue here for me are code systems that do not have a value defined for <code>CodeSystem.valueSet</code>.<br>\nI would be comfortable, to handle the \"it's a proxy, not an alternative identifier\" constraint, that it is only valid to bind to <code>CodeSystem.url</code> as an alternative IF <code>CodeSystem.valueSet</code> is undefined.  I think this would usefully handle <span class=\"user-mention\" data-user-id=\"191451\">@Patrick Werner</span> 's issue and is in alignment with the existing wording I quoted at the beginning of this thread.</p>",
        "id": 260538394,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1636235860
    },
    {
        "content": "<p>There's zero value in relisting the CodeSystem url given that it's a given that url can <em>always</em> be used</p>",
        "id": 260541505,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1636240154
    },
    {
        "content": "<p>My understanding  of this discussion, particularly Lloyd, is that we allow the use of the code system url to be used in places that expect a valueset canonical url. When this is done, the returned value set needs to be something formally defined, and my provocative proposal above was to clarify what that thing is. I sense we've not settled on something and I'd like to see a full update to my proposal so we all understand. In particular I believe the valueset.url must be populated - so with what?</p>\n<p>I'm not sure how to use Michael's desire to do an either/or with codesystem.valueset. given that if we allow this typecasting, it can occur anywhere and there is no guarantee that the server needing this \"all codes\" thing will have a code system with that populated.</p>",
        "id": 260687583,
        "sender_full_name": "Robert McClure",
        "timestamp": 1636391521
    },
    {
        "content": "<p>it doesn't have to be everywhere. In particular, it can not be in resources, because of the way that Reference() is defined. It can only be in parameters on the terminology operations</p>",
        "id": 260705492,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1636399266
    },
    {
        "content": "<p>Does that mean you can't bind to such valuesets nor use them as the scope for ConceptMaps?  That seems quite limiting.</p>",
        "id": 260721035,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1636406691
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191503\">@Robert McClure</span> I would not expect to be able to search for an implicit ValueSet and get back a representation of it (partly because one of the use-cases for implicit resources is to identify things that are beyond the scope of FHIR to define explicitly -- <code>http://snomed.info/sct?fhir_vs=refset</code> is an example).</p>",
        "id": 260721447,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1636406904
    },
    {
        "content": "<blockquote>\n<p>Does that mean you can't bind to such valuesets nor use them as the scope for ConceptMaps? That seems quite limiting.</p>\n</blockquote>\n<p>I believe so</p>",
        "id": 260762659,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1636442943
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191316\">Grahame Grieve</span> <a href=\"#narrow/stream/179202-terminology/topic/CodeSystem.20URI.20as.20ValueSet.20URI/near/260762659\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Does that mean you can't bind to such valuesets nor use them as the scope for ConceptMaps? That seems quite limiting.</p>\n</blockquote>\n<p>I believe so</p>\n</blockquote>\n<p>just create an include everything VS of this CS. Or am i missing a point</p>",
        "id": 260784673,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1636457544
    },
    {
        "content": "<p>Yes, it's always possible to create an explicit ValueSet, but then a) it's another thing to manage, share, etc, and b) it forces everyone to go off and create their own version of essentially the same thing.  Eg a ConceptMap between SNOMED unit codes and UCUM codes would need to also define (and pass around) an all-codes UCUM ValueSet rather than just being able to reference an implicit one.</p>",
        "id": 261074283,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1636588914
    },
    {
        "content": "<p>I would expect you to be able to bind and use them in concept maps, but NOT be able to store them in registries.  ValueSet.url is not mandatory.  So when you generate the thing in memory, you don't have to have one.</p>",
        "id": 261365304,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1636816596
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191343\">Michael Lawley</span> <a href=\"#narrow/stream/179202-terminology/topic/CodeSystem.20URI.20as.20ValueSet.20URI/near/261074283\">said</a>:</p>\n<blockquote>\n<p>Yes, it's always possible to create an explicit ValueSet, but then a) it's another thing to manage, share, etc, and b) it forces everyone to go off and create their own version of essentially the same thing.  Eg a ConceptMap between SNOMED unit codes and UCUM codes would need to also define (and pass around) an all-codes UCUM ValueSet rather than just being able to reference an implicit one.</p>\n</blockquote>\n<p>i understand the use-case and like the idea (wasn't aware of implicite VS). Is this supported by any tooling/product beside ontoserver at the moment?</p>",
        "id": 261517604,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1636992016
    },
    {
        "content": "<p>The basic non-ECL ones tend to be supported by terminology servers that have SNOMED support.  I believe <a href=\"http://tx.fhir.org\">tx.fhir.org</a> also has good coverage.  You can try some of them out and compare with this tool: <a href=\"https://ontoserver.csiro.au/vstool\">https://ontoserver.csiro.au/vstool</a></p>",
        "id": 261553352,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1637007595
    },
    {
        "content": "<p>The IG Publisher and Java Validator are not allowing binding to a CS:<br>\n<code>The valueSet reference http://hl7.org/fhir/encounter-status on element Encounter.status points to something that is not a value set (CodeSystem)</code></p>",
        "id": 261772042,
        "sender_full_name": "Patrick Werner",
        "timestamp": 1637148689
    },
    {
        "content": "<p>no. the way the definitions work, it's invalid to substitute a reference to a ValueSet with a CodeSystem in a reference or a canonical data type. It's only possible to do so in parameters to tx server calls, and that's the scope of what's being discussed here</p>",
        "id": 261833003,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637176201
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  said:</p>\n<blockquote>\n<p>it doesn't have to be everywhere. In particular, it can not be in resources, because of the way that Reference() is defined. It can only be in parameters on the terminology operations.</p>\n</blockquote>\n<p>This actually would work for me, but I'm not clear that it would work for others and it is clearly not what folks <em>thought</em> they could do with implicit value sets. If we restrict the use of an implicit value set to a parameter in operations that allowed value sets as a parameter, then I think all my \"how do you represent it\" concerns go away. We'd not want folks to persist it, but perhaps we'd say that an implicit value set <strong>cannot have valuest.url populated.</strong> then for sure you can not do <em>normal</em> value set things with it. </p>\n<p>Would this work?</p>",
        "id": 261833383,
        "sender_full_name": "Robert McClure",
        "timestamp": 1637176406
    },
    {
        "content": "<p>hey no</p>",
        "id": 261849089,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637183142
    },
    {
        "content": "<p>there's some real confusion here. Implicit Value Sets are really value sets, and you can use them in value set references - everywhere</p>",
        "id": 261849175,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637183170
    },
    {
        "content": "<p>and implicit value sets have real well defined URLs</p>",
        "id": 261849244,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637183193
    },
    {
        "content": "<p>it's using CodeSystem URLs as proxies for value sets that may or may not be explicitly defined that's only possible in terminology service parameters</p>",
        "id": 261849396,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637183272
    },
    {
        "content": "<p>I guess it's this last point that I'm not so sure about.  If the code system url represents an implicit value set for \"all codes\" in the code system, then I think, at least for the sake of consistency, it should follow the same rules as any other implicit value set (as noted above).  And if isn't a url that references the implicit value of all codes in the code system (either as specified in CodeSystem.valueSet or by convention), then I think we shouldn't assume that it can be used for that purpose - anywhere.  I think it probably adds even more possibility for misuse and confusion if we allow the code system url to represent some sort of \"implicit value set lite\", that can be used in one place, but not others.</p>",
        "id": 261867351,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1637192845
    },
    {
        "content": "<blockquote>\n<p>If the code system url represents an implicit value set for \"all codes\" in the code system</p>\n</blockquote>\n<p>it does not. It cannot 'represent' an implicit value set.</p>",
        "id": 261877938,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637201507
    },
    {
        "content": "<p>a value set may be inferred from it - whether explicit or implicit.</p>",
        "id": 261877978,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637201524
    },
    {
        "content": "<p>I don't feel strongly that it should be able to used like this with terminology service parameters. it might be a bad idea given that many in the community still can't differentiate between code systems and value sets, or it might be a good idea as a convenience short cut</p>",
        "id": 261878034,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637201598
    },
    {
        "content": "<p>but I'm very sure that you can't use a code system URL in place of a value set URL in a reference</p>",
        "id": 261878044,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637201623
    },
    {
        "content": "<p>there's a compromise: define a different parameter that can be used in place of a value set url</p>",
        "id": 261878096,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637201650
    },
    {
        "content": "<p>I'm fine if we keep them completely separate.  It's just that, as has already been pointed out, the spec in <a href=\"http://build.fhir.org/terminology-service.html#validation\">4.7.5 Value Set Validation</a> describes using the  code system URI as an \"implicit value set\" - and doesn't say anything about \"this only applies to terminology service operations\" (though the statement does appear on that page) and it doesn't make any distinctions from any other type or use of an \"implicit value set\".  So we at the very least need to make the scope of what we want this to apply to (if we want to use it at all) much clearer.</p>",
        "id": 261879358,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1637203104
    },
    {
        "content": "<p>well, the wording is narrower than that:</p>",
        "id": 261879654,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637203560
    },
    {
        "content": "<blockquote>\n<p>Clients can refer to these implicit value sets by providing the URI for the code system itself</p>\n</blockquote>",
        "id": 261879695,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637203571
    },
    {
        "content": "<p>so: </p>\n<ul>\n<li>\"clients\" - it's not a thing in a resource, only a client (of the terminology service)</li>\n<li>the wording is clear: it's a way to refer to them.</li>\n</ul>",
        "id": 261879712,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637203624
    },
    {
        "content": "<p>never the less, it could be clearer, still. Or we could remove it since that wording predates defining the CodeSystem resource itself</p>",
        "id": 261879738,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637203663
    },
    {
        "content": "<p>I get your point about \"client\" - but I think most of us (including me) have tended to gloss over that when reading this.  So, as you say, we either need to make it clearer, or remove it.  Given that there's not much (if any) support or requests for it, the latter may be the easiest and least confusing.  And since that page is not (yet) normative, this could be a good time to make that change.</p>",
        "id": 261880094,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1637204076
    },
    {
        "content": "<p>What is an \"implicit\" value is not pointing to the CodeSystem as a ValueSet?</p>",
        "id": 261943966,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637250003
    },
    {
        "content": "<p>can someone tell me if there is a difference here between 'implicit' and 'intensional' value set? <a href=\"https://www.hl7.org/fhir/valueset-example-intensional.html\">https://www.hl7.org/fhir/valueset-example-intensional.html</a> Seems really similar conceptually to me. ?</p>",
        "id": 261944863,
        "sender_full_name": "Bret H",
        "timestamp": 1637250358
    },
    {
        "content": "<p>Intensional value set is defined by a filter expression.  Implicit value set (as I understand it) is a value set that isn't formally defined and can't be found by searching a registry, but can still be passed as a URL to a terminology server and cause it to behave \"as if\" it were a formally defined value set.</p>",
        "id": 261952047,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637253033
    },
    {
        "content": "<p>why would you do that rather than use an intentional value set?</p>",
        "id": 261961220,
        "sender_full_name": "Bret H",
        "timestamp": 1637256696
    },
    {
        "content": "<p>The intentional value set definition can be made fairly vague</p>",
        "id": 261961401,
        "sender_full_name": "Bret H",
        "timestamp": 1637256766
    },
    {
        "content": "<p>e.g. filter by existence in the codesystem</p>",
        "id": 261961480,
        "sender_full_name": "Bret H",
        "timestamp": 1637256789
    },
    {
        "content": "<p>This is the explanation from the Using SNOMED CT with FHIR <a href=\"http://hl7.org/fhir/snomedct.html#implicit\">page</a> (SNOMED CT has the most well-developed set of implicit value sets):</p>\n<blockquote>\n<p>Implicit value sets are those whose specification can be predicted based on the grammar of the underlying code system, and the known structure of the URL that identifies them. SNOMED CT has two common sets of implicit value sets defined: By Subsumption, and By Reference Set. These implicit value sets do not use complex queries. Implicit value sets can also be defined using an expression constraint. The implicit value set capability allows a single URL to serve as a value set definition, and can serve as the basis for the $expand operation and for other value set references.</p>\n</blockquote>\n<p>Implicit value sets are basically a convenience.  For this collection of relatively simple and predictable value sets, this capability avoids the need for someone (either manually or programmatically) to create and maintain them as individual FHIR resources and to install them on multiple terminology servers.  And for servers that support the capability it gives users a simple and predictable way to access the value set content.</p>",
        "id": 261965009,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1637258210
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> umm, maybe I missing something but sounds like the implicit definition above  is using a filtering by Subumption and by reference set within SNOMEDCT, which could be done with an intensional value set. can you help me further?</p>",
        "id": 261966111,
        "sender_full_name": "Bret H",
        "timestamp": 1637258624
    },
    {
        "content": "<p>that's because <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>'s definition is wrong:</p>\n<blockquote>\n<p>Implicit value set (as I understand it) is a value set that isn't formally defined and can't be found by searching a registry</p>\n</blockquote>",
        "id": 261969890,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637260449
    },
    {
        "content": "<p>not at all. an implicit value set may exist and may be found in a registry. Or not. But it's content can be predicted from it's URL. For this reason, implicit value sets are mostly intensional (or they just include all the code system)</p>\n<p>What's useful about implicit value sets is that you can use them and a teminology server can understand without someone having to try and  instantiate an infinite amount of intensional value sets on the server</p>",
        "id": 261970175,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637260582
    },
    {
        "content": "<p>And the only type of implicit value set URL is a code system URL - is that correct?</p>",
        "id": 261995425,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637271898
    },
    {
        "content": "<p>No.  The SNOMED CT page I linked to above describes 5 different SNOMED CT implicit value set url patterns.  That's the most complex that we have, but other code systems can do similar things when appropriate.</p>",
        "id": 261996951,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1637272644
    },
    {
        "content": "<blockquote>\n<p>And the only type of implicit value set URL is a code system URL - is that correct?</p>\n</blockquote>\n<p>no a code system URL is <em>not</em> an implicit value set. I can see that I'm going to have to keep saying this repeatedly</p>",
        "id": 262005458,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637277146
    },
    {
        "content": "<p>Then I'm confused.  But if this is something that only magically manifests when invoking terminology services and can't be used anywhere else, then I guess I don't really care...</p>",
        "id": 262026056,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637296415
    },
    {
        "content": "<p>in the mix here, and despite what the definitions in HL7 may have for the term: \"intensional\"  I do think there is a need for rendering a value set whose members meet the criteria expressed in a set of rules and may differ structurally from value sets rendered from an established (static?)  mechanism in a registry or a code system.</p>",
        "id": 262104892,
        "sender_full_name": "Davera Gabriel",
        "timestamp": 1637345077
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  well, how do we clarify this for you. You running around making false statements on this might be the source of the confusion here. A code system URL <em>is not</em> an implicit value set. A client may infer a value set identity (CodeSystem.valueSet) from the code system URL - and that may or may not be implicit. But yes, as you say, it's only for terminology service clients; it's not something that's possible or allowed in the <code>Reference</code> or <code>canonical</code> types</p>",
        "id": 262112143,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637348077
    },
    {
        "content": "<p>I would be in favour of removing the wording from 4.7.5 because a) it is clearly promoting confusion, and b) we removed this from Ontoserver some years ago with no negative feedback.</p>",
        "id": 262127062,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1637354602
    },
    {
        "content": "<p>Agree with <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span>. As he states in an earlier post, this section pre-dates the creation of the CodeSystem resource. I only find use for implicit value sets with regard to Code Systems that my Server won't return in their entirety (e.g. SNOMED CT and LOINC); otherwise, it's more client-friendly to create an explicit value set for that purpose.</p>",
        "id": 262131050,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1637356585
    },
    {
        "content": "<p>Wow, my understanding was the same as <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> but you all seem to have made up a very context-specific meaning for <em>implicit</em> when talking about a value set. The SCT set is just to my eye a SCT-specific Expansion query and since you can not use the syntax to define a value set for any other use, I'm kinda at a loss as why this is all that important. I actually think not having to explicitly define an \"all code\" value set for every code system would be useful, hence my desire to formalize what it meant. Seems I'm in the minority. </p>\n<p>I absolutely agree section 4.7.5 needs to be removed as it seems to make sense to very few people and is interpreted incorrectly by the majority.</p>\n<p>And I still need a value set of all ICD-10-CM codes that I hope DaVinci wants for a max binding but I'll see. I assume if not inside USCore, it will be made in the specific IG that needs it. Or THO... <span class=\"user-mention\" data-user-id=\"191430\">@Paul Knapp</span></p>",
        "id": 262153718,
        "sender_full_name": "Robert McClure",
        "timestamp": 1637371769
    },
    {
        "content": "<blockquote>\n<p>I actually think not having to explicitly define an \"all code\" value set for every code system would be useful, hence my desire to formalize what it meant.</p>\n</blockquote>\n<p>It would certainly be useful to have a some standard syntax, but the code system URI itself can't be. {url}/valueset would generally work...</p>",
        "id": 262157942,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637376986
    },
    {
        "content": "<p>To make sure I understand, when invoking terminology services and passing an argument as an HTTP parameter, in an argument that would <em>usually</em> be a ValueSet canonical, it's possible to send a CodeSystem canonical instead.  The interpretation in that circumstance is to treat the CodeSystem reference as if it was instead the CodeSystem.valueSet canonical and proceed with the execution of the operation.  Is that correct?  What if the Code System didn't have a CodeSystem.valueSet?  Would that be an error, or would the terminology service 'infer' the existence of a value set that said \"all codes from this code system\"?</p>",
        "id": 262187869,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1637420575
    },
    {
        "content": "<blockquote>\n<p>To make sure I understand, when invoking terminology services and passing an argument as an HTTP parameter, in an argument that would usually be a ValueSet canonical, it's possible to send a CodeSystem canonical instead. </p>\n</blockquote>\n<p>yes</p>\n<blockquote>\n<p>The interpretation in that circumstance is to treat the CodeSystem reference as if it was instead the CodeSystem.valueSet canonical and proceed with the execution of the operation. Is that correct? </p>\n</blockquote>\n<p>yes. In fact, that pre-existed the definition of CodeSystem/$validate-code s</p>\n<blockquote>\n<p>What if the Code System didn't have a CodeSystem.valueSet? Would that be an error, or would the terminology service 'infer' the existence of a value set that said \"all codes from this code system\"?</p>\n</blockquote>\n<p>if it can infer it - whether stated or not - then it should use that. If it can't (can't think why it wouldn't) then that would be an error</p>",
        "id": 262203360,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1637440678
    },
    {
        "content": "<p>Hi, i discovered this thread after creating <a href=\"https://github.com/hapifhir/hapi-fhir/issues/3523\">an issue in HAPI FHIR that pertains to this thread</a>. I'm a bit confused as to what the agreed-upon result of this discussion between <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> and <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> is:</p>\n<blockquote>\n<p>Lloyd: CodeSystem.valueSet is a reference to an explicit valueset that serves the same function as the implicit one - though it could potentially have significantly more metadata.</p>\n<p>Michael: where is it stated that the ValueSet must be explicit?</p>\n</blockquote>\n<p>The remainder of the discussion revolved mostly about using the <code>CodeSystem.url</code> as proxy for <code>ValueSet.url</code> in the scope of terminology service operations.</p>\n<p>My question is thus: do we have agreement that when a <code>CodeSystem.valueSet</code> parameter is set to a value <em>not</em> referring to an explicit VS known to the server, the server <em>shall</em> allow e.g. expansion of that ValueSet when calling <code>ValueSet/$expand?url=&lt;the-url&gt;</code>? This is the way Ontoserver handles it, and personally, I agree with this behaviour, since maintaining <em>explicit</em> VS just so I can bind all codes to e.g. a <code>ConceptMap.sourceUri</code> is not desirable IMHO.</p>",
        "id": 278005610,
        "sender_full_name": "Joshua Wiedekopf",
        "timestamp": 1649242137
    },
    {
        "content": "<p>it seems reasonable to me</p>",
        "id": 278011534,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1649245768
    }
]