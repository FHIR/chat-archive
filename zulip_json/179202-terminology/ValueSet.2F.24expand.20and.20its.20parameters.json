[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  we had an interesting discussion at the CAT26 about hierarchical display of ValueSets. Currently, we are working on the proposals for improvements regarding certain extensions and the <a href=\"https://www.hl7.org/fhir/valueset-operation-expand.html\"><code>$expand</code></a> operation on ValueSets. </p>\n<p>Regarding the <code>$expand</code> operation we talked about the parameters <code>excludeNested</code> and <code>excludeNotForUI</code>. While I still remember the use case for <code>excludeNotForUI</code>, I forgot or do not find it in my notes what the use case for <code>excludeNested</code> was and how it differs from <code>excludeNotForUI</code>.</p>\n<p>I would be grateful if you could tell me again, when <code>excludeNested</code> would be best to use. Thank you!</p>",
        "id": 223337380,
        "sender_full_name": "Gabriel Kleinoscheg",
        "timestamp": 1611125075
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"372341\">@Nikola Tanjga</span></p>",
        "id": 223347530,
        "sender_full_name": "Gabriel Kleinoscheg",
        "timestamp": 1611133918
    },
    {
        "content": "<p>it's a subtle difference, and maybe not important. </p>\n<ul>\n<li>\n<p>excludeNotForUI - omit any concepts from the expansion that are solely present for UI navigation purposes (typically, these are not selectable)</p>\n</li>\n<li>\n<p>excludeNested - just return a flat list. </p>\n</li>\n</ul>\n<p>These are different if there is a hierarchy where the nodes that have children are selectable and/or not just included for UI navigation purposes</p>",
        "id": 223432657,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1611175556
    },
    {
        "content": "<p>What would then be the outcome if I exclude those concepts which are solely for UI navigation assuming that some of these concepts have children and I have <code>excludeNested = false</code>? I.e. I want to preserve the hierarchy but without the concepts for UI (which are parents of some other concepts).</p>",
        "id": 223478260,
        "sender_full_name": "Gabriel Kleinoscheg",
        "timestamp": 1611215737
    },
    {
        "content": "<p>you might not be able to do that</p>",
        "id": 223480828,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1611218017
    },
    {
        "content": "<p>Alright - thank you <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span></p>",
        "id": 223485240,
        "sender_full_name": "Gabriel Kleinoscheg",
        "timestamp": 1611221319
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"376049\">Gabriel Kleinoscheg</span> <a href=\"#narrow/stream/179202-terminology/topic/ValueSet.2F.24expand.20and.20its.20parameters/near/223478260\">said</a>:</p>\n<blockquote>\n<p>What would then be the outcome if I exclude those concepts which are solely for UI navigation assuming that some of these concepts have children and I have <code>excludeNested = false</code>? I.e. I want to preserve the hierarchy but without the concepts for UI (which are parents of some other concepts).</p>\n</blockquote>\n<p>Hi, we in Germany have been wondering about the <code>exludeNested</code> parameter. The way we understand it, <code>excludeNested=false</code> would maintain the hierarchy of the underlying CodeSystem(-s) when expanding an appropriate ValueSet. That would be fantastic for feasibility applications where inclusion and exclusion parameters are defined using some domain-specific ValueSets (e.g. all diabetes-related ICD-10-GM codes). </p>\n<p>If this parameter is supposed to do what we think it does, we could take that expansion data structure and build UI for selecting groups of codes or specific codes.</p>\n<p>Problem is that we are not entirely clear whether <code>exludeNested</code> does that, since the description on <a href=\"https://www.hl7.org/fhir/valueset-operation-expand.html\">https://www.hl7.org/fhir/valueset-operation-expand.html</a> not entirely clear on the use case. Looking at the above thread, I seem to not be the only one wondering about the intention of that parameter. The terminology server we are looking at currently (Ontoserver) does not seem to consider the parameter either. Could someone please clarify if we understand it correctly? Thanks!</p>",
        "id": 245027661,
        "sender_full_name": "Joshua Wiedekopf",
        "timestamp": 1625572580
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span> <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span></p>",
        "id": 245086824,
        "sender_full_name": "Robert McClure",
        "timestamp": 1625599419
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span></p>",
        "id": 245086891,
        "sender_full_name": "Robert McClure",
        "timestamp": 1625599443
    },
    {
        "content": "<p>I wasn't involved with the definition of that parameter.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>?</p>",
        "id": 245089017,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1625600468
    },
    {
        "content": "<p>Terminz doesn't support that parameter either and I also find the description in the specification to be confusing. The only practical uses that I can see are if the ValueSet definition has a compose.include.valueSet element that refers to an extensional ValueSet with nested contains elements, or the later type of ValueSet is passed as a parameter to an $expand operation.</p>",
        "id": 245106936,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1625610846
    },
    {
        "content": "<p>Our interpretation of <code>excludeNested</code> is that, when <code>true</code>, it requires the expansion to be flat (i.e., <code>ValueSet.expansion.contains.contains</code> must always be empty.  When it is <code>false</code>, it <em>allows</em> nesting in the expansion, but does <em>not</em> require it.<br>\nNow, Ontoserver never does nesting in the expansion, so we effectively ignore <code>excludeNested</code>.</p>",
        "id": 245268659,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1625715043
    },
    {
        "content": "<p>Regarding <code>excludeNotForUI</code>, Ontoserver does not support this, but if/when it does it would rely on the <code>http://hl7.org/fhir/concept-properties#notSelectable</code> property for its behaviour.<br>\nSo far, we've not had any customers asking for support for this parameter.</p>",
        "id": 245268921,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1625715431
    },
    {
        "content": "<p>OK, thanks for the replies! That clears things up. For the use case we have in mind, a combination of ValueSet/$expand and ConceptMap/$closure probably seems like the next-best-thing to get this hierarchy back for a subset of concepts.</p>",
        "id": 245417323,
        "sender_full_name": "Joshua Wiedekopf",
        "timestamp": 1625820752
    }
]