[
    {
        "content": "<p>The current structure of <code>TerminologyCapabilities</code> appears to be skewed to statements about (logical) instances of <code>CodeSystems</code> with respect to a URI and version.<br>\nDue to the optionality of most elements, though, it appears possible to make more general statements about behaviour by omitting the version and/or URI.<br>\nHowever, it is not clear how to interpret multiple statements that effectively overlap.</p>\n<p>For example, the following is legal:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"nt\">&quot;resourceType&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;TerminologyCapabilities&quot;</span><span class=\"p\">,</span>\n<span class=\"err\">...</span>\n  <span class=\"nt\">&quot;codeSystem&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n    <span class=\"nt\">&quot;version&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n      <span class=\"nt\">&quot;property&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;parent&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;child&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;status&quot;</span><span class=\"p\">]</span>\n    <span class=\"p\">}]</span>\n  <span class=\"p\">},</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;uri&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://snomed.info/sct&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;version&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n      <span class=\"nt\">&quot;property&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;moduleId&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;effectiveTime&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;active&quot;</span><span class=\"p\">]</span>\n    <span class=\"p\">}]</span>\n  <span class=\"p\">},</span> <span class=\"p\">{</span>\n    <span class=\"nt\">&quot;uri&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://snomed.info/sct&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;version&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n      <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://snomed.info/sct/32506021000036107&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;property&quot;</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">&quot;hasArtgId&quot;</span><span class=\"p\">]</span>\n    <span class=\"p\">}]</span>\n  <span class=\"p\">}]</span>\n</code></pre></div>\n\n\n<p>and could be considered as a way to say that the properties \"parent\", \"child\", and \"status\" are supported for _all_ CodeSystems, with \"moduleId\", \"effectiveTime\", and \"active\" being _additionally_ supported for SNOMED CT, and \"hasArtgId\" further supported for SNOMED CT-AU.</p>\n<p>It is not clear if this strategy (to avoid repeatedly and redundantly say the same thing for many instances) is a legitimate strategy, nor whether we would want to push such a semantics onto the consumers of the <code>TerminologyCapabilities</code> resource?</p>",
        "id": 206785871,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1597302083
    },
    {
        "content": "<p>I'm not sure</p>",
        "id": 206803159,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597317560
    }
]