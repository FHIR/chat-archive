[
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> while exploring expected behaviour for $translate with a ConceptMap including <code>.product</code> entries I found this:</p>\n<div class=\"codehilite\"><pre><span></span><code>curl &#39;http://tx.fhir.org/r4/ConceptMap/102/$translate?system=http://terminology.hl7.org/CodeSystem/v2-0487&amp;code=URINN&amp;_format=json&#39;\n</code></pre></div>\n<p>which should exercise this part of the map:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"URINN\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"target\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"446277003\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"equivalence\"</span><span class=\"p\">:</span> <span class=\"s2\">\"equivalent\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"product\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">\"property\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://snomed.info/id/246380002\"</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://snomed.info/sct\"</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"225109005\"</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">\"property\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://snomed.info/id/3006873018\"</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://snomed.info/sct\"</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"25990002\"</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">},</span>\n</code></pre></div>\n<p>But it returns:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">{</span>\n  <span class=\"nt\">\"resourceType\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Parameters\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"parameter\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"result\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"valueBoolean\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"match\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"part\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"match\"</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"valueCoding\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"system\"</span><span class=\"p\">:</span> <span class=\"s2\">\"http://snomed.info/sct\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"446277003\"</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"p\">{</span>\n          <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"equivalence\"</span><span class=\"p\">,</span>\n          <span class=\"nt\">\"valueCode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Equivalent\"</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">]</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"result\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"valueBoolean\"</span><span class=\"p\">:</span> <span class=\"kc\">false</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"message\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"valueString\"</span><span class=\"p\">:</span> <span class=\"s2\">\"no match found\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</code></pre></div>\n<p>Note:</p>\n<ol>\n<li>two (different) values for <code>result</code></li>\n<li><code>message</code> of <code>\"no match found\"</code></li>\n<li>neither of the <code>.product</code> values returned.</li>\n</ol>",
        "id": 223331787,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1611117682
    },
    {
        "content": "<p>The other concern is that <code>.product.value</code> is <code>string</code>-typed (to accommodate path, valueSet, text, etc) but the corresponding OUT field for <code>$translate</code> is <code>Coding</code>.</p>\n<p>I have use-cases where I need to produce <code>string</code> and <code>integer</code> typed products.</p>",
        "id": 223331867,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1611117749
    },
    {
        "content": "<blockquote>\n<p>two (different) values for result<br>\nmessage of \"no match found\"<br>\nneither of the .product values returned.</p>\n</blockquote>\n<p>Fixed next update - thanks</p>",
        "id": 223450162,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1611184119
    },
    {
        "content": "<blockquote>\n<p>The other concern</p>\n</blockquote>\n<p>has to be discussion in committee. Make a task with your use cases. And use extensions for now</p>",
        "id": 223450225,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1611184161
    },
    {
        "content": "<p>Will do.<br>\nThere are other issues as well -- there's no way to cater for <code>$translate</code> calls that don't include sufficient/any <code>dependency</code> parameters by, for example, echoing the <code>.depend</code> fields in the result.<br>\nI'll create a task for this as well.</p>",
        "id": 223485978,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1611221786
    },
    {
        "content": "<p>See (existing ticket) <a href=\"http://jira.hl7.org/browse/FHIR-28284\">FHIR-28284</a> for the <code>.product</code> output issue (updated with additional detail and a simple use-case)</p>",
        "id": 223603733,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1611291033
    },
    {
        "content": "<p>See <a href=\"http://jira.hl7.org/browse/FHIR-30515\">FHIR-30515</a> for the issue relating to <code>.dependsOn</code> (and <code>.comment</code>)</p>",
        "id": 223604244,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1611291811
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> given that the main issue here is to do with the OUT Parameters, is it required to use an extension, or is it permissible (preferable?) to just include additional parts?</p>",
        "id": 223604333,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1611291904
    },
    {
        "content": "<p>you can just create new named parameters <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span></p>",
        "id": 225220859,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1612472034
    }
]