[
    {
        "content": "<p>A question arose in the Argonaut call regarding the UCUM expansion as implemented by the Core spec's terminology server which expands this <a href=\"http://hl7.org/fhir/us/core/ValueSet-us-core-ucum.html\" target=\"_blank\" title=\"http://hl7.org/fhir/us/core/ValueSet-us-core-ucum.html\">value set</a>.   :</p>\n<ul>\n<li>Since UCUM is basically intensional and therfore infinite is this an algorithm that just spits out the first 1000 codes?</li>\n<li>How do the display names arise - is that algorithmic as well?</li>\n</ul>",
        "id": 153861327,
        "sender_full_name": "Eric Haas",
        "timestamp": 1481066316
    },
    {
        "content": "<p>carumba. I'll have to investigate. It's getting the common UCUM codes value set, but it shouldn't be.</p>",
        "id": 153861329,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481067635
    },
    {
        "content": "<p>can you make a task?</p>",
        "id": 153861330,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481067654
    },
    {
        "content": "<p>So what's it supposed to be doing?</p>",
        "id": 153861331,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1481067786
    },
    {
        "content": "<p>refusing to expand UCUM because the expansion is infinite</p>",
        "id": 153861332,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481067909
    },
    {
        "content": "<p>this is a problem in the spec itself.</p>",
        "id": 153861333,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481067935
    },
    {
        "content": "<p>OK - that makes sense<br>\nbut I'm not sure if I follow how it's a problem with the spec?</p>",
        "id": 153861334,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1481068042
    },
    {
        "content": "<p>spec does the same thing</p>",
        "id": 153861335,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481068095
    },
    {
        "content": "<p>I see what you mean - sure</p>",
        "id": 153861336,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1481068117
    },
    {
        "content": "<p>[#12438]</p>",
        "id": 153861337,
        "sender_full_name": "Eric Haas",
        "timestamp": 1481068275
    },
    {
        "content": "<p>thx</p>",
        "id": 153861338,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481068303
    },
    {
        "content": "<p>It would be nice to link from <a href=\"http://hl7.org/fhir/us/core/ValueSet-us-core-ucum.html\" target=\"_blank\" title=\"http://hl7.org/fhir/us/core/ValueSet-us-core-ucum.html\">http://hl7.org/fhir/us/core/ValueSet-us-core-ucum.html</a> to the list of common values, though</p>",
        "id": 153861944,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1481138386
    },
    {
        "content": "<p>yes that's what should happen</p>",
        "id": 153861947,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481138525
    },
    {
        "content": "<p>May be UCUM is not  terminology, but different service? How about specify unit service? :)<br>\n$convert $canonic etc</p>",
        "id": 153862260,
        "sender_full_name": "nicola (RIO/SS)",
        "timestamp": 1481197170
    },
    {
        "content": "<p>there is a specific ucum service. I use it internally. We've not seen any interest until your note about this</p>",
        "id": 153862261,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481197281
    },
    {
        "content": "<p>is anyone else interested in a FHIR rendition of the stnadard UCUM services?</p>",
        "id": 153862262,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481197302
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span>   do you mean put a link in the description? </p>",
        "id": 153862376,
        "sender_full_name": "Eric Haas",
        "timestamp": 1481222290
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> @<strong>nicola (RIO)</strong> <span class=\"user-mention\" data-user-id=\"191315\">@Josh Mandel</span> While I would be cautious abiout saying that \"UCUM\" is not a terminology, because as we've currently defined things, it is, I've been thinking about this problem too. When a \"terminology\" essentialy is a grammar + tokens but the set of valid resulting concepts is difficult to draw a line around, what we really need is a service that can verify and create valid concepts. We already do this for value sets - define valid value set expansions via an \"expression\" and some do not store the resulting concept expansion set, they just test to find if the provided concept is in the proper expansion. Can we do the samer thing for an entire code system? Seems that we could. We've discussed this in very preliminary ways at NLM. Is this what you are suggesting?</p>",
        "id": 153862727,
        "sender_full_name": "Robert McClure",
        "timestamp": 1481291656
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191793\">@Eric Browne</span> yes, a link in the description is what I meant.</p>",
        "id": 153862758,
        "sender_full_name": "Josh Mandel",
        "timestamp": 1481302652
    },
    {
        "content": "<p>UCUM is a terminology, and we treat it accordingly. we already have a service that can validate ucum codes. I'm not sure what you mean by 'create valid concepts'. nor do I understand what you mean 'for an entire code system'; well, I guess I think I know what you mean, and we already do. </p>",
        "id": 153862762,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481309235
    },
    {
        "content": "<p>what a UCUM specific service would look like is something that has the following services:<br>\n- validate that a unit has the same canonical unit as another unit<br>\n- get the canonical units for a unit<br>\n- given a unit and value, get the canonical unit and value<br>\n- given a value and a units, convert it to some other unit<br>\n- given two pairs of value/unit, multiple or divide them</p>",
        "id": 153862763,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481309531
    },
    {
        "content": "<p>it's possible that the first 2 can be done by careful use of properties and valuesets and $lookup. but the latter 3, definitely not</p>",
        "id": 153862764,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481309577
    },
    {
        "content": "<p>I think all are services and should not be value sets. If you wanted to be perverse, you could do latter 3 with mappings.. But please... As for my focus, aligns with yours (I understand why your transformations are a UCUM service) but mine is determining what the code system membership is, which is the operation needed when you want to validate and provide a list of available codes for use. UCUM doesn't work like other versioned code systems, it has a grammar for making valid codes and tolkens that are used in the grammar. The only list I know of valid codes is the lists of common ones, but there are many others. They just may not have the transformations you are focusing on in the service. I agree with what you are providing but it needs to also understand the grammar and the tolkens to return corrent validation responses. </p>\n<p>In any case, I think all of this should be a set of services and no one should be expected to maintain a \"static\" list. Just identify valid service locations.</p>",
        "id": 153862909,
        "sender_full_name": "Robert McClure",
        "timestamp": 1481418089
    },
    {
        "content": "<p>I don't see how it's different to snomed ct - a list of defined tokens, and a composition grammar. We don't treat UCUM any differently from SNOMED in regards to it's behaviour except that we do publish an enumerated common units list</p>",
        "id": 153862918,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481448141
    },
    {
        "content": "<p>The main difference, as I see it, is that snomed comes with a whole pile of already constructed things and that it is usable as-is. Furthermore, there is a specific semantics one often needs from snomed which is subsumption testing; FHIR provides support for this (and it's also generally useful for other code systems).<br>\nFrom this perspective, one might consider including an enumeration of common units as part of the UCUM CodeSystem along with the defined tokens, but I don't see a real advantage of this over having a well-known ValueSet like  <code>http://hl7.org/fhir/us/core/ValueSet/us-core-ucum</code></p>",
        "id": 153863068,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1481499226
    },
    {
        "content": "<p>that value set is the enumeration of the common units</p>",
        "id": 153863073,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481522804
    },
    {
        "content": "<p>which is a useful subset of all possible units, somewhat like all the fully-defined SNOMED codes</p>",
        "id": 153863080,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1481524975
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> Has it right, there is a big difference in that SNOMED has a set of defined pre-coordinated concepts that have SCT identifiers, and it supports subsumption. UCUM, as a code system as provided by the authority, does neither, although it does provide tools to support validity checking. LOINC provides the \"Common UCUM Units\" set and while it has help from US organizations, I'm not sure that it's correct to call this a \"US Core\" set. Is there evidence tha the set available (<a href=\"https://loinc.org/usage/units\" target=\"_blank\" title=\"https://loinc.org/usage/units\">https://loinc.org/usage/units</a>) is US-specific? </p>\n<p>In any case, that set can be considered as similar to the set of pre-coordinated SCT concepts published by IHTSDO. I've arguged that is what NLM VSAC should do. But I can see how it's easy to be confused by the similarity of SCT published content (one source) and UCUM + LOINC Core (two sources).</p>",
        "id": 153863234,
        "sender_full_name": "Robert McClure",
        "timestamp": 1481653169
    },
    {
        "content": "<p>so the confusion here is that US Ucum value set is badly described. But it should not even exist; the content of it is in the core specification. <span class=\"user-mention\" data-user-id=\"191401\">@Eric Haas</span> <span class=\"user-mention\" data-user-id=\"191410\">@Brett Marquard</span> is there any reason why the US UCUM value set exists?</p>",
        "id": 153863241,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481659831
    },
    {
        "content": "<p>great, let's get rid of the it...us-core version...</p>",
        "id": 153863252,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1481662462
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12464\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=12464\">GF#12464</a></p>",
        "id": 153863253,
        "sender_full_name": "Brett Marquard",
        "timestamp": 1481662595
    },
    {
        "content": "<p>agree</p>",
        "id": 153863255,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1481662599
    },
    {
        "content": "<p>thx</p>",
        "id": 153863257,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481662661
    },
    {
        "content": "<p>the definition of ucum-units isn't exactly correct, as it states \"... This value set includes all UCUM codes\" - which isn't possible</p>",
        "id": 153863260,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1481662891
    },
    {
        "content": "<p>no, it's not wrong; the value set does include all the UCUM codes. Where it's wrong is that the tooling provides an expansion subset without indicating that the expansion is just a subset</p>",
        "id": 153863261,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481662979
    },
    {
        "content": "<p>ok - I agree with that</p>",
        "id": 153863262,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1481663005
    },
    {
        "content": "<p>how would you prefer to indicate that the expansion is a subset?</p>",
        "id": 153863270,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1481663907
    },
    {
        "content": "<p>not sure. probably I will replace the expansion with something like 'UCUM can't be expanded. But you can see a list of common UCUM codes [[here]]'</p>",
        "id": 153863273,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481664024
    },
    {
        "content": "<p>that sounds good</p>",
        "id": 153863274,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1481664173
    },
    {
        "content": "<p>@GG because I looked for it but could not find it in the core.  And I still can't. Where is it?  (And I don't think its badly defined - but I don't intend to split hairs on that)</p>",
        "id": 153863439,
        "sender_full_name": "Eric Haas",
        "timestamp": 1481733707
    },
    {
        "content": "<p><a href=\"http://build.fhir.org/valueset-ucum-common.html\" target=\"_blank\" title=\"http://build.fhir.org/valueset-ucum-common.html\">build.fhir.org/valueset-ucum-common.html</a></p>",
        "id": 153863467,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481746394
    },
    {
        "content": "<p>and it's badly defined because is says 'this is UCUM'. not 'this is some of UCUM'</p>",
        "id": 153863468,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481746410
    },
    {
        "content": "<p>That was my intent.  All of it not just the common units.  Lab creates a of unique (proprietary) units that aren't in the common set.  This is an overly long thread and I think that was my point in the first post. </p>",
        "id": 153863480,
        "sender_full_name": "Eric Haas",
        "timestamp": 1481750570
    },
    {
        "content": "<p>it's still not *all* of it. And you can't describe it that way</p>",
        "id": 153863481,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481750602
    },
    {
        "content": "<p>how did you make it? </p>",
        "id": 153863482,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481750622
    },
    {
        "content": "<p>Moving to Argonaut thread.</p>",
        "id": 153863489,
        "sender_full_name": "Eric Haas",
        "timestamp": 1481752181
    },
    {
        "content": "<p><a href=\"https://chat.fhir.org/#narrow/stream/argonaut/topic/re.3A.20UCUM.20extension\" target=\"_blank\" title=\"https://chat.fhir.org/#narrow/stream/argonaut/topic/re.3A.20UCUM.20extension\">https://chat.fhir.org/#narrow/stream/argonaut/topic/re.3A.20UCUM.20extension</a></p>",
        "id": 153863491,
        "sender_full_name": "Eric Haas",
        "timestamp": 1481752368
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  I thought we had already crafted something to indicate when a particular expansion is not the full expansion as defined by the value set definition. Some sort of flag of some kind to indicate \"this expansion is a subset\". This came up before when folks wanted to use a subset based on post-exapnsion manipulation. Correct?</p>",
        "id": 153863639,
        "sender_full_name": "Robert McClure",
        "timestamp": 1481828215
    },
    {
        "content": "<p>ye. the problem is that I'm not using it here where I should be</p>",
        "id": 153863641,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1481834293
    },
    {
        "content": "<p>UCUM specifies case-sensitive and case-insensitive variants: do we make any such distinction in the bindings?</p>",
        "id": 153952748,
        "sender_full_name": "Jay Lyle",
        "timestamp": 1523993779
    },
    {
        "content": "<p>So far we've said that UCUM in FHIR <strong>is</strong> case sensitive, in both the list of external terminologies and in the Using UCUM with FHIR page.  If there truly is a need for using the case-insensitive codes, then I don't think we've addressed that anywhere.  Just because it exists doesn't necessarily mean that we need to accommodate it in FHIR.  But if there is a sufficient use case for it then we should look at it.</p>",
        "id": 153952759,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1523999972
    },
    {
        "content": "<p>y. we have ignored the existence of the case insensitive variant - it is not supported. For me, it would be a different code system URL if we did decide there was a use case</p>",
        "id": 153952801,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524006195
    }
]