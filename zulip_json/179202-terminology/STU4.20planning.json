[
    {
        "content": "<p>One operation that the build needs from a terminology service: compare two value sets and say if one is a subset of another </p>",
        "id": 153875723,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1489054923
    },
    {
        "content": "<p>or if they are overlapping or disjoint</p>",
        "id": 153875724,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1489054939
    },
    {
        "content": "<p>You can do this with a CQL engine. We have one that has a binding to FHIR terminology servers, so we can do this today.</p>",
        "id": 153875767,
        "sender_full_name": "Bryn Rhodes",
        "timestamp": 1489077053
    },
    {
        "content": "<p>so it gets the expansions, and then compares them? That's a no go for 2 reasons - the expansions can be extremely large, and they can be too big to expand. </p>",
        "id": 153875834,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1489087341
    },
    {
        "content": "<p>as it is about a minute of the build is comparing very large expansions....</p>",
        "id": 153875835,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1489087356
    },
    {
        "content": "<p>I agree about the issues with comparing expansions<br>\nusing DL (or similar) reasoning on the value set definitions is the other approach I can think of<br>\nit likely couldn't be used or at least would be a challenge to apply across the board, but possibly could prove useful</p>",
        "id": 153875840,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1489090006
    },
    {
        "content": "<p>terminology server can figure it's own way out to do the comparison. I know I can much more quickly compre sct definitions than expansions</p>",
        "id": 153875843,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1489090253
    },
    {
        "content": "<p>yes, I agree</p>",
        "id": 153875851,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1489092014
    },
    {
        "content": "<p>Why not define a ValueSet that includes one and excludes the other, then $expand with count=0</p>",
        "id": 153875947,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1489124508
    }
]