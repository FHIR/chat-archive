[
    {
        "content": "<p>Per <a href=\"#narrow/stream/4-implementers/subject/Use.20of.20Meta.2Etag.20vs.20Request.2Eintent\" title=\"#narrow/stream/4-implementers/subject/Use.20of.20Meta.2Etag.20vs.20Request.2Eintent\">https://chat.fhir.org/#narrow/stream/4-implementers/subject/Use.20of.20Meta.2Etag.20vs.20Request.2Eintent</a>, we're looking at making the binding for Resource.meta.tag \"extensible\" instead of \"example\" - on the grounds that we really want people to use the specific codes we've defined (shortly to be 2 codes) for the purposes we've defined.  However, the notion of \"extensible\" gets a bit more complicated when the data type is Coding.  If an element is CodeableConcept and the binding is extensible, then it's not a problem to send a code from the extensible value set plus a more nuanced code from your local space if need be.  However, if the data type is 'Coding', then that means that if your concept is covered by the bound value set, you have no choice but to use only the code from the extensible value set and can't use one of your own.  That's not ideal.  But changing the data type for tags to CodeableConcept isn't ideal either.  Opinions?</p>",
        "id": 153975610,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531784215
    },
    {
        "content": "<p>it means you have to be careful which concepts you define in the extensible value set</p>",
        "id": 153975615,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531785238
    },
    {
        "content": "<p>I'm not sure how \"be careful\" eliminates the possibility of some implementer somewhere wanting more nuance/fine-grained expression?</p>",
        "id": 153975621,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531787117
    },
    {
        "content": "<p>Use an extension to capture local codings, as that is a local need.</p>",
        "id": 153975655,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1531802823
    },
    {
        "content": "<p>That works. :)</p>",
        "id": 153975768,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531834772
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191682\">@Richard Townley-O'Neill</span> and <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span>  Help me understand how the use of extensions to modify an 'extensible' binding is intended to impact use of the original (non-extended) expansion set. From what you've just said it seems implementers can just use an extension to the resource and bind to a new value set with different values and ignore the original value set. And the new value set can have codes that have a nuanced different meaning then the original expansion members so the implementer never has to send the original codes if they don't want to. Is that correct?</p>",
        "id": 153975798,
        "sender_full_name": "Robert McClure",
        "timestamp": 1531846534
    },
    {
        "content": "<p>We would define an extension on Coding that allows conveying translations.  So you could send a coding (that would need to be valid against the extensible binding) but could send additional codings as translations that conveyed more nuance.</p>",
        "id": 153975840,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531861539
    },
    {
        "content": "<p>it's not clear to me why this is a problem. Let's stick to the case in hand, and say that we define a tag for 'authoritative', and bind to it extensibly.</p>",
        "id": 153975841,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531862166
    },
    {
        "content": "<p>and then some user has some tag 'authoritative because boss says so' or something.</p>",
        "id": 153975842,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531862189
    },
    {
        "content": "<p>why is it wrong to have two tags, one for each?</p>",
        "id": 153975843,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531862199
    },
    {
        "content": "<p>Extensible says \"if a code from the value set applies, you must send that code and not some other\".  In CodeableConcept.coding, the codings are translations, so it's fine to send other codes too.  In tag, other codings aren't considered translations, which, unless we provide guidance to the contrary, means that the \"extensible\" requirement is evaluated on each coding independently.</p>",
        "id": 153975861,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531863092
    },
    {
        "content": "<p>I think that this is a different thing; what you're trying to do is different to an classic extensible binding in some subtle but important ways</p>",
        "id": 153975866,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531863525
    },
    {
        "content": "<p>Not sure.  I'm not sure I want someone sending \"authoritative because boss says so\" and <em>not</em> sending HL7's \"authoritative\" code - which is what extensible is for.</p>",
        "id": 153975885,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531864522
    },
    {
        "content": "<p>so we're saying that we want to say to use the authoritative code in one of the codings it if applies. i don't see that we have any reason to say 'and don't use a more specific code' and I don't see why we want to apply this rule to all codings either</p>",
        "id": 153975888,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531865831
    },
    {
        "content": "<p>in fact, I think the frame of reference is wrong; we have a hammer, so things are going to be a nail. but actually, we don't want to say anything about the binding, we want to say something about the meaning... this is one of a few places in the infrastructure this happens - big wide open use cases, and some very specific rules about particular codes for particular meanings</p>",
        "id": 153975889,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531866096
    },
    {
        "content": "<p>The problem seems rather nail-like...  It's a Coding.  It has a binding.  We want to say \"if you're trying to say something like this, you must use our codes, but you're free to say whatever other sorts of coded things you like that aren't covered by our codes using whatever code systems you like\".  That's exactly what Extensible does, so I don't see how this is different - and I think using a different mechanism is going to cause confusion and non-conformance.</p>",
        "id": 153975891,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531866424
    },
    {
        "content": "<p>If I want to send codes for both 'authorised' and 'authorised because boss says so' in a CodeableConcept element I could send it as two codings in the one element, or as two instances of the element. Is the difference important? Do implementers pay attention to the difference?</p>\n<p>In a Coding element I would send two instances of the element. Or one element with an extension on Coding.</p>\n<p>From what Lloyd says, if the Coding element has an extensible binding it is prohibited to send the two codes ('authorised' and 'authorised by boss says so') as two instances of the element.</p>\n<p>Why is this a good approach to extensibe on coding? Is this because there is no structural relationship between the codes?</p>",
        "id": 153975924,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1531880061
    },
    {
        "content": "<p>Typically CodeableConcepts have a maxOccurs of 1.  If it can repeat, then each repetition is considered to be a separate concept - and each repetition must independently adhere to the binding.</p>",
        "id": 153975958,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531886109
    },
    {
        "content": "<p>If we follow the same logic with repeating Codings - that each repetition must adhere to the binding, then the only way to convey a more granular concept than allowed with the extensible binding would be with an extension.</p>",
        "id": 153975959,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1531886160
    },
    {
        "content": "<p>which isn't actually what we want in this case</p>",
        "id": 153975960,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1531886293
    },
    {
        "content": "<p>The binding is to a ValueSet definition rather than a ValueSet expansion, right?  Then make sure the ValueSet definition says <code>include.filter.code is-a 'authorised'</code> and not <code>include.filter.code = 'authorised'</code> or <code>include.concept = 'authorised'</code> (forgive my pseudo-code)</p>",
        "id": 153976256,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1531978234
    }
]