[
    {
        "content": "<p>Looking at the table of filter operators here...http://hl7.org/fhir/valueset-filter-operator.html... <br>\n I'm wondering if something like  <br>\n<code>ValueSet.FilterComponent { Property = \"display\", Op = FilterOperator.In, Value = \"term1,term2,term3\" }</code><br>\n could be used to perform text matching on concept descriptions, or whether one has to use  <code>FilterOperation.regex </code> to do this in Intensional ValueSet definitions?</p>",
        "id": 174101469,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1566770007
    },
    {
        "content": "<p>could be used.</p>",
        "id": 174102253,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566771524
    },
    {
        "content": "<p>I think this would be a much better approach.  Having to support regex for this is not great, not to mention there's no specific regex flavour that's called out</p>",
        "id": 174110183,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1566786581
    },
    {
        "content": "<p>Can a \",\" be in a code value?</p>",
        "id": 174125404,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1566810131
    },
    {
        "content": "<p>ValueSet.compose.filter.value is a string that, if the operator = In, can hold a comma separated list of codes or concepts.</p>",
        "id": 174127714,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1566812759
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> raises an important consideration because \",\" absolutely is in concept description values. How do we manage that?</p>",
        "id": 174138101,
        "sender_full_name": "Robert McClure",
        "timestamp": 1566823870
    },
    {
        "content": "<p>We need to clarify how to do this when concept descriptions include commas: For example, the code system that started all this that I'm trying to work with - US NUCC Provider Taxonomy - is already a bit of a mess with no officially designated fully published description. It is made up of a hierarchically crafted meaning. NUCC had indicated that we could concatenate the hierarchy pieces together using \";\" and \",\" but even that is incomplete because the hierarchical phrases <em>also include commas.</em> VSAC has followed the suggested approach and also variably surrounded parts that have embedded commas with quotes. So for example  364SX0204X has the description Physician Assistants &amp; Advanced Practice Nursing Providers; Clinical Nurse Specialist, \"Oncology, Pediatrics\"</p>",
        "id": 174139593,
        "sender_full_name": "Robert McClure",
        "timestamp": 1566825133
    },
    {
        "content": "<p>have you looked at this, which is what the tools are currently using: <a href=\"https://github.com/FHIR/packages/blob/master/fhir.tx.support/fhir.tx.support.r4/package/CodeSystem-nucc-provider-taxonomy.json\" target=\"_blank\" title=\"https://github.com/FHIR/packages/blob/master/fhir.tx.support/fhir.tx.support.r4/package/CodeSystem-nucc-provider-taxonomy.json\">https://github.com/FHIR/packages/blob/master/fhir.tx.support/fhir.tx.support.r4/package/CodeSystem-nucc-provider-taxonomy.json</a></p>",
        "id": 174139933,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566825406
    },
    {
        "content": "<p>commas have no meaning in regex... could differentiate one whether they are escaped or not but that's <em>ugly</em></p>",
        "id": 174140130,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566825521
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> No, I had not looked at it but based on the approach I just noted, that representation is not displaying the correct description for the code. Here is the way we've decided (based on a conversation with NUCC that I'll be honest, needs to be re-affirmed, but it's what VSAC is doing) to create a description for each code: It is a concatenation of each of the following to the level that is populated: the Grouping phrase followed by “; ”, then the Classification phrase. If there is a Specialization, concatenate “, ” and the Specialization phrase. For any phrase that includes a comma, wrap the phrase with standard double quotes: \"</p>\n<p>Honestly, I'd also like the code system representation to include properties for each of Grouping, Classification, and Specialization. Eventually they will hopefully create codes for the Grouping concepts, but that is not true yet. They also need to capture the hierarchy within the code system. These last two additions are interesting examples of something we could add as a code system supplement if they will not do it themselves.</p>\n<p><span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span> has crafted a first pass at the code system but I missed telling him about the need for quotes, so it needs to be updated.</p>",
        "id": 174144608,
        "sender_full_name": "Robert McClure",
        "timestamp": 1566828564
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span> can you make a PR against that one then?</p>",
        "id": 174167786,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1566846220
    },
    {
        "content": "<p>I don't believe that the double-quotes are actually part of these concept descriptions - just the standard way of handling text strings that contain commas within a comma-delimited text file. Attempting to use an <code>in</code> filter to perform text matching on display values that contain commas and wishing to use a comma in the filter value (other than as a separator)...hmm, anyone who really needs to do that might require a regex operator?</p>",
        "id": 174174685,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1566851659
    }
]