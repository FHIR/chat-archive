[
    {
        "content": "<ul>\n<li>if the ordinal value extension is found on either the underlying code system or in an include, it will be returned as part of any expansion </li>\n<li>value set ordinals override code system ordinals </li>\n<li>ordinal values will also be included in $lookup results, in the property 'ordinal-value'</li>\n</ul>",
        "id": 206516306,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597095217
    },
    {
        "content": "<p>I'm OK with this. But, <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> should this be documented more formally in a FHIR ticket to add the guidance  to <a href=\"https://www.hl7.org/fhir/terminologycapabilities.html\">https://www.hl7.org/fhir/terminologycapabilities.html</a>, and therefore discussed at a FHIR Tracker call?</p>",
        "id": 206581423,
        "sender_full_name": "Carol Macumber",
        "timestamp": 1597155954
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195036\">@Carol Macumber</span> <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>  Yes.  I'm not sure that TerminologyCapabilities is the right (or only) place for this, but I agree that it needs a tracker.  We could possibly discuss this in the initial 30 min. of the Tracker call this Thursday, before we need to end the call (60 min. early) to move to the Co-Chair Webinar.</p>",
        "id": 206593707,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1597161767
    },
    {
        "content": "<p>well, sure, we need a task, but I wanted to get a take on it before I created it. Why would TerminologyCapabilities not be the only or right place for this?</p>",
        "id": 206603878,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1597166644
    },
    {
        "content": "<p>Was a task ever created for this? I'm now experiencing that $expand does not return ordinal defined in the CodeSystem using the extension, and that the ordinal in the ValueSet.compose goes poof as well.</p>\n<p>The proposed guidance would be within my expectation and I'd love to vote Affirmative on it.</p>",
        "id": 228373069,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1614674491
    },
    {
        "content": "<p>The ordinal extension issue came up in conversation for me today.  I was left wondering why an extension is needed instead of a standard FHIR-defined property?</p>",
        "id": 228373371,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1614674664
    },
    {
        "content": "<p>Well ... the extension exists and I used it comparably in the ValueSet and the CodeSystem.</p>",
        "id": 228373442,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1614674708
    },
    {
        "content": "<p>Why use property in the one and extension in the other?</p>",
        "id": 228373489,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1614674740
    },
    {
        "content": "<p>And as for property: I'd first need to define a code for it. Ordinal is something any assessment scale could have. I now seem to have total freedom in defining the property code, which could lead to \"ordinal\", \"Ordinal\", \"ordinalValue\", \"gcs_ordinal\" etc. etc. which is much less making use of standards than the predefined extension?</p>",
        "id": 228374022,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1614675007
    },
    {
        "content": "<p>That's why I said \"standard FHIR-defined property\", and in fact we already have the requirement that $lookup return the value as the property named <code>ordinal-value</code>, so it would seem to make sense that we could just defined codes with that property and they could behave as per the extension.<br>\nAs to why have two different ways -- the preferred source of ordinal value is from the code system definition, but the extension allows you to post-hoc add them in other places (even directly in a Coding or Questionnaire.item.answerOption) -- these do seem to be \"extension\" cases.</p>",
        "id": 228374452,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1614675259
    },
    {
        "content": "<p>Sure, but ordinalValue extension explicitly has CodeSystem.concept as context: <a href=\"http://hl7.org/fhir/extension-ordinalvalue.html\">http://hl7.org/fhir/extension-ordinalvalue.html</a> so should this extension then be deprecated in favor of property (with code ordinal-value)?</p>",
        "id": 228374573,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1614675361
    },
    {
        "content": "<p>I would like to suggest so.  In fact, I think I would suggest that it be treated as if such a property was defined.<br>\nI note the extension is draft status, maturity level 1, so on the surface this would seem to be reasonable.</p>",
        "id": 228374949,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1614675538
    },
    {
        "content": "<p>Alright. I can update the CodeSystems like that. Is there any merit in keeping both extension and property? Would that help or hurt compatibility?</p>",
        "id": 228375293,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1614675687
    },
    {
        "content": "<p>The thing that makes these special, though, is the fact that they should appear in expansions and can be overridden by a ValueSet-specified value.<br>\nI'm not entirely sure how they should manifest in the expansion since the extension doesn't list ValueSet.expansion.contains.code as context</p>",
        "id": 228375453,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1614675756
    },
    {
        "content": "<p>It would still help if the core guidance on CodeSystem would be extended on ordinals and maybe more common scenarios, so pursuing the task would still help. Do I create one, or is there one already?</p>",
        "id": 228375462,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1614675762
    },
    {
        "content": "<p>Agreed.  And I suspect including both would help compatibility.</p>",
        "id": 228375533,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1614675802
    },
    {
        "content": "<blockquote>\n<p>I'm not entirely sure how they should manifest in the expansion since the extension doesn't list ValueSet.expansion.contains.code as context</p>\n</blockquote>\n<p>Yikes? I'll definitely have to create a task for that</p>",
        "id": 228375719,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1614675902
    },
    {
        "content": "<p>I'm not sure where R5 is with $expand also returning properties, but that seems to me to be the natural approach going forward.</p>",
        "id": 228375774,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1614675925
    },
    {
        "content": "<p>Lastly, I don't know what the use-case is for the ValueSet-defined ordinals, nor the overriding semantics.  If it weren't for the overriding part, then I'd have suggested that a CodeSystem supplement would be a better way of providing ordinals from outside of the base CodeSystem.</p>",
        "id": 228376039,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1614676044
    },
    {
        "content": "<p>the extension was defined because people do define the ordinals in value sets or directly in questionnaires</p>",
        "id": 228382275,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1614678999
    },
    {
        "content": "<p><a href=\"http://jira.hl7.org/browse/FHIR-31393\">FHIR#31393</a> Extension ordinalValue is missing context for ValueSet expansions</p>",
        "id": 228400992,
        "sender_full_name": "Alexander Henket",
        "timestamp": 1614688127
    },
    {
        "content": "<p>Back about a year ago (Mar 2021) I can see there was a fair bit of discussion around handling Ordinal value sets. I'm back looking at what we have referred to as <em>Semi-quantitatlive</em> results in the UK, which seem to be best represented as either <em>Nominal</em> values- where a standard FHIR Valueset or SNOMED Refset works well, or as members of <em>Ordinal</em> value sets.</p>\n<p>Per <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> 's comment below, I can provide a use case for valueset-defined ordinal values I think, but i'm guessing the conversation has moved on from a year ago.</p>\n<p>So-</p>\n<p>1) Have these discussions resulted in an agreed design for Ordinal valuesets?<br>\n2) Are the results applicable to older revisions of FHIR, or only relevant to a specific recent version (e.g. 4.6 or 5)?</p>\n<p>I can still see references to the Ordinal-value extension for example in the v5 documentation, so it's not clear if this has been superseded by some more elegant solution built-in to core.</p>\n<p><span class=\"user-mention silent\" data-user-id=\"191343\">Michael Lawley</span> <a href=\"#narrow/stream/179202-terminology/topic/Terminology.20Capabilities.20and.20ordinal.20extension/near/228376039\">said</a>:</p>\n<blockquote>\n<p>Lastly, I don't know what the use-case is for the ValueSet-defined ordinals, nor the overriding semantics.  If it weren't for the overriding part, then I'd have suggested that a CodeSystem supplement would be a better way of providing ordinals from outside of the base CodeSystem.</p>\n</blockquote>",
        "id": 274534177,
        "sender_full_name": "Colin E.",
        "timestamp": 1646742768
    },
    {
        "content": "<p>I'm also interested in this.</p>",
        "id": 274930928,
        "sender_full_name": "Richard Townley-O'Neill",
        "timestamp": 1646973209
    }
]