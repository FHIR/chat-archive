[
    {
        "content": "<p>As described in the Searching for codes in value sets (<a href=\"http://build.fhir.org/valueset.html#search\" target=\"_blank\" title=\"http://build.fhir.org/valueset.html#search\">http://build.fhir.org/valueset.html#search</a>) section,  the CodeSearchSupport value set defines the codes that are required for use in TerminologyCapabilities.codeSearch</p>\n<p>The value set contains two values<br>\n<a href=\"/user_uploads/10155/yb0G5PyI8if2fpyNi3sq87rs/pasted_image.png\" target=\"_blank\" title=\"pasted_image.png\">pasted image</a> </p>\n<div class=\"message_inline_image\"><a href=\"/user_uploads/10155/yb0G5PyI8if2fpyNi3sq87rs/pasted_image.png\" target=\"_blank\" title=\"pasted image\"><img src=\"/user_uploads/10155/yb0G5PyI8if2fpyNi3sq87rs/pasted_image.png\"></a></div><p>The <em>explicit</em> code, with display \"Explicit Codes\" seems clear in that it includes codes that are either stated in the includes OR in the resulting expansion<br>\nThe <em>all</em> code, with display \"Implicit Codes\", by above definition \"only includes all codes based on the expansion of the value set\". </p>\n<p>Should we consider changing <em>all</em> to <em>implicit</em> so its consistent with the spirit of the definition? Though I know i have fallen victim to embedding meaning into the code itself, seeing <em>all</em> but getting back something that is actually more restrictive (expansion members only, compared to expansion members and codes included in the CLD) doesn't seem right, assuming i've understood the defintions correctly</p>\n<p><span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> <span class=\"user-mention\" data-user-id=\"191503\">@Robert McClure</span> <span class=\"user-mention\" data-user-id=\"191982\">@Ted Klein</span> Clarification on valueset-code-search-support</p>",
        "id": 153987581,
        "sender_full_name": "Carol Macumber",
        "timestamp": 1534431883
    },
    {
        "content": "<p>I think we need to understand better (from <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span>) exactly how these codes are intended to behave.  It may be that just clarifying the definition text (for 'all' or for both of the codes) will be sufficient?  After where our recent discussion on 'descendent' has landed I doubt that we'll be considering changing the 'all' code itself (even if it's rather egregiously incorrect, which it probably isn't).</p>",
        "id": 153987603,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534434366
    },
    {
        "content": "<p>Agreed. Just read through that descendent thread...and as I admitted, i fell victim to giving meaning to the code :)</p>",
        "id": 153987637,
        "sender_full_name": "Carol Macumber",
        "timestamp": 1534439885
    },
    {
        "content": "<p>I'd rather <code>Explicit</code> mean <em>just</em> the codes in the <code>Includes</code> and <code>All</code> mean <em>just</em> codes in the expansion. That way it's a clean difference. Yes, this means the code is not consistent with the meaning but it seems we're going to have to live with that. Boy I'm going to look for \"breaking\" changes in how the resources are crafted to make sure the community approaches everything as they are forcing terminology to accept.  <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <span class=\"user-mention\" data-user-id=\"195036\">@Carol Macumber</span> <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span></p>",
        "id": 153987655,
        "sender_full_name": "Robert McClure",
        "timestamp": 1534442983
    },
    {
        "content": "<p>I still want to hear from <span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> what he intended/expected for the behavior around the use of those codes.  We can see how that matches with what you just said <span class=\"user-mention\" data-user-id=\"191503\">@Robert McClure</span>.  The ideal would be to just be able to clarify the definitions/documentation to make that understandable and consistent, but we can see.</p>",
        "id": 153987661,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534443958
    },
    {
        "content": "<p>I think I made a copy/paste error - \"only\" should not be in the definition of \"all\"</p>",
        "id": 153987724,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534446322
    },
    {
        "content": "<p>I'm open to argument that expansions should be excluded from \"explicit\" or that we should have 3 codes</p>",
        "id": 153987725,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534446366
    },
    {
        "content": "<p>Have you implemented this yet?  Has anyone else?</p>",
        "id": 153987732,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534446763
    },
    {
        "content": "<p>well, I've implemented the code parameter using explicit, if that's what you mean. I could implement all (used to) but I lost that code at some stage</p>",
        "id": 153987734,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534446850
    },
    {
        "content": "<p>If we can, then I would have <code>Explicit</code> mean only codes in the <code>Include</code>, <code>Expansion</code> (or something like that) to mean only codes in the expansion, and <code>All</code> to mean the union of <code>Explicit</code> and <code>Expansion</code></p>",
        "id": 153987755,
        "sender_full_name": "Robert McClure",
        "timestamp": 1534449056
    },
    {
        "content": "<p>I think I can make that change now</p>",
        "id": 153987756,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534449305
    },
    {
        "content": "<p>but no</p>",
        "id": 153987757,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534449315
    },
    {
        "content": "<p>the question is: does the server perform some expansion in the background, and then search on that. Ir does it only search on what's explicitly stated in the resource</p>",
        "id": 153987758,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534449355
    },
    {
        "content": "<p>so your 3 codes are at cross purposes with that</p>",
        "id": 153987759,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534449366
    },
    {
        "content": "<p>the definition of the actual parameter in question is</p>",
        "id": 153987760,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534449388
    },
    {
        "content": "<p>ValueSet.expansion.contains.code | ValueSet.compose.include.concept.code</p>",
        "id": 153987761,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534449410
    },
    {
        "content": "<p>which is wrong.... it should at a minimum be</p>",
        "id": 153987762,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534449417
    },
    {
        "content": "<p>(ValueSet.expansion.contains | ValueSet.expansion.contains.descendants()).code | ValueSet.compose.include.concept.code</p>",
        "id": 153987763,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534449581
    },
    {
        "content": "<p>so it's specified to at least include explicitly mentioned codes in both compose and expansion</p>",
        "id": 153987764,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534449614
    },
    {
        "content": "<p>but subject to the proviso in <a href=\"http://build.fhir.org/valueset.html#search\" target=\"_blank\" title=\"http://build.fhir.org/valueset.html#search\">http://build.fhir.org/valueset.html#search</a></p>",
        "id": 153987765,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534449649
    },
    {
        "content": "<p>can I fix the FHIRPath statement as a technical correction?</p>",
        "id": 153987771,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534450474
    },
    {
        "content": "<p>Did you mean 'ValueSet.expansion.contains.code | ValueSet.expansion.contains.descendants()).code | ValueSet.compose.include.concept.code' (expecting the .code should be there on all of them)?  I think this change probably is ok now as a technical correction - but I usually tend to be inclined toward fixing things.</p>",
        "id": 153987781,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534451216
    },
    {
        "content": "<p>well, at the moment it says to select expansion codes or compose codes, but misses nested expansion codes. which is clearly at odds with the intent in the definition</p>",
        "id": 153987784,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534451389
    },
    {
        "content": "<p>yes, I agree - that's what ValueSet.expansion.contains.descendants()).code is doing</p>",
        "id": 153987785,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534451445
    },
    {
        "content": "<p>and I can't help but notice the spelling of 'descendants' :)</p>",
        "id": 153987786,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534451493
    },
    {
        "content": "<p>yes, that's an external spec that matches xpath</p>",
        "id": 153987787,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534451742
    },
    {
        "content": "<p>but the use is actually quite different - it's actually misnamed worse because it's all contained sub-elements</p>",
        "id": 153987789,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534451769
    },
    {
        "content": "<p>right - I get that</p>",
        "id": 153987790,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534451789
    },
    {
        "content": "<p>and I wasn't thinking about whether it is misnamed - just noticing that it uses the \"correct\" spelling of the word</p>",
        "id": 153987793,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534451863
    },
    {
        "content": "<p>yes</p>",
        "id": 153987794,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1534451894
    },
    {
        "content": "<p>Is there no use-case for wanting to search for ValueSets that mention a code in the compose.exclude ?</p>",
        "id": 153988163,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1534481040
    },
    {
        "content": "<p>For example, I'm planning to retire a code and want to find all the ValueSet definitions that will be affected and need updating</p>",
        "id": 153988166,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1534481118
    },
    {
        "content": "<p>good point - that's something to consider<br>\nI think the results could be quite confusing, though, unless you could specify explicitly that you were searching for excluded codes</p>",
        "id": 153988218,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534485272
    },
    {
        "content": "<p>When I originally thought about this functionality it fell into the cases of \"you're searching across expansions\" or \"you're searching across the CLD\", but I can see that the \"best-effort search across include criteria\" is also a reasonable desire.</p>",
        "id": 153988219,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1534485447
    },
    {
        "content": "<p>Another issue is whether you also search across imported valuesets, and what happens when there is only a codesystem mentioned but no other criteria (ie. include the whole codesystem)</p>",
        "id": 153988221,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1534485572
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> You are right on all counts. Perhaps <code>Explicit</code> should be the entire <code>Compose</code>but yes - what do we do with an included value set or an entire code system? I'd say those would be excluded.  As for <code>Expansion</code> - it should be the end-result expansion, how ever it was crafted.</p>",
        "id": 153988453,
        "sender_full_name": "Robert McClure",
        "timestamp": 1534521545
    },
    {
        "content": "<p>Is there a tracker for this? happy to create one if necessary</p>",
        "id": 153989799,
        "sender_full_name": "Carol Macumber",
        "timestamp": 1534858253
    },
    {
        "content": "<p>I have not made one. <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> ?</p>",
        "id": 153989827,
        "sender_full_name": "Robert McClure",
        "timestamp": 1534871182
    },
    {
        "content": "<p>I haven't added a tracker for this one.</p>",
        "id": 153989829,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1534871329
    },
    {
        "content": "<p>Ticket 17992 opened<br>\n<a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17792&amp;start=0\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17792&amp;start=0\">https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17792&amp;start=0</a></p>",
        "id": 153992979,
        "sender_full_name": "Carol Macumber",
        "timestamp": 1536069895
    }
]