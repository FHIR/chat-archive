[
    {
        "content": "<p>How about treating Concepts, Terms and Relationships as stand-a-lone FHIR Resources?</p>",
        "id": 233094721,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1617552498
    },
    {
        "content": "<p>Just like the method 2 summarized in Technical Overview of the specification for catalogs (see <a href=\"https://build.fhir.org/ig/HL7/fhir-order-catalog/index.html#scopes-of-order-catalogs-and-roles-involved\">https://build.fhir.org/ig/HL7/fhir-order-catalog/index.html#scopes-of-order-catalogs-and-roles-involved</a>), it would make the life easier than the method 1 in which a larger size would hamper the management (creation, update, query, retrieval) of the resource CodeSystem.</p>",
        "id": 233096331,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1617554008
    },
    {
        "content": "<p>That might also be why we need/have some separate tool(s) to do the management such as loading a CodeSystem and there are still challenges.</p>",
        "id": 233096724,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1617554403
    },
    {
        "content": "<p>There's been discussion about this in the past but hasn't been a whole lot of implementer interest</p>",
        "id": 233187730,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1617636421
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> Thanks</p>",
        "id": 233245495,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1617665666
    },
    {
        "content": "<p>I have interest in treating Concepts / Terms as standalone resources. The information I saw was that we'd use CodeSystem to express vocabulary terms, but that is a challenge (for proper lifecycle management, we'd have a CodeSystem with one concept only, which is weird)</p>",
        "id": 233331813,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1617720768
    },
    {
        "content": "<p>The management and interoperability of Concepts is important for some implementation guidance</p>",
        "id": 233332050,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1617720849
    },
    {
        "content": "<p>so, +1 on this need</p>",
        "id": 233332071,
        "sender_full_name": "Jose Costa Teixeira",
        "timestamp": 1617720861
    },
    {
        "content": "<p>I think this was (and probably still is) considered to be primarily useful in the terminology development space, rather than for terminology use.  Initially FHIR purposefully stayed away from the terminology development space.  Potentially that could be something to bring up for consideration again.</p>",
        "id": 233354284,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1617728383
    },
    {
        "content": "<p>Supports for a terminology IDE/collaborative platform are a complex set of requirements and they would be out of the scope of FHIR TS spec. But a basic/minimum set of funtions are necessory for terminology management such as periodic updates.</p>",
        "id": 233407608,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1617752182
    },
    {
        "content": "<p>Periodic updates are handled relatively well using PATCH (which is significantly lighter weight than treating each concept as a resource instance)</p>",
        "id": 233414674,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1617757238
    },
    {
        "content": "<p>For many code systems you probably don't need PATCH.  I haven't used PATCH yet, and I've done quite a few terminology updates.  But being able to support incremental updates rather than a complete replace certainly can have significant advantages.</p>",
        "id": 233414937,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1617757435
    },
    {
        "content": "<p>Indeed, adding a Concept (using the JSON Patch option) is as simple as PATCH with something like:</p>\n<div class=\"codehilite\" data-code-language=\"JSON\"><pre><span></span><code><span class=\"p\">[{</span>\n        <span class=\"nt\">\"op\"</span><span class=\"p\">:</span> <span class=\"s2\">\"add\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"path\"</span><span class=\"p\">:</span> <span class=\"s2\">\"/concept/-\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"B\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"display\"</span><span class=\"p\">:</span> <span class=\"s2\">\"My fancy new concept\"</span>\n        <span class=\"p\">}</span>\n<span class=\"p\">}]</span>\n</code></pre></div>",
        "id": 233417358,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1617759415
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> Thanks a lot.  I'll check out how to do PATCH.</p>",
        "id": 233434980,
        "sender_full_name": "Lin Zhang",
        "timestamp": 1617774478
    }
]