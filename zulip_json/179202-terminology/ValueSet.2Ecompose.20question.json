[
    {
        "content": "<p>VSD-3 states that \"ValueSet.compose.include Cannot have both concept and filter\". What about valueSet reference? If a valueSet has all three: concept, filter and valueset reference, should there be three include?</p>",
        "id": 153998366,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1537388003
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span> I think that's a good point.  Probably need a tracker to fix it.  It doesn't make sense to leave the valueSet reference out of the rule and allow arbitrary combinations of it with the others.</p>",
        "id": 153998392,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1537395227
    },
    {
        "content": "<p>I think filter + valueSet makes sense</p>",
        "id": 153998409,
        "sender_full_name": "Jim Steel",
        "timestamp": 1537397690
    },
    {
        "content": "<p>I agree that valueSet + concept probably doesn't</p>",
        "id": 153998410,
        "sender_full_name": "Jim Steel",
        "timestamp": 1537397704
    },
    {
        "content": "<p>Tracker created: <a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=18089&amp;start=0\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=18089&amp;start=0\">https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=18089&amp;start=0</a></p>",
        "id": 153998411,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1537397813
    },
    {
        "content": "<p>I'm a little conflicted here. From a pure implementation logic perspective there's little reason to disallow any of the combinations; you're just taking an intersection of constraints expressed in different ways.<br>\nFrom a human authoring perspective however it seems strange/degenerate to write something like 'these explicit concepts intersected with this filter/ValueSet' but if the ValueSet definition is machine generated, perhaps based on a template and some input data, then not having these constraints is quite useful.</p>",
        "id": 153998432,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1537401551
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191376\">@Jim Steel</span> One problem that I see with filter + valueSet is that we have <strong>vsd-2</strong> which says \"A value set with concepts or filters SHALL include a system\".  So, if that's true, then how would you interpret the combination of system + valueSet, and then would filter apply to only one of them (which one?) or somehow to the combination of the two?  I don't think that was what was intended.  I believe that probably the intent was that compose.include would contain either system (0..1) <strong>or</strong> concept (0..<em>) <strong>or</strong> valueSet(0..</em>), and that both filter and concept are only used with system.  However, back to your point, I can see why it might make sense to use filter + valueSet, but if we agree we want to do that we'll have to revise at least the two (and maybe other?) invariants to make that work and do it consistently.</p>",
        "id": 153998554,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1537447295
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191376\">@Jim Steel</span> Agree with you. Filter + Valueset ref definitely makes sense, filter + concept no.<br>\n<span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> What we need is an invariant where include has both ref and filter, the filter must have a system in the value set AND that is the system in the include.</p>",
        "id": 153998796,
        "sender_full_name": "Robert McClure",
        "timestamp": 1537489240
    },
    {
        "content": "<p>I think continuing to require the system whenever a filter is used (in conjunction with a valueSet or otherwise), because more than constraining the matching concepts' code system, it constrains which filter is being used. For example, if you imported a valueSet that spanned 2 code systems A and B that both supported a filter named 'x', then a ValueSet filter might be ambiguous (e.g. in its type)</p>",
        "id": 153998797,
        "sender_full_name": "Jim Steel",
        "timestamp": 1537489457
    },
    {
        "content": "<p>filter only applies to system, and must have a system.</p>",
        "id": 153998813,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1537491554
    },
    {
        "content": "<blockquote>\n<p>\"the filter must have a system in the value set \"</p>\n</blockquote>\n<p>I don't know that that means</p>",
        "id": 153998814,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1537491573
    },
    {
        "content": "<p>Is that only to avoid empty intersections?</p>",
        "id": 153998815,
        "sender_full_name": "Jim Steel",
        "timestamp": 1537491596
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> What I was trying to say is that the referenced value set SHALL have the system identified in the include so that the intersection is not NULL.</p>",
        "id": 153998985,
        "sender_full_name": "Robert McClure",
        "timestamp": 1537538120
    },
    {
        "content": "<p>so what if the intersection is null?</p>",
        "id": 153999150,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1537568402
    },
    {
        "content": "<p>It will always be null if the system in the include is not in the ref value set, so why allow that??</p>",
        "id": 153999224,
        "sender_full_name": "Robert McClure",
        "timestamp": 1537577674
    },
    {
        "content": "<p>well, for several practical reasons. Let's say you have value set A, which says that it imports everything from value set B  that is-a SCT clinical finding. And value set B is authored by someone else</p>",
        "id": 153999240,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1537583221
    },
    {
        "content": "<p>the current version of value set B includes some SCT clinical findings but also some local codes, and a few HL7 codes (nullFlavor code system). Your value set is only the SCT codes</p>",
        "id": 153999241,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1537583275
    },
    {
        "content": "<p>so the author of value set B updates it to no longer include any SCT codes...</p>",
        "id": 153999242,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1537583299
    },
    {
        "content": "<p>now, your value set is empty.</p>",
        "id": 153999243,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1537583313
    },
    {
        "content": "<p>I don't see why that's 'an error'. If it is, who's error is it? But why is any empty value set an error? I think that there's various ways of using value sets where the empty set is not an error, it just means that the set of concepts relevant for this particular action is empty</p>",
        "id": 153999244,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1537583379
    },
    {
        "content": "<p>eg. you might be using the value set is a criteria test in a decision support system</p>",
        "id": 153999245,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1537583452
    },
    {
        "content": "<p>Yeah, I'm inclined to agree with Grahame</p>",
        "id": 153999358,
        "sender_full_name": "Jim Steel",
        "timestamp": 1537743678
    }
]