[
    {
        "content": "<p>Lloyd and I have been having a chat about this, and it seems time for some broader input.  Basically, according to Lloyd's explanation and my understanding, the new 'canonical' data type is intended for cases where the reference is specifically to a FHIR resource (e.g. CodeSystem or ValueSet in the terminology space), whereas 'uri' is intended for cases where the reference can be more general (may or may not be to a resolvable url) and a FHIR resource instance isn't being assumed (there may be better ways to say some of that, but I think it's reasonably accurate).  So for Coding.system we're using 'uri', as a CodeSystem resource may not be present for the code system that is being referenced.  But for CodeSystem.valueSet, CodeSystem.supplements and ValueSet.compose.include.valueSet we're now using 'canonical'.  I'm not totally convinced that is consistent with what we will need and want, but we can leave that for now.  Another thing that I discovered, though, in ExpansionProfile seems to me definitely inconsistent:</p>\n<blockquote>\n<p>ExpansionProfile.fixedVersion.system<br>\nElement Id  ExpansionProfile.fixedVersion.system<br>\nDefinition  The specific system for which to fix the version.<br>\nControl 1..1<br>\nType    canonical(CodeSystem)<br>\nSummary true<br>\nComments    See ''Coding.system'' for further documentation.</p>\n</blockquote>\n<p>This says that Coding.system has further documentation, which I think carries the underlying assumption that it's doing the same thing as ExpansionProfile.fixedVersion.system.  But for Coding.system we're using 'uri' and for ExpansionProfile.fixedVersion.system we've changed to using 'canonical'.  So I think that something needs to be changed here - at least in the Comments, if nothing else.  It would be good to get some further thoughts on how we expect this to work, and when for sure we need to use 'uri' vs. 'canonical' in the terminology resources and operations and how to make the expectations around that clear.</p>",
        "id": 153942678,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1520400542
    },
    {
        "content": "<p>yes I think that this should be consisten, and I think that it should be a uri, not a canonical. My mistake there.</p>",
        "id": 153942693,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1520419771
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=15724\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=15724\">GF#15724</a> - pre-applied</p>",
        "id": 153942781,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1520438404
    },
    {
        "content": "<p>Agree <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span> , I would like to better understand the use cases where CodeSystem.valueSet etc need to support resolvable references.  That is, where it isn't sufficient to use URIs instead</p>",
        "id": 153942908,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1520466211
    }
]