[
    {
        "content": "<p>Is there a way to specify a ValueSet that includes all known versions of a CodeSystem? <br>\ne.g. we have yearly editions of ICD-10 and would like to define a ValueSet whose expansion automatically includes any new edition of the CodeSystem once it's published. So we don't have to update the valueSet binding or the valueSet definition every year to explicitly include the new CodeSystem version.</p>",
        "id": 153953599,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1524491528
    },
    {
        "content": "<p>haven't we had this question before?</p>",
        "id": 153953612,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1524491794
    },
    {
        "content": "<p>Yes, but I lost track...  I failed to enter a CR back then, so I'm not sure if there's been any progress...</p>",
        "id": 153953658,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1524505719
    },
    {
        "content": "<p>Ah! There's the old thread: <a href=\"#narrow/stream/48-terminology/topic/Defining.20a.20ValueSet.20including.20all.20versions.20of.20a.20CodeSystem\" title=\"#narrow/stream/48-terminology/topic/Defining.20a.20ValueSet.20including.20all.20versions.20of.20a.20CodeSystem\">https://chat.fhir.org/#narrow/stream/48-terminology/topic/Defining.20a.20ValueSet.20including.20all.20versions.20of.20a.20CodeSystem</a></p>",
        "id": 153953659,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1524505813
    },
    {
        "content": "<p>Thanks for digging up the old topic, <span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span>.  I'm not aware of any further progress on this.  We left it back in November and hadn't really come to a conclusion at that time.  The <code>[canonicalUrl]|*</code> syntax proposed by <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span> is still on the table.  And it sounds like you (and probably others) still have the need.  Do you want to create a tracker for it now?</p>",
        "id": 153953664,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1524507253
    },
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=15998\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=15998\">GF#15998</a></p>",
        "id": 153953665,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1524507493
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191450\">@Simone Heckmann</span> Can you provide further clarification on your use-case here?  Leaving the CodeSystem's version empty in a ValueSet definition is normally interpreted as \"use the latest available version\", and this seems to be the semantics you want in the example above.  But what you've asked for is \"all known versions\", and I'm stuck trying to understand what this would mean.</p>",
        "id": 153981441,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1533268660
    },
    {
        "content": "<p>the use case is where you have multiple different releases of a billing code system, and they are not bringing codes forward, so you don't have a single code system version with all the codes in it. And you'll accept any billing code that was ever valid</p>",
        "id": 153981451,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533269501
    },
    {
        "content": "<p>its' a validation use case</p>",
        "id": 153981452,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533269509
    },
    {
        "content": "<p>So it's not needed for ValueSet at all then, only <code>CodeSystem/$validate-code</code>?</p>",
        "id": 153981458,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1533270027
    },
    {
        "content": "<p>no needed in value set - use binding + value set for that use case</p>",
        "id": 153981459,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533270128
    },
    {
        "content": "<p>So semantics for this would be satisfied with a Union of all the expansions with respect to each (known/available) CodeSystem version?</p>",
        "id": 153981462,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1533270308
    },
    {
        "content": "<p>pretty much. some problems in the corners, but that's the intent</p>",
        "id": 153981465,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533270591
    },
    {
        "content": "<p>it's the corners that I worry about - are you saying there are cases where (efficiency aside), defining this as the actual semantics would not work?</p>",
        "id": 153981468,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1533272093
    },
    {
        "content": "<p>well, we documented 2 that we are aware of, around coherency of meaning when changes happen, and whether a server has the relevant versions</p>",
        "id": 153981470,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533273740
    },
    {
        "content": "<p>Our primary use case is the german ICD-10-GM. We have new editions every year and whenever a code is documented, the year of the edition has to be documented with it (\"versionNeeded\") a simple validator can not decide if the proper edition has been used for a specific case/patient, because there are complex rules that determine what catalogue can be used depending on admissionDate and whatnot. So a simple validator will only be able to determine wether a given code is valid in the given catalogue. Also, we don't want to change our profiles every year, so we need a binding semantinc to say: this element binds to ICD-10-GM in all known editions.</p>\n<p>We can't simply update the CodeSystem with a new release, because multiple versions may be valid at the same time (as said, it depends on admissionDate), so especially early in the year, two catalogues are needed simultaneously. There are plenty of other billing code systems with the same logic. <br>\nOur most important issue is to keep the national profiles stable, even if the underlying vocabulary sometimes changes mutiples times a year.</p>",
        "id": 153981501,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1533276439
    },
    {
        "content": "<p>By definition, ICD is a classification, so the meaning of every \"...not otherwise specified\"-code changes, whenever a new code is introduced into the class. Hence,  new edition= new CodeSystem</p>",
        "id": 153981504,
        "sender_full_name": "Simone Heckmann",
        "timestamp": 1533276561
    },
    {
        "content": "<p>Thanks Simone, that all makes sense, but still doesn't explain the need for the all versions semantic.<br>\nIf the binding is to a valueset that omits the CodeSystem version then you get the desired result of not needing to update the version with every new ICD10 release (which would be wrong anyway, since your version constraint depends on external context).<br>\nA decent terminology service will allow multiple versions of a CodeSystem to exist at the same time (as different CodeSystem instances), and use the codesystemversion passed to $validate-code to help choose the right one when the referencing ValueSet doesn't itself constrain the version.<br>\nTLDR - the requirements given fit within the current spec without the need for an \"all versions\" version statement.</p>",
        "id": 153981968,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1533331378
    },
    {
        "content": "<p>I don't agree with this. The definitions are clear: in the absence of a specified version, you use the latest version</p>",
        "id": 153981971,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533331584
    },
    {
        "content": "<p>I would argue the version is specified - it's the one associated with the code being validated</p>",
        "id": 153981974,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1533331736
    },
    {
        "content": "<p>Regardless, I don't understand how the all versions notion helps here - it would instead behave as an \"any version\", no?</p>",
        "id": 153981975,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1533331816
    },
    {
        "content": "<p>I might agree with this</p>",
        "id": 153981976,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533331975
    },
    {
        "content": "<p>the difference becomes germane if the version is not specified in the instance</p>",
        "id": 153981977,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533332003
    },
    {
        "content": "<p>Right.  You want to ask the question \"Is this code valid against any of the versions of this code system?\"  We need a syntax to do that.  (It'd be nice to also have \"Is this code valid against any of this enumerated set or range of versions of this code system?\" too.</p>",
        "id": 153981978,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1533332241
    },
    {
        "content": "<p>second is easy- just add all the versions in a value set</p>",
        "id": 153981982,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533332586
    },
    {
        "content": "<p>Either would be simple if we had a solution to \"pipe\" the results of one operation (in this case a search on CodeSystem) into another - $validate-code</p>",
        "id": 153982065,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1533366511
    },
    {
        "content": "<p>I've had a look at piping but it's really quite unclear waht that means</p>",
        "id": 153982071,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533373266
    },
    {
        "content": "<p>in the general case</p>",
        "id": 153982072,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533373269
    }
]