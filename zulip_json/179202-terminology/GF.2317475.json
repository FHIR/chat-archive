[
    {
        "content": "<p><a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17475\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17475\">GF#17475</a> - It would be good to get some opinions on whether we should remove the vsd-5 invariant on ValueSet which says \"Value set SHALL contain at least one of a compose or an expansion element\", and allow for the possibility of ValueSet resource instances which are \"metadata only\".  It does appear that even with the vsd-5 invariant Yunwei's concern about the burden on a _summary search which returns large numbers of extensionally defined value sets could possibly be mitigated by the fact that the only elements under 'include' that are marked as \"summary\" are 'system', 'version', 'filter' and 'valueSet', but not 'concept'.  That should substantially reduce the burden, so maybe it's not necessary to remove vsd-5?  But I'm also not sure what purpose vsd-5 is actually serving?  In thinking about it further it doesn't seem like it's protecting against any particular invalid or undesired representation.</p>\n<p>And back to \"summary\" for a moment, I noticed that 'include' is in fact included in the summary but 'exclude' is not - unless it gets included by default because it refers back to 'include'?  Even if the latter is somehow the case, it would be less confusing if that was made explicit.</p>",
        "id": 153979588,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1532990435
    },
    {
        "content": "<p>Again, this boils down to definition (class/compose) v instance (object/expand) and one or the other is required. One suggestion for defining extensional value sets is to populate the compose.include.filter element values along these lines...property=\"Extensional\", op=FilterOperator.Equal, value=\"true\".  That might denote \"Extensional Value Set - contents only available if expanded\".</p>",
        "id": 153979616,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1533006564
    },
    {
        "content": "<p>I think we should remove it and just note about the use cases for having both / either / none in the narrative</p>",
        "id": 153979633,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533018815
    },
    {
        "content": "<p>I'm not convinced that the invariant should be removed simply to make summary retrievals computational. I see no value in a value set resource that is only metadata. I think instead we need to improve how summary retrieval works</p>",
        "id": 153979703,
        "sender_full_name": "Robert McClure",
        "timestamp": 1533046675
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191503\">@Robert McClure</span> The potential value that I can see (particularly in a summary search) is that you can retrieve a list of all of the value sets that are available, and for any that are of further interest you can then request the full resource(s).  I think that's essentially what <span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span> was looking for.</p>",
        "id": 153979718,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1533051108
    },
    {
        "content": "<p>I must be not understanding something. Why not have a parameter allow ValueSet?_summary=true search to bring back only metadata?</p>",
        "id": 153979820,
        "sender_full_name": "Robert McClure",
        "timestamp": 1533066780
    },
    {
        "content": "<p>we do indeed have exactly that parameter,but what comes back form that has to be valid, and a value set with metadata only is not currently valid because of that constraint</p>",
        "id": 153979843,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533069390
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> this seems to be a catch22. There must be some way around support for providing a returned \"resource view\" that is only part of a resource. This can't be the only situation where this issue exists.</p>",
        "id": 153979996,
        "sender_full_name": "Robert McClure",
        "timestamp": 1533084220
    },
    {
        "content": "<p>That's correct, if properties are masked out for security/redacting purposes, would that still need to conform?</p>",
        "id": 153980012,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533095455
    },
    {
        "content": "<p>we've argued about this, and we'd be happy to revisit this, but I don't think now is the time. If we clearly document the SHALLS in narrative, we can come back to a formal constraint like this one as a formal constraint in R5</p>",
        "id": 153980032,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533097295
    },
    {
        "content": "<p>Maybe in Baltimore</p>",
        "id": 153980085,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533105264
    },
    {
        "content": "<p>The issue of redaction resulting in a valid resource is a broader group discussion. I was always expecting it must be still a valid Resource. This is the way I have written standards/handbook text. It is difficult sometimes, but it has always been considered a non-negotiable. Surely there are specific projects that will drop conformance requirements, but all public standards discussion have always assumed underlying standard conformance is still required.</p>",
        "id": 153980203,
        "sender_full_name": "John Moehrke",
        "timestamp": 1533128840
    },
    {
        "content": "<p>status is a required property and if it was redacted, what do we do?</p>",
        "id": 153980206,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533129458
    },
    {
        "content": "<p>But discussion for later.</p>",
        "id": 153980208,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533129522
    },
    {
        "content": "<p>this is why de-identification is a PROCESS. What you do with required fields tends to become obvious when one considers the reason for de-identification. For example, one likely notices that the study already required that all status must already be active... so leaving it as active does not expose anything that isn't already known to the study participants and administrators.</p>",
        "id": 153980214,
        "sender_full_name": "John Moehrke",
        "timestamp": 1533129930
    },
    {
        "content": "<p><code>_elements</code> allows for selective retrieval of the ValueSet.  I'd like to understand why it is not suitable for <span class=\"user-mention\" data-user-id=\"191506\">@Yunwei Wang</span> 's use case</p>",
        "id": 153981437,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1533268102
    },
    {
        "content": "<p>it is. the issue isn't summary, the issue is that the invariant means that by whatever means, you have a value set with neither compose or expansion</p>",
        "id": 153981450,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533269426
    },
    {
        "content": "<p>So the representation doesn't validate, but isn't that (almost) always going to be the case with <code>_elements</code>?</p>",
        "id": 153981460,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1533270160
    },
    {
        "content": "<p>no you can't eliminate mandatory things, or the server should ignore your request to do so</p>",
        "id": 153981461,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533270223
    },
    {
        "content": "<p>Hmm, that's not so great for my use-case which has been using <code>_elements</code> to optimise network bandwidth.  It's also not how HAPI behaves.</p>",
        "id": 153981463,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1533270441
    },
    {
        "content": "<p>where would that create a problem?</p>",
        "id": 153981464,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533270576
    },
    {
        "content": "<p>I might not want ValueSet.status, for instance.  But also this very discussion - I don't care about expansion or compose but maybe just name/title, version and URI because I'm populating a UI</p>",
        "id": 153981469,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1533272292
    },
    {
        "content": "<p>this is a hard problem; we've tried in the past to say that summarised resources don't have to be valid... but discussing where that leads always ges to a place we don't like. So... they have to be valid. but mostly, the things that are mandatory are not big, and it's not a problem.</p>",
        "id": 153981471,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533273839
    },
    {
        "content": "<p>Maybe just relax the invariant requirements then?</p>",
        "id": 153981483,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533274958
    },
    {
        "content": "<p>that's the proposal. it's generating considerable pushback</p>",
        "id": 153981484,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533274981
    },
    {
        "content": "<p>Gets a +1 from me.</p>",
        "id": 153981485,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533274997
    },
    {
        "content": "<p>To be clear, relaxing an invariant simply to make one use case work is a <strong>very bad idea</strong> because folks will simply ignore the single use case and stop following the guidance. That invariant exists because a resource without either a compose or an expansion <strong>makes NO sense</strong>. The use case is about a quick search to find things you want but then you will expect that value set resource to actually have something when you go to use it. So no, I'm not in support of allowing nonsense resources simply because we want searching to be easier.</p>",
        "id": 153981867,
        "sender_full_name": "Robert McClure",
        "timestamp": 1533317688
    },
    {
        "content": "<p>so you are picking some use cases to require validity for? And not others? It's pursuing the consequences of that decision that lead us to trouble.... We are certainly <em>not</em> going to change that rule at this point in the process (it would be a global rule that affects all implementers of everything)</p>",
        "id": 153981893,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533324129
    },
    {
        "content": "<p>this comes up for many resources: the common uses lead to common sense minimum cardinalities... but the edge cases mean that they have to be optional. Value set is not special in this case.</p>",
        "id": 153981894,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533324252
    },
    {
        "content": "<p>The core specification's purpose is not to enforce best (or even good) practice.  It's simply to provide a standard mechanism to share what data systems have - whatever that is.  Any invariants in the core specification should be limited to prohibiting content that is clearly non-sensical.  Good practice/best-practice can be flagged using an appropriate invariant type in core or through the creation of profiles.</p>",
        "id": 153981934,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1533327881
    },
    {
        "content": "<p>(Rationale is that good/best practice is always context-specific and resources are always context-independent.)</p>",
        "id": 153981935,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1533327926
    },
    {
        "content": "<p>I see no problem in a metadata-only ValueSet. The very omission of both compose and expansion makes it clear that it's incomplete.  +1 from me on removing vsd-5</p>",
        "id": 153982067,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1533367226
    },
    {
        "content": "<p>A unit test for this could be to validate all example resources in the spec with them in their summary format.</p>",
        "id": 153982861,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1533600279
    },
    {
        "content": "<p>gee let me run out and write that</p>",
        "id": 153982915,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533603585
    },
    {
        "content": "<p>The proposed <a href=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17475\" target=\"_blank\" title=\"https://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=17475\">resolution</a> has been pre-applied.  We discussed it on the Vocab FHIR Tracker Issues  call today and had agreement on it and will vote on Thursday.</p>",
        "id": 153982949,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1533607995
    },
    {
        "content": "<p>great - thanks</p>",
        "id": 153982952,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1533608165
    }
]