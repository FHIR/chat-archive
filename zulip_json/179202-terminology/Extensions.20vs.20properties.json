[
    {
        "content": "<p>Wondering what the rationale was to use the property bag in terminology vs using extensions like in rest of fhir.</p>",
        "id": 159055972,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1550744854
    },
    {
        "content": "<p>Properties fall within the 80% for code systems.  We also need them to filter valuesets</p>",
        "id": 159078610,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1550764312
    },
    {
        "content": "<p>Just a question on this, does the terminology stuff support extensions (technically yes) but do these then flow through the expansions?<br>\nDo if I put an extension on a concept in a code system and this is returned in an expansion on a valueset, should the extensions come too?<br>\n(the properties don't as there is no place to put them)</p>",
        "id": 160259481,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1552014590
    },
    {
        "content": "<p>Extending concepts in a Code System is facilitated by Code System Supplements  see <a href=\"http://hl7.org/fhir/codesystem.html\" target=\"_blank\" title=\"http://hl7.org/fhir/codesystem.html\">http://hl7.org/fhir/codesystem.html</a> at 4.8.8; noting the caveat on their use in ValueSet expansions in the 'trial use' box.</p>",
        "id": 160260284,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1552015512
    },
    {
        "content": "<p>I don't think supplements help with getting extra information back in an expansion (it can add properties, but they won't/can't come back in an expansion any more than other CodeSystem properties can).</p>\n<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> was talking about something like a ValueSet/$lookup operation, that might meet some of the needs, in <a href=\"#narrow/stream/179202-terminology/topic/ValueSet.2F.24lookup\" title=\"#narrow/stream/179202-terminology/topic/ValueSet.2F.24lookup\">https://chat.fhir.org/#narrow/stream/179202-terminology/topic/ValueSet.2F.24lookup</a></p>",
        "id": 160264061,
        "sender_full_name": "Jim Steel",
        "timestamp": 1552021125
    },
    {
        "content": "<p>So, in summary, terminology expansion has no standard extensibility mechanism.</p>",
        "id": 160280410,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1552042608
    },
    {
        "content": "<p>You all are much more knowledgable on the technical issues, but <span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span> is exactly correct that code system supplements is intended to allow you to add properties and additional relationships to a code system, they just can not add additional concepts (that is a code system fragment). </p>\n<p>It was our intent to be able to specify that an expansion operation use any number of supplements when generating the expand with the expectation that the result would include anything added in the supplement. <span class=\"user-mention\" data-user-id=\"191376\">@Jim Steel</span> you seem to say something different? </p>\n<p>As for code system $lookup (or valueset $lookup) - I certainly assume the same behavior. In fact, the whole point of a supplement (or a fragment) is that they can be added to the code system <strong>for any operation.</strong> <span class=\"user-mention\" data-user-id=\"191405\">@Rob Hausam</span>  am I missing something?</p>",
        "id": 160302850,
        "sender_full_name": "Robert McClure",
        "timestamp": 1552062050
    },
    {
        "content": "<p>My point (and my understanding of the original question from <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> ) was that the concept elements that come back in a ValueSet from an $expand request cannot currently have properties in them. So regardless of whether the property values are defined in the original CodeSystem or in a supplement, they cannot currently come back in the result of $expand.</p>",
        "id": 160342725,
        "sender_full_name": "Jim Steel",
        "timestamp": 1552095067
    },
    {
        "content": "<p>Correct, and same with extensions on the concepts in the code system. They don't d<br>\nCome back either.</p>",
        "id": 160343019,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1552095447
    },
    {
        "content": "<p>Depends what you mean by 'extensions' in this context (extensions on one of the coded data types?). Supplements that are additional designations (e.g. an alternative language) can be returned in ValueSet expansions. However, as Jim says, properties cannot - whether they are part of the 'core' Code System or supplementary properties; at present, these are only returned by a CodeSystem $lookup operation.</p>",
        "id": 160344966,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1552098126
    },
    {
        "content": "<blockquote>\n<p>at present, these are only returned by a CodeSystem $lookup operation</p>\n</blockquote>\n<p>And there are a couple of (informal) proposals floating around to either:<br>\n1. extend <code>/ValueSet/$expand</code> so that it can return a concept's properties, or<br>\n2. introduce <code>/ValueSet/$lookup</code> that acts just like <code>/CodeSystem/$lookup</code> but that takes a valueset as a parameter instead of a code and does a <code>$lookup</code> on all members of the valueset's expansion</p>\n<p>From one perspective, option 1 seems like the most straightforward. However, I have also proposed something like <code>/ValueSet/$translate</code> to enable (efficient) batch-translation of multiple concepts. So option 2 is really about having a consistent mechanism for performing terminology operations on a set of codes rather than just a single code.</p>",
        "id": 160348056,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1552102840
    },
    {
        "content": "<p>so there's no simple way to pipe operations because you need some language to transform between first output and second input - and it rapidly gets yucky.</p>",
        "id": 160757137,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1552547642
    },
    {
        "content": "<p>right now, the only way to do this is </p>\n<ul>\n<li>$expand to get the list. Note that supplements may alter the list if it's specified extensionally based on properties and the supplements provide values for the properties</li>\n<li>N $lookups to get the properties</li>\n</ul>",
        "id": 160757162,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1552547703
    },
    {
        "content": "<p>this is one of 3 deficiencies in the API that we need to solve. I'd like to pilot a proposal at Montreal on this.</p>",
        "id": 160757177,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1552547741
    },
    {
        "content": "<p>the other deficiencies:</p>\n<ul>\n<li>a single call that takes any kind of resource and populates all the display values </li>\n<li>dealing with the v2/CDA/openEHR issues (alternative system identifiers)</li>\n</ul>",
        "id": 160757291,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1552547892
    },
    {
        "content": "<p>Are you going to make the proposal for the alternative to $expand --&gt; N $lookups?  What do you mean by pilot for this?</p>",
        "id": 160775295,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1552567019
    },
    {
        "content": "<p>ping on this. Can we talk about this at DevDays?</p>",
        "id": 167259141,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1559627259
    },
    {
        "content": "<p>Sure.  Sounds like a good plan.</p>",
        "id": 167284702,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1559649445
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Coincidentally we are just getting back to focusing on this problem.   I won't be at DevDays, unfortunately, but I like the <a href=\"#narrow/stream/179202-terminology/topic/Specifying.20additional.20properties.20for.20ValueSet\" title=\"#narrow/stream/179202-terminology/topic/Specifying.20additional.20properties.20for.20ValueSet\">proposal you made last year</a> where you wrote:</p>\n<p>\"an alternative approach which is more value set centric - and probably better for getting properties, is to add to value set (probably extensions for now) a column : string 0..* for each contains, and a column: {name, uri, type} to the expansion that defines the columns. and some kind of column= parameter in the $expand\"</p>\n<p>Related to this problem for us, and possibly worth looking at together, is the need for the client to select which properties are searched during an $expand.</p>",
        "id": 167305552,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1559662209
    },
    {
        "content": "<p>Count me in on that dev days discussion</p>",
        "id": 167335245,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1559681980
    },
    {
        "content": "<p>I think <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> and I would also like to be in that discussion</p>",
        "id": 167344782,
        "sender_full_name": "Jim Steel",
        "timestamp": 1559691865
    },
    {
        "content": "<p>pop up at DevDays: Wednesday 11.55 - 12.35: McKinley: Returning extensions in value set expansions</p>",
        "id": 167782535,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560190692
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> You should come, its awesome ;)</p>",
        "id": 167977627,
        "sender_full_name": "Jim Steel",
        "timestamp": 1560366337
    },
    {
        "content": "<p>Outcomes:</p>\n<p>1. define an ordinal property (can be pre-adopted in &lt;R5)<br>\n 1a. change the ordinal value extension to only be used in Questionnaire (<a href=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22698\" target=\"_blank\" title=\"http://gforge.hl7.org/gf/project/fhir/tracker/?action=TrackerItemEdit&amp;tracker_item_id=22698\">GF#22698</a>)<br>\n2. define a way to put properties in expansions in R5 (match the CodeSystem pattern)<br>\n3. define an extension to put properties in expansions in R4 (matching the CodeSystem pattern)<br>\n4. define a way for a client to ask for particular properties in expansions :    property string 0..* a code or a URI for a property that the client wishes to be returned (or *)<br>\n5. define a way for a value set to specify the default returned properties <br>\n6. document the use of :in to search by property value<br>\n7. define a way for a value set to specify the order if filtered based on properties</p>",
        "id": 167979981,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560368142
    },
    {
        "content": "<p>not clear how a value set provides an ordinal. More generally, is there any validity in a value set defining properties for the codes it references....</p>",
        "id": 168282083,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560746396
    },
    {
        "content": "<p>we've said that ordinals may be defined in valuesets</p>",
        "id": 168282126,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1560746411
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> <br>\nHelp me track the discussion a bit. Here is how I have always thought of the parts going together:</p>\n<ul>\n<li>Value set CLD identifies concepts for expansion inclusion using <ul>\n<li>concept properties or relationship data defined in the base code system, and/or</li>\n<li>concept properties (ordinal or otherwise) or relationship data defined in a code system supplement (that can be crafted by anyone)</li>\n</ul>\n</li>\n<li>I think we have allowed, but do not understand how to, define a new value set specific concept property (relations too? - like a new hierarchy?) <em>within the CLD</em> for a specified code. By this I mean enumerate a set of codes in the include and give each of the codes value set specific properties <em>valid only in the context of an expand for this value set.</em><ul>\n<li>Is this what you are discussing?</li>\n</ul>\n</li>\n</ul>\n<p>What we have not clearly defined, or I don't understand, is how to </p>\n<ul>\n<li>specify a concept property <em>only on the results of the expansion membership</em>, ie: associate an ordinal value to only the values in the value set expansion based on <em>being in the expansion</em></li>\n</ul>\n<p>Then, how do you get the content used above to show up in an expansion? Also, we don't have any way that I know of to specify that <em>every</em>expansion of a value set would have specific concept properties included in the expand, correct?</p>",
        "id": 168684443,
        "sender_full_name": "Robert McClure",
        "timestamp": 1561126008
    },
    {
        "content": "<blockquote>\n<p>Value set CLD identifies concepts for expansion inclusion</p>\n</blockquote>\n<p>why CLD? why not the request for the expansion itself. The CLD defines what's in the value set, but the system using the value set knows what properties it wants</p>\n<blockquote>\n<p>how to, define a new value set specific concept property (relations too?</p>\n</blockquote>\n<p>yes, that's one of things on my list </p>\n<blockquote>\n<p>is how to specify a concept property only on the results of the expansion membership</p>\n</blockquote>\n<p>That's also on the list above</p>",
        "id": 168712032,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1561147471
    },
    {
        "content": "<blockquote>\n<p>how do you get the content used above to show up in an expansion</p>\n</blockquote>\n<p>that's the primary todo - extend expansion to cover that</p>",
        "id": 168712043,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1561147495
    },
    {
        "content": "<blockquote>\n<p>why CLD? why not the request for the expansion itself. </p>\n</blockquote>\n<p>I assume you didn't follow my point. The CLD uses concept identity, properties, relations, etc. to determine expansion <em>concept</em> membership. I think you are questioning what <em>properties, etc.</em> for those concepts that would also be included in the expansion, and I agree that we don't currently use what is in the CLD to determine what other than concept codes are in the expansion. Is that your point?</p>\n<blockquote>\n<p>that's the primary todo - extend expansion to cover that</p>\n</blockquote>\n<p>Good.</p>",
        "id": 169138553,
        "sender_full_name": "Robert McClure",
        "timestamp": 1561644861
    },
    {
        "content": "<p>At least for my own purposes, I am using $expand with the filter parameter to determine what comes back in the expansion.  I don't see how the CLD has any bearing on what I am doing (though there are likely other use cases for it).  With regard to properties, I would like to:<br>\n1) Specify in the $expand which properties get returned<br>\n2) Specify in the $expand which properties are matched via the filter parameter (in addition to the display values)</p>",
        "id": 169141161,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1561646693
    },
    {
        "content": "<blockquote>\n<p>I assume you didn't follow my point. The CLD uses concept identity, properties, relations, etc. to determine expansion concept membership</p>\n</blockquote>\n<p>ah yes. you're right.</p>",
        "id": 169172676,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1561667482
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span> Since you are at the NLM (where?) we should chat directly, offline. PM me. I'm sure I don't understand what you really mean with</p>\n<blockquote>\n<p>I am using $expand with the filter parameter to determine what comes back in the expansion. I don't see how the CLD has any bearing on what I am doing</p>\n</blockquote>\n<p>Because $expand primarily exists to run the CLD <em>for an existing ValueSet resource</em> as an operation. Are you saying you are using $expand without specifying a ValueSet resource you are expanding?</p>",
        "id": 169241533,
        "sender_full_name": "Robert McClure",
        "timestamp": 1561740496
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191503\">@Robert McClure</span>  Ha!   I did not realize you were also at NLM!  It's a small world (or a large NLM). I did not mean to say the CLD was not necessary.  I will follow up with a PM.</p>",
        "id": 169242471,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1561741248
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195344\">@Paul Lynch</span> for your #2, it sounds like you're describing the CLD, or in FHIR terms, the <code>ValueSet.compose</code>.  In this case you would not use the filter parameter, that is explicitly and only for matching designations, but instead POST your own ValueSet definition with whatever property constraints you want directly to the <code>/ValueSet/$expand</code> operation.</p>",
        "id": 169269175,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1561762515
    },
    {
        "content": "<p>I'm not sure how that would work.  In #2, I am trying to fetch expansion results for a ValueSet for which I only have the URI and some property names.  I don't see how I could POST a definition for it.   My purpose here is to support autocompletion as the user types in a field in a Questionnaire with answerValueSet.</p>",
        "id": 169269588,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1561762852
    },
    {
        "content": "<p>I presume you also have the CodeSystem URI?  Let's say it is <code>http://example.com/cs1</code>, the ValueSet URI is <code>http://example.com/vs1</code>, the text entered by the user is \"foo\" and there is one property of interest \"myprop\", then you would construct ValueSet with a compose like:</p>\n<div class=\"codehilite\"><pre><span></span>  &quot;compose&quot;: {\n    &quot;include&quot;: [\n      {\n        &quot;system&quot;: &quot;http://example.com/cs1&quot;,\n        &quot;filter&quot;: [\n          {\n            &quot;property&quot;: &quot;myprop&quot;,\n            &quot;op&quot;: &quot;regex&quot;,\n            &quot;value&quot;: &quot;foo.*&quot;\n          }\n        ],\n        &quot;valueSet&quot;: [\n          &quot;http://example.com/vs1&quot;\n        ]\n      }\n    ]\n  },\n</pre></div>\n\n\n<p>Which is a CLD for the intersection of the codes with a matching property and those in the ValueSet.<br>\nIf you have multiple properties or you also want to match against the display text, then add extra include clauses.</p>",
        "id": 169315906,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1561850377
    },
    {
        "content": "<p>I'll add that in an $expand you could ask for anything that is available from the code system which obviously is likely much more than what was used in the CLD to determine expansion concept membership. One of the interesting thought experiments is if you could even add additional properties to the expand return based on somehow adding in to the $expand, use of a code system supplement.</p>",
        "id": 169414792,
        "sender_full_name": "Robert McClure",
        "timestamp": 1562002684
    },
    {
        "content": "<p>The context I'm working in is Questionnaire, so I don't have a CodeSystem, but a ValueSet URI from Quesitonnaire.item.answerValueSet, and potentially some property names from the <a href=\"http://build.fhir.org/ig/HL7/sdc/extension-sdc-questionnaire-choiceColumn.html\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/sdc/extension-sdc-questionnaire-choiceColumn.html\">choiceColumn</a> extension.   The ValueSet the client is being asked to expand might be an already constrained subset of the codes of the CodeSystem, so in general, even if I had a CodeSystem URI, I could not POST my own ValueSet consisting only of the system and the filters I wanted.</p>\n<p>With this scheme, I would first have to request the ValueSet resource (not expanded), edit it to add filters for matching the user's input to whichever properties were requested (by choiceColumn) and the POST the result back to server with an $expand.  Does that sound correct?  Granted, I would only have to request the ValueSet definition once per ValueSet.</p>\n<p>I think it could work, but it does not seem simple or elegant.</p>",
        "id": 169430012,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1562014111
    },
    {
        "content": "<p>A valueset can depend on another valueset rather than a code system, but that still depends on you being able to create a new valueset (and cleanup after) or submit the whole valueset each time you want to expand (which could be a lot during data entry on an auto complete style field.<br>\nAnd my terminology server does pre expansion, so wouldn't work very well like this.</p>",
        "id": 169436952,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1562020262
    },
    {
        "content": "<p>Apologies if I've missed something here - but it might be helpful to have an example of an underlying code system in this use case. If you are attempting to use filters based on properties, these must belong to a Code System (see ValueSet.compose.filter) and that Code System may have a grammar (e.g. ECL in SNOMED CT) that would enable you to make interactive $expansion requests directly to a Terminology Server without the intermediate step of posting ValueSet definitions.</p>",
        "id": 169437461,
        "sender_full_name": "Peter Jordan",
        "timestamp": 1562020827
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> Thanks-- I had not noticed that a ValueSet could depend on another ValueSet.  That is a much better picture, assuming I can post the new valueset along with the $expand.  Creating it ahead of time and then cleaning up afterward would mean three requests, or a batch of three requests.  I wonder how many terminology servers will have similar problems.</p>",
        "id": 169438332,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1562021710
    },
    {
        "content": "<p>And posting it each time is going to get pretty heavy.</p>",
        "id": 169438564,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1562021890
    },
    {
        "content": "<p>Would mean that simple terminology servers like mine would be out, and depend on pure terminology servers.</p>",
        "id": 169438705,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1562022024
    },
    {
        "content": "<p>The fragment I posted above re-uses the existing bound valueset  (vs1) and adds additional constraints. It depends on the terminology server having access to that valueset, of course.<br>\nThere are performance considerations; POSTs cannot be cached in the HTTP layer, but they can be cached in the terminology server layer (Ontoserevr will do this, for example).</p>",
        "id": 169439226,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1562022483
    },
    {
        "content": "<p>What concerns me more, however, is the use-case.  If the bindings in the Questionnaire are not in your control, then how do you know it is valid to search against additional properties in the Code System(s) of the underlying bound ValueSet?</p>",
        "id": 169439375,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1562022621
    },
    {
        "content": "<p>Picking up on <span class=\"user-mention\" data-user-id=\"191364\">@Peter Jordan</span> s comment, this may be a situation where a general purpose implicit ValueSet syntax akin to SNOMED's ECL may be useful.<br>\nOn the other hand, if its specific to a particular CodeSystem like LOINC and its answersets, then it may be that teh FHIR Spec should define specific searching behaviour beyond the normal defaults</p>",
        "id": 169439599,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1562022823
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> your terminology server could always fall back to an externalised service in such a case.</p>",
        "id": 169441945,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1562025202
    },
    {
        "content": "<p>Whether a grammar would be helpful or not I'm not sure, but the current mechanism for specifying properties to include (for display to the user, and perhaps for the search) is through the <a href=\"http://build.fhir.org/ig/HL7/sdc/extension-sdc-questionnaire-choiceColumn.html\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/sdc/extension-sdc-questionnaire-choiceColumn.html\">choiceColumn</a> extension.  The documentation for that extension is not very helpful, but it is better described on the (SDC rendering page](<a href=\"http://build.fhir.org/ig/HL7/sdc/rendering.html#additional-display-content\" target=\"_blank\" title=\"http://build.fhir.org/ig/HL7/sdc/rendering.html#additional-display-content\">http://build.fhir.org/ig/HL7/sdc/rendering.html#additional-display-content</a>).   There does not seem to be any consideration for hierarchical properties, so I think at this point a grammar is not needed (but the problem will eventually arise).</p>\n<p>Anyway, to answer <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> 's question, the choiceColumn extension is what tells me it is valid (and required) to request those additional properties.  The client does not make up additional properties to search; is comes from the Questionnaire definition.</p>",
        "id": 169485012,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1562077379
    },
    {
        "content": "<p>I see <span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> actually asked about the validity of searching against those properties, not just requesting them.  I think it is generally desirable, in an autocompletion setting, to be searching against any properties that are showing up in the list being shown to the user.  I suppose the client could check the compatibility statement to see what was allowed?  Or maybe it would just try it and fall back to searching in the display value.</p>",
        "id": 169485634,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1562077796
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"191367\">Brian Postlethwaite</span> Thanks-- I had not noticed that a ValueSet could depend on another ValueSet.  That is a much better picture, assuming I can post the new valueset along with the $expand.  Creating it ahead of time and then cleaning up afterward would mean three requests, or a batch of three requests.  I wonder how many terminology servers will have similar problems.</p>\n</blockquote>\n<p>It appears that the \"filter\" is not applicable to valueSet within compose.include?</p>",
        "id": 169713984,
        "sender_full_name": "Xiaocheng Luan",
        "timestamp": 1562337879
    },
    {
        "content": "<p>It should be...</p>",
        "id": 169718730,
        "sender_full_name": "Lloyd McKenzie",
        "timestamp": 1562341921
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"195343\">@Xiaocheng Luan</span>  which filter parameter?</p>",
        "id": 169719165,
        "sender_full_name": "Yunwei Wang",
        "timestamp": 1562342350
    },
    {
        "content": "<blockquote>\n<p><span class=\"user-mention silent\" data-user-id=\"195343\">Xiaocheng Luan</span>  which filter parameter?</p>\n</blockquote>\n<p>Good question - I wasn't clear - I meant the compose.include.filter for the use case/example of creating a ValueSet resource and send to server with the $expand request. But yes, $expand request filter parameter should still work. <span class=\"user-mention\" data-user-id=\"191320\">@Lloyd McKenzie</span></p>",
        "id": 169724258,
        "sender_full_name": "Xiaocheng Luan",
        "timestamp": 1562347862
    },
    {
        "content": "<p>If your <code>compose.include</code> has both a <code>filter</code> and a <code>valueset</code>, then it is asking for the set of concepts that are in the referenced valueset <em>and</em> match the <code>system</code> &amp; <code>filter</code>. That is, the <code>filter</code> further constrains the valueset.</p>",
        "id": 169829546,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1562539555
    },
    {
        "content": "<blockquote>\n<p>Outcomes:</p>\n<ol start=\"2\">\n<li>define a way to put properties in expansions in R5 (match the CodeSystem pattern)</li>\n<li>define an extension to put properties in expansions in R4 (matching the CodeSystem pattern)</li>\n<li>define a way for a client to ask for particular properties in expansions :    property string 0..* a code or a URI for a property that the client wishes to be returned (or *)</li>\n<li>define a way for a value set to specify the default returned properties </li>\n<li>document the use of :in to search by property value</li>\n<li>define a way for a value set to specify the order if filtered based on properties</li>\n</ol>\n</blockquote>\n<p>Where did we get to with defining this in R5, and was there a format for R4 to expose the properties/extensions in the valueset expansion?</p>",
        "id": 177211411,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1570072400
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> , think this is something that could be investigated at your NHS Terminology Connectathon?</p>",
        "id": 177215505,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1570079297
    },
    {
        "content": "<p>I'll try and work on a draft for this next week.</p>",
        "id": 177215510,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1570079321
    },
    {
        "content": "<p>might be time to define a ConceptDefinition data type that is used in both CodeSystem (same as what there is now) and also in ValueSet expansion</p>",
        "id": 177215527,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1570079372
    },
    {
        "content": "<p>Thanks, I'll be happy to do some POC code for it in R4 when you have a technique done.</p>",
        "id": 177219382,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1570085474
    },
    {
        "content": "<p>This topic is something that came up during the 1st day of the connectathon.</p>\n<p>The main requirement articulated was the desire to be able to ask for \"all properties\", e.g., with <code>?property=*</code></p>\n<p>This raises the question of which properties this would automatically include. For example, <code>parent</code> and <code>child</code> (in some cases child could be very large).</p>",
        "id": 177235230,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1570102740
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> Can you elaborate a bit more on the ConceptDefinition data type and how you envision it working?</p>",
        "id": 177235803,
        "sender_full_name": "Rob Hausam",
        "timestamp": 1570103376
    },
    {
        "content": "<p>ConceptDefinition is presently a type defined as part of the CodeSystem resource:</p>",
        "id": 177281330,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1570132716
    },
    {
        "content": "<p>code | display | definition + designation + property</p>",
        "id": 177281454,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1570132793
    },
    {
        "content": "<p>.. nah, the two boolean flags means that a trick that won't work. Will have to clone properties onto the Contains type in value set.</p>",
        "id": 177281663,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1570132855
    },
    {
        "content": "<p>ok I am committing parts 2,4 and 5. part 3 falls out implicitly because of <a href=\"http://build.fhir.org/versions.html#extensions\" target=\"_blank\" title=\"http://build.fhir.org/versions.html#extensions\">http://build.fhir.org/versions.html#extensions</a>. So that leaves 6 and 7. I don't even remember what either of them are in detail</p>",
        "id": 178422597,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1571347168
    },
    {
        "content": "<p>7 I think, was about getting the expansion contents back ordered based on a property value - <span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> ?</p>",
        "id": 178423701,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1571347960
    },
    {
        "content": "<p>well, there could be all sorts of sophistication there... it feels like a whole little language to itself.... But why property based? Wouldn't you want to do it with any intensional value set?</p>\n<p>But why would we standardise this? is there a sweet spot?</p>",
        "id": 178423870,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1571348102
    },
    {
        "content": "<p>6 was about something like <code>code:in=valueset.map(c -&gt; c.property)</code> ie. not matching code against the expansion concepts, but instead against a property of the expansion's concepts</p>",
        "id": 178423892,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1571348121
    },
    {
        "content": "<p>I'm not convinced about 7 -- I suspect most cases could be handled by sorting client-side</p>",
        "id": 178423933,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1571348162
    },
    {
        "content": "<p>both 6 and 7 sound deliciously complicated</p>",
        "id": 178424043,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1571348260
    },
    {
        "content": "<p>indeed. 6 is somewhat related to the desire to match against code translations.<br>\ni.e., say your retrieval valueset <code>vsUri</code> is defined in terms of ICD10 and your data has a mix of ICD10 and SNOMED and you have an appropriate conceptmap <code>cmUri</code> from SNOMED to ICD10.  You want to be able to say something like <code>?code:translate(cmUri):in=vsUri</code></p>",
        "id": 178425528,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1571349465
    },
    {
        "content": "<p>Re 3, this means in R4 we would add (complex) extensions to <code>ValueSet.expansion.contains</code> with the URI <code>http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property</code>?  What are the URI's of the nested pieces?  <code>code</code> and <code>value</code> or <code>http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property.code</code> and <code>http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property.value</code> ?</p>",
        "id": 178426146,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1571349921
    },
    {
        "content": "<p>first, I think - simple because they are part of how the extension is defined. But I'm not sure we discussed that explicitly</p>",
        "id": 178426750,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1571350462
    },
    {
        "content": "<p>one thing that comes out of this... we need revisit our definitions of properties. It's all a bit messed up</p>",
        "id": 178427695,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1571351311
    },
    {
        "content": "<p>How do relative URIs in nested extensions get resolved against the absolute parent URI in an extension.  It doesn't seem to work using normal URI resolution rules because the resolved URI for the inner extension in :</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/patient-citizenship&quot;</span> <span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;code&quot;</span> <span class=\"nt\">&gt;</span>\n    ...\n</pre></div>\n\n\n<p>would be <code>http://hl7.org/fhir/StructureDefinition/code</code> but I strong suspect the intension is that it's something like <code>http://hl7.org/fhir/StructureDefinition/patient-citizenship/code</code></p>",
        "id": 178429147,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1571352774
    },
    {
        "content": "<p>The spec (<a href=\"http://build.fhir.org/versions.html#extensions\" target=\"_blank\" title=\"http://build.fhir.org/versions.html#extensions\">http://build.fhir.org/versions.html#extensions</a>) says this:</p>\n<blockquote>\n<p>Where complex data types have no equivalent in an earlier version, use a complex extension, containing extensions also following this pattern.</p>\n</blockquote>\n<p>Which I can only interpret as requiring use of absolute URIs in the nested extension elements.</p>",
        "id": 178429297,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1571352918
    },
    {
        "content": "<p>yes I guess it does</p>",
        "id": 178438587,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1571366189
    },
    {
        "content": "<p>6 and 7 weren't in my list of what I was after, just the other ones.<br>\nSo if there is something to handle that part, i'm good to go and try things out.</p>",
        "id": 178440411,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1571369258
    },
    {
        "content": "<p>I'm just wrangling with the validator - will be out in the next 24 hours</p>",
        "id": 178440455,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1571369294
    },
    {
        "content": "<p>No stress, thanks.</p>",
        "id": 178440459,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1571369314
    },
    {
        "content": "<p>I'm away that Genomics England have the translate use-case, and it has also come up with UK NHS in the context of maps that deal with code replacement (eg as provided by SNOMED).  But then there's the replacedBy property which is another way of tackling this problem.</p>",
        "id": 178445764,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1571377840
    },
    {
        "content": "<p>so just to be clear about this, some example extensions in R4:</p>\n<div class=\"codehilite\"><pre><span></span>  <span class=\"nt\">&lt;compose&gt;</span>\n    <span class=\"nt\">&lt;include&gt;</span>\n      <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://hl7.org/fhir/CodeSystem/example&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/include&gt;</span>\n    <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.compose.property&quot;</span><span class=\"nt\">&gt;</span>\n      <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;status&quot;</span><span class=\"nt\">/&gt;</span>\n   <span class=\"nt\">&lt;/extension&gt;</span>\n  <span class=\"nt\">&lt;/compose&gt;</span>\n</pre></div>",
        "id": 178467014,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1571400506
    },
    {
        "content": "<p>that's request for a property in the expansion. And then in expansion (in json):</p>",
        "id": 178467039,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1571400544
    },
    {
        "content": "<div class=\"codehilite\"><pre><span></span><span class=\"s2\">&quot;expansion&quot;</span><span class=\"err\">:</span> <span class=\"p\">{</span>\n  <span class=\"nt\">&quot;extension&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n    <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.property&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;extension&quot;</span> <span class=\"p\">:</span> <span class=\"p\">[{</span>\n      <span class=\"nt\">&quot;url&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.property.code&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;valueCode&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;PROPERTY&quot;</span>\n    <span class=\"p\">},{</span>\n      <span class=\"nt\">&quot;url&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.property.uri&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;valueUri&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://loinc.org/property/PROPERTY&quot;</span>\n    <span class=\"p\">}]</span>\n  <span class=\"p\">}],</span>\n  <span class=\"nt\">&quot;contains&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n    <span class=\"nt\">&quot;system&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://loinc.org&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;version&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;2.50&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;code&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;14647-2&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;display&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;Cholesterol [Moles/volume] in Serum or Plasma&quot;</span><span class=\"p\">,</span>\n    <span class=\"nt\">&quot;extension&quot;</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n      <span class=\"nt\">&quot;url&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property&quot;</span><span class=\"p\">,</span>\n      <span class=\"nt\">&quot;extension&quot;</span> <span class=\"p\">:</span> <span class=\"p\">[{</span>\n        <span class=\"nt\">&quot;url&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property.code&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;valueCode&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;PROPERTY&quot;</span>\n      <span class=\"p\">},{</span>\n        <span class=\"nt\">&quot;url&quot;</span> <span class=\"p\">:</span> <span class=\"s2\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property.value[x]&quot;</span><span class=\"p\">,</span>\n        <span class=\"nt\">&quot;valueCode&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;SCnc&quot;</span>\n      <span class=\"p\">}]</span>\n    <span class=\"p\">}]</span>\n  <span class=\"p\">},</span>\n  <span class=\"err\">...</span>\n</pre></div>",
        "id": 178467413,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1571400904
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191316\">@Grahame Grieve</span> I'd like to start on pre-adoption of R5's properties in expansion results, but I'm concerned that <code>5.0</code> is not likely to work and that I may perhaps need to use <code>4.2</code> ?</p>",
        "id": 188350735,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1581910875
    },
    {
        "content": "<p>I</p>",
        "id": 188350787,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581911001
    },
    {
        "content": "<p>I'm not exactly sure what you you are asking there</p>",
        "id": 188350789,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581911010
    },
    {
        "content": "<p>Given that the (pre-)R5 version is 4.2.0, should I be using <code>http://hl7.org/fhir/4.2/StructureDefinition/extension-ValueSet.expansion.contains.property.code</code>?  That is, is there anything in the stack (validation?) that interprets these URIs?</p>",
        "id": 188408946,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1581976430
    },
    {
        "content": "<p>no. R5 extensions are not in the validator framework right now</p>",
        "id": 188412872,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581981895
    },
    {
        "content": "<p>by any version</p>",
        "id": 188412879,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1581981903
    },
    {
        "content": "<p><span class=\"user-mention silent\" data-user-id=\"191367\">Brian Postlethwaite</span> <a href=\"#narrow/stream/179202-terminology/topic/Extensions.20vs.20properties/near/177211411\">said</a>:</p>\n<blockquote>\n<blockquote>\n<p>Outcomes:</p>\n<ol start=\"2\">\n<li>define a way to put properties in expansions in R5 (match the CodeSystem pattern)</li>\n<li>define an extension to put properties in expansions in R4 (matching the CodeSystem pattern)</li>\n<li>define a way for a client to ask for particular properties in expansions :    property string 0..* a code or a URI for a property that the client wishes to be returned (or *)</li>\n<li>define a way for a value set to specify the default returned properties </li>\n<li>document the use of :in to search by property value</li>\n<li>define a way for a value set to specify the order if filtered based on properties</li>\n</ol>\n</blockquote>\n<p>Where did we get to with defining this in R5, and was there a format for R4 to expose the properties/extensions in the valueset expansion?</p>\n</blockquote>\n<p>Are there tracker items for these things?  I am just wondering whether this exists somewhere outside this thread, so it doesn't get lost.</p>",
        "id": 208405464,
        "sender_full_name": "Paul Lynch",
        "timestamp": 1598657551
    },
    {
        "content": "<p>And can we add it to the connectathon stream for R4?</p>",
        "id": 208620582,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1598911163
    },
    {
        "content": "<p>Hey all, going to do some testing on this, did an implementation of the back-port (expansion results) and wanted to run it past folks.</p>",
        "id": 209688039,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1599762084
    },
    {
        "content": "<p>ok</p>",
        "id": 209689412,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599762692
    },
    {
        "content": "<p>How does this look to represent the contains property in the returned results in R4?<br>\nBased on the def from <a href=\"http://build.fhir.org/valueset.html\">http://build.fhir.org/valueset.html</a></p>\n<div class=\"codehilite\"><pre><span></span><code>  &lt;expansion&gt;\n    &lt;contains&gt;\n      &lt;extension url=&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property&quot;&gt;\n        &lt;extension url=&quot;code&quot;&gt;\n          &lt;valueCode value=&quot;custom-code-prop&quot; /&gt;\n        &lt;/extension&gt;\n        &lt;extension url=&quot;value&quot;&gt; &lt;!-- or should this be value[x]--&gt;\n          &lt;valueString value=&quot;custom-code-value&quot; /&gt;\n        &lt;/extension&gt;\n      &lt;/extension&gt;\n      &lt;system value=&quot;urn:ietf:bcp:47&quot; /&gt;\n      &lt;code value=&quot;de-AT&quot; /&gt;\n      &lt;display value=&quot;German (Austria)&quot; /&gt;\n    &lt;/contains&gt;\n    &lt;contains&gt;\n      &lt;system value=&quot;urn:ietf:bcp:47&quot; /&gt;\n      &lt;code value=&quot;de-CH&quot; /&gt;\n      &lt;display value=&quot;German (Switzerland)&quot; /&gt;\n    &lt;/contains&gt;\n</code></pre></div>",
        "id": 209700190,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1599767433
    },
    {
        "content": "<p>Sorry, just updated based on notes further up that I'd missed.<br>\nany reason why using the full URLs and not just simple values (as in with a complex extension?)</p>",
        "id": 209701003,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1599767796
    },
    {
        "content": "<p>And I don't see any changes to the R4 expand operation to ask for them either?<br>\nDo we actually need to compose another valueset that expands the existing valueset and indicate that you want the properties back, and post that?</p>",
        "id": 209701818,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1599768161
    },
    {
        "content": "<p>no we would just pre-adopt R5 parameters in R4</p>",
        "id": 209701893,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599768201
    },
    {
        "content": "<p>Sorry, missed the <code>property</code> parameter. My mistake.</p>",
        "id": 209702050,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1599768280
    },
    {
        "content": "<p>On that backbone element child property extension URLs, any reason for the full name and not just the short one within the context of the fully described parent?<br>\nie. <code>http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property.code</code> and not just <code>code</code></p>",
        "id": 209702243,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1599768364
    },
    {
        "content": "<blockquote>\n<p>or should this be value[x]</p>\n</blockquote>\n<p>yes</p>",
        "id": 209702251,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599768367
    },
    {
        "content": "<p>no. it's worse.</p>",
        "id": 209702401,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599768451
    },
    {
        "content": "<p>value_x_</p>",
        "id": 209702420,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599768459
    },
    {
        "content": "<p>This is where I should be looking right?<br>\n<a href=\"http://build.fhir.org/versions.html#extensions\">http://build.fhir.org/versions.html#extensions</a><br>\nThere is nothing in there on backbone elements, nor value[x]</p>",
        "id": 209702634,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1599768575
    },
    {
        "content": "<p>well, there is by implication on the second:</p>",
        "id": 209702658,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599768591
    },
    {
        "content": "<blockquote>\n<p>The [Path] is actually the <a href=\"http://ElementDefinition.id\">ElementDefinition.id</a> from the relevant StructureDefinition for the element</p>\n</blockquote>",
        "id": 209702737,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599768626
    },
    {
        "content": "<p>Agree that there's nothing about backbone elements, to my surprise. Agree that the way you've done it is right.</p>",
        "id": 209702813,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599768669
    },
    {
        "content": "<p>would be good to make a task on both these - to point out how value[x[ works, and to agree about backbone elemnets</p>",
        "id": 209703043,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599768779
    },
    {
        "content": "<p>Will do, I'm looking to try and find where the value_x_ for <a href=\"http://elementdef.id\">elementdef.id</a> is documented</p>",
        "id": 209703086,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1599768810
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191343\">@Michael Lawley</span> , did this ever make it into your R4 builds yet?</p>",
        "id": 209703836,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1599769226
    },
    {
        "content": "<p>you have to look inside the structure definition itself</p>",
        "id": 209705296,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599770003
    },
    {
        "content": "<p><a href=\"http://jira.hl7.org/browse/FHIR-28479\">J#28479</a></p>",
        "id": 209707721,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1599771272
    },
    {
        "content": "<p>As I read the spec, the reason for full URIs is that this:</p>\n<blockquote>\n<p>any element defined in any version of FHIR is automatically assigned an extension URL that uniquely identifies the element</p>\n</blockquote>\n<p>So <code>code</code> and <code>value[x]</code> have their own URIs:</p>\n<ul>\n<li><code>http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property.code</code></li>\n<li><code>http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property.value_x_</code></li>\n</ul>\n<p>AFAICT, this is not the same as having a complex extension defined and then being able to use child extension references.</p>",
        "id": 209717628,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1599776963
    },
    {
        "content": "<p>I don't know if there's any infrastructure code that will take, for example, an R5 ValueSet and transform it to the R4 version with extensions?</p>",
        "id": 209718408,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1599777570
    },
    {
        "content": "<p>I'm not sure that we have real clarity here, which is one reason why we haven't merged expansion properties into the Ontoserver dev build yet.<br>\nHowever, if <a href=\"http://jira.hl7.org/browse/FHIR-28479\">J#28479</a> is likely to be accepted as proposed, then I'd be comfortable to bring it in, although the window for the next release is rapidly closing.</p>",
        "id": 209718538,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1599777636
    },
    {
        "content": "<p>I'm going to draft this into my server today to try it out with some questionnaire stuff we're doing.</p>",
        "id": 209725413,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1599783429
    },
    {
        "content": "<p>Have implemented and deployed this into my server now too.</p>",
        "id": 209742243,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1599802208
    },
    {
        "content": "<p><span class=\"user-mention\" data-user-id=\"191367\">@Brian Postlethwaite</span> IF this is working on your server, any chance you have rxnorm installed with all it's properties? And I can access it?</p>",
        "id": 209896793,
        "sender_full_name": "Robert McClure",
        "timestamp": 1599939805
    },
    {
        "content": "<p>My server isn't anywhere near that complex. Just simple stuff manually loaded in via fhir.</p>",
        "id": 209897978,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1599941684
    },
    {
        "content": "<p>what properties would you care about for RxNorm?</p>",
        "id": 209923922,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1599992417
    },
    {
        "content": "<p>Now that I've done it, this same extension structure could be used on a coding too.<br>\nI'm looking for a way to reference the property in a questionnaire without hitting the terminology server again.<br>\nSome notes on the connectathon report out. Will follow up again later.<br>\n<a href=\"https://confluence.hl7.org/pages/viewpage.action?pageId=86974609#id-202009Questionnaire-Notableachievements\">https://confluence.hl7.org/pages/viewpage.action?pageId=86974609#id-202009Questionnaire-Notableachievements</a>:</p>",
        "id": 209950598,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1600033022
    },
    {
        "content": "<p>well, not so easy, because the code is relative to the definition of it.</p>",
        "id": 209952095,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600035461
    },
    {
        "content": "<p>Since this is probably what people might find later if searching here for it, you should also include the valueset.expansion.property in the extensions too ensuring that the declaration of what properties were asked for and included in the output explicitly.<br>\nHere is an example of it<br>\n<a href=\"https://sqlonfhir-r4.azurewebsites.net/fhir/ValueSet/45/$expand?property=s-val\">https://sqlonfhir-r4.azurewebsites.net/fhir/ValueSet/45/$expand?property=s-val</a></p>",
        "id": 209969224,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1600065402
    },
    {
        "content": "<p>Hmm, I ended up with the following for <code>ValueSet/$expand?url=http://snomed.info/sct?fhir_vs=ecl/&gt;&gt;33015000&amp;property=moduleId&amp;property=effectiveTime&amp;property=parent</code> (which is different):</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nt\">&lt;ValueSet</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://hl7.org/fhir&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;language</span> <span class=\"na\">value=</span><span class=\"s\">&quot;en&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;url</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://snomed.info/sct/32506021000036107/version/20200531?fhir_vs=ecl%2F%3E%3E33015000&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;name</span> <span class=\"na\">value=</span><span class=\"s\">&quot;SNOMED CT ECL expression&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;status</span> <span class=\"na\">value=</span><span class=\"s\">&quot;active&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;experimental</span> <span class=\"na\">value=</span><span class=\"s\">&quot;false&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;copyright</span> <span class=\"na\">value=</span><span class=\"s\">&quot;This value set includes content from SNOMED CT, which is copyright © 2002+ International Health Terminology Standards Development Organisation (IHTSDO), and distributed by agreement between IHTSDO and HL7. Implementer use of SNOMED CT is not covered by this agreement&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;expansion&gt;</span>\n        <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/valueset-unclosed&quot;</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;valueBoolean</span> <span class=\"na\">value=</span><span class=\"s\">&quot;true&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/extension&gt;</span>\n        <span class=\"nt\">&lt;identifier</span> <span class=\"na\">value=</span><span class=\"s\">&quot;9811e09e-d2f7-4b61-b8d5-51d0343f3750&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;timestamp</span> <span class=\"na\">value=</span><span class=\"s\">&quot;2020-09-14T19:54:29+10:00&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;total</span> <span class=\"na\">value=</span><span class=\"s\">&quot;54&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;offset</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;parameter&gt;</span>\n            <span class=\"nt\">&lt;name</span> <span class=\"na\">value=</span><span class=\"s\">&quot;version&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;valueUri</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://snomed.info/sct|http://snomed.info/sct/32506021000036107/version/20200531&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/parameter&gt;</span>\n        <span class=\"nt\">&lt;parameter&gt;</span>\n            <span class=\"nt\">&lt;name</span> <span class=\"na\">value=</span><span class=\"s\">&quot;count&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;valueInteger</span> <span class=\"na\">value=</span><span class=\"s\">&quot;2147483647&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/parameter&gt;</span>\n        <span class=\"nt\">&lt;parameter&gt;</span>\n            <span class=\"nt\">&lt;name</span> <span class=\"na\">value=</span><span class=\"s\">&quot;offset&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;valueInteger</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/parameter&gt;</span>\n        <span class=\"nt\">&lt;contains&gt;</span>\n            <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;parent&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;108191006&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;parent&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;118869008&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;parent&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;83607001&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;parent&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;120200004&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;effectiveTime&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;20020131&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;moduleId&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;900000000000207008&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://snomed.info/sct&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;120058006&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;display</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Fallopian tube endoscopy&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/contains&gt;</span>\n        <span class=\"nt\">&lt;contains&gt;</span>\n            <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;parent&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;108193009&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;parent&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;392250009&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;parent&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;45835000&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;parent&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;363068004&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;parent&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;128422009&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;effectiveTime&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;20110131&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;moduleId&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;900000000000207008&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://snomed.info/sct&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;447192001&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;display</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Electrodestruction of fallopian tube&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/contains&gt;</span>\n</code></pre></div>",
        "id": 209984279,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1600077496
    },
    {
        "content": "<p>There is no property parent on that backbone element.</p>",
        "id": 209987380,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1600079799
    },
    {
        "content": "<p><code>parent</code> in your example here is a code value in the <code>code</code> child complex extension, the value Code value is to the <code>value_x_</code> extension</p>",
        "id": 209987575,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1600079937
    },
    {
        "content": "<p>And it's missing the property child directly under expansion which lists the code to Uri for the properties included.</p>",
        "id": 209987712,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1600080029
    },
    {
        "content": "<p>ah, of course, now I get the model - thanks!</p>",
        "id": 209988093,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1600080268
    },
    {
        "content": "<p>Can you see the example from my server for comparison?</p>",
        "id": 209988196,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1600080336
    },
    {
        "content": "<p>So this is what I have now:</p>\n<div class=\"codehilite\"><pre><span></span><code><span class=\"nt\">&lt;ValueSet</span> <span class=\"na\">xmlns=</span><span class=\"s\">&quot;http://hl7.org/fhir&quot;</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;language</span> <span class=\"na\">value=</span><span class=\"s\">&quot;en&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;url</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://snomed.info/sct/32506021000036107/version/20200531?fhir_vs=ecl%2F%3E%3E33015000&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;name</span> <span class=\"na\">value=</span><span class=\"s\">&quot;SNOMED CT ECL expression&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;status</span> <span class=\"na\">value=</span><span class=\"s\">&quot;active&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;experimental</span> <span class=\"na\">value=</span><span class=\"s\">&quot;false&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;copyright</span> <span class=\"na\">value=</span><span class=\"s\">&quot;This value set includes content from SNOMED CT, which is copyright © 2002+ International Health Terminology Standards Development Organisation (IHTSDO), and distributed by agreement between IHTSDO and HL7. Implementer use of SNOMED CT is not covered by this agreement&quot;</span><span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;expansion&gt;</span>\n        <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/StructureDefinition/valueset-unclosed&quot;</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;valueBoolean</span> <span class=\"na\">value=</span><span class=\"s\">&quot;true&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/extension&gt;</span>\n        <span class=\"nt\">&lt;identifier</span> <span class=\"na\">value=</span><span class=\"s\">&quot;b41ab029-ac70-41f2-919a-35993e46b1af&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;timestamp</span> <span class=\"na\">value=</span><span class=\"s\">&quot;2020-09-14T21:19:09+10:00&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;total</span> <span class=\"na\">value=</span><span class=\"s\">&quot;54&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;offset</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;parameter&gt;</span>\n            <span class=\"nt\">&lt;name</span> <span class=\"na\">value=</span><span class=\"s\">&quot;version&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;valueUri</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://snomed.info/sct|http://snomed.info/sct/32506021000036107/version/20200531&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/parameter&gt;</span>\n        <span class=\"nt\">&lt;parameter&gt;</span>\n            <span class=\"nt\">&lt;name</span> <span class=\"na\">value=</span><span class=\"s\">&quot;count&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;valueInteger</span> <span class=\"na\">value=</span><span class=\"s\">&quot;2&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/parameter&gt;</span>\n        <span class=\"nt\">&lt;parameter&gt;</span>\n            <span class=\"nt\">&lt;name</span> <span class=\"na\">value=</span><span class=\"s\">&quot;offset&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;valueInteger</span> <span class=\"na\">value=</span><span class=\"s\">&quot;0&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/parameter&gt;</span>\n        <span class=\"nt\">&lt;contains&gt;</span>\n            <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;code&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;parent&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;value_x_&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;108191006&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;code&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;parent&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;value_x_&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;118869008&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;code&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;parent&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;value_x_&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;83607001&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;code&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;parent&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;value_x_&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;120200004&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;code&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;effectiveTime&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;value_x_&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;20020131&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;code&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;moduleId&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;value_x_&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;900000000000207008&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://snomed.info/sct&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;120058006&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;display</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Fallopian tube endoscopy&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/contains&gt;</span>\n        <span class=\"nt\">&lt;contains&gt;</span>\n            <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;code&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;parent&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;value_x_&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;108193009&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;code&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;parent&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;value_x_&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;392250009&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;code&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;parent&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;value_x_&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;45835000&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;code&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;parent&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;value_x_&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;363068004&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;code&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;parent&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;value_x_&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;128422009&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;code&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;effectiveTime&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;value_x_&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;20110131&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;http://hl7.org/fhir/5.0/StructureDefinition/extension-ValueSet.expansion.contains.property&quot;</span><span class=\"nt\">&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;code&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueCode</span> <span class=\"na\">value=</span><span class=\"s\">&quot;moduleId&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n                <span class=\"nt\">&lt;extension</span> <span class=\"na\">url=</span><span class=\"s\">&quot;value_x_&quot;</span><span class=\"nt\">&gt;</span>\n                    <span class=\"nt\">&lt;valueString</span> <span class=\"na\">value=</span><span class=\"s\">&quot;900000000000207008&quot;</span><span class=\"nt\">/&gt;</span>\n                <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;/extension&gt;</span>\n            <span class=\"nt\">&lt;system</span> <span class=\"na\">value=</span><span class=\"s\">&quot;http://snomed.info/sct&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;code</span> <span class=\"na\">value=</span><span class=\"s\">&quot;447192001&quot;</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;display</span> <span class=\"na\">value=</span><span class=\"s\">&quot;Electrodestruction of fallopian tube&quot;</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/contains&gt;</span>\n    <span class=\"nt\">&lt;/expansion&gt;</span>\n<span class=\"nt\">&lt;/ValueSet&gt;</span>\n</code></pre></div>",
        "id": 209989563,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1600081279
    },
    {
        "content": "<p>That's extensive <span aria-label=\"laughing\" class=\"emoji emoji-1f606\" role=\"img\" title=\"laughing\">:laughing:</span></p>",
        "id": 209990028,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1600081554
    },
    {
        "content": "<p>WIP -- I posted then noticed a bug! - no way to delete the message AFAICT</p>",
        "id": 209990121,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1600081586
    },
    {
        "content": "<p>how's that?</p>",
        "id": 209991316,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1600082411
    },
    {
        "content": "<p>That's good, and to complete just needs the extension for the <code>valueset.expansion.property</code> to declare the full Uri for the property codes from the CodeSystem and its the same as what I've done.</p>",
        "id": 210066890,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1600119704
    },
    {
        "content": "<p>Hmm, interesting.  Why do properties get re-declared in the expansion?</p>",
        "id": 210072103,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1600123904
    },
    {
        "content": "<p>Isn't that to provide what the canonical URI is for the code declaration is that is in the concepts in the expansion?</p>",
        "id": 210077536,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1600128307
    },
    {
        "content": "<p>(It's in the R5 valueset definition)</p>",
        "id": 210077565,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1600128338
    },
    {
        "content": "<p>I see it in the R5 definition, but doesn't this duplicate the declaration from the CodeSystem?</p>",
        "id": 210077795,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1600128509
    },
    {
        "content": "<p>it's not the code system</p>",
        "id": 210077823,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600128540
    },
    {
        "content": "<p>Sure, but the CodeSystem already includes this information (and presumably it is the actual source of it).  I'm wondering what the need is to replicate it?</p>",
        "id": 210077936,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1600128645
    },
    {
        "content": "<p>we didn't - and couldn't - make a rule that the code must match</p>",
        "id": 210077947,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600128662
    },
    {
        "content": "<p>meaning that the CS make declare <code>http://example.com/prop/foo</code> and <code>foo</code> but the VS expansion may have <code>http://example.com/prop/foo</code> and <code>bar</code> ?</p>",
        "id": 210078047,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1600128750
    },
    {
        "content": "<p>it could. yes.</p>",
        "id": 210078061,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600128765
    },
    {
        "content": "<p>So all clients need to reconcile the actual property code back to the property URI?<br>\nWhen is this needed? (for the VS to use different property codes to the CS?)</p>",
        "id": 210078183,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1600128897
    },
    {
        "content": "<p>because an expansion can cover multiple code systems, and the code systems could define clashing property codes (which is why they also define URIs)</p>",
        "id": 210078536,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600129248
    },
    {
        "content": "<p>But...you know which system any given concept is from, so the property code is always relative to that system</p>",
        "id": 210084394,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1600136053
    },
    {
        "content": "<p>that's true</p>",
        "id": 210084403,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600136077
    },
    {
        "content": "<p>so you're effectively proposing that we should say that properties in expansions always SHALL use the code defined for the property in the code system, and the property code in the expansion is scoped by the system</p>",
        "id": 210084512,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600136278
    },
    {
        "content": "<p>yes, very much so.  otherwise you're pushing significant additional complexity onto clients</p>",
        "id": 210084767,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1600136705
    },
    {
        "content": "<p>I don't know that we are. We're just moving the resolution to URI from the expansion to the code system.</p>",
        "id": 210084938,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600136986
    },
    {
        "content": "<p>and forcing the lookup back to the codesystem too by the client as a seperate action.</p>",
        "id": 210085220,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1600137396
    },
    {
        "content": "<p>If it's fixed in the CodeSystem, then clients can make assumptions.  If it can be varied in the ValueSet, then clients cannot make assumptions.</p>",
        "id": 210085313,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1600137532
    },
    {
        "content": "<p>I think that's over stating it. Under the current system, it's tied to the uri defined in the code system. Michael proposes to change that being tied to the code in the code system. I'm not seeing a very significant change here</p>",
        "id": 210085667,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600137980
    },
    {
        "content": "<p>It's stating that the property URI is meaningless then?</p>",
        "id": 210087969,
        "sender_full_name": "Brian Postlethwaite",
        "timestamp": 1600141633
    },
    {
        "content": "<p>I don't think that's the  case; It's still meaningful in other ways even if it's not directly implicated here</p>",
        "id": 210088088,
        "sender_full_name": "Grahame Grieve",
        "timestamp": 1600141807
    },
    {
        "content": "<p>My concern is whether a client can assume that the property code <code>moduleId</code> in a VS expansion on a SNOMED concept corresponds to the <code>moduleId</code> code as defined for SNOMED.  Instead, it needs to check that the associated URI listed in the VS expansion corresponds to that listed in the CS.</p>",
        "id": 210094190,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1600151177
    },
    {
        "content": "<p>I note that a <code>$lookup</code> doesn't give you back the property-code -&gt; URI mapping</p>",
        "id": 210094282,
        "sender_full_name": "Michael Lawley",
        "timestamp": 1600151296
    }
]